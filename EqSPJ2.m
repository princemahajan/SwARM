%% EqSPZonal
%     Desc: Computes 2nd order Short-period effects for Jn (n >= 3) for Equinoctial elements.
%     Equinoctial elements: [a l+g+h tan(i/2)*cos(h) tan(i/2)*sin(h) e*cos(g+h) e*sin(g+h)];
% Reference: 
% B. Mahajan, S. R. Vadali and K. T. Alfriend, Analytic Solution For Satellite 
% Relative Motion: The Complete Zonal Gravitational Problem, 26th AAS/AIAA 
% Space Flight Mechanics Meeting, Napa, CA, February 2016.
%
% Author: Bharat Mahajan (https://github.com/princemahajan)


function [EqSP, Dsp] = EqSPJ2(Xm,mu,Re,J2, InverseOn,JacobianOn,tol) 

O2Msign = 1;
if InverseOn == true
	O2Msign = -1;
end


a = Xm(1); Lambda = Xm(2); p1 = Xm(3); p2 = Xm(4); q1 = Xm(5); q2 = Xm(6);
DelXm = Del2Eqn(Xm,mu,true);
 
l = DelXm(1); g = DelXm(2); h = DelXm(3);L = DelXm(4);G =DelXm(5); H= DelXm(6);

% intermediate quantities
e = sqrt(q1^2 + q2^2);
eta = sqrt(1 - e^2);
i = 2*atan(sqrt(p1^2 + p2^2));
si = sin(i); 
ci = cos(i);
ch = cos(h); 
sh = sin(h);
si2 = sin(i/2);
ci2 = cos(i/2);

J = J2;
R__e = Re;

Psi = Mean2TrueLong(Lambda, q1, q2, tol);
lop = mod(atan2(q2,q1),2*pi); 
f = Psi - lop;

Delta = atan((tan(Psi)-tan(Lambda))/(1+tan(Psi)*tan(Lambda))); 

psi = Psi;


% J2 Equinoctial First Order Short-Period Effects (Using Maple)
sp111 = (-0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (6 * ci2 ^ 4 * eta ^ 2 - 30 * ci2 ^ 4 - 6 * ci2 ^ 2 * eta ^ 2 + 30 * ci2 ^ 2 + eta ^ 2 - 5) / L ^ 2 / (eta ^ 6) * cos(f) + (-18 * ci2 ^ 4 * eta ^ 2 + 18 * ci2 ^ 4 + 18 * ci2 ^ 2 * eta ^ 2 - 18 * ci2 ^ 2 - 3 * eta ^ 2 + 3) / L ^ 2 / (eta ^ 6) * cos(0.2e1 * f) / 0.2e1 - sqrt((-eta ^ 2 + 1)) * (6 * ci2 ^ 4 * eta ^ 2 - 6 * ci2 ^ 4 - 6 * ci2 ^ 2 * eta ^ 2 + 6 * ci2 ^ 2 + eta ^ 2 - 1) / L ^ 2 / (eta ^ 6) * cos(0.3e1 * f) / 0.4e1 + (-12 * ci2 ^ 4 * eta ^ 3 - 18 * ci2 ^ 4 * eta ^ 2 + 12 * ci2 ^ 2 * eta ^ 3 + 30 * ci2 ^ 4 + 18 * ci2 ^ 2 * eta ^ 2 - 2 * eta ^ 3 - 30 * ci2 ^ 2 - 3 * eta ^ 2 + 5) / L ^ 2 / (eta ^ 6) / 0.2e1) * J * R__e ^ 2 * mu;
sp112 = (0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (6 * eta ^ 2 * si2 ^ 4 + 40 * eta * si2 ^ 4 - 6 * eta ^ 2 * si2 ^ 2 + 58 * si2 ^ 4 - 32 * eta * si2 ^ 2 + eta ^ 2 - 50 * si2 ^ 2 + 4 * eta + 7) / (1 + eta) / L ^ 4 / (eta ^ 4) * sin(f) + (-18 * eta * si2 ^ 4 + 18 * si2 ^ 4 + 18 * eta * si2 ^ 2 - 18 * si2 ^ 2 - 3 * eta + 3) / L ^ 4 / (eta ^ 4) * sin(0.2e1 * f) / 0.4e1 - sqrt((-eta ^ 2 + 1)) * (6 * eta * si2 ^ 4 - 6 * si2 ^ 4 - 6 * eta * si2 ^ 2 + 6 * si2 ^ 2 + eta - 1) / L ^ 4 / (eta ^ 4) * sin(0.3e1 * f) / 0.8e1 + 0.3e1 / 0.2e1 * Delta * (10 * si2 ^ 4 - 8 * si2 ^ 2 + 1) / L ^ 4 / (eta ^ 4)) * J * R__e ^ 2 * mu ^ 2;
sp113 = (0.3e1 / 0.2e1 * si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh * sin(f) + 0.3e1 / 0.2e1 * si2 * Delta * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh) * J * R__e ^ 2 * mu ^ 2;
sp114 = (-0.3e1 / 0.2e1 * si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch * sin(f) - 0.3e1 / 0.2e1 * si2 * Delta * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch) * J * R__e ^ 2 * mu ^ 2;
sp115 = ((sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 4 * eta ^ 2 + 30 * ci2 ^ 4 * eta + 30 * ci2 ^ 4 - 12 * ci2 ^ 2 * eta ^ 2 - 30 * ci2 ^ 2 * eta - 30 * ci2 ^ 2 + 2 * eta ^ 2 + 5 * eta + 5) / (1 + eta) / L ^ 4 / (eta ^ 4) * ch / 0.4e1 - 0.3e1 / 0.2e1 * sqrt((-eta ^ 2 + 1)) * (10 * ci2 ^ 4 - 12 * ci2 ^ 2 + 3) * Delta / L ^ 4 / (eta ^ 4) * sh) * cos(g) + (42 * ci2 ^ 4 * eta ^ 2 - 42 * ci2 ^ 4 - 54 * ci2 ^ 2 * eta ^ 2 + 54 * ci2 ^ 2 + 15 * eta ^ 2 - 15) / L ^ 4 / (eta ^ 4) * ch * cos(f - g) / 0.8e1 + (-30 * ci2 ^ 4 * eta ^ 2 + 66 * ci2 ^ 4 + 36 * ci2 ^ 2 * eta ^ 2 - 72 * ci2 ^ 2 - 9 * eta ^ 2 + 15) / L ^ 4 / (eta ^ 4) * ch * cos(f + g) / 0.4e1 + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (6 * ci2 ^ 4 - 6 * ci2 ^ 2 + 1) / L ^ 4 / (eta ^ 4) * ch * cos(g + 0.2e1 * f) + (-6 * ci2 ^ 4 * eta ^ 2 + 6 * ci2 ^ 4 + 6 * ci2 ^ 2 * eta ^ 2 - 6 * ci2 ^ 2 - eta ^ 2 + 1) / L ^ 4 / (eta ^ 4) * ch * cos(g + 0.3e1 * f) / 0.8e1 + (-0.3e1 / 0.2e1 * sqrt((-eta ^ 2 + 1)) * (10 * ci2 ^ 4 - 12 * ci2 ^ 2 + 3) * Delta / L ^ 4 / (eta ^ 4) * ch - sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 4 * eta ^ 2 + 30 * ci2 ^ 4 * eta + 30 * ci2 ^ 4 - 12 * ci2 ^ 2 * eta ^ 2 - 30 * ci2 ^ 2 * eta - 30 * ci2 ^ 2 + 2 * eta ^ 2 + 5 * eta + 5) / (1 + eta) / L ^ 4 / (eta ^ 4) * sh / 0.4e1) * sin(g) + (42 * ci2 ^ 4 * eta ^ 2 - 42 * ci2 ^ 4 - 54 * ci2 ^ 2 * eta ^ 2 + 54 * ci2 ^ 2 + 15 * eta ^ 2 - 15) / L ^ 4 / (eta ^ 4) * sh * sin(f - g) / 0.8e1 + (30 * ci2 ^ 4 * eta ^ 2 - 66 * ci2 ^ 4 - 36 * ci2 ^ 2 * eta ^ 2 + 72 * ci2 ^ 2 + 9 * eta ^ 2 - 15) / L ^ 4 / (eta ^ 4) * sh * sin(f + g) / 0.4e1 - 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (6 * ci2 ^ 4 - 6 * ci2 ^ 2 + 1) / L ^ 4 / (eta ^ 4) * sh * sin(g + 0.2e1 * f) + (6 * ci2 ^ 4 * eta ^ 2 - 6 * ci2 ^ 4 - 6 * ci2 ^ 2 * eta ^ 2 + 6 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * sh * sin(g + 0.3e1 * f) / 0.8e1) * J * R__e ^ 2 * mu ^ 2;
sp116 = ((0.3e1 / 0.2e1 * sqrt((-eta ^ 2 + 1)) * (10 * ci2 ^ 4 - 12 * ci2 ^ 2 + 3) * Delta / L ^ 4 / (eta ^ 4) * ch + sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 4 * eta ^ 2 + 30 * ci2 ^ 4 * eta + 30 * ci2 ^ 4 - 12 * ci2 ^ 2 * eta ^ 2 - 30 * ci2 ^ 2 * eta - 30 * ci2 ^ 2 + 2 * eta ^ 2 + 5 * eta + 5) / (1 + eta) / L ^ 4 / (eta ^ 4) * sh / 0.4e1) * cos(g) + (42 * ci2 ^ 4 * eta ^ 2 - 42 * ci2 ^ 4 - 54 * ci2 ^ 2 * eta ^ 2 + 54 * ci2 ^ 2 + 15 * eta ^ 2 - 15) / (eta ^ 4) / L ^ 4 * sh * cos(f - g) / 0.8e1 + (-30 * ci2 ^ 4 * eta ^ 2 + 66 * ci2 ^ 4 + 36 * ci2 ^ 2 * eta ^ 2 - 72 * ci2 ^ 2 - 9 * eta ^ 2 + 15) / (eta ^ 4) / L ^ 4 * sh * cos(f + g) / 0.4e1 + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (6 * ci2 ^ 4 - 6 * ci2 ^ 2 + 1) / (eta ^ 4) / L ^ 4 * sh * cos(g + 0.2e1 * f) + (-6 * ci2 ^ 4 * eta ^ 2 + 6 * ci2 ^ 4 + 6 * ci2 ^ 2 * eta ^ 2 - 6 * ci2 ^ 2 - eta ^ 2 + 1) / (eta ^ 4) / L ^ 4 * sh * cos(g + 0.3e1 * f) / 0.8e1 + (sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 4 * eta ^ 2 + 30 * ci2 ^ 4 * eta + 30 * ci2 ^ 4 - 12 * ci2 ^ 2 * eta ^ 2 - 30 * ci2 ^ 2 * eta - 30 * ci2 ^ 2 + 2 * eta ^ 2 + 5 * eta + 5) / (1 + eta) / L ^ 4 / (eta ^ 4) * ch / 0.4e1 - 0.3e1 / 0.2e1 * sqrt((-eta ^ 2 + 1)) * (10 * ci2 ^ 4 - 12 * ci2 ^ 2 + 3) * Delta / L ^ 4 / (eta ^ 4) * sh) * sin(g) + (-42 * ci2 ^ 4 * eta ^ 2 + 42 * ci2 ^ 4 + 54 * ci2 ^ 2 * eta ^ 2 - 54 * ci2 ^ 2 - 15 * eta ^ 2 + 15) / (eta ^ 4) / L ^ 4 * ch * sin(f - g) / 0.8e1 + (-30 * ci2 ^ 4 * eta ^ 2 + 66 * ci2 ^ 4 + 36 * ci2 ^ 2 * eta ^ 2 - 72 * ci2 ^ 2 - 9 * eta ^ 2 + 15) / (eta ^ 4) / L ^ 4 * ch * sin(f + g) / 0.4e1 + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (6 * ci2 ^ 4 - 6 * ci2 ^ 2 + 1) / (eta ^ 4) / L ^ 4 * ch * sin(g + 0.2e1 * f) + (-6 * ci2 ^ 4 * eta ^ 2 + 6 * ci2 ^ 4 + 6 * ci2 ^ 2 * eta ^ 2 - 6 * ci2 ^ 2 - eta ^ 2 + 1) / (eta ^ 4) / L ^ 4 * ch * sin(g + 0.3e1 * f) / 0.8e1) * J * R__e ^ 2 * mu ^ 2;

sp121 = (-0.9e1 / 0.2e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / L ^ 2 / (eta ^ 6) * cos((2 * g)) - 0.9e1 / 0.4e1 * si2 ^ 2 * ci2 ^ 2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) / L ^ 2 / (eta ^ 6) * cos((f + 2 * g)) - 0.9e1 / 0.4e1 * si2 ^ 2 * ci2 ^ 2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) / L ^ 2 / (eta ^ 6) * cos((3 * f + 2 * g)) - 0.3e1 / 0.4e1 * si2 ^ 2 * ci2 ^ 2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 1) / L ^ 2 / (eta ^ 6) * cos((5 * f + 2 * g)) - 0.3e1 / 0.4e1 * si2 ^ 2 * ci2 ^ 2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 1) / L ^ 2 / (eta ^ 6) * cos((-2 * g + f)) - 0.3e1 * si2 ^ 2 * ci2 ^ 2 * (3 * eta ^ 2 - 5) / L ^ 2 / (eta ^ 6) * cos((2 * g + 2 * f)) - 0.9e1 / 0.2e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / L ^ 2 / (eta ^ 6) * cos((2 * g + 4 * f))) * J * R__e ^ 2 * mu;
sp122 = (0.9e1 / 0.4e1 * si2 ^ 2 * ci2 ^ 2 * (eta - 1) / L ^ 4 / (eta ^ 4) * sin((2 * g)) + 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (0.5e1 * ci2 ^ 2 * (eta ^ 2) + 0.20e2 * ci2 ^ 2 * eta + 0.11e2 * ci2 ^ 2 - (4 * eta) - 0.4e1) * si2 ^ 2 / (1 + eta) / L ^ 4 / (eta ^ 4) * sin((f + 2 * g)) + sqrt((-eta ^ 2 + 1)) * (ci2 ^ 2 * (eta ^ 2) + 0.20e2 * ci2 ^ 2 * eta + 0.47e2 * ci2 ^ 2 - (4 * eta) - 0.4e1) * si2 ^ 2 / (1 + eta) / L ^ 4 / (eta ^ 4) * sin((3 * f + 2 * g)) / 0.8e1 - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * si2 ^ 2 * ci2 ^ 2 * (eta - 1) / L ^ 4 / (eta ^ 4) * sin((5 * f + 2 * g)) - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * si2 ^ 2 * ci2 ^ 2 * (eta - 1) / L ^ 4 / (eta ^ 4) * sin((-2 * g + f)) + 0.3e1 / 0.2e1 * si2 ^ 2 * (0.5e1 * ci2 ^ 2 - 0.1e1) / L ^ 4 / (eta ^ 4) * sin((2 * g + 2 * f)) - 0.9e1 / 0.4e1 * si2 ^ 2 * ci2 ^ 2 * (eta - 1) / L ^ 4 / (eta ^ 4) * sin((2 * g + 4 * f))) * J * R__e ^ 2 * mu ^ 2;
sp123 = (0.3e1 / 0.4e1 * si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch * cos((f + 2 * g)) + si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch * cos((3 * f + 2 * g)) / 0.4e1 + 0.3e1 / 0.4e1 * si2 * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch * cos((2 * g + 2 * f)) - 0.3e1 / 0.4e1 * si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh * sin((f + 2 * g)) - si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh * sin((3 * f + 2 * g)) / 0.4e1 - 0.3e1 / 0.4e1 * si2 * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh * sin((2 * g + 2 * f))) * J * R__e ^ 2 * mu ^ 2;
sp124 = (0.3e1 / 0.4e1 * si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh * cos((f + 2 * g)) + si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh * cos((3 * f + 2 * g)) / 0.4e1 + 0.3e1 / 0.4e1 * si2 * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * sh * cos((2 * g + 2 * f)) + 0.3e1 / 0.4e1 * si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch * sin((f + 2 * g)) + si2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch * sin((3 * f + 2 * g)) / 0.4e1 + 0.3e1 / 0.4e1 * si2 * (2 * ci2 ^ 2 - 1) / L ^ 4 / (eta ^ 4) / ci2 * ch * sin((2 * g + 2 * f))) * J * R__e ^ 2 * mu ^ 2;
sp125 = (0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * cos(g) - 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * ch * cos(f - g) + 0.3e1 / 0.4e1 * si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) + ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * ch * cos(f + g) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (0.10e2 * ci2 ^ 2 - 0.1e1) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * cos(0.2e1 * f + 0.3e1 * g) + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * cos(0.4e1 * f + 0.3e1 * g) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * cos(g + 0.2e1 * f) + si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) - ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * ch * cos(g + 0.3e1 * f) / 0.8e1 - 0.3e1 / 0.8e1 * si2 ^ 2 * (0.13e2 * ci2 ^ 2 * (eta ^ 2) - 0.13e2 * ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * ch * cos(0.3e1 * g + f) - si2 ^ 2 * (0.9e1 * ci2 ^ 2 * (eta ^ 2) - 0.23e2 * ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * ch * cos(0.3e1 * g + 0.3e1 * f) / 0.4e1 - 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * ch * cos(0.3e1 * g + 0.5e1 * f) + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * sin(g) + 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * sh * sin(f - g) + 0.3e1 / 0.4e1 * si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) + ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * sh * sin(f + g) - 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (0.10e2 * ci2 ^ 2 - 0.1e1) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * sin(0.2e1 * f + 0.3e1 * g) - 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * sin(0.4e1 * f + 0.3e1 * g) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * sin(g + 0.2e1 * f) + si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) - ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * sh * sin(g + 0.3e1 * f) / 0.8e1 + 0.3e1 / 0.8e1 * si2 ^ 2 * (0.13e2 * ci2 ^ 2 * (eta ^ 2) - 0.13e2 * ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * sh * sin(0.3e1 * g + f) + si2 ^ 2 * (0.9e1 * ci2 ^ 2 * (eta ^ 2) - 0.23e2 * ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * sh * sin(0.3e1 * g + 0.3e1 * f) / 0.4e1 + 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * sh * sin(0.3e1 * g + 0.5e1 * f)) * J * R__e ^ 2 * mu ^ 2;
sp126 = (0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * cos(g) - 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * sh * cos(f - g) + 0.3e1 / 0.4e1 * si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) + ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * sh * cos(f + g) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (0.10e2 * ci2 ^ 2 - 0.1e1) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * cos(0.2e1 * f + 0.3e1 * g) + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * cos(0.4e1 * f + 0.3e1 * g) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * sh * cos(g + 0.2e1 * f) + si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) - ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * sh * cos(g + 0.3e1 * f) / 0.8e1 - 0.3e1 / 0.8e1 * si2 ^ 2 * (0.13e2 * ci2 ^ 2 * (eta ^ 2) - 0.13e2 * ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * sh * cos(0.3e1 * g + f) - si2 ^ 2 * (0.9e1 * ci2 ^ 2 * (eta ^ 2) - 0.23e2 * ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * sh * cos(0.3e1 * g + 0.3e1 * f) / 0.4e1 - 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * sh * cos(0.3e1 * g + 0.5e1 * f) - 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * sin(g) - 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * ch * sin(f - g) - 0.3e1 / 0.4e1 * si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) + ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * ch * sin(f + g) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (0.10e2 * ci2 ^ 2 - 0.1e1) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * sin(0.2e1 * f + 0.3e1 * g) + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * ci2 ^ 2 * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * sin(0.4e1 * f + 0.3e1 * g) - 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * si2 ^ 2 / (eta ^ 4) / L ^ 4 * ch * sin(g + 0.2e1 * f) - si2 ^ 2 * (ci2 ^ 2 * (eta ^ 2) - ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * ch * sin(g + 0.3e1 * f) / 0.8e1 - 0.3e1 / 0.8e1 * si2 ^ 2 * (0.13e2 * ci2 ^ 2 * (eta ^ 2) - 0.13e2 * ci2 ^ 2 - (2 * eta ^ 2) + 0.2e1) / (eta ^ 4) / L ^ 4 * ch * sin(0.3e1 * g + f) - si2 ^ 2 * (0.9e1 * ci2 ^ 2 * (eta ^ 2) - 0.23e2 * ci2 ^ 2 - (eta ^ 2) + 0.1e1) / (eta ^ 4) / L ^ 4 * ch * sin(0.3e1 * g + 0.3e1 * f) / 0.4e1 - 0.3e1 / 0.8e1 * si2 ^ 2 * ci2 ^ 2 * (eta ^ 2 - 1) / (eta ^ 4) / L ^ 4 * ch * sin(0.3e1 * g + 0.5e1 * f)) * J * R__e ^ 2 * mu ^ 2;



% J2 Equinoctial Second Order Short-Period Effects (Using Maple)

sp2t11 = ((-54 * eta ^ 6 * si2 ^ 8 + 108 * eta ^ 6 * si2 ^ 6 + 162 * eta ^ 4 * si2 ^ 8 - 66 * eta ^ 6 * si2 ^ 4 - 324 * eta ^ 4 * si2 ^ 6 - 162 * eta ^ 2 * si2 ^ 8 + 12 * eta ^ 6 * si2 ^ 2 + 198 * eta ^ 4 * si2 ^ 4 + 324 * eta ^ 2 * si2 ^ 6 + 54 * si2 ^ 8 - eta ^ 6 - 36 * eta ^ 4 * si2 ^ 2 - 198 * eta ^ 2 * si2 ^ 4 - 108 * si2 ^ 6 + 3 * eta ^ 4 + 36 * eta ^ 2 * si2 ^ 2 + 66 * si2 ^ 4 - 3 * eta ^ 2 - 12 * si2 ^ 2 + 1) / L ^ 6 / (eta ^ 12) * cos((6 * f)) / 0.32e2 + (-354 * eta ^ 6 * si2 ^ 8 + 432 * eta ^ 5 * si2 ^ 8 + 708 * eta ^ 6 * si2 ^ 6 + 3840 * eta ^ 4 * si2 ^ 8 - 864 * eta ^ 5 * si2 ^ 6 - 432 * eta ^ 3 * si2 ^ 8 - 414 * eta ^ 6 * si2 ^ 4 - 7680 * eta ^ 4 * si2 ^ 6 - 7050 * eta ^ 2 * si2 ^ 8 + 576 * eta ^ 5 * si2 ^ 4 + 864 * eta ^ 3 * si2 ^ 6 + 60 * eta ^ 6 * si2 ^ 2 + 4608 * eta ^ 4 * si2 ^ 4 + 14100 * eta ^ 2 * si2 ^ 6 + 3564 * si2 ^ 8 - 144 * eta ^ 5 * si2 ^ 2 - 576 * eta ^ 3 * si2 ^ 4 - 3 * eta ^ 6 - 768 * eta ^ 4 * si2 ^ 2 - 8550 * eta ^ 2 * si2 ^ 4 - 7128 * si2 ^ 6 + 12 * eta ^ 5 + 144 * eta ^ 3 * si2 ^ 2 + 60 * eta ^ 4 + 1500 * eta ^ 2 * si2 ^ 2 + 4356 * si2 ^ 4 - 12 * eta ^ 3 - 123 * eta ^ 2 - 792 * si2 ^ 2 + 66) / L ^ 6 / (eta ^ 12) * cos((4 * f)) / 0.32e2 + (-930 * eta ^ 6 * si2 ^ 8 + 1296 * eta ^ 5 * si2 ^ 8 + 1860 * eta ^ 6 * si2 ^ 6 + 14118 * eta ^ 4 * si2 ^ 8 - 2592 * eta ^ 5 * si2 ^ 6 - 3024 * eta ^ 3 * si2 ^ 8 - 1062 * eta ^ 6 * si2 ^ 4 - 28236 * eta ^ 4 * si2 ^ 6 - 38190 * eta ^ 2 * si2 ^ 8 + 1728 * eta ^ 5 * si2 ^ 4 + 6048 * eta ^ 3 * si2 ^ 6 + 132 * eta ^ 6 * si2 ^ 2 + 16506 * eta ^ 4 * si2 ^ 4 + 76380 * eta ^ 2 * si2 ^ 6 + 26730 * si2 ^ 8 - 432 * eta ^ 5 * si2 ^ 2 - 4032 * eta ^ 3 * si2 ^ 4 - 3 * eta ^ 6 - 2388 * eta ^ 4 * si2 ^ 2 - 45810 * eta ^ 2 * si2 ^ 4 - 53460 * si2 ^ 6 + 36 * eta ^ 5 + 1008 * eta ^ 3 * si2 ^ 2 + 141 * eta ^ 4 + 7620 * eta ^ 2 * si2 ^ 2 + 32670 * si2 ^ 4 - 84 * eta ^ 3 - 585 * eta ^ 2 - 5940 * si2 ^ 2 + 495) / L ^ 6 / (eta ^ 12) * cos((2 * f)) / 0.32e2 + (-342 * eta ^ 6 * si2 ^ 8 + 864 * eta ^ 5 * si2 ^ 8 + 684 * eta ^ 6 * si2 ^ 6 + 10440 * eta ^ 4 * si2 ^ 8 - 1728 * eta ^ 5 * si2 ^ 6 - 2304 * eta ^ 3 * si2 ^ 8 - 330 * eta ^ 6 * si2 ^ 4 - 20880 * eta ^ 4 * si2 ^ 6 - 31206 * eta ^ 2 * si2 ^ 8 + 1152 * eta ^ 5 * si2 ^ 4 + 4608 * eta ^ 3 * si2 ^ 6 - 12 * eta ^ 6 * si2 ^ 2 + 12096 * eta ^ 4 * si2 ^ 4 + 62412 * eta ^ 2 * si2 ^ 6 + 24948 * si2 ^ 8 - 288 * eta ^ 5 * si2 ^ 2 - 3072 * eta ^ 3 * si2 ^ 4 + 7 * eta ^ 6 - 1656 * eta ^ 4 * si2 ^ 2 - 37218 * eta ^ 2 * si2 ^ 4 - 49896 * si2 ^ 6 + 24 * eta ^ 5 + 768 * eta ^ 3 * si2 ^ 2 + 84 * eta ^ 4 + 6012 * eta ^ 2 * si2 ^ 2 + 30492 * si2 ^ 4 - 64 * eta ^ 3 - 441 * eta ^ 2 - 5544 * si2 ^ 2 + 462) / L ^ 6 / (eta ^ 12) / 0.32e2 - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (522 * eta ^ 6 * si2 ^ 6 + 2292 * eta ^ 5 * si2 ^ 6 - 1044 * eta ^ 6 * si2 ^ 4 + 1440 * eta ^ 4 * si2 ^ 6 - 4584 * eta ^ 5 * si2 ^ 4 - 9348 * eta ^ 3 * si2 ^ 6 + 625 * eta ^ 6 * si2 ^ 2 - 2880 * eta ^ 4 * si2 ^ 4 - 9066 * eta ^ 2 * si2 ^ 6 + 2736 * eta ^ 5 * si2 ^ 2 + 18696 * eta ^ 3 * si2 ^ 4 + 9504 * eta * si2 ^ 6 - 103 * eta ^ 6 + 1726 * eta ^ 4 * si2 ^ 2 + 18132 * eta ^ 2 * si2 ^ 4 + 9504 * si2 ^ 6 - 444 * eta ^ 5 - 11008 * eta ^ 3 * si2 ^ 2 - 19008 * eta * si2 ^ 4 - 286 * eta ^ 4 - 10679 * eta ^ 2 * si2 ^ 2 - 19008 * si2 ^ 4 + 1660 * eta ^ 3 + 11088 * eta * si2 ^ 2 + 1613 * eta ^ 2 + 11088 * si2 ^ 2 - 1584 * eta - 1584) * (si2 ^ 2) / (1 + eta) / L ^ 6 / (eta ^ 12) * cos((f + 2 * g)) + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / (eta ^ 10) / L ^ 6 * sin((-2 * g + f)) - 0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 50 * si2 ^ 4 - eta ^ 2 - 30 * si2 ^ 2 + 5) * (si2 ^ 2) * Delta / (eta ^ 10) / L ^ 6 * sin((f + 2 * g)) - 0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 50 * si2 ^ 4 - eta ^ 2 - 30 * si2 ^ 2 + 5) * (si2 ^ 2) * Delta / (eta ^ 10) / L ^ 6 * sin((3 * f + 2 * g)) - 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / (eta ^ 10) / L ^ 6 * sin((5 * f + 2 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (226 * eta ^ 6 * si2 ^ 6 + 1300 * eta ^ 5 * si2 ^ 6 - 452 * eta ^ 6 * si2 ^ 4 + 288 * eta ^ 4 * si2 ^ 6 - 2600 * eta ^ 5 * si2 ^ 4 - 7780 * eta ^ 3 * si2 ^ 6 + 269 * eta ^ 6 * si2 ^ 2 - 576 * eta ^ 4 * si2 ^ 4 - 6658 * eta ^ 2 * si2 ^ 6 + 1536 * eta ^ 5 * si2 ^ 2 + 15560 * eta ^ 3 * si2 ^ 4 + 9504 * eta * si2 ^ 6 - 43 * eta ^ 6 + 350 * eta ^ 4 * si2 ^ 2 + 13316 * eta ^ 2 * si2 ^ 4 + 9504 * si2 ^ 6 - 236 * eta ^ 5 - 9104 * eta ^ 3 * si2 ^ 2 - 19008 * eta * si2 ^ 4 - 62 * eta ^ 4 - 7795 * eta ^ 2 * si2 ^ 2 - 19008 * si2 ^ 4 + 1324 * eta ^ 3 + 11088 * eta * si2 ^ 2 + 1137 * eta ^ 2 + 11088 * si2 ^ 2 - 1584 * eta - 1584) * (si2 ^ 2) / (1 + eta) / L ^ 6 / (eta ^ 12) * cos((3 * f + 2 * g)) + 0.3e1 / 0.16e2 * (si2 ^ 2) * (10 * eta ^ 6 * si2 ^ 6 - 66 * eta ^ 5 * si2 ^ 6 - 20 * eta ^ 6 * si2 ^ 4 - 350 * eta ^ 4 * si2 ^ 6 + 132 * eta ^ 5 * si2 ^ 4 + 66 * eta ^ 3 * si2 ^ 6 + 11 * eta ^ 6 * si2 ^ 2 + 700 * eta ^ 4 * si2 ^ 4 + 736 * eta ^ 2 * si2 ^ 6 - 77 * eta ^ 5 * si2 ^ 2 - 132 * eta ^ 3 * si2 ^ 4 - eta ^ 6 - 407 * eta ^ 4 * si2 ^ 2 - 1472 * eta ^ 2 * si2 ^ 4 - 396 * si2 ^ 6 + 11 * eta ^ 5 + 77 * eta ^ 3 * si2 ^ 2 + 57 * eta ^ 4 + 858 * eta ^ 2 * si2 ^ 2 + 792 * si2 ^ 4 - 11 * eta ^ 3 - 122 * eta ^ 2 - 462 * si2 ^ 2 + 66) / (eta ^ 12) / L ^ 6 * cos((6 * f + 2 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (36 * eta ^ 5 * si2 ^ 8 + 396 * eta ^ 4 * si2 ^ 8 - 72 * eta ^ 5 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 8 - 792 * eta ^ 4 * si2 ^ 6 - 828 * eta ^ 2 * si2 ^ 8 + 48 * eta ^ 5 * si2 ^ 4 + 72 * eta ^ 3 * si2 ^ 6 + 480 * eta ^ 4 * si2 ^ 4 + 1656 * eta ^ 2 * si2 ^ 6 + 432 * si2 ^ 8 - 12 * eta ^ 5 * si2 ^ 2 - 48 * eta ^ 3 * si2 ^ 4 - 84 * eta ^ 4 * si2 ^ 2 - 1008 * eta ^ 2 * si2 ^ 4 - 864 * si2 ^ 6 + eta ^ 5 + 12 * eta ^ 3 * si2 ^ 2 + 7 * eta ^ 4 + 180 * eta ^ 2 * si2 ^ 2 + 528 * si2 ^ 4 - eta ^ 3 - 15 * eta ^ 2 - 96 * si2 ^ 2 + 8) / L ^ 6 / (eta ^ 12) * cos((5 * f)) + 0.3e1 / 0.16e2 * (si2 ^ 2) * (154 * eta ^ 6 * si2 ^ 6 - 48 * eta ^ 5 * si2 ^ 6 - 308 * eta ^ 6 * si2 ^ 4 - 2114 * eta ^ 4 * si2 ^ 6 + 96 * eta ^ 5 * si2 ^ 4 + 24 * eta ^ 3 * si2 ^ 6 + 185 * eta ^ 6 * si2 ^ 2 + 4228 * eta ^ 4 * si2 ^ 4 + 4954 * eta ^ 2 * si2 ^ 6 - 56 * eta ^ 5 * si2 ^ 2 - 48 * eta ^ 3 * si2 ^ 4 - 31 * eta ^ 6 - 2507 * eta ^ 4 * si2 ^ 2 - 9908 * eta ^ 2 * si2 ^ 4 - 2970 * si2 ^ 6 + 8 * eta ^ 5 + 28 * eta ^ 3 * si2 ^ 2 + 393 * eta ^ 4 + 5815 * eta ^ 2 * si2 ^ 2 + 5940 * si2 ^ 4 - 4 * eta ^ 3 - 861 * eta ^ 2 - 3465 * si2 ^ 2 + 495) / (eta ^ 12) / L ^ 6 * cos((2 * g)) + 0.3e1 / 0.16e2 * (si2 ^ 2) * (6 * eta ^ 6 * si2 ^ 6 - 12 * eta ^ 6 * si2 ^ 4 - 18 * eta ^ 4 * si2 ^ 6 + 7 * eta ^ 6 * si2 ^ 2 + 36 * eta ^ 4 * si2 ^ 4 + 18 * eta ^ 2 * si2 ^ 6 - eta ^ 6 - 21 * eta ^ 4 * si2 ^ 2 - 36 * eta ^ 2 * si2 ^ 4 - 6 * si2 ^ 6 + 3 * eta ^ 4 + 21 * eta ^ 2 * si2 ^ 2 + 12 * si2 ^ 4 - 3 * eta ^ 2 - 7 * si2 ^ 2 + 1) / (eta ^ 12) / L ^ 6 * cos((4 * f - 2 * g)) - 0.3e1 / 0.16e2 * (si2 ^ 4) * (27 * eta ^ 6 * si2 ^ 4 - 54 * eta ^ 6 * si2 ^ 2 - 636 * eta ^ 4 * si2 ^ 4 + 27 * eta ^ 6 + 1272 * eta ^ 4 * si2 ^ 2 + 1915 * eta ^ 2 * si2 ^ 4 - 636 * eta ^ 4 - 3830 * eta ^ 2 * si2 ^ 2 - 1386 * si2 ^ 4 + 1915 * eta ^ 2 + 2772 * si2 ^ 2 - 1386) / (eta ^ 12) / L ^ 6 * cos((4 * f + 4 * g)) - 0.3e1 / 0.32e2 * (si2 ^ 4) * (13 * eta ^ 6 * si2 ^ 4 - 26 * eta ^ 6 * si2 ^ 2 - 224 * eta ^ 4 * si2 ^ 4 + 13 * eta ^ 6 + 448 * eta ^ 4 * si2 ^ 2 + 409 * eta ^ 2 * si2 ^ 4 - 224 * eta ^ 4 - 818 * eta ^ 2 * si2 ^ 2 - 198 * si2 ^ 4 + 409 * eta ^ 2 + 396 * si2 ^ 2 - 198) / (eta ^ 12) / L ^ 6 * cos((4 * g)) + 0.3e1 / 0.16e2 * (si2 ^ 2) * (42 * eta ^ 6 * si2 ^ 6 - 168 * eta ^ 5 * si2 ^ 6 - 84 * eta ^ 6 * si2 ^ 4 - 1098 * eta ^ 4 * si2 ^ 6 + 336 * eta ^ 5 * si2 ^ 4 + 480 * eta ^ 3 * si2 ^ 6 + 49 * eta ^ 6 * si2 ^ 2 + 2196 * eta ^ 4 * si2 ^ 4 + 3714 * eta ^ 2 * si2 ^ 6 - 196 * eta ^ 5 * si2 ^ 2 - 960 * eta ^ 3 * si2 ^ 4 - 7 * eta ^ 6 - 1279 * eta ^ 4 * si2 ^ 2 - 7428 * eta ^ 2 * si2 ^ 4 - 2970 * si2 ^ 6 + 28 * eta ^ 5 + 560 * eta ^ 3 * si2 ^ 2 + 181 * eta ^ 4 + 4331 * eta ^ 2 * si2 ^ 2 + 5940 * si2 ^ 4 - 80 * eta ^ 3 - 617 * eta ^ 2 - 3465 * si2 ^ 2 + 495) / (eta ^ 12) / L ^ 6 * cos((2 * g + 4 * f)) - 0.9e1 / 0.32e2 * (si2 ^ 4) * (eta ^ 6 * si2 ^ 4 - 2 * eta ^ 6 * si2 ^ 2 - 3 * eta ^ 4 * si2 ^ 4 + eta ^ 6 + 6 * eta ^ 4 * si2 ^ 2 + 3 * eta ^ 2 * si2 ^ 4 - 3 * eta ^ 4 - 6 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + 3 * eta ^ 2 + 2 * si2 ^ 2 - 1) / (eta ^ 12) / L ^ 6 * cos((10 * f + 4 * g)) + 0.3e1 / 0.8e1 * (si2 ^ 2) * (66 * eta ^ 6 * si2 ^ 6 - 192 * eta ^ 5 * si2 ^ 6 - 132 * eta ^ 6 * si2 ^ 4 - 1188 * eta ^ 4 * si2 ^ 6 + 384 * eta ^ 5 * si2 ^ 4 + 192 * eta ^ 3 * si2 ^ 6 + 79 * eta ^ 6 * si2 ^ 2 + 2376 * eta ^ 4 * si2 ^ 4 + 3558 * eta ^ 2 * si2 ^ 6 - 228 * eta ^ 5 * si2 ^ 2 - 384 * eta ^ 3 * si2 ^ 4 - 13 * eta ^ 6 - 1404 * eta ^ 4 * si2 ^ 2 - 7116 * eta ^ 2 * si2 ^ 4 - 2772 * si2 ^ 6 + 36 * eta ^ 5 + 224 * eta ^ 3 * si2 ^ 2 + 216 * eta ^ 4 + 4171 * eta ^ 2 * si2 ^ 2 + 5544 * si2 ^ 4 - 32 * eta ^ 3 - 613 * eta ^ 2 - 3234 * si2 ^ 2 + 462) / (eta ^ 12) / L ^ 6 * cos((2 * g + 2 * f)) - 0.9e1 / 0.32e2 * (si2 ^ 4) * (7 * eta ^ 6 * si2 ^ 4 - 14 * eta ^ 6 * si2 ^ 2 - 80 * eta ^ 4 * si2 ^ 4 + 7 * eta ^ 6 + 160 * eta ^ 4 * si2 ^ 2 + 139 * eta ^ 2 * si2 ^ 4 - 80 * eta ^ 4 - 278 * eta ^ 2 * si2 ^ 2 - 66 * si2 ^ 4 + 139 * eta ^ 2 + 132 * si2 ^ 2 - 66) / (eta ^ 12) / L ^ 6 * cos((8 * f + 4 * g)) - 0.9e1 / 0.32e2 * (si2 ^ 4) * (eta ^ 6 * si2 ^ 4 - 2 * eta ^ 6 * si2 ^ 2 - 3 * eta ^ 4 * si2 ^ 4 + eta ^ 6 + 6 * eta ^ 4 * si2 ^ 2 + 3 * eta ^ 2 * si2 ^ 4 - 3 * eta ^ 4 - 6 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + 3 * eta ^ 2 + 2 * si2 ^ 2 - 1) / (eta ^ 12) / L ^ 6 * cos((2 * f - 4 * g)) + 0.3e1 / 0.16e2 * (si2 ^ 2) * (66 * eta ^ 6 * si2 ^ 6 - 6 * eta ^ 5 * si2 ^ 6 - 132 * eta ^ 6 * si2 ^ 4 - 522 * eta ^ 4 * si2 ^ 6 + 12 * eta ^ 5 * si2 ^ 4 + 6 * eta ^ 3 * si2 ^ 6 + 79 * eta ^ 6 * si2 ^ 2 + 1044 * eta ^ 4 * si2 ^ 4 + 852 * eta ^ 2 * si2 ^ 6 - 7 * eta ^ 5 * si2 ^ 2 - 12 * eta ^ 3 * si2 ^ 4 - 13 * eta ^ 6 - 613 * eta ^ 4 * si2 ^ 2 - 1704 * eta ^ 2 * si2 ^ 4 - 396 * si2 ^ 6 + eta ^ 5 + 7 * eta ^ 3 * si2 ^ 2 + 91 * eta ^ 4 + 996 * eta ^ 2 * si2 ^ 2 + 792 * si2 ^ 4 - eta ^ 3 - 144 * eta ^ 2 - 462 * si2 ^ 2 + 66) / (eta ^ 12) / L ^ 6 * cos((-2 * g + 2 * f)) - 0.3e1 / 0.32e2 * (si2 ^ 4) * (49 * eta ^ 6 * si2 ^ 4 - 98 * eta ^ 6 * si2 ^ 2 - 923 * eta ^ 4 * si2 ^ 4 + 49 * eta ^ 6 + 1846 * eta ^ 4 * si2 ^ 2 + 2359 * eta ^ 2 * si2 ^ 4 - 923 * eta ^ 4 - 4718 * eta ^ 2 * si2 ^ 2 - 1485 * si2 ^ 4 + 2359 * eta ^ 2 + 2970 * si2 ^ 2 - 1485) / (eta ^ 12) / L ^ 6 * cos((6 * f + 4 * g)) - 0.9e1 / 0.32e2 * (si2 ^ 4) * (11 * eta ^ 6 * si2 ^ 4 - 22 * eta ^ 6 * si2 ^ 2 - 265 * eta ^ 4 * si2 ^ 4 + 11 * eta ^ 6 + 530 * eta ^ 4 * si2 ^ 2 + 749 * eta ^ 2 * si2 ^ 4 - 265 * eta ^ 4 - 1498 * eta ^ 2 * si2 ^ 2 - 495 * si2 ^ 4 + 749 * eta ^ 2 + 990 * si2 ^ 2 - 495) / (eta ^ 12) / L ^ 6 * cos((2 * f + 4 * g)) + 0.3e1 / 0.16e2 * (si2 ^ 2) * (6 * eta ^ 6 * si2 ^ 6 - 12 * eta ^ 6 * si2 ^ 4 - 18 * eta ^ 4 * si2 ^ 6 + 7 * eta ^ 6 * si2 ^ 2 + 36 * eta ^ 4 * si2 ^ 4 + 18 * eta ^ 2 * si2 ^ 6 - eta ^ 6 - 21 * eta ^ 4 * si2 ^ 2 - 36 * eta ^ 2 * si2 ^ 4 - 6 * si2 ^ 6 + 3 * eta ^ 4 + 21 * eta ^ 2 * si2 ^ 2 + 12 * si2 ^ 4 - 3 * eta ^ 2 - 7 * si2 ^ 2 + 1) / (eta ^ 12) / L ^ 6 * cos((8 * f + 2 * g)) + sqrt((-eta ^ 2 + 1)) * (396 * eta ^ 5 * si2 ^ 8 + 6252 * eta ^ 4 * si2 ^ 8 - 792 * eta ^ 5 * si2 ^ 6 - 2988 * eta ^ 3 * si2 ^ 8 - 12504 * eta ^ 4 * si2 ^ 6 - 27420 * eta ^ 2 * si2 ^ 8 + 528 * eta ^ 5 * si2 ^ 4 + 5976 * eta ^ 3 * si2 ^ 6 + 7296 * eta ^ 4 * si2 ^ 4 + 54840 * eta ^ 2 * si2 ^ 6 + 23760 * si2 ^ 8 - 132 * eta ^ 5 * si2 ^ 2 - 3984 * eta ^ 3 * si2 ^ 4 - 1044 * eta ^ 4 * si2 ^ 2 - 32880 * eta ^ 2 * si2 ^ 4 - 47520 * si2 ^ 6 + 11 * eta ^ 5 + 996 * eta ^ 3 * si2 ^ 2 + 57 * eta ^ 4 + 5460 * eta ^ 2 * si2 ^ 2 + 29040 * si2 ^ 4 - 83 * eta ^ 3 - 425 * eta ^ 2 - 5280 * si2 ^ 2 + 440) / L ^ 6 / (eta ^ 12) * cos((3 * f)) / 0.64e2 - 0.9e1 * Delta / (eta ^ 10) * (si2 ^ 2) * (15 * eta ^ 2 * si2 ^ 6 - 30 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 18 * eta ^ 2 * si2 ^ 2 + 50 * si2 ^ 4 - 3 * eta ^ 2 - 30 * si2 ^ 2 + 5) / L ^ 6 * sin((2 * g + 2 * f)) - 0.27e2 / 0.2e1 * Delta / (eta ^ 10) * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / L ^ 6 * sin((2 * g + 4 * f)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (6 * eta ^ 5 * si2 ^ 6 + 282 * eta ^ 4 * si2 ^ 6 - 12 * eta ^ 5 * si2 ^ 4 - 6 * eta ^ 3 * si2 ^ 6 - 564 * eta ^ 4 * si2 ^ 4 - 570 * eta ^ 2 * si2 ^ 6 + 7 * eta ^ 5 * si2 ^ 2 + 12 * eta ^ 3 * si2 ^ 4 + 329 * eta ^ 4 * si2 ^ 2 + 1140 * eta ^ 2 * si2 ^ 4 + 288 * si2 ^ 6 - eta ^ 5 - 7 * eta ^ 3 * si2 ^ 2 - 47 * eta ^ 4 - 665 * eta ^ 2 * si2 ^ 2 - 576 * si2 ^ 4 + eta ^ 3 + 95 * eta ^ 2 + 336 * si2 ^ 2 - 48) * (si2 ^ 2) / L ^ 6 / (eta ^ 12) * cos((3 * f - 2 * g)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (102 * eta ^ 5 * si2 ^ 6 + 690 * eta ^ 4 * si2 ^ 6 - 204 * eta ^ 5 * si2 ^ 4 - 966 * eta ^ 3 * si2 ^ 6 - 1380 * eta ^ 4 * si2 ^ 4 - 5106 * eta ^ 2 * si2 ^ 6 + 119 * eta ^ 5 * si2 ^ 2 + 1932 * eta ^ 3 * si2 ^ 4 + 793 * eta ^ 4 * si2 ^ 2 + 10212 * eta ^ 2 * si2 ^ 4 + 5280 * si2 ^ 6 - 17 * eta ^ 5 - 1127 * eta ^ 3 * si2 ^ 2 - 103 * eta ^ 4 - 5945 * eta ^ 2 * si2 ^ 2 - 10560 * si2 ^ 4 + 161 * eta ^ 3 + 839 * eta ^ 2 + 6160 * si2 ^ 2 - 880) * (si2 ^ 2) / L ^ 6 / (eta ^ 12) * cos((5 * f + 2 * g)) + 0.27e2 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * (21 * eta ^ 4 * si2 ^ 4 - 42 * eta ^ 4 * si2 ^ 2 - 125 * eta ^ 2 * si2 ^ 4 + 21 * eta ^ 4 + 250 * eta ^ 2 * si2 ^ 2 + 132 * si2 ^ 4 - 125 * eta ^ 2 - 264 * si2 ^ 2 + 132) * (si2 ^ 4) / L ^ 6 / (eta ^ 12) * cos((5 * f + 4 * g)) + 0.27e2 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 - 2 * eta ^ 2 * si2 ^ 4 + eta ^ 4 + 4 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 - 2 * eta ^ 2 - 2 * si2 ^ 2 + 1) * (si2 ^ 4) / L ^ 6 / (eta ^ 12) * cos((-4 * g + f)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (30 * eta ^ 5 * si2 ^ 6 + 2106 * eta ^ 4 * si2 ^ 6 - 60 * eta ^ 5 * si2 ^ 4 - 30 * eta ^ 3 * si2 ^ 6 - 4212 * eta ^ 4 * si2 ^ 4 - 7386 * eta ^ 2 * si2 ^ 6 + 35 * eta ^ 5 * si2 ^ 2 + 60 * eta ^ 3 * si2 ^ 4 + 2509 * eta ^ 4 * si2 ^ 2 + 14772 * eta ^ 2 * si2 ^ 4 + 5280 * si2 ^ 6 - 5 * eta ^ 5 - 35 * eta ^ 3 * si2 ^ 2 - 403 * eta ^ 4 - 8669 * eta ^ 2 * si2 ^ 2 - 10560 * si2 ^ 4 + 5 * eta ^ 3 + 1283 * eta ^ 2 + 6160 * si2 ^ 2 - 880) * (si2 ^ 2) / L ^ 6 / (eta ^ 12) * cos((-2 * g + f)) + 0.27e2 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 - 2 * eta ^ 2 * si2 ^ 4 + eta ^ 4 + 4 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 - 2 * eta ^ 2 - 2 * si2 ^ 2 + 1) * (si2 ^ 4) / L ^ 6 / (eta ^ 12) * cos((9 * f + 4 * g)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (108 * eta ^ 6 * si2 ^ 8 + 2244 * eta ^ 5 * si2 ^ 8 - 216 * eta ^ 6 * si2 ^ 6 + 1020 * eta ^ 4 * si2 ^ 8 - 4488 * eta ^ 5 * si2 ^ 6 - 12740 * eta ^ 3 * si2 ^ 8 + 144 * eta ^ 6 * si2 ^ 4 - 2040 * eta ^ 4 * si2 ^ 6 - 11336 * eta ^ 2 * si2 ^ 8 + 2592 * eta ^ 5 * si2 ^ 4 + 25480 * eta ^ 3 * si2 ^ 6 + 14256 * eta * si2 ^ 8 - 36 * eta ^ 6 * si2 ^ 2 + 960 * eta ^ 4 * si2 ^ 4 + 22672 * eta ^ 2 * si2 ^ 6 + 14256 * si2 ^ 8 - 348 * eta ^ 5 * si2 ^ 2 - 15216 * eta ^ 3 * si2 ^ 4 - 28512 * eta * si2 ^ 6 + 3 * eta ^ 6 + 60 * eta ^ 4 * si2 ^ 2 - 13344 * eta ^ 2 * si2 ^ 4 - 28512 * si2 ^ 6 + 14 * eta ^ 5 + 2476 * eta ^ 3 * si2 ^ 2 + 17424 * eta * si2 ^ 4 - 20 * eta ^ 4 + 2008 * eta ^ 2 * si2 ^ 2 + 17424 * si2 ^ 4 - 174 * eta ^ 3 - 3168 * eta * si2 ^ 2 - 135 * eta ^ 2 - 3168 * si2 ^ 2 + 264 * eta + 264) / (1 + eta) / L ^ 6 / (eta ^ 12) * cos(f) + 0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * (101 * eta ^ 4 * si2 ^ 4 - 202 * eta ^ 4 * si2 ^ 2 - 431 * eta ^ 2 * si2 ^ 4 + 101 * eta ^ 4 + 862 * eta ^ 2 * si2 ^ 2 + 330 * si2 ^ 4 - 431 * eta ^ 2 - 660 * si2 ^ 2 + 330) * (si2 ^ 4) / L ^ 6 / (eta ^ 12) * cos((4 * g + 7 * f)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (30 * eta ^ 5 * si2 ^ 6 + 258 * eta ^ 4 * si2 ^ 6 - 60 * eta ^ 5 * si2 ^ 4 - 30 * eta ^ 3 * si2 ^ 6 - 516 * eta ^ 4 * si2 ^ 4 - 546 * eta ^ 2 * si2 ^ 6 + 35 * eta ^ 5 * si2 ^ 2 + 60 * eta ^ 3 * si2 ^ 4 + 301 * eta ^ 4 * si2 ^ 2 + 1092 * eta ^ 2 * si2 ^ 4 + 288 * si2 ^ 6 - 5 * eta ^ 5 - 35 * eta ^ 3 * si2 ^ 2 - 43 * eta ^ 4 - 637 * eta ^ 2 * si2 ^ 2 - 576 * si2 ^ 4 + 5 * eta ^ 3 + 91 * eta ^ 2 + 336 * si2 ^ 2 - 48) * (si2 ^ 2) / L ^ 6 / (eta ^ 12) * cos((2 * g + 7 * f)) + 0.33e2 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * (7 * eta ^ 4 * si2 ^ 4 - 14 * eta ^ 4 * si2 ^ 2 - 37 * eta ^ 2 * si2 ^ 4 + 7 * eta ^ 4 + 74 * eta ^ 2 * si2 ^ 2 + 30 * si2 ^ 4 - 37 * eta ^ 2 - 60 * si2 ^ 2 + 30) * (si2 ^ 4) / L ^ 6 / (eta ^ 12) * cos((4 * g + f)) + 0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * (165 * eta ^ 4 * si2 ^ 4 - 330 * eta ^ 4 * si2 ^ 2 - 1069 * eta ^ 2 * si2 ^ 4 + 165 * eta ^ 4 + 2138 * eta ^ 2 * si2 ^ 2 + 1188 * si2 ^ 4 - 1069 * eta ^ 2 - 2376 * si2 ^ 2 + 1188) * (si2 ^ 4) / L ^ 6 / (eta ^ 12) * cos((3 * f + 4 * g)) - 0.27e2 / 0.2e1 * Delta / (eta ^ 10) * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / L ^ 6 * sin((2 * g))) * J ^ 2 * R__e ^ 4 * mu ^ 3;
sp2t12 = ((-54 * eta ^ 4 * si2 ^ 8 + 108 * eta ^ 3 * si2 ^ 8 + 108 * eta ^ 4 * si2 ^ 6 - 216 * eta ^ 3 * si2 ^ 6 - 108 * eta * si2 ^ 8 - 66 * eta ^ 4 * si2 ^ 4 + 54 * si2 ^ 8 + 132 * eta ^ 3 * si2 ^ 4 + 216 * eta * si2 ^ 6 + 12 * eta ^ 4 * si2 ^ 2 - 108 * si2 ^ 6 - 24 * eta ^ 3 * si2 ^ 2 - 132 * eta * si2 ^ 4 - eta ^ 4 + 66 * si2 ^ 4 + 2 * eta ^ 3 + 24 * eta * si2 ^ 2 - 12 * si2 ^ 2 - 2 * eta + 1) / L ^ 8 / (eta ^ 9) * sin((6 * f)) / 0.256e3 - 0.3e1 * (si2 ^ 4) * (73 * eta ^ 5 * si2 ^ 4 - 297 * eta ^ 4 * si2 ^ 4 - 146 * eta ^ 5 * si2 ^ 2 - 778 * eta ^ 3 * si2 ^ 4 + 594 * eta ^ 4 * si2 ^ 2 - 438 * eta ^ 2 * si2 ^ 4 + 73 * eta ^ 5 + 1556 * eta ^ 3 * si2 ^ 2 + 657 * eta * si2 ^ 4 - 249 * eta ^ 4 + 876 * eta ^ 2 * si2 ^ 2 + 783 * si2 ^ 4 - 730 * eta ^ 3 - 1314 * eta * si2 ^ 2 - 486 * eta ^ 2 - 1566 * si2 ^ 2 + 609 * eta + 783) / (0.256e3 * L ^ 8 * (eta ^ 10) + 0.256e3 * L ^ 8 * (eta ^ 9)) * sin((2 * f + 4 * g)) + 0.3e1 * (si2 ^ 2) * (40 * eta ^ 4 * si2 ^ 6 + 2 * eta ^ 3 * si2 ^ 6 - 80 * eta ^ 4 * si2 ^ 4 - 530 * eta ^ 2 * si2 ^ 6 - 4 * eta ^ 3 * si2 ^ 4 - 98 * eta * si2 ^ 6 + 48 * eta ^ 4 * si2 ^ 2 + 1060 * eta ^ 2 * si2 ^ 4 + 586 * si2 ^ 6 + 17 * eta ^ 3 * si2 ^ 2 + 196 * eta * si2 ^ 4 - 8 * eta ^ 4 - 617 * eta ^ 2 * si2 ^ 2 - 1172 * si2 ^ 4 - 7 * eta ^ 3 - 145 * eta * si2 ^ 2 + 95 * eta ^ 2 + 665 * si2 ^ 2 + 31 * eta - 95) / (0.16e2 * L ^ 8 * (eta ^ 9) + 0.16e2 * L ^ 8 * (eta ^ 8)) * sin((2 * g + 2 * f)) + (-144 * eta ^ 4 * si2 ^ 8 + 624 * eta ^ 3 * si2 ^ 8 + 288 * eta ^ 4 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 8 - 1248 * eta ^ 3 * si2 ^ 6 - 1284 * eta * si2 ^ 8 - 168 * eta ^ 4 * si2 ^ 4 + 12 * eta ^ 2 * si2 ^ 6 + 810 * si2 ^ 8 + 792 * eta ^ 3 * si2 ^ 4 + 2568 * eta * si2 ^ 6 + 24 * eta ^ 4 * si2 ^ 2 - 90 * eta ^ 2 * si2 ^ 4 - 1620 * si2 ^ 6 - 168 * eta ^ 3 * si2 ^ 2 - 1524 * eta * si2 ^ 4 + 84 * eta ^ 2 * si2 ^ 2 + 990 * si2 ^ 4 + 12 * eta ^ 3 + 240 * eta * si2 ^ 2 - 9 * eta ^ 2 - 180 * si2 ^ 2 - 18 * eta + 15) / L ^ 8 / (eta ^ 9) * sin((4 * f)) / 0.64e2 + 0.3e1 * sqrt((-eta ^ 2 + 1)) * (108 * eta ^ 5 * si2 ^ 8 + 664 * eta ^ 4 * si2 ^ 8 - 216 * eta ^ 5 * si2 ^ 6 + 684 * eta ^ 3 * si2 ^ 8 - 1328 * eta ^ 4 * si2 ^ 6 - 500 * eta ^ 2 * si2 ^ 8 + 144 * eta ^ 5 * si2 ^ 4 - 1368 * eta ^ 3 * si2 ^ 6 + 56 * eta * si2 ^ 8 + 788 * eta ^ 4 * si2 ^ 4 + 1000 * eta ^ 2 * si2 ^ 6 + 972 * si2 ^ 8 - 36 * eta ^ 5 * si2 ^ 2 + 856 * eta ^ 3 * si2 ^ 4 - 112 * eta * si2 ^ 6 - 124 * eta ^ 4 * si2 ^ 2 - 440 * eta ^ 2 * si2 ^ 4 - 1944 * si2 ^ 6 + 3 * eta ^ 5 - 172 * eta ^ 3 * si2 ^ 2 + 152 * eta * si2 ^ 4 + 4 * eta ^ 4 - 60 * eta ^ 2 * si2 ^ 2 + 1188 * si2 ^ 4 + 8 * eta ^ 3 - 96 * eta * si2 ^ 2 + 18 * eta ^ 2 - 216 * si2 ^ 2 + 21 * eta + 18) / (0.64e2 * L ^ 8 * (eta ^ 11) + 0.128e3 * L ^ 8 * (eta ^ 10) + 0.64e2 * L ^ 8 * (eta ^ 9)) * sin(f) - (si2 ^ 2) * (42 * eta ^ 5 * si2 ^ 6 - 522 * eta ^ 4 * si2 ^ 6 - 84 * eta ^ 5 * si2 ^ 4 - 6228 * eta ^ 3 * si2 ^ 6 + 1044 * eta ^ 4 * si2 ^ 4 + 4068 * eta ^ 2 * si2 ^ 6 + 65 * eta ^ 5 * si2 ^ 2 + 12456 * eta ^ 3 * si2 ^ 4 + 7338 * eta * si2 ^ 6 - 209 * eta ^ 4 * si2 ^ 2 - 8136 * eta ^ 2 * si2 ^ 4 - 4698 * si2 ^ 6 - 23 * eta ^ 5 - 7018 * eta ^ 3 * si2 ^ 2 - 14676 * eta * si2 ^ 4 - 89 * eta ^ 4 + 4346 * eta ^ 2 * si2 ^ 2 + 9396 * si2 ^ 4 + 1086 * eta ^ 3 + 8297 * eta * si2 ^ 2 - 502 * eta ^ 2 - 5481 * si2 ^ 2 - 1255 * eta + 783) / (0.128e3 * L ^ 8 * (eta ^ 10) + 0.128e3 * L ^ 8 * (eta ^ 9)) * sin((2 * g)) + (-990 * eta ^ 5 * si2 ^ 8 - 3234 * eta ^ 4 * si2 ^ 8 + 1980 * eta ^ 5 * si2 ^ 6 + 10572 * eta ^ 3 * si2 ^ 8 + 6468 * eta ^ 4 * si2 ^ 6 - 8460 * eta ^ 2 * si2 ^ 8 - 1146 * eta ^ 5 * si2 ^ 4 - 21144 * eta ^ 3 * si2 ^ 6 - 11982 * eta * si2 ^ 8 - 4422 * eta ^ 4 * si2 ^ 4 + 16920 * eta ^ 2 * si2 ^ 6 + 14094 * si2 ^ 8 + 156 * eta ^ 5 * si2 ^ 2 + 11652 * eta ^ 3 * si2 ^ 4 + 23964 * eta * si2 ^ 6 + 1188 * eta ^ 4 * si2 ^ 2 - 9828 * eta ^ 2 * si2 ^ 4 - 28188 * si2 ^ 6 + 3 * eta ^ 5 - 1080 * eta ^ 3 * si2 ^ 2 - 13482 * eta * si2 ^ 4 - 99 * eta ^ 4 + 1368 * eta ^ 2 * si2 ^ 2 + 17226 * si2 ^ 4 - 78 * eta ^ 3 + 1500 * eta * si2 ^ 2 - 114 * eta ^ 2 - 3132 * si2 ^ 2 + 27 * eta + 261) / (0.256e3 * L ^ 8 * (eta ^ 10) + 0.256e3 * L ^ 8 * (eta ^ 9)) * sin((2 * f)) - (si2 ^ 4) * (165 * eta ^ 5 * si2 ^ 4 - 197 * eta ^ 4 * si2 ^ 4 - 330 * eta ^ 5 * si2 ^ 2 - 3234 * eta ^ 3 * si2 ^ 4 + 394 * eta ^ 4 * si2 ^ 2 + 1762 * eta ^ 2 * si2 ^ 4 + 165 * eta ^ 5 + 6468 * eta ^ 3 * si2 ^ 2 + 3853 * eta * si2 ^ 4 - 181 * eta ^ 4 - 3524 * eta ^ 2 * si2 ^ 2 - 2349 * si2 ^ 4 - 3218 * eta ^ 3 - 7706 * eta * si2 ^ 2 + 1746 * eta ^ 2 + 4698 * si2 ^ 2 + 3837 * eta - 2349) / (0.256e3 * L ^ 8 * (eta ^ 10) + 0.256e3 * L ^ 8 * (eta ^ 9)) * sin((6 * f + 4 * g)) - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (25 * eta ^ 2 * si2 ^ 6 - 20 * eta * si2 ^ 6 - 50 * eta ^ 2 * si2 ^ 4 - 65 * si2 ^ 6 + 40 * eta * si2 ^ 4 + 30 * eta ^ 2 * si2 ^ 2 + 130 * si2 ^ 4 - 16 * eta * si2 ^ 2 - 5 * eta ^ 2 - 70 * si2 ^ 2 + 9) / (1 + eta) / (eta ^ 8) / L ^ 8 * cos((f + 2 * g)) - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 20 * eta * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 + 115 * si2 ^ 6 + 40 * eta * si2 ^ 4 + 6 * eta ^ 2 * si2 ^ 2 - 230 * si2 ^ 4 - 16 * eta * si2 ^ 2 - eta ^ 2 + 146 * si2 ^ 2 - 27) / (1 + eta) / (eta ^ 8) / L ^ 8 * cos((3 * f + 2 * g)) + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta * si2 ^ 6 - 5 * si2 ^ 6 - 10 * eta * si2 ^ 4 + 10 * si2 ^ 4 + 6 * eta * si2 ^ 2 - 6 * si2 ^ 2 - eta + 1) * (si2 ^ 2) * Delta / (eta ^ 8) / L ^ 8 * cos((5 * f + 2 * g)) - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta * si2 ^ 6 - 5 * si2 ^ 6 - 10 * eta * si2 ^ 4 + 10 * si2 ^ 4 + 6 * eta * si2 ^ 2 - 6 * si2 ^ 2 - eta + 1) * (si2 ^ 2) * Delta / (eta ^ 8) / L ^ 8 * cos((-2 * g + f)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (60 * eta ^ 3 * si2 ^ 4 - 51 * eta ^ 2 * si2 ^ 4 - 120 * eta ^ 3 * si2 ^ 2 - 222 * eta * si2 ^ 4 + 102 * eta ^ 2 * si2 ^ 2 + 81 * si2 ^ 4 + 60 * eta ^ 3 + 444 * eta * si2 ^ 2 - 47 * eta ^ 2 - 162 * si2 ^ 2 - 218 * eta + 81) / L ^ 8 / (eta ^ 9) / (1 + eta) * sin((5 * f + 4 * g)) + 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (78 * eta ^ 4 * si2 ^ 6 - 990 * eta ^ 3 * si2 ^ 6 - 156 * eta ^ 4 * si2 ^ 4 + 330 * eta ^ 2 * si2 ^ 6 + 1980 * eta ^ 3 * si2 ^ 4 + 1566 * eta * si2 ^ 6 + 91 * eta ^ 4 * si2 ^ 2 - 660 * eta ^ 2 * si2 ^ 4 - 984 * si2 ^ 6 - 1199 * eta ^ 3 * si2 ^ 2 - 3132 * eta * si2 ^ 4 - 13 * eta ^ 4 + 385 * eta ^ 2 * si2 ^ 2 + 1968 * si2 ^ 4 + 213 * eta ^ 3 + 1871 * eta * si2 ^ 2 - 55 * eta ^ 2 - 1148 * si2 ^ 2 - 309 * eta + 164) / L ^ 8 / (eta ^ 9) / (1 + eta) * sin((-2 * g + f)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (52 * eta ^ 3 * si2 ^ 4 - 69 * eta ^ 2 * si2 ^ 4 - 104 * eta ^ 3 * si2 ^ 2 - 186 * eta * si2 ^ 4 + 138 * eta ^ 2 * si2 ^ 2 - 81 * si2 ^ 4 + 52 * eta ^ 3 + 372 * eta * si2 ^ 2 - 57 * eta ^ 2 + 162 * si2 ^ 2 - 174 * eta - 81) / L ^ 8 / (eta ^ 9) / (1 + eta) * sin((3 * f + 4 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (23 * eta ^ 3 * si2 ^ 4 + 87 * eta ^ 2 * si2 ^ 4 - 46 * eta ^ 3 * si2 ^ 2 + 13 * eta * si2 ^ 4 - 174 * eta ^ 2 * si2 ^ 2 - 123 * si2 ^ 4 + 23 * eta ^ 3 - 26 * eta * si2 ^ 2 + 87 * eta ^ 2 + 246 * si2 ^ 2 + 13 * eta - 123) / L ^ 8 / (eta ^ 9) / (1 + eta) * sin((4 * g + f)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (73 * eta ^ 3 * si2 ^ 4 - 39 * eta ^ 2 * si2 ^ 4 - 146 * eta ^ 3 * si2 ^ 2 - 157 * eta * si2 ^ 4 + 78 * eta ^ 2 * si2 ^ 2 + 123 * si2 ^ 4 + 73 * eta ^ 3 + 314 * eta * si2 ^ 2 - 39 * eta ^ 2 - 246 * si2 ^ 2 - 157 * eta + 123) / L ^ 8 / (eta ^ 9) / (1 + eta) * sin((4 * g + 7 * f)) + 0.3e1 / 0.128e3 * (6 * eta ^ 4 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 4 + 24 * eta ^ 3 * si2 ^ 4 + 12 * eta * si2 ^ 6 + 7 * eta ^ 4 * si2 ^ 2 - 6 * si2 ^ 6 - 14 * eta ^ 3 * si2 ^ 2 - 24 * eta * si2 ^ 4 - eta ^ 4 + 12 * si2 ^ 4 + 2 * eta ^ 3 + 14 * eta * si2 ^ 2 - 7 * si2 ^ 2 - 2 * eta + 1) * (si2 ^ 2) / L ^ 8 / (eta ^ 9) * sin((8 * f + 2 * g)) - 0.3e1 / 0.64e2 * (8 * eta ^ 4 * si2 ^ 4 - 12 * eta ^ 3 * si2 ^ 4 - 16 * eta ^ 4 * si2 ^ 2 - 45 * eta ^ 2 * si2 ^ 4 + 24 * eta ^ 3 * si2 ^ 2 + 94 * eta * si2 ^ 4 + 8 * eta ^ 4 + 90 * eta ^ 2 * si2 ^ 2 - 45 * si2 ^ 4 - 12 * eta ^ 3 - 188 * eta * si2 ^ 2 - 45 * eta ^ 2 + 90 * si2 ^ 2 + 94 * eta - 45) * (si2 ^ 4) / L ^ 8 / (eta ^ 9) * sin((8 * f + 4 * g)) - 0.9e1 / 0.256e3 * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 3 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 + 4 * eta ^ 3 * si2 ^ 2 + 2 * eta * si2 ^ 4 + eta ^ 4 - si2 ^ 4 - 2 * eta ^ 3 - 4 * eta * si2 ^ 2 + 2 * si2 ^ 2 + 2 * eta - 1) * (si2 ^ 4) / L ^ 8 / (eta ^ 9) * sin((2 * f - 4 * g)) + 0.3e1 / 0.128e3 * (6 * eta ^ 4 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 4 + 24 * eta ^ 3 * si2 ^ 4 + 12 * eta * si2 ^ 6 + 7 * eta ^ 4 * si2 ^ 2 - 6 * si2 ^ 6 - 14 * eta ^ 3 * si2 ^ 2 - 24 * eta * si2 ^ 4 - eta ^ 4 + 12 * si2 ^ 4 + 2 * eta ^ 3 + 14 * eta * si2 ^ 2 - 7 * si2 ^ 2 - 2 * eta + 1) * (si2 ^ 2) / L ^ 8 / (eta ^ 9) * sin((4 * f - 2 * g)) - 0.3e1 / 0.64e2 * (8 * eta ^ 4 * si2 ^ 4 + 4 * eta ^ 3 * si2 ^ 4 - 16 * eta ^ 4 * si2 ^ 2 + 13 * eta ^ 2 * si2 ^ 4 - 8 * eta ^ 3 * si2 ^ 2 - 70 * eta * si2 ^ 4 + 8 * eta ^ 4 - 26 * eta ^ 2 * si2 ^ 2 + 45 * si2 ^ 4 + 4 * eta ^ 3 + 140 * eta * si2 ^ 2 + 13 * eta ^ 2 - 90 * si2 ^ 2 - 70 * eta + 45) * (si2 ^ 4) / L ^ 8 / (eta ^ 9) * sin((4 * g)) + 0.3e1 / 0.32e2 * (36 * eta ^ 4 * si2 ^ 6 - 54 * eta ^ 3 * si2 ^ 6 - 72 * eta ^ 4 * si2 ^ 4 - 90 * eta ^ 2 * si2 ^ 6 + 108 * eta ^ 3 * si2 ^ 4 + 198 * eta * si2 ^ 6 + 44 * eta ^ 4 * si2 ^ 2 + 180 * eta ^ 2 * si2 ^ 4 - 90 * si2 ^ 6 - 65 * eta ^ 3 * si2 ^ 2 - 396 * eta * si2 ^ 4 - 8 * eta ^ 4 - 107 * eta ^ 2 * si2 ^ 2 + 180 * si2 ^ 4 + 11 * eta ^ 3 + 233 * eta * si2 ^ 2 + 17 * eta ^ 2 - 105 * si2 ^ 2 - 35 * eta + 15) * (si2 ^ 2) / L ^ 8 / (eta ^ 9) * sin((-2 * g + 2 * f)) - 0.9e1 / 0.256e3 * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 3 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 + 4 * eta ^ 3 * si2 ^ 2 + 2 * eta * si2 ^ 4 + eta ^ 4 - si2 ^ 4 - 2 * eta ^ 3 - 4 * eta * si2 ^ 2 + 2 * si2 ^ 2 + 2 * eta - 1) * (si2 ^ 4) / L ^ 8 / (eta ^ 9) * sin((10 * f + 4 * g)) + 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (36 * eta ^ 3 * si2 ^ 8 + 36 * eta ^ 2 * si2 ^ 8 - 72 * eta ^ 3 * si2 ^ 6 - 180 * eta * si2 ^ 8 - 72 * eta ^ 2 * si2 ^ 6 + 108 * si2 ^ 8 + 48 * eta ^ 3 * si2 ^ 4 + 360 * eta * si2 ^ 6 + 36 * eta ^ 2 * si2 ^ 4 - 216 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 2 - 216 * eta * si2 ^ 4 + 132 * si2 ^ 4 + eta ^ 3 + 36 * eta * si2 ^ 2 - 24 * si2 ^ 2 - 3 * eta + 2) / L ^ 8 / (eta ^ 9) * sin((5 * f)) - (36 * eta ^ 4 * si2 ^ 6 + 174 * eta ^ 3 * si2 ^ 6 - 72 * eta ^ 4 * si2 ^ 4 - 186 * eta ^ 2 * si2 ^ 6 - 348 * eta ^ 3 * si2 ^ 4 - 294 * eta * si2 ^ 6 + 44 * eta ^ 4 * si2 ^ 2 + 372 * eta ^ 2 * si2 ^ 4 + 270 * si2 ^ 6 + 201 * eta ^ 3 * si2 ^ 2 + 588 * eta * si2 ^ 4 - 8 * eta ^ 4 - 219 * eta ^ 2 * si2 ^ 2 - 540 * si2 ^ 4 - 27 * eta ^ 3 - 341 * eta * si2 ^ 2 + 33 * eta ^ 2 + 315 * si2 ^ 2 + 47 * eta - 45) * (si2 ^ 2) / L ^ 8 / (eta ^ 9) * sin((6 * f + 2 * g)) / 0.32e2 - 0.3e1 / 0.16e2 * (4 * eta ^ 3 * si2 ^ 4 - 18 * eta ^ 2 * si2 ^ 4 - 8 * eta ^ 3 * si2 ^ 2 - 72 * eta * si2 ^ 4 + 36 * eta ^ 2 * si2 ^ 2 + 116 * si2 ^ 4 + 4 * eta ^ 3 + 144 * eta * si2 ^ 2 - 16 * eta ^ 2 - 232 * si2 ^ 2 - 72 * eta + 111) * (si2 ^ 4) / (eta ^ 8) / L ^ 8 * sin((4 * f + 4 * g)) + 0.3e1 / 0.128e3 * (142 * eta ^ 4 * si2 ^ 6 + 4 * eta ^ 3 * si2 ^ 6 - 284 * eta ^ 4 * si2 ^ 4 - 864 * eta ^ 2 * si2 ^ 6 - 8 * eta ^ 3 * si2 ^ 4 + 2284 * eta * si2 ^ 6 + 171 * eta ^ 4 * si2 ^ 2 + 1728 * eta ^ 2 * si2 ^ 4 - 1566 * si2 ^ 6 + 58 * eta ^ 3 * si2 ^ 2 - 4568 * eta * si2 ^ 4 - 29 * eta ^ 4 - 968 * eta ^ 2 * si2 ^ 2 + 3132 * si2 ^ 4 - 22 * eta ^ 3 + 2566 * eta * si2 ^ 2 + 128 * eta ^ 2 - 1827 * si2 ^ 2 - 338 * eta + 261) * (si2 ^ 2) / L ^ 8 / (eta ^ 9) * sin((2 * g + 4 * f)) - 0.3e1 * sqrt((-eta ^ 2 + 1)) * (126 * eta ^ 5 * si2 ^ 6 + 780 * eta ^ 4 * si2 ^ 6 - 252 * eta ^ 5 * si2 ^ 4 + 1080 * eta ^ 3 * si2 ^ 6 - 1560 * eta ^ 4 * si2 ^ 4 + 108 * eta ^ 2 * si2 ^ 6 + 147 * eta ^ 5 * si2 ^ 2 - 2160 * eta ^ 3 * si2 ^ 4 - 918 * eta * si2 ^ 6 + 944 * eta ^ 4 * si2 ^ 2 - 216 * eta ^ 2 * si2 ^ 4 - 648 * si2 ^ 6 - 21 * eta ^ 5 + 1270 * eta ^ 3 * si2 ^ 2 + 1836 * eta * si2 ^ 4 - 154 * eta ^ 4 + 52 * eta ^ 2 * si2 ^ 2 + 1296 * si2 ^ 4 - 196 * eta ^ 3 - 1121 * eta * si2 ^ 2 + 6 * eta ^ 2 - 756 * si2 ^ 2 + 169 * eta + 108) * (si2 ^ 2) / (0.64e2 * L ^ 8 * (eta ^ 11) + 0.128e3 * L ^ 8 * (eta ^ 10) + 0.64e2 * L ^ 8 * (eta ^ 9)) * sin((f + 2 * g)) + 0.9e1 / 0.2e1 * (5 * si2 ^ 4 - 10 * si2 ^ 2 + 4) * (si2 ^ 4) * Delta / (eta ^ 8) / L ^ 8 * cos((2 * g + 2 * f)) - 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (6 * eta ^ 3 * si2 ^ 6 + 60 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 138 * eta * si2 ^ 6 - 120 * eta ^ 2 * si2 ^ 4 + 72 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 276 * eta * si2 ^ 4 + 70 * eta ^ 2 * si2 ^ 2 - 144 * si2 ^ 4 - eta ^ 3 - 161 * eta * si2 ^ 2 - 10 * eta ^ 2 + 84 * si2 ^ 2 + 23 * eta - 12) / L ^ 8 / (eta ^ 9) * sin((3 * f - 2 * g)) - 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (30 * eta ^ 3 * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 3 * si2 ^ 4 - 114 * eta * si2 ^ 6 - 24 * eta ^ 2 * si2 ^ 4 + 72 * si2 ^ 6 + 35 * eta ^ 3 * si2 ^ 2 + 228 * eta * si2 ^ 4 + 14 * eta ^ 2 * si2 ^ 2 - 144 * si2 ^ 4 - 5 * eta ^ 3 - 133 * eta * si2 ^ 2 - 2 * eta ^ 2 + 84 * si2 ^ 2 + 19 * eta - 12) / L ^ 8 / (eta ^ 9) * sin((2 * g + 7 * f)) + 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (54 * eta ^ 3 * si2 ^ 6 + 132 * eta ^ 2 * si2 ^ 6 - 108 * eta ^ 3 * si2 ^ 4 + 798 * eta * si2 ^ 6 - 264 * eta ^ 2 * si2 ^ 4 - 984 * si2 ^ 6 + 63 * eta ^ 3 * si2 ^ 2 - 1596 * eta * si2 ^ 4 + 174 * eta ^ 2 * si2 ^ 2 + 1968 * si2 ^ 4 - 9 * eta ^ 3 + 911 * eta * si2 ^ 2 - 38 * eta ^ 2 - 1148 * si2 ^ 2 - 117 * eta + 164) / L ^ 8 / (eta ^ 9) * sin((5 * f + 2 * g)) - sqrt((-eta ^ 2 + 1)) * (396 * eta ^ 4 * si2 ^ 8 - 2112 * eta ^ 3 * si2 ^ 8 - 792 * eta ^ 4 * si2 ^ 6 + 3024 * eta ^ 2 * si2 ^ 8 + 4224 * eta ^ 3 * si2 ^ 6 + 3120 * eta * si2 ^ 8 + 528 * eta ^ 4 * si2 ^ 4 - 6048 * eta ^ 2 * si2 ^ 6 - 4428 * si2 ^ 8 - 2388 * eta ^ 3 * si2 ^ 4 - 6240 * eta * si2 ^ 6 - 132 * eta ^ 4 * si2 ^ 2 + 3780 * eta ^ 2 * si2 ^ 4 + 8856 * si2 ^ 6 + 276 * eta ^ 3 * si2 ^ 2 + 3492 * eta * si2 ^ 4 + 11 * eta ^ 4 - 756 * eta ^ 2 * si2 ^ 2 - 5412 * si2 ^ 4 + 7 * eta ^ 3 - 372 * eta * si2 ^ 2 + 63 * eta ^ 2 + 984 * si2 ^ 2 + eta - 82) / L ^ 8 / (eta ^ 9) / (1 + eta) * sin((3 * f)) / 0.128e3 - 0.27e2 / 0.4e1 * (5 * eta * si2 ^ 6 - 5 * si2 ^ 6 - 10 * eta * si2 ^ 4 + 10 * si2 ^ 4 + 6 * eta * si2 ^ 2 - 6 * si2 ^ 2 - eta + 1) * (si2 ^ 2) * Delta / (eta ^ 8) / L ^ 8 * cos((2 * g)) + 0.27e2 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (eta ^ 2 * si2 ^ 4 - 2 * eta * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 + 4 * eta * si2 ^ 2 + eta ^ 2 - 2 * si2 ^ 2 - 2 * eta + 1) / L ^ 8 / (eta ^ 9) * sin((9 * f + 4 * g)) + 0.27e2 / 0.4e1 * (5 * eta * si2 ^ 6 - 5 * si2 ^ 6 - 10 * eta * si2 ^ 4 + 10 * si2 ^ 4 + 6 * eta * si2 ^ 2 - 6 * si2 ^ 2 - eta + 1) * (si2 ^ 2) * Delta / (eta ^ 8) / L ^ 8 * cos((2 * g + 4 * f)) + 0.27e2 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (eta ^ 2 * si2 ^ 4 - 2 * eta * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 + 4 * eta * si2 ^ 2 + eta ^ 2 - 2 * si2 ^ 2 - 2 * eta + 1) / L ^ 8 / (eta ^ 9) * sin((-4 * g + f)) + sqrt((-eta ^ 2 + 1)) * (66 * eta ^ 5 * si2 ^ 6 - 1692 * eta ^ 4 * si2 ^ 6 - 132 * eta ^ 5 * si2 ^ 4 - 1992 * eta ^ 3 * si2 ^ 6 + 3384 * eta ^ 4 * si2 ^ 4 + 5124 * eta ^ 2 * si2 ^ 6 + 77 * eta ^ 5 * si2 ^ 2 + 3984 * eta ^ 3 * si2 ^ 4 + 3750 * eta * si2 ^ 6 - 2032 * eta ^ 4 * si2 ^ 2 - 10248 * eta ^ 2 * si2 ^ 4 - 1944 * si2 ^ 6 - 11 * eta ^ 5 - 2710 * eta ^ 3 * si2 ^ 2 - 7500 * eta * si2 ^ 4 + 338 * eta ^ 4 + 5340 * eta ^ 2 * si2 ^ 2 + 3888 * si2 ^ 4 + 540 * eta ^ 3 + 4065 * eta * si2 ^ 2 - 622 * eta ^ 2 - 2268 * si2 ^ 2 - 545 * eta + 324) * (si2 ^ 2) / (0.64e2 * L ^ 8 * (eta ^ 11) + 0.128e3 * L ^ 8 * (eta ^ 10) + 0.64e2 * L ^ 8 * (eta ^ 9)) * sin((3 * f + 2 * g))) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t13 = ((0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (60 * ci2 ^ 6 * eta ^ 2 - 48 * ci2 ^ 6 * eta - 156 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 120 * ci2 ^ 4 * eta + 282 * ci2 ^ 4 + 40 * ci2 ^ 2 * eta ^ 2 - 88 * ci2 ^ 2 * eta - 160 * ci2 ^ 2 - 5 * eta ^ 2 + 20 * eta + 29) * si2 / (1 + eta) / ci2 / L ^ 8 / (eta ^ 8) * ch + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (4 * ci2 ^ 4 - 8 * ci2 ^ 2 + 3) * Delta * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh) * cos((f + 2 * g)) + (sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta ^ 2 + 912 * ci2 ^ 6 * eta + 1236 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta ^ 2 - 1512 * ci2 ^ 4 * eta - 1998 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta ^ 2 + 776 * ci2 ^ 2 * eta + 992 * ci2 ^ 2 - eta ^ 2 - 124 * eta - 151) * si2 / (1 + eta) / ci2 / L ^ 8 / (eta ^ 8) * ch / 0.64e2 + 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (4 * ci2 ^ 4 - 8 * ci2 ^ 2 + 3) * Delta * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh) * cos((3 * f + 2 * g)) + (-0.3e1 / 0.8e1 * si2 * (20 * ci2 ^ 6 * eta ^ 2 - 44 * ci2 ^ 6 - 34 * ci2 ^ 4 * eta ^ 2 + 70 * ci2 ^ 4 + 18 * ci2 ^ 2 * eta ^ 2 - 34 * ci2 ^ 2 - 3 * eta ^ 2 + 5) / (eta ^ 8) / L ^ 8 / ci2 * ch + 0.9e1 / 0.8e1 * si2 * Delta * (4 * ci2 ^ 4 - 8 * ci2 ^ 2 + 3) / (eta ^ 8) / L ^ 8 / ci2 * sh) * cos((2 * g + 2 * f)) + (-0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (20 * ci2 ^ 6 - 34 * ci2 ^ 4 + 18 * ci2 ^ 2 - 3) * Delta * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch + sqrt((-eta ^ 2 + 1)) * (144 * ci2 ^ 4 * eta + 144 * ci2 ^ 4 - 2 * ci2 ^ 2 * eta ^ 2 - 320 * ci2 ^ 2 * eta - 374 * ci2 ^ 2 + eta ^ 2 + 124 * eta + 151) * si2 / (1 + eta) / ci2 / L ^ 8 / (eta ^ 8) * sh / 0.64e2) * sin((3 * f + 2 * g)) + (-0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (20 * ci2 ^ 6 - 34 * ci2 ^ 4 + 18 * ci2 ^ 2 - 3) * Delta * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (48 * ci2 ^ 4 * eta + 48 * ci2 ^ 4 + 10 * ci2 ^ 2 * eta ^ 2 - 64 * ci2 ^ 2 * eta - 82 * ci2 ^ 2 - 5 * eta ^ 2 + 20 * eta + 29) * si2 / (1 + eta) / ci2 / L ^ 8 / (eta ^ 8) * sh) * sin((f + 2 * g)) + (-0.9e1 / 0.8e1 * si2 * Delta * (20 * ci2 ^ 6 - 34 * ci2 ^ 4 + 18 * ci2 ^ 2 - 3) / (eta ^ 8) / L ^ 8 / ci2 * ch - 0.3e1 / 0.8e1 * si2 * (4 * ci2 ^ 4 * eta ^ 2 - 4 * ci2 ^ 4 - 8 * ci2 ^ 2 * eta ^ 2 + 12 * ci2 ^ 2 + 3 * eta ^ 2 - 5) / (eta ^ 8) / L ^ 8 / ci2 * sh) * sin((2 * g + 2 * f)) - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh * sin((3 * f + 4 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 * eta - 2 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh * sin((5 * f + 2 * g)) - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh * sin((5 * f + 4 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 * eta - 2 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh * sin((-2 * g + f)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * cos((-2 * g + f)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * cos((5 * f + 2 * g)) + 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * cos((5 * f + 4 * g)) + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * cos((3 * f + 4 * g)) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (24 * ci2 ^ 6 - 36 * ci2 ^ 4 + 14 * ci2 ^ 2 - 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * cos(f) + si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / L ^ 8 / ci2 * sh * sin((6 * f + 4 * g)) / 0.16e2 - 0.3e1 / 0.8e1 * si2 * (12 * ci2 ^ 6 * eta ^ 2 - 12 * ci2 ^ 6 - 12 * ci2 ^ 4 * eta ^ 2 + 12 * ci2 ^ 4 + ci2 ^ 2 * eta ^ 2 - ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / L ^ 8 / ci2 * ch * cos((2 * f)) + 0.9e1 / 0.16e2 * si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / L ^ 8 / ci2 * sh * sin((2 * f + 4 * g)) - 0.3e1 / 0.32e2 * si2 * (8 * ci2 ^ 4 * eta ^ 2 - 8 * ci2 ^ 4 - 16 * ci2 ^ 2 * eta ^ 2 - 6 * ci2 ^ 2 * eta + 22 * ci2 ^ 2 + 6 * eta ^ 2 + 3 * eta - 9) / (eta ^ 8) / L ^ 8 / ci2 * sh * sin((2 * g + 4 * f)) - si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / L ^ 8 / ci2 * ch * cos((6 * f + 4 * g)) / 0.16e2 + 0.3e1 / 0.16e2 * si2 * (4 * ci2 ^ 4 * eta ^ 2 - 10 * ci2 ^ 4 - 6 * ci2 ^ 2 * eta ^ 2 + 15 * ci2 ^ 2 + 2 * eta ^ 2 - 5) / (eta ^ 8) / L ^ 8 / ci2 * sh * sin((4 * f + 4 * g)) - 0.9e1 / 0.16e2 * si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / L ^ 8 / ci2 * ch * cos((2 * f + 4 * g)) - 0.3e1 / 0.32e2 * si2 * (40 * ci2 ^ 6 * eta ^ 2 + 36 * ci2 ^ 6 * eta - 76 * ci2 ^ 6 - 68 * ci2 ^ 4 * eta ^ 2 - 54 * ci2 ^ 4 * eta + 122 * ci2 ^ 4 + 36 * ci2 ^ 2 * eta ^ 2 + 24 * ci2 ^ 2 * eta - 60 * ci2 ^ 2 - 6 * eta ^ 2 - 3 * eta + 9) / (eta ^ 8) / L ^ 8 / ci2 * ch * cos((2 * g + 4 * f)) + si2 * (264 * ci2 ^ 6 * eta ^ 2 + 108 * ci2 ^ 6 * eta - 372 * ci2 ^ 6 - 468 * ci2 ^ 4 * eta ^ 2 - 162 * ci2 ^ 4 * eta + 630 * ci2 ^ 4 + 260 * ci2 ^ 2 * eta ^ 2 + 72 * ci2 ^ 2 * eta - 332 * ci2 ^ 2 - 46 * eta ^ 2 - 9 * eta + 55) / (eta ^ 8) / L ^ 8 / ci2 * ch * cos((2 * g)) / 0.32e2 + si2 * (72 * ci2 ^ 4 * eta ^ 2 - 72 * ci2 ^ 4 - 128 * ci2 ^ 2 * eta ^ 2 - 18 * ci2 ^ 2 * eta + 146 * ci2 ^ 2 + 46 * eta ^ 2 + 9 * eta - 55) / (eta ^ 8) / L ^ 8 / ci2 * sh * sin((2 * g)) / 0.32e2 - 0.3e1 / 0.16e2 * si2 * (4 * ci2 ^ 4 * eta ^ 2 - 10 * ci2 ^ 4 - 6 * ci2 ^ 2 * eta ^ 2 + 15 * ci2 ^ 2 + 2 * eta ^ 2 - 5) / (eta ^ 8) / L ^ 8 / ci2 * ch * cos((4 * f + 4 * g)) - 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (4 * ci2 ^ 4 - 4 * ci2 ^ 2 + 1) * Delta * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * sin(f) - si2 * ((272 * ci2 ^ 6 * eta ^ 2) + 0.144e3 * Delta ^ 2 * (ci2 ^ 4) - (472 * ci2 ^ 6) - (480 * ci2 ^ 4 * eta ^ 2) - 0.144e3 * Delta ^ 2 * (ci2 ^ 2) + (780 * ci2 ^ 4) + (228 * ci2 ^ 2 * eta ^ 2) + 0.36e2 * Delta ^ 2 - (346 * ci2 ^ 2) - (28 * eta ^ 2) + 0.37e2) / (eta ^ 8) / L ^ 8 / ci2 * ch / 0.32e2) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t14 = ((0.3e1 / 0.8e1 * si2 * (4 * ci2 ^ 4 * eta ^ 2 - 4 * ci2 ^ 4 - 8 * ci2 ^ 2 * eta ^ 2 + 12 * ci2 ^ 2 + 3 * eta ^ 2 - 5) / (eta ^ 8) / (L ^ 8) / ci2 * ch - 0.9e1 / 0.8e1 * si2 * Delta * (20 * ci2 ^ 6 - 34 * ci2 ^ 4 + 18 * ci2 ^ 2 - 3) / (eta ^ 8) / (L ^ 8) / ci2 * sh) * sin((2 * g + 2 * f)) + (-0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (4 * ci2 ^ 4 - 8 * ci2 ^ 2 + 3) * Delta * si2 / ci2 / (L ^ 8) / (eta ^ 8) * ch + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (60 * ci2 ^ 6 * eta ^ 2 - 48 * ci2 ^ 6 * eta - 156 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 120 * ci2 ^ 4 * eta + 282 * ci2 ^ 4 + 40 * ci2 ^ 2 * eta ^ 2 - 88 * ci2 ^ 2 * eta - 160 * ci2 ^ 2 - 5 * eta ^ 2 + 20 * eta + 29) * si2 / (1 + eta) / ci2 / (L ^ 8) / (eta ^ 8) * sh) * cos((f + 2 * g)) + (-sqrt((-eta ^ 2 + 1)) * (144 * ci2 ^ 4 * eta + 144 * ci2 ^ 4 - 2 * ci2 ^ 2 * eta ^ 2 - 320 * ci2 ^ 2 * eta - 374 * ci2 ^ 2 + eta ^ 2 + 124 * eta + 151) * si2 / (1 + eta) / ci2 / (L ^ 8) / (eta ^ 8) * ch / 0.64e2 - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (20 * ci2 ^ 6 - 34 * ci2 ^ 4 + 18 * ci2 ^ 2 - 3) * Delta * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh) * sin((3 * f + 2 * g)) + (-0.9e1 / 0.8e1 * si2 * Delta * (4 * ci2 ^ 4 - 8 * ci2 ^ 2 + 3) / (eta ^ 8) / (L ^ 8) / ci2 * ch - 0.3e1 / 0.8e1 * si2 * (20 * ci2 ^ 6 * eta ^ 2 - 44 * ci2 ^ 6 - 34 * ci2 ^ 4 * eta ^ 2 + 70 * ci2 ^ 4 + 18 * ci2 ^ 2 * eta ^ 2 - 34 * ci2 ^ 2 - 3 * eta ^ 2 + 5) / (eta ^ 8) / (L ^ 8) / ci2 * sh) * cos((2 * g + 2 * f)) + (-0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (4 * ci2 ^ 4 - 8 * ci2 ^ 2 + 3) * Delta * si2 / ci2 / (L ^ 8) / (eta ^ 8) * ch + sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta ^ 2 + 912 * ci2 ^ 6 * eta + 1236 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta ^ 2 - 1512 * ci2 ^ 4 * eta - 1998 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta ^ 2 + 776 * ci2 ^ 2 * eta + 992 * ci2 ^ 2 - eta ^ 2 - 124 * eta - 151) * si2 / (1 + eta) / ci2 / (L ^ 8) / (eta ^ 8) * sh / 0.64e2) * cos((3 * f + 2 * g)) + (0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (48 * ci2 ^ 4 * eta + 48 * ci2 ^ 4 + 10 * ci2 ^ 2 * eta ^ 2 - 64 * ci2 ^ 2 * eta - 82 * ci2 ^ 2 - 5 * eta ^ 2 + 20 * eta + 29) * si2 / (1 + eta) / ci2 / (L ^ 8) / (eta ^ 8) * ch - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (20 * ci2 ^ 6 - 34 * ci2 ^ 4 + 18 * ci2 ^ 2 - 3) * Delta * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh) * sin((f + 2 * g)) + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * ch * sin((3 * f + 4 * g)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 * eta - 2 * ci2 ^ 2 - eta + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * ch * sin((5 * f + 2 * g)) + 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * ch * sin((5 * f + 4 * g)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 2 * eta - 2 * ci2 ^ 2 - eta + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * ch * sin((-2 * g + f)) + 0.3e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (24 * ci2 ^ 6 - 36 * ci2 ^ 4 + 14 * ci2 ^ 2 - 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh * cos(f) + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh * cos((3 * f + 4 * g)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh * cos((5 * f + 2 * g)) + 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh * cos((5 * f + 4 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh * cos((-2 * g + f)) - 0.3e1 / 0.8e1 * si2 * (12 * ci2 ^ 6 * eta ^ 2 - 12 * ci2 ^ 6 - 12 * ci2 ^ 4 * eta ^ 2 + 12 * ci2 ^ 4 + ci2 ^ 2 * eta ^ 2 - ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / (L ^ 8) / ci2 * sh * cos((2 * f)) - 0.9e1 / 0.16e2 * si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / (L ^ 8) / ci2 * ch * sin((2 * f + 4 * g)) + si2 * (264 * ci2 ^ 6 * eta ^ 2 + 108 * ci2 ^ 6 * eta - 372 * ci2 ^ 6 - 468 * ci2 ^ 4 * eta ^ 2 - 162 * ci2 ^ 4 * eta + 630 * ci2 ^ 4 + 260 * ci2 ^ 2 * eta ^ 2 + 72 * ci2 ^ 2 * eta - 332 * ci2 ^ 2 - 46 * eta ^ 2 - 9 * eta + 55) / (eta ^ 8) / (L ^ 8) / ci2 * sh * cos((2 * g)) / 0.32e2 - si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / (L ^ 8) / ci2 * sh * cos((6 * f + 4 * g)) / 0.16e2 - 0.3e1 / 0.16e2 * si2 * (4 * ci2 ^ 4 * eta ^ 2 - 10 * ci2 ^ 4 - 6 * ci2 ^ 2 * eta ^ 2 + 15 * ci2 ^ 2 + 2 * eta ^ 2 - 5) / (eta ^ 8) / (L ^ 8) / ci2 * ch * sin((4 * f + 4 * g)) - si2 * (72 * ci2 ^ 4 * eta ^ 2 - 72 * ci2 ^ 4 - 128 * ci2 ^ 2 * eta ^ 2 - 18 * ci2 ^ 2 * eta + 146 * ci2 ^ 2 + 46 * eta ^ 2 + 9 * eta - 55) / (eta ^ 8) / (L ^ 8) / ci2 * ch * sin((2 * g)) / 0.32e2 - 0.3e1 / 0.16e2 * si2 * (4 * ci2 ^ 4 * eta ^ 2 - 10 * ci2 ^ 4 - 6 * ci2 ^ 2 * eta ^ 2 + 15 * ci2 ^ 2 + 2 * eta ^ 2 - 5) / (eta ^ 8) / (L ^ 8) / ci2 * sh * cos((4 * f + 4 * g)) - si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / (L ^ 8) / ci2 * ch * sin((6 * f + 4 * g)) / 0.16e2 - 0.9e1 / 0.16e2 * si2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) / (eta ^ 8) / (L ^ 8) / ci2 * sh * cos((2 * f + 4 * g)) + 0.3e1 / 0.32e2 * si2 * (8 * ci2 ^ 4 * eta ^ 2 - 8 * ci2 ^ 4 - 16 * ci2 ^ 2 * eta ^ 2 - 6 * ci2 ^ 2 * eta + 22 * ci2 ^ 2 + 6 * eta ^ 2 + 3 * eta - 9) / (eta ^ 8) / (L ^ 8) / ci2 * ch * sin((2 * g + 4 * f)) - 0.3e1 / 0.32e2 * si2 * (40 * ci2 ^ 6 * eta ^ 2 + 36 * ci2 ^ 6 * eta - 76 * ci2 ^ 6 - 68 * ci2 ^ 4 * eta ^ 2 - 54 * ci2 ^ 4 * eta + 122 * ci2 ^ 4 + 36 * ci2 ^ 2 * eta ^ 2 + 24 * ci2 ^ 2 * eta - 60 * ci2 ^ 2 - 6 * eta ^ 2 - 3 * eta + 9) / (eta ^ 8) / (L ^ 8) / ci2 * sh * cos((2 * g + 4 * f)) - 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (4 * ci2 ^ 4 - 4 * ci2 ^ 2 + 1) * Delta * si2 / ci2 / (L ^ 8) / (eta ^ 8) * sh * sin(f) - (si2 * (272 * ci2 ^ 6 * eta ^ 2 + 144 * Delta ^ 2 * ci2 ^ 4 - 472 * ci2 ^ 6 - 480 * ci2 ^ 4 * eta ^ 2 - 144 * Delta ^ 2 * ci2 ^ 2 + 780 * ci2 ^ 4 + 228 * ci2 ^ 2 * eta ^ 2 + 36 * Delta ^ 2 - 346 * ci2 ^ 2 - 28 * eta ^ 2 + 37) / eta ^ 8 / L ^ 8 / ci2 * sh) / 0.32e2) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t15 = (((3 * si2 ^ 2 * (150 * eta ^ 4 * si2 ^ 6 - 878 * eta ^ 3 * si2 ^ 6 - 252 * eta ^ 4 * si2 ^ 4 - 1598 * eta ^ 2 * si2 ^ 6 + 1594 * eta ^ 3 * si2 ^ 4 + 854 * eta * si2 ^ 6 + 129 * eta ^ 4 * si2 ^ 2 + 2986 * eta ^ 2 * si2 ^ 4 + 1472 * si2 ^ 6 - 881 * eta ^ 3 * si2 ^ 2 - 1546 * eta * si2 ^ 4 - 14 * eta ^ 4 - 1693 * eta ^ 2 * si2 ^ 2 - 2782 * si2 ^ 4 + 147 * eta ^ 3 + 853 * eta * si2 ^ 2 + 265 * eta ^ 2 + 1592 * si2 ^ 2 - 143 * eta - 255) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) - 0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 6 - 234 * eta ^ 2 * si2 ^ 4 - 140 * si2 ^ 6 + 121 * eta ^ 2 * si2 ^ 2 + 234 * si2 ^ 4 - 17 * eta ^ 2 - 121 * si2 ^ 2 + 17) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + f)) + (((-426 * eta ^ 4 * si2 ^ 8 - 54 * eta ^ 3 * si2 ^ 8 + 804 * eta ^ 4 * si2 ^ 6 - 246 * eta ^ 2 * si2 ^ 8 - 120 * eta ^ 3 * si2 ^ 6 - 114 * eta * si2 ^ 8 - 501 * eta ^ 4 * si2 ^ 4 + 312 * eta ^ 2 * si2 ^ 6 + 840 * si2 ^ 8 - 213 * eta ^ 3 * si2 ^ 4 + 456 * eta * si2 ^ 6 + 114 * eta ^ 4 * si2 ^ 2 - 649 * eta ^ 2 * si2 ^ 4 - 1452 * si2 ^ 6 + 297 * eta ^ 3 * si2 ^ 2 + 17 * eta * si2 ^ 4 - 7 * eta ^ 4 + 475 * eta ^ 2 * si2 ^ 2 + 1346 * si2 ^ 4 - 49 * eta ^ 3 - 269 * eta * si2 ^ 2 - 69 * eta ^ 2 - 617 * si2 ^ 2 + 49 * eta + 76) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) + 0.3e1 / 0.16e2 * (180 * eta ^ 2 * si2 ^ 8 - 326 * eta ^ 2 * si2 ^ 6 - 180 * si2 ^ 8 + 181 * eta ^ 2 * si2 ^ 4 + 326 * si2 ^ 6 - 31 * eta ^ 2 * si2 ^ 2 - 181 * si2 ^ 4 + eta ^ 2 + 31 * si2 ^ 2 - 1) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((g + 3 * f)) + (-0.9e1 / 0.16e2 * (20 * eta ^ 2 * si2 ^ 6 - 38 * eta ^ 2 * si2 ^ 4 - 20 * si2 ^ 6 + 21 * eta ^ 2 * si2 ^ 2 + 38 * si2 ^ 4 - 3 * eta ^ 2 - 21 * si2 ^ 2 + 3) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch - 0.3e1 / 0.64e2 * (18 * eta ^ 3 * si2 ^ 6 + 740 * eta ^ 2 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 4 + 378 * eta * si2 ^ 6 - 1370 * eta ^ 2 * si2 ^ 4 - 1136 * si2 ^ 6 + 19 * eta ^ 3 * si2 ^ 2 - 756 * eta * si2 ^ 4 + 738 * eta ^ 2 * si2 ^ 2 + 2162 * si2 ^ 4 - 2 * eta ^ 3 + 443 * eta * si2 ^ 2 - 101 * eta ^ 2 - 1200 * si2 ^ 2 - 64 * eta + 167) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh) * sin((3 * g + 5 * f)) + (-0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * eta ^ 2 * si2 ^ 8 + 300 * eta * si2 ^ 8 - 216 * eta ^ 2 * si2 ^ 6 + 300 * si2 ^ 8 - 522 * eta * si2 ^ 6 + 128 * eta ^ 2 * si2 ^ 4 - 522 * si2 ^ 6 + 293 * eta * si2 ^ 4 - 28 * eta ^ 2 * si2 ^ 2 + 293 * si2 ^ 4 - 61 * eta * si2 ^ 2 + 2 * eta ^ 2 - 61 * si2 ^ 2 + 5 * eta + 5) / (L ^ 8) / (eta ^ 8) / (1 + eta) * ch + sqrt((-eta ^ 2 + 1)) * (3600 * Delta ^ 2 * eta ^ 2 * si2 ^ 8 - 3330 * eta ^ 4 * si2 ^ 8 + 7200 * Delta ^ 2 * eta * si2 ^ 8 - 8046 * eta ^ 3 * si2 ^ 8 - 5760 * Delta ^ 2 * eta ^ 2 * si2 ^ 6 + 3600 * Delta ^ 2 * si2 ^ 8 + 5654 * eta ^ 4 * si2 ^ 6 + 1022 * eta ^ 2 * si2 ^ 8 - 11520 * Delta ^ 2 * eta * si2 ^ 6 + 14080 * eta ^ 3 * si2 ^ 6 + 13402 * eta * si2 ^ 8 + 3024 * Delta ^ 2 * eta ^ 2 * si2 ^ 4 - 5760 * Delta ^ 2 * si2 ^ 6 - 2952 * eta ^ 4 * si2 ^ 4 - 1188 * eta ^ 2 * si2 ^ 6 + 7808 * si2 ^ 8 + 6048 * Delta ^ 2 * eta * si2 ^ 4 - 7647 * eta ^ 3 * si2 ^ 4 - 23080 * eta * si2 ^ 6 - 576 * Delta ^ 2 * eta ^ 2 * si2 ^ 2 + 3024 * Delta ^ 2 * si2 ^ 4 + 455 * eta ^ 4 * si2 ^ 2 + 90 * eta ^ 2 * si2 ^ 4 - 13754 * si2 ^ 6 - 1152 * Delta ^ 2 * eta * si2 ^ 2 + 1276 * eta ^ 3 * si2 ^ 2 + 12039 * eta * si2 ^ 4 + 36 * Delta ^ 2 * eta ^ 2 - 576 * Delta ^ 2 * si2 ^ 2 - 15 * eta ^ 4 + 229 * eta ^ 2 * si2 ^ 2 + 7446 * si2 ^ 4 + 72 * Delta ^ 2 * eta - 54 * eta ^ 3 - 1736 * eta * si2 ^ 2 + 36 * Delta ^ 2 - 60 * eta ^ 2 - 1192 * si2 ^ 2 - 2 * eta + 23) / (32 * L ^ 8 * eta ^ 10 + 64 * L ^ 8 * eta ^ 9 + 32 * L ^ 8 * eta ^ 8) * sh) * sin(g) + (0.3e1 / 0.64e2 * (18 * eta ^ 3 * si2 ^ 6 + 748 * eta ^ 2 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 4 + 378 * eta * si2 ^ 6 - 1390 * eta ^ 2 * si2 ^ 4 - 1144 * si2 ^ 6 + 19 * eta ^ 3 * si2 ^ 2 - 756 * eta * si2 ^ 4 + 750 * eta ^ 2 * si2 ^ 2 + 2182 * si2 ^ 4 - 2 * eta ^ 3 + 443 * eta * si2 ^ 2 - 101 * eta ^ 2 - 1212 * si2 ^ 2 - 64 * eta + 167) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch - 0.9e1 / 0.16e2 * (20 * eta ^ 2 * si2 ^ 6 - 38 * eta ^ 2 * si2 ^ 4 - 20 * si2 ^ 6 + 21 * eta ^ 2 * si2 ^ 2 + 38 * si2 ^ 4 - 3 * eta ^ 2 - 21 * si2 ^ 2 + 3) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + 5 * f)) + (-0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 6 - 234 * eta ^ 2 * si2 ^ 4 - 140 * si2 ^ 6 + 121 * eta ^ 2 * si2 ^ 2 + 234 * si2 ^ 4 - 17 * eta ^ 2 - 121 * si2 ^ 2 + 17) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch - (3 * si2 ^ 2 * (150 * eta ^ 4 * si2 ^ 6 - 1078 * eta ^ 3 * si2 ^ 6 - 252 * eta ^ 4 * si2 ^ 4 - 1798 * eta ^ 2 * si2 ^ 6 + 1910 * eta ^ 3 * si2 ^ 4 + 1054 * eta * si2 ^ 6 + 129 * eta ^ 4 * si2 ^ 2 + 3302 * eta ^ 2 * si2 ^ 4 + 1672 * si2 ^ 6 - 997 * eta ^ 3 * si2 ^ 2 - 1862 * eta * si2 ^ 4 - 14 * eta ^ 4 - 1809 * eta ^ 2 * si2 ^ 2 - 3098 * si2 ^ 4 + 147 * eta ^ 3 + 969 * eta * si2 ^ 2 + 265 * eta ^ 2 + 1708 * si2 ^ 2 - 143 * eta - 255) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * sin((3 * g + f)) + (0.3e1 / 0.64e2 * (120 * eta ^ 3 * si2 ^ 6 + 1346 * eta ^ 2 * si2 ^ 6 - 224 * eta ^ 3 * si2 ^ 4 - 324 * eta * si2 ^ 6 - 2308 * eta ^ 2 * si2 ^ 4 - 1822 * si2 ^ 6 + 122 * eta ^ 3 * si2 ^ 2 + 648 * eta * si2 ^ 4 + 1199 * eta ^ 2 * si2 ^ 2 + 3076 * si2 ^ 4 - 15 * eta ^ 3 - 360 * eta * si2 ^ 2 - 156 * eta ^ 2 - 1557 * si2 ^ 2 + 45 * eta + 186) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch - 0.3e1 / 0.8e1 * (120 * eta ^ 2 * si2 ^ 6 - 212 * eta ^ 2 * si2 ^ 4 - 400 * si2 ^ 6 + 113 * eta ^ 2 * si2 ^ 2 + 744 * si2 ^ 4 - 16 * eta ^ 2 - 407 * si2 ^ 2 + 58) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + 3 * f)) + (-0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (2 * si2 ^ 6 + 4 * si2 ^ 4 - 5 * si2 ^ 2 + 1) / (eta ^ 8) / (L ^ 8) * ch + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (278 * eta ^ 3 * si2 ^ 8 + 140 * eta ^ 2 * si2 ^ 8 - 434 * eta ^ 3 * si2 ^ 6 - 818 * eta * si2 ^ 8 - 134 * eta ^ 2 * si2 ^ 6 - 656 * si2 ^ 8 + 218 * eta ^ 3 * si2 ^ 4 + 1502 * eta * si2 ^ 6 + eta ^ 2 * si2 ^ 4 + 1178 * si2 ^ 6 - 41 * eta ^ 3 * si2 ^ 2 - 960 * eta * si2 ^ 4 + 18 * eta ^ 2 * si2 ^ 2 - 771 * si2 ^ 4 + 3 * eta ^ 3 + 253 * eta * si2 ^ 2 - 3 * eta ^ 2 + 226 * si2 ^ 2 - 26 * eta - 26) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sh) * sin((g + 2 * f)) + (0.27e2 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (20 * si2 ^ 6 - 38 * si2 ^ 4 + 21 * si2 ^ 2 - 3) / (eta ^ 8) / (L ^ 8) * ch - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (209 * eta ^ 3 * si2 ^ 6 + 167 * eta ^ 2 * si2 ^ 6 - 359 * eta ^ 3 * si2 ^ 4 - 958 * eta * si2 ^ 6 - 275 * eta ^ 2 * si2 ^ 4 - 1120 * si2 ^ 6 + 186 * eta ^ 3 * si2 ^ 2 + 1745 * eta * si2 ^ 4 + 143 * eta ^ 2 * si2 ^ 2 + 2069 * si2 ^ 4 - 25 * eta ^ 3 - 930 * eta * si2 ^ 2 - 21 * eta ^ 2 - 1125 * si2 ^ 2 + 122 * eta + 152) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sh) * sin((4 * f + 3 * g)) + (0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (199 * eta ^ 3 * si2 ^ 6 + 157 * eta ^ 2 * si2 ^ 6 - 345 * eta ^ 3 * si2 ^ 4 - 966 * eta * si2 ^ 6 - 261 * eta ^ 2 * si2 ^ 4 - 1128 * si2 ^ 6 + 182 * eta ^ 3 * si2 ^ 2 + 1759 * eta * si2 ^ 4 + 139 * eta ^ 2 * si2 ^ 2 + 2083 * si2 ^ 4 - 25 * eta ^ 3 - 936 * eta * si2 ^ 2 - 21 * eta ^ 2 - 1131 * si2 ^ 2 + 122 * eta + 152) / (L ^ 8) / (eta ^ 8) / (1 + eta) * ch + 0.27e2 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (20 * si2 ^ 6 - 38 * si2 ^ 4 + 21 * si2 ^ 2 - 3) / (eta ^ 8) / (L ^ 8) * sh) * cos((4 * f + 3 * g)) + (0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (140 * si2 ^ 6 - 250 * si2 ^ 4 + 134 * si2 ^ 2 - 19) / (eta ^ 8) / (L ^ 8) * ch - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (251 * eta ^ 3 * si2 ^ 6 + 29 * eta ^ 2 * si2 ^ 6 - 409 * eta ^ 3 * si2 ^ 4 - 229 * eta * si2 ^ 6 + 11 * eta ^ 2 * si2 ^ 4 + 185 * si2 ^ 6 + 206 * eta ^ 3 * si2 ^ 2 + 319 * eta * si2 ^ 4 - 25 * eta ^ 2 * si2 ^ 2 - 509 * si2 ^ 4 - 27 * eta ^ 3 - 148 * eta * si2 ^ 2 + 2 * eta ^ 2 + 335 * si2 ^ 2 + 7 * eta - 62) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sh) * sin((2 * f + 3 * g)) + (0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 8 - 214 * eta ^ 2 * si2 ^ 6 - 140 * si2 ^ 8 + 107 * eta ^ 2 * si2 ^ 4 + 214 * si2 ^ 6 - 19 * eta ^ 2 * si2 ^ 2 - 107 * si2 ^ 4 + eta ^ 2 + 19 * si2 ^ 2 - 1) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((486 * eta ^ 4 * si2 ^ 8 + 5226 * eta ^ 3 * si2 ^ 8 - 684 * eta ^ 4 * si2 ^ 6 + 5874 * eta ^ 2 * si2 ^ 8 - 9336 * eta ^ 3 * si2 ^ 6 - 4794 * eta * si2 ^ 8 + 303 * eta ^ 4 * si2 ^ 4 - 10920 * eta ^ 2 * si2 ^ 6 - 6792 * si2 ^ 8 + 5163 * eta ^ 3 * si2 ^ 4 + 8472 * eta * si2 ^ 6 - 54 * eta ^ 4 * si2 ^ 2 + 6339 * eta ^ 2 * si2 ^ 4 + 12468 * si2 ^ 6 - 843 * eta ^ 3 * si2 ^ 2 - 4587 * eta * si2 ^ 4 + 3 * eta ^ 4 - 1137 * eta ^ 2 * si2 ^ 2 - 7218 * si2 ^ 4 + 9 * eta ^ 3 + 699 * eta * si2 ^ 2 + 33 * eta ^ 2 + 1335 * si2 ^ 2 + 3 * eta - 48) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * sin((f - g)) + (0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (229 * eta ^ 3 * si2 ^ 6 + 7 * eta ^ 2 * si2 ^ 6 - 375 * eta ^ 3 * si2 ^ 4 - 331 * eta * si2 ^ 6 + 45 * eta ^ 2 * si2 ^ 4 + 83 * si2 ^ 6 + 194 * eta ^ 3 * si2 ^ 2 + 473 * eta * si2 ^ 4 - 37 * eta ^ 2 * si2 ^ 2 - 355 * si2 ^ 4 - 27 * eta ^ 3 - 200 * eta * si2 ^ 2 + 2 * eta ^ 2 + 283 * si2 ^ 2 + 7 * eta - 62) / (L ^ 8) / (eta ^ 8) / (1 + eta) * ch + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (140 * si2 ^ 6 - 250 * si2 ^ 4 + 134 * si2 ^ 2 - 19) / (eta ^ 8) / (L ^ 8) * sh) * cos((2 * f + 3 * g)) + (-0.3e1 / 0.8e1 * (120 * eta ^ 2 * si2 ^ 6 - 212 * eta ^ 2 * si2 ^ 4 - 400 * si2 ^ 6 + 113 * eta ^ 2 * si2 ^ 2 + 744 * si2 ^ 4 - 16 * eta ^ 2 - 407 * si2 ^ 2 + 58) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch - 0.3e1 / 0.64e2 * (120 * eta ^ 3 * si2 ^ 6 + 1330 * eta ^ 2 * si2 ^ 6 - 224 * eta ^ 3 * si2 ^ 4 - 324 * eta * si2 ^ 6 - 2276 * eta ^ 2 * si2 ^ 4 - 1742 * si2 ^ 6 + 122 * eta ^ 3 * si2 ^ 2 + 648 * eta * si2 ^ 4 + 1183 * eta ^ 2 * si2 ^ 2 + 2964 * si2 ^ 4 - 15 * eta ^ 3 - 360 * eta * si2 ^ 2 - 156 * eta ^ 2 - 1525 * si2 ^ 2 + 45 * eta + 186) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh) * sin((3 * g + 3 * f)) + (0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (10 * eta ^ 3 * si2 ^ 8 + 304 * eta ^ 2 * si2 ^ 8 - 78 * eta ^ 3 * si2 ^ 6 + 818 * eta * si2 ^ 8 - 642 * eta ^ 2 * si2 ^ 6 + 980 * si2 ^ 8 + 38 * eta ^ 3 * si2 ^ 4 - 1350 * eta * si2 ^ 6 + 397 * eta ^ 2 * si2 ^ 4 - 1674 * si2 ^ 6 + 11 * eta ^ 3 * si2 ^ 2 + 860 * eta * si2 ^ 4 - 74 * eta ^ 2 * si2 ^ 2 + 1049 * si2 ^ 4 - 3 * eta ^ 3 - 263 * eta * si2 ^ 2 + 3 * eta ^ 2 - 290 * si2 ^ 2 + 26 * eta + 26) / (L ^ 8) / (eta ^ 8) / (1 + eta) * ch - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * si2 ^ 8 - 218 * si2 ^ 6 + 124 * si2 ^ 4 - 23 * si2 ^ 2 + 1) / (eta ^ 8) / (L ^ 8) * sh) * cos((g + 2 * f)) + (0.9e1 / 0.8e1 * (40 * eta ^ 2 * si2 ^ 8 - 52 * eta ^ 2 * si2 ^ 6 - 160 * si2 ^ 8 + 27 * eta ^ 2 * si2 ^ 4 + 264 * si2 ^ 6 - 8 * eta ^ 2 * si2 ^ 2 - 149 * si2 ^ 4 + eta ^ 2 + 34 * si2 ^ 2 - 3) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((1224 * eta ^ 3 * si2 ^ 8 - 5406 * eta ^ 2 * si2 ^ 8 - 2304 * eta ^ 3 * si2 ^ 6 - 4212 * eta * si2 ^ 8 + 9516 * eta ^ 2 * si2 ^ 6 + 7410 * si2 ^ 8 + 1410 * eta ^ 3 * si2 ^ 4 + 8424 * eta * si2 ^ 6 - 4767 * eta ^ 2 * si2 ^ 4 - 13140 * si2 ^ 6 - 321 * eta ^ 3 * si2 ^ 2 - 5292 * eta * si2 ^ 4 + 492 * eta ^ 2 * si2 ^ 2 + 6405 * si2 ^ 4 + 30 * eta ^ 3 + 1107 * eta * si2 ^ 2 + 33 * eta ^ 2 - 474 * si2 ^ 2 - 72 * eta - 99) / eta ^ 8 / L ^ 8 * sh) / 0.64e2) * sin((f + g)) + (-sqrt((-eta ^ 2 + 1)) * (3600 * Delta ^ 2 * eta ^ 2 * si2 ^ 8 - 1626 * eta ^ 4 * si2 ^ 8 + 7200 * Delta ^ 2 * eta * si2 ^ 8 - 3594 * eta ^ 3 * si2 ^ 8 - 5760 * Delta ^ 2 * eta ^ 2 * si2 ^ 6 + 3600 * Delta ^ 2 * si2 ^ 8 + 2726 * eta ^ 4 * si2 ^ 6 - 538 * eta ^ 2 * si2 ^ 8 - 11520 * Delta ^ 2 * eta * si2 ^ 6 + 6136 * eta ^ 3 * si2 ^ 6 + 3814 * eta * si2 ^ 8 + 3024 * Delta ^ 2 * eta ^ 2 * si2 ^ 4 - 5760 * Delta ^ 2 * si2 ^ 6 - 1464 * eta ^ 4 * si2 ^ 4 + 1428 * eta ^ 2 * si2 ^ 6 + 2528 * si2 ^ 8 + 6048 * Delta ^ 2 * eta * si2 ^ 4 - 3489 * eta ^ 3 * si2 ^ 4 - 5872 * eta * si2 ^ 6 - 576 * Delta ^ 2 * eta ^ 2 * si2 ^ 2 + 3024 * Delta ^ 2 * si2 ^ 4 + 245 * eta ^ 4 * si2 ^ 2 - 1442 * eta ^ 2 * si2 ^ 4 - 4178 * si2 ^ 6 - 1152 * Delta ^ 2 * eta * si2 ^ 2 + 700 * eta ^ 3 * si2 ^ 2 + 2537 * eta * si2 ^ 4 + 36 * Delta ^ 2 * eta ^ 2 - 576 * Delta ^ 2 * si2 ^ 2 - 15 * eta ^ 4 + 579 * eta ^ 2 * si2 ^ 2 + 2146 * si2 ^ 4 + 72 * Delta ^ 2 * eta - 54 * eta ^ 3 - 160 * eta * si2 ^ 2 + 36 * Delta ^ 2 - 60 * eta ^ 2 - 332 * si2 ^ 2 - 2 * eta + 23) / (32 * L ^ 8 * eta ^ 10 + 64 * L ^ 8 * eta ^ 9 + 32 * L ^ 8 * eta ^ 8) * ch - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * eta ^ 2 * si2 ^ 8 + 300 * eta * si2 ^ 8 - 216 * eta ^ 2 * si2 ^ 6 + 300 * si2 ^ 8 - 558 * eta * si2 ^ 6 + 128 * eta ^ 2 * si2 ^ 4 - 558 * si2 ^ 6 + 347 * eta * si2 ^ 4 - 28 * eta ^ 2 * si2 ^ 2 + 347 * si2 ^ 4 - 79 * eta * si2 ^ 2 + 2 * eta ^ 2 - 79 * si2 ^ 2 + 5 * eta + 5) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sh) * cos(g) + (-0.3e1 / 0.16e2 * (60 * eta ^ 2 * si2 ^ 8 - 110 * eta ^ 2 * si2 ^ 6 - 60 * si2 ^ 8 + 53 * eta ^ 2 * si2 ^ 4 + 110 * si2 ^ 6 - 3 * eta ^ 2 * si2 ^ 2 - 53 * si2 ^ 4 - eta ^ 2 + 3 * si2 ^ 2 + 1) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((78 * eta ^ 4 * si2 ^ 8 + 2874 * eta ^ 3 * si2 ^ 8 - 204 * eta ^ 4 * si2 ^ 6 + 4122 * eta ^ 2 * si2 ^ 8 - 5256 * eta ^ 3 * si2 ^ 6 - 3042 * eta * si2 ^ 8 + 171 * eta ^ 4 * si2 ^ 4 - 7704 * eta ^ 2 * si2 ^ 6 - 4032 * si2 ^ 8 + 3099 * eta ^ 3 * si2 ^ 4 + 5592 * eta * si2 ^ 6 - 54 * eta ^ 4 * si2 ^ 2 + 4583 * eta ^ 2 * si2 ^ 4 + 7572 * si2 ^ 6 - 663 * eta ^ 3 * si2 ^ 2 - 3295 * eta * si2 ^ 4 + 7 * eta ^ 4 - 965 * eta ^ 2 * si2 ^ 2 - 4558 * si2 ^ 4 + 49 * eta ^ 3 + 691 * eta * si2 ^ 2 + 69 * eta ^ 2 + 991 * si2 ^ 2 - 49 * eta - 76) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * sin((g + 3 * f)) + (((882 * eta ^ 4 * si2 ^ 8 + 3318 * eta ^ 3 * si2 ^ 8 - 1476 * eta ^ 4 * si2 ^ 6 + 3246 * eta ^ 2 * si2 ^ 8 - 5592 * eta ^ 3 * si2 ^ 6 - 2886 * eta * si2 ^ 8 + 753 * eta ^ 4 * si2 ^ 4 - 5736 * eta ^ 2 * si2 ^ 6 - 4560 * si2 ^ 8 + 2709 * eta ^ 3 * si2 ^ 4 + 4728 * eta * si2 ^ 6 - 114 * eta ^ 4 * si2 ^ 2 + 3069 * eta ^ 2 * si2 ^ 4 + 8076 * si2 ^ 6 - 309 * eta ^ 3 * si2 ^ 2 - 2133 * eta * si2 ^ 4 + 3 * eta ^ 4 - 495 * eta ^ 2 * si2 ^ 2 - 4398 * si2 ^ 4 + 9 * eta ^ 3 + 165 * eta * si2 ^ 2 + 33 * eta ^ 2 + 753 * si2 ^ 2 + 3 * eta - 48) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) - 0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 8 - 210 * eta ^ 2 * si2 ^ 6 - 140 * si2 ^ 8 + 101 * eta ^ 2 * si2 ^ 4 + 210 * si2 ^ 6 - 17 * eta ^ 2 * si2 ^ 2 - 101 * si2 ^ 4 + eta ^ 2 + 17 * si2 ^ 2 - 1) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((f - g)) + (((-2088 * eta ^ 3 * si2 ^ 8 + 330 * eta ^ 2 * si2 ^ 8 + 3744 * eta ^ 3 * si2 ^ 6 + 972 * eta * si2 ^ 8 - 1092 * eta ^ 2 * si2 ^ 6 + 4794 * si2 ^ 8 - 2238 * eta ^ 3 * si2 ^ 4 - 1944 * eta * si2 ^ 6 + 561 * eta ^ 2 * si2 ^ 4 - 8388 * si2 ^ 6 + 495 * eta ^ 3 * si2 ^ 2 + 1620 * eta * si2 ^ 4 + 132 * eta ^ 2 * si2 ^ 2 + 5109 * si2 ^ 4 - 30 * eta ^ 3 - 621 * eta * si2 ^ 2 - 33 * eta ^ 2 - 1314 * si2 ^ 2 + 72 * eta + 99) / eta ^ 8 / L ^ 8 * ch) / 0.64e2 + 0.9e1 / 0.8e1 * (160 * eta ^ 2 * si2 ^ 8 - 268 * eta ^ 2 * si2 ^ 6 - 280 * si2 ^ 8 + 141 * eta ^ 2 * si2 ^ 4 + 488 * si2 ^ 6 - 24 * eta ^ 2 * si2 ^ 2 - 275 * si2 ^ 4 + eta ^ 2 + 54 * si2 ^ 2 - 3) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((f + g)) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (1053 * eta ^ 3 * si2 ^ 6 + 1251 * eta ^ 2 * si2 ^ 6 - 1755 * eta ^ 3 * si2 ^ 4 - 999 * eta * si2 ^ 6 - 2151 * eta ^ 2 * si2 ^ 4 - 1305 * si2 ^ 6 + 906 * eta ^ 3 * si2 ^ 2 + 1647 * eta * si2 ^ 4 + 1155 * eta ^ 2 * si2 ^ 2 + 2259 * si2 ^ 4 - 131 * eta ^ 3 - 843 * eta * si2 ^ 2 - 173 * eta ^ 2 - 1218 * si2 ^ 2 + 122 * eta + 182) / (L ^ 8) / (eta ^ 8) / (1 + eta) * ch * cos((3 * g)) / 0.32e2 + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (1083 * eta ^ 3 * si2 ^ 6 + 1281 * eta ^ 2 * si2 ^ 6 - 1797 * eta ^ 3 * si2 ^ 4 - 1029 * eta * si2 ^ 6 - 2193 * eta ^ 2 * si2 ^ 4 - 1335 * si2 ^ 6 + 918 * eta ^ 3 * si2 ^ 2 + 1689 * eta * si2 ^ 4 + 1167 * eta ^ 2 * si2 ^ 2 + 2301 * si2 ^ 4 - 131 * eta ^ 3 - 855 * eta * si2 ^ 2 - 173 * eta ^ 2 - 1230 * si2 ^ 2 + 122 * eta + 182) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sh * sin((3 * g)) / 0.32e2 - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (90 * eta ^ 3 * si2 ^ 8 + 84 * eta ^ 2 * si2 ^ 8 - 110 * eta ^ 3 * si2 ^ 6 - 126 * eta * si2 ^ 8 - 98 * eta ^ 2 * si2 ^ 6 - 48 * si2 ^ 8 + 50 * eta ^ 3 * si2 ^ 4 + 182 * eta * si2 ^ 6 + 43 * eta ^ 2 * si2 ^ 4 + 26 * si2 ^ 6 - 13 * eta ^ 3 * si2 ^ 2 - 98 * eta * si2 ^ 4 - 12 * eta ^ 2 * si2 ^ 2 + 5 * si2 ^ 4 + eta ^ 3 + 25 * eta * si2 ^ 2 + eta ^ 2 - 2 * eta) / (L ^ 8) / (eta ^ 8) / (1 + eta) * ch * cos((-g + 2 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (3 * eta ^ 2 * si2 ^ 4 - 5 * eta ^ 2 * si2 ^ 2 - 3 * si2 ^ 4 + 2 * eta ^ 2 + 5 * si2 ^ 2 - 2) / (eta ^ 8) / (L ^ 8) * ch * cos((8 * f + 5 * g)) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (93 * eta ^ 2 * si2 ^ 4 - 159 * eta ^ 2 * si2 ^ 2 - 351 * si2 ^ 4 + 68 * eta ^ 2 + 593 * si2 ^ 2 - 244) / (eta ^ 8) / (L ^ 8) * ch * cos((6 * f + 5 * g)) / 0.32e2 + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (169 * eta ^ 2 * si2 ^ 6 + 198 * eta * si2 ^ 6 - 315 * eta ^ 2 * si2 ^ 4 - 367 * si2 ^ 6 - 396 * eta * si2 ^ 4 + 170 * eta ^ 2 * si2 ^ 2 + 711 * si2 ^ 4 + 231 * eta * si2 ^ 2 - 23 * eta ^ 2 - 401 * si2 ^ 2 - 33 * eta + 56) / (eta ^ 8) / (L ^ 8) * ch * cos((3 * g + 6 * f)) / 0.32e2 + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (85 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 364 * si2 ^ 4 + 58 * eta ^ 2 + 609 * si2 ^ 2 - 255) / (eta ^ 8) / (L ^ 8) * sh * sin((5 * g + 4 * f)) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (167 * eta ^ 2 * si2 ^ 6 + 198 * eta * si2 ^ 6 - 309 * eta ^ 2 * si2 ^ 4 - 365 * si2 ^ 6 - 396 * eta * si2 ^ 4 + 166 * eta ^ 2 * si2 ^ 2 + 705 * si2 ^ 4 + 231 * eta * si2 ^ 2 - 23 * eta ^ 2 - 397 * si2 ^ 2 - 33 * eta + 56) / (eta ^ 8) / (L ^ 8) * sh * sin((3 * g + 6 * f)) / 0.32e2 + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (118 * eta ^ 3 * si2 ^ 8 + 256 * eta ^ 2 * si2 ^ 8 - 210 * eta ^ 3 * si2 ^ 6 - 136 * eta * si2 ^ 8 - 486 * eta ^ 2 * si2 ^ 6 - 238 * si2 ^ 8 + 116 * eta ^ 3 * si2 ^ 4 + 246 * eta * si2 ^ 6 + 283 * eta ^ 2 * si2 ^ 4 + 450 * si2 ^ 6 - 21 * eta ^ 3 * si2 ^ 2 - 137 * eta * si2 ^ 4 - 53 * eta ^ 2 * si2 ^ 2 - 262 * si2 ^ 4 + eta ^ 3 + 24 * eta * si2 ^ 2 + 3 * eta ^ 2 + 50 * si2 ^ 2 - eta - 3) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sh * sin((g + 4 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (42 * eta ^ 3 * si2 ^ 8 + 48 * eta ^ 2 * si2 ^ 8 - 14 * eta ^ 3 * si2 ^ 6 - 78 * eta * si2 ^ 8 - 26 * eta ^ 2 * si2 ^ 6 - 12 * si2 ^ 8 - 14 * eta ^ 3 * si2 ^ 4 + 86 * eta * si2 ^ 6 - 7 * eta ^ 2 * si2 ^ 4 - 46 * si2 ^ 6 + eta ^ 3 * si2 ^ 2 - 34 * eta * si2 ^ 4 + 55 * si2 ^ 4 + eta ^ 3 + 11 * eta * si2 ^ 2 + eta ^ 2 - 12 * si2 ^ 2 - 2 * eta) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sh * sin((-g + 2 * f)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (3 * eta ^ 2 * si2 ^ 4 - 5 * eta ^ 2 * si2 ^ 2 - 3 * si2 ^ 4 + 2 * eta ^ 2 + 5 * si2 ^ 2 - 2) / (eta ^ 8) / (L ^ 8) * sh * sin((8 * f + 5 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (89 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 89 * si2 ^ 4 + 56 * eta ^ 2 + 139 * si2 ^ 2 - 56) / (eta ^ 8) / (L ^ 8) * ch * cos((2 * f + 5 * g)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (50 * eta ^ 3 * si2 ^ 8 + 44 * eta ^ 2 * si2 ^ 8 - 94 * eta ^ 3 * si2 ^ 6 - 68 * eta * si2 ^ 8 - 82 * eta ^ 2 * si2 ^ 6 - 26 * si2 ^ 8 + 44 * eta ^ 3 * si2 ^ 4 + 130 * eta * si2 ^ 6 + 19 * eta ^ 2 * si2 ^ 4 + 46 * si2 ^ 6 - eta ^ 3 * si2 ^ 2 - 65 * eta * si2 ^ 4 + 15 * eta ^ 2 * si2 ^ 2 + 2 * si2 ^ 4 - eta ^ 3 + 4 * eta * si2 ^ 2 - 3 * eta ^ 2 - 18 * si2 ^ 2 + eta + 3) / (L ^ 8) / (eta ^ 8) / (1 + eta) * ch * cos((g + 4 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (85 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 364 * si2 ^ 4 + 58 * eta ^ 2 + 609 * si2 ^ 2 - 255) / (eta ^ 8) / (L ^ 8) * ch * cos((5 * g + 4 * f)) + sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (93 * eta ^ 2 * si2 ^ 4 - 159 * eta ^ 2 * si2 ^ 2 - 351 * si2 ^ 4 + 68 * eta ^ 2 + 593 * si2 ^ 2 - 244) / (eta ^ 8) / (L ^ 8) * sh * sin((6 * f + 5 * g)) / 0.32e2 + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (89 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 89 * si2 ^ 4 + 56 * eta ^ 2 + 139 * si2 ^ 2 - 56) / (eta ^ 8) / (L ^ 8) * sh * sin((2 * f + 5 * g)) + (18 * eta ^ 3 * si2 ^ 8 - 90 * eta ^ 2 * si2 ^ 8 - 36 * eta ^ 3 * si2 ^ 6 + 126 * eta * si2 ^ 8 + 180 * eta ^ 2 * si2 ^ 6 - 54 * si2 ^ 8 + 27 * eta ^ 3 * si2 ^ 4 - 252 * eta * si2 ^ 6 - 123 * eta ^ 2 * si2 ^ 4 + 108 * si2 ^ 6 - 9 * eta ^ 3 * si2 ^ 2 + 165 * eta * si2 ^ 4 + 33 * eta ^ 2 * si2 ^ 2 - 69 * si2 ^ 4 + eta ^ 3 - 39 * eta * si2 ^ 2 - 3 * eta ^ 2 + 15 * si2 ^ 2 + 3 * eta - 1) / (L ^ 8) / (eta ^ 8) * ch * cos((-g + 3 * f)) / 0.128e3 + (-234 * eta ^ 3 * si2 ^ 8 + 270 * eta ^ 2 * si2 ^ 8 + 468 * eta ^ 3 * si2 ^ 6 + 162 * eta * si2 ^ 8 - 540 * eta ^ 2 * si2 ^ 6 - 198 * si2 ^ 8 - 279 * eta ^ 3 * si2 ^ 4 - 324 * eta * si2 ^ 6 + 321 * eta ^ 2 * si2 ^ 4 + 396 * si2 ^ 6 + 51 * eta ^ 3 * si2 ^ 2 + 195 * eta * si2 ^ 4 - 57 * eta ^ 2 * si2 ^ 2 - 237 * si2 ^ 4 - 3 * eta ^ 3 - 39 * eta * si2 ^ 2 + 3 * eta ^ 2 + 45 * si2 ^ 2 + 3 * eta - 3) / (eta ^ 8) / (L ^ 8) * sh * sin((5 * f + g)) / 0.128e3 + (-18 * eta ^ 3 * si2 ^ 8 + 54 * eta ^ 2 * si2 ^ 8 + 36 * eta ^ 3 * si2 ^ 6 - 54 * eta * si2 ^ 8 - 108 * eta ^ 2 * si2 ^ 6 + 18 * si2 ^ 8 + 9 * eta ^ 3 * si2 ^ 4 + 108 * eta * si2 ^ 6 + 33 * eta ^ 2 * si2 ^ 4 - 36 * si2 ^ 6 - 21 * eta ^ 3 * si2 ^ 2 - 93 * eta * si2 ^ 4 + 15 * eta ^ 2 * si2 ^ 2 + 51 * si2 ^ 4 + 3 * eta ^ 3 + 33 * eta * si2 ^ 2 - 3 * eta ^ 2 - 27 * si2 ^ 2 - 3 * eta + 3) / (eta ^ 8) / (L ^ 8) * ch * cos((5 * f + g)) / 0.128e3 + (54 * eta ^ 3 * si2 ^ 8 - 126 * eta ^ 2 * si2 ^ 8 - 108 * eta ^ 3 * si2 ^ 6 + 90 * eta * si2 ^ 8 + 252 * eta ^ 2 * si2 ^ 6 - 18 * si2 ^ 8 + 69 * eta ^ 3 * si2 ^ 4 - 180 * eta * si2 ^ 6 - 165 * eta ^ 2 * si2 ^ 4 + 36 * si2 ^ 6 - 15 * eta ^ 3 * si2 ^ 2 + 123 * eta * si2 ^ 4 + 39 * eta ^ 2 * si2 ^ 2 - 27 * si2 ^ 4 + eta ^ 3 - 33 * eta * si2 ^ 2 - 3 * eta ^ 2 + 9 * si2 ^ 2 + 3 * eta - 1) / (L ^ 8) / (eta ^ 8) * sh * sin((-g + 3 * f)) / 0.128e3 + 0.3e1 / 0.128e3 * (30 * eta ^ 3 * si2 ^ 6 - 18 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 3 * si2 ^ 4 - 54 * eta * si2 ^ 6 + 36 * eta ^ 2 * si2 ^ 4 + 42 * si2 ^ 6 + 39 * eta ^ 3 * si2 ^ 2 + 108 * eta * si2 ^ 4 - 25 * eta ^ 2 * si2 ^ 2 - 84 * si2 ^ 4 - 7 * eta ^ 3 - 67 * eta * si2 ^ 2 + 5 * eta ^ 2 + 53 * si2 ^ 2 + 11 * eta - 9) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh * sin((-3 * g + f)) - 0.3e1 / 0.32e2 * (28 * eta ^ 2 * si2 ^ 4 - 47 * eta ^ 2 * si2 ^ 2 - 28 * si2 ^ 4 + 19 * eta ^ 2 + 47 * si2 ^ 2 - 19) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * cos((7 * f + 5 * g)) + 0.3e1 / 0.8e1 * (46 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 68 * si2 ^ 4 + 33 * eta ^ 2 + 115 * si2 ^ 2 - 48) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * sin((5 * f + 5 * g)) - 0.3e1 / 0.8e1 * (46 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 68 * si2 ^ 4 + 33 * eta ^ 2 + 115 * si2 ^ 2 - 48) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * cos((5 * f + 5 * g)) + 0.3e1 / 0.32e2 * (268 * eta ^ 2 * si2 ^ 4 - 437 * eta ^ 2 * si2 ^ 2 - 268 * si2 ^ 4 + 181 * eta ^ 2 + 437 * si2 ^ 2 - 181) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * sin((3 * f + 5 * g)) + 0.3e1 / 0.128e3 * (30 * eta ^ 3 * si2 ^ 6 - 18 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 3 * si2 ^ 4 - 54 * eta * si2 ^ 6 + 36 * eta ^ 2 * si2 ^ 4 + 42 * si2 ^ 6 + 39 * eta ^ 3 * si2 ^ 2 + 108 * eta * si2 ^ 4 - 25 * eta ^ 2 * si2 ^ 2 - 84 * si2 ^ 4 - 7 * eta ^ 3 - 67 * eta * si2 ^ 2 + 5 * eta ^ 2 + 53 * si2 ^ 2 + 11 * eta - 9) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch * cos((-3 * g + f)) - 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch * cos((3 * g + 7 * f)) - 0.3e1 / 0.32e2 * (268 * eta ^ 2 * si2 ^ 4 - 437 * eta ^ 2 * si2 ^ 2 - 268 * si2 ^ 4 + 181 * eta ^ 2 + 437 * si2 ^ 2 - 181) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * cos((3 * f + 5 * g)) + 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh * sin((3 * g + 7 * f)) + 0.3e1 / 0.32e2 * (28 * eta ^ 2 * si2 ^ 4 - 47 * eta ^ 2 * si2 ^ 2 - 28 * si2 ^ 4 + 19 * eta ^ 2 + 47 * si2 ^ 2 - 19) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * sin((7 * f + 5 * g))) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t16 = ((0.3e1 / 0.64e2 * (120 * eta ^ 3 * si2 ^ 6 + 1330 * eta ^ 2 * si2 ^ 6 - 224 * eta ^ 3 * si2 ^ 4 - 324 * eta * si2 ^ 6 - 2276 * eta ^ 2 * si2 ^ 4 - 1742 * si2 ^ 6 + 122 * eta ^ 3 * si2 ^ 2 + 648 * eta * si2 ^ 4 + 1183 * eta ^ 2 * si2 ^ 2 + 2964 * si2 ^ 4 - 15 * eta ^ 3 - 360 * eta * si2 ^ 2 - 156 * eta ^ 2 - 1525 * si2 ^ 2 + 45 * eta + 186) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch - 0.3e1 / 0.8e1 * (120 * eta ^ 2 * si2 ^ 6 - 212 * eta ^ 2 * si2 ^ 4 - 400 * si2 ^ 6 + 113 * eta ^ 2 * si2 ^ 2 + 744 * si2 ^ 4 - 16 * eta ^ 2 - 407 * si2 ^ 2 + 58) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * sin((3 * g + 3 * f)) + (0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (251 * eta ^ 3 * si2 ^ 6 + 29 * eta ^ 2 * si2 ^ 6 - 409 * eta ^ 3 * si2 ^ 4 - 229 * eta * si2 ^ 6 + 11 * eta ^ 2 * si2 ^ 4 + 185 * si2 ^ 6 + 206 * eta ^ 3 * si2 ^ 2 + 319 * eta * si2 ^ 4 - 25 * eta ^ 2 * si2 ^ 2 - 509 * si2 ^ 4 - 27 * eta ^ 3 - 148 * eta * si2 ^ 2 + 2 * eta ^ 2 + 335 * si2 ^ 2 + 7 * eta - 62) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (140 * si2 ^ 6 - 250 * si2 ^ 4 + 134 * si2 ^ 2 - 19) / (eta ^ 8) / (L ^ 8) * sh) * sin((2 * f + 3 * g)) + (((-1224 * eta ^ 3 * si2 ^ 8 + 5406 * eta ^ 2 * si2 ^ 8 + 2304 * eta ^ 3 * si2 ^ 6 + 4212 * eta * si2 ^ 8 - 9516 * eta ^ 2 * si2 ^ 6 - 7410 * si2 ^ 8 - 1410 * eta ^ 3 * si2 ^ 4 - 8424 * eta * si2 ^ 6 + 4767 * eta ^ 2 * si2 ^ 4 + 13140 * si2 ^ 6 + 321 * eta ^ 3 * si2 ^ 2 + 5292 * eta * si2 ^ 4 - 492 * eta ^ 2 * si2 ^ 2 - 6405 * si2 ^ 4 - 30 * eta ^ 3 - 1107 * eta * si2 ^ 2 - 33 * eta ^ 2 + 474 * si2 ^ 2 + 72 * eta + 99) / eta ^ 8 / L ^ 8 * ch) / 0.64e2 + 0.9e1 / 0.8e1 * (40 * eta ^ 2 * si2 ^ 8 - 52 * eta ^ 2 * si2 ^ 6 - 160 * si2 ^ 8 + 27 * eta ^ 2 * si2 ^ 4 + 264 * si2 ^ 6 - 8 * eta ^ 2 * si2 ^ 2 - 149 * si2 ^ 4 + eta ^ 2 + 34 * si2 ^ 2 - 3) * Delta / (L ^ 8) / (eta ^ 8) * sh) * sin((f + g)) + (((-486 * eta ^ 4 * si2 ^ 8 - 5226 * eta ^ 3 * si2 ^ 8 + 684 * eta ^ 4 * si2 ^ 6 - 5874 * eta ^ 2 * si2 ^ 8 + 9336 * eta ^ 3 * si2 ^ 6 + 4794 * eta * si2 ^ 8 - 303 * eta ^ 4 * si2 ^ 4 + 10920 * eta ^ 2 * si2 ^ 6 + 6792 * si2 ^ 8 - 5163 * eta ^ 3 * si2 ^ 4 - 8472 * eta * si2 ^ 6 + 54 * eta ^ 4 * si2 ^ 2 - 6339 * eta ^ 2 * si2 ^ 4 - 12468 * si2 ^ 6 + 843 * eta ^ 3 * si2 ^ 2 + 4587 * eta * si2 ^ 4 - 3 * eta ^ 4 + 1137 * eta ^ 2 * si2 ^ 2 + 7218 * si2 ^ 4 - 9 * eta ^ 3 - 699 * eta * si2 ^ 2 - 33 * eta ^ 2 - 1335 * si2 ^ 2 - 3 * eta + 48) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) + 0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 8 - 214 * eta ^ 2 * si2 ^ 6 - 140 * si2 ^ 8 + 107 * eta ^ 2 * si2 ^ 4 + 214 * si2 ^ 6 - 19 * eta ^ 2 * si2 ^ 2 - 107 * si2 ^ 4 + eta ^ 2 + 19 * si2 ^ 2 - 1) * Delta / (L ^ 8) / (eta ^ 8) * sh) * sin((f - g)) + (-sqrt((-eta ^ 2 + 1)) * (3600 * Delta ^ 2 * eta ^ 2 * si2 ^ 8 - 3330 * eta ^ 4 * si2 ^ 8 + 7200 * Delta ^ 2 * eta * si2 ^ 8 - 8046 * eta ^ 3 * si2 ^ 8 - 5760 * Delta ^ 2 * eta ^ 2 * si2 ^ 6 + 3600 * Delta ^ 2 * si2 ^ 8 + 5654 * eta ^ 4 * si2 ^ 6 + 1022 * eta ^ 2 * si2 ^ 8 - 11520 * Delta ^ 2 * eta * si2 ^ 6 + 14080 * eta ^ 3 * si2 ^ 6 + 13402 * eta * si2 ^ 8 + 3024 * Delta ^ 2 * eta ^ 2 * si2 ^ 4 - 5760 * Delta ^ 2 * si2 ^ 6 - 2952 * eta ^ 4 * si2 ^ 4 - 1188 * eta ^ 2 * si2 ^ 6 + 7808 * si2 ^ 8 + 6048 * Delta ^ 2 * eta * si2 ^ 4 - 7647 * eta ^ 3 * si2 ^ 4 - 23080 * eta * si2 ^ 6 - 576 * Delta ^ 2 * eta ^ 2 * si2 ^ 2 + 3024 * Delta ^ 2 * si2 ^ 4 + 455 * eta ^ 4 * si2 ^ 2 + 90 * eta ^ 2 * si2 ^ 4 - 13754 * si2 ^ 6 - 1152 * Delta ^ 2 * eta * si2 ^ 2 + 1276 * eta ^ 3 * si2 ^ 2 + 12039 * eta * si2 ^ 4 + 36 * Delta ^ 2 * eta ^ 2 - 576 * Delta ^ 2 * si2 ^ 2 - 15 * eta ^ 4 + 229 * eta ^ 2 * si2 ^ 2 + 7446 * si2 ^ 4 + 72 * Delta ^ 2 * eta - 54 * eta ^ 3 - 1736 * eta * si2 ^ 2 + 36 * Delta ^ 2 - 60 * eta ^ 2 - 1192 * si2 ^ 2 - 2 * eta + 23) / (32 * L ^ 8 * eta ^ 10 + 64 * L ^ 8 * eta ^ 9 + 32 * L ^ 8 * eta ^ 8) * ch - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * eta ^ 2 * si2 ^ 8 + 300 * eta * si2 ^ 8 - 216 * eta ^ 2 * si2 ^ 6 + 300 * si2 ^ 8 - 522 * eta * si2 ^ 6 + 128 * eta ^ 2 * si2 ^ 4 - 522 * si2 ^ 6 + 293 * eta * si2 ^ 4 - 28 * eta ^ 2 * si2 ^ 2 + 293 * si2 ^ 4 - 61 * eta * si2 ^ 2 + 2 * eta ^ 2 - 61 * si2 ^ 2 + 5 * eta + 5) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * sin(g) + ((3 * si2 ^ 2 * (150 * eta ^ 4 * si2 ^ 6 - 1078 * eta ^ 3 * si2 ^ 6 - 252 * eta ^ 4 * si2 ^ 4 - 1798 * eta ^ 2 * si2 ^ 6 + 1910 * eta ^ 3 * si2 ^ 4 + 1054 * eta * si2 ^ 6 + 129 * eta ^ 4 * si2 ^ 2 + 3302 * eta ^ 2 * si2 ^ 4 + 1672 * si2 ^ 6 - 997 * eta ^ 3 * si2 ^ 2 - 1862 * eta * si2 ^ 4 - 14 * eta ^ 4 - 1809 * eta ^ 2 * si2 ^ 2 - 3098 * si2 ^ 4 + 147 * eta ^ 3 + 969 * eta * si2 ^ 2 + 265 * eta ^ 2 + 1708 * si2 ^ 2 - 143 * eta - 255) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) - 0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 6 - 234 * eta ^ 2 * si2 ^ 4 - 140 * si2 ^ 6 + 121 * eta ^ 2 * si2 ^ 2 + 234 * si2 ^ 4 - 17 * eta ^ 2 - 121 * si2 ^ 2 + 17) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * sin((3 * g + f)) + (-0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (278 * eta ^ 3 * si2 ^ 8 + 140 * eta ^ 2 * si2 ^ 8 - 434 * eta ^ 3 * si2 ^ 6 - 818 * eta * si2 ^ 8 - 134 * eta ^ 2 * si2 ^ 6 - 656 * si2 ^ 8 + 218 * eta ^ 3 * si2 ^ 4 + 1502 * eta * si2 ^ 6 + eta ^ 2 * si2 ^ 4 + 1178 * si2 ^ 6 - 41 * eta ^ 3 * si2 ^ 2 - 960 * eta * si2 ^ 4 + 18 * eta ^ 2 * si2 ^ 2 - 771 * si2 ^ 4 + 3 * eta ^ 3 + 253 * eta * si2 ^ 2 - 3 * eta ^ 2 + 226 * si2 ^ 2 - 26 * eta - 26) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (2 * si2 ^ 6 + 4 * si2 ^ 4 - 5 * si2 ^ 2 + 1) / (eta ^ 8) / (L ^ 8) * sh) * sin((g + 2 * f)) + (-0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (140 * si2 ^ 6 - 250 * si2 ^ 4 + 134 * si2 ^ 2 - 19) / (eta ^ 8) / (L ^ 8) * ch + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (229 * eta ^ 3 * si2 ^ 6 + 7 * eta ^ 2 * si2 ^ 6 - 375 * eta ^ 3 * si2 ^ 4 - 331 * eta * si2 ^ 6 + 45 * eta ^ 2 * si2 ^ 4 + 83 * si2 ^ 6 + 194 * eta ^ 3 * si2 ^ 2 + 473 * eta * si2 ^ 4 - 37 * eta ^ 2 * si2 ^ 2 - 355 * si2 ^ 4 - 27 * eta ^ 3 - 200 * eta * si2 ^ 2 + 2 * eta ^ 2 + 283 * si2 ^ 2 + 7 * eta - 62) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * cos((2 * f + 3 * g)) + (0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 8 - 210 * eta ^ 2 * si2 ^ 6 - 140 * si2 ^ 8 + 101 * eta ^ 2 * si2 ^ 4 + 210 * si2 ^ 6 - 17 * eta ^ 2 * si2 ^ 2 - 101 * si2 ^ 4 + eta ^ 2 + 17 * si2 ^ 2 - 1) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((882 * eta ^ 4 * si2 ^ 8 + 3318 * eta ^ 3 * si2 ^ 8 - 1476 * eta ^ 4 * si2 ^ 6 + 3246 * eta ^ 2 * si2 ^ 8 - 5592 * eta ^ 3 * si2 ^ 6 - 2886 * eta * si2 ^ 8 + 753 * eta ^ 4 * si2 ^ 4 - 5736 * eta ^ 2 * si2 ^ 6 - 4560 * si2 ^ 8 + 2709 * eta ^ 3 * si2 ^ 4 + 4728 * eta * si2 ^ 6 - 114 * eta ^ 4 * si2 ^ 2 + 3069 * eta ^ 2 * si2 ^ 4 + 8076 * si2 ^ 6 - 309 * eta ^ 3 * si2 ^ 2 - 2133 * eta * si2 ^ 4 + 3 * eta ^ 4 - 495 * eta ^ 2 * si2 ^ 2 - 4398 * si2 ^ 4 + 9 * eta ^ 3 + 165 * eta * si2 ^ 2 + 33 * eta ^ 2 + 753 * si2 ^ 2 + 3 * eta - 48) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * cos((f - g)) + (0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (209 * eta ^ 3 * si2 ^ 6 + 167 * eta ^ 2 * si2 ^ 6 - 359 * eta ^ 3 * si2 ^ 4 - 958 * eta * si2 ^ 6 - 275 * eta ^ 2 * si2 ^ 4 - 1120 * si2 ^ 6 + 186 * eta ^ 3 * si2 ^ 2 + 1745 * eta * si2 ^ 4 + 143 * eta ^ 2 * si2 ^ 2 + 2069 * si2 ^ 4 - 25 * eta ^ 3 - 930 * eta * si2 ^ 2 - 21 * eta ^ 2 - 1125 * si2 ^ 2 + 122 * eta + 152) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch + 0.27e2 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (20 * si2 ^ 6 - 38 * si2 ^ 4 + 21 * si2 ^ 2 - 3) / (eta ^ 8) / (L ^ 8) * sh) * sin((4 * f + 3 * g)) + (0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * eta ^ 2 * si2 ^ 8 + 300 * eta * si2 ^ 8 - 216 * eta ^ 2 * si2 ^ 6 + 300 * si2 ^ 8 - 558 * eta * si2 ^ 6 + 128 * eta ^ 2 * si2 ^ 4 - 558 * si2 ^ 6 + 347 * eta * si2 ^ 4 - 28 * eta ^ 2 * si2 ^ 2 + 347 * si2 ^ 4 - 79 * eta * si2 ^ 2 + 2 * eta ^ 2 - 79 * si2 ^ 2 + 5 * eta + 5) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch - sqrt((-eta ^ 2 + 1)) * (3600 * Delta ^ 2 * eta ^ 2 * si2 ^ 8 - 1626 * eta ^ 4 * si2 ^ 8 + 7200 * Delta ^ 2 * eta * si2 ^ 8 - 3594 * eta ^ 3 * si2 ^ 8 - 5760 * Delta ^ 2 * eta ^ 2 * si2 ^ 6 + 3600 * Delta ^ 2 * si2 ^ 8 + 2726 * eta ^ 4 * si2 ^ 6 - 538 * eta ^ 2 * si2 ^ 8 - 11520 * Delta ^ 2 * eta * si2 ^ 6 + 6136 * eta ^ 3 * si2 ^ 6 + 3814 * eta * si2 ^ 8 + 3024 * Delta ^ 2 * eta ^ 2 * si2 ^ 4 - 5760 * Delta ^ 2 * si2 ^ 6 - 1464 * eta ^ 4 * si2 ^ 4 + 1428 * eta ^ 2 * si2 ^ 6 + 2528 * si2 ^ 8 + 6048 * Delta ^ 2 * eta * si2 ^ 4 - 3489 * eta ^ 3 * si2 ^ 4 - 5872 * eta * si2 ^ 6 - 576 * Delta ^ 2 * eta ^ 2 * si2 ^ 2 + 3024 * Delta ^ 2 * si2 ^ 4 + 245 * eta ^ 4 * si2 ^ 2 - 1442 * eta ^ 2 * si2 ^ 4 - 4178 * si2 ^ 6 - 1152 * Delta ^ 2 * eta * si2 ^ 2 + 700 * eta ^ 3 * si2 ^ 2 + 2537 * eta * si2 ^ 4 + 36 * Delta ^ 2 * eta ^ 2 - 576 * Delta ^ 2 * si2 ^ 2 - 15 * eta ^ 4 + 579 * eta ^ 2 * si2 ^ 2 + 2146 * si2 ^ 4 + 72 * Delta ^ 2 * eta - 54 * eta ^ 3 - 160 * eta * si2 ^ 2 + 36 * Delta ^ 2 - 60 * eta ^ 2 - 332 * si2 ^ 2 - 2 * eta + 23) / (32 * L ^ 8 * eta ^ 10 + 64 * L ^ 8 * eta ^ 9 + 32 * L ^ 8 * eta ^ 8) * sh) * cos(g) + (0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * si2 ^ 8 - 218 * si2 ^ 6 + 124 * si2 ^ 4 - 23 * si2 ^ 2 + 1) / (eta ^ 8) / (L ^ 8) * ch + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (10 * eta ^ 3 * si2 ^ 8 + 304 * eta ^ 2 * si2 ^ 8 - 78 * eta ^ 3 * si2 ^ 6 + 818 * eta * si2 ^ 8 - 642 * eta ^ 2 * si2 ^ 6 + 980 * si2 ^ 8 + 38 * eta ^ 3 * si2 ^ 4 - 1350 * eta * si2 ^ 6 + 397 * eta ^ 2 * si2 ^ 4 - 1674 * si2 ^ 6 + 11 * eta ^ 3 * si2 ^ 2 + 860 * eta * si2 ^ 4 - 74 * eta ^ 2 * si2 ^ 2 + 1049 * si2 ^ 4 - 3 * eta ^ 3 - 263 * eta * si2 ^ 2 + 3 * eta ^ 2 - 290 * si2 ^ 2 + 26 * eta + 26) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * cos((g + 2 * f)) + (((-78 * eta ^ 4 * si2 ^ 8 - 2874 * eta ^ 3 * si2 ^ 8 + 204 * eta ^ 4 * si2 ^ 6 - 4122 * eta ^ 2 * si2 ^ 8 + 5256 * eta ^ 3 * si2 ^ 6 + 3042 * eta * si2 ^ 8 - 171 * eta ^ 4 * si2 ^ 4 + 7704 * eta ^ 2 * si2 ^ 6 + 4032 * si2 ^ 8 - 3099 * eta ^ 3 * si2 ^ 4 - 5592 * eta * si2 ^ 6 + 54 * eta ^ 4 * si2 ^ 2 - 4583 * eta ^ 2 * si2 ^ 4 - 7572 * si2 ^ 6 + 663 * eta ^ 3 * si2 ^ 2 + 3295 * eta * si2 ^ 4 - 7 * eta ^ 4 + 965 * eta ^ 2 * si2 ^ 2 + 4558 * si2 ^ 4 - 49 * eta ^ 3 - 691 * eta * si2 ^ 2 - 69 * eta ^ 2 - 991 * si2 ^ 2 + 49 * eta + 76) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) - 0.3e1 / 0.16e2 * (60 * eta ^ 2 * si2 ^ 8 - 110 * eta ^ 2 * si2 ^ 6 - 60 * si2 ^ 8 + 53 * eta ^ 2 * si2 ^ 4 + 110 * si2 ^ 6 - 3 * eta ^ 2 * si2 ^ 2 - 53 * si2 ^ 4 - eta ^ 2 + 3 * si2 ^ 2 + 1) * Delta / (L ^ 8) / (eta ^ 8) * sh) * sin((g + 3 * f)) + (0.3e1 / 0.64e2 * (18 * eta ^ 3 * si2 ^ 6 + 740 * eta ^ 2 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 4 + 378 * eta * si2 ^ 6 - 1370 * eta ^ 2 * si2 ^ 4 - 1136 * si2 ^ 6 + 19 * eta ^ 3 * si2 ^ 2 - 756 * eta * si2 ^ 4 + 738 * eta ^ 2 * si2 ^ 2 + 2162 * si2 ^ 4 - 2 * eta ^ 3 + 443 * eta * si2 ^ 2 - 101 * eta ^ 2 - 1200 * si2 ^ 2 - 64 * eta + 167) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch - 0.9e1 / 0.16e2 * (20 * eta ^ 2 * si2 ^ 6 - 38 * eta ^ 2 * si2 ^ 4 - 20 * si2 ^ 6 + 21 * eta ^ 2 * si2 ^ 2 + 38 * si2 ^ 4 - 3 * eta ^ 2 - 21 * si2 ^ 2 + 3) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * sin((3 * g + 5 * f)) + (0.9e1 / 0.16e2 * (20 * eta ^ 2 * si2 ^ 6 - 38 * eta ^ 2 * si2 ^ 4 - 20 * si2 ^ 6 + 21 * eta ^ 2 * si2 ^ 2 + 38 * si2 ^ 4 - 3 * eta ^ 2 - 21 * si2 ^ 2 + 3) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch + 0.3e1 / 0.64e2 * (18 * eta ^ 3 * si2 ^ 6 + 748 * eta ^ 2 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 4 + 378 * eta * si2 ^ 6 - 1390 * eta ^ 2 * si2 ^ 4 - 1144 * si2 ^ 6 + 19 * eta ^ 3 * si2 ^ 2 - 756 * eta * si2 ^ 4 + 750 * eta ^ 2 * si2 ^ 2 + 2182 * si2 ^ 4 - 2 * eta ^ 3 + 443 * eta * si2 ^ 2 - 101 * eta ^ 2 - 1212 * si2 ^ 2 - 64 * eta + 167) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + 5 * f)) + (0.3e1 / 0.8e1 * (120 * eta ^ 2 * si2 ^ 6 - 212 * eta ^ 2 * si2 ^ 4 - 400 * si2 ^ 6 + 113 * eta ^ 2 * si2 ^ 2 + 744 * si2 ^ 4 - 16 * eta ^ 2 - 407 * si2 ^ 2 + 58) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch + 0.3e1 / 0.64e2 * (120 * eta ^ 3 * si2 ^ 6 + 1346 * eta ^ 2 * si2 ^ 6 - 224 * eta ^ 3 * si2 ^ 4 - 324 * eta * si2 ^ 6 - 2308 * eta ^ 2 * si2 ^ 4 - 1822 * si2 ^ 6 + 122 * eta ^ 3 * si2 ^ 2 + 648 * eta * si2 ^ 4 + 1199 * eta ^ 2 * si2 ^ 2 + 3076 * si2 ^ 4 - 15 * eta ^ 3 - 360 * eta * si2 ^ 2 - 156 * eta ^ 2 - 1557 * si2 ^ 2 + 45 * eta + 186) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + 3 * f)) + (0.9e1 / 0.16e2 * (140 * eta ^ 2 * si2 ^ 6 - 234 * eta ^ 2 * si2 ^ 4 - 140 * si2 ^ 6 + 121 * eta ^ 2 * si2 ^ 2 + 234 * si2 ^ 4 - 17 * eta ^ 2 - 121 * si2 ^ 2 + 17) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch + (3 * si2 ^ 2 * (150 * eta ^ 4 * si2 ^ 6 - 878 * eta ^ 3 * si2 ^ 6 - 252 * eta ^ 4 * si2 ^ 4 - 1598 * eta ^ 2 * si2 ^ 6 + 1594 * eta ^ 3 * si2 ^ 4 + 854 * eta * si2 ^ 6 + 129 * eta ^ 4 * si2 ^ 2 + 2986 * eta ^ 2 * si2 ^ 4 + 1472 * si2 ^ 6 - 881 * eta ^ 3 * si2 ^ 2 - 1546 * eta * si2 ^ 4 - 14 * eta ^ 4 - 1693 * eta ^ 2 * si2 ^ 2 - 2782 * si2 ^ 4 + 147 * eta ^ 3 + 853 * eta * si2 ^ 2 + 265 * eta ^ 2 + 1592 * si2 ^ 2 - 143 * eta - 255) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * cos((3 * g + f)) + (-0.3e1 / 0.16e2 * (180 * eta ^ 2 * si2 ^ 8 - 326 * eta ^ 2 * si2 ^ 6 - 180 * si2 ^ 8 + 181 * eta ^ 2 * si2 ^ 4 + 326 * si2 ^ 6 - 31 * eta ^ 2 * si2 ^ 2 - 181 * si2 ^ 4 + eta ^ 2 + 31 * si2 ^ 2 - 1) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((-426 * eta ^ 4 * si2 ^ 8 - 54 * eta ^ 3 * si2 ^ 8 + 804 * eta ^ 4 * si2 ^ 6 - 246 * eta ^ 2 * si2 ^ 8 - 120 * eta ^ 3 * si2 ^ 6 - 114 * eta * si2 ^ 8 - 501 * eta ^ 4 * si2 ^ 4 + 312 * eta ^ 2 * si2 ^ 6 + 840 * si2 ^ 8 - 213 * eta ^ 3 * si2 ^ 4 + 456 * eta * si2 ^ 6 + 114 * eta ^ 4 * si2 ^ 2 - 649 * eta ^ 2 * si2 ^ 4 - 1452 * si2 ^ 6 + 297 * eta ^ 3 * si2 ^ 2 + 17 * eta * si2 ^ 4 - 7 * eta ^ 4 + 475 * eta ^ 2 * si2 ^ 2 + 1346 * si2 ^ 4 - 49 * eta ^ 3 - 269 * eta * si2 ^ 2 - 69 * eta ^ 2 - 617 * si2 ^ 2 + 49 * eta + 76) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * cos((g + 3 * f)) + (-0.9e1 / 0.8e1 * (160 * eta ^ 2 * si2 ^ 8 - 268 * eta ^ 2 * si2 ^ 6 - 280 * si2 ^ 8 + 141 * eta ^ 2 * si2 ^ 4 + 488 * si2 ^ 6 - 24 * eta ^ 2 * si2 ^ 2 - 275 * si2 ^ 4 + eta ^ 2 + 54 * si2 ^ 2 - 3) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((-2088 * eta ^ 3 * si2 ^ 8 + 330 * eta ^ 2 * si2 ^ 8 + 3744 * eta ^ 3 * si2 ^ 6 + 972 * eta * si2 ^ 8 - 1092 * eta ^ 2 * si2 ^ 6 + 4794 * si2 ^ 8 - 2238 * eta ^ 3 * si2 ^ 4 - 1944 * eta * si2 ^ 6 + 561 * eta ^ 2 * si2 ^ 4 - 8388 * si2 ^ 6 + 495 * eta ^ 3 * si2 ^ 2 + 1620 * eta * si2 ^ 4 + 132 * eta ^ 2 * si2 ^ 2 + 5109 * si2 ^ 4 - 30 * eta ^ 3 - 621 * eta * si2 ^ 2 - 33 * eta ^ 2 - 1314 * si2 ^ 2 + 72 * eta + 99) / eta ^ 8 / L ^ 8 * sh) / 0.64e2) * cos((f + g)) + (-0.27e2 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (20 * si2 ^ 6 - 38 * si2 ^ 4 + 21 * si2 ^ 2 - 3) / (eta ^ 8) / (L ^ 8) * ch + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (199 * eta ^ 3 * si2 ^ 6 + 157 * eta ^ 2 * si2 ^ 6 - 345 * eta ^ 3 * si2 ^ 4 - 966 * eta * si2 ^ 6 - 261 * eta ^ 2 * si2 ^ 4 - 1128 * si2 ^ 6 + 182 * eta ^ 3 * si2 ^ 2 + 1759 * eta * si2 ^ 4 + 139 * eta ^ 2 * si2 ^ 2 + 2083 * si2 ^ 4 - 25 * eta ^ 3 - 936 * eta * si2 ^ 2 - 21 * eta ^ 2 - 1131 * si2 ^ 2 + 122 * eta + 152) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * cos((4 * f + 3 * g)) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (1083 * eta ^ 3 * si2 ^ 6 + 1281 * eta ^ 2 * si2 ^ 6 - 1797 * eta ^ 3 * si2 ^ 4 - 1029 * eta * si2 ^ 6 - 2193 * eta ^ 2 * si2 ^ 4 - 1335 * si2 ^ 6 + 918 * eta ^ 3 * si2 ^ 2 + 1689 * eta * si2 ^ 4 + 1167 * eta ^ 2 * si2 ^ 2 + 2301 * si2 ^ 4 - 131 * eta ^ 3 - 855 * eta * si2 ^ 2 - 173 * eta ^ 2 - 1230 * si2 ^ 2 + 122 * eta + 182) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch * sin((3 * g)) / 0.32e2 - sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (1053 * eta ^ 3 * si2 ^ 6 + 1251 * eta ^ 2 * si2 ^ 6 - 1755 * eta ^ 3 * si2 ^ 4 - 999 * eta * si2 ^ 6 - 2151 * eta ^ 2 * si2 ^ 4 - 1305 * si2 ^ 6 + 906 * eta ^ 3 * si2 ^ 2 + 1647 * eta * si2 ^ 4 + 1155 * eta ^ 2 * si2 ^ 2 + 2259 * si2 ^ 4 - 131 * eta ^ 3 - 843 * eta * si2 ^ 2 - 173 * eta ^ 2 - 1218 * si2 ^ 2 + 122 * eta + 182) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh * cos((3 * g)) / 0.32e2 + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (42 * eta ^ 3 * si2 ^ 8 + 48 * eta ^ 2 * si2 ^ 8 - 14 * eta ^ 3 * si2 ^ 6 - 78 * eta * si2 ^ 8 - 26 * eta ^ 2 * si2 ^ 6 - 12 * si2 ^ 8 - 14 * eta ^ 3 * si2 ^ 4 + 86 * eta * si2 ^ 6 - 7 * eta ^ 2 * si2 ^ 4 - 46 * si2 ^ 6 + eta ^ 3 * si2 ^ 2 - 34 * eta * si2 ^ 4 + 55 * si2 ^ 4 + eta ^ 3 + 11 * eta * si2 ^ 2 + eta ^ 2 - 12 * si2 ^ 2 - 2 * eta) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch * sin((-g + 2 * f)) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (93 * eta ^ 2 * si2 ^ 4 - 159 * eta ^ 2 * si2 ^ 2 - 351 * si2 ^ 4 + 68 * eta ^ 2 + 593 * si2 ^ 2 - 244) / (eta ^ 8) / (L ^ 8) * ch * sin((6 * f + 5 * g)) / 0.32e2 - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (3 * eta ^ 2 * si2 ^ 4 - 5 * eta ^ 2 * si2 ^ 2 - 3 * si2 ^ 4 + 2 * eta ^ 2 + 5 * si2 ^ 2 - 2) / (eta ^ 8) / (L ^ 8) * ch * sin((8 * f + 5 * g)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (50 * eta ^ 3 * si2 ^ 8 + 44 * eta ^ 2 * si2 ^ 8 - 94 * eta ^ 3 * si2 ^ 6 - 68 * eta * si2 ^ 8 - 82 * eta ^ 2 * si2 ^ 6 - 26 * si2 ^ 8 + 44 * eta ^ 3 * si2 ^ 4 + 130 * eta * si2 ^ 6 + 19 * eta ^ 2 * si2 ^ 4 + 46 * si2 ^ 6 - eta ^ 3 * si2 ^ 2 - 65 * eta * si2 ^ 4 + 15 * eta ^ 2 * si2 ^ 2 + 2 * si2 ^ 4 - eta ^ 3 + 4 * eta * si2 ^ 2 - 3 * eta ^ 2 - 18 * si2 ^ 2 + eta + 3) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh * cos((g + 4 * f)) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (93 * eta ^ 2 * si2 ^ 4 - 159 * eta ^ 2 * si2 ^ 2 - 351 * si2 ^ 4 + 68 * eta ^ 2 + 593 * si2 ^ 2 - 244) / (eta ^ 8) / (L ^ 8) * sh * cos((6 * f + 5 * g)) / 0.32e2 - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (89 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 89 * si2 ^ 4 + 56 * eta ^ 2 + 139 * si2 ^ 2 - 56) / (eta ^ 8) / (L ^ 8) * ch * sin((2 * f + 5 * g)) + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (167 * eta ^ 2 * si2 ^ 6 + 198 * eta * si2 ^ 6 - 309 * eta ^ 2 * si2 ^ 4 - 365 * si2 ^ 6 - 396 * eta * si2 ^ 4 + 166 * eta ^ 2 * si2 ^ 2 + 705 * si2 ^ 4 + 231 * eta * si2 ^ 2 - 23 * eta ^ 2 - 397 * si2 ^ 2 - 33 * eta + 56) / (eta ^ 8) / (L ^ 8) * ch * sin((3 * g + 6 * f)) / 0.32e2 - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (85 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 364 * si2 ^ 4 + 58 * eta ^ 2 + 609 * si2 ^ 2 - 255) / (eta ^ 8) / (L ^ 8) * ch * sin((5 * g + 4 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (85 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 364 * si2 ^ 4 + 58 * eta ^ 2 + 609 * si2 ^ 2 - 255) / (eta ^ 8) / (L ^ 8) * sh * cos((5 * g + 4 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (90 * eta ^ 3 * si2 ^ 8 + 84 * eta ^ 2 * si2 ^ 8 - 110 * eta ^ 3 * si2 ^ 6 - 126 * eta * si2 ^ 8 - 98 * eta ^ 2 * si2 ^ 6 - 48 * si2 ^ 8 + 50 * eta ^ 3 * si2 ^ 4 + 182 * eta * si2 ^ 6 + 43 * eta ^ 2 * si2 ^ 4 + 26 * si2 ^ 6 - 13 * eta ^ 3 * si2 ^ 2 - 98 * eta * si2 ^ 4 - 12 * eta ^ 2 * si2 ^ 2 + 5 * si2 ^ 4 + eta ^ 3 + 25 * eta * si2 ^ 2 + eta ^ 2 - 2 * eta) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh * cos((-g + 2 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (3 * eta ^ 2 * si2 ^ 4 - 5 * eta ^ 2 * si2 ^ 2 - 3 * si2 ^ 4 + 2 * eta ^ 2 + 5 * si2 ^ 2 - 2) / (eta ^ 8) / (L ^ 8) * sh * cos((8 * f + 5 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (89 * eta ^ 2 * si2 ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 89 * si2 ^ 4 + 56 * eta ^ 2 + 139 * si2 ^ 2 - 56) / (eta ^ 8) / (L ^ 8) * sh * cos((2 * f + 5 * g)) + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (169 * eta ^ 2 * si2 ^ 6 + 198 * eta * si2 ^ 6 - 315 * eta ^ 2 * si2 ^ 4 - 367 * si2 ^ 6 - 396 * eta * si2 ^ 4 + 170 * eta ^ 2 * si2 ^ 2 + 711 * si2 ^ 4 + 231 * eta * si2 ^ 2 - 23 * eta ^ 2 - 401 * si2 ^ 2 - 33 * eta + 56) / (eta ^ 8) / (L ^ 8) * sh * cos((3 * g + 6 * f)) / 0.32e2 - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (118 * eta ^ 3 * si2 ^ 8 + 256 * eta ^ 2 * si2 ^ 8 - 210 * eta ^ 3 * si2 ^ 6 - 136 * eta * si2 ^ 8 - 486 * eta ^ 2 * si2 ^ 6 - 238 * si2 ^ 8 + 116 * eta ^ 3 * si2 ^ 4 + 246 * eta * si2 ^ 6 + 283 * eta ^ 2 * si2 ^ 4 + 450 * si2 ^ 6 - 21 * eta ^ 3 * si2 ^ 2 - 137 * eta * si2 ^ 4 - 53 * eta ^ 2 * si2 ^ 2 - 262 * si2 ^ 4 + eta ^ 3 + 24 * eta * si2 ^ 2 + 3 * eta ^ 2 + 50 * si2 ^ 2 - eta - 3) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch * sin((g + 4 * f)) + (234 * eta ^ 3 * si2 ^ 8 - 270 * eta ^ 2 * si2 ^ 8 - 468 * eta ^ 3 * si2 ^ 6 - 162 * eta * si2 ^ 8 + 540 * eta ^ 2 * si2 ^ 6 + 198 * si2 ^ 8 + 279 * eta ^ 3 * si2 ^ 4 + 324 * eta * si2 ^ 6 - 321 * eta ^ 2 * si2 ^ 4 - 396 * si2 ^ 6 - 51 * eta ^ 3 * si2 ^ 2 - 195 * eta * si2 ^ 4 + 57 * eta ^ 2 * si2 ^ 2 + 237 * si2 ^ 4 + 3 * eta ^ 3 + 39 * eta * si2 ^ 2 - 3 * eta ^ 2 - 45 * si2 ^ 2 - 3 * eta + 3) / (eta ^ 8) / (L ^ 8) * ch * sin((5 * f + g)) / 0.128e3 + (18 * eta ^ 3 * si2 ^ 8 - 90 * eta ^ 2 * si2 ^ 8 - 36 * eta ^ 3 * si2 ^ 6 + 126 * eta * si2 ^ 8 + 180 * eta ^ 2 * si2 ^ 6 - 54 * si2 ^ 8 + 27 * eta ^ 3 * si2 ^ 4 - 252 * eta * si2 ^ 6 - 123 * eta ^ 2 * si2 ^ 4 + 108 * si2 ^ 6 - 9 * eta ^ 3 * si2 ^ 2 + 165 * eta * si2 ^ 4 + 33 * eta ^ 2 * si2 ^ 2 - 69 * si2 ^ 4 + eta ^ 3 - 39 * eta * si2 ^ 2 - 3 * eta ^ 2 + 15 * si2 ^ 2 + 3 * eta - 1) / (L ^ 8) / (eta ^ 8) * sh * cos((-g + 3 * f)) / 0.128e3 + (-18 * eta ^ 3 * si2 ^ 8 + 54 * eta ^ 2 * si2 ^ 8 + 36 * eta ^ 3 * si2 ^ 6 - 54 * eta * si2 ^ 8 - 108 * eta ^ 2 * si2 ^ 6 + 18 * si2 ^ 8 + 9 * eta ^ 3 * si2 ^ 4 + 108 * eta * si2 ^ 6 + 33 * eta ^ 2 * si2 ^ 4 - 36 * si2 ^ 6 - 21 * eta ^ 3 * si2 ^ 2 - 93 * eta * si2 ^ 4 + 15 * eta ^ 2 * si2 ^ 2 + 51 * si2 ^ 4 + 3 * eta ^ 3 + 33 * eta * si2 ^ 2 - 3 * eta ^ 2 - 27 * si2 ^ 2 - 3 * eta + 3) / (eta ^ 8) / (L ^ 8) * sh * cos((5 * f + g)) / 0.128e3 + (-54 * eta ^ 3 * si2 ^ 8 + 126 * eta ^ 2 * si2 ^ 8 + 108 * eta ^ 3 * si2 ^ 6 - 90 * eta * si2 ^ 8 - 252 * eta ^ 2 * si2 ^ 6 + 18 * si2 ^ 8 - 69 * eta ^ 3 * si2 ^ 4 + 180 * eta * si2 ^ 6 + 165 * eta ^ 2 * si2 ^ 4 - 36 * si2 ^ 6 + 15 * eta ^ 3 * si2 ^ 2 - 123 * eta * si2 ^ 4 - 39 * eta ^ 2 * si2 ^ 2 + 27 * si2 ^ 4 - eta ^ 3 + 33 * eta * si2 ^ 2 + 3 * eta ^ 2 - 9 * si2 ^ 2 - 3 * eta + 1) / (eta ^ 8) / (L ^ 8) * ch * sin((-g + 3 * f)) / 0.128e3 - 0.3e1 / 0.32e2 * (28 * eta ^ 2 * si2 ^ 4 - 47 * eta ^ 2 * si2 ^ 2 - 28 * si2 ^ 4 + 19 * eta ^ 2 + 47 * si2 ^ 2 - 19) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * cos((7 * f + 5 * g)) - 0.3e1 / 0.8e1 * (46 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 68 * si2 ^ 4 + 33 * eta ^ 2 + 115 * si2 ^ 2 - 48) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * cos((5 * f + 5 * g)) - 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch * sin((3 * g + 7 * f)) - 0.3e1 / 0.128e3 * (30 * eta ^ 3 * si2 ^ 6 - 18 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 3 * si2 ^ 4 - 54 * eta * si2 ^ 6 + 36 * eta ^ 2 * si2 ^ 4 + 42 * si2 ^ 6 + 39 * eta ^ 3 * si2 ^ 2 + 108 * eta * si2 ^ 4 - 25 * eta ^ 2 * si2 ^ 2 - 84 * si2 ^ 4 - 7 * eta ^ 3 - 67 * eta * si2 ^ 2 + 5 * eta ^ 2 + 53 * si2 ^ 2 + 11 * eta - 9) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch * sin((-3 * g + f)) - 0.3e1 / 0.8e1 * (46 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 68 * si2 ^ 4 + 33 * eta ^ 2 + 115 * si2 ^ 2 - 48) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * sin((5 * f + 5 * g)) + 0.3e1 / 0.128e3 * (30 * eta ^ 3 * si2 ^ 6 - 18 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 3 * si2 ^ 4 - 54 * eta * si2 ^ 6 + 36 * eta ^ 2 * si2 ^ 4 + 42 * si2 ^ 6 + 39 * eta ^ 3 * si2 ^ 2 + 108 * eta * si2 ^ 4 - 25 * eta ^ 2 * si2 ^ 2 - 84 * si2 ^ 4 - 7 * eta ^ 3 - 67 * eta * si2 ^ 2 + 5 * eta ^ 2 + 53 * si2 ^ 2 + 11 * eta - 9) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh * cos((-3 * g + f)) - 0.3e1 / 0.32e2 * (28 * eta ^ 2 * si2 ^ 4 - 47 * eta ^ 2 * si2 ^ 2 - 28 * si2 ^ 4 + 19 * eta ^ 2 + 47 * si2 ^ 2 - 19) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * sin((7 * f + 5 * g)) - 0.3e1 / 0.32e2 * (268 * eta ^ 2 * si2 ^ 4 - 437 * eta ^ 2 * si2 ^ 2 - 268 * si2 ^ 4 + 181 * eta ^ 2 + 437 * si2 ^ 2 - 181) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * cos((3 * f + 5 * g)) - 0.3e1 / 0.32e2 * (268 * eta ^ 2 * si2 ^ 4 - 437 * eta ^ 2 * si2 ^ 2 - 268 * si2 ^ 4 + 181 * eta ^ 2 + 437 * si2 ^ 2 - 181) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * sin((3 * f + 5 * g)) - 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh * cos((3 * g + 7 * f))) * J ^ 2 * R__e ^ 4 * mu ^ 4;

sp2t21 = (((-120 * eta ^ 5 * si2 ^ 8 - 90 * eta ^ 4 * si2 ^ 8 + 240 * eta ^ 5 * si2 ^ 6 - 840 * eta ^ 3 * si2 ^ 8 + 180 * eta ^ 4 * si2 ^ 6 - 900 * eta ^ 2 * si2 ^ 8 - 72 * eta ^ 5 * si2 ^ 4 + 1680 * eta ^ 3 * si2 ^ 6 - 864 * eta * si2 ^ 8 - 54 * eta ^ 4 * si2 ^ 4 + 1800 * eta ^ 2 * si2 ^ 6 + 2814 * si2 ^ 8 - 48 * eta ^ 5 * si2 ^ 2 - 1320 * eta ^ 3 * si2 ^ 4 + 1728 * eta * si2 ^ 6 - 36 * eta ^ 4 * si2 ^ 2 - 1764 * eta ^ 2 * si2 ^ 4 - 5628 * si2 ^ 6 + 12 * eta ^ 5 + 480 * eta ^ 3 * si2 ^ 2 - 1152 * eta * si2 ^ 4 + 9 * eta ^ 4 + 864 * eta ^ 2 * si2 ^ 2 + 4362 * si2 ^ 4 - 60 * eta ^ 3 + 288 * eta * si2 ^ 2 - 126 * eta ^ 2 - 1548 * si2 ^ 2 - 24 * eta + 189) / L ^ 6 / eta ^ 10) / 0.32e2 + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / (eta ^ 10) / (L ^ 6) * sin((-2 * g + f)) - 0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 50 * si2 ^ 4 - eta ^ 2 - 30 * si2 ^ 2 + 5) * (si2 ^ 2) * Delta / (eta ^ 10) / (L ^ 6) * sin((f + 2 * g)) - 0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 50 * si2 ^ 4 - eta ^ 2 - 30 * si2 ^ 2 + 5) * (si2 ^ 2) * Delta / (eta ^ 10) / (L ^ 6) * sin((3 * f + 2 * g)) - 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / (eta ^ 10) / (L ^ 6) * sin((5 * f + 2 * g)) + 0.3e1 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (166 * eta ^ 4 * si2 ^ 6 + 532 * eta ^ 3 * si2 ^ 6 - 332 * eta ^ 4 * si2 ^ 4 + 792 * eta ^ 2 * si2 ^ 6 - 1064 * eta ^ 3 * si2 ^ 4 - 1220 * eta * si2 ^ 6 + 199 * eta ^ 4 * si2 ^ 2 - 1584 * eta ^ 2 * si2 ^ 4 - 1982 * si2 ^ 6 + 612 * eta ^ 3 * si2 ^ 2 + 2440 * eta * si2 ^ 4 - 33 * eta ^ 4 + 910 * eta ^ 2 * si2 ^ 2 + 3964 * si2 ^ 4 - 80 * eta ^ 3 - 1396 * eta * si2 ^ 2 - 118 * eta ^ 2 - 2285 * si2 ^ 2 + 176 * eta + 303) / (32 * L ^ 6 * eta ^ 11 + 32 * L ^ 6 * eta ^ 10) * cos((3 * f + 2 * g)) - 0.9e1 / 0.32e2 * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 - 2 * eta ^ 2 * si2 ^ 4 + eta ^ 4 + 4 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 - 2 * eta ^ 2 - 2 * si2 ^ 2 + 1) * (si2 ^ 4) / (L ^ 6) / (eta ^ 10) * cos((8 * f + 4 * g)) + 0.3e1 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (510 * eta ^ 4 * si2 ^ 6 + 180 * eta ^ 3 * si2 ^ 6 - 1020 * eta ^ 4 * si2 ^ 4 - 360 * eta ^ 2 * si2 ^ 6 - 360 * eta ^ 3 * si2 ^ 4 + 348 * eta * si2 ^ 6 + 611 * eta ^ 4 * si2 ^ 2 + 720 * eta ^ 2 * si2 ^ 4 + 426 * si2 ^ 6 + 180 * eta ^ 3 * si2 ^ 2 - 696 * eta * si2 ^ 4 - 101 * eta ^ 4 - 466 * eta ^ 2 * si2 ^ 2 - 852 * si2 ^ 4 + 508 * eta * si2 ^ 2 + 106 * eta ^ 2 + 599 * si2 ^ 2 - 160 * eta - 173) / (32 * L ^ 6 * eta ^ 11 + 32 * L ^ 6 * eta ^ 10) * cos((f + 2 * g)) - 0.3e1 / 0.8e1 * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 - 17 * eta ^ 2 * si2 ^ 4 + eta ^ 4 + 34 * eta ^ 2 * si2 ^ 2 + 16 * si2 ^ 4 - 17 * eta ^ 2 - 32 * si2 ^ 2 + 16) * (si2 ^ 4) / (L ^ 6) / (eta ^ 10) * cos((6 * f + 4 * g)) + 0.9e1 / 0.8e1 * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 - 5 * eta ^ 2 * si2 ^ 4 + eta ^ 4 + 10 * eta ^ 2 * si2 ^ 2 + 4 * si2 ^ 4 - 5 * eta ^ 2 - 8 * si2 ^ 2 + 4) * (si2 ^ 4) / (L ^ 6) / (eta ^ 10) * cos((2 * f + 4 * g)) + 0.3e1 / 0.4e1 * (30 * eta ^ 5 * si2 ^ 6 + 16 * eta ^ 4 * si2 ^ 6 - 60 * eta ^ 5 * si2 ^ 4 - 24 * eta ^ 3 * si2 ^ 6 - 32 * eta ^ 4 * si2 ^ 4 - 101 * eta ^ 2 * si2 ^ 6 + 37 * eta ^ 5 * si2 ^ 2 + 48 * eta ^ 3 * si2 ^ 4 - 12 * eta * si2 ^ 6 + 20 * eta ^ 4 * si2 ^ 2 + 202 * eta ^ 2 * si2 ^ 4 + 91 * si2 ^ 6 - 7 * eta ^ 5 - 30 * eta ^ 3 * si2 ^ 2 + 24 * eta * si2 ^ 4 - 4 * eta ^ 4 - 128 * eta ^ 2 * si2 ^ 2 - 182 * si2 ^ 4 + 6 * eta ^ 3 - 14 * eta * si2 ^ 2 + 27 * eta ^ 2 + 115 * si2 ^ 2 + 2 * eta - 24) * (si2 ^ 2) / (L ^ 6) / (eta ^ 10) * cos((2 * g)) + 0.15e2 / 0.32e2 * (eta ^ 4 * si2 ^ 4 - 2 * eta ^ 4 * si2 ^ 2 - 2 * eta ^ 2 * si2 ^ 4 + eta ^ 4 + 4 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 - 2 * eta ^ 2 - 2 * si2 ^ 2 + 1) * (si2 ^ 4) / (L ^ 6) / (eta ^ 10) * cos((4 * g)) - 0.3e1 / 0.4e1 * (12 * eta ^ 4 * si2 ^ 6 + 24 * eta ^ 3 * si2 ^ 6 - 24 * eta ^ 4 * si2 ^ 4 - 153 * eta ^ 2 * si2 ^ 6 - 48 * eta ^ 3 * si2 ^ 4 - 102 * eta * si2 ^ 6 + 14 * eta ^ 4 * si2 ^ 2 + 306 * eta ^ 2 * si2 ^ 4 + 219 * si2 ^ 6 + 28 * eta ^ 3 * si2 ^ 2 + 204 * eta * si2 ^ 4 - 2 * eta ^ 4 - 179 * eta ^ 2 * si2 ^ 2 - 438 * si2 ^ 4 - 4 * eta ^ 3 - 119 * eta * si2 ^ 2 + 26 * eta ^ 2 + 256 * si2 ^ 2 + 17 * eta - 37) * (si2 ^ 2) / (L ^ 6) / (eta ^ 10) * cos((2 * g + 4 * f)) + 0.3e1 / 0.64e2 * (36 * eta ^ 3 * si2 ^ 8 - 76 * eta ^ 2 * si2 ^ 8 - 72 * eta ^ 3 * si2 ^ 6 - 900 * eta * si2 ^ 8 + 152 * eta ^ 2 * si2 ^ 6 + 940 * si2 ^ 8 + 48 * eta ^ 3 * si2 ^ 4 + 1800 * eta * si2 ^ 6 - 208 * eta ^ 2 * si2 ^ 4 - 1880 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 2 - 1200 * eta * si2 ^ 4 + 132 * eta ^ 2 * si2 ^ 2 + 1360 * si2 ^ 4 + eta ^ 3 + 300 * eta * si2 ^ 2 - 21 * eta ^ 2 - 420 * si2 ^ 2 - 25 * eta + 45) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((3 * f)) + 0.3e1 / 0.16e2 * (30 * eta ^ 4 * si2 ^ 6 - 6 * eta ^ 3 * si2 ^ 6 - 60 * eta ^ 4 * si2 ^ 4 - 54 * eta ^ 2 * si2 ^ 6 + 12 * eta ^ 3 * si2 ^ 4 + 6 * eta * si2 ^ 6 + 37 * eta ^ 4 * si2 ^ 2 + 108 * eta ^ 2 * si2 ^ 4 + 24 * si2 ^ 6 - 7 * eta ^ 3 * si2 ^ 2 - 12 * eta * si2 ^ 4 - 7 * eta ^ 4 - 67 * eta ^ 2 * si2 ^ 2 - 48 * si2 ^ 4 + eta ^ 3 + 7 * eta * si2 ^ 2 + 13 * eta ^ 2 + 30 * si2 ^ 2 - eta - 6) * (si2 ^ 2) / (L ^ 6) / (eta ^ 10) * cos((-2 * g + 2 * f)) + 0.3e1 / 0.64e2 * (36 * eta ^ 3 * si2 ^ 8 - 36 * eta ^ 2 * si2 ^ 8 - 72 * eta ^ 3 * si2 ^ 6 - 36 * eta * si2 ^ 8 + 72 * eta ^ 2 * si2 ^ 6 + 36 * si2 ^ 8 + 48 * eta ^ 3 * si2 ^ 4 + 72 * eta * si2 ^ 6 - 48 * eta ^ 2 * si2 ^ 4 - 72 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 2 - 48 * eta * si2 ^ 4 + 12 * eta ^ 2 * si2 ^ 2 + 48 * si2 ^ 4 + eta ^ 3 + 12 * eta * si2 ^ 2 - eta ^ 2 - 12 * si2 ^ 2 - eta + 1) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((5 * f)) - 0.3e1 / 0.16e2 * (26 * eta ^ 4 * si2 ^ 6 + 66 * eta ^ 3 * si2 ^ 6 - 52 * eta ^ 4 * si2 ^ 4 - 118 * eta ^ 2 * si2 ^ 6 - 132 * eta ^ 3 * si2 ^ 4 - 66 * eta * si2 ^ 6 + 31 * eta ^ 4 * si2 ^ 2 + 236 * eta ^ 2 * si2 ^ 4 + 92 * si2 ^ 6 + 77 * eta ^ 3 * si2 ^ 2 + 132 * eta * si2 ^ 4 - 5 * eta ^ 4 - 139 * eta ^ 2 * si2 ^ 2 - 184 * si2 ^ 4 - 11 * eta ^ 3 - 77 * eta * si2 ^ 2 + 21 * eta ^ 2 + 108 * si2 ^ 2 + 11 * eta - 16) * (si2 ^ 2) / (L ^ 6) / (eta ^ 10) * cos((6 * f + 2 * g)) + 0.3e1 / 0.16e2 * (3 * eta ^ 4 * si2 ^ 4 - 6 * eta ^ 4 * si2 ^ 2 + 6 * eta ^ 2 * si2 ^ 4 + 3 * eta ^ 4 - 12 * eta ^ 2 * si2 ^ 2 - 25 * si2 ^ 4 + 6 * eta ^ 2 + 50 * si2 ^ 2 - 25) * (si2 ^ 4) / (L ^ 6) / (eta ^ 10) * cos((4 * f + 4 * g)) + 0.3e1 / 0.8e1 * (6 * eta ^ 4 * si2 ^ 6 + 120 * eta ^ 3 * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 4 + 72 * eta ^ 2 * si2 ^ 6 - 240 * eta ^ 3 * si2 ^ 4 + 72 * eta * si2 ^ 6 + 9 * eta ^ 4 * si2 ^ 2 - 144 * eta ^ 2 * si2 ^ 4 - 222 * si2 ^ 6 + 144 * eta ^ 3 * si2 ^ 2 - 144 * eta * si2 ^ 4 - 3 * eta ^ 4 + 66 * eta ^ 2 * si2 ^ 2 + 444 * si2 ^ 4 - 24 * eta ^ 3 + 84 * eta * si2 ^ 2 + 6 * eta ^ 2 - 239 * si2 ^ 2 - 12 * eta + 17) * (si2 ^ 2) / (L ^ 6) / (eta ^ 10) * cos((2 * g + 2 * f)) - 0.15e2 / 0.64e2 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((2 * g + 7 * f)) - 0.39e2 / 0.16e2 * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((4 * g + f)) + 0.33e2 / 0.16e2 * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((4 * g + 7 * f)) - 0.3e1 / 0.64e2 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((3 * f - 2 * g)) + 0.3e1 / 0.64e2 * (18 * eta ^ 3 * si2 ^ 6 - 666 * eta ^ 2 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 4 - 18 * eta * si2 ^ 6 + 1332 * eta ^ 2 * si2 ^ 4 + 666 * si2 ^ 6 + 21 * eta ^ 3 * si2 ^ 2 + 36 * eta * si2 ^ 4 - 829 * eta ^ 2 * si2 ^ 2 - 1332 * si2 ^ 4 - 3 * eta ^ 3 - 21 * eta * si2 ^ 2 + 163 * eta ^ 2 + 829 * si2 ^ 2 + 3 * eta - 163) * (si2 ^ 2) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((-2 * g + f)) - 0.3e1 / 0.16e2 * (15 * eta ^ 2 * si2 ^ 4 - 30 * eta ^ 2 * si2 ^ 2 - 11 * si2 ^ 4 + 15 * eta ^ 2 + 22 * si2 ^ 2 - 11) * (si2 ^ 4) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((3 * f + 4 * g)) - 0.3e1 / 0.64e2 * (54 * eta ^ 3 * si2 ^ 6 - 750 * eta ^ 2 * si2 ^ 6 - 108 * eta ^ 3 * si2 ^ 4 - 918 * eta * si2 ^ 6 + 1500 * eta ^ 2 * si2 ^ 4 + 1614 * si2 ^ 6 + 63 * eta ^ 3 * si2 ^ 2 + 1836 * eta * si2 ^ 4 - 887 * eta ^ 2 * si2 ^ 2 - 3228 * si2 ^ 4 - 9 * eta ^ 3 - 1071 * eta * si2 ^ 2 + 137 * eta ^ 2 + 1895 * si2 ^ 2 + 153 * eta - 281) * (si2 ^ 2) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((5 * f + 2 * g)) + 0.27e2 / 0.16e2 * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - 5 * si2 ^ 4 + eta ^ 2 + 10 * si2 ^ 2 - 5) * (si2 ^ 4) * sqrt((-eta ^ 2 + 1)) / (L ^ 6) / (eta ^ 10) * cos((5 * f + 4 * g)) - 0.9e1 * Delta / (eta ^ 10) * (si2 ^ 2) * (15 * eta ^ 2 * si2 ^ 6 - 30 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 18 * eta ^ 2 * si2 ^ 2 + 50 * si2 ^ 4 - 3 * eta ^ 2 - 30 * si2 ^ 2 + 5) / (L ^ 6) * sin((2 * g + 2 * f)) - 0.27e2 / 0.2e1 * Delta / (eta ^ 10) * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / (L ^ 6) * sin((2 * g + 4 * f)) - 0.27e2 / 0.2e1 * Delta / (eta ^ 10) * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) / (L ^ 6) * sin((2 * g)) + (-30 * eta ^ 4 * si2 ^ 8 + 108 * eta ^ 3 * si2 ^ 8 + 60 * eta ^ 4 * si2 ^ 6 - 318 * eta ^ 2 * si2 ^ 8 - 216 * eta ^ 3 * si2 ^ 6 - 540 * eta * si2 ^ 8 - 18 * eta ^ 4 * si2 ^ 4 + 636 * eta ^ 2 * si2 ^ 6 + 780 * si2 ^ 8 + 144 * eta ^ 3 * si2 ^ 4 + 1080 * eta * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 2 - 576 * eta ^ 2 * si2 ^ 4 - 1560 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 2 - 720 * eta * si2 ^ 4 + 3 * eta ^ 4 + 258 * eta ^ 2 * si2 ^ 2 + 1170 * si2 ^ 4 + 3 * eta ^ 3 + 180 * eta * si2 ^ 2 - 36 * eta ^ 2 - 390 * si2 ^ 2 - 15 * eta + 45) / (L ^ 6) / (eta ^ 10) * cos((2 * f)) / 0.8e1 + (-30 * eta ^ 4 * si2 ^ 8 + 432 * eta ^ 3 * si2 ^ 8 + 60 * eta ^ 4 * si2 ^ 6 - 372 * eta ^ 2 * si2 ^ 8 - 864 * eta ^ 3 * si2 ^ 6 - 432 * eta * si2 ^ 8 - 18 * eta ^ 4 * si2 ^ 4 + 744 * eta ^ 2 * si2 ^ 6 + 402 * si2 ^ 8 + 576 * eta ^ 3 * si2 ^ 4 + 864 * eta * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 2 - 540 * eta ^ 2 * si2 ^ 4 - 804 * si2 ^ 6 - 144 * eta ^ 3 * si2 ^ 2 - 576 * eta * si2 ^ 4 + 3 * eta ^ 4 + 168 * eta ^ 2 * si2 ^ 2 + 558 * si2 ^ 4 + 12 * eta ^ 3 + 144 * eta * si2 ^ 2 - 18 * eta ^ 2 - 156 * si2 ^ 2 - 12 * eta + 15) / (L ^ 6) / (eta ^ 10) * cos((4 * f)) / 0.32e2 - 0.3e1 * sqrt((-eta ^ 2 + 1)) * (36 * eta ^ 4 * si2 ^ 8 + 60 * eta ^ 3 * si2 ^ 8 - 72 * eta ^ 4 * si2 ^ 6 + 420 * eta ^ 2 * si2 ^ 8 - 120 * eta ^ 3 * si2 ^ 6 - 940 * eta * si2 ^ 8 + 48 * eta ^ 4 * si2 ^ 4 - 840 * eta ^ 2 * si2 ^ 6 - 1624 * si2 ^ 8 + 240 * eta ^ 3 * si2 ^ 4 + 1880 * eta * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 2 + 720 * eta ^ 2 * si2 ^ 4 + 3248 * si2 ^ 6 - 180 * eta ^ 3 * si2 ^ 2 - 1584 * eta * si2 ^ 4 + eta ^ 4 - 300 * eta ^ 2 * si2 ^ 2 - 2496 * si2 ^ 4 + 30 * eta ^ 3 + 644 * eta * si2 ^ 2 + 40 * eta ^ 2 + 872 * si2 ^ 2 - 86 * eta - 105) / (32 * L ^ 6 * eta ^ 11 + 32 * L ^ 6 * eta ^ 10) * cos(f)) * J ^ 2 * R__e ^ 4 * mu ^ 3;
sp2t22 = ((30 * eta ^ 4 * si2 ^ 8 - 102 * eta ^ 3 * si2 ^ 8 - 60 * eta ^ 4 * si2 ^ 6 - 2430 * eta ^ 2 * si2 ^ 8 + 264 * eta ^ 3 * si2 ^ 6 - 330 * eta * si2 ^ 8 + 18 * eta ^ 4 * si2 ^ 4 + 4488 * eta ^ 2 * si2 ^ 6 + 2832 * si2 ^ 8 - 414 * eta ^ 3 * si2 ^ 4 + 600 * eta * si2 ^ 6 + 12 * eta ^ 4 * si2 ^ 2 - 3114 * eta ^ 2 * si2 ^ 4 - 5292 * si2 ^ 6 + 240 * eta ^ 3 * si2 ^ 2 - 162 * eta * si2 ^ 4 - 3 * eta ^ 4 + 972 * eta ^ 2 * si2 ^ 2 + 3672 * si2 ^ 4 - 33 * eta ^ 3 - 96 * eta * si2 ^ 2 - 105 * eta ^ 2 - 1128 * si2 ^ 2 + 21 * eta + 120) / (32 * L ^ 8 * eta ^ 9 + 32 * L ^ 8 * eta ^ 8) * sin((2 * f)) - 0.3e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * eta ^ 2 * si2 ^ 6 + 220 * eta * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 + 355 * si2 ^ 6 - 400 * eta * si2 ^ 4 + 6 * eta ^ 2 * si2 ^ 2 - 670 * si2 ^ 4 + 216 * eta * si2 ^ 2 - eta ^ 2 + 378 * si2 ^ 2 - 32 * eta - 59) / (L ^ 8) / (eta ^ 8) / (1 + eta) * cos((3 * f + 2 * g)) - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (25 * eta ^ 2 * si2 ^ 6 + 220 * eta * si2 ^ 6 - 50 * eta ^ 2 * si2 ^ 4 + 175 * si2 ^ 6 - 400 * eta * si2 ^ 4 + 30 * eta ^ 2 * si2 ^ 2 - 310 * si2 ^ 4 + 216 * eta * si2 ^ 2 - 5 * eta ^ 2 + 162 * si2 ^ 2 - 32 * eta - 23) / (L ^ 8) / (eta ^ 8) / (1 + eta) * cos((f + 2 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (17 * eta ^ 2 * si2 ^ 4 + 44 * eta * si2 ^ 4 - 34 * eta ^ 2 * si2 ^ 2 + 47 * si2 ^ 4 - 80 * eta * si2 ^ 2 + 17 * eta ^ 2 - 86 * si2 ^ 2 + 36 * eta + 39) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sin((5 * f + 4 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 44 * eta * si2 ^ 4 - 14 * eta ^ 2 * si2 ^ 2 - 71 * si2 ^ 4 + 80 * eta * si2 ^ 2 + 7 * eta ^ 2 + 134 * si2 ^ 2 - 36 * eta - 63) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sin((3 * f + 4 * g)) + 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (54 * eta ^ 3 * si2 ^ 6 + 930 * eta ^ 2 * si2 ^ 6 - 108 * eta ^ 3 * si2 ^ 4 + 714 * eta * si2 ^ 6 - 1812 * eta ^ 2 * si2 ^ 4 - 1698 * si2 ^ 6 + 63 * eta ^ 3 * si2 ^ 2 - 1428 * eta * si2 ^ 4 + 1041 * eta ^ 2 * si2 ^ 2 + 3348 * si2 ^ 4 - 9 * eta ^ 3 + 833 * eta * si2 ^ 2 - 155 * eta ^ 2 - 1937 * si2 ^ 2 - 119 * eta + 283) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sin((5 * f + 2 * g)) + 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta * si2 ^ 6 - 5 * si2 ^ 6 - 10 * eta * si2 ^ 4 + 10 * si2 ^ 4 + 6 * eta * si2 ^ 2 - 6 * si2 ^ 2 - eta + 1) * (si2 ^ 2) * Delta / (eta ^ 8) / (L ^ 8) * cos((5 * f + 2 * g)) - 0.9e1 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * (5 * eta * si2 ^ 6 - 5 * si2 ^ 6 - 10 * eta * si2 ^ 4 + 10 * si2 ^ 4 + 6 * eta * si2 ^ 2 - 6 * si2 ^ 2 - eta + 1) * (si2 ^ 2) * Delta / (eta ^ 8) / (L ^ 8) * cos((-2 * g + f)) + 0.3e1 / 0.32e2 * (3 * eta ^ 3 * si2 ^ 4 + 8 * eta ^ 2 * si2 ^ 4 - 6 * eta ^ 3 * si2 ^ 2 + 23 * eta * si2 ^ 4 - 14 * eta ^ 2 * si2 ^ 2 - 34 * si2 ^ 4 + 3 * eta ^ 3 - 46 * eta * si2 ^ 2 + 6 * eta ^ 2 + 66 * si2 ^ 2 + 23 * eta - 32) * (si2 ^ 4) / (eta ^ 8) / (L ^ 8) * sin((6 * f + 4 * g)) + 0.3e1 / 0.32e2 * (2 * eta ^ 3 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 4 - 4 * eta ^ 3 * si2 ^ 2 - 36 * eta * si2 ^ 4 + 24 * eta ^ 2 * si2 ^ 2 + 3 * si2 ^ 4 + 2 * eta ^ 3 + 72 * eta * si2 ^ 2 - 11 * eta ^ 2 - 12 * si2 ^ 2 - 36 * eta + 9) * (si2 ^ 4) / (eta ^ 8) / (L ^ 8) * sin((4 * f + 4 * g)) - 0.3e1 / 0.32e2 * (11 * eta ^ 3 * si2 ^ 4 + 44 * eta ^ 2 * si2 ^ 4 - 22 * eta ^ 3 * si2 ^ 2 - 9 * eta * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 46 * si2 ^ 4 + 11 * eta ^ 3 + 18 * eta * si2 ^ 2 + 34 * eta ^ 2 + 82 * si2 ^ 2 - 9 * eta - 36) * (si2 ^ 4) / (eta ^ 8) / (L ^ 8) * sin((2 * f + 4 * g)) + 0.3e1 / 0.32e2 * (30 * eta ^ 3 * si2 ^ 6 - 36 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 3 * si2 ^ 4 - 18 * eta * si2 ^ 6 + 72 * eta ^ 2 * si2 ^ 4 + 24 * si2 ^ 6 + 37 * eta ^ 3 * si2 ^ 2 + 36 * eta * si2 ^ 4 - 44 * eta ^ 2 * si2 ^ 2 - 48 * si2 ^ 4 - 7 * eta ^ 3 - 23 * eta * si2 ^ 2 + 8 * eta ^ 2 + 30 * si2 ^ 2 + 5 * eta - 6) * (si2 ^ 2) / (eta ^ 8) / (L ^ 8) * sin((-2 * g + 2 * f)) - 0.3e1 * sqrt((-eta ^ 2 + 1)) * (126 * eta ^ 4 * si2 ^ 6 + 252 * eta ^ 3 * si2 ^ 6 - 252 * eta ^ 4 * si2 ^ 4 - 8832 * eta ^ 2 * si2 ^ 6 - 384 * eta ^ 3 * si2 ^ 4 - 19884 * eta * si2 ^ 6 + 147 * eta ^ 4 * si2 ^ 2 + 16152 * eta ^ 2 * si2 ^ 4 - 10878 * si2 ^ 6 + 104 * eta ^ 3 * si2 ^ 2 + 36288 * eta * si2 ^ 4 - 21 * eta ^ 4 - 9094 * eta ^ 2 * si2 ^ 2 + 19908 * si2 ^ 4 + 38 * eta ^ 3 - 20136 * eta * si2 ^ 2 + 1592 * eta ^ 2 - 11029 * si2 ^ 2 + 3330 * eta + 1789) * (si2 ^ 2) / (64 * L ^ 8 * eta ^ 10 + 128 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sin((f + 2 * g)) + 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (36 * eta ^ 2 * si2 ^ 8 - 72 * eta * si2 ^ 8 - 72 * eta ^ 2 * si2 ^ 6 + 36 * si2 ^ 8 + 144 * eta * si2 ^ 6 + 48 * eta ^ 2 * si2 ^ 4 - 72 * si2 ^ 6 - 96 * eta * si2 ^ 4 - 12 * eta ^ 2 * si2 ^ 2 + 48 * si2 ^ 4 + 24 * eta * si2 ^ 2 + eta ^ 2 - 12 * si2 ^ 2 - 2 * eta + 1) / (eta ^ 8) / (L ^ 8) * sin((5 * f)) - 0.15e2 / 0.64e2 * (eta ^ 3 * si2 ^ 4 - eta ^ 2 * si2 ^ 4 - 2 * eta ^ 3 * si2 ^ 2 - eta * si2 ^ 4 + 2 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 + eta ^ 3 + 2 * eta * si2 ^ 2 - eta ^ 2 - 2 * si2 ^ 2 - eta + 1) * (si2 ^ 4) / (eta ^ 8) / (L ^ 8) * sin((4 * g)) - 0.9e1 / 0.64e2 * (eta ^ 3 * si2 ^ 4 - eta ^ 2 * si2 ^ 4 - 2 * eta ^ 3 * si2 ^ 2 - eta * si2 ^ 4 + 2 * eta ^ 2 * si2 ^ 2 + si2 ^ 4 + eta ^ 3 + 2 * eta * si2 ^ 2 - eta ^ 2 - 2 * si2 ^ 2 - eta + 1) * (si2 ^ 4) / (eta ^ 8) / (L ^ 8) * sin((8 * f + 4 * g)) - 0.3e1 / 0.32e2 * (26 * eta ^ 3 * si2 ^ 6 + 40 * eta ^ 2 * si2 ^ 6 - 52 * eta ^ 3 * si2 ^ 4 - 158 * eta * si2 ^ 6 - 80 * eta ^ 2 * si2 ^ 4 + 92 * si2 ^ 6 + 31 * eta ^ 3 * si2 ^ 2 + 316 * eta * si2 ^ 4 + 46 * eta ^ 2 * si2 ^ 2 - 184 * si2 ^ 4 - 5 * eta ^ 3 - 185 * eta * si2 ^ 2 - 6 * eta ^ 2 + 108 * si2 ^ 2 + 27 * eta - 16) * (si2 ^ 2) / (eta ^ 8) / (L ^ 8) * sin((6 * f + 2 * g)) - 0.3e1 / 0.8e1 * (60 * eta ^ 3 * si2 ^ 6 + 270 * eta ^ 2 * si2 ^ 6 - 120 * eta ^ 3 * si2 ^ 4 + 90 * eta * si2 ^ 6 - 480 * eta ^ 2 * si2 ^ 4 - 420 * si2 ^ 6 + 74 * eta ^ 3 * si2 ^ 2 - 180 * eta * si2 ^ 4 + 259 * eta ^ 2 * si2 ^ 2 + 780 * si2 ^ 4 - 14 * eta ^ 3 + 108 * eta * si2 ^ 2 - 42 * eta ^ 2 - 441 * si2 ^ 2 - 18 * eta + 74) * (si2 ^ 2) * Delta / (eta ^ 8) / (L ^ 8) * cos((2 * g)) - sqrt((-eta ^ 2 + 1)) * (396 * eta ^ 3 * si2 ^ 8 + 1452 * eta ^ 2 * si2 ^ 8 - 792 * eta ^ 3 * si2 ^ 6 + 1908 * eta * si2 ^ 8 - 2616 * eta ^ 2 * si2 ^ 6 - 3756 * si2 ^ 8 + 528 * eta ^ 3 * si2 ^ 4 - 3816 * eta * si2 ^ 6 + 1872 * eta ^ 2 * si2 ^ 4 + 7224 * si2 ^ 6 - 132 * eta ^ 3 * si2 ^ 2 + 2544 * eta * si2 ^ 4 - 660 * eta ^ 2 * si2 ^ 2 - 4944 * si2 ^ 4 + 11 * eta ^ 3 - 636 * eta * si2 ^ 2 + 81 * eta ^ 2 + 1428 * si2 ^ 2 + 53 * eta - 145) / (L ^ 8) / (eta ^ 8) / (1 + eta) * sin((3 * f)) / 0.128e3 - 0.9e1 / 0.2e1 * (55 * si2 ^ 6 - 100 * si2 ^ 4 + 54 * si2 ^ 2 - 8) * (si2 ^ 2) * Delta / (eta ^ 8) / (L ^ 8) * cos((2 * g + 2 * f)) + 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (78 * eta ^ 2 * si2 ^ 6 - 516 * eta * si2 ^ 6 - 156 * eta ^ 2 * si2 ^ 4 + 438 * si2 ^ 6 + 1080 * eta * si2 ^ 4 + 91 * eta ^ 2 * si2 ^ 2 - 924 * si2 ^ 4 - 710 * eta * si2 ^ 2 - 13 * eta ^ 2 + 619 * si2 ^ 2 + 150 * eta - 137) / (eta ^ 8) / (L ^ 8) * sin((-2 * g + f)) - 0.3e1 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (6 * eta ^ 2 * si2 ^ 6 - 12 * eta * si2 ^ 6 - 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 24 * eta * si2 ^ 4 + 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - 14 * eta * si2 ^ 2 - eta ^ 2 + 7 * si2 ^ 2 + 2 * eta - 1) / (eta ^ 8) / (L ^ 8) * sin((3 * f - 2 * g)) - 0.15e2 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (6 * eta ^ 2 * si2 ^ 6 - 12 * eta * si2 ^ 6 - 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 24 * eta * si2 ^ 4 + 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - 14 * eta * si2 ^ 2 - eta ^ 2 + 7 * si2 ^ 2 + 2 * eta - 1) / (eta ^ 8) / (L ^ 8) * sin((2 * g + 7 * f)) + 0.39e2 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (eta * si2 ^ 4 - si2 ^ 4 - 2 * eta * si2 ^ 2 + 2 * si2 ^ 2 + eta - 1) / (eta ^ 8) / (L ^ 8) * sin((4 * g + f)) + 0.33e2 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (eta * si2 ^ 4 - si2 ^ 4 - 2 * eta * si2 ^ 2 + 2 * si2 ^ 2 + eta - 1) / (eta ^ 8) / (L ^ 8) * sin((4 * g + 7 * f)) + sqrt((-eta ^ 2 + 1)) * (66 * eta ^ 4 * si2 ^ 6 - 1516 * eta ^ 3 * si2 ^ 6 - 132 * eta ^ 4 * si2 ^ 4 - 6960 * eta ^ 2 * si2 ^ 6 + 3008 * eta ^ 3 * si2 ^ 4 - 12580 * eta * si2 ^ 6 + 77 * eta ^ 4 * si2 ^ 2 + 13096 * eta ^ 2 * si2 ^ 4 - 6866 * si2 ^ 6 - 1816 * eta ^ 3 * si2 ^ 2 + 22912 * eta * si2 ^ 4 - 11 * eta ^ 4 - 7210 * eta ^ 2 * si2 ^ 2 + 12284 * si2 ^ 4 + 322 * eta ^ 3 - 11880 * eta * si2 ^ 2 + 1008 * eta ^ 2 - 6171 * si2 ^ 2 + 1366 * eta + 635) * (si2 ^ 2) / (64 * L ^ 8 * eta ^ 10 + 128 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sin((3 * f + 2 * g)) + 0.27e2 / 0.4e1 * (5 * eta * si2 ^ 6 - 5 * si2 ^ 6 - 10 * eta * si2 ^ 4 + 10 * si2 ^ 4 + 6 * eta * si2 ^ 2 - 6 * si2 ^ 2 - eta + 1) * (si2 ^ 2) * Delta / (eta ^ 8) / (L ^ 8) * cos((2 * g + 4 * f)) + 0.3e1 * (si2 ^ 2) * (20 * eta ^ 4 * si2 ^ 6 - 14 * eta ^ 3 * si2 ^ 6 - 40 * eta ^ 4 * si2 ^ 4 - 346 * eta ^ 2 * si2 ^ 6 + 20 * eta ^ 3 * si2 ^ 4 + 182 * eta * si2 ^ 6 + 22 * eta ^ 4 * si2 ^ 2 + 684 * eta ^ 2 * si2 ^ 4 + 686 * si2 ^ 6 - 19 * eta ^ 3 * si2 ^ 2 - 308 * eta * si2 ^ 4 - 2 * eta ^ 4 - 417 * eta ^ 2 * si2 ^ 2 - 1316 * si2 ^ 4 + 11 * eta ^ 3 + 195 * eta * si2 ^ 2 + 77 * eta ^ 2 + 795 * si2 ^ 2 - 59 * eta - 155) / (16 * L ^ 8 * eta ^ 9 + 16 * L ^ 8 * eta ^ 8) * sin((2 * g + 2 * f)) + (-30 * eta ^ 3 * si2 ^ 8 + 462 * eta ^ 2 * si2 ^ 8 + 60 * eta ^ 3 * si2 ^ 6 - 834 * eta * si2 ^ 8 - 924 * eta ^ 2 * si2 ^ 6 + 402 * si2 ^ 8 - 18 * eta ^ 3 * si2 ^ 4 + 1668 * eta * si2 ^ 6 + 594 * eta ^ 2 * si2 ^ 4 - 804 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 2 - 1134 * eta * si2 ^ 4 - 132 * eta ^ 2 * si2 ^ 2 + 558 * si2 ^ 4 + 3 * eta ^ 3 + 300 * eta * si2 ^ 2 + 9 * eta ^ 2 - 156 * si2 ^ 2 - 27 * eta + 15) / (eta ^ 8) / (L ^ 8) * sin((4 * f)) / 0.64e2 + 0.3e1 * sqrt((-eta ^ 2 + 1)) * (108 * eta ^ 4 * si2 ^ 8 + 1084 * eta ^ 3 * si2 ^ 8 - 216 * eta ^ 4 * si2 ^ 6 + 3796 * eta ^ 2 * si2 ^ 8 - 2024 * eta ^ 3 * si2 ^ 6 + 8532 * eta * si2 ^ 8 + 144 * eta ^ 4 * si2 ^ 4 - 6968 * eta ^ 2 * si2 ^ 6 + 5424 * si2 ^ 8 + 1296 * eta ^ 3 * si2 ^ 4 - 15672 * eta * si2 ^ 6 - 36 * eta ^ 4 * si2 ^ 2 + 5136 * eta ^ 2 * si2 ^ 4 - 9936 * si2 ^ 6 - 332 * eta ^ 3 * si2 ^ 2 + 11376 * eta * si2 ^ 4 + 3 * eta ^ 4 - 1764 * eta ^ 2 * si2 ^ 2 + 7008 * si2 ^ 4 + 30 * eta ^ 3 - 3812 * eta * si2 ^ 2 + 200 * eta ^ 2 - 2248 * si2 ^ 2 + 426 * eta + 245) / (64 * L ^ 8 * eta ^ 10 + 128 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sin(f) - 0.3e1 * (si2 ^ 2) * (2 * eta ^ 4 * si2 ^ 6 + 18 * eta ^ 3 * si2 ^ 6 - 4 * eta ^ 4 * si2 ^ 4 - 88 * eta ^ 2 * si2 ^ 6 - 36 * eta ^ 3 * si2 ^ 4 - 30 * eta * si2 ^ 6 + 3 * eta ^ 4 * si2 ^ 2 + 176 * eta ^ 2 * si2 ^ 4 + 98 * si2 ^ 6 + 21 * eta ^ 3 * si2 ^ 2 + 60 * eta * si2 ^ 4 - eta ^ 4 - 115 * eta ^ 2 * si2 ^ 2 - 196 * si2 ^ 4 - 3 * eta ^ 3 - 35 * eta * si2 ^ 2 + 27 * eta ^ 2 + 126 * si2 ^ 2 + 5 * eta - 28) / (16 * L ^ 8 * eta ^ 9 + 16 * L ^ 8 * eta ^ 8) * sin((2 * g)) + 0.3e1 / 0.16e2 * (20 * eta ^ 3 * si2 ^ 8 + 90 * eta ^ 2 * si2 ^ 8 - 40 * eta ^ 3 * si2 ^ 6 - 160 * eta ^ 2 * si2 ^ 6 + 770 * si2 ^ 8 + 12 * eta ^ 3 * si2 ^ 4 + 42 * eta ^ 2 * si2 ^ 4 - 1400 * si2 ^ 6 + 8 * eta ^ 3 * si2 ^ 2 + 24 * eta ^ 2 * si2 ^ 2 + 990 * si2 ^ 4 - 2 * eta ^ 3 - 5 * eta ^ 2 - 320 * si2 ^ 2 + 35) * Delta / (eta ^ 8) / (L ^ 8) + 0.3e1 * (si2 ^ 2) * (56 * eta ^ 4 * si2 ^ 6 + 358 * eta ^ 3 * si2 ^ 6 - 112 * eta ^ 4 * si2 ^ 4 + 902 * eta ^ 2 * si2 ^ 6 - 664 * eta ^ 3 * si2 ^ 4 - 190 * eta * si2 ^ 6 + 68 * eta ^ 4 * si2 ^ 2 - 1680 * eta ^ 2 * si2 ^ 4 - 1126 * si2 ^ 6 + 363 * eta ^ 3 * si2 ^ 2 + 328 * eta * si2 ^ 4 - 12 * eta ^ 4 + 909 * eta ^ 2 * si2 ^ 2 + 2128 * si2 ^ 4 - 52 * eta ^ 3 - 167 * eta * si2 ^ 2 - 120 * eta ^ 2 - 1173 * si2 ^ 2 + 24 * eta + 160) / (32 * L ^ 8 * eta ^ 9 + 32 * L ^ 8 * eta ^ 8) * sin((2 * g + 4 * f))) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t23 = (0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / L ^ 8 / (eta ^ 8) * sh * sin((3 * f + 4 * g)) + 0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / L ^ 8 / (eta ^ 8) * ch * cos((5 * f + 4 * g)) + 0.3e1 / 0.64e2 * (24 * ci2 ^ 6 * eta - 24 * ci2 ^ 6 - 36 * ci2 ^ 4 * eta + 36 * ci2 ^ 4 + 14 * ci2 ^ 2 * eta - 14 * ci2 ^ 2 - eta + 1) * sqrt((-eta ^ 2 + 1)) * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh * sin((-2 * g + f)) - 0.3e1 / 0.16e2 * (120 * ci2 ^ 6 * eta ^ 2 - 120 * ci2 ^ 6 - 180 * ci2 ^ 4 * eta ^ 2 + 180 * ci2 ^ 4 + 74 * ci2 ^ 2 * eta ^ 2 - 74 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh * cos((2 * g)) + 0.3e1 / 0.64e2 * (24 * ci2 ^ 6 * eta - 24 * ci2 ^ 6 - 36 * ci2 ^ 4 * eta + 36 * ci2 ^ 4 + 14 * ci2 ^ 2 * eta - 14 * ci2 ^ 2 - eta + 1) * sqrt((-eta ^ 2 + 1)) * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh * sin((5 * f + 2 * g)) - 0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / L ^ 8 / (eta ^ 8) * sh * sin((5 * f + 4 * g)) - 0.3e1 / 0.16e2 * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * sqrt((-eta ^ 2 + 1)) * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh * sin((3 * f)) - 0.3e1 / 0.16e2 * (60 * ci2 ^ 6 * eta ^ 2 - 60 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 90 * ci2 ^ 4 + 44 * ci2 ^ 2 * eta ^ 2 - 44 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * ch * sin((2 * g)) - 0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / L ^ 8 / (eta ^ 8) * ch * cos((3 * f + 4 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * cos((-2 * g + f)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * ch * cos((5 * f + 2 * g)) + 0.3e1 / 0.64e2 * (104 * ci2 ^ 6 * eta ^ 2 + 144 * ci2 ^ 6 * eta - 248 * ci2 ^ 6 - 156 * ci2 ^ 4 * eta ^ 2 - 216 * ci2 ^ 4 * eta + 372 * ci2 ^ 4 + 62 * ci2 ^ 2 * eta ^ 2 + 84 * ci2 ^ 2 * eta - 146 * ci2 ^ 2 - 5 * eta ^ 2 - 6 * eta + 11) * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh * sin((2 * g + 4 * f)) + 0.3e1 / 0.8e1 * (10 * ci2 ^ 6 * eta ^ 2 + 70 * ci2 ^ 6 - 15 * ci2 ^ 4 * eta ^ 2 - 105 * ci2 ^ 4 + 3 * ci2 ^ 2 * eta ^ 2 + 55 * ci2 ^ 2 + eta ^ 2 - 10) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh - 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / L ^ 8 / (eta ^ 8) * ch * cos((6 * f + 4 * g)) - 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 + 6 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 - 9 * ci2 ^ 2 + eta ^ 2 + 3) * ci2 * si2 / L ^ 8 / (eta ^ 8) * sh * sin((4 * f + 4 * g)) - 0.15e2 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / L ^ 8 / (eta ^ 8) * sh * sin((2 * f + 4 * g)) + 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 + 6 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 - 9 * ci2 ^ 2 + eta ^ 2 + 3) * ci2 * si2 / L ^ 8 / (eta ^ 8) * ch * cos((4 * f + 4 * g)) + 0.3e1 / 0.16e2 * (10 * ci2 ^ 6 * eta ^ 2 - 72 * ci2 ^ 6 * eta + 62 * ci2 ^ 6 - 15 * ci2 ^ 4 * eta ^ 2 + 108 * ci2 ^ 4 * eta - 93 * ci2 ^ 4 + 3 * ci2 ^ 2 * eta ^ 2 - 48 * ci2 ^ 2 * eta + 45 * ci2 ^ 2 + eta ^ 2 + 6 * eta - 7) * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh * sin((2 * f)) + 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / L ^ 8 / (eta ^ 8) * sh * sin((6 * f + 4 * g)) + 0.15e2 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / L ^ 8 / (eta ^ 8) * ch * cos((2 * f + 4 * g)) - 0.3e1 / 0.64e2 * (52 * ci2 ^ 6 * eta ^ 2 + 72 * ci2 ^ 6 * eta - 124 * ci2 ^ 6 - 78 * ci2 ^ 4 * eta ^ 2 - 108 * ci2 ^ 4 * eta + 186 * ci2 ^ 4 + 36 * ci2 ^ 2 * eta ^ 2 + 48 * ci2 ^ 2 * eta - 84 * ci2 ^ 2 - 5 * eta ^ 2 - 6 * eta + 11) * si2 / L ^ 8 / (eta ^ 8) / ci2 * ch * cos((2 * g + 4 * f)) + (si2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta ^ 2 + 400 * ci2 ^ 6 * eta + 724 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta ^ 2 - 600 * ci2 ^ 4 * eta - 1086 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta ^ 2 + 264 * ci2 ^ 2 * eta + 480 * ci2 ^ 2 - eta ^ 2 - 32 * eta - 59) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * ch - 0.3e1 / 0.4e1 * (20 * ci2 ^ 6 - 30 * ci2 ^ 4 + 12 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh) * cos((3 * f + 2 * g)) + (-0.9e1 / 0.4e1 * (10 * ci2 ^ 6 - 15 * ci2 ^ 4 + 7 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * ch - 0.3e1 * si2 * sqrt((-eta ^ 2 + 1)) * (120 * ci2 ^ 6 * eta ^ 2 - 1632 * ci2 ^ 6 * eta - 1848 * ci2 ^ 6 - 180 * ci2 ^ 4 * eta ^ 2 + 2448 * ci2 ^ 4 * eta + 2772 * ci2 ^ 4 + 70 * ci2 ^ 2 * eta ^ 2 - 1008 * ci2 ^ 2 * eta - 1134 * ci2 ^ 2 - 5 * eta ^ 2 + 96 * eta + 105) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * sh) * sin((f + 2 * g)) + (0.3e1 * si2 * sqrt((-eta ^ 2 + 1)) * (60 * ci2 ^ 6 * eta ^ 2 - 816 * ci2 ^ 6 * eta - 924 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 1224 * ci2 ^ 4 * eta + 1386 * ci2 ^ 4 + 40 * ci2 ^ 2 * eta ^ 2 - 600 * ci2 ^ 2 * eta - 672 * ci2 ^ 2 - 5 * eta ^ 2 + 96 * eta + 105) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * ch - 0.9e1 / 0.4e1 * (20 * ci2 ^ 6 - 30 * ci2 ^ 4 + 12 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh) * cos((f + 2 * g)) + (0.3e1 / 0.16e2 * (4 * ci2 ^ 6 * eta ^ 2 - 28 * ci2 ^ 6 - 6 * ci2 ^ 4 * eta ^ 2 + 42 * ci2 ^ 4 + 4 * ci2 ^ 2 * eta ^ 2 - 24 * ci2 ^ 2 - eta ^ 2 + 5) * si2 / L ^ 8 / (eta ^ 8) / ci2 * ch - 0.9e1 / 0.4e1 * (20 * ci2 ^ 6 - 30 * ci2 ^ 4 + 12 * ci2 ^ 2 - 1) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh) * cos((2 * g + 2 * f)) + (-0.3e1 / 0.4e1 * (10 * ci2 ^ 6 - 15 * ci2 ^ 4 + 7 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * ch - si2 * sqrt((-eta ^ 2 + 1)) * (24 * ci2 ^ 6 * eta ^ 2 + 800 * ci2 ^ 6 * eta + 1448 * ci2 ^ 6 - 36 * ci2 ^ 4 * eta ^ 2 - 1200 * ci2 ^ 4 * eta - 2172 * ci2 ^ 4 + 14 * ci2 ^ 2 * eta ^ 2 + 464 * ci2 ^ 2 * eta + 842 * ci2 ^ 2 - eta ^ 2 - 32 * eta - 59) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * sh) * sin((3 * f + 2 * g)) + (-0.9e1 / 0.4e1 * (10 * ci2 ^ 6 - 15 * ci2 ^ 4 + 7 * ci2 ^ 2 - 1) * Delta * si2 / L ^ 8 / (eta ^ 8) / ci2 * ch - 0.3e1 / 0.16e2 * (8 * ci2 ^ 6 * eta ^ 2 - 56 * ci2 ^ 6 - 12 * ci2 ^ 4 * eta ^ 2 + 84 * ci2 ^ 4 + 6 * ci2 ^ 2 * eta ^ 2 - 38 * ci2 ^ 2 - eta ^ 2 + 5) * si2 / L ^ 8 / (eta ^ 8) / ci2 * sh) * sin((2 * g + 2 * f)) + 0.3e1 * si2 * sqrt((-eta ^ 2 + 1)) * (36 * ci2 ^ 6 * eta ^ 2 + 120 * ci2 ^ 6 * eta + 228 * ci2 ^ 6 - 54 * ci2 ^ 4 * eta ^ 2 - 180 * ci2 ^ 4 * eta - 342 * ci2 ^ 4 + 24 * ci2 ^ 2 * eta ^ 2 + 104 * ci2 ^ 2 * eta + 176 * ci2 ^ 2 - 3 * eta ^ 2 - 22 * eta - 31) / (0.16e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.16e2 * L ^ 8 * ci2 * (eta ^ 8)) * sh * sin(f)) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t24 = (0.3e1 / 0.16e2 * (120 * ci2 ^ 6 * eta ^ 2 - 120 * ci2 ^ 6 - 180 * ci2 ^ 4 * eta ^ 2 + 180 * ci2 ^ 4 + 74 * ci2 ^ 2 * eta ^ 2 - 74 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch * cos((2 * g)) - 0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / (eta ^ 8) / L ^ 8 * sh * cos((3 * f + 4 * g)) + 0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / (eta ^ 8) / L ^ 8 * sh * cos((5 * f + 4 * g)) + 0.3e1 / 0.16e2 * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * sqrt((-eta ^ 2 + 1)) * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch * sin((3 * f)) - 0.3e1 / 0.16e2 * (60 * ci2 ^ 6 * eta ^ 2 - 60 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 90 * ci2 ^ 4 + 44 * ci2 ^ 2 * eta ^ 2 - 44 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * sh * sin((2 * g)) - 0.3e1 / 0.64e2 * (24 * ci2 ^ 6 * eta - 24 * ci2 ^ 6 - 36 * ci2 ^ 4 * eta + 36 * ci2 ^ 4 + 14 * ci2 ^ 2 * eta - 14 * ci2 ^ 2 - eta + 1) * sqrt((-eta ^ 2 + 1)) * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch * sin((-2 * g + f)) - 0.3e1 / 0.64e2 * (24 * ci2 ^ 6 * eta - 24 * ci2 ^ 6 - 36 * ci2 ^ 4 * eta + 36 * ci2 ^ 4 + 14 * ci2 ^ 2 * eta - 14 * ci2 ^ 2 - eta + 1) * sqrt((-eta ^ 2 + 1)) * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch * sin((5 * f + 2 * g)) + 0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / (eta ^ 8) / L ^ 8 * ch * sin((5 * f + 4 * g)) - 0.3e1 / 0.8e1 * (2 * ci2 ^ 4 - 3 * ci2 ^ 2 + 1) * ci2 * sqrt((-eta ^ 2 + 1)) * si2 / (eta ^ 8) / L ^ 8 * ch * sin((3 * f + 4 * g)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh * cos((5 * f + 2 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta - 12 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta + 18 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta - 8 * ci2 ^ 2 - eta + 1) * si2 / ci2 / L ^ 8 / (eta ^ 8) * sh * cos((-2 * g + f)) - 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / (eta ^ 8) / L ^ 8 * sh * cos((6 * f + 4 * g)) - 0.3e1 / 0.64e2 * (104 * ci2 ^ 6 * eta ^ 2 + 144 * ci2 ^ 6 * eta - 248 * ci2 ^ 6 - 156 * ci2 ^ 4 * eta ^ 2 - 216 * ci2 ^ 4 * eta + 372 * ci2 ^ 4 + 62 * ci2 ^ 2 * eta ^ 2 + 84 * ci2 ^ 2 * eta - 146 * ci2 ^ 2 - 5 * eta ^ 2 - 6 * eta + 11) * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch * sin((2 * g + 4 * f)) - 0.3e1 / 0.8e1 * (10 * ci2 ^ 6 * eta ^ 2 + 70 * ci2 ^ 6 - 15 * ci2 ^ 4 * eta ^ 2 - 105 * ci2 ^ 4 + 3 * ci2 ^ 2 * eta ^ 2 + 55 * ci2 ^ 2 + eta ^ 2 - 10) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch + 0.15e2 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / (eta ^ 8) / L ^ 8 * sh * cos((2 * f + 4 * g)) + 0.15e2 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / (eta ^ 8) / L ^ 8 * ch * sin((2 * f + 4 * g)) + 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 + 6 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 - 9 * ci2 ^ 2 + eta ^ 2 + 3) * ci2 * si2 / (eta ^ 8) / L ^ 8 * ch * sin((4 * f + 4 * g)) - 0.3e1 / 0.64e2 * (52 * ci2 ^ 6 * eta ^ 2 + 72 * ci2 ^ 6 * eta - 124 * ci2 ^ 6 - 78 * ci2 ^ 4 * eta ^ 2 - 108 * ci2 ^ 4 * eta + 186 * ci2 ^ 4 + 36 * ci2 ^ 2 * eta ^ 2 + 48 * ci2 ^ 2 * eta - 84 * ci2 ^ 2 - 5 * eta ^ 2 - 6 * eta + 11) * si2 / (eta ^ 8) / L ^ 8 / ci2 * sh * cos((2 * g + 4 * f)) + 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 + 6 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 - 9 * ci2 ^ 2 + eta ^ 2 + 3) * ci2 * si2 / (eta ^ 8) / L ^ 8 * sh * cos((4 * f + 4 * g)) - 0.3e1 / 0.16e2 * (10 * ci2 ^ 6 * eta ^ 2 - 72 * ci2 ^ 6 * eta + 62 * ci2 ^ 6 - 15 * ci2 ^ 4 * eta ^ 2 + 108 * ci2 ^ 4 * eta - 93 * ci2 ^ 4 + 3 * ci2 ^ 2 * eta ^ 2 - 48 * ci2 ^ 2 * eta + 45 * ci2 ^ 2 + eta ^ 2 + 6 * eta - 7) * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch * sin((2 * f)) - 0.3e1 / 0.32e2 * (2 * ci2 ^ 4 * eta ^ 2 - 2 * ci2 ^ 4 - 3 * ci2 ^ 2 * eta ^ 2 + 3 * ci2 ^ 2 + eta ^ 2 - 1) * ci2 * si2 / (eta ^ 8) / L ^ 8 * ch * sin((6 * f + 4 * g)) + (0.3e1 / 0.16e2 * (8 * ci2 ^ 6 * eta ^ 2 - 56 * ci2 ^ 6 - 12 * ci2 ^ 4 * eta ^ 2 + 84 * ci2 ^ 4 + 6 * ci2 ^ 2 * eta ^ 2 - 38 * ci2 ^ 2 - eta ^ 2 + 5) * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch - 0.9e1 / 0.4e1 * (10 * ci2 ^ 6 - 15 * ci2 ^ 4 + 7 * ci2 ^ 2 - 1) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * sh) * sin((2 * g + 2 * f)) + (0.9e1 / 0.4e1 * (20 * ci2 ^ 6 - 30 * ci2 ^ 4 + 12 * ci2 ^ 2 - 1) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch + 0.3e1 / 0.16e2 * (4 * ci2 ^ 6 * eta ^ 2 - 28 * ci2 ^ 6 - 6 * ci2 ^ 4 * eta ^ 2 + 42 * ci2 ^ 4 + 4 * ci2 ^ 2 * eta ^ 2 - 24 * ci2 ^ 2 - eta ^ 2 + 5) * si2 / (eta ^ 8) / L ^ 8 / ci2 * sh) * cos((2 * g + 2 * f)) + (0.3e1 / 0.4e1 * (20 * ci2 ^ 6 - 30 * ci2 ^ 4 + 12 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch + si2 * sqrt((-eta ^ 2 + 1)) * (12 * ci2 ^ 6 * eta ^ 2 + 400 * ci2 ^ 6 * eta + 724 * ci2 ^ 6 - 18 * ci2 ^ 4 * eta ^ 2 - 600 * ci2 ^ 4 * eta - 1086 * ci2 ^ 4 + 8 * ci2 ^ 2 * eta ^ 2 + 264 * ci2 ^ 2 * eta + 480 * ci2 ^ 2 - eta ^ 2 - 32 * eta - 59) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * sh) * cos((3 * f + 2 * g)) + (0.9e1 / 0.4e1 * (20 * ci2 ^ 6 - 30 * ci2 ^ 4 + 12 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * ch + 0.3e1 * si2 * sqrt((-eta ^ 2 + 1)) * (60 * ci2 ^ 6 * eta ^ 2 - 816 * ci2 ^ 6 * eta - 924 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 1224 * ci2 ^ 4 * eta + 1386 * ci2 ^ 4 + 40 * ci2 ^ 2 * eta ^ 2 - 600 * ci2 ^ 2 * eta - 672 * ci2 ^ 2 - 5 * eta ^ 2 + 96 * eta + 105) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * sh) * cos((f + 2 * g)) + (si2 * sqrt((-eta ^ 2 + 1)) * (24 * ci2 ^ 6 * eta ^ 2 + 800 * ci2 ^ 6 * eta + 1448 * ci2 ^ 6 - 36 * ci2 ^ 4 * eta ^ 2 - 1200 * ci2 ^ 4 * eta - 2172 * ci2 ^ 4 + 14 * ci2 ^ 2 * eta ^ 2 + 464 * ci2 ^ 2 * eta + 842 * ci2 ^ 2 - eta ^ 2 - 32 * eta - 59) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * ch - 0.3e1 / 0.4e1 * (10 * ci2 ^ 6 - 15 * ci2 ^ 4 + 7 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * sh) * sin((3 * f + 2 * g)) + (0.3e1 * si2 * sqrt((-eta ^ 2 + 1)) * (120 * ci2 ^ 6 * eta ^ 2 - 1632 * ci2 ^ 6 * eta - 1848 * ci2 ^ 6 - 180 * ci2 ^ 4 * eta ^ 2 + 2448 * ci2 ^ 4 * eta + 2772 * ci2 ^ 4 + 70 * ci2 ^ 2 * eta ^ 2 - 1008 * ci2 ^ 2 * eta - 1134 * ci2 ^ 2 - 5 * eta ^ 2 + 96 * eta + 105) / (0.64e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.64e2 * L ^ 8 * ci2 * (eta ^ 8)) * ch - 0.9e1 / 0.4e1 * (10 * ci2 ^ 6 - 15 * ci2 ^ 4 + 7 * ci2 ^ 2 - 1) * sqrt((-eta ^ 2 + 1)) * Delta * si2 / (eta ^ 8) / L ^ 8 / ci2 * sh) * sin((f + 2 * g)) - 0.3e1 * si2 * sqrt((-eta ^ 2 + 1)) * (36 * ci2 ^ 6 * eta ^ 2 + 120 * ci2 ^ 6 * eta + 228 * ci2 ^ 6 - 54 * ci2 ^ 4 * eta ^ 2 - 180 * ci2 ^ 4 * eta - 342 * ci2 ^ 4 + 24 * ci2 ^ 2 * eta ^ 2 + 104 * ci2 ^ 2 * eta + 176 * ci2 ^ 2 - 3 * eta ^ 2 - 22 * eta - 31) / (0.16e2 * L ^ 8 * ci2 * (eta ^ 9) + 0.16e2 * L ^ 8 * ci2 * (eta ^ 8)) * ch * sin(f)) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t25 = ((-0.3e1 / 0.4e1 * (75 * eta ^ 2 * si2 ^ 6 - 140 * eta ^ 2 * si2 ^ 4 - 145 * si2 ^ 6 + 78 * eta ^ 2 * si2 ^ 2 + 280 * si2 ^ 4 - 12 * eta ^ 2 - 162 * si2 ^ 2 + 26) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch - ((360 * eta ^ 3 * si2 ^ 6 + 2286 * eta ^ 2 * si2 ^ 6 - 708 * eta ^ 3 * si2 ^ 4 + 2268 * eta * si2 ^ 6 - 4208 * eta ^ 2 * si2 ^ 4 - 6226 * si2 ^ 6 + 414 * eta ^ 3 * si2 ^ 2 - 4212 * eta * si2 ^ 4 + 2175 * eta ^ 2 * si2 ^ 2 + 11752 * si2 ^ 4 - 65 * eta ^ 3 + 2268 * eta * si2 ^ 2 - 222 * eta ^ 2 - 6357 * si2 ^ 2 - 297 * eta + 772) * si2 ^ 2 / L ^ 8 / eta ^ 8 * sh) / 0.64e2) * sin((3 * g + 3 * f)) + (((882 * eta ^ 4 * si2 ^ 8 + 2478 * eta ^ 3 * si2 ^ 8 - 1584 * eta ^ 4 * si2 ^ 6 + 4422 * eta ^ 2 * si2 ^ 8 - 4236 * eta ^ 3 * si2 ^ 6 - 2910 * eta * si2 ^ 8 + 945 * eta ^ 4 * si2 ^ 4 - 7620 * eta ^ 2 * si2 ^ 6 - 4872 * si2 ^ 8 + 3417 * eta ^ 3 * si2 ^ 4 + 5100 * eta * si2 ^ 6 - 210 * eta ^ 4 * si2 ^ 2 + 5313 * eta ^ 2 * si2 ^ 4 + 8340 * si2 ^ 6 - 1395 * eta ^ 3 * si2 ^ 2 - 3993 * eta * si2 ^ 4 + 15 * eta ^ 4 - 1773 * eta ^ 2 * si2 ^ 2 - 5682 * si2 ^ 4 + 183 * eta ^ 3 + 1539 * eta * si2 ^ 2 + 207 * eta ^ 2 + 1839 * si2 ^ 2 - 195 * eta - 210) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) + 0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((f - g)) + (0.9e1 / 0.4e1 * (35 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 30 * eta ^ 2 * si2 ^ 2 + 40 * si2 ^ 4 - 4 * eta ^ 2 - 18 * si2 ^ 2 + 2) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((1224 * eta ^ 3 * si2 ^ 8 + 13062 * eta ^ 2 * si2 ^ 8 - 2412 * eta ^ 3 * si2 ^ 6 + 5508 * eta * si2 ^ 8 - 22992 * eta ^ 2 * si2 ^ 6 - 26250 * si2 ^ 8 + 1554 * eta ^ 3 * si2 ^ 4 - 10044 * eta * si2 ^ 6 + 13839 * eta ^ 2 * si2 ^ 4 + 48360 * si2 ^ 6 - 345 * eta ^ 3 * si2 ^ 2 + 5832 * eta * si2 ^ 4 - 3378 * eta ^ 2 * si2 ^ 2 - 29901 * si2 ^ 4 + 18 * eta ^ 3 - 1161 * eta * si2 ^ 2 + 255 * eta ^ 2 + 7104 * si2 ^ 2 + 72 * eta - 525) / eta ^ 8 / L ^ 8 * sh) / 0.64e2) * sin((f + g)) + (0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((1062 * eta ^ 4 * si2 ^ 8 + 4386 * eta ^ 3 * si2 ^ 8 - 1872 * eta ^ 4 * si2 ^ 6 + 5898 * eta ^ 2 * si2 ^ 8 - 8052 * eta ^ 3 * si2 ^ 6 - 4818 * eta * si2 ^ 8 + 1071 * eta ^ 4 * si2 ^ 4 - 10716 * eta ^ 2 * si2 ^ 6 - 6528 * si2 ^ 8 + 5799 * eta ^ 3 * si2 ^ 4 + 8916 * eta * si2 ^ 6 - 222 * eta ^ 4 * si2 ^ 2 + 7359 * eta ^ 2 * si2 ^ 4 + 11724 * si2 ^ 6 - 1869 * eta ^ 3 * si2 ^ 2 - 6375 * eta * si2 ^ 4 + 15 * eta ^ 4 - 2211 * eta ^ 2 * si2 ^ 2 - 7854 * si2 ^ 4 + 183 * eta ^ 3 + 2013 * eta * si2 ^ 2 + 207 * eta ^ 2 + 2289 * si2 ^ 2 - 195 * eta - 210) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * sin((f - g)) + (0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (330 * eta ^ 2 * si2 ^ 6 - 600 * eta ^ 2 * si2 ^ 4 - 330 * si2 ^ 6 + 333 * eta ^ 2 * si2 ^ 2 + 600 * si2 ^ 4 - 56 * eta ^ 2 - 333 * si2 ^ 2 + 56) / (eta ^ 8) / (L ^ 8) * ch + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (120 * eta ^ 3 * si2 ^ 6 + 55 * eta ^ 2 * si2 ^ 6 - 240 * eta ^ 3 * si2 ^ 4 - 12 * eta * si2 ^ 6 - 110 * eta ^ 2 * si2 ^ 4 - 163 * si2 ^ 6 + 148 * eta ^ 3 * si2 ^ 2 + 24 * eta * si2 ^ 4 + 69 * eta ^ 2 * si2 ^ 2 + 326 * si2 ^ 4 - 28 * eta ^ 3 - 14 * eta * si2 ^ 2 - 14 * eta ^ 2 - 203 * si2 ^ 2 + 2 * eta + 40) / (eta ^ 8) / (L ^ 8) * sh) * sin((3 * g)) + (-0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (300 * eta ^ 2 * si2 ^ 8 - 520 * eta ^ 2 * si2 ^ 6 + 260 * si2 ^ 8 + 227 * eta ^ 2 * si2 ^ 4 - 440 * si2 ^ 6 - 4 * eta ^ 2 * si2 ^ 2 + 441 * si2 ^ 4 - 5 * eta ^ 2 - 228 * si2 ^ 2 + 35) / (eta ^ 8) / (L ^ 8) * ch - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (160 * eta ^ 4 * si2 ^ 8 + 258 * eta ^ 3 * si2 ^ 8 - 320 * eta ^ 4 * si2 ^ 6 + 478 * eta ^ 2 * si2 ^ 8 - 516 * eta ^ 3 * si2 ^ 6 + 198 * eta * si2 ^ 8 + 172 * eta ^ 4 * si2 ^ 4 - 956 * eta ^ 2 * si2 ^ 6 + 378 * si2 ^ 8 + 276 * eta ^ 3 * si2 ^ 4 - 396 * eta * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 2 + 638 * eta ^ 2 * si2 ^ 4 - 756 * si2 ^ 6 - 18 * eta ^ 3 * si2 ^ 2 + 484 * eta * si2 ^ 4 - 4 * eta ^ 4 - 160 * eta ^ 2 * si2 ^ 2 + 742 * si2 ^ 4 - 7 * eta ^ 3 - 286 * eta * si2 ^ 2 + 13 * eta ^ 2 - 364 * si2 ^ 2 + 55 * eta + 63) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * sin(g) + (-0.9e1 / 0.8e1 * (125 * eta ^ 2 * si2 ^ 6 - 230 * eta ^ 2 * si2 ^ 4 - 125 * si2 ^ 6 + 126 * eta ^ 2 * si2 ^ 2 + 230 * si2 ^ 4 - 19 * eta ^ 2 - 126 * si2 ^ 2 + 19) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch - (3 * si2 ^ 2 * (582 * eta ^ 4 * si2 ^ 6 - 4984 * eta ^ 3 * si2 ^ 6 - 1104 * eta ^ 4 * si2 ^ 4 - 6232 * eta ^ 2 * si2 ^ 6 + 9152 * eta ^ 3 * si2 ^ 4 + 5008 * eta * si2 ^ 6 + 617 * eta ^ 4 * si2 ^ 2 + 11480 * eta ^ 2 * si2 ^ 4 + 5626 * si2 ^ 6 - 5165 * eta ^ 3 * si2 ^ 2 - 9200 * eta * si2 ^ 4 - 90 * eta ^ 4 - 6433 * eta ^ 2 * si2 ^ 2 - 10328 * si2 ^ 4 + 901 * eta ^ 3 + 5193 * eta * si2 ^ 2 + 1075 * eta ^ 2 + 5788 * si2 ^ 2 - 905 * eta - 981) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * sin((3 * g + f)) + (((-936 * eta ^ 3 * si2 ^ 8 + 7998 * eta ^ 2 * si2 ^ 8 + 1476 * eta ^ 3 * si2 ^ 6 - 2268 * eta * si2 ^ 8 - 13872 * eta ^ 2 * si2 ^ 6 - 5106 * si2 ^ 8 - 750 * eta ^ 3 * si2 ^ 4 + 4212 * eta * si2 ^ 6 + 5487 * eta ^ 2 * si2 ^ 4 + 8808 * si2 ^ 6 + 159 * eta ^ 3 * si2 ^ 2 - 2808 * eta * si2 ^ 4 + 462 * eta ^ 2 * si2 ^ 2 - 1389 * si2 ^ 4 - 18 * eta ^ 3 + 783 * eta * si2 ^ 2 - 255 * eta ^ 2 - 2256 * si2 ^ 2 - 72 * eta + 525) / eta ^ 8 / L ^ 8 * ch) / 0.64e2 - 0.9e1 / 0.4e1 * (35 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 30 * eta ^ 2 * si2 ^ 2 + 40 * si2 ^ 4 - 4 * eta ^ 2 - 18 * si2 ^ 2 + 2) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((f + g)) + (0.3e1 / 0.8e1 * (65 * eta ^ 2 * si2 ^ 6 - 110 * eta ^ 2 * si2 ^ 4 - 65 * si2 ^ 6 + 54 * eta ^ 2 * si2 ^ 2 + 110 * si2 ^ 4 - 7 * eta ^ 2 - 54 * si2 ^ 2 + 7) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch + ((-162 * eta ^ 4 * si2 ^ 8 - 214 * eta ^ 3 * si2 ^ 8 + 240 * eta ^ 4 * si2 ^ 6 + 1178 * eta ^ 2 * si2 ^ 8 + 28 * eta ^ 3 * si2 ^ 6 + 382 * eta * si2 ^ 8 - 125 * eta ^ 4 * si2 ^ 4 - 2924 * eta ^ 2 * si2 ^ 6 - 1184 * si2 ^ 8 + 427 * eta ^ 3 * si2 ^ 4 - 364 * eta * si2 ^ 6 + 34 * eta ^ 4 * si2 ^ 2 + 2527 * eta ^ 2 * si2 ^ 4 + 3020 * si2 ^ 6 - 273 * eta ^ 3 * si2 ^ 2 - 231 * eta * si2 ^ 4 - 5 * eta ^ 4 - 815 * eta ^ 2 * si2 ^ 2 - 2598 * si2 ^ 4 + 31 * eta ^ 3 + 245 * eta * si2 ^ 2 + 75 * eta ^ 2 + 809 * si2 ^ 2 - 31 * eta - 70) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * sh)) * sin((g + 3 * f)) + (0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * si2 ^ 6 - 10 * si2 ^ 4 + 6 * si2 ^ 2 - 1) / (eta ^ 8) / (L ^ 8) * ch - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (324 * eta ^ 3 * si2 ^ 6 + 816 * eta ^ 2 * si2 ^ 6 - 598 * eta ^ 3 * si2 ^ 4 - 1074 * eta * si2 ^ 6 - 1510 * eta ^ 2 * si2 ^ 4 - 1974 * si2 ^ 6 + 325 * eta ^ 3 * si2 ^ 2 + 2090 * eta * si2 ^ 4 + 815 * eta ^ 2 * si2 ^ 2 + 3818 * si2 ^ 4 - 46 * eta ^ 3 - 1197 * eta * si2 ^ 2 - 110 * eta ^ 2 - 2163 * si2 ^ 2 + 176 * eta + 308) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * sin((4 * f + 3 * g)) + (0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (80 * si2 ^ 6 - 150 * si2 ^ 4 + 84 * si2 ^ 2 - 13) / (eta ^ 8) / (L ^ 8) * ch + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (87 * eta ^ 3 * si2 ^ 6 + 237 * eta ^ 2 * si2 ^ 6 - 161 * eta ^ 3 * si2 ^ 4 - 421 * eta * si2 ^ 6 - 461 * eta ^ 2 * si2 ^ 4 - 475 * si2 ^ 6 + 101 * eta ^ 3 * si2 ^ 2 + 781 * eta * si2 ^ 4 + 280 * eta ^ 2 * si2 ^ 2 + 889 * si2 ^ 4 - 25 * eta ^ 3 - 499 * eta * si2 ^ 2 - 54 * eta ^ 2 - 562 * si2 ^ 2 + 129 * eta + 138) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * sin((2 * f + 3 * g)) + (((486 * eta ^ 4 * si2 ^ 8 - 406 * eta ^ 3 * si2 ^ 8 - 912 * eta ^ 4 * si2 ^ 6 - 2758 * eta ^ 2 * si2 ^ 8 + 412 * eta ^ 3 * si2 ^ 6 + 574 * eta * si2 ^ 8 + 547 * eta ^ 4 * si2 ^ 4 + 4660 * eta ^ 2 * si2 ^ 6 + 2104 * si2 ^ 8 - 149 * eta ^ 3 * si2 ^ 4 - 748 * eta * si2 ^ 6 - 110 * eta ^ 4 * si2 ^ 2 - 2657 * eta ^ 2 * si2 ^ 4 - 3412 * si2 ^ 6 + 111 * eta ^ 3 * si2 ^ 2 + 345 * eta * si2 ^ 4 + 5 * eta ^ 4 + 673 * eta ^ 2 * si2 ^ 2 + 1914 * si2 ^ 4 - 31 * eta ^ 3 - 139 * eta * si2 ^ 2 - 75 * eta ^ 2 - 535 * si2 ^ 2 + 31 * eta + 70) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) - 0.3e1 / 0.8e1 * (65 * eta ^ 2 * si2 ^ 6 - 110 * eta ^ 2 * si2 ^ 4 - 65 * si2 ^ 6 + 54 * eta ^ 2 * si2 ^ 2 + 110 * si2 ^ 4 - 7 * eta ^ 2 - 54 * si2 ^ 2 + 7) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((g + 3 * f)) + (0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (110 * eta ^ 3 * si2 ^ 8 - 340 * eta ^ 2 * si2 ^ 8 - 202 * eta ^ 3 * si2 ^ 6 - 554 * eta * si2 ^ 8 + 626 * eta ^ 2 * si2 ^ 6 - 176 * si2 ^ 8 + 85 * eta ^ 3 * si2 ^ 4 + 1042 * eta * si2 ^ 6 - 408 * eta ^ 2 * si2 ^ 4 + 358 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 - 473 * eta * si2 ^ 4 + 110 * eta ^ 2 * si2 ^ 2 - 32 * si2 ^ 4 - 4 * eta ^ 3 - 23 * eta * si2 ^ 2 - 10 * eta ^ 2 - 146 * si2 ^ 2 + 23 * eta + 35) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (30 * si2 ^ 6 - 50 * si2 ^ 4 + 24 * si2 ^ 2 - 3) / (eta ^ 8) / (L ^ 8) * sh) * cos((g + 2 * f)) + (-0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (30 * si2 ^ 6 - 50 * si2 ^ 4 + 24 * si2 ^ 2 - 3) / (eta ^ 8) / (L ^ 8) * ch - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (10 * eta ^ 3 * si2 ^ 8 - 260 * eta ^ 2 * si2 ^ 8 - 18 * eta ^ 3 * si2 ^ 6 + 866 * eta * si2 ^ 8 + 450 * eta ^ 2 * si2 ^ 6 + 1640 * si2 ^ 8 - 25 * eta ^ 3 * si2 ^ 4 - 1686 * eta * si2 ^ 6 - 300 * eta ^ 2 * si2 ^ 4 - 3162 * si2 ^ 6 + 29 * eta ^ 3 * si2 ^ 2 + 1133 * eta * si2 ^ 4 + 94 * eta ^ 2 * si2 ^ 2 + 2036 * si2 ^ 4 - 4 * eta ^ 3 - 301 * eta * si2 ^ 2 - 10 * eta ^ 2 - 490 * si2 ^ 2 + 23 * eta + 35) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh) * sin((g + 2 * f)) + (-0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * ch + 0.3e1 / 0.64e2 * (78 * eta ^ 3 * si2 ^ 6 - 434 * eta ^ 2 * si2 ^ 6 - 144 * eta ^ 3 * si2 ^ 4 - 474 * eta * si2 ^ 6 + 848 * eta ^ 2 * si2 ^ 4 + 830 * si2 ^ 6 + 77 * eta ^ 3 * si2 ^ 2 + 936 * eta * si2 ^ 4 - 490 * eta ^ 2 * si2 ^ 2 - 1640 * si2 ^ 4 - 10 * eta ^ 3 - 539 * eta * si2 ^ 2 + 75 * eta ^ 2 + 952 * si2 ^ 2 + 76 * eta - 141) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh) * sin((3 * g + 5 * f)) + (((360 * eta ^ 3 * si2 ^ 6 + 2406 * eta ^ 2 * si2 ^ 6 - 708 * eta ^ 3 * si2 ^ 4 + 2268 * eta * si2 ^ 6 - 4400 * eta ^ 2 * si2 ^ 4 - 6586 * si2 ^ 6 + 414 * eta ^ 3 * si2 ^ 2 - 4212 * eta * si2 ^ 4 + 2247 * eta ^ 2 * si2 ^ 2 + 12424 * si2 ^ 4 - 65 * eta ^ 3 + 2268 * eta * si2 ^ 2 - 222 * eta ^ 2 - 6669 * si2 ^ 2 - 297 * eta + 772) * si2 ^ 2 / L ^ 8 / eta ^ 8 * ch) / 0.64e2 - 0.3e1 / 0.4e1 * (75 * eta ^ 2 * si2 ^ 6 - 140 * eta ^ 2 * si2 ^ 4 - 145 * si2 ^ 6 + 78 * eta ^ 2 * si2 ^ 2 + 280 * si2 ^ 4 - 12 * eta ^ 2 - 162 * si2 ^ 2 + 26) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + 3 * f)) + ((3 * si2 ^ 2 * (582 * eta ^ 4 * si2 ^ 6 - 5036 * eta ^ 3 * si2 ^ 6 - 1104 * eta ^ 4 * si2 ^ 4 - 6284 * eta ^ 2 * si2 ^ 6 + 9256 * eta ^ 3 * si2 ^ 4 + 5060 * eta * si2 ^ 6 + 617 * eta ^ 4 * si2 ^ 2 + 11584 * eta ^ 2 * si2 ^ 4 + 5678 * si2 ^ 6 - 5217 * eta ^ 3 * si2 ^ 2 - 9304 * eta * si2 ^ 4 - 90 * eta ^ 4 - 6485 * eta ^ 2 * si2 ^ 2 - 10432 * si2 ^ 4 + 901 * eta ^ 3 + 5245 * eta * si2 ^ 2 + 1075 * eta ^ 2 + 5840 * si2 ^ 2 - 905 * eta - 981) / (64 * L ^ 8 * eta ^ 9 + 64 * L ^ 8 * eta ^ 8) * ch) - 0.9e1 / 0.8e1 * (125 * eta ^ 2 * si2 ^ 6 - 230 * eta ^ 2 * si2 ^ 4 - 125 * si2 ^ 6 + 126 * eta ^ 2 * si2 ^ 2 + 230 * si2 ^ 4 - 19 * eta ^ 2 - 126 * si2 ^ 2 + 19) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + f)) + (-0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (69 * eta ^ 3 * si2 ^ 6 + 219 * eta ^ 2 * si2 ^ 6 - 135 * eta ^ 3 * si2 ^ 4 - 399 * eta * si2 ^ 6 - 435 * eta ^ 2 * si2 ^ 4 - 453 * si2 ^ 6 + 93 * eta ^ 3 * si2 ^ 2 + 747 * eta * si2 ^ 4 + 272 * eta ^ 2 * si2 ^ 2 + 855 * si2 ^ 4 - 25 * eta ^ 3 - 487 * eta * si2 ^ 2 - 54 * eta ^ 2 - 550 * si2 ^ 2 + 129 * eta + 138) / (1 + eta) / (L ^ 8) / (eta ^ 8) * ch + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (80 * si2 ^ 6 - 150 * si2 ^ 4 + 84 * si2 ^ 2 - 13) / (eta ^ 8) / (L ^ 8) * sh) * cos((2 * f + 3 * g)) + 0.9e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / (eta ^ 8) / (L ^ 8) * ch * cos((8 * f + 5 * g)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (25 * eta ^ 2 * si2 ^ 6 + 66 * eta * si2 ^ 6 - 51 * eta ^ 2 * si2 ^ 4 - 91 * si2 ^ 6 - 132 * eta * si2 ^ 4 + 31 * eta ^ 2 * si2 ^ 2 + 183 * si2 ^ 4 + 77 * eta * si2 ^ 2 - 5 * eta ^ 2 - 108 * si2 ^ 2 - 11 * eta + 16) / (eta ^ 8) / (L ^ 8) * ch * cos((3 * g + 6 * f)) - 0.15e2 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 7 * si2 ^ 4 + 6 * eta ^ 2 + 13 * si2 ^ 2 - 6) / (eta ^ 8) / (L ^ 8) * ch * cos((2 * f + 5 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (10 * eta ^ 3 * si2 ^ 8 - 272 * eta ^ 2 * si2 ^ 8 - 10 * eta ^ 3 * si2 ^ 6 + 26 * eta * si2 ^ 8 + 482 * eta ^ 2 * si2 ^ 6 + 236 * si2 ^ 8 - 19 * eta ^ 3 * si2 ^ 4 - 62 * eta * si2 ^ 6 - 300 * eta ^ 2 * si2 ^ 4 - 410 * si2 ^ 6 + 17 * eta ^ 3 * si2 ^ 2 + 67 * eta * si2 ^ 4 + 76 * eta ^ 2 * si2 ^ 2 + 252 * si2 ^ 4 - 2 * eta ^ 3 - 29 * eta * si2 ^ 2 - 6 * eta ^ 2 - 64 * si2 ^ 2 + 3 * eta + 5) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh * sin((-g + 2 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (27 * eta ^ 2 * si2 ^ 6 + 66 * eta * si2 ^ 6 - 53 * eta ^ 2 * si2 ^ 4 - 93 * si2 ^ 6 - 132 * eta * si2 ^ 4 + 31 * eta ^ 2 * si2 ^ 2 + 185 * si2 ^ 4 + 77 * eta * si2 ^ 2 - 5 * eta ^ 2 - 108 * si2 ^ 2 - 11 * eta + 16) / (eta ^ 8) / (L ^ 8) * sh * sin((3 * g + 6 * f)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (10 * eta ^ 2 * si2 ^ 4 - 19 * eta ^ 2 * si2 ^ 2 + 11 * si2 ^ 4 + 9 * eta ^ 2 - 19 * si2 ^ 2 + 8) / (eta ^ 8) / (L ^ 8) * sh * sin((5 * g + 4 * f)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (140 * eta ^ 3 * si2 ^ 8 + 152 * eta ^ 2 * si2 ^ 8 - 228 * eta ^ 3 * si2 ^ 6 - 176 * eta * si2 ^ 8 - 180 * eta ^ 2 * si2 ^ 6 - 116 * si2 ^ 8 + 99 * eta ^ 3 * si2 ^ 4 + 300 * eta * si2 ^ 6 + 5 * eta ^ 2 * si2 ^ 4 + 108 * si2 ^ 6 - 6 * eta ^ 3 * si2 ^ 2 - 141 * eta * si2 ^ 4 + 34 * eta ^ 2 * si2 ^ 2 + 37 * si2 ^ 4 - eta ^ 3 + 12 * eta * si2 ^ 2 - 5 * eta ^ 2 - 40 * si2 ^ 2 + eta + 5) / (1 + eta) / (eta ^ 8) / (L ^ 8) * sh * sin((g + 4 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (10 * eta ^ 2 * si2 ^ 4 - 19 * eta ^ 2 * si2 ^ 2 + 11 * si2 ^ 4 + 9 * eta ^ 2 - 19 * si2 ^ 2 + 8) / (eta ^ 8) / (L ^ 8) * ch * cos((5 * g + 4 * f)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (120 * eta ^ 3 * si2 ^ 8 + 420 * eta ^ 2 * si2 ^ 8 - 188 * eta ^ 3 * si2 ^ 6 - 156 * eta * si2 ^ 8 - 716 * eta ^ 2 * si2 ^ 6 - 384 * si2 ^ 8 + 87 * eta ^ 3 * si2 ^ 4 + 260 * eta * si2 ^ 6 + 377 * eta ^ 2 * si2 ^ 4 + 644 * si2 ^ 6 - 14 * eta ^ 3 * si2 ^ 2 - 129 * eta * si2 ^ 4 - 70 * eta ^ 2 * si2 ^ 2 - 335 * si2 ^ 4 + eta ^ 3 + 20 * eta * si2 ^ 2 + 5 * eta ^ 2 + 64 * si2 ^ 2 - eta - 5) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch * cos((g + 4 * f)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 33 * si2 ^ 4 + 6 * eta ^ 2 + 65 * si2 ^ 2 - 32) / (eta ^ 8) / (L ^ 8) * ch * cos((6 * f + 5 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 33 * si2 ^ 4 + 6 * eta ^ 2 + 65 * si2 ^ 2 - 32) / (eta ^ 8) / (L ^ 8) * sh * sin((6 * f + 5 * g)) - 0.9e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / (eta ^ 8) / (L ^ 8) * sh * sin((8 * f + 5 * g)) + 0.15e2 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 7 * si2 ^ 4 + 6 * eta ^ 2 + 13 * si2 ^ 2 - 6) / (eta ^ 8) / (L ^ 8) * sh * sin((2 * f + 5 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (70 * eta ^ 3 * si2 ^ 8 - 224 * eta ^ 2 * si2 ^ 8 - 130 * eta ^ 3 * si2 ^ 6 - 34 * eta * si2 ^ 8 + 386 * eta ^ 2 * si2 ^ 6 + 188 * si2 ^ 8 + 55 * eta ^ 3 * si2 ^ 4 + 58 * eta * si2 ^ 6 - 240 * eta ^ 2 * si2 ^ 4 - 314 * si2 ^ 6 + 3 * eta ^ 3 * si2 ^ 2 - 7 * eta * si2 ^ 4 + 64 * eta ^ 2 * si2 ^ 2 + 192 * si2 ^ 4 - 2 * eta ^ 3 - 15 * eta * si2 ^ 2 - 6 * eta ^ 2 - 52 * si2 ^ 2 + 3 * eta + 5) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch * cos((-g + 2 * f)) + (-0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (80 * eta ^ 4 * si2 ^ 8 + 118 * eta ^ 3 * si2 ^ 8 - 160 * eta ^ 4 * si2 ^ 6 - 222 * eta ^ 2 * si2 ^ 8 - 236 * eta ^ 3 * si2 ^ 6 - 1102 * eta * si2 ^ 8 + 124 * eta ^ 4 * si2 ^ 4 + 444 * eta ^ 2 * si2 ^ 6 - 1498 * si2 ^ 8 + 192 * eta ^ 3 * si2 ^ 4 + 2204 * eta * si2 ^ 6 - 44 * eta ^ 4 * si2 ^ 2 - 326 * eta ^ 2 * si2 ^ 4 + 2996 * si2 ^ 6 - 74 * eta ^ 3 * si2 ^ 2 - 1656 * eta * si2 ^ 4 + 4 * eta ^ 4 + 104 * eta ^ 2 * si2 ^ 2 - 2166 * si2 ^ 4 + 7 * eta ^ 3 + 554 * eta * si2 ^ 2 - 13 * eta ^ 2 + 668 * si2 ^ 2 - 55 * eta - 63) / (1 + eta) / (L ^ 8) / (eta ^ 8) * ch + 0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * eta ^ 2 * si2 ^ 8 - 200 * eta ^ 2 * si2 ^ 6 - 1280 * si2 ^ 8 + 143 * eta ^ 2 * si2 ^ 4 + 2360 * si2 ^ 6 - 52 * eta ^ 2 * si2 ^ 2 - 1539 * si2 ^ 4 + 5 * eta ^ 2 + 412 * si2 ^ 2 - 35) / (eta ^ 8) / (L ^ 8) * sh) * cos(g) + (-0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (120 * eta ^ 3 * si2 ^ 6 + 65 * eta ^ 2 * si2 ^ 6 - 240 * eta ^ 3 * si2 ^ 4 - 12 * eta * si2 ^ 6 - 130 * eta ^ 2 * si2 ^ 4 - 173 * si2 ^ 6 + 148 * eta ^ 3 * si2 ^ 2 + 24 * eta * si2 ^ 4 + 79 * eta ^ 2 * si2 ^ 2 + 346 * si2 ^ 4 - 28 * eta ^ 3 - 14 * eta * si2 ^ 2 - 14 * eta ^ 2 - 213 * si2 ^ 2 + 2 * eta + 40) / (eta ^ 8) / (L ^ 8) * ch + 0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (330 * eta ^ 2 * si2 ^ 6 - 600 * eta ^ 2 * si2 ^ 4 - 330 * si2 ^ 6 + 333 * eta ^ 2 * si2 ^ 2 + 600 * si2 ^ 4 - 56 * eta ^ 2 - 333 * si2 ^ 2 + 56) / (eta ^ 8) / (L ^ 8) * sh) * cos((3 * g)) + (-0.3e1 / 0.64e2 * (78 * eta ^ 3 * si2 ^ 6 - 430 * eta ^ 2 * si2 ^ 6 - 144 * eta ^ 3 * si2 ^ 4 - 474 * eta * si2 ^ 6 + 856 * eta ^ 2 * si2 ^ 4 + 826 * si2 ^ 6 + 77 * eta ^ 3 * si2 ^ 2 + 936 * eta * si2 ^ 4 - 502 * eta ^ 2 * si2 ^ 2 - 1648 * si2 ^ 4 - 10 * eta ^ 3 - 539 * eta * si2 ^ 2 + 75 * eta ^ 2 + 964 * si2 ^ 2 + 76 * eta - 141) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch - 0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / (L ^ 8) / (eta ^ 8) * sh) * cos((3 * g + 5 * f)) + (0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (336 * eta ^ 3 * si2 ^ 6 + 828 * eta ^ 2 * si2 ^ 6 - 618 * eta ^ 3 * si2 ^ 4 - 1130 * eta * si2 ^ 6 - 1530 * eta ^ 2 * si2 ^ 4 - 2030 * si2 ^ 6 + 333 * eta ^ 3 * si2 ^ 2 + 2214 * eta * si2 ^ 4 + 823 * eta ^ 2 * si2 ^ 2 + 3942 * si2 ^ 4 - 46 * eta ^ 3 - 1265 * eta * si2 ^ 2 - 110 * eta ^ 2 - 2231 * si2 ^ 2 + 176 * eta + 308) / (1 + eta) / (eta ^ 8) / (L ^ 8) * ch + 0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * si2 ^ 6 - 10 * si2 ^ 4 + 6 * si2 ^ 2 - 1) / (eta ^ 8) / (L ^ 8) * sh) * cos((4 * f + 3 * g)) + (270 * eta ^ 3 * si2 ^ 8 - 306 * eta ^ 2 * si2 ^ 8 - 468 * eta ^ 3 * si2 ^ 6 - 198 * eta * si2 ^ 8 + 540 * eta ^ 2 * si2 ^ 6 + 234 * si2 ^ 8 + 249 * eta ^ 3 * si2 ^ 4 + 324 * eta * si2 ^ 6 - 291 * eta ^ 2 * si2 ^ 4 - 396 * si2 ^ 6 - 45 * eta ^ 3 * si2 ^ 2 - 165 * eta * si2 ^ 4 + 51 * eta ^ 2 * si2 ^ 2 + 207 * si2 ^ 4 + 3 * eta ^ 3 + 33 * eta * si2 ^ 2 - 3 * eta ^ 2 - 39 * si2 ^ 2 - 3 * eta + 3) / (eta ^ 8) / (L ^ 8) * ch * cos((5 * f + g)) / 0.128e3 + (-522 * eta ^ 3 * si2 ^ 8 + 594 * eta ^ 2 * si2 ^ 8 + 900 * eta ^ 3 * si2 ^ 6 + 378 * eta * si2 ^ 8 - 1044 * eta ^ 2 * si2 ^ 6 - 450 * si2 ^ 8 - 507 * eta ^ 3 * si2 ^ 4 - 612 * eta * si2 ^ 6 + 603 * eta ^ 2 * si2 ^ 4 + 756 * si2 ^ 6 + 105 * eta ^ 3 * si2 ^ 2 + 315 * eta * si2 ^ 4 - 129 * eta ^ 2 * si2 ^ 2 - 411 * si2 ^ 4 - 7 * eta ^ 3 - 57 * eta * si2 ^ 2 + 9 * eta ^ 2 + 81 * si2 ^ 2 + 3 * eta - 5) / (eta ^ 8) / (L ^ 8) * sh * sin((-g + 3 * f)) / 0.128e3 + (54 * eta ^ 3 * si2 ^ 8 - 90 * eta ^ 2 * si2 ^ 8 - 36 * eta ^ 3 * si2 ^ 6 + 18 * eta * si2 ^ 8 + 108 * eta ^ 2 * si2 ^ 6 + 18 * si2 ^ 8 - 39 * eta ^ 3 * si2 ^ 4 - 108 * eta * si2 ^ 6 - 3 * eta ^ 2 * si2 ^ 4 + 36 * si2 ^ 6 + 27 * eta ^ 3 * si2 ^ 2 + 123 * eta * si2 ^ 4 - 21 * eta ^ 2 * si2 ^ 2 - 81 * si2 ^ 4 - 3 * eta ^ 3 - 39 * eta * si2 ^ 2 + 3 * eta ^ 2 + 33 * si2 ^ 2 + 3 * eta - 3) / (eta ^ 8) / (L ^ 8) * sh * sin((5 * f + g)) / 0.128e3 + (-558 * eta ^ 3 * si2 ^ 8 + 630 * eta ^ 2 * si2 ^ 8 + 972 * eta ^ 3 * si2 ^ 6 + 414 * eta * si2 ^ 8 - 1116 * eta ^ 2 * si2 ^ 6 - 486 * si2 ^ 8 - 549 * eta ^ 3 * si2 ^ 4 - 684 * eta * si2 ^ 6 + 645 * eta ^ 2 * si2 ^ 4 + 828 * si2 ^ 6 + 111 * eta ^ 3 * si2 ^ 2 + 357 * eta * si2 ^ 4 - 135 * eta ^ 2 * si2 ^ 2 - 453 * si2 ^ 4 - 7 * eta ^ 3 - 63 * eta * si2 ^ 2 + 9 * eta ^ 2 + 87 * si2 ^ 2 + 3 * eta - 5) / (eta ^ 8) / (L ^ 8) * ch * cos((-g + 3 * f)) / 0.128e3 + 0.3e1 / 0.16e2 * (13 * eta ^ 2 * si2 ^ 4 - 24 * eta ^ 2 * si2 ^ 2 - 23 * si2 ^ 4 + 11 * eta ^ 2 + 44 * si2 ^ 2 - 21) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * cos((5 * f + 5 * g)) + 0.33e2 / 0.32e2 * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * cos((7 * f + 5 * g)) + 0.3e1 / 0.128e3 * (126 * eta ^ 3 * si2 ^ 6 - 138 * eta ^ 2 * si2 ^ 6 - 228 * eta ^ 3 * si2 ^ 4 - 102 * eta * si2 ^ 6 + 252 * eta ^ 2 * si2 ^ 4 + 114 * si2 ^ 6 + 119 * eta ^ 3 * si2 ^ 2 + 180 * eta * si2 ^ 4 - 133 * eta ^ 2 * si2 ^ 2 - 204 * si2 ^ 4 - 15 * eta ^ 3 - 91 * eta * si2 ^ 2 + 17 * eta ^ 2 + 105 * si2 ^ 2 + 11 * eta - 13) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh * sin((-3 * g + f)) - 0.33e2 / 0.32e2 * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * sin((7 * f + 5 * g)) + 0.3e1 / 0.128e3 * (126 * eta ^ 3 * si2 ^ 6 - 138 * eta ^ 2 * si2 ^ 6 - 228 * eta ^ 3 * si2 ^ 4 - 102 * eta * si2 ^ 6 + 252 * eta ^ 2 * si2 ^ 4 + 114 * si2 ^ 6 + 119 * eta ^ 3 * si2 ^ 2 + 180 * eta * si2 ^ 4 - 133 * eta ^ 2 * si2 ^ 2 - 204 * si2 ^ 4 - 15 * eta ^ 3 - 91 * eta * si2 ^ 2 + 17 * eta ^ 2 + 105 * si2 ^ 2 + 11 * eta - 13) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch * cos((-3 * g + f)) + 0.3e1 / 0.32e2 * (41 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 41 * si2 ^ 4 + 37 * eta ^ 2 + 78 * si2 ^ 2 - 37) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * sin((3 * f + 5 * g)) - 0.3e1 / 0.16e2 * (13 * eta ^ 2 * si2 ^ 4 - 24 * eta ^ 2 * si2 ^ 2 - 23 * si2 ^ 4 + 11 * eta ^ 2 + 44 * si2 ^ 2 - 21) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * sh * sin((5 * f + 5 * g)) - 0.3e1 / 0.32e2 * (41 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 41 * si2 ^ 4 + 37 * eta ^ 2 + 78 * si2 ^ 2 - 37) * (si2 ^ 4) / (L ^ 8) / (eta ^ 8) * ch * cos((3 * f + 5 * g)) - 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * ch * cos((3 * g + 7 * f)) + 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / (L ^ 8) / (eta ^ 8) * sh * sin((3 * g + 7 * f))) * J ^ 2 * R__e ^ 4 * mu ^ 4;
sp2t26 = ((-0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (80 * si2 ^ 6 - 150 * si2 ^ 4 + 84 * si2 ^ 2 - 13) / (eta ^ 8) / L ^ 8 * ch - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (69 * eta ^ 3 * si2 ^ 6 + 219 * eta ^ 2 * si2 ^ 6 - 135 * eta ^ 3 * si2 ^ 4 - 399 * eta * si2 ^ 6 - 435 * eta ^ 2 * si2 ^ 4 - 453 * si2 ^ 6 + 93 * eta ^ 3 * si2 ^ 2 + 747 * eta * si2 ^ 4 + 272 * eta ^ 2 * si2 ^ 2 + 855 * si2 ^ 4 - 25 * eta ^ 3 - 487 * eta * si2 ^ 2 - 54 * eta ^ 2 - 550 * si2 ^ 2 + 129 * eta + 138) / (1 + eta) / (eta ^ 8) / L ^ 8 * sh) * cos((2 * f + 3 * g)) + ((360 * eta ^ 3 * si2 ^ 6 + 2286 * eta ^ 2 * si2 ^ 6 - 708 * eta ^ 3 * si2 ^ 4 + 2268 * eta * si2 ^ 6 - 4208 * eta ^ 2 * si2 ^ 4 - 6226 * si2 ^ 6 + 414 * eta ^ 3 * si2 ^ 2 - 4212 * eta * si2 ^ 4 + 2175 * eta ^ 2 * si2 ^ 2 + 11752 * si2 ^ 4 - 65 * eta ^ 3 + 2268 * eta * si2 ^ 2 - 222 * eta ^ 2 - 6357 * si2 ^ 2 - 297 * eta + 772) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * ch / 0.64e2 - 0.3e1 / 0.4e1 * (75 * eta ^ 2 * si2 ^ 6 - 140 * eta ^ 2 * si2 ^ 4 - 145 * si2 ^ 6 + 78 * eta ^ 2 * si2 ^ 2 + 280 * si2 ^ 4 - 12 * eta ^ 2 - 162 * si2 ^ 2 + 26) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * sh) * sin((3 * g + 3 * f)) + (-0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (120 * eta ^ 2 * si2 ^ 8 - 200 * eta ^ 2 * si2 ^ 6 - 1280 * si2 ^ 8 + 143 * eta ^ 2 * si2 ^ 4 + 2360 * si2 ^ 6 - 52 * eta ^ 2 * si2 ^ 2 - 1539 * si2 ^ 4 + 5 * eta ^ 2 + 412 * si2 ^ 2 - 35) / (eta ^ 8) / L ^ 8 * ch - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (80 * eta ^ 4 * si2 ^ 8 + 118 * eta ^ 3 * si2 ^ 8 - 160 * eta ^ 4 * si2 ^ 6 - 222 * eta ^ 2 * si2 ^ 8 - 236 * eta ^ 3 * si2 ^ 6 - 1102 * eta * si2 ^ 8 + 124 * eta ^ 4 * si2 ^ 4 + 444 * eta ^ 2 * si2 ^ 6 - 1498 * si2 ^ 8 + 192 * eta ^ 3 * si2 ^ 4 + 2204 * eta * si2 ^ 6 - 44 * eta ^ 4 * si2 ^ 2 - 326 * eta ^ 2 * si2 ^ 4 + 2996 * si2 ^ 6 - 74 * eta ^ 3 * si2 ^ 2 - 1656 * eta * si2 ^ 4 + 4 * eta ^ 4 + 104 * eta ^ 2 * si2 ^ 2 - 2166 * si2 ^ 4 + 7 * eta ^ 3 + 554 * eta * si2 ^ 2 - 13 * eta ^ 2 + 668 * si2 ^ 2 - 55 * eta - 63) / (1 + eta) / (eta ^ 8) / L ^ 8 * sh) * cos(g) + (-0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (87 * eta ^ 3 * si2 ^ 6 + 237 * eta ^ 2 * si2 ^ 6 - 161 * eta ^ 3 * si2 ^ 4 - 421 * eta * si2 ^ 6 - 461 * eta ^ 2 * si2 ^ 4 - 475 * si2 ^ 6 + 101 * eta ^ 3 * si2 ^ 2 + 781 * eta * si2 ^ 4 + 280 * eta ^ 2 * si2 ^ 2 + 889 * si2 ^ 4 - 25 * eta ^ 3 - 499 * eta * si2 ^ 2 - 54 * eta ^ 2 - 562 * si2 ^ 2 + 129 * eta + 138) / (1 + eta) / (eta ^ 8) / L ^ 8 * ch + 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (80 * si2 ^ 6 - 150 * si2 ^ 4 + 84 * si2 ^ 2 - 13) / (eta ^ 8) / L ^ 8 * sh) * sin((2 * f + 3 * g)) + ((-1224 * eta ^ 3 * si2 ^ 8 - 13062 * eta ^ 2 * si2 ^ 8 + 2412 * eta ^ 3 * si2 ^ 6 - 5508 * eta * si2 ^ 8 + 22992 * eta ^ 2 * si2 ^ 6 + 26250 * si2 ^ 8 - 1554 * eta ^ 3 * si2 ^ 4 + 10044 * eta * si2 ^ 6 - 13839 * eta ^ 2 * si2 ^ 4 - 48360 * si2 ^ 6 + 345 * eta ^ 3 * si2 ^ 2 - 5832 * eta * si2 ^ 4 + 3378 * eta ^ 2 * si2 ^ 2 + 29901 * si2 ^ 4 - 18 * eta ^ 3 + 1161 * eta * si2 ^ 2 - 255 * eta ^ 2 - 7104 * si2 ^ 2 - 72 * eta + 525) / (eta ^ 8) / L ^ 8 * ch / 0.64e2 + 0.9e1 / 0.4e1 * (35 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 30 * eta ^ 2 * si2 ^ 2 + 40 * si2 ^ 4 - 4 * eta ^ 2 - 18 * si2 ^ 2 + 2) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * sh) * sin((f + g)) + ((-1062 * eta ^ 4 * si2 ^ 8 - 4386 * eta ^ 3 * si2 ^ 8 + 1872 * eta ^ 4 * si2 ^ 6 - 5898 * eta ^ 2 * si2 ^ 8 + 8052 * eta ^ 3 * si2 ^ 6 + 4818 * eta * si2 ^ 8 - 1071 * eta ^ 4 * si2 ^ 4 + 10716 * eta ^ 2 * si2 ^ 6 + 6528 * si2 ^ 8 - 5799 * eta ^ 3 * si2 ^ 4 - 8916 * eta * si2 ^ 6 + 222 * eta ^ 4 * si2 ^ 2 - 7359 * eta ^ 2 * si2 ^ 4 - 11724 * si2 ^ 6 + 1869 * eta ^ 3 * si2 ^ 2 + 6375 * eta * si2 ^ 4 - 15 * eta ^ 4 + 2211 * eta ^ 2 * si2 ^ 2 + 7854 * si2 ^ 4 - 183 * eta ^ 3 - 2013 * eta * si2 ^ 2 - 207 * eta ^ 2 - 2289 * si2 ^ 2 + 195 * eta + 210) / (0.64e2 * L ^ 8 * (eta ^ 9) + 0.64e2 * L ^ 8 * (eta ^ 8)) * ch + 0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * sh) * sin((f - g)) + (0.9e1 / 0.4e1 * (35 * eta ^ 2 * si2 ^ 6 - 60 * eta ^ 2 * si2 ^ 4 - 25 * si2 ^ 6 + 30 * eta ^ 2 * si2 ^ 2 + 40 * si2 ^ 4 - 4 * eta ^ 2 - 18 * si2 ^ 2 + 2) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * ch + (-936 * eta ^ 3 * si2 ^ 8 + 7998 * eta ^ 2 * si2 ^ 8 + 1476 * eta ^ 3 * si2 ^ 6 - 2268 * eta * si2 ^ 8 - 13872 * eta ^ 2 * si2 ^ 6 - 5106 * si2 ^ 8 - 750 * eta ^ 3 * si2 ^ 4 + 4212 * eta * si2 ^ 6 + 5487 * eta ^ 2 * si2 ^ 4 + 8808 * si2 ^ 6 + 159 * eta ^ 3 * si2 ^ 2 - 2808 * eta * si2 ^ 4 + 462 * eta ^ 2 * si2 ^ 2 - 1389 * si2 ^ 4 - 18 * eta ^ 3 + 783 * eta * si2 ^ 2 - 255 * eta ^ 2 - 2256 * si2 ^ 2 - 72 * eta + 525) / (eta ^ 8) / L ^ 8 * sh / 0.64e2) * cos((f + g)) + (-0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (120 * eta ^ 3 * si2 ^ 6 + 55 * eta ^ 2 * si2 ^ 6 - 240 * eta ^ 3 * si2 ^ 4 - 12 * eta * si2 ^ 6 - 110 * eta ^ 2 * si2 ^ 4 - 163 * si2 ^ 6 + 148 * eta ^ 3 * si2 ^ 2 + 24 * eta * si2 ^ 4 + 69 * eta ^ 2 * si2 ^ 2 + 326 * si2 ^ 4 - 28 * eta ^ 3 - 14 * eta * si2 ^ 2 - 14 * eta ^ 2 - 203 * si2 ^ 2 + 2 * eta + 40) / (eta ^ 8) / L ^ 8 * ch + 0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (330 * eta ^ 2 * si2 ^ 6 - 600 * eta ^ 2 * si2 ^ 4 - 330 * si2 ^ 6 + 333 * eta ^ 2 * si2 ^ 2 + 600 * si2 ^ 4 - 56 * eta ^ 2 - 333 * si2 ^ 2 + 56) / (eta ^ 8) / L ^ 8 * sh) * sin((3 * g)) + (0.3e1 / 0.8e1 * (65 * eta ^ 2 * si2 ^ 6 - 110 * eta ^ 2 * si2 ^ 4 - 65 * si2 ^ 6 + 54 * eta ^ 2 * si2 ^ 2 + 110 * si2 ^ 4 - 7 * eta ^ 2 - 54 * si2 ^ 2 + 7) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * ch + (486 * eta ^ 4 * si2 ^ 8 - 406 * eta ^ 3 * si2 ^ 8 - 912 * eta ^ 4 * si2 ^ 6 - 2758 * eta ^ 2 * si2 ^ 8 + 412 * eta ^ 3 * si2 ^ 6 + 574 * eta * si2 ^ 8 + 547 * eta ^ 4 * si2 ^ 4 + 4660 * eta ^ 2 * si2 ^ 6 + 2104 * si2 ^ 8 - 149 * eta ^ 3 * si2 ^ 4 - 748 * eta * si2 ^ 6 - 110 * eta ^ 4 * si2 ^ 2 - 2657 * eta ^ 2 * si2 ^ 4 - 3412 * si2 ^ 6 + 111 * eta ^ 3 * si2 ^ 2 + 345 * eta * si2 ^ 4 + 5 * eta ^ 4 + 673 * eta ^ 2 * si2 ^ 2 + 1914 * si2 ^ 4 - 31 * eta ^ 3 - 139 * eta * si2 ^ 2 - 75 * eta ^ 2 - 535 * si2 ^ 2 + 31 * eta + 70) / (0.64e2 * L ^ 8 * (eta ^ 9) + 0.64e2 * L ^ 8 * (eta ^ 8)) * sh) * cos((g + 3 * f)) + (-0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (30 * si2 ^ 6 - 50 * si2 ^ 4 + 24 * si2 ^ 2 - 3) / (eta ^ 8) / L ^ 8 * ch + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (110 * eta ^ 3 * si2 ^ 8 - 340 * eta ^ 2 * si2 ^ 8 - 202 * eta ^ 3 * si2 ^ 6 - 554 * eta * si2 ^ 8 + 626 * eta ^ 2 * si2 ^ 6 - 176 * si2 ^ 8 + 85 * eta ^ 3 * si2 ^ 4 + 1042 * eta * si2 ^ 6 - 408 * eta ^ 2 * si2 ^ 4 + 358 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 - 473 * eta * si2 ^ 4 + 110 * eta ^ 2 * si2 ^ 2 - 32 * si2 ^ 4 - 4 * eta ^ 3 - 23 * eta * si2 ^ 2 - 10 * eta ^ 2 - 146 * si2 ^ 2 + 23 * eta + 35) / (1 + eta) / (eta ^ 8) / L ^ 8 * sh) * cos((g + 2 * f)) + (-0.3e1 / 0.64e2 * (78 * eta ^ 3 * si2 ^ 6 - 434 * eta ^ 2 * si2 ^ 6 - 144 * eta ^ 3 * si2 ^ 4 - 474 * eta * si2 ^ 6 + 848 * eta ^ 2 * si2 ^ 4 + 830 * si2 ^ 6 + 77 * eta ^ 3 * si2 ^ 2 + 936 * eta * si2 ^ 4 - 490 * eta ^ 2 * si2 ^ 2 - 1640 * si2 ^ 4 - 10 * eta ^ 3 - 539 * eta * si2 ^ 2 + 75 * eta ^ 2 + 952 * si2 ^ 2 + 76 * eta - 141) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * ch - 0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * sh) * sin((3 * g + 5 * f)) + (0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (324 * eta ^ 3 * si2 ^ 6 + 816 * eta ^ 2 * si2 ^ 6 - 598 * eta ^ 3 * si2 ^ 4 - 1074 * eta * si2 ^ 6 - 1510 * eta ^ 2 * si2 ^ 4 - 1974 * si2 ^ 6 + 325 * eta ^ 3 * si2 ^ 2 + 2090 * eta * si2 ^ 4 + 815 * eta ^ 2 * si2 ^ 2 + 3818 * si2 ^ 4 - 46 * eta ^ 3 - 1197 * eta * si2 ^ 2 - 110 * eta ^ 2 - 2163 * si2 ^ 2 + 176 * eta + 308) / (1 + eta) / (eta ^ 8) / L ^ 8 * ch + 0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * si2 ^ 6 - 10 * si2 ^ 4 + 6 * si2 ^ 2 - 1) / (eta ^ 8) / L ^ 8 * sh) * sin((4 * f + 3 * g)) + ((162 * eta ^ 4 * si2 ^ 8 + 214 * eta ^ 3 * si2 ^ 8 - 240 * eta ^ 4 * si2 ^ 6 - 1178 * eta ^ 2 * si2 ^ 8 - 28 * eta ^ 3 * si2 ^ 6 - 382 * eta * si2 ^ 8 + 125 * eta ^ 4 * si2 ^ 4 + 2924 * eta ^ 2 * si2 ^ 6 + 1184 * si2 ^ 8 - 427 * eta ^ 3 * si2 ^ 4 + 364 * eta * si2 ^ 6 - 34 * eta ^ 4 * si2 ^ 2 - 2527 * eta ^ 2 * si2 ^ 4 - 3020 * si2 ^ 6 + 273 * eta ^ 3 * si2 ^ 2 + 231 * eta * si2 ^ 4 + 5 * eta ^ 4 + 815 * eta ^ 2 * si2 ^ 2 + 2598 * si2 ^ 4 - 31 * eta ^ 3 - 245 * eta * si2 ^ 2 - 75 * eta ^ 2 - 809 * si2 ^ 2 + 31 * eta + 70) / (0.64e2 * L ^ 8 * (eta ^ 9) + 0.64e2 * L ^ 8 * (eta ^ 8)) * ch + 0.3e1 / 0.8e1 * (65 * eta ^ 2 * si2 ^ 6 - 110 * eta ^ 2 * si2 ^ 4 - 65 * si2 ^ 6 + 54 * eta ^ 2 * si2 ^ 2 + 110 * si2 ^ 4 - 7 * eta ^ 2 - 54 * si2 ^ 2 + 7) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * sh) * sin((g + 3 * f)) + (0.3e1 / 0.4e1 * (75 * eta ^ 2 * si2 ^ 6 - 140 * eta ^ 2 * si2 ^ 4 - 145 * si2 ^ 6 + 78 * eta ^ 2 * si2 ^ 2 + 280 * si2 ^ 4 - 12 * eta ^ 2 - 162 * si2 ^ 2 + 26) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * ch + (360 * eta ^ 3 * si2 ^ 6 + 2406 * eta ^ 2 * si2 ^ 6 - 708 * eta ^ 3 * si2 ^ 4 + 2268 * eta * si2 ^ 6 - 4400 * eta ^ 2 * si2 ^ 4 - 6586 * si2 ^ 6 + 414 * eta ^ 3 * si2 ^ 2 - 4212 * eta * si2 ^ 4 + 2247 * eta ^ 2 * si2 ^ 2 + 12424 * si2 ^ 4 - 65 * eta ^ 3 + 2268 * eta * si2 ^ 2 - 222 * eta ^ 2 - 6669 * si2 ^ 2 - 297 * eta + 772) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * sh / 0.64e2) * cos((3 * g + 3 * f)) + (0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (160 * eta ^ 4 * si2 ^ 8 + 258 * eta ^ 3 * si2 ^ 8 - 320 * eta ^ 4 * si2 ^ 6 + 478 * eta ^ 2 * si2 ^ 8 - 516 * eta ^ 3 * si2 ^ 6 + 198 * eta * si2 ^ 8 + 172 * eta ^ 4 * si2 ^ 4 - 956 * eta ^ 2 * si2 ^ 6 + 378 * si2 ^ 8 + 276 * eta ^ 3 * si2 ^ 4 - 396 * eta * si2 ^ 6 - 12 * eta ^ 4 * si2 ^ 2 + 638 * eta ^ 2 * si2 ^ 4 - 756 * si2 ^ 6 - 18 * eta ^ 3 * si2 ^ 2 + 484 * eta * si2 ^ 4 - 4 * eta ^ 4 - 160 * eta ^ 2 * si2 ^ 2 + 742 * si2 ^ 4 - 7 * eta ^ 3 - 286 * eta * si2 ^ 2 + 13 * eta ^ 2 - 364 * si2 ^ 2 + 55 * eta + 63) / (1 + eta) / (eta ^ 8) / L ^ 8 * ch - 0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (300 * eta ^ 2 * si2 ^ 8 - 520 * eta ^ 2 * si2 ^ 6 + 260 * si2 ^ 8 + 227 * eta ^ 2 * si2 ^ 4 - 440 * si2 ^ 6 - 4 * eta ^ 2 * si2 ^ 2 + 441 * si2 ^ 4 - 5 * eta ^ 2 - 228 * si2 ^ 2 + 35) / (eta ^ 8) / L ^ 8 * sh) * sin(g) + (0.9e1 / 0.8e1 * (125 * eta ^ 2 * si2 ^ 6 - 230 * eta ^ 2 * si2 ^ 4 - 125 * si2 ^ 6 + 126 * eta ^ 2 * si2 ^ 2 + 230 * si2 ^ 4 - 19 * eta ^ 2 - 126 * si2 ^ 2 + 19) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * ch + 0.3e1 * (si2 ^ 2) * (582 * eta ^ 4 * si2 ^ 6 - 5036 * eta ^ 3 * si2 ^ 6 - 1104 * eta ^ 4 * si2 ^ 4 - 6284 * eta ^ 2 * si2 ^ 6 + 9256 * eta ^ 3 * si2 ^ 4 + 5060 * eta * si2 ^ 6 + 617 * eta ^ 4 * si2 ^ 2 + 11584 * eta ^ 2 * si2 ^ 4 + 5678 * si2 ^ 6 - 5217 * eta ^ 3 * si2 ^ 2 - 9304 * eta * si2 ^ 4 - 90 * eta ^ 4 - 6485 * eta ^ 2 * si2 ^ 2 - 10432 * si2 ^ 4 + 901 * eta ^ 3 + 5245 * eta * si2 ^ 2 + 1075 * eta ^ 2 + 5840 * si2 ^ 2 - 905 * eta - 981) / (0.64e2 * L ^ 8 * (eta ^ 9) + 0.64e2 * L ^ 8 * (eta ^ 8)) * sh) * cos((3 * g + f)) + (0.3e1 * (si2 ^ 2) * (582 * eta ^ 4 * si2 ^ 6 - 4984 * eta ^ 3 * si2 ^ 6 - 1104 * eta ^ 4 * si2 ^ 4 - 6232 * eta ^ 2 * si2 ^ 6 + 9152 * eta ^ 3 * si2 ^ 4 + 5008 * eta * si2 ^ 6 + 617 * eta ^ 4 * si2 ^ 2 + 11480 * eta ^ 2 * si2 ^ 4 + 5626 * si2 ^ 6 - 5165 * eta ^ 3 * si2 ^ 2 - 9200 * eta * si2 ^ 4 - 90 * eta ^ 4 - 6433 * eta ^ 2 * si2 ^ 2 - 10328 * si2 ^ 4 + 901 * eta ^ 3 + 5193 * eta * si2 ^ 2 + 1075 * eta ^ 2 + 5788 * si2 ^ 2 - 905 * eta - 981) / (0.64e2 * L ^ 8 * (eta ^ 9) + 0.64e2 * L ^ 8 * (eta ^ 8)) * ch - 0.9e1 / 0.8e1 * (125 * eta ^ 2 * si2 ^ 6 - 230 * eta ^ 2 * si2 ^ 4 - 125 * si2 ^ 6 + 126 * eta ^ 2 * si2 ^ 2 + 230 * si2 ^ 4 - 19 * eta ^ 2 - 126 * si2 ^ 2 + 19) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * sh) * sin((3 * g + f)) + (0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (10 * eta ^ 3 * si2 ^ 8 - 260 * eta ^ 2 * si2 ^ 8 - 18 * eta ^ 3 * si2 ^ 6 + 866 * eta * si2 ^ 8 + 450 * eta ^ 2 * si2 ^ 6 + 1640 * si2 ^ 8 - 25 * eta ^ 3 * si2 ^ 4 - 1686 * eta * si2 ^ 6 - 300 * eta ^ 2 * si2 ^ 4 - 3162 * si2 ^ 6 + 29 * eta ^ 3 * si2 ^ 2 + 1133 * eta * si2 ^ 4 + 94 * eta ^ 2 * si2 ^ 2 + 2036 * si2 ^ 4 - 4 * eta ^ 3 - 301 * eta * si2 ^ 2 - 10 * eta ^ 2 - 490 * si2 ^ 2 + 23 * eta + 35) / (1 + eta) / (eta ^ 8) / L ^ 8 * ch - 0.9e1 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (30 * si2 ^ 6 - 50 * si2 ^ 4 + 24 * si2 ^ 2 - 3) / (eta ^ 8) / L ^ 8 * sh) * sin((g + 2 * f)) + (0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * ch - 0.3e1 / 0.64e2 * (78 * eta ^ 3 * si2 ^ 6 - 430 * eta ^ 2 * si2 ^ 6 - 144 * eta ^ 3 * si2 ^ 4 - 474 * eta * si2 ^ 6 + 856 * eta ^ 2 * si2 ^ 4 + 826 * si2 ^ 6 + 77 * eta ^ 3 * si2 ^ 2 + 936 * eta * si2 ^ 4 - 502 * eta ^ 2 * si2 ^ 2 - 1648 * si2 ^ 4 - 10 * eta ^ 3 - 539 * eta * si2 ^ 2 + 75 * eta ^ 2 + 964 * si2 ^ 2 + 76 * eta - 141) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * sh) * cos((3 * g + 5 * f)) + (-0.3e1 / 0.16e2 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (330 * eta ^ 2 * si2 ^ 6 - 600 * eta ^ 2 * si2 ^ 4 - 330 * si2 ^ 6 + 333 * eta ^ 2 * si2 ^ 2 + 600 * si2 ^ 4 - 56 * eta ^ 2 - 333 * si2 ^ 2 + 56) / (eta ^ 8) / L ^ 8 * ch - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (120 * eta ^ 3 * si2 ^ 6 + 65 * eta ^ 2 * si2 ^ 6 - 240 * eta ^ 3 * si2 ^ 4 - 12 * eta * si2 ^ 6 - 130 * eta ^ 2 * si2 ^ 4 - 173 * si2 ^ 6 + 148 * eta ^ 3 * si2 ^ 2 + 24 * eta * si2 ^ 4 + 79 * eta ^ 2 * si2 ^ 2 + 346 * si2 ^ 4 - 28 * eta ^ 3 - 14 * eta * si2 ^ 2 - 14 * eta ^ 2 - 213 * si2 ^ 2 + 2 * eta + 40) / (eta ^ 8) / L ^ 8 * sh) * cos((3 * g)) + (-0.9e1 / 0.8e1 * (5 * eta ^ 2 * si2 ^ 6 - 10 * eta ^ 2 * si2 ^ 4 - 5 * si2 ^ 6 + 6 * eta ^ 2 * si2 ^ 2 + 10 * si2 ^ 4 - eta ^ 2 - 6 * si2 ^ 2 + 1) * (si2 ^ 2) * Delta / L ^ 8 / (eta ^ 8) * ch + (882 * eta ^ 4 * si2 ^ 8 + 2478 * eta ^ 3 * si2 ^ 8 - 1584 * eta ^ 4 * si2 ^ 6 + 4422 * eta ^ 2 * si2 ^ 8 - 4236 * eta ^ 3 * si2 ^ 6 - 2910 * eta * si2 ^ 8 + 945 * eta ^ 4 * si2 ^ 4 - 7620 * eta ^ 2 * si2 ^ 6 - 4872 * si2 ^ 8 + 3417 * eta ^ 3 * si2 ^ 4 + 5100 * eta * si2 ^ 6 - 210 * eta ^ 4 * si2 ^ 2 + 5313 * eta ^ 2 * si2 ^ 4 + 8340 * si2 ^ 6 - 1395 * eta ^ 3 * si2 ^ 2 - 3993 * eta * si2 ^ 4 + 15 * eta ^ 4 - 1773 * eta ^ 2 * si2 ^ 2 - 5682 * si2 ^ 4 + 183 * eta ^ 3 + 1539 * eta * si2 ^ 2 + 207 * eta ^ 2 + 1839 * si2 ^ 2 - 195 * eta - 210) / (0.64e2 * L ^ 8 * (eta ^ 9) + 0.64e2 * L ^ 8 * (eta ^ 8)) * sh) * cos((f - g)) + (-0.27e2 / 0.4e1 * sqrt((-eta ^ 2 + 1)) * Delta * (si2 ^ 2) * (5 * si2 ^ 6 - 10 * si2 ^ 4 + 6 * si2 ^ 2 - 1) / (eta ^ 8) / L ^ 8 * ch + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (336 * eta ^ 3 * si2 ^ 6 + 828 * eta ^ 2 * si2 ^ 6 - 618 * eta ^ 3 * si2 ^ 4 - 1130 * eta * si2 ^ 6 - 1530 * eta ^ 2 * si2 ^ 4 - 2030 * si2 ^ 6 + 333 * eta ^ 3 * si2 ^ 2 + 2214 * eta * si2 ^ 4 + 823 * eta ^ 2 * si2 ^ 2 + 3942 * si2 ^ 4 - 46 * eta ^ 3 - 1265 * eta * si2 ^ 2 - 110 * eta ^ 2 - 2231 * si2 ^ 2 + 176 * eta + 308) / (1 + eta) / (eta ^ 8) / L ^ 8 * sh) * cos((4 * f + 3 * g)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (27 * eta ^ 2 * si2 ^ 6 + 66 * eta * si2 ^ 6 - 53 * eta ^ 2 * si2 ^ 4 - 93 * si2 ^ 6 - 132 * eta * si2 ^ 4 + 31 * eta ^ 2 * si2 ^ 2 + 185 * si2 ^ 4 + 77 * eta * si2 ^ 2 - 5 * eta ^ 2 - 108 * si2 ^ 2 - 11 * eta + 16) / (eta ^ 8) / L ^ 8 * ch * sin((3 * g + 6 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (10 * eta ^ 2 * si2 ^ 4 - 19 * eta ^ 2 * si2 ^ 2 + 11 * si2 ^ 4 + 9 * eta ^ 2 - 19 * si2 ^ 2 + 8) / (eta ^ 8) / L ^ 8 * ch * sin((5 * g + 4 * f)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (10 * eta ^ 3 * si2 ^ 8 - 272 * eta ^ 2 * si2 ^ 8 - 10 * eta ^ 3 * si2 ^ 6 + 26 * eta * si2 ^ 8 + 482 * eta ^ 2 * si2 ^ 6 + 236 * si2 ^ 8 - 19 * eta ^ 3 * si2 ^ 4 - 62 * eta * si2 ^ 6 - 300 * eta ^ 2 * si2 ^ 4 - 410 * si2 ^ 6 + 17 * eta ^ 3 * si2 ^ 2 + 67 * eta * si2 ^ 4 + 76 * eta ^ 2 * si2 ^ 2 + 252 * si2 ^ 4 - 2 * eta ^ 3 - 29 * eta * si2 ^ 2 - 6 * eta ^ 2 - 64 * si2 ^ 2 + 3 * eta + 5) / (1 + eta) / (eta ^ 8) / L ^ 8 * ch * sin((-g + 2 * f)) - 0.15e2 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 7 * si2 ^ 4 + 6 * eta ^ 2 + 13 * si2 ^ 2 - 6) / (eta ^ 8) / L ^ 8 * ch * sin((2 * f + 5 * g)) + 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (140 * eta ^ 3 * si2 ^ 8 + 152 * eta ^ 2 * si2 ^ 8 - 228 * eta ^ 3 * si2 ^ 6 - 176 * eta * si2 ^ 8 - 180 * eta ^ 2 * si2 ^ 6 - 116 * si2 ^ 8 + 99 * eta ^ 3 * si2 ^ 4 + 300 * eta * si2 ^ 6 + 5 * eta ^ 2 * si2 ^ 4 + 108 * si2 ^ 6 - 6 * eta ^ 3 * si2 ^ 2 - 141 * eta * si2 ^ 4 + 34 * eta ^ 2 * si2 ^ 2 + 37 * si2 ^ 4 - eta ^ 3 + 12 * eta * si2 ^ 2 - 5 * eta ^ 2 - 40 * si2 ^ 2 + eta + 5) / (1 + eta) / (eta ^ 8) / L ^ 8 * ch * sin((g + 4 * f)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (10 * eta ^ 2 * si2 ^ 4 - 19 * eta ^ 2 * si2 ^ 2 + 11 * si2 ^ 4 + 9 * eta ^ 2 - 19 * si2 ^ 2 + 8) / (eta ^ 8) / L ^ 8 * sh * cos((5 * g + 4 * f)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 33 * si2 ^ 4 + 6 * eta ^ 2 + 65 * si2 ^ 2 - 32) / (eta ^ 8) / L ^ 8 * sh * cos((6 * f + 5 * g)) - 0.3e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (120 * eta ^ 3 * si2 ^ 8 + 420 * eta ^ 2 * si2 ^ 8 - 188 * eta ^ 3 * si2 ^ 6 - 156 * eta * si2 ^ 8 - 716 * eta ^ 2 * si2 ^ 6 - 384 * si2 ^ 8 + 87 * eta ^ 3 * si2 ^ 4 + 260 * eta * si2 ^ 6 + 377 * eta ^ 2 * si2 ^ 4 + 644 * si2 ^ 6 - 14 * eta ^ 3 * si2 ^ 2 - 129 * eta * si2 ^ 4 - 70 * eta ^ 2 * si2 ^ 2 - 335 * si2 ^ 4 + eta ^ 3 + 20 * eta * si2 ^ 2 + 5 * eta ^ 2 + 64 * si2 ^ 2 - eta - 5) / (1 + eta) / (eta ^ 8) / L ^ 8 * sh * cos((g + 4 * f)) + 0.9e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / (eta ^ 8) / L ^ 8 * ch * sin((8 * f + 5 * g)) - 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (70 * eta ^ 3 * si2 ^ 8 - 224 * eta ^ 2 * si2 ^ 8 - 130 * eta ^ 3 * si2 ^ 6 - 34 * eta * si2 ^ 8 + 386 * eta ^ 2 * si2 ^ 6 + 188 * si2 ^ 8 + 55 * eta ^ 3 * si2 ^ 4 + 58 * eta * si2 ^ 6 - 240 * eta ^ 2 * si2 ^ 4 - 314 * si2 ^ 6 + 3 * eta ^ 3 * si2 ^ 2 - 7 * eta * si2 ^ 4 + 64 * eta ^ 2 * si2 ^ 2 + 192 * si2 ^ 4 - 2 * eta ^ 3 - 15 * eta * si2 ^ 2 - 6 * eta ^ 2 - 52 * si2 ^ 2 + 3 * eta + 5) / (1 + eta) / (eta ^ 8) / L ^ 8 * sh * cos((-g + 2 * f)) + 0.9e1 / 0.64e2 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / (eta ^ 8) / L ^ 8 * sh * cos((8 * f + 5 * g)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 33 * si2 ^ 4 + 6 * eta ^ 2 + 65 * si2 ^ 2 - 32) / (eta ^ 8) / L ^ 8 * ch * sin((6 * f + 5 * g)) + 0.3e1 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (25 * eta ^ 2 * si2 ^ 6 + 66 * eta * si2 ^ 6 - 51 * eta ^ 2 * si2 ^ 4 - 91 * si2 ^ 6 - 132 * eta * si2 ^ 4 + 31 * eta ^ 2 * si2 ^ 2 + 183 * si2 ^ 4 + 77 * eta * si2 ^ 2 - 5 * eta ^ 2 - 108 * si2 ^ 2 - 11 * eta + 16) / (eta ^ 8) / L ^ 8 * sh * cos((3 * g + 6 * f)) - 0.15e2 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (si2 ^ 4) * (7 * eta ^ 2 * si2 ^ 4 - 13 * eta ^ 2 * si2 ^ 2 - 7 * si2 ^ 4 + 6 * eta ^ 2 + 13 * si2 ^ 2 - 6) / (eta ^ 8) / L ^ 8 * sh * cos((2 * f + 5 * g)) + (-558 * eta ^ 3 * si2 ^ 8 + 630 * eta ^ 2 * si2 ^ 8 + 972 * eta ^ 3 * si2 ^ 6 + 414 * eta * si2 ^ 8 - 1116 * eta ^ 2 * si2 ^ 6 - 486 * si2 ^ 8 - 549 * eta ^ 3 * si2 ^ 4 - 684 * eta * si2 ^ 6 + 645 * eta ^ 2 * si2 ^ 4 + 828 * si2 ^ 6 + 111 * eta ^ 3 * si2 ^ 2 + 357 * eta * si2 ^ 4 - 135 * eta ^ 2 * si2 ^ 2 - 453 * si2 ^ 4 - 7 * eta ^ 3 - 63 * eta * si2 ^ 2 + 9 * eta ^ 2 + 87 * si2 ^ 2 + 3 * eta - 5) / (eta ^ 8) / L ^ 8 * sh * cos((-g + 3 * f)) / 0.128e3 + (270 * eta ^ 3 * si2 ^ 8 - 306 * eta ^ 2 * si2 ^ 8 - 468 * eta ^ 3 * si2 ^ 6 - 198 * eta * si2 ^ 8 + 540 * eta ^ 2 * si2 ^ 6 + 234 * si2 ^ 8 + 249 * eta ^ 3 * si2 ^ 4 + 324 * eta * si2 ^ 6 - 291 * eta ^ 2 * si2 ^ 4 - 396 * si2 ^ 6 - 45 * eta ^ 3 * si2 ^ 2 - 165 * eta * si2 ^ 4 + 51 * eta ^ 2 * si2 ^ 2 + 207 * si2 ^ 4 + 3 * eta ^ 3 + 33 * eta * si2 ^ 2 - 3 * eta ^ 2 - 39 * si2 ^ 2 - 3 * eta + 3) / (eta ^ 8) / L ^ 8 * sh * cos((5 * f + g)) / 0.128e3 + (522 * eta ^ 3 * si2 ^ 8 - 594 * eta ^ 2 * si2 ^ 8 - 900 * eta ^ 3 * si2 ^ 6 - 378 * eta * si2 ^ 8 + 1044 * eta ^ 2 * si2 ^ 6 + 450 * si2 ^ 8 + 507 * eta ^ 3 * si2 ^ 4 + 612 * eta * si2 ^ 6 - 603 * eta ^ 2 * si2 ^ 4 - 756 * si2 ^ 6 - 105 * eta ^ 3 * si2 ^ 2 - 315 * eta * si2 ^ 4 + 129 * eta ^ 2 * si2 ^ 2 + 411 * si2 ^ 4 + 7 * eta ^ 3 + 57 * eta * si2 ^ 2 - 9 * eta ^ 2 - 81 * si2 ^ 2 - 3 * eta + 5) / L ^ 8 / (eta ^ 8) * ch * sin((-g + 3 * f)) / 0.128e3 + (-54 * eta ^ 3 * si2 ^ 8 + 90 * eta ^ 2 * si2 ^ 8 + 36 * eta ^ 3 * si2 ^ 6 - 18 * eta * si2 ^ 8 - 108 * eta ^ 2 * si2 ^ 6 - 18 * si2 ^ 8 + 39 * eta ^ 3 * si2 ^ 4 + 108 * eta * si2 ^ 6 + 3 * eta ^ 2 * si2 ^ 4 - 36 * si2 ^ 6 - 27 * eta ^ 3 * si2 ^ 2 - 123 * eta * si2 ^ 4 + 21 * eta ^ 2 * si2 ^ 2 + 81 * si2 ^ 4 + 3 * eta ^ 3 + 39 * eta * si2 ^ 2 - 3 * eta ^ 2 - 33 * si2 ^ 2 - 3 * eta + 3) / (eta ^ 8) / L ^ 8 * ch * sin((5 * f + g)) / 0.128e3 + 0.3e1 / 0.16e2 * (13 * eta ^ 2 * si2 ^ 4 - 24 * eta ^ 2 * si2 ^ 2 - 23 * si2 ^ 4 + 11 * eta ^ 2 + 44 * si2 ^ 2 - 21) * (si2 ^ 4) / L ^ 8 / (eta ^ 8) * ch * sin((5 * f + 5 * g)) + 0.3e1 / 0.128e3 * (126 * eta ^ 3 * si2 ^ 6 - 138 * eta ^ 2 * si2 ^ 6 - 228 * eta ^ 3 * si2 ^ 4 - 102 * eta * si2 ^ 6 + 252 * eta ^ 2 * si2 ^ 4 + 114 * si2 ^ 6 + 119 * eta ^ 3 * si2 ^ 2 + 180 * eta * si2 ^ 4 - 133 * eta ^ 2 * si2 ^ 2 - 204 * si2 ^ 4 - 15 * eta ^ 3 - 91 * eta * si2 ^ 2 + 17 * eta ^ 2 + 105 * si2 ^ 2 + 11 * eta - 13) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * sh * cos((-3 * g + f)) - 0.3e1 / 0.128e3 * (126 * eta ^ 3 * si2 ^ 6 - 138 * eta ^ 2 * si2 ^ 6 - 228 * eta ^ 3 * si2 ^ 4 - 102 * eta * si2 ^ 6 + 252 * eta ^ 2 * si2 ^ 4 + 114 * si2 ^ 6 + 119 * eta ^ 3 * si2 ^ 2 + 180 * eta * si2 ^ 4 - 133 * eta ^ 2 * si2 ^ 2 - 204 * si2 ^ 4 - 15 * eta ^ 3 - 91 * eta * si2 ^ 2 + 17 * eta ^ 2 + 105 * si2 ^ 2 + 11 * eta - 13) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * ch * sin((-3 * g + f)) - 0.3e1 / 0.32e2 * (41 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 41 * si2 ^ 4 + 37 * eta ^ 2 + 78 * si2 ^ 2 - 37) * (si2 ^ 4) / L ^ 8 / (eta ^ 8) * ch * sin((3 * f + 5 * g)) + 0.33e2 / 0.32e2 * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / L ^ 8 / (eta ^ 8) * ch * sin((7 * f + 5 * g)) - 0.3e1 / 0.32e2 * (41 * eta ^ 2 * si2 ^ 4 - 78 * eta ^ 2 * si2 ^ 2 - 41 * si2 ^ 4 + 37 * eta ^ 2 + 78 * si2 ^ 2 - 37) * (si2 ^ 4) / L ^ 8 / (eta ^ 8) * sh * cos((3 * f + 5 * g)) + 0.3e1 / 0.16e2 * (13 * eta ^ 2 * si2 ^ 4 - 24 * eta ^ 2 * si2 ^ 2 - 23 * si2 ^ 4 + 11 * eta ^ 2 + 44 * si2 ^ 2 - 21) * (si2 ^ 4) / L ^ 8 / (eta ^ 8) * sh * cos((5 * f + 5 * g)) + 0.33e2 / 0.32e2 * (eta ^ 2 * si2 ^ 4 - 2 * eta ^ 2 * si2 ^ 2 - si2 ^ 4 + eta ^ 2 + 2 * si2 ^ 2 - 1) * (si2 ^ 4) / L ^ 8 / (eta ^ 8) * sh * cos((7 * f + 5 * g)) - 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * ch * sin((3 * g + 7 * f)) - 0.15e2 / 0.128e3 * (6 * eta ^ 3 * si2 ^ 6 - 6 * eta ^ 2 * si2 ^ 6 - 12 * eta ^ 3 * si2 ^ 4 - 6 * eta * si2 ^ 6 + 12 * eta ^ 2 * si2 ^ 4 + 6 * si2 ^ 6 + 7 * eta ^ 3 * si2 ^ 2 + 12 * eta * si2 ^ 4 - 7 * eta ^ 2 * si2 ^ 2 - 12 * si2 ^ 4 - eta ^ 3 - 7 * eta * si2 ^ 2 + eta ^ 2 + 7 * si2 ^ 2 + eta - 1) * (si2 ^ 2) / L ^ 8 / (eta ^ 8) * sh * cos((3 * g + 7 * f))) * J ^ 2 * R__e ^ 4 * mu ^ 4;




asp1 = sp111 + sp121;
Lambdasp1 = sp112 + sp122;
p1sp1 = sp113 + sp123;
p2sp1 = sp114 + sp124;
q1sp1 = sp115 + sp125;
q2sp1 = sp116 + sp126;

J2_SPX1 = O2Msign*[asp1; Lambdasp1; p1sp1; p2sp1; q1sp1; q2sp1];

J2_SPX2 = [sp2t11 + O2Msign*sp2t21; 
           sp2t12 + O2Msign*sp2t22;
           sp2t13 + O2Msign*sp2t23;
           sp2t14 + O2Msign*sp2t24;
           sp2t15 + O2Msign*sp2t25;
           sp2t16 + O2Msign*sp2t26];




% Total First Order SP contributions
EqSPX1 = J2_SPX1;

% Total Second Order SP contributions
EqSPX2 = J2_SPX2;

EqSP = EqSPX1 + EqSPX2;

if JacobianOn == true

D1 = [0.6e1 * J * R__e ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (((eta ^ 2 - 1) * cos(f) ^ 3 - 0.3e1 * cos(f)) * sqrt((-eta ^ 2 + 1)) + (3 * eta ^ 2 - 3) * cos(f) ^ 2 + (eta ^ 3) - 0.1e1) / a ^ 2 / (eta ^ 6) -0.9e1 * J * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (((0.3e1 / 0.8e1 * (eta ^ 4) - 0.15e2 / 0.4e1 * (eta ^ 2) + 0.27e2 / 0.8e1) * sin(0.3e1 * f) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin(0.5e1 * f) / 0.8e1 + sin(f) * (eta ^ 4 - 14 * eta ^ 2 + 21) / 0.4e1) * sqrt((-eta ^ 2 + 1)) + (2 * eta ^ 4 - 8 * eta ^ 2 + 6) * sin(0.2e1 * f) + sin(0.4e1 * f) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2)) * R__e ^ 2 / a / (eta ^ 9) 0.3e1 * J * ((6 * eta ^ 2 - 6) * cos(-h + 0.2e1 * f) + sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 1) * cos(-h + 0.3e1 * f) + 0.3e1 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) * cos(-h + f) + (6 * eta ^ 2 - 6) * cos(h + 0.2e1 * f) + sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 1) * cos(h + 0.3e1 * f) + 0.3e1 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) * cos(h + f) + (8 * eta ^ 3 + 12 * eta ^ 2 - 20) * cos(h)) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 2 * ci2 ^ 3 * (ci2 ^ 2 - 0.1e1 / 0.2e1) / a / (eta ^ 6) -0.3e1 * J * ((6 * eta ^ 2 - 6) * sin(-h + 0.2e1 * f) + sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 1) * sin(-h + 0.3e1 * f) + 0.3e1 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) * sin(-h + f) + (-6 * eta ^ 2 + 6) * sin(h + 0.2e1 * f) - sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 1) * sin(h + 0.3e1 * f) - 0.3e1 * sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) * sin(h + f) + (-8 * eta ^ 3 - 12 * eta ^ 2 + 20) * sin(h)) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 2 * ci2 ^ 3 * (ci2 ^ 2 - 0.1e1 / 0.2e1) / a / (eta ^ 6) 0.45e2 / 0.8e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * R__e ^ 2 * ((-0.16e2 / 0.5e1 * (eta + 0.3e1 / 0.2e1) * ((eta - 1) ^ 2) * cos(-g - h + 0.2e1 * f) - 0.4e1 / 0.5e1 * (1 + eta) * ((eta - 1) ^ 2) * cos(-g - h + 0.4e1 * f) - 0.16e2 / 0.5e1 * (eta - 0.3e1 / 0.2e1) * ((1 + eta) ^ 2) * cos(g + h + 0.2e1 * f) - 0.4e1 / 0.5e1 * (eta - 1) * ((1 + eta) ^ 2) * cos(g + h + 0.4e1 * f) - 0.16e2 / 0.5e1 * eta * cos(g + h) * ((eta ^ 3) + 0.3e1 / 0.2e1 * (eta ^ 2) - 0.7e1 / 0.2e1)) * sqrt((-eta ^ 2 + 1)) + ((eta ^ 2) + 0.2e1 / 0.5e1 * eta - 0.27e2 / 0.5e1) * (1 + eta) * ((eta - 1) ^ 2) * cos(-g - h + 0.3e1 * f) / 0.2e1 + ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos(-g - h + 0.5e1 * f) / 0.10e2 + ((eta ^ 4) + 0.4e1 / 0.5e1 * (eta ^ 3) - 0.42e2 / 0.5e1 * (eta ^ 2) - 0.28e2 / 0.5e1 * eta + 0.21e2 / 0.5e1) * (eta - 1) * cos(-g - h + f) + (((eta ^ 2) - 0.2e1 / 0.5e1 * eta - 0.27e2 / 0.5e1) * (1 + eta) * (eta - 1) * cos(g + h + 0.3e1 * f) / 0.2e1 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos(g + h + 0.5e1 * f) / 0.10e2 + cos(g + h + f) * ((eta ^ 4) - 0.4e1 / 0.5e1 * (eta ^ 3) - 0.42e2 / 0.5e1 * (eta ^ 2) + 0.28e2 / 0.5e1 * eta + 0.21e2 / 0.5e1)) * (1 + eta)) * J / a / (eta ^ 9) -0.45e2 / 0.8e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((-0.16e2 / 0.5e1 * (eta + 0.3e1 / 0.2e1) * ((eta - 1) ^ 2) * sin(-g - h + 0.2e1 * f) - 0.4e1 / 0.5e1 * (1 + eta) * ((eta - 1) ^ 2) * sin(-g - h + 0.4e1 * f) + 0.16e2 / 0.5e1 * ((1 + eta) ^ 2) * (eta - 0.3e1 / 0.2e1) * sin(g + h + 0.2e1 * f) + 0.4e1 / 0.5e1 * (eta - 1) * ((1 + eta) ^ 2) * sin(g + h + 0.4e1 * f) + 0.16e2 / 0.5e1 * ((eta ^ 3) + 0.3e1 / 0.2e1 * (eta ^ 2) - 0.7e1 / 0.2e1) * eta * sin(g + h)) * sqrt((-eta ^ 2 + 1)) + ((eta ^ 2) + 0.2e1 / 0.5e1 * eta - 0.27e2 / 0.5e1) * (1 + eta) * ((eta - 1) ^ 2) * sin(-g - h + 0.3e1 * f) / 0.2e1 + ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin(-g - h + 0.5e1 * f) / 0.10e2 + ((eta ^ 4) + 0.4e1 / 0.5e1 * (eta ^ 3) - 0.42e2 / 0.5e1 * (eta ^ 2) - 0.28e2 / 0.5e1 * eta + 0.21e2 / 0.5e1) * (eta - 1) * sin(-g - h + f) - (1 + eta) * (((eta ^ 2) - 0.2e1 / 0.5e1 * eta - 0.27e2 / 0.5e1) * (1 + eta) * (eta - 1) * sin(g + h + 0.3e1 * f) / 0.2e1 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin(g + h + 0.5e1 * f) / 0.10e2 + sin(g + h + f) * ((eta ^ 4) - 0.4e1 / 0.5e1 * (eta ^ 3) - 0.42e2 / 0.5e1 * (eta ^ 2) + 0.28e2 / 0.5e1 * eta + 0.21e2 / 0.5e1))) * R__e ^ 2 * J / a / (eta ^ 9)];
D2 = [0.3e1 / 0.2e1 * R__e ^ 2 * J * (((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * sin((3 * f)) - 0.3e1 * sin(f) * (((eta ^ 2) + 0.20e2 / 0.3e1 * eta + 0.29e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 - 8 * eta - 11) * ci2 ^ 2 + (eta ^ 2) / 0.6e1 + (2 * eta) + 0.5e1 / 0.2e1)) * sqrt((-eta ^ 2 + 1)) + 0.6e1 * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 1) * sin((2 * f)) - 0.10e2 / 0.3e1 * Delta * ci2 ^ 4 + 0.4e1 * Delta * ci2 ^ 2 - Delta) * (1 + eta)) / a ^ 3 / (eta ^ 4) / (1 + eta) 0.9e1 * R__e ^ 2 * J * (cos(f) * (((1 + eta) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((eta - 1) ^ 2) * cos(f) ^ 4 - (1 + eta) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (0.5e1 / 0.3e1 * ci2 ^ 4 - 0.2e1 * ci2 ^ 2 + 0.1e1 / 0.2e1) * eta + 0.20e2 / 0.3e1 * ci2 ^ 4 - 0.7e1 * ci2 ^ 2 + 0.4e1 / 0.3e1) * (eta - 1) * cos(f) ^ 2 + (0.1e1 / 0.2e1 + 0.3e1 * ci2 ^ 4 - 0.3e1 * ci2 ^ 2) * (eta ^ 2) + (0.3e1 / 0.2e1 + 0.5e1 * ci2 ^ 4 - 0.6e1 * ci2 ^ 2) * eta + 0.3e1 * ci2 ^ 4 - 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.6e1) * sqrt((-eta ^ 2 + 1)) + 0.4e1 * ((1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 1) * cos(f) ^ 4 + ((-0.3e1 / 0.4e1 * ci2 ^ 4 + 0.3e1 / 0.4e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * (eta ^ 2) + (-0.5e1 / 0.4e1 * ci2 ^ 4 + 0.3e1 / 0.2e1 * ci2 ^ 2 - 0.3e1 / 0.8e1) * eta - 0.3e1 / 0.2e1 * ci2 ^ 4 + 0.7e1 / 0.4e1 * ci2 ^ 2 - 0.5e1 / 0.12e2) * cos(f) ^ 2 + (-0.5e1 / 0.12e2 * ci2 ^ 4 + ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.8e1) * (eta ^ 2) + (-0.5e1 / 0.12e2 * ci2 ^ 4 + ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.8e1) * eta - ci2 ^ 4 / 0.6e1 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.12e2) * (1 + eta) * (eta - 1)) / a ^ 2 / (eta ^ 7) / (1 + eta) -0.9e1 / 0.2e1 * ((-(ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 1) * (1 + eta) * sin((-h + 3 * f)) / 0.3e1 + ((ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta ^ 2) + (-0.4e1 + 0.20e2 / 0.3e1 * ci2 ^ 2) * eta + 0.29e2 / 0.3e1 * ci2 ^ 2 - 0.11e2 / 0.2e1) * sin((-h + f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 1) * (1 + eta) * sin((h + 3 * f)) / 0.3e1 + ((ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta ^ 2) + (-0.4e1 + 0.20e2 / 0.3e1 * ci2 ^ 2) * eta + 0.29e2 / 0.3e1 * ci2 ^ 2 - 0.11e2 / 0.2e1) * sin((h + f))) * sqrt((-eta ^ 2 + 1)) - 0.2e1 * (1 + eta) * ((ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 1) * sin((-h + 2 * f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 1) * sin((h + 2 * f)) - 0.20e2 / 0.3e1 * Delta * cos(h) * (-0.3e1 / 0.5e1 + ci2 ^ 2))) * R__e ^ 2 * J * ci2 ^ 3 * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 2 / (eta ^ 4) / (1 + eta) -0.9e1 / 0.2e1 * R__e ^ 2 * ((-(eta - 1) * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-h + 3 * f)) / 0.3e1 + ((ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta ^ 2) + (-0.4e1 + 0.20e2 / 0.3e1 * ci2 ^ 2) * eta + 0.29e2 / 0.3e1 * ci2 ^ 2 - 0.11e2 / 0.2e1) * cos((-h + f)) + (eta - 1) * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((h + 3 * f)) / 0.3e1 - cos((h + f)) * ((ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta ^ 2) + (-0.4e1 + 0.20e2 / 0.3e1 * ci2 ^ 2) * eta + 0.29e2 / 0.3e1 * ci2 ^ 2 - 0.11e2 / 0.2e1)) * sqrt((-eta ^ 2 + 1)) - 0.2e1 * (1 + eta) * ((eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-h + 2 * f)) - (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((h + 2 * f)) - 0.20e2 / 0.3e1 * Delta * sin(h) * (-0.3e1 / 0.5e1 + ci2 ^ 2))) * J * ci2 ^ 3 * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 2 / (eta ^ 4) / (1 + eta) 0.60e2 * (-0.3e1 / 0.40e2 * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) - 0.5e1 / 0.2e1 * eta - 0.5e1) * ci2 ^ 4 + (-(eta ^ 2) + (3 * eta) + 0.11e2 / 0.2e1) * ci2 ^ 2 + (eta ^ 2) / 0.6e1 - 0.3e1 / 0.4e1 * eta - 0.7e1 / 0.6e1) * (eta - 1) * sin((-g - h + 2 * f)) + (1 + eta) * (((eta ^ 2) - 0.22e2 / 0.5e1 * eta - 0.19e2) * ci2 ^ 4 + (-(eta ^ 2) + 0.26e2 / 0.5e1 * eta + 0.99e2 / 0.5e1) * ci2 ^ 2 + (eta ^ 2) / 0.6e1 - 0.19e2 / 0.15e2 * eta - 0.37e2 / 0.10e2) * ((eta - 1) ^ 2) * sin((-g - h + 3 * f)) / 0.128e3 - 0.3e1 / 0.80e2 * (1 + eta) * sqrt((-eta ^ 2 + 1)) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((-g - h + 4 * f)) + 0.3e1 / 0.640e3 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((-g - h + 5 * f)) - 0.3e1 / 0.64e2 * (1 + eta) * (((eta ^ 3) + 0.121e3 / 0.15e2 * (eta ^ 2) + 0.151e3 / 0.15e2 * eta - 0.69e2 / 0.5e1) * ci2 ^ 4 + (-(eta ^ 3) - 0.49e2 / 0.5e1 * (eta ^ 2) - 0.57e2 / 0.5e1 * eta + 0.79e2 / 0.5e1) * ci2 ^ 2 + (eta ^ 3) / 0.6e1 + 0.5e1 / 0.2e1 * (eta ^ 2) + 0.77e2 / 0.30e2 * eta - 0.109e3 / 0.30e2) * (eta - 1) * sin((-g - h + f)) - 0.3e1 / 0.40e2 * sqrt((-eta ^ 2 + 1)) * (((eta ^ 3) - 0.5e1 / 0.2e1 * (eta ^ 2) - 0.15e2 / 0.2e1 * eta - 0.5e1) * ci2 ^ 4 + (-(eta ^ 3) + (3 * eta ^ 2) + 0.17e2 / 0.2e1 * eta + 0.11e2 / 0.2e1) * ci2 ^ 2 + (eta ^ 3) / 0.6e1 - 0.3e1 / 0.4e1 * (eta ^ 2) - 0.23e2 / 0.12e2 * eta - 0.7e1 / 0.6e1) * sin((g + h + 2 * f)) + (1 + eta) * (((eta ^ 3) - 0.21e2 / 0.5e1 * (eta ^ 2) - 0.113e3 / 0.5e1 * eta - 0.19e2) * ci2 ^ 4 + (-(eta ^ 3) + (5 * eta ^ 2) + 0.121e3 / 0.5e1 * eta + 0.99e2 / 0.5e1) * ci2 ^ 2 + (eta ^ 3) / 0.6e1 - 0.37e2 / 0.30e2 * (eta ^ 2) - 0.29e2 / 0.6e1 * eta - 0.37e2 / 0.10e2) * (eta - 1) * sin((g + h + 3 * f)) / 0.128e3 - 0.3e1 / 0.80e2 * ((1 + eta) ^ 2) * sqrt((-eta ^ 2 + 1)) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((g + h + 4 * f)) + 0.3e1 / 0.640e3 * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((g + h + 5 * f)) + ((-0.127e3 / 0.320e3 * (eta ^ 4) + 0.451e3 / 0.320e3 * eta + 0.207e3 / 0.320e3 - 0.3e1 / 0.64e2 * (eta ^ 5) - 0.49e2 / 0.80e2 * (eta ^ 3) + 0.13e2 / 0.20e2 * (eta ^ 2)) * ci2 ^ 4 + (0.3e1 / 0.64e2 * (eta ^ 5) + 0.153e3 / 0.320e3 * (eta ^ 4) + 0.57e2 / 0.80e2 * (eta ^ 3) - 0.63e2 / 0.80e2 * (eta ^ 2) - 0.531e3 / 0.320e3 * eta - 0.237e3 / 0.320e3) * ci2 ^ 2 + 0.109e3 / 0.640e3 - (eta ^ 5) / 0.128e3 - 0.77e2 / 0.640e3 * (eta ^ 4) - 0.27e2 / 0.160e3 * (eta ^ 3) + (eta ^ 2) / 0.5e1 + 0.257e3 / 0.640e3 * eta) * sin((g + h + f)) + sqrt((-eta ^ 2 + 1)) * (cos((g + h)) * (1 + eta) * eta * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) + sin((g + h)) * (((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.31e2 / 0.10e2) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * (eta ^ 2) - (3 * eta) - 0.18e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * (eta ^ 2) + 0.3e1 / 0.4e1 * eta + 0.17e2 / 0.20e2) / 0.4e1)) * R__e ^ 2 * J / a ^ 2 / (eta ^ 7) / (1 + eta) -0.15e2 * (0.3e1 / 0.10e2 * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) - 0.5e1 / 0.2e1 * eta - 0.5e1) * ci2 ^ 4 + (-(eta ^ 2) + (3 * eta) + 0.11e2 / 0.2e1) * ci2 ^ 2 + (eta ^ 2) / 0.6e1 - 0.3e1 / 0.4e1 * eta - 0.7e1 / 0.6e1) * cos((-g - h + 2 * f)) - (1 + eta) * (((eta ^ 2) - 0.22e2 / 0.5e1 * eta - 0.19e2) * ci2 ^ 4 + (-(eta ^ 2) + 0.26e2 / 0.5e1 * eta + 0.99e2 / 0.5e1) * ci2 ^ 2 + (eta ^ 2) / 0.6e1 - 0.19e2 / 0.15e2 * eta - 0.37e2 / 0.10e2) * ((eta - 1) ^ 2) * cos((-g - h + 3 * f)) / 0.32e2 + 0.3e1 / 0.20e2 * (1 + eta) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g - h + 4 * f)) - 0.3e1 / 0.160e3 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g - h + 5 * f)) + 0.3e1 / 0.16e2 * (1 + eta) * (((eta ^ 3) + 0.121e3 / 0.15e2 * (eta ^ 2) + 0.151e3 / 0.15e2 * eta - 0.69e2 / 0.5e1) * ci2 ^ 4 + (-(eta ^ 3) - 0.49e2 / 0.5e1 * (eta ^ 2) - 0.57e2 / 0.5e1 * eta + 0.79e2 / 0.5e1) * ci2 ^ 2 + (eta ^ 3) / 0.6e1 + 0.5e1 / 0.2e1 * (eta ^ 2) + 0.77e2 / 0.30e2 * eta - 0.109e3 / 0.30e2) * (eta - 1) * cos((-g - h + f)) - 0.3e1 / 0.10e2 * (((eta ^ 3) - 0.5e1 / 0.2e1 * (eta ^ 2) - 0.15e2 / 0.2e1 * eta - 0.5e1) * ci2 ^ 4 + (-(eta ^ 3) + (3 * eta ^ 2) + 0.17e2 / 0.2e1 * eta + 0.11e2 / 0.2e1) * ci2 ^ 2 + (eta ^ 3) / 0.6e1 - 0.3e1 / 0.4e1 * (eta ^ 2) - 0.23e2 / 0.12e2 * eta - 0.7e1 / 0.6e1) * sqrt((-eta ^ 2 + 1)) * cos((g + h + 2 * f)) + (1 + eta) * (eta - 1) * (((eta ^ 3) - 0.21e2 / 0.5e1 * (eta ^ 2) - 0.113e3 / 0.5e1 * eta - 0.19e2) * ci2 ^ 4 + (-(eta ^ 3) + (5 * eta ^ 2) + 0.121e3 / 0.5e1 * eta + 0.99e2 / 0.5e1) * ci2 ^ 2 + (eta ^ 3) / 0.6e1 - 0.37e2 / 0.30e2 * (eta ^ 2) - 0.29e2 / 0.6e1 * eta - 0.37e2 / 0.10e2) * cos((g + h + 3 * f)) / 0.32e2 - 0.3e1 / 0.20e2 * ((1 + eta) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g + h + 4 * f)) + 0.3e1 / 0.160e3 * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g + h + 5 * f)) + ((0.13e2 / 0.5e1 * (eta ^ 2) + 0.451e3 / 0.80e2 * eta - 0.3e1 / 0.16e2 * (eta ^ 5) - 0.127e3 / 0.80e2 * (eta ^ 4) - 0.49e2 / 0.20e2 * (eta ^ 3) + 0.207e3 / 0.80e2) * ci2 ^ 4 + (0.153e3 / 0.80e2 * (eta ^ 4) + 0.57e2 / 0.20e2 * (eta ^ 3) - 0.63e2 / 0.20e2 * (eta ^ 2) - 0.531e3 / 0.80e2 * eta + 0.3e1 / 0.16e2 * (eta ^ 5) - 0.237e3 / 0.80e2) * ci2 ^ 2 + 0.109e3 / 0.160e3 - 0.27e2 / 0.40e2 * (eta ^ 3) + 0.4e1 / 0.5e1 * (eta ^ 2) + 0.257e3 / 0.160e3 * eta - (eta ^ 5) / 0.32e2 - 0.77e2 / 0.160e3 * (eta ^ 4)) * cos((g + h + f)) + sqrt((-eta ^ 2 + 1)) * ((((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.31e2 / 0.10e2) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * (eta ^ 2) - (3 * eta) - 0.18e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * (eta ^ 2) + 0.3e1 / 0.4e1 * eta + 0.17e2 / 0.20e2) * cos((g + h)) - 0.4e1 * sin((g + h)) * (1 + eta) * eta * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2))) * R__e ^ 2 * J / a ^ 2 / (eta ^ 7) / (1 + eta)];
D3 = [-0.3e1 * ((cos(-h + f) - cos(h + f)) * sqrt((-eta ^ 2 + 1)) + 0.2e1 * sin(h) * Delta) * R__e ^ 2 * J * sqrt((-ci2 ^ 2 + 1)) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) / a ^ 3 / (eta ^ 4) / ci2 -0.3e1 / 0.8e1 * sqrt((-ci2 ^ 2 + 1)) * R__e ^ 2 * J * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (0.3e1 * (eta ^ 2 - 5) * (sin(h + f) - sin(-h + f)) * sqrt((-eta ^ 2 + 1)) + (-6 * eta ^ 2 + 6) * sin(-h + 0.2e1 * f) + ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) * sin(-h + 0.3e1 * f) + (6 * eta ^ 2 - 6) * sin(h + 0.2e1 * f) - ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) * sin(h + 0.3e1 * f) + (8 * eta ^ 3 + 12 * eta ^ 2 - 20) * sin(h)) / a ^ 2 / (eta ^ 7) / ci2 0.3e1 / 0.2e1 * (ci2 + 1) * (ci2 - 1) * R__e ^ 2 * (ci2 ^ 2) * J * ((cos(-0.2e1 * h + f) - cos(0.2e1 * h + f)) * sqrt((-eta ^ 2 + 1)) + 0.2e1 * sin(0.2e1 * h) * Delta) / a ^ 2 / (eta ^ 4) -0.3e1 * ((((ci2 ^ 4) / 0.2e1 - (ci2 ^ 2) / 0.2e1) * sin(-0.2e1 * h + f) + sin(0.2e1 * h + f) * (ci2 ^ 4) / 0.2e1 - sin(f) * (ci2 ^ 4) - sin(0.2e1 * h + f) * (ci2 ^ 2) / 0.2e1 + sin(f) / 0.2e1) * sqrt((-eta ^ 2 + 1)) + Delta * ((ci2 ^ 4 - ci2 ^ 2) * cos(0.2e1 * h) - (ci2 ^ 4) + 0.1e1 / 0.2e1)) * R__e ^ 2 * J / a ^ 2 / (eta ^ 4) 0.3e1 / 0.2e1 * (((-0.3e1 / 0.4e1 + 0.3e1 / 0.4e1 * (eta ^ 2)) * cos(-g - 0.2e1 * h + 0.2e1 * f) - 0.3e1 / 0.4e1 * ((1 + eta) ^ 2) * cos(g + 0.2e1 * h + 0.2e1 * f) + (0.3e1 / 0.4e1 - 0.3e1 / 0.4e1 * (eta ^ 2)) * cos(-g + 0.2e1 * f) + 0.3e1 / 0.4e1 * ((1 + eta) ^ 2) * cos(g + 0.2e1 * f) + (-0.5e1 / 0.2e1 * eta - 0.5e1 / 0.2e1 - (eta ^ 2)) * cos(g + 0.2e1 * h) + 0.4e1 * Delta * eta * (1 + eta) * sin(g + 0.2e1 * h) + ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * cos(g) - 0.4e1 * Delta * sin(g) * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) + 0.13e2 / 0.8e1 * (1 + eta) * (-(1 + eta) * ((eta - 1) ^ 2) * cos(-g - 0.2e1 * h + 0.3e1 * f) / 0.13e2 + (-(eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) + 0.25e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * cos(-g - 0.2e1 * h + f) + (eta - 1) * ((1 + eta) ^ 2) * cos(g + 0.2e1 * h + 0.3e1 * f) / 0.13e2 + (1 + eta) * ((eta - 1) ^ 2) * cos(-g + 0.3e1 * f) / 0.13e2 + (1 + eta) * ((eta ^ 2) - 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * cos(g + 0.2e1 * h + f) + (eta - 1) * ((eta ^ 2) + 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * cos(f - g) - (1 + eta) * (((eta ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * cos(g + 0.3e1 * f) + cos(f + g) * ((eta ^ 2) - 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2)))) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sqrt((-ci2 ^ 2 + 1)) * R__e ^ 2 * J / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta) 0.6e1 * (((-0.3e1 / 0.16e2 * (eta ^ 2) + 0.3e1 / 0.16e2) * sin(-g - 0.2e1 * h + 0.2e1 * f) - 0.3e1 / 0.16e2 * ((1 + eta) ^ 2) * sin(g + 0.2e1 * h + 0.2e1 * f) + (0.3e1 / 0.16e2 * (eta ^ 2) - 0.3e1 / 0.16e2) * sin(-g + 0.2e1 * f) + 0.3e1 / 0.16e2 * ((1 + eta) ^ 2) * sin(g + 0.2e1 * f) + (-(eta ^ 2) / 0.4e1 - 0.5e1 / 0.8e1 * eta - 0.5e1 / 0.8e1) * sin(g + 0.2e1 * h) - eta * Delta * (1 + eta) * cos(g + 0.2e1 * h) + ((eta ^ 2) / 0.4e1 + 0.5e1 / 0.8e1 * eta + 0.5e1 / 0.8e1) * sin(g) + Delta * cos(g) * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) - 0.13e2 / 0.32e2 * (1 + eta) * (-(1 + eta) * ((eta - 1) ^ 2) * sin(-g - 0.2e1 * h + 0.3e1 * f) / 0.13e2 + (-(eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) + 0.25e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * sin(-g - 0.2e1 * h + f) - (eta - 1) * ((1 + eta) ^ 2) * sin(g + 0.2e1 * h + 0.3e1 * f) / 0.13e2 + (1 + eta) * ((eta - 1) ^ 2) * sin(-g + 0.3e1 * f) / 0.13e2 + (-(eta ^ 3) - 0.3e1 / 0.13e2 * (eta ^ 2) + 0.25e2 / 0.13e2 * eta + 0.15e2 / 0.13e2) * sin(g + 0.2e1 * h + f) + (eta - 1) * ((eta ^ 2) + 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * sin(f - g) + (1 + eta) * (((eta ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * sin(g + 0.3e1 * f) + sin(f + g) * ((eta ^ 2) - 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2)))) * sqrt((-ci2 ^ 2 + 1)) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * R__e ^ 2 * J / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta)];
D4 = [0.3e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((sin(-h + f) + sin(h + f)) * sqrt((-eta ^ 2 + 1)) + 0.2e1 * cos(h) * Delta) * R__e ^ 2 * J * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 3 / (eta ^ 4) / ci2 -0.3e1 / 0.8e1 * sqrt(-ci2 ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 2 * J * (-0.3e1 * (eta ^ 2 - 5) * (cos(h + f) + cos(-h + f)) * sqrt((-eta ^ 2 + 1)) + (-6 * eta ^ 2 + 6) * cos(-h + 0.2e1 * f) + ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) * cos(-h + 0.3e1 * f) + (-6 * eta ^ 2 + 6) * cos(h + 0.2e1 * f) + ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) * cos(h + 0.3e1 * f) + (-8 * eta ^ 3 - 12 * eta ^ 2 + 20) * cos(h)) / a ^ 2 / (eta ^ 7) / ci2 -0.3e1 * R__e ^ 2 * J * (((ci2 ^ 4 / 0.2e1 - ci2 ^ 2 / 0.2e1) * sin(-0.2e1 * h + f) + sin(0.2e1 * h + f) * ci2 ^ 4 / 0.2e1 + sin(f) * ci2 ^ 4 - sin(0.2e1 * h + f) * ci2 ^ 2 / 0.2e1 - sin(f) / 0.2e1) * sqrt((-eta ^ 2 + 1)) + ((ci2 ^ 4 - ci2 ^ 2) * cos(0.2e1 * h) + ci2 ^ 4 - 0.1e1 / 0.2e1) * Delta) / a ^ 2 / (eta ^ 4) -0.3e1 / 0.2e1 * (ci2 + 0.1e1) * (ci2 - 0.1e1) * R__e ^ 2 * ci2 ^ 2 * J * ((cos(-0.2e1 * h + f) - cos(0.2e1 * h + f)) * sqrt((-eta ^ 2 + 1)) + 0.2e1 * sin(0.2e1 * h) * Delta) / a ^ 2 / (eta ^ 4) -0.6e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 2 * J * (((0.3e1 / 0.16e2 * (eta ^ 2) - 0.3e1 / 0.16e2) * sin(-g - 0.2e1 * h + 0.2e1 * f) + 0.3e1 / 0.16e2 * ((1 + eta) ^ 2) * sin(g + 0.2e1 * h + 0.2e1 * f) + (0.3e1 / 0.16e2 * (eta ^ 2) - 0.3e1 / 0.16e2) * sin(-g + 0.2e1 * f) + 0.3e1 / 0.16e2 * ((1 + eta) ^ 2) * sin(g + 0.2e1 * f) + ((eta ^ 2) / 0.4e1 + 0.5e1 / 0.8e1 * eta + 0.5e1 / 0.8e1) * sin(g + 0.2e1 * h) + eta * Delta * (1 + eta) * cos(g + 0.2e1 * h) + ((eta ^ 2) / 0.4e1 + 0.5e1 / 0.8e1 * eta + 0.5e1 / 0.8e1) * sin(g) + Delta * cos(g) * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) - 0.13e2 / 0.32e2 * ((1 + eta) * ((eta - 1) ^ 2) * sin(-g - 0.2e1 * h + 0.3e1 * f) / 0.13e2 + ((eta ^ 2) + 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * (eta - 1) * sin(-g - 0.2e1 * h + f) + (eta - 1) * ((1 + eta) ^ 2) * sin(g + 0.2e1 * h + 0.3e1 * f) / 0.13e2 + (1 + eta) * ((eta - 1) ^ 2) * sin(-g + 0.3e1 * f) / 0.13e2 + (1 + eta) * ((eta ^ 2) - 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * sin(g + 0.2e1 * h + f) + (eta - 1) * ((eta ^ 2) + 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * sin(f - g) + (1 + eta) * (((eta ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * sin(g + 0.3e1 * f) + sin(f + g) * ((eta ^ 2) - 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2))) * (1 + eta)) / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta) 0.3e1 / 0.2e1 * (((0.3e1 / 0.4e1 - 0.3e1 / 0.4e1 * (eta ^ 2)) * cos(-g - 0.2e1 * h + 0.2e1 * f) + 0.3e1 / 0.4e1 * ((1 + eta) ^ 2) * cos(g + 0.2e1 * h + 0.2e1 * f) + (0.3e1 / 0.4e1 - 0.3e1 / 0.4e1 * (eta ^ 2)) * cos(-g + 0.2e1 * f) + 0.3e1 / 0.4e1 * ((1 + eta) ^ 2) * cos(g + 0.2e1 * f) + ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * cos(g + 0.2e1 * h) - 0.4e1 * Delta * eta * (1 + eta) * sin(g + 0.2e1 * h) + ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * cos(g) - 0.4e1 * Delta * sin(g) * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) + 0.13e2 / 0.8e1 * (1 + eta) * ((1 + eta) * ((eta - 1) ^ 2) * cos(-g - 0.2e1 * h + 0.3e1 * f) / 0.13e2 + ((eta ^ 2) + 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * (eta - 1) * cos(-g - 0.2e1 * h + f) - (eta - 1) * ((1 + eta) ^ 2) * cos(g + 0.2e1 * h + 0.3e1 * f) / 0.13e2 + (1 + eta) * ((eta - 1) ^ 2) * cos(-g + 0.3e1 * f) / 0.13e2 + (-(eta ^ 3) - 0.3e1 / 0.13e2 * (eta ^ 2) + 0.25e2 / 0.13e2 * eta + 0.15e2 / 0.13e2) * cos(g + 0.2e1 * h + f) + (eta - 1) * ((eta ^ 2) + 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2) * cos(f - g) - (1 + eta) * (((eta ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * cos(g + 0.3e1 * f) + cos(f + g) * ((eta ^ 2) - 0.10e2 / 0.13e2 * eta - 0.15e2 / 0.13e2)))) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * J / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta)];
D5 = [-0.6e1 * ((0.3e1 / 0.2e1 * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g + h + 2 * f)) + ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g + h)) - 0.5e1 * sin((g + h)) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (1 + eta) * Delta) * sqrt((-eta ^ 2 + 1)) + 0.7e1 / 0.4e1 * (1 + eta) * ((ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * (1 + eta) * (eta - 1) * cos((-g - h + f)) - (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g + h + 3 * f)) / 0.7e1 - 0.10e2 / 0.7e1 * ((ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta ^ 2) - 0.11e2 / 0.5e1 * ci2 ^ 4 + 0.12e2 / 0.5e1 * ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((g + h + f)))) * R__e ^ 2 * J / a ^ 3 / (eta ^ 4) / (1 + eta) 0.9e1 / 0.2e1 * R__e ^ 2 * ((-0.2e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * (eta - 1) * sin((-g - h + 2 * f)) + ((4 * eta ^ 2 - 8) * ci2 ^ 4 + (0.17e2 / 0.2e1 - 0.9e1 / 0.2e1 * (eta ^ 2)) * ci2 ^ 2 + (eta ^ 2) - 0.5e1 / 0.3e1) * sin((g + h + 2 * f)) + (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((g + h + 4 * f)) + 0.10e2 / 0.3e1 * (((eta ^ 3) + 0.3e1 / 0.2e1 * (eta ^ 2) - 0.31e2 / 0.10e2) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * (eta ^ 3) - 0.9e1 / 0.5e1 * (eta ^ 2) + 0.18e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * (eta ^ 3) + 0.9e1 / 0.20e2 * (eta ^ 2) - 0.17e2 / 0.20e2) * sin((g + h))) * sqrt((-eta ^ 2 + 1)) + 0.7e1 / 0.24e2 * ((1 + eta) ^ 2) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * ((eta - 1) ^ 2) * sin((-g - h + 3 * f)) + (1 + eta) * (eta - 1) * ((eta ^ 2 - 6) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * (eta ^ 2) + 0.29e2 / 0.4e1) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.11e2 / 0.6e1) * sin((-g - h + f)) - 0.2e1 / 0.3e1 * (1 + eta) * (eta - 1) * (((eta ^ 2) - 0.11e2 / 0.2e1) * ci2 ^ 4 + (-0.9e1 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.8e1) * ci2 ^ 2 + (eta ^ 2) / 0.4e1 - 0.1e1) * sin((g + h + 3 * f)) - ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((g + h + 5 * f)) / 0.8e1 - 0.5e1 / 0.4e1 * (((eta ^ 4) - 0.42e2 / 0.5e1 * (eta ^ 2) + 0.9e1) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * (eta ^ 4) + 0.48e2 / 0.5e1 * (eta ^ 2) - 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.10e2 * (eta ^ 4) - 0.11e2 / 0.5e1 * (eta ^ 2) + 0.13e2 / 0.6e1) * sin((g + h + f))) * J / a ^ 2 / (eta ^ 7) -0.6e1 * sqrt(-ci2 ^ 2 + 0.1e1) * ((0.3e1 / 0.2e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * cos((g + 2 * h + 2 * f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * cos((g + 2 * h)) + 0.3e1 / 0.2e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * cos((g + 2 * f)) - 0.5e1 * (1 + eta) * Delta * (-0.3e1 / 0.5e1 + ci2 ^ 2) * sin((g + 2 * h)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * cos(g) - 0.5e1 * sin(g) * (1 + eta) * Delta * (-0.3e1 / 0.5e1 + ci2 ^ 2)) * sqrt((-eta ^ 2 + 1)) + 0.7e1 / 0.4e1 * ((1 + eta) * (ci2 ^ 2 - 0.9e1 / 0.14e2) * (eta - 1) * cos((-g - 2 * h + f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * (eta - 1) * cos((g + 2 * h + 3 * f)) / 0.7e1 + ((-0.10e2 / 0.7e1 * ci2 ^ 2 + 0.6e1 / 0.7e1) * (eta ^ 2) + 0.22e2 / 0.7e1 * ci2 ^ 2 - 0.12e2 / 0.7e1) * cos((g + 2 * h + f)) + (1 + eta) * (ci2 ^ 2 - 0.9e1 / 0.14e2) * (eta - 1) * cos((f - g)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * (eta - 1) * cos((g + 3 * f)) / 0.7e1 - 0.10e2 / 0.7e1 * cos((f + g)) * ((-0.3e1 / 0.5e1 + ci2 ^ 2) * (eta ^ 2) - 0.11e2 / 0.5e1 * ci2 ^ 2 + 0.6e1 / 0.5e1)) * (1 + eta)) * ci2 ^ 3 * R__e ^ 2 * J / a ^ 2 / (eta ^ 4) / (1 + eta) 0.30e2 * sqrt(-ci2 ^ 2 + 0.1e1) * ci2 ^ 3 * R__e ^ 2 * J * ((-0.3e1 / 0.10e2 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * h + 2 * f)) - ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * h)) / 0.5e1 - (1 + eta) * (-0.3e1 / 0.5e1 + ci2 ^ 2) * Delta * cos((g + 2 * h)) + 0.3e1 / 0.10e2 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * f)) + ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin(g) / 0.5e1 + cos(g) * (1 + eta) * (-0.3e1 / 0.5e1 + ci2 ^ 2) * Delta) * sqrt((-eta ^ 2 + 1)) - 0.7e1 / 0.20e2 * (-(ci2 ^ 2 - 0.9e1 / 0.14e2) * (1 + eta) * (eta - 1) * sin((-g - 2 * h + f)) - (1 + eta) * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * h + 3 * f)) / 0.7e1 + ((-0.10e2 / 0.7e1 * ci2 ^ 2 + 0.6e1 / 0.7e1) * (eta ^ 2) + 0.22e2 / 0.7e1 * ci2 ^ 2 - 0.12e2 / 0.7e1) * sin((g + 2 * h + f)) + (ci2 ^ 2 - 0.9e1 / 0.14e2) * (1 + eta) * (eta - 1) * sin((f - g)) + (1 + eta) * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 3 * f)) / 0.7e1 + 0.10e2 / 0.7e1 * ((-0.3e1 / 0.5e1 + ci2 ^ 2) * (eta ^ 2) - 0.11e2 / 0.5e1 * ci2 ^ 2 + 0.6e1 / 0.5e1) * sin((f + g))) * (1 + eta)) / a ^ 2 / (eta ^ 4) / (1 + eta) -0.9e1 / 0.16e2 * R__e ^ 2 * ((0.11e2 / 0.3e1 * (1 + eta) * ((ci2 ^ 4 - 0.12e2 / 0.11e2 * ci2 ^ 2 + 0.5e1 / 0.22e2) * (eta ^ 3) + (0.8e1 / 0.11e2 * ci2 ^ 4 - 0.9e1 / 0.11e2 * ci2 ^ 2 + 0.2e1 / 0.11e2) * (eta ^ 2) + (-0.43e2 / 0.11e2 * ci2 ^ 4 + 0.4e1 * ci2 ^ 2 - 0.47e2 / 0.66e2) * eta - 0.4e1 * ci2 ^ 4 + 0.45e2 / 0.11e2 * ci2 ^ 2 - 0.8e1 / 0.11e2) * cos((2 * h + 3 * f + 2 * g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * (eta - 1) * cos((2 * h + 5 * f + 2 * g)) / 0.2e1 - 0.7e1 / 0.6e1 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * cos((-2 * g - 2 * h + 3 * f)) - 0.47e2 / 0.3e1 * (1 + eta) * ((ci2 ^ 4 - 0.60e2 / 0.47e2 * ci2 ^ 2 + 0.33e2 / 0.94e2) * (eta ^ 2) + (0.35e2 / 0.47e2 * ci2 ^ 4 - 0.45e2 / 0.47e2 * ci2 ^ 2 + 0.25e2 / 0.94e2) * eta - 0.72e2 / 0.47e2 * ci2 ^ 4 + 0.87e2 / 0.47e2 * ci2 ^ 2 - 0.22e2 / 0.47e2) * (eta - 1) * cos((-2 * h - 2 * g + f)) + ((0.62e2 / 0.3e1 * ci2 ^ 4 - 0.25e2 * ci2 ^ 2 + 0.19e2 / 0.3e1) * (eta ^ 4) + (-0.31e2 * ci2 ^ 2 + 0.77e2 / 0.3e1 * ci2 ^ 4 + 0.47e2 / 0.6e1) * (eta ^ 3) + (0.75e2 * ci2 ^ 2 - 0.203e3 / 0.3e1 * ci2 ^ 4 - 0.97e2 / 0.6e1) * (eta ^ 2) + (-0.329e3 / 0.3e1 * ci2 ^ 4 + 0.123e3 * ci2 ^ 2 - 0.163e3 / 0.6e1) * eta - 0.65e2 / 0.6e1 + 0.50e2 * ci2 ^ 2 - 0.45e2 * ci2 ^ 4) * cos((2 * h + f + 2 * g)) + 0.7e1 / 0.6e1 * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.16e2 / 0.7e1 * ci2 ^ 4 + 0.20e2 / 0.7e1 * ci2 ^ 2 - 0.16e2 / 0.21e2) * eta - 0.95e2 / 0.7e1 * ci2 ^ 4 + 0.99e2 / 0.7e1 * ci2 ^ 2 - 0.37e2 / 0.14e2) * (1 + eta) * (eta - 1) * cos((3 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((5 * f)) / 0.2e1 + cos(f) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.10e2 * ci2 ^ 2 - 0.8e1 * ci2 ^ 4 - 0.8e1 / 0.3e1) * (eta ^ 3) + (0.32e2 * ci2 ^ 2 - 0.30e2 * ci2 ^ 4 - 0.19e2 / 0.3e1) * (eta ^ 2) + (-0.50e2 * ci2 ^ 2 + 0.40e2 * ci2 ^ 4 + 0.40e2 / 0.3e1) * eta + 0.69e2 * ci2 ^ 4 - 0.79e2 * ci2 ^ 2 + 0.109e3 / 0.6e1)) * sqrt((-eta ^ 2 + 1)) + 0.24e2 * (1 + eta) * ((ci2 ^ 4 - 0.13e2 / 0.12e2 * ci2 ^ 2 + 0.2e1 / 0.9e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * eta - 0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * cos((2 * h + 2 * g + 2 * f)) + 0.8e1 * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * cos((2 * h + 2 * g + 4 * f)) / 0.2e1 - ((1 + eta) ^ 2) * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta - 1) * cos((-2 * g - 2 * h + 2 * f)) + ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.13e2 / 0.12e2 + 0.31e2 / 0.6e1 * ci2 ^ 4 - 0.11e2 / 0.2e1 * ci2 ^ 2) * (eta ^ 3) + (0.97e2 / 0.36e2 + 0.23e2 / 0.2e1 * ci2 ^ 4 - 0.38e2 / 0.3e1 * ci2 ^ 2) * (eta ^ 2) + (0.113e3 / 0.36e2 - 0.83e2 / 0.6e1 * ci2 ^ 2 + 0.73e2 / 0.6e1 * ci2 ^ 4) * eta + 0.31e2 / 0.6e1 * ci2 ^ 4 - 0.6e1 * ci2 ^ 2 + 0.17e2 / 0.12e2) * cos((2 * g + 2 * h)) + (1 + eta) * (-0.20e2 / 0.3e1 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (1 + eta) * eta * Delta * sin((2 * g + 2 * h)) + ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.2e1 / 0.3e1 - 0.2e1 * ci2 ^ 4 + 0.5e1 / 0.2e1 * ci2 ^ 2) * eta - 0.7e1 / 0.6e1 - 0.5e1 * ci2 ^ 4 + 0.11e2 / 0.2e1 * ci2 ^ 2) * cos((2 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * cos((4 * f)) / 0.2e1 + (0.1e1 / 0.18e2 + ci2 ^ 4 / 0.3e1 - ci2 ^ 2 / 0.3e1) * (eta ^ 3) + (-0.13e2 / 0.36e2 - 0.5e1 / 0.6e1 * ci2 ^ 4 + 0.7e1 / 0.6e1 * ci2 ^ 2) * (eta ^ 2) + (-0.10e2 / 0.3e1 * ci2 ^ 4 + 0.25e2 / 0.6e1 * ci2 ^ 2 - 0.10e2 / 0.9e1) * eta - 0.31e2 / 0.6e1 * ci2 ^ 4 + 0.6e1 * ci2 ^ 2 - 0.17e2 / 0.12e2)) * (eta - 1)) * J / a ^ 2 / (eta ^ 7) / (1 + eta) 0.123e3 / 0.16e2 * R__e ^ 2 * J * ((-0.11e2 / 0.41e2 * (1 + eta) * ((ci2 ^ 4 - 0.12e2 / 0.11e2 * ci2 ^ 2 + 0.5e1 / 0.22e2) * (eta ^ 3) + (0.8e1 / 0.11e2 * ci2 ^ 4 - 0.9e1 / 0.11e2 * ci2 ^ 2 + 0.2e1 / 0.11e2) * (eta ^ 2) + (-0.43e2 / 0.11e2 * ci2 ^ 4 + 0.4e1 * ci2 ^ 2 - 0.47e2 / 0.66e2) * eta - 0.4e1 * ci2 ^ 4 + 0.45e2 / 0.11e2 * ci2 ^ 2 - 0.8e1 / 0.11e2) * sin((2 * h + 3 * f + 2 * g)) - 0.3e1 / 0.82e2 * ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((2 * h + 5 * f + 2 * g)) - 0.7e1 / 0.82e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * sin((-2 * g - 2 * h + 3 * f)) - 0.47e2 / 0.41e2 * (1 + eta) * ((ci2 ^ 4 - 0.60e2 / 0.47e2 * ci2 ^ 2 + 0.33e2 / 0.94e2) * (eta ^ 2) + (0.35e2 / 0.47e2 * ci2 ^ 4 - 0.45e2 / 0.47e2 * ci2 ^ 2 + 0.25e2 / 0.94e2) * eta - 0.72e2 / 0.47e2 * ci2 ^ 4 + 0.87e2 / 0.47e2 * ci2 ^ 2 - 0.22e2 / 0.47e2) * (eta - 1) * sin((-2 * h - 2 * g + f)) + ((-0.19e2 / 0.41e2 - 0.62e2 / 0.41e2 * ci2 ^ 4 + 0.75e2 / 0.41e2 * ci2 ^ 2) * (eta ^ 4) + (-0.47e2 / 0.82e2 - 0.77e2 / 0.41e2 * ci2 ^ 4 + 0.93e2 / 0.41e2 * ci2 ^ 2) * (eta ^ 3) + (0.97e2 / 0.82e2 + 0.203e3 / 0.41e2 * ci2 ^ 4 - 0.225e3 / 0.41e2 * ci2 ^ 2) * (eta ^ 2) + (0.163e3 / 0.82e2 + 0.329e3 / 0.41e2 * ci2 ^ 4 - 0.9e1 * ci2 ^ 2) * eta + 0.65e2 / 0.82e2 + 0.135e3 / 0.41e2 * ci2 ^ 4 - 0.150e3 / 0.41e2 * ci2 ^ 2) * sin((2 * h + f + 2 * g)) + 0.21e2 / 0.82e2 * (1 + eta) * ((ci2 ^ 4 - 0.25e2 / 0.21e2 * ci2 ^ 2 + 0.37e2 / 0.126e3) * (eta ^ 2) + (0.4e1 / 0.7e1 * ci2 ^ 4 - 0.16e2 / 0.21e2 * ci2 ^ 2 + 0.2e1 / 0.9e1) * eta - 0.27e2 / 0.7e1 * ci2 ^ 4 + 0.27e2 / 0.7e1 * ci2 ^ 2 - 0.9e1 / 0.14e2) * (eta - 1) * sin((3 * f)) + 0.3e1 / 0.82e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((5 * f)) + sin(f) * ((0.27e2 / 0.82e2 - 0.51e2 / 0.41e2 * ci2 ^ 2 + ci2 ^ 4) * (eta ^ 4) + (0.13e2 / 0.41e2 + 0.38e2 / 0.41e2 * ci2 ^ 4 - 0.48e2 / 0.41e2 * ci2 ^ 2) * (eta ^ 3) + (-0.80e2 / 0.41e2 - 0.280e3 / 0.41e2 * ci2 ^ 4 + 0.330e3 / 0.41e2 * ci2 ^ 2) * (eta ^ 2) + (-0.73e2 / 0.41e2 - 0.238e3 / 0.41e2 * ci2 ^ 4 + 0.288e3 / 0.41e2 * ci2 ^ 2) * eta + 0.63e2 / 0.41e2 * ci2 ^ 4 - 0.63e2 / 0.41e2 * ci2 ^ 2 + 0.21e2 / 0.82e2)) * sqrt((-eta ^ 2 + 1)) - 0.72e2 / 0.41e2 * (1 + eta) * ((ci2 ^ 4 - 0.13e2 / 0.12e2 * ci2 ^ 2 + 0.2e1 / 0.9e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * eta - 0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * sin((2 * h + 2 * g + 2 * f)) - 0.12e2 / 0.41e2 * ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((2 * h + 2 * g + 4 * f)) - 0.24e2 / 0.41e2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-2 * g - 2 * h + 2 * f)) - 0.24e2 / 0.41e2 * (eta - 1) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.13e2 / 0.12e2 + 0.31e2 / 0.6e1 * ci2 ^ 4 - 0.11e2 / 0.2e1 * ci2 ^ 2) * (eta ^ 3) + (0.97e2 / 0.36e2 + 0.23e2 / 0.2e1 * ci2 ^ 4 - 0.38e2 / 0.3e1 * ci2 ^ 2) * (eta ^ 2) + (0.113e3 / 0.36e2 - 0.83e2 / 0.6e1 * ci2 ^ 2 + 0.73e2 / 0.6e1 * ci2 ^ 4) * eta + 0.31e2 / 0.6e1 * ci2 ^ 4 - 0.6e1 * ci2 ^ 2 + 0.17e2 / 0.12e2) * sin((2 * g + 2 * h)) + 0.72e2 / 0.41e2 * (-0.20e2 / 0.9e1 * (1 + eta) * eta * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 1) * cos((2 * g + 2 * h)) + ((-0.7e1 / 0.6e1 * ci2 ^ 2 + ci2 ^ 4 + 0.5e1 / 0.18e2) * (eta ^ 2) + (0.2e1 / 0.3e1 * ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.2e1 / 0.9e1) * eta - ci2 ^ 4 + ci2 ^ 2 - 0.1e1 / 0.6e1) * (eta - 1) * sin((2 * f)) + (1 + eta) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((4 * f)) / 0.6e1 + 0.10e2 / 0.9e1 * (eta ^ 2 - 2) * eta * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2)) * (1 + eta)) / a ^ 2 / (eta ^ 7) / (1 + eta)];
D6 = [-0.30e2 * R__e ^ 2 * J * ((0.3e1 / 0.10e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (1 + eta) * sin((g + h + 2 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * sin((g + h)) / 0.5e1 + cos((g + h)) * (1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2)) * sqrt((-eta ^ 2 + 1)) - 0.7e1 / 0.20e2 * (1 + eta) * ((1 + eta) * (eta - 1) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * sin((-g - h + f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * sin((g + h + 3 * f)) / 0.7e1 + 0.10e2 / 0.7e1 * ((ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta ^ 2) - 0.11e2 / 0.5e1 * ci2 ^ 4 + 0.12e2 / 0.5e1 * ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + h + f)))) / a ^ 3 / (eta ^ 4) / (1 + eta) 0.9e1 / 0.2e1 * ((-0.2e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * (eta - 1) * cos((-g - h + 2 * f)) + ((-4 * eta ^ 2 + 8) * ci2 ^ 4 + (0.9e1 / 0.2e1 * (eta ^ 2) - 0.17e2 / 0.2e1) * ci2 ^ 2 - (eta ^ 2) + 0.5e1 / 0.3e1) * cos((g + h + 2 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * cos((g + h + 4 * f)) - 0.10e2 / 0.3e1 * cos((g + h)) * (((eta ^ 3) + 0.3e1 / 0.2e1 * (eta ^ 2) - 0.31e2 / 0.10e2) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * (eta ^ 3) - 0.9e1 / 0.5e1 * (eta ^ 2) + 0.18e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * (eta ^ 3) + 0.9e1 / 0.20e2 * (eta ^ 2) - 0.17e2 / 0.20e2)) * sqrt((-eta ^ 2 + 1)) + 0.7e1 / 0.24e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * cos((-g - h + 3 * f)) + (1 + eta) * ((eta ^ 2 - 6) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * (eta ^ 2) + 0.29e2 / 0.4e1) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.11e2 / 0.6e1) * (eta - 1) * cos((-g - h + f)) + 0.2e1 / 0.3e1 * (1 + eta) * (((eta ^ 2) - 0.11e2 / 0.2e1) * ci2 ^ 4 + (-0.9e1 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.8e1) * ci2 ^ 2 + (eta ^ 2) / 0.4e1 - 0.1e1) * (eta - 1) * cos((g + h + 3 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((g + h + 5 * f)) / 0.8e1 + 0.5e1 / 0.4e1 * (((eta ^ 4) - 0.42e2 / 0.5e1 * (eta ^ 2) + 0.9e1) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * (eta ^ 4) + 0.48e2 / 0.5e1 * (eta ^ 2) - 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.10e2 * (eta ^ 4) - 0.11e2 / 0.5e1 * (eta ^ 2) + 0.13e2 / 0.6e1) * cos((g + h + f))) * R__e ^ 2 * J / a ^ 2 / (eta ^ 7) -0.30e2 * sqrt(-ci2 ^ 2 + 0.1e1) * ((0.3e1 / 0.10e2 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * h + 2 * f)) + ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * h)) / 0.5e1 + (1 + eta) * (-0.3e1 / 0.5e1 + ci2 ^ 2) * Delta * cos((g + 2 * h)) + 0.3e1 / 0.10e2 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * f)) + ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin(g) / 0.5e1 + cos(g) * (1 + eta) * (-0.3e1 / 0.5e1 + ci2 ^ 2) * Delta) * sqrt((-eta ^ 2 + 1)) - 0.7e1 / 0.20e2 * (1 + eta) * ((ci2 ^ 2 - 0.9e1 / 0.14e2) * (1 + eta) * (eta - 1) * sin((-g - 2 * h + f)) + (1 + eta) * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 2 * h + 3 * f)) / 0.7e1 + ((0.10e2 / 0.7e1 * ci2 ^ 2 - 0.6e1 / 0.7e1) * (eta ^ 2) - 0.22e2 / 0.7e1 * ci2 ^ 2 + 0.12e2 / 0.7e1) * sin((g + 2 * h + f)) + (ci2 ^ 2 - 0.9e1 / 0.14e2) * (1 + eta) * (eta - 1) * sin((f - g)) + (1 + eta) * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g + 3 * f)) / 0.7e1 + 0.10e2 / 0.7e1 * ((-0.3e1 / 0.5e1 + ci2 ^ 2) * (eta ^ 2) - 0.11e2 / 0.5e1 * ci2 ^ 2 + 0.6e1 / 0.5e1) * sin((f + g)))) * ci2 ^ 3 * R__e ^ 2 * J / a ^ 2 / (eta ^ 4) / (1 + eta) -0.6e1 * sqrt(-ci2 ^ 2 + 0.1e1) * ci2 ^ 3 * R__e ^ 2 * J * ((-0.3e1 / 0.2e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * cos((g + 2 * h + 2 * f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * cos((g + 2 * h)) + 0.3e1 / 0.2e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * cos((g + 2 * f)) + 0.5e1 * (1 + eta) * Delta * (-0.3e1 / 0.5e1 + ci2 ^ 2) * sin((g + 2 * h)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * cos(g) - 0.5e1 * sin(g) * (1 + eta) * Delta * (-0.3e1 / 0.5e1 + ci2 ^ 2)) * sqrt((-eta ^ 2 + 1)) + 0.7e1 / 0.4e1 * (1 + eta) * (-(1 + eta) * (ci2 ^ 2 - 0.9e1 / 0.14e2) * (eta - 1) * cos((-g - 2 * h + f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * (eta - 1) * cos((g + 2 * h + 3 * f)) / 0.7e1 + ((0.10e2 / 0.7e1 * ci2 ^ 2 - 0.6e1 / 0.7e1) * (eta ^ 2) - 0.22e2 / 0.7e1 * ci2 ^ 2 + 0.12e2 / 0.7e1) * cos((g + 2 * h + f)) + (1 + eta) * (ci2 ^ 2 - 0.9e1 / 0.14e2) * (eta - 1) * cos((f - g)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * (eta - 1) * cos((g + 3 * f)) / 0.7e1 - 0.10e2 / 0.7e1 * cos((f + g)) * ((-0.3e1 / 0.5e1 + ci2 ^ 2) * (eta ^ 2) - 0.11e2 / 0.5e1 * ci2 ^ 2 + 0.6e1 / 0.5e1))) / a ^ 2 / (eta ^ 4) / (1 + eta) -0.123e3 / 0.16e2 * R__e ^ 2 * ((0.11e2 / 0.41e2 * (1 + eta) * ((ci2 ^ 4 - 0.12e2 / 0.11e2 * ci2 ^ 2 + 0.5e1 / 0.22e2) * (eta ^ 3) + (0.8e1 / 0.11e2 * ci2 ^ 4 - 0.9e1 / 0.11e2 * ci2 ^ 2 + 0.2e1 / 0.11e2) * (eta ^ 2) + (-0.43e2 / 0.11e2 * ci2 ^ 4 + 0.4e1 * ci2 ^ 2 - 0.47e2 / 0.66e2) * eta - 0.4e1 * ci2 ^ 4 + 0.45e2 / 0.11e2 * ci2 ^ 2 - 0.8e1 / 0.11e2) * sin((2 * h + 3 * f + 2 * g)) + 0.3e1 / 0.82e2 * ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((2 * h + 5 * f + 2 * g)) + 0.7e1 / 0.82e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * sin((-2 * g - 2 * h + 3 * f)) + 0.47e2 / 0.41e2 * (1 + eta) * ((ci2 ^ 4 - 0.60e2 / 0.47e2 * ci2 ^ 2 + 0.33e2 / 0.94e2) * (eta ^ 2) + (0.35e2 / 0.47e2 * ci2 ^ 4 - 0.45e2 / 0.47e2 * ci2 ^ 2 + 0.25e2 / 0.94e2) * eta - 0.72e2 / 0.47e2 * ci2 ^ 4 + 0.87e2 / 0.47e2 * ci2 ^ 2 - 0.22e2 / 0.47e2) * (eta - 1) * sin((-2 * h - 2 * g + f)) + ((0.62e2 / 0.41e2 * ci2 ^ 4 - 0.75e2 / 0.41e2 * ci2 ^ 2 + 0.19e2 / 0.41e2) * (eta ^ 4) + (-0.93e2 / 0.41e2 * ci2 ^ 2 + 0.77e2 / 0.41e2 * ci2 ^ 4 + 0.47e2 / 0.82e2) * (eta ^ 3) + (-0.203e3 / 0.41e2 * ci2 ^ 4 + 0.225e3 / 0.41e2 * ci2 ^ 2 - 0.97e2 / 0.82e2) * (eta ^ 2) + (0.9e1 * ci2 ^ 2 - 0.329e3 / 0.41e2 * ci2 ^ 4 - 0.163e3 / 0.82e2) * eta - 0.135e3 / 0.41e2 * ci2 ^ 4 + 0.150e3 / 0.41e2 * ci2 ^ 2 - 0.65e2 / 0.82e2) * sin((2 * h + f + 2 * g)) + 0.21e2 / 0.82e2 * (1 + eta) * ((ci2 ^ 4 - 0.25e2 / 0.21e2 * ci2 ^ 2 + 0.37e2 / 0.126e3) * (eta ^ 2) + (0.4e1 / 0.7e1 * ci2 ^ 4 - 0.16e2 / 0.21e2 * ci2 ^ 2 + 0.2e1 / 0.9e1) * eta - 0.27e2 / 0.7e1 * ci2 ^ 4 + 0.27e2 / 0.7e1 * ci2 ^ 2 - 0.9e1 / 0.14e2) * (eta - 1) * sin((3 * f)) + 0.3e1 / 0.82e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((5 * f)) + sin(f) * ((0.27e2 / 0.82e2 - 0.51e2 / 0.41e2 * ci2 ^ 2 + ci2 ^ 4) * (eta ^ 4) + (0.13e2 / 0.41e2 + 0.38e2 / 0.41e2 * ci2 ^ 4 - 0.48e2 / 0.41e2 * ci2 ^ 2) * (eta ^ 3) + (-0.80e2 / 0.41e2 - 0.280e3 / 0.41e2 * ci2 ^ 4 + 0.330e3 / 0.41e2 * ci2 ^ 2) * (eta ^ 2) + (-0.73e2 / 0.41e2 - 0.238e3 / 0.41e2 * ci2 ^ 4 + 0.288e3 / 0.41e2 * ci2 ^ 2) * eta + 0.63e2 / 0.41e2 * ci2 ^ 4 - 0.63e2 / 0.41e2 * ci2 ^ 2 + 0.21e2 / 0.82e2)) * sqrt((-eta ^ 2 + 1)) + 0.72e2 / 0.41e2 * (1 + eta) * ((ci2 ^ 4 - 0.13e2 / 0.12e2 * ci2 ^ 2 + 0.2e1 / 0.9e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * eta - 0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * sin((2 * h + 2 * g + 2 * f)) + 0.12e2 / 0.41e2 * ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((2 * h + 2 * g + 4 * f)) + 0.24e2 / 0.41e2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-2 * g - 2 * h + 2 * f)) + 0.24e2 / 0.41e2 * (eta - 1) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.13e2 / 0.12e2 + 0.31e2 / 0.6e1 * ci2 ^ 4 - 0.11e2 / 0.2e1 * ci2 ^ 2) * (eta ^ 3) + (0.97e2 / 0.36e2 + 0.23e2 / 0.2e1 * ci2 ^ 4 - 0.38e2 / 0.3e1 * ci2 ^ 2) * (eta ^ 2) + (0.113e3 / 0.36e2 - 0.83e2 / 0.6e1 * ci2 ^ 2 + 0.73e2 / 0.6e1 * ci2 ^ 4) * eta + 0.31e2 / 0.6e1 * ci2 ^ 4 - 0.6e1 * ci2 ^ 2 + 0.17e2 / 0.12e2) * sin((2 * g + 2 * h)) + 0.72e2 / 0.41e2 * (1 + eta) * (0.20e2 / 0.9e1 * (1 + eta) * eta * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 1) * cos((2 * g + 2 * h)) + ((-0.7e1 / 0.6e1 * ci2 ^ 2 + ci2 ^ 4 + 0.5e1 / 0.18e2) * (eta ^ 2) + (0.2e1 / 0.3e1 * ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.2e1 / 0.9e1) * eta - ci2 ^ 4 + ci2 ^ 2 - 0.1e1 / 0.6e1) * (eta - 1) * sin((2 * f)) + (1 + eta) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((4 * f)) / 0.6e1 + 0.10e2 / 0.9e1 * (eta ^ 2 - 2) * eta * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2))) * J / a ^ 2 / (eta ^ 7) / (1 + eta) -0.9e1 / 0.16e2 * ((-0.11e2 / 0.3e1 * (1 + eta) * ((ci2 ^ 4 - 0.12e2 / 0.11e2 * ci2 ^ 2 + 0.5e1 / 0.22e2) * (eta ^ 3) + (0.8e1 / 0.11e2 * ci2 ^ 4 - 0.9e1 / 0.11e2 * ci2 ^ 2 + 0.2e1 / 0.11e2) * (eta ^ 2) + (-0.43e2 / 0.11e2 * ci2 ^ 4 + 0.4e1 * ci2 ^ 2 - 0.47e2 / 0.66e2) * eta - 0.4e1 * ci2 ^ 4 + 0.45e2 / 0.11e2 * ci2 ^ 2 - 0.8e1 / 0.11e2) * cos((2 * h + 3 * f + 2 * g)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * (eta - 1) * cos((2 * h + 5 * f + 2 * g)) / 0.2e1 + 0.7e1 / 0.6e1 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * cos((-2 * g - 2 * h + 3 * f)) + 0.47e2 / 0.3e1 * (1 + eta) * ((ci2 ^ 4 - 0.60e2 / 0.47e2 * ci2 ^ 2 + 0.33e2 / 0.94e2) * (eta ^ 2) + (0.35e2 / 0.47e2 * ci2 ^ 4 - 0.45e2 / 0.47e2 * ci2 ^ 2 + 0.25e2 / 0.94e2) * eta - 0.72e2 / 0.47e2 * ci2 ^ 4 + 0.87e2 / 0.47e2 * ci2 ^ 2 - 0.22e2 / 0.47e2) * (eta - 1) * cos((-2 * h - 2 * g + f)) + ((-0.62e2 / 0.3e1 * ci2 ^ 4 + 0.25e2 * ci2 ^ 2 - 0.19e2 / 0.3e1) * (eta ^ 4) + (0.31e2 * ci2 ^ 2 - 0.77e2 / 0.3e1 * ci2 ^ 4 - 0.47e2 / 0.6e1) * (eta ^ 3) + (0.203e3 / 0.3e1 * ci2 ^ 4 - 0.75e2 * ci2 ^ 2 + 0.97e2 / 0.6e1) * (eta ^ 2) + (-0.123e3 * ci2 ^ 2 + 0.329e3 / 0.3e1 * ci2 ^ 4 + 0.163e3 / 0.6e1) * eta + 0.45e2 * ci2 ^ 4 + 0.65e2 / 0.6e1 - 0.50e2 * ci2 ^ 2) * cos((2 * h + f + 2 * g)) + 0.7e1 / 0.6e1 * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.16e2 / 0.7e1 * ci2 ^ 4 + 0.20e2 / 0.7e1 * ci2 ^ 2 - 0.16e2 / 0.21e2) * eta - 0.95e2 / 0.7e1 * ci2 ^ 4 + 0.99e2 / 0.7e1 * ci2 ^ 2 - 0.37e2 / 0.14e2) * (1 + eta) * (eta - 1) * cos((3 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((5 * f)) / 0.2e1 + cos(f) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.10e2 * ci2 ^ 2 - 0.8e1 * ci2 ^ 4 - 0.8e1 / 0.3e1) * (eta ^ 3) + (0.32e2 * ci2 ^ 2 - 0.30e2 * ci2 ^ 4 - 0.19e2 / 0.3e1) * (eta ^ 2) + (-0.50e2 * ci2 ^ 2 + 0.40e2 * ci2 ^ 4 + 0.40e2 / 0.3e1) * eta + 0.69e2 * ci2 ^ 4 - 0.79e2 * ci2 ^ 2 + 0.109e3 / 0.6e1)) * sqrt((-eta ^ 2 + 1)) - 0.24e2 * (1 + eta) * ((ci2 ^ 4 - 0.13e2 / 0.12e2 * ci2 ^ 2 + 0.2e1 / 0.9e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * eta - 0.4e1 / 0.3e1 * ci2 ^ 4 + 0.17e2 / 0.12e2 * ci2 ^ 2 - 0.5e1 / 0.18e2) * cos((2 * h + 2 * g + 2 * f)) + 0.8e1 * (-(ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * cos((2 * h + 2 * g + 4 * f)) / 0.2e1 + ((1 + eta) ^ 2) * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta - 1) * cos((-2 * g - 2 * h + 2 * f)) + ((-ci2 ^ 4 + ci2 ^ 2 - 0.1e1 / 0.6e1) * (eta ^ 4) + (-0.31e2 / 0.6e1 * ci2 ^ 4 + 0.11e2 / 0.2e1 * ci2 ^ 2 - 0.13e2 / 0.12e2) * (eta ^ 3) + (0.38e2 / 0.3e1 * ci2 ^ 2 - 0.23e2 / 0.2e1 * ci2 ^ 4 - 0.97e2 / 0.36e2) * (eta ^ 2) + (-0.73e2 / 0.6e1 * ci2 ^ 4 + 0.83e2 / 0.6e1 * ci2 ^ 2 - 0.113e3 / 0.36e2) * eta - 0.17e2 / 0.12e2 - 0.31e2 / 0.6e1 * ci2 ^ 4 + 0.6e1 * ci2 ^ 2) * cos((2 * g + 2 * h)) + (0.20e2 / 0.3e1 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (1 + eta) * eta * Delta * sin((2 * g + 2 * h)) + ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta ^ 2) + (-0.2e1 / 0.3e1 - 0.2e1 * ci2 ^ 4 + 0.5e1 / 0.2e1 * ci2 ^ 2) * eta - 0.7e1 / 0.6e1 - 0.5e1 * ci2 ^ 4 + 0.11e2 / 0.2e1 * ci2 ^ 2) * cos((2 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * cos((4 * f)) / 0.2e1 + (0.1e1 / 0.18e2 + ci2 ^ 4 / 0.3e1 - ci2 ^ 2 / 0.3e1) * (eta ^ 3) + (-0.13e2 / 0.36e2 - 0.5e1 / 0.6e1 * ci2 ^ 4 + 0.7e1 / 0.6e1 * ci2 ^ 2) * (eta ^ 2) + (-0.10e2 / 0.3e1 * ci2 ^ 4 + 0.25e2 / 0.6e1 * ci2 ^ 2 - 0.10e2 / 0.9e1) * eta - 0.17e2 / 0.12e2 - 0.31e2 / 0.6e1 * ci2 ^ 4 + 0.6e1 * ci2 ^ 2) * (1 + eta)) * (eta - 1)) * R__e ^ 2 * J / a ^ 2 / (eta ^ 7) / (1 + eta)];

Dsp11 = O2Msign*[D1; D2; D3; D4; D5; D6];

D1 = [-0.9e1 / 0.4e1 * J * (ci2 - 1) * R__e ^ 2 * (ci2 ^ 2) * (((4 * eta ^ 2) - 0.20e2 / 0.3e1) * cos((2 * g + 2 * f)) + (2 * eta ^ 2 - 2) * cos((2 * g + 4 * f)) + sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) * cos((3 * f + 2 * g)) + sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 1) * cos((5 * f + 2 * g)) / 0.3e1 + sqrt((-eta ^ 2 + 1)) * (eta ^ 2 - 5) * cos((f + 2 * g)) + (sqrt((-eta ^ 2 + 1)) * cos((-2 * g + f)) + 0.6e1 * cos((2 * g))) * (eta - 1) * (1 + eta) / 0.3e1) * (ci2 + 1) / a ^ 2 / (eta ^ 6) 0.3e1 / 0.16e2 * J * (ci2 - 1) * R__e ^ 2 * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 4 - 2 * eta ^ 2 + 1) * sin((3 * f - 2 * g)) + (26 * eta ^ 4 - 364 * eta ^ 2 + 546) * sin((3 * f + 2 * g)) + (19 * eta ^ 4 - 190 * eta ^ 2 + 171) * sin((5 * f + 2 * g)) + (5 * eta ^ 4 - 10 * eta ^ 2 + 5) * sin((2 * g + 7 * f)) + (14 * eta ^ 4 - 196 * eta ^ 2 + 294) * sin((f + 2 * g)) + (-eta ^ 4 + 10 * eta ^ 2 - 9) * sin((-2 * g + f))) * sqrt((-eta ^ 2 + 1)) + (44 * eta ^ 4 - 88 * eta ^ 2 + 44) * sin((6 * f + 2 * g)) + (4 * eta ^ 4 - 8 * eta ^ 2 + 4) * sin((-2 * g + 2 * f)) + (120 * eta ^ 4 - 560 * eta ^ 2 + 504) * sin((2 * g + 2 * f)) + 0.128e3 * (eta - 1) * (1 + eta) * (eta ^ 2 - 3) * (sin((2 * g + 4 * f)) + sin((2 * g)) / 0.4e1)) / a / (eta ^ 9) -0.9e1 * J * (ci2 ^ 3) * (((eta ^ 2 - 5) * (ci2 - 1) * (ci2 + 1) * cos((-h + 3 * f + 2 * g)) / 0.2e1 + (((eta ^ 2) / 0.6e1 - 0.1e1 / 0.6e1) * (ci2 ^ 2) + 0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * cos((-h + 5 * f + 2 * g)) + (eta ^ 2 - 5) * (ci2 - 1) * (ci2 + 1) * cos((-h + f + 2 * g)) / 0.2e1 + ((eta ^ 2) / 0.6e1 - 0.1e1 / 0.6e1) * (ci2 ^ 2) * cos((-h - 2 * g + f)) + (ci2 ^ 2) * (eta ^ 2 - 5) * cos((h + 3 * f + 2 * g)) / 0.2e1 + ((eta ^ 2) / 0.6e1 - 0.1e1 / 0.6e1) * (ci2 ^ 2) * cos((h + 5 * f + 2 * g)) + (((eta ^ 2) / 0.6e1 - 0.1e1 / 0.6e1) * (ci2 ^ 2) + 0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * cos((h - 2 * g + f)) + cos((h + f + 2 * g)) * (ci2 ^ 2) * (eta ^ 2 - 5) / 0.2e1) * sqrt((-eta ^ 2 + 1)) + 0.2e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 - 1) * (ci2 + 1) * cos((-h + 2 * g + 2 * f)) + (ci2 ^ 2 * (eta ^ 2 - 1) - eta ^ 2 + 1) * cos((-h + 2 * g + 4 * f)) + 0.2e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 2) * cos((h + 2 * g + 2 * f)) + (eta - 1) * (1 + eta) * ((ci2 ^ 2) * cos((h + 2 * g)) + (ci2 ^ 2) * cos((h + 2 * g + 4 * f)) + cos((-h + 2 * g)) * (ci2 ^ 2) - cos((-h + 2 * g)))) * R__e ^ 2 * sqrt((-ci2 ^ 2 + 1)) / a / (eta ^ 6) -0.9e1 * J * ((-(eta ^ 2 - 5) * (ci2 - 1) * (ci2 + 1) * sin((-h + 3 * f + 2 * g)) / 0.2e1 + ((0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * (ci2 ^ 2) - 0.1e1 / 0.6e1 + (eta ^ 2) / 0.6e1) * sin((-h + 5 * f + 2 * g)) - (eta ^ 2 - 5) * (ci2 - 1) * (ci2 + 1) * sin((-h + f + 2 * g)) / 0.2e1 + (0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * (ci2 ^ 2) * sin((-h - 2 * g + f)) + (ci2 ^ 2) * (eta ^ 2 - 5) * sin((h + 3 * f + 2 * g)) / 0.2e1 + (ci2 ^ 2) * ((eta ^ 2) / 0.6e1 - 0.1e1 / 0.6e1) * sin((h + 5 * f + 2 * g)) + (((eta ^ 2) / 0.6e1 - 0.1e1 / 0.6e1) * (ci2 ^ 2) + 0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * sin((h - 2 * g + f)) + sin((h + f + 2 * g)) * (ci2 ^ 2) * (eta ^ 2 - 5) / 0.2e1) * sqrt((-eta ^ 2 + 1)) - 0.2e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 - 1) * (ci2 + 1) * sin((-h + 2 * g + 2 * f)) + ((-eta ^ 2 + 1) * ci2 ^ 2 + eta ^ 2 - 1) * sin((-h + 2 * g + 4 * f)) + 0.2e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 2) * sin((h + 2 * g + 2 * f)) + (eta - 1) * (1 + eta) * ((ci2 ^ 2) * sin((h + 2 * g)) + (ci2 ^ 2) * sin((h + 2 * g + 4 * f)) - sin((-h + 2 * g)) * (ci2 ^ 2) + sin((-h + 2 * g)))) * (ci2 ^ 3) * R__e ^ 2 * sqrt((-ci2 ^ 2 + 1)) / a / (eta ^ 6) 0.39e2 / 0.4e1 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J * ((((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((-3 * g - h + 2 * f)) / 0.26e2 + (0.6e1 / 0.13e2 * (eta ^ 4) + 0.63e2 / 0.13e2 - 0.9e1 / 0.13e2 * (eta ^ 3) + 0.21e2 / 0.13e2 * eta - 0.49e2 / 0.13e2 * (eta ^ 2)) * cos((g - h + 2 * f)) + 0.11e2 / 0.13e2 * ((eta ^ 2) - 0.5e1 / 0.11e2 * eta - 0.48e2 / 0.11e2) * (1 + eta) * (eta - 1) * cos((g - h + 4 * f)) + (0.30e2 / 0.13e2 * (eta ^ 4) + 0.45e2 / 0.13e2 * (eta ^ 3) - 0.35e2 / 0.13e2 * (eta ^ 2) - 0.105e3 / 0.13e2 * eta - 0.63e2 / 0.13e2) * cos((3 * g + h + 2 * f)) + ((0.23e2 / 0.13e2 * (eta ^ 3) + 0.16e2 / 0.13e2 * (eta ^ 2) - 0.43e2 / 0.13e2 * eta - 0.48e2 / 0.13e2) * cos((3 * g + h + 4 * f)) + (eta - 1) * ((1 + eta) ^ 2) * cos((-g + h + 2 * f)) / 0.26e2 + 0.11e2 / 0.26e2 * (eta - 1) * ((1 + eta) ^ 2) * cos((3 * g + h + 6 * f)) + 0.11e2 / 0.26e2 * (1 + eta) * ((eta - 1) ^ 2) * cos((g - h + 6 * f)) + ((eta ^ 3) / 0.13e2 - 0.4e1 / 0.13e2 * (eta ^ 2) - 0.5e1 / 0.13e2 * eta + 0.12e2 / 0.13e2) * cos((g - h)) + cos((3 * g + h)) * ((eta ^ 2) + 0.17e2 / 0.13e2 * eta + 0.12e2 / 0.13e2) * (eta - 1)) * (1 + eta)) * sqrt((-eta ^ 2 + 1)) - 0.17e2 / 0.104e3 * (((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-3 * g - h + 3 * f)) / 0.17e2 + ((eta ^ 2) + 0.18e2 / 0.17e2 * eta + 0.9e1 / 0.17e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - h + f)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * cos((-g + h + 3 * f)) / 0.17e2 + 0.10e2 / 0.17e2 * ((eta ^ 4) - 0.8e1 / 0.5e1 * (eta ^ 3) - 0.126e3 / 0.5e1 * (eta ^ 2) + 0.56e2 / 0.5e1 * eta + 0.273e3 / 0.5e1) * (eta - 1) * cos((g - h + 3 * f)) + 0.13e2 / 0.17e2 * ((eta ^ 2) - 0.6e1 / 0.13e2 * eta - 0.171e3 / 0.13e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((g - h + 5 * f)) + (0.58e2 / 0.17e2 * (eta ^ 5) + 0.26e2 / 0.17e2 * (eta ^ 4) - (28 * eta ^ 3) - 0.364e3 / 0.17e2 * (eta ^ 2) + 0.434e3 / 0.17e2 * eta + 0.546e3 / 0.17e2) * cos((3 * g + h + 3 * f)) + 0.29e2 / 0.17e2 * ((eta ^ 3) + 0.19e2 / 0.29e2 * (eta ^ 2) - 0.165e3 / 0.29e2 * eta - 0.171e3 / 0.29e2) * (1 + eta) * (eta - 1) * cos((3 * g + h + 5 * f)) + 0.5e1 / 0.17e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * cos((3 * g + h + 7 * f)) + 0.5e1 / 0.17e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((g - h + 7 * f)) + (0.196e3 / 0.17e2 * (eta ^ 2) + 0.2e1 / 0.17e2 * (eta ^ 5) - 0.14e2 / 0.17e2 * (eta ^ 4) - 0.76e2 / 0.17e2 * (eta ^ 3) + 0.154e3 / 0.17e2 * eta - 0.294e3 / 0.17e2) * cos((g - h + f)) + ((50 * eta ^ 4 + 64 * eta ^ 3 - 252 * eta ^ 2 - 448 * eta - 294) * cos((3 * g + h + f)) + cos((-g + h + f)) * (eta ^ 4 - 10 * eta ^ 2 + 9)) * (eta - 1) / 0.17e2) * (1 + eta)) / a / (eta ^ 9) / (1 + eta) 0.39e2 / 0.4e1 * ((-((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((-3 * g - h + 2 * f)) / 0.26e2 + (-0.6e1 / 0.13e2 * (eta ^ 4) - 0.63e2 / 0.13e2 + 0.9e1 / 0.13e2 * (eta ^ 3) + 0.49e2 / 0.13e2 * (eta ^ 2) - 0.21e2 / 0.13e2 * eta) * sin((g - h + 2 * f)) - 0.11e2 / 0.13e2 * ((eta ^ 2) - 0.5e1 / 0.11e2 * eta - 0.48e2 / 0.11e2) * (1 + eta) * (eta - 1) * sin((g - h + 4 * f)) + (0.30e2 / 0.13e2 * (eta ^ 4) + 0.45e2 / 0.13e2 * (eta ^ 3) - 0.35e2 / 0.13e2 * (eta ^ 2) - 0.105e3 / 0.13e2 * eta - 0.63e2 / 0.13e2) * sin((3 * g + h + 2 * f)) + ((0.23e2 / 0.13e2 * (eta ^ 3) + 0.16e2 / 0.13e2 * (eta ^ 2) - 0.43e2 / 0.13e2 * eta - 0.48e2 / 0.13e2) * sin((3 * g + h + 4 * f)) + (eta - 1) * ((1 + eta) ^ 2) * sin((-g + h + 2 * f)) / 0.26e2 + 0.11e2 / 0.26e2 * (eta - 1) * ((1 + eta) ^ 2) * sin((3 * g + h + 6 * f)) - 0.11e2 / 0.26e2 * (1 + eta) * ((eta - 1) ^ 2) * sin((g - h + 6 * f)) + (-(eta ^ 3) / 0.13e2 + 0.4e1 / 0.13e2 * (eta ^ 2) + 0.5e1 / 0.13e2 * eta - 0.12e2 / 0.13e2) * sin((g - h)) + sin((3 * g + h)) * ((eta ^ 2) + 0.17e2 / 0.13e2 * eta + 0.12e2 / 0.13e2) * (eta - 1)) * (1 + eta)) * sqrt((-eta ^ 2 + 1)) + 0.17e2 / 0.104e3 * (((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-3 * g - h + 3 * f)) / 0.17e2 + ((eta ^ 2) + 0.18e2 / 0.17e2 * eta + 0.9e1 / 0.17e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - h + f)) - ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * sin((-g + h + 3 * f)) / 0.17e2 + 0.10e2 / 0.17e2 * ((eta ^ 4) - 0.8e1 / 0.5e1 * (eta ^ 3) - 0.126e3 / 0.5e1 * (eta ^ 2) + 0.56e2 / 0.5e1 * eta + 0.273e3 / 0.5e1) * (eta - 1) * sin((g - h + 3 * f)) + 0.13e2 / 0.17e2 * ((eta ^ 2) - 0.6e1 / 0.13e2 * eta - 0.171e3 / 0.13e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((g - h + 5 * f)) + (-0.58e2 / 0.17e2 * (eta ^ 5) - 0.26e2 / 0.17e2 * (eta ^ 4) + (28 * eta ^ 3) + 0.364e3 / 0.17e2 * (eta ^ 2) - 0.434e3 / 0.17e2 * eta - 0.546e3 / 0.17e2) * sin((3 * g + h + 3 * f)) - 0.29e2 / 0.17e2 * ((eta ^ 3) + 0.19e2 / 0.29e2 * (eta ^ 2) - 0.165e3 / 0.29e2 * eta - 0.171e3 / 0.29e2) * (1 + eta) * (eta - 1) * sin((3 * g + h + 5 * f)) - 0.5e1 / 0.17e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * sin((3 * g + h + 7 * f)) + 0.5e1 / 0.17e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((g - h + 7 * f)) + (0.196e3 / 0.17e2 * (eta ^ 2) + 0.2e1 / 0.17e2 * (eta ^ 5) - 0.14e2 / 0.17e2 * (eta ^ 4) - 0.76e2 / 0.17e2 * (eta ^ 3) + 0.154e3 / 0.17e2 * eta - 0.294e3 / 0.17e2) * sin((g - h + f)) - (eta - 1) * ((50 * eta ^ 4 + 64 * eta ^ 3 - 252 * eta ^ 2 - 448 * eta - 294) * sin((3 * g + h + f)) + sin((-g + h + f)) * (eta ^ 4 - 10 * eta ^ 2 + 9)) / 0.17e2) * (1 + eta)) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J / a / (eta ^ 9) / (1 + eta)];
D2 = [(ci2 + 1) * R__e ^ 2 * J * ((((eta ^ 2 + 20 * eta + 47) * ci2 ^ 2 - 4 * eta - 4) * sin((3 * f + 2 * g)) + (-3 * eta ^ 2 + 3) * (ci2 ^ 2) * sin((5 * f + 2 * g)) + ((15 * eta ^ 2 + 60 * eta + 33) * ci2 ^ 2 - 12 * eta - 12) * sin((f + 2 * g)) + (-3 * eta ^ 2 + 3) * (ci2 ^ 2) * sin((-2 * g + f))) * sqrt((-eta ^ 2 + 1)) + 0.60e2 * (1 + eta) * (((ci2 ^ 2) - 0.1e1 / 0.5e1) * sin((2 * g + 2 * f)) - 0.3e1 / 0.10e2 * (ci2 ^ 2) * (eta - 1) * (sin((2 * g + 4 * f)) - sin((2 * g))))) * (ci2 - 1) / a ^ 3 / (eta ^ 4) / (1 + eta) / 0.4e1 -0.3e1 / 0.32e2 * (((-2 * ci2 ^ 2 * eta ^ 4 + (-60 * ci2 ^ 2 + 12) * eta ^ 3 + (-200 * ci2 ^ 2 + 12) * eta ^ 2 + (300 * ci2 ^ 2 - 60) * eta + 554 * ci2 ^ 2 - 60) * cos((3 * f + 2 * g)) + 0.9e1 * (eta - 1) * ((ci2 ^ 2 * eta ^ 2) + (-0.20e2 / 0.9e1 * (ci2 ^ 2) + 0.4e1 / 0.9e1) * eta - 0.173e3 / 0.9e1 * (ci2 ^ 2) + 0.4e1 / 0.9e1) * (1 + eta) * cos((5 * f + 2 * g)) + (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((3 * f - 2 * g)) + 0.5e1 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((2 * g + 7 * f)) + (-10 * ci2 ^ 2 * eta ^ 4 + (-60 * ci2 ^ 2 + 12) * eta ^ 3 + (-40 * ci2 ^ 2 + 12) * eta ^ 2 + (300 * ci2 ^ 2 - 60) * eta + 274 * ci2 ^ 2 - 60) * cos((f + 2 * g)) - 0.3e1 * ((ci2 ^ 2 * eta) + 0.17e2 / 0.3e1 * (ci2 ^ 2) - 0.4e1 / 0.3e1) * (eta - 1) * ((1 + eta) ^ 2) * cos((-2 * g + f))) * sqrt((-eta ^ 2 + 1)) + 0.44e2 * (0.16e2 / 0.11e2 * ((ci2 ^ 2 * eta ^ 2) + (-0.15e2 / 0.8e1 * (ci2 ^ 2) + 0.3e1 / 0.8e1) * eta - 0.49e2 / 0.8e1 * (ci2 ^ 2) + 0.3e1 / 0.8e1) * (eta - 1) * cos((2 * g + 4 * f)) + ((-0.60e2 / 0.11e2 * (ci2 ^ 2) + 0.12e2 / 0.11e2) * (eta ^ 2) - 0.24e2 / 0.11e2 * (ci2 ^ 2) * eta + 0.124e3 / 0.11e2 * (ci2 ^ 2) - 0.20e2 / 0.11e2) * cos((2 * g + 2 * f)) + (eta - 1) * ((ci2 ^ 2 * eta ^ 2 - ci2 ^ 2) * cos((6 * f + 2 * g)) + ((ci2 ^ 2 * eta ^ 2) / 0.11e2 - (ci2 ^ 2) / 0.11e2) * cos((-2 * g + 2 * f)) - 0.4e1 / 0.11e2 * ((ci2 ^ 2 * eta ^ 2) + (0.15e2 / 0.2e1 * (ci2 ^ 2) - 0.3e1 / 0.2e1) * eta + 0.11e2 / 0.2e1 * (ci2 ^ 2) - 0.3e1 / 0.2e1) * cos((2 * g)))) * (1 + eta)) * (ci2 + 1) * R__e ^ 2 * J * (ci2 - 1) / a ^ 2 / (eta ^ 7) / (1 + eta) 0.9e1 / 0.2e1 * ci2 * R__e ^ 2 * J * ((((eta ^ 2 + 20 * eta + 47) * ci2 ^ 2 - 2 * eta - 2) * (ci2 - 1) * (ci2 + 1) * sin((-h + 3 * f + 2 * g)) / 0.18e2 - (ci2 ^ 2) * (eta - 1) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sin((-h + 5 * f + 2 * g)) / 0.6e1 + 0.5e1 / 0.6e1 * (((eta ^ 2) + (4 * eta) + 0.11e2 / 0.5e1) * (ci2 ^ 2) - 0.2e1 / 0.5e1 * eta - 0.2e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * sin((-h + f + 2 * g)) + ((0.47e2 / 0.18e2 + (eta ^ 2) / 0.18e2 + 0.10e2 / 0.9e1 * eta) * (ci2 ^ 4) + (-eta / 0.9e1 - 0.1e1 / 0.9e1) * (ci2 ^ 2) - eta / 0.9e1 - 0.1e1 / 0.9e1) * sin((h + 3 * f + 2 * g)) + (ci2 ^ 4) * (0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * sin((-h - 2 * g + f)) + (ci2 ^ 4) * (0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * sin((h + 5 * f + 2 * g)) + ((0.11e2 / 0.6e1 + 0.5e1 / 0.6e1 * (eta ^ 2) + 0.10e2 / 0.3e1 * eta) * (ci2 ^ 4) + (-eta / 0.3e1 - 0.1e1 / 0.3e1) * (ci2 ^ 2) - eta / 0.3e1 - 0.1e1 / 0.3e1) * sin((h + f + 2 * g)) - sin((h - 2 * g + f)) * (ci2 ^ 2) * (eta - 1) * (1 + eta) * (ci2 - 1) * (ci2 + 1) / 0.6e1) * sqrt((-eta ^ 2 + 1)) + ((0.10e2 / 0.3e1 * (ci2 ^ 4) - 0.11e2 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * sin((-h + 2 * g + 2 * f)) - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((-h + 2 * g + 4 * f)) + (0.10e2 / 0.3e1 * (ci2 ^ 4) - (ci2 ^ 2) / 0.3e1 - 0.1e1 / 0.3e1) * sin((h + 2 * g + 2 * f)) + (ci2 ^ 2) * (eta - 1) * ((ci2 ^ 2) * sin((h + 2 * g)) - (ci2 ^ 2) * sin((h + 2 * g + 4 * f)) + sin((-h + 2 * g)) * (ci2 ^ 2) - sin((-h + 2 * g)))) * (1 + eta)) * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) / (1 + eta) -0.9e1 / 0.2e1 * ci2 * ((-((eta ^ 2 + 20 * eta + 47) * ci2 ^ 2 - 2 * eta - 2) * (ci2 - 1) * (ci2 + 1) * cos((-h + 3 * f + 2 * g)) / 0.18e2 + (ci2 ^ 2) * (eta - 1) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * cos((-h + 5 * f + 2 * g)) / 0.6e1 - 0.5e1 / 0.6e1 * (((eta ^ 2) + (4 * eta) + 0.11e2 / 0.5e1) * (ci2 ^ 2) - 0.2e1 / 0.5e1 * eta - 0.2e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * cos((-h + f + 2 * g)) + ((0.47e2 / 0.18e2 + (eta ^ 2) / 0.18e2 + 0.10e2 / 0.9e1 * eta) * (ci2 ^ 4) + (-eta / 0.9e1 - 0.1e1 / 0.9e1) * (ci2 ^ 2) - eta / 0.9e1 - 0.1e1 / 0.9e1) * cos((h + 3 * f + 2 * g)) + (ci2 ^ 4) * ((eta ^ 2) / 0.6e1 - 0.1e1 / 0.6e1) * cos((-h - 2 * g + f)) + (ci2 ^ 4) * (0.1e1 / 0.6e1 - (eta ^ 2) / 0.6e1) * cos((h + 5 * f + 2 * g)) + ((0.11e2 / 0.6e1 + 0.5e1 / 0.6e1 * (eta ^ 2) + 0.10e2 / 0.3e1 * eta) * (ci2 ^ 4) + (-eta / 0.3e1 - 0.1e1 / 0.3e1) * (ci2 ^ 2) - eta / 0.3e1 - 0.1e1 / 0.3e1) * cos((h + f + 2 * g)) - cos((h - 2 * g + f)) * (ci2 ^ 2) * (eta - 1) * (1 + eta) * (ci2 - 1) * (ci2 + 1) / 0.6e1) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * ((-0.10e2 / 0.3e1 * (ci2 ^ 4) + 0.11e2 / 0.3e1 * (ci2 ^ 2) - 0.1e1 / 0.3e1) * cos((-h + 2 * g + 2 * f)) + (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((-h + 2 * g + 4 * f)) + (0.10e2 / 0.3e1 * (ci2 ^ 4) - (ci2 ^ 2) / 0.3e1 - 0.1e1 / 0.3e1) * cos((h + 2 * g + 2 * f)) + (ci2 ^ 2) * (eta - 1) * ((ci2 ^ 2) * cos((h + 2 * g)) - (ci2 ^ 2) * cos((h + 2 * g + 4 * f)) - cos((-h + 2 * g)) * (ci2 ^ 2) + cos((-h + 2 * g))))) * R__e ^ 2 * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) / (1 + eta) -0.9e1 / 0.2e1 * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * ((-(ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - h + 2 * f)) / 0.24e2 + ((0.5e1 / 0.12e2 * (eta ^ 3) + 0.5e1 / 0.3e1 * (eta ^ 2) - 0.31e2 / 0.12e2 * eta - 0.31e2 / 0.6e1) * (ci2 ^ 2) - (eta ^ 2) / 0.3e1 + eta / 0.6e1 + 0.5e1 / 0.6e1) * sin((g - h + 2 * f)) + ((0.31e2 / 0.6e1 + 0.5e1 / 0.12e2 * (eta ^ 3) + (5 * eta ^ 2) + 0.23e2 / 0.4e1 * eta) * (ci2 ^ 2) - (eta ^ 2) - 0.3e1 / 0.2e1 * eta - 0.5e1 / 0.6e1) * sin((3 * g + h + 2 * f)) + ((-(eta ^ 3) + 0.5e1 / 0.6e1 * (eta ^ 2) + 0.49e2 / 0.12e2 + 0.53e2 / 0.12e2 * eta) * (ci2 ^ 2) - ((1 + eta) ^ 2) / 0.4e1) * sin((3 * g + h + 4 * f)) - (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * sin((-g + h + 2 * f)) / 0.24e2 + 0.13e2 / 0.6e1 * ((eta + 0.49e2 / 0.26e2) * (ci2 ^ 2) - 0.3e1 / 0.26e2 * eta - 0.3e1 / 0.26e2) * (eta - 1) * sin((g - h + 4 * f)) - 0.11e2 / 0.24e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * sin((g - h + 6 * f)) - 0.11e2 / 0.24e2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * sin((3 * g + h + 6 * f)) + (eta - 1) * (((eta ^ 2) - eta / 0.3e1 - 0.11e2 / 0.12e2) * (ci2 ^ 2) + eta / 0.4e1 + 0.1e1 / 0.4e1) * sin((3 * g + h)) - 0.5e1 / 0.3e1 * (((eta ^ 2) + 0.37e2 / 0.20e2 * eta + 0.11e2 / 0.20e2) * (ci2 ^ 2) - 0.3e1 / 0.20e2 * ((1 + eta) ^ 2)) * sin((g - h))) * sqrt((-eta ^ 2 + 1)) + (ci2 ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-3 * g - h + 3 * f)) / 0.96e2 - 0.5e1 / 0.48e2 * (eta - 1) * (((eta ^ 3) + 0.25e2 / 0.3e1 * (eta ^ 2) + 0.359e3 / 0.15e2 * eta + 0.277e3 / 0.15e2) * (eta - 3) * (ci2 ^ 2) - 0.14e2 / 0.15e2 * (eta ^ 3) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.94e2 / 0.15e2 * eta + 0.6e1) * sin((g - h + 3 * f)) + ((0.277e3 / 0.48e2 - 0.23e2 / 0.144e3 * (eta ^ 5) - 0.77e2 / 0.48e2 * (eta ^ 4) - 0.115e3 / 0.36e2 * (eta ^ 3) + 0.23e2 / 0.18e2 * (eta ^ 2) + 0.931e3 / 0.144e3 * eta) * (ci2 ^ 2) + 0.23e2 / 0.72e2 * (eta ^ 4) + 0.4e1 / 0.9e1 * (eta ^ 3) - 0.17e2 / 0.36e2 * (eta ^ 2) - 0.11e2 / 0.9e1 * eta - 0.5e1 / 0.8e1) * sin((3 * g + h + 3 * f)) + 0.5e1 / 0.32e2 * (((eta ^ 3) - (eta ^ 2) - 0.179e3 / 0.15e2 * eta - 0.173e3 / 0.15e2) * (ci2 ^ 2) + 0.4e1 / 0.15e2 * ((1 + eta) ^ 2)) * (1 + eta) * (eta - 1) * sin((3 * g + h + 5 * f)) + 0.11e2 / 0.96e2 * (1 + eta) * ((eta - 1) ^ 2) * (((eta ^ 2) - 0.10e2 / 0.11e2 * eta - 0.17e2 / 0.11e2) * (ci2 ^ 2) + 0.4e1 / 0.11e2 * eta + 0.4e1 / 0.11e2) * sin((-3 * g - h + f)) - (1 + eta) * ((eta ^ 2 + 34 * eta + 173) * ci2 ^ 2 - 4 * eta - 4) * ((eta - 1) ^ 2) * sin((g - h + 5 * f)) / 0.96e2 + (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * sin((-g + h + 3 * f)) / 0.96e2 + 0.5e1 / 0.96e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((g - h + 7 * f)) + 0.5e1 / 0.96e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * sin((3 * g + h + 7 * f)) - 0.13e2 / 0.16e2 * (eta - 1) * (((eta ^ 4) + 0.224e3 / 0.39e2 * (eta ^ 3) + 0.304e3 / 0.39e2 * (eta ^ 2) + 0.272e3 / 0.39e2 * eta + 0.137e3 / 0.39e2) * (ci2 ^ 2) - 0.38e2 / 0.39e2 * (eta ^ 3) - 0.82e2 / 0.39e2 * (eta ^ 2) - 0.74e2 / 0.39e2 * eta - 0.10e2 / 0.13e2) * sin((3 * g + h + f)) - 0.5e1 / 0.96e2 * (1 + eta) * (((eta ^ 3) + 0.27e2 / 0.5e1 * (eta ^ 2) + 0.47e2 / 0.5e1 * eta + 0.17e2 / 0.5e1) * (ci2 ^ 2) - 0.4e1 / 0.5e1 * ((1 + eta) ^ 2)) * (eta - 1) * sin((-g + h + f)) + sin((g - h + f)) * ((eta ^ 5 - 15 * eta ^ 4 + 68 * eta ^ 3 + 72 * eta ^ 2 - 165 * eta - 137) * ci2 ^ 2 + 6 * eta ^ 4 - 20 * eta ^ 2 + 16 * eta + 30) / 0.48e2) * J / a ^ 2 / (eta ^ 7) / (1 + eta) 0.9e1 / 0.2e1 * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J * (((ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - h + 2 * f)) / 0.24e2 + ((0.31e2 / 0.12e2 * eta + 0.31e2 / 0.6e1 - 0.5e1 / 0.12e2 * (eta ^ 3) - 0.5e1 / 0.3e1 * (eta ^ 2)) * (ci2 ^ 2) - 0.5e1 / 0.6e1 + (eta ^ 2) / 0.3e1 - eta / 0.6e1) * cos((g - h + 2 * f)) + ((0.31e2 / 0.6e1 + 0.5e1 / 0.12e2 * (eta ^ 3) + (5 * eta ^ 2) + 0.23e2 / 0.4e1 * eta) * (ci2 ^ 2) - (eta ^ 2) - 0.3e1 / 0.2e1 * eta - 0.5e1 / 0.6e1) * cos((3 * g + h + 2 * f)) + ((-(eta ^ 3) + 0.5e1 / 0.6e1 * (eta ^ 2) + 0.49e2 / 0.12e2 + 0.53e2 / 0.12e2 * eta) * (ci2 ^ 2) - ((1 + eta) ^ 2) / 0.4e1) * cos((3 * g + h + 4 * f)) - (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * cos((-g + h + 2 * f)) / 0.24e2 - 0.13e2 / 0.6e1 * ((eta + 0.49e2 / 0.26e2) * (ci2 ^ 2) - 0.3e1 / 0.26e2 * eta - 0.3e1 / 0.26e2) * (eta - 1) * cos((g - h + 4 * f)) + 0.11e2 / 0.24e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * cos((g - h + 6 * f)) - 0.11e2 / 0.24e2 * (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * cos((3 * g + h + 6 * f)) + (((eta ^ 2) - eta / 0.3e1 - 0.11e2 / 0.12e2) * (ci2 ^ 2) + eta / 0.4e1 + 0.1e1 / 0.4e1) * (eta - 1) * cos((3 * g + h)) + 0.5e1 / 0.3e1 * (((eta ^ 2) + 0.37e2 / 0.20e2 * eta + 0.11e2 / 0.20e2) * (ci2 ^ 2) - 0.3e1 / 0.20e2 * ((1 + eta) ^ 2)) * cos((g - h))) * sqrt((-eta ^ 2 + 1)) - (ci2 ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-3 * g - h + 3 * f)) / 0.96e2 + 0.5e1 / 0.48e2 * (eta - 1) * (((eta ^ 3) + 0.25e2 / 0.3e1 * (eta ^ 2) + 0.359e3 / 0.15e2 * eta + 0.277e3 / 0.15e2) * (eta - 3) * (ci2 ^ 2) - 0.14e2 / 0.15e2 * (eta ^ 3) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.94e2 / 0.15e2 * eta + 0.6e1) * cos((g - h + 3 * f)) + ((0.277e3 / 0.48e2 - 0.23e2 / 0.144e3 * (eta ^ 5) - 0.77e2 / 0.48e2 * (eta ^ 4) - 0.115e3 / 0.36e2 * (eta ^ 3) + 0.23e2 / 0.18e2 * (eta ^ 2) + 0.931e3 / 0.144e3 * eta) * (ci2 ^ 2) + 0.23e2 / 0.72e2 * (eta ^ 4) + 0.4e1 / 0.9e1 * (eta ^ 3) - 0.17e2 / 0.36e2 * (eta ^ 2) - 0.11e2 / 0.9e1 * eta - 0.5e1 / 0.8e1) * cos((3 * g + h + 3 * f)) + 0.5e1 / 0.32e2 * (((eta ^ 3) - (eta ^ 2) - 0.179e3 / 0.15e2 * eta - 0.173e3 / 0.15e2) * (ci2 ^ 2) + 0.4e1 / 0.15e2 * ((1 + eta) ^ 2)) * (1 + eta) * (eta - 1) * cos((3 * g + h + 5 * f)) - 0.11e2 / 0.96e2 * (((eta ^ 2) - 0.10e2 / 0.11e2 * eta - 0.17e2 / 0.11e2) * (ci2 ^ 2) + 0.4e1 / 0.11e2 * eta + 0.4e1 / 0.11e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - h + f)) + (1 + eta) * ((eta ^ 2 + 34 * eta + 173) * ci2 ^ 2 - 4 * eta - 4) * ((eta - 1) ^ 2) * cos((g - h + 5 * f)) / 0.96e2 + (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * cos((-g + h + 3 * f)) / 0.96e2 - 0.5e1 / 0.96e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((g - h + 7 * f)) + 0.5e1 / 0.96e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * cos((3 * g + h + 7 * f)) - 0.13e2 / 0.16e2 * (((eta ^ 4) + 0.224e3 / 0.39e2 * (eta ^ 3) + 0.304e3 / 0.39e2 * (eta ^ 2) + 0.272e3 / 0.39e2 * eta + 0.137e3 / 0.39e2) * (ci2 ^ 2) - 0.38e2 / 0.39e2 * (eta ^ 3) - 0.82e2 / 0.39e2 * (eta ^ 2) - 0.74e2 / 0.39e2 * eta - 0.10e2 / 0.13e2) * (eta - 1) * cos((3 * g + h + f)) - 0.5e1 / 0.96e2 * (((eta ^ 3) + 0.27e2 / 0.5e1 * (eta ^ 2) + 0.47e2 / 0.5e1 * eta + 0.17e2 / 0.5e1) * (ci2 ^ 2) - 0.4e1 / 0.5e1 * ((1 + eta) ^ 2)) * (1 + eta) * (eta - 1) * cos((-g + h + f)) - cos((g - h + f)) * ((eta ^ 5 - 15 * eta ^ 4 + 68 * eta ^ 3 + 72 * eta ^ 2 - 165 * eta - 137) * ci2 ^ 2 + 6 * eta ^ 4 - 20 * eta ^ 2 + 16 * eta + 30) / 0.48e2) / a ^ 2 / (eta ^ 7) / (1 + eta)];
D3 = [-(ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 2 * J * sqrt(-ci2 ^ 2 + 0.1e1) * ((cos((h + 3 * f + 2 * g)) + 0.3e1 * cos((h + f + 2 * g))) * sqrt((-eta ^ 2 + 1)) + 0.3e1 * cos((h + 2 * g + 2 * f))) / a ^ 3 / (eta ^ 4) / ci2 0.3e1 / 0.8e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 2 * J * sqrt(-ci2 ^ 2 + 0.1e1) * (0.3e1 * (eta ^ 2 - 5) * (sin((h + f + 2 * g)) + sin((h + 3 * f + 2 * g))) * sqrt((-eta ^ 2 + 1)) + (12 * eta ^ 2 - 20) * sin((h + 2 * g + 2 * f)) + (6 * eta ^ 2 - 6) * sin((h + 2 * g + 4 * f)) + ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) * sin((-h - 2 * g + f)) - ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) * sin((h + 5 * f + 2 * g)) + 0.6e1 * sin((h + 2 * g)) * (eta ^ 2) - 0.6e1 * sin((h + 2 * g))) / a ^ 2 / (eta ^ 7) / ci2 R__e ^ 2 * (((ci2 ^ 4 - 0.1e1 / 0.2e1) * cos((2 * h + 3 * f + 2 * g)) + (0.3e1 * ci2 ^ 4 - 0.3e1 / 0.2e1) * cos((2 * h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (cos((3 * f + 2 * g)) + 0.3e1 * cos((f + 2 * g)))) * sqrt((-eta ^ 2 + 1)) + (0.3e1 * ci2 ^ 4 - 0.3e1 / 0.2e1) * cos((2 * h + 2 * g + 2 * f)) + (0.3e1 * ci2 ^ 4 - 0.3e1 * ci2 ^ 2) * cos((2 * g + 2 * f))) * J / a ^ 2 / (eta ^ 4) / 0.2e1 -R__e ^ 2 * (((-ci2 ^ 4 + 0.1e1 / 0.2e1) * sin((2 * h + 3 * f + 2 * g)) + (-0.3e1 * ci2 ^ 4 + 0.3e1 / 0.2e1) * sin((2 * h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (sin((3 * f + 2 * g)) + 0.3e1 * sin((f + 2 * g)))) * sqrt((-eta ^ 2 + 1)) + (-0.3e1 * ci2 ^ 4 + 0.3e1 / 0.2e1) * sin((2 * h + 2 * g + 2 * f)) + (0.3e1 * ci2 ^ 4 - 0.3e1 * ci2 ^ 2) * sin((2 * g + 2 * f))) * J / a ^ 2 / (eta ^ 4) / 0.2e1 0.3e1 / 0.16e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 2 * J * (((24 * eta ^ 2 + 36 * eta + 20) * cos((3 * g + 2 * h + 2 * f)) + 0.6e1 * ((1 + eta) ^ 2) * cos((3 * g + 2 * h + 4 * f)) + (-6 * eta ^ 2 + 6) * cos((3 * g + 2 * h)) + (8 * eta ^ 2 - 4 * eta - 20) * cos((g + 2 * f)) + (6 * eta ^ 2 - 6) * cos((g + 4 * f)) - 0.6e1 * cos(g) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * ((-0.23e2 / 0.3e1 * (eta ^ 3) - (3 * eta ^ 2) + 0.43e2 / 0.3e1 * eta + 0.15e2) * cos((3 * g + 2 * h + 3 * f)) - (eta - 1) * ((1 + eta) ^ 2) * cos((3 * g + 2 * h + 5 * f)) + (-19 * eta ^ 3 - 3 * eta ^ 2 + 7 * eta + 15) * cos((3 * g + 2 * h + f)) + (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - 2 * h + f)) + ((3 * eta ^ 2) - 0.7e1 / 0.3e1 * (eta ^ 3) + 0.43e2 / 0.3e1 * eta - 0.15e2) * cos((g + 3 * f)) + (eta - 1) * ((1 + eta) ^ 2) * cos((f - g)) - (1 + eta) * ((eta - 1) ^ 2) * cos((5 * f + g)) - 0.3e1 * cos((f + g)) * ((eta ^ 3) - (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.5e1))) * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta) 0.3e1 / 0.16e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 2 * J * (((24 * eta ^ 2 + 36 * eta + 20) * sin((3 * g + 2 * h + 2 * f)) + 0.6e1 * ((1 + eta) ^ 2) * sin((3 * g + 2 * h + 4 * f)) + (-6 * eta ^ 2 + 6) * sin((3 * g + 2 * h)) + (-8 * eta ^ 2 + 4 * eta + 20) * sin((g + 2 * f)) + (-6 * eta ^ 2 + 6) * sin((g + 4 * f)) + 0.6e1 * sin(g) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * ((-0.23e2 / 0.3e1 * (eta ^ 3) - (3 * eta ^ 2) + 0.43e2 / 0.3e1 * eta + 0.15e2) * sin((3 * g + 2 * h + 3 * f)) - (eta - 1) * ((1 + eta) ^ 2) * sin((3 * g + 2 * h + 5 * f)) + (-19 * eta ^ 3 - 3 * eta ^ 2 + 7 * eta + 15) * sin((3 * g + 2 * h + f)) - (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - 2 * h + f)) + (-(3 * eta ^ 2) + 0.7e1 / 0.3e1 * (eta ^ 3) - 0.43e2 / 0.3e1 * eta + 0.15e2) * sin((g + 3 * f)) + (eta - 1) * ((1 + eta) ^ 2) * sin((f - g)) + (1 + eta) * ((eta - 1) ^ 2) * sin((5 * f + g)) + 0.3e1 * sin((f + g)) * ((eta ^ 3) - (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.5e1))) * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta)];
D4 = [-(ci2 ^ 2 - 0.1e1 / 0.2e1) * ((sin((h + 3 * f + 2 * g)) + 0.3e1 * sin((h + f + 2 * g))) * sqrt((-eta ^ 2 + 1)) + 0.3e1 * sin((h + 2 * g + 2 * f))) * R__e ^ 2 * J * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 3 / (eta ^ 4) / ci2 0.3e1 / 0.8e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 2 * ((cos((-h - 2 * g + f)) + cos((h + 5 * f + 2 * g))) * ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) - 0.3e1 * (eta ^ 2 - 5) * (cos((h + f + 2 * g)) + cos((h + 3 * f + 2 * g))) * sqrt((-eta ^ 2 + 1)) - 0.12e2 * cos((h + 2 * g + 2 * f)) * (eta ^ 2) - 0.6e1 * cos((h + 2 * g + 4 * f)) * (eta ^ 2) - 0.6e1 * cos((h + 2 * g)) * (eta ^ 2) + 0.20e2 * cos((h + 2 * g + 2 * f)) + 0.6e1 * cos((h + 2 * g + 4 * f)) + 0.6e1 * cos((h + 2 * g))) * J * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 2 / (eta ^ 7) / ci2 (((ci2 ^ 4 - 0.1e1 / 0.2e1) * sin((2 * h + 3 * f + 2 * g)) + (0.3e1 * ci2 ^ 4 - 0.3e1 / 0.2e1) * sin((2 * h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (sin((3 * f + 2 * g)) + 0.3e1 * sin((f + 2 * g)))) * sqrt((-eta ^ 2 + 1)) + (0.3e1 * ci2 ^ 4 - 0.3e1 / 0.2e1) * sin((2 * h + 2 * g + 2 * f)) + (0.3e1 * ci2 ^ 4 - 0.3e1 * ci2 ^ 2) * sin((2 * g + 2 * f))) * R__e ^ 2 * J / a ^ 2 / (eta ^ 4) / 0.2e1 (((-ci2 ^ 4 + 0.1e1 / 0.2e1) * cos((2 * h + 3 * f + 2 * g)) + (-0.3e1 * ci2 ^ 4 + 0.3e1 / 0.2e1) * cos((2 * h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (cos((3 * f + 2 * g)) + 0.3e1 * cos((f + 2 * g)))) * sqrt((-eta ^ 2 + 1)) + (-0.3e1 * ci2 ^ 4 + 0.3e1 / 0.2e1) * cos((2 * h + 2 * g + 2 * f)) + (0.3e1 * ci2 ^ 4 - 0.3e1 * ci2 ^ 2) * cos((2 * g + 2 * f))) * R__e ^ 2 * J / a ^ 2 / (eta ^ 4) / 0.2e1 -0.3e1 / 0.16e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 2 * J * (((-24 * eta ^ 2 - 36 * eta - 20) * sin((3 * g + 2 * h + 2 * f)) - 0.6e1 * ((1 + eta) ^ 2) * sin((3 * g + 2 * h + 4 * f)) + (6 * eta ^ 2 - 6) * sin((3 * g + 2 * h)) + (-8 * eta ^ 2 + 4 * eta + 20) * sin((g + 2 * f)) + (-6 * eta ^ 2 + 6) * sin((g + 4 * f)) + 0.6e1 * sin(g) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * ((-0.43e2 / 0.3e1 * eta + 0.23e2 / 0.3e1 * (eta ^ 3) - 0.15e2 + (3 * eta ^ 2)) * sin((3 * g + 2 * h + 3 * f)) + (eta - 1) * ((1 + eta) ^ 2) * sin((3 * g + 2 * h + 5 * f)) + (19 * eta ^ 3 + 3 * eta ^ 2 - 7 * eta - 15) * sin((3 * g + 2 * h + f)) + (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - 2 * h + f)) + (-(3 * eta ^ 2) + 0.7e1 / 0.3e1 * (eta ^ 3) - 0.43e2 / 0.3e1 * eta + 0.15e2) * sin((g + 3 * f)) + (eta - 1) * ((1 + eta) ^ 2) * sin((f - g)) + (1 + eta) * ((eta - 1) ^ 2) * sin((5 * f + g)) + 0.3e1 * sin((f + g)) * ((eta ^ 3) - (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.5e1))) * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta) 0.3e1 / 0.16e2 * (((-24 * eta ^ 2 - 36 * eta - 20) * cos((3 * g + 2 * h + 2 * f)) - 0.6e1 * ((1 + eta) ^ 2) * cos((3 * g + 2 * h + 4 * f)) + (6 * eta ^ 2 - 6) * cos((3 * g + 2 * h)) + (8 * eta ^ 2 - 4 * eta - 20) * cos((g + 2 * f)) + (6 * eta ^ 2 - 6) * cos((g + 4 * f)) - 0.6e1 * cos(g) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * ((-0.43e2 / 0.3e1 * eta + 0.23e2 / 0.3e1 * (eta ^ 3) - 0.15e2 + (3 * eta ^ 2)) * cos((3 * g + 2 * h + 3 * f)) + (eta - 1) * ((1 + eta) ^ 2) * cos((3 * g + 2 * h + 5 * f)) + (19 * eta ^ 3 + 3 * eta ^ 2 - 7 * eta - 15) * cos((3 * g + 2 * h + f)) - (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - 2 * h + f)) + ((3 * eta ^ 2) - 0.7e1 / 0.3e1 * (eta ^ 3) + 0.43e2 / 0.3e1 * eta - 0.15e2) * cos((g + 3 * f)) + (eta - 1) * ((1 + eta) ^ 2) * cos((f - g)) - (1 + eta) * ((eta - 1) ^ 2) * cos((5 * f + g)) - 0.3e1 * cos((f + g)) * ((eta ^ 3) - (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.5e1))) * R__e ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * J * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 2 / ci2 / (eta ^ 7) / (1 + eta)];
D5 = [-0.3e1 / 0.4e1 * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * (((-20 * ci2 ^ 2 + 2) * cos((3 * g + h + 2 * f)) - 0.6e1 * cos((3 * g + h + 4 * f)) * (ci2 ^ 2) - 0.6e1 * cos((g - h)) * (ci2 ^ 2) - 0.2e1 * cos((g - h + 2 * f))) * sqrt((-eta ^ 2 + 1)) - (eta - 1) * (1 + eta) * (ci2 ^ 2 - 2) * cos((g - h + 3 * f)) / 0.3e1 + (((6 * eta ^ 2) - 0.46e2 / 0.3e1) * (ci2 ^ 2) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.2e1 / 0.3e1) * cos((3 * g + h + 3 * f)) + (ci2 ^ 2) * (eta ^ 2 - 1) * cos((3 * g + h + 5 * f)) + ((13 * eta ^ 2 - 13) * ci2 ^ 2 - 2 * eta ^ 2 + 2) * cos((3 * g + h + f)) + ((-2 * eta ^ 2 - 2) * ci2 ^ 2 + 2 * eta ^ 2 - 2) * cos((g - h + f)) + cos((-g + h + f)) * (ci2 ^ 2) * (eta - 1) * (1 + eta)) * J / a ^ 3 / (eta ^ 4) -0.69e2 / 0.8e1 * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * ((((-0.1e1 / 0.23e2 - 0.3e1 / 0.23e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.6e1 / 0.23e2 * (eta ^ 2) - 0.10e2 / 0.23e2) * sin((g - h + 2 * f)) - (eta - 1) * (1 + eta) * (ci2 ^ 2 - 3) * sin((g - h + 4 * f)) / 0.23e2 + ((-0.125e3 / 0.23e2 + 0.57e2 / 0.23e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.6e1 / 0.23e2 * (eta ^ 2) + 0.10e2 / 0.23e2) * sin((3 * g + h + 2 * f)) + ((-0.97e2 / 0.23e2 + 0.45e2 / 0.23e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.3e1 / 0.23e2 * (eta ^ 2) + 0.3e1 / 0.23e2) * sin((3 * g + h + 4 * f)) + (ci2 ^ 2) * (-0.1e1 / 0.23e2 + (eta ^ 2) / 0.23e2) * sin((-g + h + 2 * f)) + (ci2 ^ 2) * (0.11e2 / 0.23e2 * (eta ^ 2) - 0.11e2 / 0.23e2) * sin((3 * g + h + 6 * f)) + ((-0.1e1 / 0.23e2 - 0.3e1 / 0.23e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.3e1 / 0.23e2 * (eta ^ 2) - 0.3e1 / 0.23e2) * sin((g - h)) + sin((3 * g + h)) * (1 + eta) * ((ci2 ^ 2) - 0.3e1 / 0.23e2) * (eta - 1)) * sqrt((-eta ^ 2 + 1)) + 0.13e2 / 0.92e2 * ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.2e1 / 0.13e2) * ((eta - 1) ^ 2) * sin((-3 * g - h + f)) + (1 + eta) * (eta - 1) * ((ci2 ^ 2 * (eta ^ 2 - 1)) - 0.3e1 / 0.2e1 * (eta ^ 2) + 0.15e2 / 0.2e1) * sin((g - h + 3 * f)) / 0.23e2 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 2) * sin((g - h + 5 * f)) / 0.92e2 + ((0.123e3 / 0.23e2 * (eta ^ 2) - 0.27e2 / 0.46e2 * (eta ^ 4) - 0.275e3 / 0.46e2) * (ci2 ^ 2) + 0.3e1 / 0.46e2 * (eta ^ 4) - 0.9e1 / 0.23e2 * (eta ^ 2) + 0.15e2 / 0.46e2) * sin((3 * g + h + 3 * f)) - 0.7e1 / 0.23e2 * (1 + eta) * (eta - 1) * (((eta ^ 2) - 0.43e2 / 0.7e1) * (ci2 ^ 2) - (eta ^ 2) / 0.14e2 + 0.1e1 / 0.14e2) * sin((3 * g + h + 5 * f)) - (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((-g + h + 3 * f)) / 0.92e2 - 0.5e1 / 0.92e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((3 * g + h + 7 * f)) - ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sin((-g + h + f)) / 0.23e2 + ((-0.5e1 / 0.46e2 + 0.3e1 / 0.46e2 * (eta ^ 4) - 0.3e1 / 0.23e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.3e1 / 0.46e2 * (eta ^ 4) + 0.9e1 / 0.23e2 * (eta ^ 2) - 0.15e2 / 0.46e2) * sin((g - h + f)) - 0.11e2 / 0.23e2 * (1 + eta) * (eta - 1) * (((eta ^ 2) - 0.71e2 / 0.11e2) * (ci2 ^ 2) - 0.3e1 / 0.22e2 * (eta ^ 2) + 0.15e2 / 0.22e2) * sin((3 * g + h + f))) * J / a ^ 2 / (eta ^ 7) -0.3e1 / 0.4e1 * ci2 * R__e ^ 2 * J * (((-20 * ci2 ^ 4 + ci2 ^ 2 + 1) * cos((3 * g + 2 * h + 2 * f)) - 0.6e1 * (ci2 ^ 4) * cos((3 * g + 2 * h + 4 * f)) + (-ci2 ^ 2 + 1) * cos((g - 2 * h + 2 * f)) + (-20 * ci2 ^ 4 + 21 * ci2 ^ 2 - 1) * cos((2 * f + 3 * g)) + (-6 * ci2 ^ 4 + 6 * ci2 ^ 2) * cos((4 * f + 3 * g)) + (-ci2 ^ 2 - 1) * cos((g + 2 * f)) + (-6 * ci2 ^ 4 + 6 * ci2 ^ 2) * cos((g - 2 * h)) - 0.6e1 * cos(g) * (ci2 ^ 4)) * sqrt((-eta ^ 2 + 1)) + (((6 * eta ^ 2) - 0.46e2 / 0.3e1) * (ci2 ^ 4) + (0.1e1 / 0.3e1 - (eta ^ 2) / 0.3e1) * (ci2 ^ 2) + 0.1e1 / 0.3e1 - (eta ^ 2) / 0.3e1) * cos((3 * g + 2 * h + 3 * f)) + (ci2 ^ 4) * (eta ^ 2 - 1) * cos((3 * g + 2 * h + 5 * f)) - (eta - 1) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((g - 2 * h + 3 * f)) / 0.3e1 + 0.13e2 * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * (eta - 1) * cos((3 * g + 2 * h + f)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * cos((-g + 2 * h + f)) + 0.6e1 * ((-0.23e2 / 0.9e1 + (eta ^ 2)) * (ci2 ^ 2) - (eta ^ 2) / 0.18e2 + 0.1e1 / 0.18e2) * (ci2 - 1) * (ci2 + 1) * cos((3 * g + 3 * f)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * cos((3 * g + 5 * f)) + ((-2 * eta ^ 2 - 2) * ci2 ^ 4 + (3 * eta ^ 2 + 1) * ci2 ^ 2 - eta ^ 2 + 1) * cos((g - 2 * h + f)) - (eta - 1) * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 - 1) * cos((g + 3 * f)) / 0.3e1 + ((13 * eta ^ 2 - 13) * ci2 ^ 4 + (-14 * eta ^ 2 + 14) * ci2 ^ 2 + eta ^ 2 - 1) * cos((3 * g + f)) + (ci2 ^ 4) * (eta ^ 2 - 1) * cos((f - g)) - 0.2e1 * cos((f + g)) * (((eta ^ 2 + 1) * ci2 ^ 4) + (-(eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1) * (ci2 ^ 2) - (eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1)) * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) 0.3e1 / 0.4e1 * (((20 * ci2 ^ 4 - ci2 ^ 2 - 1) * sin((3 * g + 2 * h + 2 * f)) + 0.6e1 * sin((3 * g + 2 * h + 4 * f)) * (ci2 ^ 4) + (-ci2 ^ 2 + 1) * sin((g - 2 * h + 2 * f)) + (-20 * ci2 ^ 4 + 21 * ci2 ^ 2 - 1) * sin((2 * f + 3 * g)) + (-6 * ci2 ^ 4 + 6 * ci2 ^ 2) * sin((4 * f + 3 * g)) + (ci2 ^ 2 + 1) * sin((g + 2 * f)) + (-6 * ci2 ^ 4 + 6 * ci2 ^ 2) * sin((g - 2 * h)) + 0.6e1 * sin(g) * (ci2 ^ 4)) * sqrt((-eta ^ 2 + 1)) + ((0.46e2 / 0.3e1 - (6 * eta ^ 2)) * (ci2 ^ 4) + ((eta ^ 2) / 0.3e1 - 0.1e1 / 0.3e1) * (ci2 ^ 2) + (eta ^ 2) / 0.3e1 - 0.1e1 / 0.3e1) * sin((3 * g + 2 * h + 3 * f)) + (-eta ^ 2 + 1) * (ci2 ^ 4) * sin((3 * g + 2 * h + 5 * f)) - (eta - 1) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((g - 2 * h + 3 * f)) / 0.3e1 - 0.13e2 * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * (eta - 1) * sin((3 * g + 2 * h + f)) + ((-eta ^ 2 + 1) * ci2 ^ 4 + ci2 ^ 2 * (eta ^ 2 - 1)) * sin((-g + 2 * h + f)) + 0.6e1 * ((-0.23e2 / 0.9e1 + (eta ^ 2)) * (ci2 ^ 2) - (eta ^ 2) / 0.18e2 + 0.1e1 / 0.18e2) * (ci2 - 1) * (ci2 + 1) * sin((3 * g + 3 * f)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * sin((3 * g + 5 * f)) + ((-2 * eta ^ 2 - 2) * ci2 ^ 4 + (3 * eta ^ 2 + 1) * ci2 ^ 2 - eta ^ 2 + 1) * sin((g - 2 * h + f)) + (eta - 1) * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 - 1) * sin((g + 3 * f)) / 0.3e1 + ((13 * eta ^ 2 - 13) * ci2 ^ 4 + (-14 * eta ^ 2 + 14) * ci2 ^ 2 + eta ^ 2 - 1) * sin((3 * g + f)) + (ci2 ^ 4) * (eta ^ 2 - 1) * sin((f - g)) + 0.2e1 * sin((f + g)) * (((eta ^ 2 + 1) * ci2 ^ 4) + (-(eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1) * (ci2 ^ 2) - (eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1)) * ci2 * R__e ^ 2 * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) 0.39e2 / 0.16e2 * ((((-0.23e2 / 0.78e2 + 0.32e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 4) + (-0.16e2 / 0.39e2 + 0.7e1 / 0.2e1 * (ci2 ^ 2)) * (eta ^ 3) + (0.17e2 / 0.39e2 - 0.563e3 / 0.78e2 * (ci2 ^ 2)) * (eta ^ 2) + (0.44e2 / 0.39e2 - 0.1301e4 / 0.78e2 * (ci2 ^ 2)) * eta - 0.275e3 / 0.26e2 * (ci2 ^ 2) + 0.15e2 / 0.26e2) * cos((2 * h + 3 * f + 4 * g)) + 0.19e2 / 0.26e2 * (1 + eta) * (((ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 3) + (0.14e2 / 0.19e2 * (ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 2) + (-0.79e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * eta - 0.86e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * cos((2 * h + 5 * f + 4 * g)) + 0.5e1 / 0.52e2 * (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * cos((4 * g + 2 * h + 7 * f)) + 0.121e3 / 0.26e2 * (1 + eta) * (eta - 1) * (((ci2 ^ 2) - 0.19e2 / 0.121e3) * (eta ^ 2) + (0.13e2 / 0.11e2 * (ci2 ^ 2) - 0.2e1 / 0.11e2) * eta + 0.142e3 / 0.121e3 * (ci2 ^ 2) - 0.15e2 / 0.121e3) * cos((4 * g + 2 * h + f)) - ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.2e1 / 0.13e2) * ((eta - 1) ^ 2) * cos((-4 * g - 2 * h + f)) / 0.4e1 + ((0.8e1 / 0.39e2 - 0.11e2 / 0.26e2 * (ci2 ^ 2)) * (eta ^ 4) + (0.17e2 / 0.39e2 - 0.20e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 3) + (0.3e1 / 0.13e2 - (5 * ci2 ^ 2)) * (eta ^ 2) + (-0.15e2 / 0.13e2 + 0.60e2 / 0.13e2 * (ci2 ^ 2)) * eta + 0.277e3 / 0.26e2 * (ci2 ^ 2) - 0.15e2 / 0.13e2) * cos((3 * f + 2 * g)) - 0.5e1 / 0.78e2 * (1 + eta) * (eta - 1) * (((ci2 ^ 2) - 0.7e1 / 0.5e1) * (eta ^ 2) + (-(ci2 ^ 2) / 0.5e1 + 0.2e1 / 0.5e1) * eta - 0.6e1 / 0.5e1 * (ci2 ^ 2) + 0.9e1) * cos((-2 * h + 3 * f)) + (1 + eta) * (eta - 1) * ((ci2 ^ 2 * eta ^ 2) + (-0.16e2 / 0.13e2 * (ci2 ^ 2) + 0.4e1 / 0.13e2) * eta - 0.173e3 / 0.13e2 * (ci2 ^ 2) + 0.4e1 / 0.13e2) * cos((5 * f + 2 * g)) / 0.4e1 - ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 2) * cos((-2 * h + 5 * f)) / 0.52e2 + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * cos((2 * h + 3 * f)) / 0.52e2 + (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((3 * f - 2 * g)) / 0.52e2 + 0.5e1 / 0.52e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((2 * g + 7 * f)) + ((0.8e1 / 0.13e2 - 0.47e2 / 0.26e2 * (ci2 ^ 2)) * (eta ^ 4) + (0.11e2 / 0.13e2 - 0.36e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 3) + (0.3e1 / 0.13e2 - 0.25e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.15e2 / 0.13e2 + 0.60e2 / 0.13e2 * (ci2 ^ 2)) * eta - 0.15e2 / 0.13e2 + 0.137e3 / 0.26e2 * (ci2 ^ 2)) * cos((f + 2 * g)) + (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2 * eta - 17 * ci2 ^ 2 + 4) * cos((-2 * g + f)) / 0.52e2 + ((-0.2e1 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.26e2) * (eta ^ 4) - (ci2 ^ 2 * eta ^ 3) / 0.26e2 + (-0.5e1 / 0.26e2 * (ci2 ^ 2) - 0.5e1 / 0.13e2) * (eta ^ 2) + (-0.11e2 / 0.26e2 * (ci2 ^ 2) + 0.4e1 / 0.13e2) * eta + 0.15e2 / 0.26e2 + 0.5e1 / 0.26e2 * (ci2 ^ 2)) * cos((-2 * h + f)) + 0.3e1 / 0.26e2 * (1 + eta) * (((ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * (ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 2) + (-0.7e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * eta - 0.2e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * cos((2 * h + f))) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (0.109e3 / 0.13e2 * (((ci2 ^ 2) - 0.12e2 / 0.109e3) * (eta ^ 2) + (0.166e3 / 0.109e3 * (ci2 ^ 2) - 0.18e2 / 0.109e3) * eta + 0.125e3 / 0.109e3 * (ci2 ^ 2) - 0.10e2 / 0.109e3) * (eta - 1) * cos((2 * h + 2 * f + 4 * g)) + ((0.59e2 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (-0.3e1 / 0.13e2 + 0.45e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.75e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + 0.3e1 / 0.13e2 - 0.97e2 / 0.13e2 * (ci2 ^ 2)) * cos((2 * h + 4 * f + 4 * g)) + 0.11e2 / 0.13e2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * cos((2 * h + 6 * f + 4 * g)) + ((-0.12e2 / 0.13e2 * (ci2 ^ 2) + 0.8e1 / 0.13e2) * (eta ^ 3) + (-0.60e2 / 0.13e2 * (ci2 ^ 2) + 0.12e2 / 0.13e2) * (eta ^ 2) - 0.44e2 / 0.13e2 * (ci2 ^ 2) * eta - 0.20e2 / 0.13e2 + 0.124e3 / 0.13e2 * (ci2 ^ 2)) * cos((2 * g + 2 * f)) + 0.22e2 / 0.13e2 * (eta - 1) * ((ci2 ^ 2 * eta ^ 2) + (-0.12e2 / 0.11e2 * (ci2 ^ 2) + 0.3e1 / 0.11e2) * eta - 0.49e2 / 0.11e2 * (ci2 ^ 2) + 0.3e1 / 0.11e2) * cos((2 * g + 4 * f)) - ((ci2 ^ 2 - 4) * eta ^ 2 + (-2 * ci2 ^ 2 + 2) * eta + ci2 ^ 2 + 10) * (eta - 1) * cos((-2 * h + 2 * f)) / 0.13e2 - 0.23e2 / 0.13e2 * ((ci2 ^ 2) - 0.3e1 / 0.23e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((4 * g + 2 * h)) - (1 + eta) * ((eta - 1) ^ 2) * (ci2 ^ 2 - 3) * cos((-2 * h + 4 * f)) / 0.13e2 + (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * cos((2 * h + 2 * f)) / 0.13e2 + 0.11e2 / 0.13e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * cos((6 * f + 2 * g)) + (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-2 * g + 2 * f)) / 0.13e2 + 0.2e1 / 0.13e2 * (ci2 ^ 2 * eta ^ 2 + (-12 * ci2 ^ 2 + 3) * eta - 11 * ci2 ^ 2 + 3) * (eta - 1) * cos((2 * g)) + cos((2 * h)) * (((ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (0.3e1 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 2) + (-0.21e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + (ci2 ^ 2) / 0.13e2 + 0.3e1 / 0.13e2))) * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J / a ^ 2 / (eta ^ 7) / (1 + eta) 0.39e2 / 0.16e2 * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J * ((((-0.23e2 / 0.78e2 + 0.32e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 4) + (-0.16e2 / 0.39e2 + 0.7e1 / 0.2e1 * (ci2 ^ 2)) * (eta ^ 3) + (0.17e2 / 0.39e2 - 0.563e3 / 0.78e2 * (ci2 ^ 2)) * (eta ^ 2) + (0.44e2 / 0.39e2 - 0.1301e4 / 0.78e2 * (ci2 ^ 2)) * eta - 0.275e3 / 0.26e2 * (ci2 ^ 2) + 0.15e2 / 0.26e2) * sin((2 * h + 3 * f + 4 * g)) + 0.19e2 / 0.26e2 * (((ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 3) + (0.14e2 / 0.19e2 * (ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 2) + (-0.79e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * eta - 0.86e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * (1 + eta) * sin((2 * h + 5 * f + 4 * g)) + 0.5e1 / 0.52e2 * (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * sin((4 * g + 2 * h + 7 * f)) + 0.121e3 / 0.26e2 * (((ci2 ^ 2) - 0.19e2 / 0.121e3) * (eta ^ 2) + (0.13e2 / 0.11e2 * (ci2 ^ 2) - 0.2e1 / 0.11e2) * eta + 0.142e3 / 0.121e3 * (ci2 ^ 2) - 0.15e2 / 0.121e3) * (1 + eta) * (eta - 1) * sin((4 * g + 2 * h + f)) + ((ci2 ^ 2) - 0.2e1 / 0.13e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-4 * g - 2 * h + f)) / 0.4e1 + 0.5e1 / 0.78e2 * (1 + eta) * (((ci2 ^ 2) - 0.7e1 / 0.5e1) * (eta ^ 2) + (-(ci2 ^ 2) / 0.5e1 + 0.2e1 / 0.5e1) * eta - 0.6e1 / 0.5e1 * (ci2 ^ 2) + 0.9e1) * (eta - 1) * sin((-2 * h + 3 * f)) + ((0.7e1 / 0.39e2 + 0.5e1 / 0.26e2 * (ci2 ^ 2)) * (eta ^ 4) + (0.7e1 / 0.39e2 + 0.15e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 3) + (-0.43e2 / 0.39e2 + 0.194e3 / 0.39e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.43e2 / 0.39e2 - 0.13e2 / 0.3e1 * (ci2 ^ 2)) * eta - 0.21e2 / 0.2e1 * (ci2 ^ 2)) * sin((3 * f + 2 * g)) - 0.15e2 / 0.52e2 * (((ci2 ^ 2) - 0.4e1 / 0.15e2) * (eta ^ 2) + (-0.4e1 / 0.5e1 * (ci2 ^ 2) - 0.4e1 / 0.15e2) * eta - 0.57e2 / 0.5e1 * (ci2 ^ 2)) * (1 + eta) * (eta - 1) * sin((5 * f + 2 * g)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 2) * sin((-2 * h + 5 * f)) / 0.52e2 + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * sin((2 * h + 3 * f)) / 0.52e2 - (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((3 * f - 2 * g)) / 0.52e2 - 0.5e1 / 0.52e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((2 * g + 7 * f)) + ((0.23e2 / 0.26e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * (eta ^ 4) + (0.21e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * (eta ^ 3) + (-0.2e1 / 0.13e2 * (ci2 ^ 2) - 0.7e1 / 0.13e2) * (eta ^ 2) + (-0.81e2 / 0.13e2 * (ci2 ^ 2) - 0.7e1 / 0.13e2) * eta - 0.147e3 / 0.26e2 * (ci2 ^ 2)) * sin((f + 2 * g)) - 0.27e2 / 0.52e2 * ((1 + eta) ^ 2) * (((ci2 ^ 2) - 0.4e1 / 0.27e2) * eta + (ci2 ^ 2) / 0.3e1) * (eta - 1) * sin((-2 * g + f)) + ((-0.3e1 / 0.26e2 + 0.2e1 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 4) + (ci2 ^ 2 * eta ^ 3) / 0.26e2 + (0.5e1 / 0.13e2 + 0.5e1 / 0.26e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.4e1 / 0.13e2 + 0.11e2 / 0.26e2 * (ci2 ^ 2)) * eta - 0.15e2 / 0.26e2 - 0.5e1 / 0.26e2 * (ci2 ^ 2)) * sin((-2 * h + f)) + 0.3e1 / 0.26e2 * (((ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * (ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 2) + (-0.7e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * eta - 0.2e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (1 + eta) * sin((2 * h + f))) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (0.109e3 / 0.13e2 * (((ci2 ^ 2) - 0.12e2 / 0.109e3) * (eta ^ 2) + (0.166e3 / 0.109e3 * (ci2 ^ 2) - 0.18e2 / 0.109e3) * eta + 0.125e3 / 0.109e3 * (ci2 ^ 2) - 0.10e2 / 0.109e3) * (eta - 1) * sin((2 * h + 2 * f + 4 * g)) + ((0.59e2 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (-0.3e1 / 0.13e2 + 0.45e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.75e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + 0.3e1 / 0.13e2 - 0.97e2 / 0.13e2 * (ci2 ^ 2)) * sin((2 * h + 4 * f + 4 * g)) + 0.11e2 / 0.13e2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * sin((2 * h + 6 * f + 4 * g)) + ((0.8e1 / 0.13e2 + 0.10e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 3) + 0.54e2 / 0.13e2 * (ci2 ^ 2) * (eta ^ 2) + (-0.16e2 / 0.13e2 + 0.38e2 / 0.13e2 * (ci2 ^ 2)) * eta - 0.126e3 / 0.13e2 * (ci2 ^ 2)) * sin((2 * g + 2 * f)) - 0.24e2 / 0.13e2 * (eta - 1) * (((ci2 ^ 2) - 0.1e1 / 0.4e1) * (eta ^ 2) + (-0.5e1 / 0.6e1 * (ci2 ^ 2) - 0.1e1 / 0.4e1) * eta - (4 * ci2 ^ 2)) * sin((2 * g + 4 * f)) + ((ci2 ^ 2 - 4) * eta ^ 2 + (-2 * ci2 ^ 2 + 2) * eta + ci2 ^ 2 + 10) * (eta - 1) * sin((-2 * h + 2 * f)) / 0.13e2 - 0.23e2 / 0.13e2 * (1 + eta) * ((ci2 ^ 2) - 0.3e1 / 0.23e2) * ((eta - 1) ^ 2) * sin((4 * g + 2 * h)) + (1 + eta) * ((eta - 1) ^ 2) * (ci2 ^ 2 - 3) * sin((-2 * h + 4 * f)) / 0.13e2 + (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * sin((2 * h + 2 * f)) / 0.13e2 - 0.11e2 / 0.13e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * sin((6 * f + 2 * g)) - (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-2 * g + 2 * f)) / 0.13e2 + 0.48e2 / 0.13e2 * (eta - 1) * (((ci2 ^ 2) - 0.1e1 / 0.8e1) * (eta ^ 2) + (0.17e2 / 0.12e2 * (ci2 ^ 2) - 0.1e1 / 0.8e1) * eta + (ci2 ^ 2) / 0.2e1) * sin((2 * g)) + sin((2 * h)) * (((ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (0.3e1 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 2) + (-0.21e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + (ci2 ^ 2) / 0.13e2 + 0.3e1 / 0.13e2))) / a ^ 2 / (eta ^ 7) / (1 + eta)];
D6 = [-0.3e1 / 0.4e1 * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * (((-20 * ci2 ^ 2 + 2) * sin((3 * g + h + 2 * f)) - 0.6e1 * sin((3 * g + h + 4 * f)) * (ci2 ^ 2) + 0.6e1 * sin((g - h)) * (ci2 ^ 2) + 0.2e1 * sin((g - h + 2 * f))) * sqrt((-eta ^ 2 + 1)) + (eta - 1) * (1 + eta) * (ci2 ^ 2 - 2) * sin((g - h + 3 * f)) / 0.3e1 + (((6 * eta ^ 2) - 0.46e2 / 0.3e1) * (ci2 ^ 2) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.2e1 / 0.3e1) * sin((3 * g + h + 3 * f)) + (ci2 ^ 2) * (eta ^ 2 - 1) * sin((3 * g + h + 5 * f)) + ((13 * eta ^ 2 - 13) * ci2 ^ 2 - 2 * eta ^ 2 + 2) * sin((3 * g + h + f)) + ((2 * eta ^ 2 + 2) * ci2 ^ 2 - 2 * eta ^ 2 + 2) * sin((g - h + f)) + sin((-g + h + f)) * (ci2 ^ 2) * (eta - 1) * (1 + eta)) * J / a ^ 3 / (eta ^ 4) 0.69e2 / 0.8e1 * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J * ((((0.3e1 / 0.23e2 * (eta ^ 2) + 0.1e1 / 0.23e2) * (ci2 ^ 2) - 0.6e1 / 0.23e2 * (eta ^ 2) + 0.10e2 / 0.23e2) * cos((g - h + 2 * f)) + (eta - 1) * (1 + eta) * (ci2 ^ 2 - 3) * cos((g - h + 4 * f)) / 0.23e2 + ((-0.125e3 / 0.23e2 + 0.57e2 / 0.23e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.6e1 / 0.23e2 * (eta ^ 2) + 0.10e2 / 0.23e2) * cos((3 * g + h + 2 * f)) + ((-0.97e2 / 0.23e2 + 0.45e2 / 0.23e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.3e1 / 0.23e2 * (eta ^ 2) + 0.3e1 / 0.23e2) * cos((3 * g + h + 4 * f)) + (ci2 ^ 2) * (-0.1e1 / 0.23e2 + (eta ^ 2) / 0.23e2) * cos((-g + h + 2 * f)) + (ci2 ^ 2) * (0.11e2 / 0.23e2 * (eta ^ 2) - 0.11e2 / 0.23e2) * cos((3 * g + h + 6 * f)) + ((0.3e1 / 0.23e2 * (eta ^ 2) + 0.1e1 / 0.23e2) * (ci2 ^ 2) - 0.3e1 / 0.23e2 * (eta ^ 2) + 0.3e1 / 0.23e2) * cos((g - h)) + cos((3 * g + h)) * (1 + eta) * (eta - 1) * ((ci2 ^ 2) - 0.3e1 / 0.23e2)) * sqrt((-eta ^ 2 + 1)) - 0.13e2 / 0.92e2 * ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.2e1 / 0.13e2) * ((eta - 1) ^ 2) * cos((-3 * g - h + f)) - ((ci2 ^ 2 * (eta ^ 2 - 1)) - 0.3e1 / 0.2e1 * (eta ^ 2) + 0.15e2 / 0.2e1) * (1 + eta) * (eta - 1) * cos((g - h + 3 * f)) / 0.23e2 - ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 2) * cos((g - h + 5 * f)) / 0.92e2 + ((0.123e3 / 0.23e2 * (eta ^ 2) - 0.27e2 / 0.46e2 * (eta ^ 4) - 0.275e3 / 0.46e2) * (ci2 ^ 2) + 0.3e1 / 0.46e2 * (eta ^ 4) - 0.9e1 / 0.23e2 * (eta ^ 2) + 0.15e2 / 0.46e2) * cos((3 * g + h + 3 * f)) - 0.7e1 / 0.23e2 * (((eta ^ 2) - 0.43e2 / 0.7e1) * (ci2 ^ 2) - (eta ^ 2) / 0.14e2 + 0.1e1 / 0.14e2) * (1 + eta) * (eta - 1) * cos((3 * g + h + 5 * f)) - (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((-g + h + 3 * f)) / 0.92e2 - 0.5e1 / 0.92e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((3 * g + h + 7 * f)) - ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((eta - 1) ^ 2) * cos((-g + h + f)) / 0.23e2 + ((-0.3e1 / 0.46e2 * (eta ^ 4) + 0.3e1 / 0.23e2 * (eta ^ 2) + 0.5e1 / 0.46e2) * (ci2 ^ 2) + 0.15e2 / 0.46e2 + 0.3e1 / 0.46e2 * (eta ^ 4) - 0.9e1 / 0.23e2 * (eta ^ 2)) * cos((g - h + f)) - 0.11e2 / 0.23e2 * (((eta ^ 2) - 0.71e2 / 0.11e2) * (ci2 ^ 2) - 0.3e1 / 0.22e2 * (eta ^ 2) + 0.15e2 / 0.22e2) * (1 + eta) * (eta - 1) * cos((3 * g + h + f))) / a ^ 2 / (eta ^ 7) -0.3e1 / 0.4e1 * (((-20 * ci2 ^ 4 + ci2 ^ 2 + 1) * sin((3 * g + 2 * h + 2 * f)) - 0.6e1 * sin((3 * g + 2 * h + 4 * f)) * (ci2 ^ 4) + (ci2 ^ 2 - 1) * sin((g - 2 * h + 2 * f)) + (-20 * ci2 ^ 4 + 21 * ci2 ^ 2 - 1) * sin((2 * f + 3 * g)) + (-6 * ci2 ^ 4 + 6 * ci2 ^ 2) * sin((4 * f + 3 * g)) + (ci2 ^ 2 + 1) * sin((g + 2 * f)) + (6 * ci2 ^ 4 - 6 * ci2 ^ 2) * sin((g - 2 * h)) + 0.6e1 * sin(g) * (ci2 ^ 4)) * sqrt((-eta ^ 2 + 1)) + (((6 * eta ^ 2) - 0.46e2 / 0.3e1) * (ci2 ^ 4) + (0.1e1 / 0.3e1 - (eta ^ 2) / 0.3e1) * (ci2 ^ 2) + 0.1e1 / 0.3e1 - (eta ^ 2) / 0.3e1) * sin((3 * g + 2 * h + 3 * f)) + (ci2 ^ 4) * (eta ^ 2 - 1) * sin((3 * g + 2 * h + 5 * f)) + (eta - 1) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((g - 2 * h + 3 * f)) / 0.3e1 + 0.13e2 * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * (eta - 1) * sin((3 * g + 2 * h + f)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * sin((-g + 2 * h + f)) + 0.6e1 * ((-0.23e2 / 0.9e1 + (eta ^ 2)) * (ci2 ^ 2) - (eta ^ 2) / 0.18e2 + 0.1e1 / 0.18e2) * (ci2 - 1) * (ci2 + 1) * sin((3 * g + 3 * f)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * sin((3 * g + 5 * f)) + ((2 * eta ^ 2 + 2) * ci2 ^ 4 + (-3 * eta ^ 2 - 1) * ci2 ^ 2 + eta ^ 2 - 1) * sin((g - 2 * h + f)) + (eta - 1) * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 - 1) * sin((g + 3 * f)) / 0.3e1 + ((13 * eta ^ 2 - 13) * ci2 ^ 4 + (-14 * eta ^ 2 + 14) * ci2 ^ 2 + eta ^ 2 - 1) * sin((3 * g + f)) + (ci2 ^ 4) * (eta ^ 2 - 1) * sin((f - g)) + 0.2e1 * sin((f + g)) * (((eta ^ 2 + 1) * ci2 ^ 4) + (-(eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1) * (ci2 ^ 2) - (eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1)) * ci2 * R__e ^ 2 * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) -0.3e1 / 0.4e1 * ci2 * R__e ^ 2 * (((20 * ci2 ^ 4 - ci2 ^ 2 - 1) * cos((3 * g + 2 * h + 2 * f)) + 0.6e1 * (ci2 ^ 4) * cos((3 * g + 2 * h + 4 * f)) + (ci2 ^ 2 - 1) * cos((g - 2 * h + 2 * f)) + (-20 * ci2 ^ 4 + 21 * ci2 ^ 2 - 1) * cos((2 * f + 3 * g)) + (-6 * ci2 ^ 4 + 6 * ci2 ^ 2) * cos((4 * f + 3 * g)) + (-ci2 ^ 2 - 1) * cos((g + 2 * f)) + (6 * ci2 ^ 4 - 6 * ci2 ^ 2) * cos((g - 2 * h)) - 0.6e1 * cos(g) * (ci2 ^ 4)) * sqrt((-eta ^ 2 + 1)) + ((0.46e2 / 0.3e1 - (6 * eta ^ 2)) * (ci2 ^ 4) + ((eta ^ 2) / 0.3e1 - 0.1e1 / 0.3e1) * (ci2 ^ 2) + (eta ^ 2) / 0.3e1 - 0.1e1 / 0.3e1) * cos((3 * g + 2 * h + 3 * f)) + (-eta ^ 2 + 1) * (ci2 ^ 4) * cos((3 * g + 2 * h + 5 * f)) + (eta - 1) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((g - 2 * h + 3 * f)) / 0.3e1 - 0.13e2 * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) / 0.13e2 - 0.1e1 / 0.13e2) * (eta - 1) * cos((3 * g + 2 * h + f)) + ((-eta ^ 2 + 1) * ci2 ^ 4 + ci2 ^ 2 * (eta ^ 2 - 1)) * cos((-g + 2 * h + f)) + 0.6e1 * ((-0.23e2 / 0.9e1 + (eta ^ 2)) * (ci2 ^ 2) - (eta ^ 2) / 0.18e2 + 0.1e1 / 0.18e2) * (ci2 - 1) * (ci2 + 1) * cos((3 * g + 3 * f)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * cos((3 * g + 5 * f)) + ((2 * eta ^ 2 + 2) * ci2 ^ 4 + (-3 * eta ^ 2 - 1) * ci2 ^ 2 + eta ^ 2 - 1) * cos((g - 2 * h + f)) - (eta - 1) * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 - 1) * cos((g + 3 * f)) / 0.3e1 + ((13 * eta ^ 2 - 13) * ci2 ^ 4 + (-14 * eta ^ 2 + 14) * ci2 ^ 2 + eta ^ 2 - 1) * cos((3 * g + f)) + (ci2 ^ 4) * (eta ^ 2 - 1) * cos((f - g)) - 0.2e1 * cos((f + g)) * (((eta ^ 2 + 1) * ci2 ^ 4) + (-(eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1) * (ci2 ^ 2) - (eta ^ 2) / 0.2e1 + 0.1e1 / 0.2e1)) * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) 0.39e2 / 0.16e2 * ((((-0.23e2 / 0.78e2 + 0.32e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 4) + (-0.16e2 / 0.39e2 + 0.7e1 / 0.2e1 * (ci2 ^ 2)) * (eta ^ 3) + (0.17e2 / 0.39e2 - 0.563e3 / 0.78e2 * (ci2 ^ 2)) * (eta ^ 2) + (0.44e2 / 0.39e2 - 0.1301e4 / 0.78e2 * (ci2 ^ 2)) * eta - 0.275e3 / 0.26e2 * (ci2 ^ 2) + 0.15e2 / 0.26e2) * sin((2 * h + 3 * f + 4 * g)) + 0.19e2 / 0.26e2 * (((ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 3) + (0.14e2 / 0.19e2 * (ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 2) + (-0.79e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * eta - 0.86e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * (1 + eta) * sin((2 * h + 5 * f + 4 * g)) + 0.5e1 / 0.52e2 * (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * sin((4 * g + 2 * h + 7 * f)) + 0.121e3 / 0.26e2 * (((ci2 ^ 2) - 0.19e2 / 0.121e3) * (eta ^ 2) + (0.13e2 / 0.11e2 * (ci2 ^ 2) - 0.2e1 / 0.11e2) * eta + 0.142e3 / 0.121e3 * (ci2 ^ 2) - 0.15e2 / 0.121e3) * (1 + eta) * (eta - 1) * sin((4 * g + 2 * h + f)) + ((ci2 ^ 2) - 0.2e1 / 0.13e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-4 * g - 2 * h + f)) / 0.4e1 + 0.5e1 / 0.78e2 * (1 + eta) * (((ci2 ^ 2) - 0.7e1 / 0.5e1) * (eta ^ 2) + (-(ci2 ^ 2) / 0.5e1 + 0.2e1 / 0.5e1) * eta - 0.6e1 / 0.5e1 * (ci2 ^ 2) + 0.9e1) * (eta - 1) * sin((-2 * h + 3 * f)) + ((-0.5e1 / 0.26e2 * (ci2 ^ 2) - 0.7e1 / 0.39e2) * (eta ^ 4) + (-0.7e1 / 0.39e2 - 0.15e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 3) + (-0.194e3 / 0.39e2 * (ci2 ^ 2) + 0.43e2 / 0.39e2) * (eta ^ 2) + (0.43e2 / 0.39e2 + 0.13e2 / 0.3e1 * (ci2 ^ 2)) * eta + 0.21e2 / 0.2e1 * (ci2 ^ 2)) * sin((3 * f + 2 * g)) + 0.15e2 / 0.52e2 * (((ci2 ^ 2) - 0.4e1 / 0.15e2) * (eta ^ 2) + (-0.4e1 / 0.5e1 * (ci2 ^ 2) - 0.4e1 / 0.15e2) * eta - 0.57e2 / 0.5e1 * (ci2 ^ 2)) * (1 + eta) * (eta - 1) * sin((5 * f + 2 * g)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 2) * sin((-2 * h + 5 * f)) / 0.52e2 + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * sin((2 * h + 3 * f)) / 0.52e2 + (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((3 * f - 2 * g)) / 0.52e2 + 0.5e1 / 0.52e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((2 * g + 7 * f)) + ((-0.23e2 / 0.26e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 4) + (-0.21e2 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (0.2e1 / 0.13e2 * (ci2 ^ 2) + 0.7e1 / 0.13e2) * (eta ^ 2) + (0.7e1 / 0.13e2 + 0.81e2 / 0.13e2 * (ci2 ^ 2)) * eta + 0.147e3 / 0.26e2 * (ci2 ^ 2)) * sin((f + 2 * g)) + 0.27e2 / 0.52e2 * ((1 + eta) ^ 2) * (((ci2 ^ 2) - 0.4e1 / 0.27e2) * eta + (ci2 ^ 2) / 0.3e1) * (eta - 1) * sin((-2 * g + f)) + ((-0.3e1 / 0.26e2 + 0.2e1 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 4) + (ci2 ^ 2 * eta ^ 3) / 0.26e2 + (0.5e1 / 0.13e2 + 0.5e1 / 0.26e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.4e1 / 0.13e2 + 0.11e2 / 0.26e2 * (ci2 ^ 2)) * eta - 0.15e2 / 0.26e2 - 0.5e1 / 0.26e2 * (ci2 ^ 2)) * sin((-2 * h + f)) + 0.3e1 / 0.26e2 * (((ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * (ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 2) + (-0.7e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * eta - 0.2e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (1 + eta) * sin((2 * h + f))) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (0.109e3 / 0.13e2 * (((ci2 ^ 2) - 0.12e2 / 0.109e3) * (eta ^ 2) + (0.166e3 / 0.109e3 * (ci2 ^ 2) - 0.18e2 / 0.109e3) * eta + 0.125e3 / 0.109e3 * (ci2 ^ 2) - 0.10e2 / 0.109e3) * (eta - 1) * sin((2 * h + 2 * f + 4 * g)) + ((0.59e2 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (-0.3e1 / 0.13e2 + 0.45e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.75e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + 0.3e1 / 0.13e2 - 0.97e2 / 0.13e2 * (ci2 ^ 2)) * sin((2 * h + 4 * f + 4 * g)) + 0.11e2 / 0.13e2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * sin((2 * h + 6 * f + 4 * g)) + ((-0.10e2 / 0.13e2 * (ci2 ^ 2) - 0.8e1 / 0.13e2) * (eta ^ 3) - 0.54e2 / 0.13e2 * (ci2 ^ 2) * (eta ^ 2) + (-0.38e2 / 0.13e2 * (ci2 ^ 2) + 0.16e2 / 0.13e2) * eta + 0.126e3 / 0.13e2 * (ci2 ^ 2)) * sin((2 * g + 2 * f)) + 0.24e2 / 0.13e2 * (eta - 1) * (((ci2 ^ 2) - 0.1e1 / 0.4e1) * (eta ^ 2) + (-0.5e1 / 0.6e1 * (ci2 ^ 2) - 0.1e1 / 0.4e1) * eta - (4 * ci2 ^ 2)) * sin((2 * g + 4 * f)) + ((ci2 ^ 2 - 4) * eta ^ 2 + (-2 * ci2 ^ 2 + 2) * eta + ci2 ^ 2 + 10) * (eta - 1) * sin((-2 * h + 2 * f)) / 0.13e2 - 0.23e2 / 0.13e2 * (1 + eta) * ((ci2 ^ 2) - 0.3e1 / 0.23e2) * ((eta - 1) ^ 2) * sin((4 * g + 2 * h)) + (1 + eta) * ((eta - 1) ^ 2) * (ci2 ^ 2 - 3) * sin((-2 * h + 4 * f)) / 0.13e2 + (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * sin((2 * h + 2 * f)) / 0.13e2 + 0.11e2 / 0.13e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * sin((6 * f + 2 * g)) + (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-2 * g + 2 * f)) / 0.13e2 - 0.48e2 / 0.13e2 * (eta - 1) * (((ci2 ^ 2) - 0.1e1 / 0.8e1) * (eta ^ 2) + (0.17e2 / 0.12e2 * (ci2 ^ 2) - 0.1e1 / 0.8e1) * eta + (ci2 ^ 2) / 0.2e1) * sin((2 * g)) + sin((2 * h)) * (((ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (0.3e1 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 2) + (-0.21e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + (ci2 ^ 2) / 0.13e2 + 0.3e1 / 0.13e2))) * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J / a ^ 2 / (eta ^ 7) / (1 + eta) -0.39e2 / 0.16e2 * ((((-0.23e2 / 0.78e2 + 0.32e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 4) + (-0.16e2 / 0.39e2 + 0.7e1 / 0.2e1 * (ci2 ^ 2)) * (eta ^ 3) + (0.17e2 / 0.39e2 - 0.563e3 / 0.78e2 * (ci2 ^ 2)) * (eta ^ 2) + (0.44e2 / 0.39e2 - 0.1301e4 / 0.78e2 * (ci2 ^ 2)) * eta - 0.275e3 / 0.26e2 * (ci2 ^ 2) + 0.15e2 / 0.26e2) * cos((2 * h + 3 * f + 4 * g)) + 0.19e2 / 0.26e2 * (1 + eta) * (((ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 3) + (0.14e2 / 0.19e2 * (ci2 ^ 2) - 0.1e1 / 0.19e2) * (eta ^ 2) + (-0.79e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * eta - 0.86e2 / 0.19e2 * (ci2 ^ 2) + 0.1e1 / 0.19e2) * cos((2 * h + 5 * f + 4 * g)) + 0.5e1 / 0.52e2 * (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * cos((4 * g + 2 * h + 7 * f)) + 0.121e3 / 0.26e2 * (1 + eta) * (eta - 1) * (((ci2 ^ 2) - 0.19e2 / 0.121e3) * (eta ^ 2) + (0.13e2 / 0.11e2 * (ci2 ^ 2) - 0.2e1 / 0.11e2) * eta + 0.142e3 / 0.121e3 * (ci2 ^ 2) - 0.15e2 / 0.121e3) * cos((4 * g + 2 * h + f)) - ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.2e1 / 0.13e2) * ((eta - 1) ^ 2) * cos((-4 * g - 2 * h + f)) / 0.4e1 + ((0.11e2 / 0.26e2 * (ci2 ^ 2) - 0.8e1 / 0.39e2) * (eta ^ 4) + (0.20e2 / 0.13e2 * (ci2 ^ 2) - 0.17e2 / 0.39e2) * (eta ^ 3) + ((5 * ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 2) + (-0.60e2 / 0.13e2 * (ci2 ^ 2) + 0.15e2 / 0.13e2) * eta + 0.15e2 / 0.13e2 - 0.277e3 / 0.26e2 * (ci2 ^ 2)) * cos((3 * f + 2 * g)) - 0.5e1 / 0.78e2 * (1 + eta) * (eta - 1) * (((ci2 ^ 2) - 0.7e1 / 0.5e1) * (eta ^ 2) + (-(ci2 ^ 2) / 0.5e1 + 0.2e1 / 0.5e1) * eta - 0.6e1 / 0.5e1 * (ci2 ^ 2) + 0.9e1) * cos((-2 * h + 3 * f)) - (1 + eta) * (eta - 1) * ((ci2 ^ 2 * eta ^ 2) + (-0.16e2 / 0.13e2 * (ci2 ^ 2) + 0.4e1 / 0.13e2) * eta - 0.173e3 / 0.13e2 * (ci2 ^ 2) + 0.4e1 / 0.13e2) * cos((5 * f + 2 * g)) / 0.4e1 - ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 2) * cos((-2 * h + 5 * f)) / 0.52e2 + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 3) * cos((2 * h + 3 * f)) / 0.52e2 - (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((3 * f - 2 * g)) / 0.52e2 - 0.5e1 / 0.52e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((2 * g + 7 * f)) + ((0.47e2 / 0.26e2 * (ci2 ^ 2) - 0.8e1 / 0.13e2) * (eta ^ 4) + (0.36e2 / 0.13e2 * (ci2 ^ 2) - 0.11e2 / 0.13e2) * (eta ^ 3) + (0.25e2 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 2) + (-0.60e2 / 0.13e2 * (ci2 ^ 2) + 0.15e2 / 0.13e2) * eta + 0.15e2 / 0.13e2 - 0.137e3 / 0.26e2 * (ci2 ^ 2)) * cos((f + 2 * g)) - (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2 * eta - 17 * ci2 ^ 2 + 4) * cos((-2 * g + f)) / 0.52e2 + ((-0.2e1 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.26e2) * (eta ^ 4) - (ci2 ^ 2 * eta ^ 3) / 0.26e2 + (-0.5e1 / 0.26e2 * (ci2 ^ 2) - 0.5e1 / 0.13e2) * (eta ^ 2) + (-0.11e2 / 0.26e2 * (ci2 ^ 2) + 0.4e1 / 0.13e2) * eta + 0.15e2 / 0.26e2 + 0.5e1 / 0.26e2 * (ci2 ^ 2)) * cos((-2 * h + f)) + 0.3e1 / 0.26e2 * (1 + eta) * (((ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 3) + (0.2e1 / 0.3e1 * (ci2 ^ 2) - 0.1e1 / 0.3e1) * (eta ^ 2) + (-0.7e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * eta - 0.2e1 / 0.3e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * cos((2 * h + f))) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (0.109e3 / 0.13e2 * (((ci2 ^ 2) - 0.12e2 / 0.109e3) * (eta ^ 2) + (0.166e3 / 0.109e3 * (ci2 ^ 2) - 0.18e2 / 0.109e3) * eta + 0.125e3 / 0.109e3 * (ci2 ^ 2) - 0.10e2 / 0.109e3) * (eta - 1) * cos((2 * h + 2 * f + 4 * g)) + ((0.59e2 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (-0.3e1 / 0.13e2 + 0.45e2 / 0.13e2 * (ci2 ^ 2)) * (eta ^ 2) + (-0.75e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + 0.3e1 / 0.13e2 - 0.97e2 / 0.13e2 * (ci2 ^ 2)) * cos((2 * h + 4 * f + 4 * g)) + 0.11e2 / 0.13e2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * cos((2 * h + 6 * f + 4 * g)) + ((0.12e2 / 0.13e2 * (ci2 ^ 2) - 0.8e1 / 0.13e2) * (eta ^ 3) + (0.60e2 / 0.13e2 * (ci2 ^ 2) - 0.12e2 / 0.13e2) * (eta ^ 2) + 0.44e2 / 0.13e2 * (ci2 ^ 2) * eta + 0.20e2 / 0.13e2 - 0.124e3 / 0.13e2 * (ci2 ^ 2)) * cos((2 * g + 2 * f)) - 0.22e2 / 0.13e2 * (eta - 1) * ((ci2 ^ 2 * eta ^ 2) + (-0.12e2 / 0.11e2 * (ci2 ^ 2) + 0.3e1 / 0.11e2) * eta - 0.49e2 / 0.11e2 * (ci2 ^ 2) + 0.3e1 / 0.11e2) * cos((2 * g + 4 * f)) - ((ci2 ^ 2 - 4) * eta ^ 2 + (-2 * ci2 ^ 2 + 2) * eta + ci2 ^ 2 + 10) * (eta - 1) * cos((-2 * h + 2 * f)) / 0.13e2 - 0.23e2 / 0.13e2 * ((ci2 ^ 2) - 0.3e1 / 0.23e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((4 * g + 2 * h)) - (1 + eta) * ((eta - 1) ^ 2) * (ci2 ^ 2 - 3) * cos((-2 * h + 4 * f)) / 0.13e2 + (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * cos((2 * h + 2 * f)) / 0.13e2 - 0.11e2 / 0.13e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * cos((6 * f + 2 * g)) - (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-2 * g + 2 * f)) / 0.13e2 - 0.2e1 / 0.13e2 * (ci2 ^ 2 * eta ^ 2 + (-12 * ci2 ^ 2 + 3) * eta - 11 * ci2 ^ 2 + 3) * (eta - 1) * cos((2 * g)) + cos((2 * h)) * (((ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 3) + (0.3e1 / 0.13e2 * (ci2 ^ 2) - 0.3e1 / 0.13e2) * (eta ^ 2) + (-0.21e2 / 0.13e2 * (ci2 ^ 2) + 0.3e1 / 0.13e2) * eta + (ci2 ^ 2) / 0.13e2 + 0.3e1 / 0.13e2))) * (ci2 - 1) * (ci2 + 1) * R__e ^ 2 * J / a ^ 2 / (eta ^ 7) / (1 + eta)];

Dsp12 = O2Msign*[D1; D2; D3; D4; D5; D6];

D1 = [0.1395e4 / 0.16e2 * J ^ 2 * ((0.3e1 / 0.310e3 * (ci2 - 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2) * (ci2 + 1) * (eta ^ 2 + 48 * eta + 48) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos((3 * f - 2 * g)) + 0.113e3 / 0.155e3 * (ci2 - 1) * (((eta ^ 6) + 0.650e3 / 0.113e3 * (eta ^ 5) + 0.144e3 / 0.113e3 * (eta ^ 4) - 0.3890e4 / 0.113e3 * (eta ^ 3) - 0.3329e4 / 0.113e3 * (eta ^ 2) + 0.4752e4 / 0.113e3 * eta + 0.4752e4 / 0.113e3) * (ci2 ^ 4) + (-(eta ^ 6) - 0.650e3 / 0.113e3 * (eta ^ 5) - 0.144e3 / 0.113e3 * (eta ^ 4) + 0.3890e4 / 0.113e3 * (eta ^ 3) + 0.3329e4 / 0.113e3 * (eta ^ 2) - 0.4752e4 / 0.113e3 * eta - 0.4752e4 / 0.113e3) * (ci2 ^ 2) + 0.43e2 / 0.226e3 * (eta ^ 6) + 0.118e3 / 0.113e3 * (eta ^ 5) + 0.31e2 / 0.113e3 * (eta ^ 4) - 0.662e3 / 0.113e3 * (eta ^ 3) - 0.1137e4 / 0.226e3 * (eta ^ 2) + 0.792e3 / 0.113e3 * eta + 0.792e3 / 0.113e3) * (ci2 ^ 2) * (ci2 + 1) * cos((3 * f + 2 * g)) + 0.51e2 / 0.310e3 * (ci2 - 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 4) + 0.132e3 / 0.17e2 * (eta ^ 3) - 0.29e2 / 0.17e2 * (eta ^ 2) - 0.880e3 / 0.17e2 * eta - 0.880e3 / 0.17e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.132e3 / 0.17e2 * (eta ^ 3) + 0.29e2 / 0.17e2 * (eta ^ 2) + 0.880e3 / 0.17e2 * eta + 0.880e3 / 0.17e2) * (ci2 ^ 2) + (eta ^ 4) / 0.6e1 + 0.20e2 / 0.17e2 * (eta ^ 3) - 0.41e2 / 0.102e3 * (eta ^ 2) - 0.440e3 / 0.51e2 * eta - 0.440e3 / 0.51e2) * cos((5 * f + 2 * g)) + 0.3e1 / 0.62e2 * (ci2 - 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2) * ((eta ^ 2) + 0.48e2 / 0.5e1 * eta + 0.48e2 / 0.5e1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos((2 * g + 7 * f)) - 0.33e2 / 0.31e2 * ((ci2 - 1) ^ 2) * (1 + eta) * (ci2 ^ 4) * ((eta ^ 4) - 0.1069e4 / 0.165e3 * (eta ^ 2) + 0.36e2 / 0.5e1) * ((ci2 + 1) ^ 2) * cos((3 * f + 4 * g)) - 0.189e3 / 0.155e3 * ((ci2 - 1) ^ 2) * ((eta ^ 4) - 0.125e3 / 0.21e2 * (eta ^ 2) + 0.44e2 / 0.7e1) * (1 + eta) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * cos((5 * f + 4 * g)) - 0.18e2 / 0.155e3 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((9 * f + 4 * g)) - 0.101e3 / 0.155e3 * ((ci2 - 1) ^ 2) * ((eta ^ 2) - 0.330e3 / 0.101e3) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * cos((4 * g + 7 * f)) + 0.36e2 / 0.31e2 * (ci2 - 1) * (eta ^ 2) * (1 + eta) * Delta * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * (eta ^ 2 - 5) * sin((3 * f + 2 * g)) + 0.12e2 / 0.31e2 * (ci2 - 1) * (eta ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * Delta * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * sin((5 * f + 2 * g)) + 0.261e3 / 0.155e3 * (ci2 - 1) * (ci2 ^ 2) * (((eta ^ 6) + 0.382e3 / 0.87e2 * (eta ^ 5) + 0.80e2 / 0.29e2 * (eta ^ 4) - 0.1558e4 / 0.87e2 * (eta ^ 3) - 0.1511e4 / 0.87e2 * (eta ^ 2) + 0.528e3 / 0.29e2 * eta + 0.528e3 / 0.29e2) * (ci2 ^ 4) + (-(eta ^ 6) - 0.382e3 / 0.87e2 * (eta ^ 5) - 0.80e2 / 0.29e2 * (eta ^ 4) + 0.1558e4 / 0.87e2 * (eta ^ 3) + 0.1511e4 / 0.87e2 * (eta ^ 2) - 0.528e3 / 0.29e2 * eta - 0.528e3 / 0.29e2) * (ci2 ^ 2) + 0.103e3 / 0.522e3 * (eta ^ 6) + 0.74e2 / 0.87e2 * (eta ^ 5) + 0.143e3 / 0.261e3 * (eta ^ 4) - 0.830e3 / 0.261e3 * (eta ^ 3) - 0.1613e4 / 0.522e3 * (eta ^ 2) + 0.88e2 / 0.29e2 * eta + 0.88e2 / 0.29e2) * (ci2 + 1) * cos((f + 2 * g)) + 0.3e1 / 0.62e2 * (ci2 - 1) * (eta - 1) * ((1 + eta) ^ 2) * (((eta ^ 3) + 0.351e3 / 0.5e1 * (eta ^ 2) - 0.176e3) * (ci2 ^ 4) + (-(eta ^ 3) - 0.351e3 / 0.5e1 * (eta ^ 2) + 0.176e3) * (ci2 ^ 2) + (eta ^ 3) / 0.6e1 + 0.403e3 / 0.30e2 * (eta ^ 2) - 0.88e2 / 0.3e1) * (ci2 ^ 2) * (ci2 + 1) * cos((-2 * g + f)) - 0.18e2 / 0.155e3 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-4 * g + f)) - 0.77e2 / 0.155e3 * ((ci2 - 1) ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.30e2 / 0.7e1) * cos((4 * g + f)) + 0.36e2 / 0.31e2 * (ci2 - 1) * (eta ^ 2) * (1 + eta) * Delta * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * (eta ^ 2 - 5) * sin((f + 2 * g)) - 0.12e2 / 0.31e2 * (ci2 - 1) * (eta ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * Delta * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * sin((-2 * g + f)) - 0.33e2 / 0.155e3 * ((0.554e3 / 0.33e2 * (eta ^ 3) + (eta ^ 4) + 0.305e3 / 0.33e2 * (eta ^ 2) - (60 * eta) - 0.60e2) * (ci2 ^ 8) + (-0.610e3 / 0.33e2 * (eta ^ 2) - (2 * eta ^ 4) - 0.1108e4 / 0.33e2 * (eta ^ 3) + (120 * eta) + 0.120e3) * (ci2 ^ 6) + (0.320e3 / 0.33e2 * (eta ^ 2) + 0.652e3 / 0.33e2 * (eta ^ 3) - 0.220e3 / 0.3e1 * eta + 0.4e1 / 0.3e1 * (eta ^ 4) - 0.220e3 / 0.3e1) * (ci2 ^ 4) + (0.40e2 / 0.3e1 - 0.5e1 / 0.11e2 * (eta ^ 2) - 0.98e2 / 0.33e2 * (eta ^ 3) - (eta ^ 4) / 0.3e1 + 0.40e2 / 0.3e1 * eta) * (ci2 ^ 2) + (eta ^ 4) / 0.36e2 - 0.10e2 / 0.9e1 - 0.10e2 / 0.9e1 * eta - 0.5e1 / 0.132e3 * (eta ^ 2) + 0.17e2 / 0.99e2 * (eta ^ 3)) * (eta - 1) * (1 + eta) * cos((3 * f)) - 0.9e1 / 0.155e3 * (((eta ^ 2 + 12 * eta + 12) * ci2 ^ 8) + ((-2 * eta ^ 2 - 24 * eta - 24) * ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) + 0.44e2 / 0.3e1 * eta + 0.44e2 / 0.3e1) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 - 0.8e1 / 0.3e1 * eta - 0.8e1 / 0.3e1) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 + 0.2e1 / 0.9e1 * eta + 0.2e1 / 0.9e1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos((5 * f)) - 0.54e2 / 0.155e3 * cos(f) * ((0.187e3 / 0.9e1 * (eta ^ 5) - 0.3185e4 / 0.27e2 * (eta ^ 3) + 0.85e2 / 0.9e1 * (eta ^ 4) - 0.2834e4 / 0.27e2 * (eta ^ 2) + (132 * eta) + (eta ^ 6) + 0.132e3) * (ci2 ^ 8) + (0.5668e4 / 0.27e2 * (eta ^ 2) - (2 * eta ^ 6) - 0.170e3 / 0.9e1 * (eta ^ 4) + 0.6370e4 / 0.27e2 * (eta ^ 3) - (264 * eta) - 0.374e3 / 0.9e1 * (eta ^ 5) - 0.264e3) * (ci2 ^ 6) + (-0.1112e4 / 0.9e1 * (eta ^ 2) - 0.1268e4 / 0.9e1 * (eta ^ 3) + 0.4e1 / 0.3e1 * (eta ^ 6) + (24 * eta ^ 5) + 0.484e3 / 0.3e1 * eta + 0.80e2 / 0.9e1 * (eta ^ 4) + 0.484e3 / 0.3e1) * (ci2 ^ 4) + (-0.88e2 / 0.3e1 + 0.502e3 / 0.27e2 * (eta ^ 2) + 0.619e3 / 0.27e2 * (eta ^ 3) - (eta ^ 6) / 0.3e1 - 0.29e2 / 0.9e1 * (eta ^ 5) + 0.5e1 / 0.9e1 * (eta ^ 4) - 0.88e2 / 0.3e1 * eta) * (ci2 ^ 2) - 0.5e1 / 0.27e2 * (eta ^ 4) + 0.22e2 / 0.9e1 + (eta ^ 6) / 0.36e2 + 0.22e2 / 0.9e1 * eta - 0.5e1 / 0.4e1 * (eta ^ 2) + 0.7e1 / 0.54e2 * (eta ^ 5) - 0.29e2 / 0.18e2 * (eta ^ 3))) * sqrt((-eta ^ 2 + 1)) + (0.147e3 / 0.310e3 * (eta ^ 2) - 0.14e2 / 0.155e3 * (eta ^ 4) - 0.154e3 / 0.155e3 * (ci2 - 1) * (eta - 1) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 5) + 0.53e2 / 0.77e2 * (eta ^ 4) - 0.1004e4 / 0.77e2 * (eta ^ 3) - 0.992e3 / 0.77e2 * (eta ^ 2) + 0.135e3 / 0.7e1 * eta + 0.135e3 / 0.7e1) * (ci2 ^ 4) + (-(eta ^ 5) - 0.53e2 / 0.77e2 * (eta ^ 4) + 0.1004e4 / 0.77e2 * (eta ^ 3) + 0.992e3 / 0.77e2 * (eta ^ 2) - 0.135e3 / 0.7e1 * eta - 0.135e3 / 0.7e1) * (ci2 ^ 2) + 0.31e2 / 0.154e3 * (eta ^ 5) + 0.23e2 / 0.154e3 * (eta ^ 4) - 0.185e3 / 0.77e2 * (eta ^ 3) - 0.183e3 / 0.77e2 * (eta ^ 2) + 0.45e2 / 0.14e2 * eta + 0.45e2 / 0.14e2) * cos((2 * g)) + 0.3e1 / 0.310e3 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((2 * f - 4 * g)) - 0.42e2 / 0.155e3 * (ci2 - 1) * ((eta + 3) * ((eta ^ 4) - (6 * eta ^ 3) - 0.78e2 / 0.7e1 * (eta ^ 2) + 0.110e3 / 0.7e1 * eta + 0.165e3 / 0.7e1) * (ci2 ^ 4) - (eta + 3) * ((eta ^ 4) - (6 * eta ^ 3) - 0.78e2 / 0.7e1 * (eta ^ 2) + 0.110e3 / 0.7e1 * eta + 0.165e3 / 0.7e1) * (ci2 ^ 2) + (eta ^ 5) / 0.6e1 - (eta ^ 4) / 0.2e1 - 0.101e3 / 0.21e2 * (eta ^ 3) - 0.61e2 / 0.21e2 * (eta ^ 2) + 0.165e3 / 0.14e2 * eta + 0.165e3 / 0.14e2) * (eta - 1) * (ci2 ^ 2) * (ci2 + 1) * cos((2 * g + 4 * f)) + 0.3e1 / 0.310e3 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((10 * f + 4 * g)) + (eta - 1) * (((eta ^ 5) - 0.2414e4 / 0.155e3 * (eta ^ 3) - 0.61e2 / 0.155e3 * (eta ^ 4) - 0.382e3 / 0.31e2 * (eta ^ 2) + 0.891e3 / 0.31e2 * eta + 0.891e3 / 0.31e2) * (ci2 ^ 8) + (0.764e3 / 0.31e2 * (eta ^ 2) + 0.122e3 / 0.155e3 * (eta ^ 4) + 0.4828e4 / 0.155e3 * (eta ^ 3) - 0.1782e4 / 0.31e2 * eta - (2 * eta ^ 5) - 0.1782e4 / 0.31e2) * (ci2 ^ 6) + (-0.438e3 / 0.31e2 * (eta ^ 2) - 0.2862e4 / 0.155e3 * (eta ^ 3) + 0.177e3 / 0.155e3 * (eta ^ 5) + 0.1089e4 / 0.31e2 * eta - 0.111e3 / 0.155e3 * (eta ^ 4) + 0.1089e4 / 0.31e2) * (ci2 ^ 4) + (-0.198e3 / 0.31e2 + 0.56e2 / 0.31e2 * (eta ^ 2) + 0.448e3 / 0.155e3 * (eta ^ 3) - 0.22e2 / 0.155e3 * (eta ^ 5) + 0.10e2 / 0.31e2 * (eta ^ 4) - 0.198e3 / 0.31e2 * eta) * (ci2 ^ 2) - 0.11e2 / 0.310e3 * (eta ^ 4) + 0.33e2 / 0.62e2 + 0.33e2 / 0.62e2 * eta - 0.3e1 / 0.31e2 * (eta ^ 2) + (eta ^ 5) / 0.310e3 - 0.29e2 / 0.155e3 * (eta ^ 3)) * cos((2 * f)) - 0.7e1 / 0.930e3 * (eta ^ 6) + 0.144e3 / 0.31e2 * (ci2 - 1) * (eta ^ 2) * Delta * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * ((eta ^ 2) - 0.5e1 / 0.3e1) * sin((2 * g + 2 * f)) + 0.72e2 / 0.31e2 * (ci2 - 1) * (eta ^ 2) * (eta - 1) * (1 + eta) * Delta * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * sin((2 * g)) + 0.72e2 / 0.31e2 * (ci2 - 1) * (eta ^ 2) * (eta - 1) * (1 + eta) * Delta * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * sin((2 * g + 4 * f)) + 0.21e2 / 0.310e3 * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((eta ^ 2) - 0.66e2 / 0.7e1) * ((ci2 + 1) ^ 2) * cos((8 * f + 4 * g)) + 0.33e2 / 0.310e3 * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * ((eta ^ 4) - 0.254e3 / 0.11e2 * (eta ^ 2) + 0.45e2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * cos((2 * f + 4 * g)) - 0.2e1 / 0.31e2 * (ci2 - 1) * ((eta - 1) ^ 2) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 3) - 0.28e2 / 0.5e1 * (eta ^ 2) - 0.198e3 / 0.5e1 * eta - 0.198e3 / 0.5e1) * (ci2 ^ 4) + (-(eta ^ 3) + 0.28e2 / 0.5e1 * (eta ^ 2) + 0.198e3 / 0.5e1 * eta + 0.198e3 / 0.5e1) * (ci2 ^ 2) + (eta ^ 3) / 0.10e2 - (eta ^ 2) - 0.33e2 / 0.5e1 * eta - 0.33e2 / 0.5e1) * cos((6 * f + 2 * g)) - 0.6e1 / 0.155e3 * (ci2 - 1) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos((8 * f + 2 * g)) + 0.49e2 / 0.310e3 * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * ((eta ^ 4) - 0.874e3 / 0.49e2 * (eta ^ 2) + 0.1485e4 / 0.49e2) * ((ci2 + 1) ^ 2) * cos((6 * f + 4 * g)) - 0.6e1 / 0.155e3 * (ci2 - 1) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos((4 * f - 2 * g)) + (-0.10402e5 / 0.155e3 * (eta ^ 2) - 0.114e3 / 0.155e3 * (eta ^ 6) + 0.696e3 / 0.31e2 * (eta ^ 4) - 0.768e3 / 0.155e3 * (eta ^ 3) + 0.288e3 / 0.155e3 * (eta ^ 5) + 0.8316e4 / 0.155e3) * (ci2 ^ 6) + (-0.144e3 / 0.155e3 * (eta ^ 5) + 0.384e3 / 0.155e3 * (eta ^ 3) - 0.348e3 / 0.31e2 * (eta ^ 4) + 0.5201e4 / 0.155e3 * (eta ^ 2) + 0.57e2 / 0.155e3 * (eta ^ 6) - 0.4158e4 / 0.155e3) * (ci2 ^ 8) + (0.6203e4 / 0.155e3 * (eta ^ 2) + 0.512e3 / 0.155e3 * (eta ^ 3) + 0.11e2 / 0.31e2 * (eta ^ 6) - 0.192e3 / 0.155e3 * (eta ^ 5) - 0.2016e4 / 0.155e3 * (eta ^ 4) - 0.5082e4 / 0.155e3) * (ci2 ^ 4) + (0.924e3 / 0.155e3 - 0.1002e4 / 0.155e3 * (eta ^ 2) - 0.128e3 / 0.155e3 * (eta ^ 3) + 0.2e1 / 0.155e3 * (eta ^ 6) + 0.48e2 / 0.155e3 * (eta ^ 5) + 0.276e3 / 0.155e3 * (eta ^ 4)) * (ci2 ^ 2) - 0.132e3 / 0.155e3 * (ci2 - 1) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 6) - 0.32e2 / 0.11e2 * (eta ^ 5) - (18 * eta ^ 4) + 0.32e2 / 0.11e2 * (eta ^ 3) + 0.593e3 / 0.11e2 * (eta ^ 2) - 0.42e2) * (ci2 ^ 4) + (-(eta ^ 6) + 0.32e2 / 0.11e2 * (eta ^ 5) + (18 * eta ^ 4) - 0.32e2 / 0.11e2 * (eta ^ 3) - 0.593e3 / 0.11e2 * (eta ^ 2) + 0.42e2) * (ci2 ^ 2) + 0.13e2 / 0.66e2 * (eta ^ 6) - 0.6e1 / 0.11e2 * (eta ^ 5) - 0.36e2 / 0.11e2 * (eta ^ 4) + 0.16e2 / 0.33e2 * (eta ^ 3) + 0.613e3 / 0.66e2 * (eta ^ 2) - 0.7e1) * cos((2 * g + 2 * f)) + 0.27e2 / 0.155e3 * ((ci2 - 1) ^ 2) * ((eta ^ 6) - 0.212e3 / 0.9e1 * (eta ^ 4) + 0.1915e4 / 0.27e2 * (eta ^ 2) - 0.154e3 / 0.3e1) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * cos((4 * f + 4 * g)) - 0.4e1 / 0.155e3 * (eta ^ 5) + 0.32e2 / 0.465e3 * (eta ^ 3) - 0.77e2 / 0.155e3 - 0.66e2 / 0.155e3 * (ci2 - 1) * (((eta ^ 3) + 0.10e2 / 0.11e2 * (eta ^ 2) - (6 * eta) - 0.6e1) * (ci2 ^ 4) + (-(eta ^ 3) - 0.10e2 / 0.11e2 * (eta ^ 2) + (6 * eta) + 0.6e1) * (ci2 ^ 2) + 0.13e2 / 0.66e2 * (eta ^ 3) + 0.2e1 / 0.11e2 * (eta ^ 2) - eta - 0.1e1) * ((eta - 1) ^ 2) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * cos((-2 * g + 2 * f)) + 0.13e2 / 0.310e3 * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.198e3 / 0.13e2) * cos((4 * g)) + 0.59e2 / 0.155e3 * (((eta ^ 3) - 0.13e2 / 0.59e2 * (eta ^ 2) - 0.594e3 / 0.59e2 * eta - 0.594e3 / 0.59e2) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.26e2 / 0.59e2 * (eta ^ 2) + 0.1188e4 / 0.59e2 * eta + 0.1188e4 / 0.59e2) * (ci2 ^ 6) + (0.69e2 / 0.59e2 * (eta ^ 3) - 0.27e2 / 0.59e2 * (eta ^ 2) - 0.726e3 / 0.59e2 * eta - 0.726e3 / 0.59e2) * (ci2 ^ 4) + (-0.10e2 / 0.59e2 * (eta ^ 3) + 0.14e2 / 0.59e2 * (eta ^ 2) + 0.132e3 / 0.59e2 * eta + 0.132e3 / 0.59e2) * (ci2 ^ 2) + (eta ^ 3) / 0.118e3 - 0.3e1 / 0.118e3 * (eta ^ 2) - 0.11e2 / 0.59e2 * eta - 0.11e2 / 0.59e2) * ((eta - 1) ^ 2) * (1 + eta) * cos((4 * f)) + 0.9e1 / 0.155e3 * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.11e2 / 0.9e1 * (ci2 ^ 4) - 0.2e1 / 0.9e1 * (ci2 ^ 2) + 0.1e1 / 0.54e2) * cos((6 * f))) * (1 + eta)) * R__e ^ 4 / a ^ 4 / (eta ^ 12) / (1 + eta) 0.90e2 * J ^ 2 * ((0.37e2 / 0.320e3 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((11 * f + 4 * g)) + 0.161e3 / 0.120e3 * ((ci2 - 1) ^ 2) * (1 + eta) * (ci2 ^ 4) * ((eta ^ 6) - 0.14897e5 / 0.1288e4 * (eta ^ 4) + 0.19575e5 / 0.644e3 * (eta ^ 2) - 0.27885e5 / 0.1288e4) * ((ci2 + 1) ^ 2) * sin((3 * f + 4 * g)) + 0.257e3 / 0.120e3 * ((ci2 - 1) ^ 2) * (1 + eta) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * ((eta ^ 6) - 0.22799e5 / 0.2056e4 * (eta ^ 4) + 0.29169e5 / 0.1028e4 * (eta ^ 2) - 0.40755e5 / 0.2056e4) * sin((5 * f + 4 * g)) + (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-4 * g + 3 * f)) / 0.64e2 - 0.7e1 / 0.256e3 * (ci2 - 1) * ((eta ^ 2) + 0.464e3 / 0.35e2 * eta + 0.464e3 / 0.35e2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin((2 * g + 9 * f)) - 0.3e1 / 0.1280e4 * (ci2 - 1) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 ^ 2) * (ci2 + 1) * ((eta ^ 2) + 0.208e3 / 0.3e1 * eta + 0.208e3 / 0.3e1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin((5 * f - 2 * g)) + 0.19e2 / 0.32e2 * (ci2 - 1) * (eta - 3) * (eta ^ 2) * (eta + 3) * (eta - 1) * ((1 + eta) ^ 2) * Delta * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((5 * f + 2 * g)) + (ci2 - 1) * (eta - 3) * (eta ^ 2) * (eta + 3) * (eta - 1) * ((1 + eta) ^ 2) * Delta * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((-2 * g + f)) / 0.32e2 - (ci2 - 1) * (eta ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * Delta * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((3 * f - 2 * g)) / 0.32e2 + 0.7e1 / 0.16e2 * (ci2 - 1) * (eta ^ 2) * (1 + eta) * Delta * (ci2 ^ 2) * (eta ^ 4 - 14 * eta ^ 2 + 21) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((f + 2 * g)) + 0.5e1 / 0.32e2 * (ci2 - 1) * (eta ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * Delta * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((2 * g + 7 * f)) + 0.13e2 / 0.16e2 * (ci2 - 1) * (eta ^ 2) * (1 + eta) * Delta * (ci2 ^ 2) * (eta ^ 4 - 14 * eta ^ 2 + 21) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((3 * f + 2 * g)) + 0.51e2 / 0.640e3 * sin(f) * ((-0.4644e4 / 0.17e2 * (eta ^ 5) + 0.4024e4 / 0.153e3 * (eta ^ 7) + 0.35824e5 / 0.51e2 * (eta ^ 3) - 0.3409e4 / 0.17e2 * (eta ^ 4) + 0.33061e5 / 0.51e2 * (eta ^ 2) - 0.8580e4 / 0.17e2 * eta + 0.469e3 / 0.153e3 * (eta ^ 6) + (eta ^ 8) - 0.8580e4 / 0.17e2) * (ci2 ^ 8) + (-0.66122e5 / 0.51e2 * (eta ^ 2) - 0.938e3 / 0.153e3 * (eta ^ 6) - 0.8048e4 / 0.153e3 * (eta ^ 7) + 0.6818e4 / 0.17e2 * (eta ^ 4) - 0.71648e5 / 0.51e2 * (eta ^ 3) + 0.17160e5 / 0.17e2 * eta + 0.9288e4 / 0.17e2 * (eta ^ 5) - (2 * eta ^ 8) + 0.17160e5 / 0.17e2) * (ci2 ^ 6) + (0.39544e5 / 0.51e2 * (eta ^ 2) + 0.43228e5 / 0.51e2 * (eta ^ 3) + 0.1556e4 / 0.51e2 * (eta ^ 7) - 0.8e1 / 0.17e2 * (eta ^ 6) - (324 * eta ^ 5) - 0.31460e5 / 0.51e2 * eta - 0.11584e5 / 0.51e2 * (eta ^ 4) + 0.4e1 / 0.3e1 * (eta ^ 8) - 0.31460e5 / 0.51e2) * (ci2 ^ 4) + (0.5720e4 / 0.51e2 - 0.2161e4 / 0.17e2 * (eta ^ 2) - 0.2468e4 / 0.17e2 * (eta ^ 3) - 0.644e3 / 0.153e3 * (eta ^ 7) + 0.541e3 / 0.153e3 * (eta ^ 6) + 0.864e3 / 0.17e2 * (eta ^ 5) + 0.1357e4 / 0.51e2 * (eta ^ 4) + 0.5720e4 / 0.51e2 * eta - (eta ^ 8) / 0.3e1) * (ci2 ^ 2) - 0.773e3 / 0.612e3 * (eta ^ 4) + (eta ^ 8) / 0.36e2 - 0.283e3 / 0.612e3 * (eta ^ 6) - 0.1430e4 / 0.153e3 * eta + 0.5863e4 / 0.612e3 * (eta ^ 2) - 0.1430e4 / 0.153e3 + 0.28e2 / 0.153e3 * (eta ^ 7) - 0.502e3 / 0.153e3 * (eta ^ 5) + 0.1696e4 / 0.153e3 * (eta ^ 3)) - 0.89e2 / 0.1280e4 * (ci2 - 1) * ((0.68071e5 / 0.89e2 * (eta ^ 2) + 0.71800e5 / 0.89e2 * (eta ^ 3) + 0.2296e4 / 0.89e2 * (eta ^ 7) + 0.293e3 / 0.89e2 * (eta ^ 6) - 0.25024e5 / 0.89e2 * (eta ^ 5) - 0.57200e5 / 0.89e2 * eta - 0.19317e5 / 0.89e2 * (eta ^ 4) + (eta ^ 8) - 0.57200e5 / 0.89e2) * (ci2 ^ 4) + (0.57200e5 / 0.89e2 - 0.68071e5 / 0.89e2 * (eta ^ 2) - 0.71800e5 / 0.89e2 * (eta ^ 3) - 0.2296e4 / 0.89e2 * (eta ^ 7) - 0.293e3 / 0.89e2 * (eta ^ 6) + 0.25024e5 / 0.89e2 * (eta ^ 5) + 0.19317e5 / 0.89e2 * (eta ^ 4) + 0.57200e5 / 0.89e2 * eta - (eta ^ 8)) * (ci2 ^ 2) - 0.20453e5 / 0.534e3 * (eta ^ 4) + (eta ^ 8) / 0.6e1 - 0.28600e5 / 0.267e3 + 0.557e3 / 0.534e3 * (eta ^ 6) - 0.28600e5 / 0.267e3 * eta + 0.69007e5 / 0.534e3 * (eta ^ 2) + 0.1280e4 / 0.267e3 * (eta ^ 7) - 0.4360e4 / 0.89e2 * (eta ^ 5) + 0.36368e5 / 0.267e3 * (eta ^ 3)) * (ci2 ^ 2) * (ci2 + 1) * sin((f + 2 * g)) - 0.231e3 / 0.1280e4 * (ci2 - 1) * (ci2 ^ 2) * (ci2 + 1) * ((0.142969e6 / 0.231e3 * (eta ^ 2) + 0.157768e6 / 0.231e3 * (eta ^ 3) + 0.1432e4 / 0.77e2 * (eta ^ 7) - 0.211e3 / 0.33e2 * (eta ^ 6) - 0.17728e5 / 0.77e2 * (eta ^ 5) - 0.11440e5 / 0.21e2 * eta - 0.34187e5 / 0.231e3 * (eta ^ 4) + (eta ^ 8) - 0.11440e5 / 0.21e2) * (ci2 ^ 4) + (0.11440e5 / 0.21e2 - 0.142969e6 / 0.231e3 * (eta ^ 2) - 0.157768e6 / 0.231e3 * (eta ^ 3) - 0.1432e4 / 0.77e2 * (eta ^ 7) + 0.211e3 / 0.33e2 * (eta ^ 6) + 0.17728e5 / 0.77e2 * (eta ^ 5) + 0.34187e5 / 0.231e3 * (eta ^ 4) + 0.11440e5 / 0.21e2 * eta - (eta ^ 8)) * (ci2 ^ 2) - 0.35099e5 / 0.1386e4 * (eta ^ 4) + (eta ^ 8) / 0.6e1 - 0.1229e4 / 0.1386e4 * (eta ^ 6) - 0.5720e4 / 0.63e2 * eta + 0.143569e6 / 0.1386e4 * (eta ^ 2) - 0.5720e4 / 0.63e2 + 0.2272e4 / 0.693e3 * (eta ^ 7) - 0.1288e4 / 0.33e2 * (eta ^ 5) + 0.11312e5 / 0.99e2 * (eta ^ 3)) * sin((3 * f + 2 * g)) + 0.99e2 / 0.640e3 * ((0.2390e4 / 0.99e2 * (eta ^ 5) - 0.59062e5 / 0.297e3 * (eta ^ 3) + 0.500e3 / 0.99e2 * (eta ^ 4) - 0.48649e5 / 0.297e3 * (eta ^ 2) + 0.3276e4 / 0.11e2 * eta + (eta ^ 6) + 0.3276e4 / 0.11e2) * (ci2 ^ 8) + (0.97298e5 / 0.297e3 * (eta ^ 2) - (2 * eta ^ 6) - 0.1000e4 / 0.99e2 * (eta ^ 4) + 0.118124e6 / 0.297e3 * (eta ^ 3) - 0.6552e4 / 0.11e2 * eta - 0.4780e4 / 0.99e2 * (eta ^ 5) - 0.6552e4 / 0.11e2) * (ci2 ^ 6) + (-0.2108e4 / 0.11e2 * (eta ^ 2) - 0.23600e5 / 0.99e2 * (eta ^ 3) + 0.4e1 / 0.3e1 * (eta ^ 6) + 0.932e3 / 0.33e2 * (eta ^ 5) + (364 * eta) + 0.92e2 / 0.33e2 * (eta ^ 4) + 0.364e3) * (ci2 ^ 4) + (-0.728e3 / 0.11e2 + 0.8267e4 / 0.297e3 * (eta ^ 2) + 0.11738e5 / 0.297e3 * (eta ^ 3) - (eta ^ 6) / 0.3e1 - 0.406e3 / 0.99e2 * (eta ^ 5) + 0.224e3 / 0.99e2 * (eta ^ 4) - 0.728e3 / 0.11e2 * eta) * (ci2 ^ 2) - 0.7e1 / 0.22e2 * (eta ^ 4) + (eta ^ 6) / 0.36e2 + 0.182e3 / 0.33e2 + 0.182e3 / 0.33e2 * eta - 0.247e3 / 0.132e3 * (eta ^ 2) + 0.7e1 / 0.33e2 * (eta ^ 5) - 0.845e3 / 0.297e3 * (eta ^ 3)) * (eta - 1) * (1 + eta) * sin((3 * f)) + 0.63e2 / 0.640e3 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((0.3902e4 / 0.189e3 * (eta ^ 3) + (eta ^ 4) + 0.1733e4 / 0.189e3 * (eta ^ 2) - (100 * eta) - 0.100e3) * (ci2 ^ 8) + (-0.3466e4 / 0.189e3 * (eta ^ 2) - (2 * eta ^ 4) - 0.7804e4 / 0.189e3 * (eta ^ 3) + (200 * eta) + 0.200e3) * (ci2 ^ 6) + (0.584e3 / 0.63e2 * (eta ^ 2) + 0.172e3 / 0.7e1 * (eta ^ 3) - 0.1100e4 / 0.9e1 * eta + 0.4e1 / 0.3e1 * (eta ^ 4) - 0.1100e4 / 0.9e1) * (ci2 ^ 4) + (0.200e3 / 0.9e1 - 0.19e2 / 0.189e3 * (eta ^ 2) - 0.106e3 / 0.27e2 * (eta ^ 3) - (eta ^ 4) / 0.3e1 + 0.200e3 / 0.9e1 * eta) * (ci2 ^ 2) + (eta ^ 4) / 0.36e2 - 0.50e2 / 0.27e2 - 0.50e2 / 0.27e2 * eta - 0.5e1 / 0.84e2 * (eta ^ 2) + 0.7e1 / 0.27e2 * (eta ^ 3)) * sin((5 * f)) + 0.3e1 / 0.128e3 * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (((eta ^ 2) + 0.84e2 / 0.5e1 * eta + 0.84e2 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta ^ 2) - 0.168e3 / 0.5e1 * eta - 0.168e3 / 0.5e1) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) + 0.308e3 / 0.15e2 * eta + 0.308e3 / 0.15e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 - 0.56e2 / 0.15e2 * eta - 0.56e2 / 0.15e2) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 + 0.14e2 / 0.45e2 * eta + 0.14e2 / 0.45e2) * sin((7 * f)) - 0.31e2 / 0.256e3 * (ci2 - 1) * (((eta ^ 4) + 0.316e3 / 0.31e2 * (eta ^ 3) - 0.491e3 / 0.155e3 * (eta ^ 2) - 0.2576e4 / 0.31e2 * eta - 0.2576e4 / 0.31e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.316e3 / 0.31e2 * (eta ^ 3) + 0.491e3 / 0.155e3 * (eta ^ 2) + 0.2576e4 / 0.31e2 * eta + 0.2576e4 / 0.31e2) * (ci2 ^ 2) + (eta ^ 4) / 0.6e1 + 0.724e3 / 0.465e3 * (eta ^ 3) - 0.623e3 / 0.930e3 * (eta ^ 2) - 0.1288e4 / 0.93e2 * eta - 0.1288e4 / 0.93e2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2) * (ci2 + 1) * sin((2 * g + 7 * f)) - 0.271e3 / 0.1280e4 * (ci2 - 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 6) + 0.3204e4 / 0.271e3 * (eta ^ 5) - 0.2686e4 / 0.271e3 * (eta ^ 4) - 0.38964e5 / 0.271e3 * (eta ^ 3) - 0.26801e5 / 0.271e3 * (eta ^ 2) + 0.74256e5 / 0.271e3 * eta + 0.74256e5 / 0.271e3) * (ci2 ^ 4) + (-(eta ^ 6) - 0.3204e4 / 0.271e3 * (eta ^ 5) + 0.2686e4 / 0.271e3 * (eta ^ 4) + 0.38964e5 / 0.271e3 * (eta ^ 3) + 0.26801e5 / 0.271e3 * (eta ^ 2) - 0.74256e5 / 0.271e3 * eta - 0.74256e5 / 0.271e3) * (ci2 ^ 2) + (eta ^ 6) / 0.6e1 + 0.1532e4 / 0.813e3 * (eta ^ 5) - 0.471e3 / 0.271e3 * (eta ^ 4) - 0.19108e5 / 0.813e3 * (eta ^ 3) - 0.26053e5 / 0.1626e4 * (eta ^ 2) + 0.12376e5 / 0.271e3 * eta + 0.12376e5 / 0.271e3) * sin((5 * f + 2 * g)) + 0.689e3 / 0.384e3 * ((ci2 - 1) ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * ((eta ^ 4) - 0.28803e5 / 0.3445e4 * (eta ^ 2) + 0.630e3 / 0.53e2) * sin((4 * g + 7 * f)) + (ci2 - 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 6 - 804 * eta ^ 5 - 850 * eta ^ 4 + 5332 * eta ^ 3 + 5361 * eta ^ 2 - 4368 * eta - 4368) * ci2 ^ 4) + ((-eta ^ 6 + 804 * eta ^ 5 + 850 * eta ^ 4 - 5332 * eta ^ 3 - 5361 * eta ^ 2 + 4368 * eta + 4368) * ci2 ^ 2) + (eta ^ 6) / 0.6e1 - 0.460e3 / 0.3e1 * (eta ^ 5) - (161 * eta ^ 4) + 0.2932e4 / 0.3e1 * (eta ^ 3) + 0.5893e4 / 0.6e1 * (eta ^ 2) - (728 * eta) - 0.728e3) * sin((-2 * g + f)) / 0.1280e4 - 0.11e2 / 0.1280e4 * (ci2 - 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 4) + (100 * eta ^ 3) + (95 * eta ^ 2) - 0.3920e4 / 0.11e2 * eta - 0.3920e4 / 0.11e2) * (ci2 ^ 4) + (-(eta ^ 4) - (100 * eta ^ 3) - (95 * eta ^ 2) + 0.3920e4 / 0.11e2 * eta + 0.3920e4 / 0.11e2) * (ci2 ^ 2) + (eta ^ 4) / 0.6e1 + 0.204e3 / 0.11e2 * (eta ^ 3) + 0.1169e4 / 0.66e2 * (eta ^ 2) - 0.1960e4 / 0.33e2 * eta - 0.1960e4 / 0.33e2) * sin((3 * f - 2 * g)) + 0.1427e4 / 0.1920e4 * ((eta ^ 2) - 0.6510e4 / 0.1427e4) * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * sin((9 * f + 4 * g)) - 0.29e2 / 0.1920e4 * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.210e3 / 0.29e2) * sin((-4 * g + f)) + 0.763e3 / 0.1920e4 * ((ci2 - 1) ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * ((eta ^ 4) - 0.7341e4 / 0.763e3 * (eta ^ 2) + 0.1638e4 / 0.109e3) * sin((4 * g + f))) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * ((ci2 - 1) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin((10 * f + 2 * g)) / 0.40e2 + 0.3e1 / 0.32e2 * (ci2 - 1) * (((eta ^ 3) + 0.5e1 / 0.6e1 * (eta ^ 2) - (10 * eta) - 0.10e2) * (ci2 ^ 4) + (-(eta ^ 3) - 0.5e1 / 0.6e1 * (eta ^ 2) + (10 * eta) + 0.10e2) * (ci2 ^ 2) + 0.17e2 / 0.90e2 * (eta ^ 3) + 0.29e2 / 0.180e3 * (eta ^ 2) - 0.5e1 / 0.3e1 * eta - 0.5e1 / 0.3e1) * ((eta - 1) ^ 3) * ((1 + eta) ^ 2) * (ci2 ^ 2) * (ci2 + 1) * sin((4 * f - 2 * g)) + (ci2 - 1) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin((6 * f - 2 * g)) / 0.80e2 + 0.7e1 / 0.40e2 * (ci2 - 1) * (((eta ^ 5) - 0.11e2 / 0.2e1 * (eta ^ 4) - 0.645e3 / 0.14e2 * (eta ^ 3) - 0.128e3 / 0.7e1 * (eta ^ 2) + 0.325e3 / 0.2e1 * eta + 0.325e3 / 0.2e1) * (ci2 ^ 4) + (-(eta ^ 5) + 0.11e2 / 0.2e1 * (eta ^ 4) + 0.645e3 / 0.14e2 * (eta ^ 3) + 0.128e3 / 0.7e1 * (eta ^ 2) - 0.325e3 / 0.2e1 * eta - 0.325e3 / 0.2e1) * (ci2 ^ 2) + (eta ^ 5) / 0.7e1 - 0.79e2 / 0.84e2 * (eta ^ 4) - 0.617e3 / 0.84e2 * (eta ^ 3) - 0.19e2 / 0.7e1 * (eta ^ 2) + 0.325e3 / 0.12e2 * eta + 0.325e3 / 0.12e2) * ((eta - 1) ^ 2) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * sin((6 * f + 2 * g)) + 0.13e2 / 0.160e3 * (ci2 - 1) * ((eta - 1) ^ 3) * ((1 + eta) ^ 2) * (ci2 ^ 2) * (ci2 + 1) * (((eta ^ 3) - 0.75e2 / 0.26e2 * (eta ^ 2) - (30 * eta) - 0.30e2) * (ci2 ^ 4) + (-(eta ^ 3) + 0.75e2 / 0.26e2 * (eta ^ 2) + (30 * eta) + 0.30e2) * (ci2 ^ 2) + 0.11e2 / 0.78e2 * (eta ^ 3) - 0.79e2 / 0.156e3 * (eta ^ 2) - (5 * eta) - 0.5e1) * sin((8 * f + 2 * g)) + 0.3e1 / 0.20e2 * (((eta ^ 5) + 0.3e1 / 0.4e1 * (eta ^ 4) - 0.251e3 / 0.12e2 * (eta ^ 3) - 0.41e2 / 0.2e1 * (eta ^ 2) + 0.455e3 / 0.12e2 * eta + 0.455e3 / 0.12e2) * (ci2 ^ 4) + (-(eta ^ 5) - 0.3e1 / 0.4e1 * (eta ^ 4) + 0.251e3 / 0.12e2 * (eta ^ 3) + 0.41e2 / 0.2e1 * (eta ^ 2) - 0.455e3 / 0.12e2 * eta - 0.455e3 / 0.12e2) * (ci2 ^ 2) + 0.7e1 / 0.36e2 * (eta ^ 5) + 0.11e2 / 0.72e2 * (eta ^ 4) - 0.275e3 / 0.72e2 * (eta ^ 3) - 0.15e2 / 0.4e1 * (eta ^ 2) + 0.455e3 / 0.72e2 * eta + 0.455e3 / 0.72e2) * (ci2 - 1) * ((eta - 1) ^ 2) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * sin((-2 * g + 2 * f)) + 0.29e2 / 0.80e2 * (ci2 - 1) * (((eta ^ 8) - 0.72e2 / 0.29e2 * (eta ^ 7) - 0.918e3 / 0.29e2 * (eta ^ 6) + 0.488e3 / 0.29e2 * (eta ^ 5) + 0.5392e4 / 0.29e2 * (eta ^ 4) - 0.576e3 / 0.29e2 * (eta ^ 3) - 0.10554e5 / 0.29e2 * (eta ^ 2) + 0.6435e4 / 0.29e2) * (ci2 ^ 4) + (-(eta ^ 8) + 0.72e2 / 0.29e2 * (eta ^ 7) + 0.918e3 / 0.29e2 * (eta ^ 6) - 0.488e3 / 0.29e2 * (eta ^ 5) - 0.5392e4 / 0.29e2 * (eta ^ 4) + 0.576e3 / 0.29e2 * (eta ^ 3) + 0.10554e5 / 0.29e2 * (eta ^ 2) - 0.6435e4 / 0.29e2) * (ci2 ^ 2) + 0.11e2 / 0.58e2 * (eta ^ 8) - 0.12e2 / 0.29e2 * (eta ^ 7) - 0.163e3 / 0.29e2 * (eta ^ 6) + 0.244e3 / 0.87e2 * (eta ^ 5) + 0.922e3 / 0.29e2 * (eta ^ 4) - 0.96e2 / 0.29e2 * (eta ^ 3) - 0.1773e4 / 0.29e2 * (eta ^ 2) + 0.2145e4 / 0.58e2) * (ci2 ^ 2) * (ci2 + 1) * sin((2 * g + 2 * f)) + 0.11e2 / 0.32e2 * (ci2 - 1) * (eta - 1) * (((eta ^ 7) - 0.379e3 / 0.110e3 * (eta ^ 6) - 0.2228e4 / 0.55e2 * (eta ^ 5) - 0.547e3 / 0.55e2 * (eta ^ 4) + 0.11899e5 / 0.55e2 * (eta ^ 3) + 0.19757e5 / 0.110e3 * (eta ^ 2) - 0.1274e4 / 0.5e1 * eta - 0.1274e4 / 0.5e1) * (ci2 ^ 4) + (-(eta ^ 7) + 0.379e3 / 0.110e3 * (eta ^ 6) + 0.2228e4 / 0.55e2 * (eta ^ 5) + 0.547e3 / 0.55e2 * (eta ^ 4) - 0.11899e5 / 0.55e2 * (eta ^ 3) - 0.19757e5 / 0.110e3 * (eta ^ 2) + 0.1274e4 / 0.5e1 * eta + 0.1274e4 / 0.5e1) * (ci2 ^ 2) + 0.19e2 / 0.110e3 * (eta ^ 7) - 0.25e2 / 0.44e2 * (eta ^ 6) - 0.1112e4 / 0.165e3 * (eta ^ 5) - 0.181e3 / 0.110e3 * (eta ^ 4) + 0.2369e4 / 0.66e2 * (eta ^ 3) + 0.19649e5 / 0.660e3 * (eta ^ 2) - 0.637e3 / 0.15e2 * eta - 0.637e3 / 0.15e2) * (ci2 ^ 2) * (ci2 + 1) * sin((2 * g + 4 * f)) - 0.19e2 / 0.320e3 * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((eta ^ 2) - 0.255e3 / 0.19e2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * sin((10 * f + 4 * g)) - (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((12 * f + 4 * g)) / 0.128e3 - (ci2 ^ 4) * (eta ^ 2 - 15) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((2 * f - 4 * g)) / 0.320e3 - 0.29e2 / 0.320e3 * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * ((eta ^ 6) - 0.113e3 / 0.3e1 * (eta ^ 4) + 0.4943e4 / 0.29e2 * (eta ^ 2) - 0.5005e4 / 0.29e2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * sin((2 * f + 4 * g)) - (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((4 * f - 4 * g)) / 0.640e3 - 0.33e2 / 0.160e3 * ((ci2 - 1) ^ 2) * ((eta ^ 8) - 0.1270e4 / 0.33e2 * (eta ^ 6) + 0.21140e5 / 0.99e2 * (eta ^ 4) - 0.4046e4 / 0.11e2 * (eta ^ 2) + 0.195e3) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * sin((4 * f + 4 * g)) - 0.81e2 / 0.320e3 * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * ((eta ^ 6) - 0.8119e4 / 0.243e3 * (eta ^ 4) + 0.11423e5 / 0.81e2 * (eta ^ 2) - 0.11011e5 / 0.81e2) * ((ci2 + 1) ^ 2) * sin((6 * f + 4 * g)) - 0.11e2 / 0.64e2 * ((ci2 - 1) ^ 2) * ((eta ^ 4) - 0.4108e4 / 0.165e3 * (eta ^ 2) + 0.637e3 / 0.11e2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 + 1) ^ 2) * sin((8 * f + 4 * g)) + 0.11e2 / 0.8e1 * (ci2 - 1) * (eta ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * Delta * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((6 * f + 2 * g)) - (ci2 - 1) * (eta ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * Delta * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((-2 * g + 2 * f)) / 0.8e1 + 0.15e2 / 0.4e1 * (ci2 - 1) * (eta ^ 2) * Delta * (ci2 ^ 2) * ((eta ^ 4) - 0.14e2 / 0.3e1 * (eta ^ 2) + 0.21e2 / 0.5e1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((2 * g + 2 * f)) + (0.4e1 * (ci2 - 1) * (eta ^ 2) * (1 + eta) * Delta * (eta ^ 2 - 3) * (ci2 ^ 2) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((2 * g + 4 * f)) + ((0.425e3 / 0.32e2 * (eta ^ 5) - 0.107e3 / 0.240e3 * (eta ^ 7) - 0.2243e4 / 0.40e2 * (eta ^ 3) + 0.1207e4 / 0.160e3 * (eta ^ 4) - 0.7961e4 / 0.160e3 * (eta ^ 2) + 0.9009e4 / 0.160e3 * eta + 0.227e3 / 0.480e3 * (eta ^ 6) + 0.9009e4 / 0.160e3) * (ci2 ^ 8) + (0.7961e4 / 0.80e2 * (eta ^ 2) - 0.227e3 / 0.240e3 * (eta ^ 6) + 0.107e3 / 0.120e3 * (eta ^ 7) - 0.1207e4 / 0.80e2 * (eta ^ 4) + 0.2243e4 / 0.20e2 * (eta ^ 3) - 0.9009e4 / 0.80e2 * eta - 0.425e3 / 0.16e2 * (eta ^ 5) - 0.9009e4 / 0.80e2) * (ci2 ^ 6) + (-0.2361e4 / 0.40e2 * (eta ^ 2) - 0.1349e4 / 0.20e2 * (eta ^ 3) - 0.41e2 / 0.80e2 * (eta ^ 7) + 0.57e2 / 0.80e2 * (eta ^ 6) + 0.2503e4 / 0.160e3 * (eta ^ 5) + 0.11011e5 / 0.160e3 * eta + 0.1279e4 / 0.160e3 * (eta ^ 4) + 0.11011e5 / 0.160e3) * (ci2 ^ 4) + (-0.1001e4 / 0.80e2 + 0.1483e4 / 0.160e3 * (eta ^ 2) + 0.91e2 / 0.8e1 * (eta ^ 3) + (eta ^ 7) / 0.15e2 - 0.23e2 / 0.96e2 * (eta ^ 6) - 0.189e3 / 0.80e2 * (eta ^ 5) - 0.9e1 / 0.20e2 * (eta ^ 4) - 0.1001e4 / 0.80e2 * eta) * (ci2 ^ 2) - (eta ^ 4) / 0.48e2 + 0.1001e4 / 0.960e3 + 0.3e1 / 0.128e3 * (eta ^ 6) + 0.1001e4 / 0.960e3 * eta - 0.429e3 / 0.640e3 * (eta ^ 2) - (eta ^ 7) / 0.480e3 + 0.133e3 / 0.960e3 * (eta ^ 5) - 0.203e3 / 0.240e3 * (eta ^ 3)) * sin((2 * f)) - 0.209e3 / 0.480e3 * (((eta ^ 5) - 0.262e3 / 0.11e2 * (eta ^ 3) - 0.17e2 / 0.19e2 * (eta ^ 4) - 0.3502e4 / 0.209e3 * (eta ^ 2) + 0.12285e5 / 0.209e3 * eta + 0.12285e5 / 0.209e3) * (ci2 ^ 8) + (0.7004e4 / 0.209e3 * (eta ^ 2) + 0.34e2 / 0.19e2 * (eta ^ 4) + 0.524e3 / 0.11e2 * (eta ^ 3) - 0.24570e5 / 0.209e3 * eta - (2 * eta ^ 5) - 0.24570e5 / 0.209e3) * (ci2 ^ 6) + (-0.3978e4 / 0.209e3 * (eta ^ 2) - 0.5946e4 / 0.209e3 * (eta ^ 3) + 0.243e3 / 0.209e3 * (eta ^ 5) + 0.1365e4 / 0.19e2 * eta - 0.15e2 / 0.11e2 * (eta ^ 4) + 0.1365e4 / 0.19e2) * (ci2 ^ 4) + (-0.2730e4 / 0.209e3 + 0.476e3 / 0.209e3 * (eta ^ 2) + 0.88e2 / 0.19e2 * (eta ^ 3) - 0.34e2 / 0.209e3 * (eta ^ 5) + 0.98e2 / 0.209e3 * (eta ^ 4) - 0.2730e4 / 0.209e3 * eta) * (ci2 ^ 2) - (eta ^ 4) / 0.22e2 + 0.455e3 / 0.418e3 + 0.455e3 / 0.418e3 * eta - 0.26e2 / 0.209e3 * (eta ^ 2) + 0.3e1 / 0.418e3 * (eta ^ 5) - 0.67e2 / 0.209e3 * (eta ^ 3)) * (eta - 1) * (1 + eta) * sin((4 * f)) - 0.43e2 / 0.240e3 * (((eta ^ 3) - 0.31e2 / 0.86e2 * (eta ^ 2) - 0.1215e4 / 0.86e2 * eta - 0.1215e4 / 0.86e2) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.31e2 / 0.43e2 * (eta ^ 2) + 0.1215e4 / 0.43e2 * eta + 0.1215e4 / 0.43e2) * (ci2 ^ 6) + (0.51e2 / 0.43e2 * (eta ^ 3) - 0.27e2 / 0.43e2 * (eta ^ 2) - 0.1485e4 / 0.86e2 * eta - 0.1485e4 / 0.86e2) * (ci2 ^ 4) + (-0.8e1 / 0.43e2 * (eta ^ 3) + 0.23e2 / 0.86e2 * (eta ^ 2) + 0.135e3 / 0.43e2 * eta + 0.135e3 / 0.43e2) * (ci2 ^ 2) + (eta ^ 3) / 0.86e2 - 0.9e1 / 0.344e3 * (eta ^ 2) - 0.45e2 / 0.172e3 * eta - 0.45e2 / 0.172e3) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((6 * f)) - 0.9e1 / 0.320e3 * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.11e2 / 0.9e1 * (ci2 ^ 4) - 0.2e1 / 0.9e1 * (ci2 ^ 2) + 0.1e1 / 0.54e2) * sin((8 * f)) + (((-0.8e1 / 0.5e1 * (eta ^ 5) + 0.11e2 / 0.160e3 * (eta ^ 7) + 0.1447e4 / 0.160e3 * (eta ^ 3) - 0.113e3 / 0.160e3 * (eta ^ 4) + 0.2679e4 / 0.320e3 * (eta ^ 2) - 0.1001e4 / 0.80e2 * eta - 0.33e2 / 0.320e3 * (eta ^ 6) - 0.1001e4 / 0.80e2) * (ci2 ^ 4) + (0.33e2 / 0.320e3 * (eta ^ 6) + 0.8e1 / 0.5e1 * (eta ^ 5) + 0.113e3 / 0.160e3 * (eta ^ 4) - 0.1447e4 / 0.160e3 * (eta ^ 3) + 0.1001e4 / 0.80e2 * eta - 0.11e2 / 0.160e3 * (eta ^ 7) - 0.2679e4 / 0.320e3 * (eta ^ 2) + 0.1001e4 / 0.80e2) * (ci2 ^ 2) - 0.29e2 / 0.1920e4 * (eta ^ 6) - 0.25e2 / 0.192e3 * (eta ^ 4) - 0.1001e4 / 0.480e3 - 0.67e2 / 0.240e3 * (eta ^ 5) + 0.1441e4 / 0.960e3 * (eta ^ 3) - 0.1001e4 / 0.480e3 * eta + 0.13e2 / 0.960e3 * (eta ^ 7) + 0.889e3 / 0.640e3 * (eta ^ 2)) * sin((2 * g)) + (1 + eta) * (-(ci2 - 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 + 1) * ((eta ^ 4) - 0.496e3 / 0.15e2 * (eta ^ 2) + 0.91e2) * sin((4 * g)) / 0.64e2 + cos((2 * g)) * (eta ^ 2) * Delta * (eta ^ 2 - 3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1))) * (ci2 - 1) * (ci2 ^ 2) * (ci2 + 1)) * (eta - 1))) * R__e ^ 4 / (eta ^ 15) / a ^ 3 / (1 + eta) 0.171e3 / 0.2e1 * J ^ 2 * (ci2 ^ 3) * ((0.5e1 / 0.76e2 * ((eta ^ 2) + 0.48e2 / 0.5e1 * eta + 0.48e2 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-h + 2 * g + 7 * f)) - 0.77e2 / 0.114e3 * (ci2 ^ 4) * (ci2 - 1) * ((eta ^ 2) - 0.30e2 / 0.7e1) * (ci2 + 1) * ((1 + eta) ^ 2) * (eta - 1) * cos((h + 4 * g + f)) + 0.30e2 / 0.19e2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (ci2 ^ 2) * (eta ^ 2) * (eta ^ 2 - 5) * Delta * (1 + eta) * sin((h + f + 2 * g)) + 0.113e3 / 0.114e3 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.39e2 / 0.113e3) * (eta ^ 6) + (0.650e3 / 0.113e3 * (ci2 ^ 4) - 0.1625e4 / 0.226e3 * (ci2 ^ 2) + 0.443e3 / 0.226e3) * (eta ^ 5) + (0.144e3 / 0.113e3 * (ci2 ^ 4) - 0.180e3 / 0.113e3 * (ci2 ^ 2) + 0.103e3 / 0.226e3) * (eta ^ 4) + (-0.3890e4 / 0.113e3 * (ci2 ^ 4) + 0.9725e4 / 0.226e3 * (ci2 ^ 2) - 0.2607e4 / 0.226e3) * (eta ^ 3) + (-0.3329e4 / 0.113e3 * (ci2 ^ 4) + 0.16645e5 / 0.452e3 * (ci2 ^ 2) - 0.2233e4 / 0.226e3) * (eta ^ 2) + (0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.5940e4 / 0.113e3 * (ci2 ^ 2) + 0.1584e4 / 0.113e3) * eta + 0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.5940e4 / 0.113e3 * (ci2 ^ 2) + 0.1584e4 / 0.113e3) * cos((h + 3 * f + 2 * g)) + 0.87e2 / 0.38e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.91e2 / 0.261e3) * (eta ^ 6) + (0.382e3 / 0.87e2 * (ci2 ^ 4) - 0.955e3 / 0.174e3 * (ci2 ^ 2) + 0.265e3 / 0.174e3) * (eta ^ 5) + (0.80e2 / 0.29e2 * (ci2 ^ 4) - 0.100e3 / 0.29e2 * (ci2 ^ 2) + 0.503e3 / 0.522e3) * (eta ^ 4) + (-0.1558e4 / 0.87e2 * (ci2 ^ 4) + 0.3895e4 / 0.174e3 * (ci2 ^ 2) - 0.3167e4 / 0.522e3) * (eta ^ 3) + (-0.1511e4 / 0.87e2 * (ci2 ^ 4) + 0.7555e4 / 0.348e3 * (ci2 ^ 2) - 0.3073e4 / 0.522e3) * (eta ^ 2) + (0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.660e3 / 0.29e2 * (ci2 ^ 2) + 0.176e3 / 0.29e2) * eta + 0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.660e3 / 0.29e2 * (ci2 ^ 2) + 0.176e3 / 0.29e2) * cos((h + f + 2 * g)) + 0.17e2 / 0.76e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta ^ 4) + (0.132e3 / 0.17e2 * (ci2 ^ 4) - 0.165e3 / 0.17e2 * (ci2 ^ 2) + 0.43e2 / 0.17e2) * (eta ^ 3) + (-0.29e2 / 0.17e2 * (ci2 ^ 4) + 0.145e3 / 0.68e2 * (ci2 ^ 2) - 0.32e2 / 0.51e2) * (eta ^ 2) + (-0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.1100e4 / 0.17e2 * (ci2 ^ 2) - 0.880e3 / 0.51e2) * eta - 0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.1100e4 / 0.17e2 * (ci2 ^ 2) - 0.880e3 / 0.51e2) * (1 + eta) * (eta - 1) * cos((h + 5 * f + 2 * g)) - 0.3e1 / 0.38e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 2) + ((12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * eta + (12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * cos((-h + 5 * f)) - 0.11e2 / 0.38e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.554e3 / 0.33e2 * (ci2 ^ 4) - 0.554e3 / 0.33e2 * (ci2 ^ 2) + 0.49e2 / 0.33e2) * (eta ^ 3) + (0.305e3 / 0.33e2 * (ci2 ^ 4) - 0.305e3 / 0.33e2 * (ci2 ^ 2) + 0.5e1 / 0.22e2) * (eta ^ 2) + (-(60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * eta - (60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * (1 + eta) * (eta - 1) * cos((-h + 3 * f)) + 0.5e1 / 0.76e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta ^ 3) + (0.351e3 / 0.5e1 * (ci2 ^ 4) - 0.351e3 / 0.4e1 * (ci2 ^ 2) + 0.364e3 / 0.15e2) * (eta ^ 2) - (176 * ci2 ^ 4) + (220 * ci2 ^ 2) - 0.176e3 / 0.3e1) * ((1 + eta) ^ 2) * (eta - 1) * cos((-h - 2 * g + f)) - 0.9e1 / 0.19e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 6) + (0.29e2 / 0.18e2 + 0.187e3 / 0.9e1 * (ci2 ^ 4) - 0.187e3 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 5) + (-0.5e1 / 0.18e2 + 0.85e2 / 0.9e1 * (ci2 ^ 4) - 0.85e2 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 4) + (-0.619e3 / 0.54e2 - 0.3185e4 / 0.27e2 * (ci2 ^ 4) + 0.3185e4 / 0.27e2 * (ci2 ^ 2)) * (eta ^ 3) + (0.2834e4 / 0.27e2 * (ci2 ^ 2) - 0.251e3 / 0.27e2 - 0.2834e4 / 0.27e2 * (ci2 ^ 4)) * (eta ^ 2) + (0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2)) * eta + 0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2)) * cos((-h + f)) + 0.11e2 / 0.18e2 * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.554e3 / 0.33e2 * (ci2 ^ 4) - 0.554e3 / 0.33e2 * (ci2 ^ 2) + 0.49e2 / 0.33e2) * (eta ^ 3) + (0.305e3 / 0.33e2 * (ci2 ^ 4) - 0.305e3 / 0.33e2 * (ci2 ^ 2) + 0.5e1 / 0.22e2) * (eta ^ 2) + (-(60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * eta - (60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * (1 + eta) * (eta - 1) * cos((h + 3 * f)) + ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 2) + ((12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * eta + (12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * cos((h + 5 * f)) / 0.6e1 + (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 6) + (0.29e2 / 0.18e2 + 0.187e3 / 0.9e1 * (ci2 ^ 4) - 0.187e3 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 5) + (-0.5e1 / 0.18e2 + 0.85e2 / 0.9e1 * (ci2 ^ 4) - 0.85e2 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 4) + (-0.619e3 / 0.54e2 - 0.3185e4 / 0.27e2 * (ci2 ^ 4) + 0.3185e4 / 0.27e2 * (ci2 ^ 2)) * (eta ^ 3) + (0.2834e4 / 0.27e2 * (ci2 ^ 2) - 0.251e3 / 0.27e2 - 0.2834e4 / 0.27e2 * (ci2 ^ 4)) * (eta ^ 2) + (0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2)) * eta + 0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2)) * cos((h + f))) + 0.113e3 / 0.114e3 * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.43e2 / 0.452e3) * (eta ^ 6) + (0.650e3 / 0.113e3 * (ci2 ^ 4) - 0.975e3 / 0.226e3 * (ci2 ^ 2) + 0.59e2 / 0.113e3) * (eta ^ 5) + (0.144e3 / 0.113e3 * (ci2 ^ 4) - 0.108e3 / 0.113e3 * (ci2 ^ 2) + 0.31e2 / 0.226e3) * (eta ^ 4) + (-0.3890e4 / 0.113e3 * (ci2 ^ 4) + 0.5835e4 / 0.226e3 * (ci2 ^ 2) - 0.331e3 / 0.113e3) * (eta ^ 3) + (-0.3329e4 / 0.113e3 * (ci2 ^ 4) + 0.9987e4 / 0.452e3 * (ci2 ^ 2) - 0.1137e4 / 0.452e3) * (eta ^ 2) + (0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.3564e4 / 0.113e3 * (ci2 ^ 2) + 0.396e3 / 0.113e3) * eta + 0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.3564e4 / 0.113e3 * (ci2 ^ 2) + 0.396e3 / 0.113e3) * (ci2 - 1) * (ci2 + 1) * cos((-h + 3 * f + 2 * g)) + 0.87e2 / 0.38e2 * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.103e3 / 0.1044e4) * (eta ^ 6) + (0.382e3 / 0.87e2 * (ci2 ^ 4) - 0.191e3 / 0.58e2 * (ci2 ^ 2) + 0.37e2 / 0.87e2) * (eta ^ 5) + (0.80e2 / 0.29e2 * (ci2 ^ 4) - 0.60e2 / 0.29e2 * (ci2 ^ 2) + 0.143e3 / 0.522e3) * (eta ^ 4) + (-0.1558e4 / 0.87e2 * (ci2 ^ 4) + 0.779e3 / 0.58e2 * (ci2 ^ 2) - 0.415e3 / 0.261e3) * (eta ^ 3) + (-0.1511e4 / 0.87e2 * (ci2 ^ 4) + 0.1511e4 / 0.116e3 * (ci2 ^ 2) - 0.1613e4 / 0.1044e4) * (eta ^ 2) + (0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.396e3 / 0.29e2 * (ci2 ^ 2) + 0.44e2 / 0.29e2) * eta + 0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.396e3 / 0.29e2 * (ci2 ^ 2) + 0.44e2 / 0.29e2) * (ci2 - 1) * (ci2 + 1) * cos((-h + f + 2 * g)) + (ci2 ^ 2) * (eta ^ 2 + 48 * eta + 48) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-h + 3 * f - 2 * g)) / 0.76e2 - 0.3e1 / 0.19e2 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * cos((-h - 4 * g + f)) - 0.55e2 / 0.38e2 * (ci2 ^ 4) * ((eta ^ 4) - 0.1069e4 / 0.165e3 * (eta ^ 2) + 0.36e2 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * cos((h + 3 * f + 4 * g)) - 0.63e2 / 0.38e2 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4) - 0.125e3 / 0.21e2 * (eta ^ 2) + 0.44e2 / 0.7e1) * (1 + eta) * cos((h + 5 * f + 4 * g)) + 0.17e2 / 0.76e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (eta ^ 4) + (0.132e3 / 0.17e2 * (ci2 ^ 4) - 0.99e2 / 0.17e2 * (ci2 ^ 2) + 0.10e2 / 0.17e2) * (eta ^ 3) + (-0.29e2 / 0.17e2 * (ci2 ^ 4) + 0.87e2 / 0.68e2 * (ci2 ^ 2) - 0.41e2 / 0.204e3) * (eta ^ 2) + (-0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.660e3 / 0.17e2 * (ci2 ^ 2) - 0.220e3 / 0.51e2) * eta - 0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.660e3 / 0.17e2 * (ci2 ^ 2) - 0.220e3 / 0.51e2) * (1 + eta) * (eta - 1) * cos((-h + 5 * f + 2 * g)) - 0.3e1 / 0.19e2 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * cos((h + 9 * f + 4 * g)) + 0.5e1 / 0.76e2 * (ci2 ^ 2) * ((eta ^ 2) + 0.48e2 / 0.5e1 * eta + 0.48e2 / 0.5e1) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((h + 2 * g + 7 * f)) - 0.55e2 / 0.38e2 * (ci2 ^ 2) * ((eta ^ 4) - 0.1069e4 / 0.165e3 * (eta ^ 2) + 0.36e2 / 0.5e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * cos((-h + 3 * f + 4 * g)) - 0.63e2 / 0.38e2 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4) - 0.125e3 / 0.21e2 * (eta ^ 2) + 0.44e2 / 0.7e1) * (1 + eta) * cos((-h + 5 * f + 4 * g)) - 0.3e1 / 0.19e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 9 * f + 4 * g)) - 0.3e1 / 0.19e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((h - 4 * g + f)) + 0.5e1 / 0.76e2 * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * (eta - 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (eta ^ 3) + (0.351e3 / 0.5e1 * (ci2 ^ 4) - 0.1053e4 / 0.20e2 * (ci2 ^ 2) + 0.403e3 / 0.60e2) * (eta ^ 2) - (176 * ci2 ^ 4) + (132 * ci2 ^ 2) - 0.44e2 / 0.3e1) * cos((h - 2 * g + f)) - 0.10e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * ((1 + eta) ^ 2) * (eta - 1) * sin((h - 2 * g + f)) + 0.30e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * (eta ^ 2 - 5) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (1 + eta) * sin((-h + 3 * f + 2 * g)) + 0.10e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * ((1 + eta) ^ 2) * (eta - 1) * sin((-h + 5 * f + 2 * g)) + 0.30e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * (eta ^ 2 - 5) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (1 + eta) * sin((-h + f + 2 * g)) + 0.30e2 / 0.19e2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (ci2 ^ 2) * (eta ^ 2) * (eta ^ 2 - 5) * Delta * (1 + eta) * sin((h + 3 * f + 2 * g)) - 0.101e3 / 0.114e3 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) - 0.330e3 / 0.101e3) * ((1 + eta) ^ 2) * (eta - 1) * cos((h + 4 * g + 7 * f)) - 0.10e2 / 0.19e2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (ci2 ^ 2) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * (eta - 1) * sin((-h - 2 * g + f)) - 0.77e2 / 0.114e3 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((eta ^ 2) - 0.30e2 / 0.7e1) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * (eta - 1) * cos((-h + 4 * g + f)) + (ci2 - 1) * (ci2 + 1) * (eta ^ 2 + 48 * eta + 48) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((h + 3 * f - 2 * g)) / 0.76e2 - 0.101e3 / 0.114e3 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.330e3 / 0.101e3) * ((1 + eta) ^ 2) * (eta - 1) * cos((-h + 4 * g + 7 * f)) + 0.10e2 / 0.19e2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (ci2 ^ 2) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * (eta - 1) * sin((h + 5 * f + 2 * g))) * sqrt((-eta ^ 2 + 1)) + (-0.22e2 / 0.19e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.23e2 / 0.66e2) * (eta ^ 6) + (-0.32e2 / 0.11e2 * (ci2 ^ 4) + 0.40e2 / 0.11e2 * (ci2 ^ 2) - 0.1e1) * (eta ^ 5) + (-(18 * ci2 ^ 4) + 0.45e2 / 0.2e1 * (ci2 ^ 2) - 0.135e3 / 0.22e2) * (eta ^ 4) + (0.32e2 / 0.11e2 * (ci2 ^ 4) - 0.40e2 / 0.11e2 * (ci2 ^ 2) + 0.32e2 / 0.33e2) * (eta ^ 3) + (0.593e3 / 0.11e2 * (ci2 ^ 4) - 0.2965e4 / 0.44e2 * (ci2 ^ 2) + 0.598e3 / 0.33e2) * (eta ^ 2) - (42 * ci2 ^ 4) + 0.105e3 / 0.2e1 * (ci2 ^ 2) - 0.14e2) * cos((h + 2 * g + 2 * f)) + cos(h) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (((ci2 ^ 4) - (ci2 ^ 2) - 0.1e1 / 0.57e2) * (eta ^ 6) + (-0.48e2 / 0.19e2 * (ci2 ^ 4) + 0.48e2 / 0.19e2 * (ci2 ^ 2) - 0.8e1 / 0.19e2) * (eta ^ 5) + (-0.580e3 / 0.19e2 * (ci2 ^ 4) + 0.580e3 / 0.19e2 * (ci2 ^ 2) - 0.46e2 / 0.19e2) * (eta ^ 4) + (0.128e3 / 0.19e2 * (ci2 ^ 4) - 0.128e3 / 0.19e2 * (ci2 ^ 2) + 0.64e2 / 0.57e2) * (eta ^ 3) + (0.5201e4 / 0.57e2 * (ci2 ^ 4) - 0.5201e4 / 0.57e2 * (ci2 ^ 2) + 0.167e3 / 0.19e2) * (eta ^ 2) - 0.1386e4 / 0.19e2 * (ci2 ^ 4) + 0.1386e4 / 0.19e2 * (ci2 ^ 2) - 0.154e3 / 0.19e2) - 0.7e1 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (eta ^ 5) + (-(3 * ci2 ^ 4) + 0.9e1 / 0.4e1 * (ci2 ^ 2) - 0.1e1 / 0.4e1) * (eta ^ 4) + (-0.204e3 / 0.7e1 * (ci2 ^ 4) + 0.153e3 / 0.7e1 * (ci2 ^ 2) - 0.101e3 / 0.42e2) * (eta ^ 3) + (-0.124e3 / 0.7e1 * (ci2 ^ 4) + 0.93e2 / 0.7e1 * (ci2 ^ 2) - 0.61e2 / 0.42e2) * (eta ^ 2) + (0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.1485e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.28e2) * eta + 0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.1485e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.28e2) * cos((-h + 2 * g + 4 * f)) + 0.3e1 / 0.38e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.9e1) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((-h + 6 * f)) - 0.77e2 / 0.57e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.31e2 / 0.308e3) * (eta ^ 5) + (0.53e2 / 0.77e2 * (ci2 ^ 4) - 0.159e3 / 0.308e3 * (ci2 ^ 2) + 0.23e2 / 0.308e3) * (eta ^ 4) + (-0.1004e4 / 0.77e2 * (ci2 ^ 4) + 0.753e3 / 0.77e2 * (ci2 ^ 2) - 0.185e3 / 0.154e3) * (eta ^ 3) + (-0.992e3 / 0.77e2 * (ci2 ^ 4) + 0.744e3 / 0.77e2 * (ci2 ^ 2) - 0.183e3 / 0.154e3) * (eta ^ 2) + (0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.405e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.28e2) * eta + 0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.405e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.28e2) * (eta - 1) * cos((-h + 2 * g)) + 0.9e1 / 0.38e2 * ((eta ^ 6) - 0.212e3 / 0.9e1 * (eta ^ 4) + 0.1915e4 / 0.27e2 * (eta ^ 2) - 0.154e3 / 0.3e1) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 4 * f + 4 * g)) + 0.3e1 / 0.38e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.9e1) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((h + 6 * f)) + 0.59e2 / 0.114e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.5e1 / 0.59e2) * (eta ^ 3) + (-0.13e2 / 0.59e2 * (ci2 ^ 4) + 0.13e2 / 0.59e2 * (ci2 ^ 2) - 0.7e1 / 0.59e2) * (eta ^ 2) + (-0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * eta - 0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((h + 4 * f)) - (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((-h + 4 * f - 2 * g)) / 0.19e2 + 0.59e2 / 0.114e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.5e1 / 0.59e2) * (eta ^ 3) + (-0.13e2 / 0.59e2 * (ci2 ^ 4) + 0.13e2 / 0.59e2 * (ci2 ^ 2) - 0.7e1 / 0.59e2) * (eta ^ 2) + (-0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * eta - 0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-h + 4 * f)) - 0.11e2 / 0.19e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.23e2 / 0.66e2) * (eta ^ 3) + (0.10e2 / 0.11e2 * (ci2 ^ 4) - 0.25e2 / 0.22e2 * (ci2 ^ 2) + 0.7e1 / 0.22e2) * (eta ^ 2) + (-(6 * ci2 ^ 4) + 0.15e2 / 0.2e1 * (ci2 ^ 2) - 0.2e1) * eta - (6 * ci2 ^ 4) + 0.15e2 / 0.2e1 * (ci2 ^ 2) - 0.2e1) * (1 + eta) * ((eta - 1) ^ 2) * cos((-h - 2 * g + 2 * f)) - 0.5e1 / 0.57e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.3e1 / 0.10e2) * (eta ^ 3) + (-0.28e2 / 0.5e1 * (ci2 ^ 4) + (7 * ci2 ^ 2) - 0.19e2 / 0.10e2) * (eta ^ 2) + (-0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.99e2 / 0.2e1 * (ci2 ^ 2) - 0.66e2 / 0.5e1) * eta - 0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.99e2 / 0.2e1 * (ci2 ^ 2) - 0.66e2 / 0.5e1) * (1 + eta) * ((eta - 1) ^ 2) * cos((h + 6 * f + 2 * g)) + 0.9e1 / 0.38e2 * ((eta ^ 6) - 0.212e3 / 0.9e1 * (eta ^ 4) + 0.1915e4 / 0.27e2 * (eta ^ 2) - 0.154e3 / 0.3e1) * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * cos((h + 4 * f + 4 * g)) - (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((h + 8 * f + 2 * g)) / 0.19e2 - 0.77e2 / 0.57e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.27e2 / 0.77e2) * (eta ^ 5) + (0.53e2 / 0.77e2 * (ci2 ^ 4) - 0.265e3 / 0.308e3 * (ci2 ^ 2) + 0.19e2 / 0.77e2) * (eta ^ 4) + (-0.1004e4 / 0.77e2 * (ci2 ^ 4) + 0.1255e4 / 0.77e2 * (ci2 ^ 2) - 0.687e3 / 0.154e3) * (eta ^ 3) + (-0.992e3 / 0.77e2 * (ci2 ^ 4) + 0.1240e4 / 0.77e2 * (ci2 ^ 2) - 0.97e2 / 0.22e2) * (eta ^ 2) + (0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.675e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.7e1) * eta + 0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.675e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.7e1) * (eta - 1) * cos((h + 2 * g)) + 0.155e3 / 0.114e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.11e2 / 0.155e3) * (eta ^ 5) + (-0.61e2 / 0.155e3 * (ci2 ^ 4) + 0.61e2 / 0.155e3 * (ci2 ^ 2) - 0.5e1 / 0.31e2) * (eta ^ 4) + (-0.2414e4 / 0.155e3 * (ci2 ^ 4) + 0.2414e4 / 0.155e3 * (ci2 ^ 2) - 0.224e3 / 0.155e3) * (eta ^ 3) + (-0.382e3 / 0.31e2 * (ci2 ^ 4) + 0.382e3 / 0.31e2 * (ci2 ^ 2) - 0.28e2 / 0.31e2) * (eta ^ 2) + (0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * eta + 0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * (eta - 1) * cos((h + 2 * f)) - 0.22e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.13e2 / 0.132e3) * (eta ^ 6) + (-0.32e2 / 0.11e2 * (ci2 ^ 4) + 0.24e2 / 0.11e2 * (ci2 ^ 2) - 0.3e1 / 0.11e2) * (eta ^ 5) + (-(18 * ci2 ^ 4) + 0.27e2 / 0.2e1 * (ci2 ^ 2) - 0.18e2 / 0.11e2) * (eta ^ 4) + (0.32e2 / 0.11e2 * (ci2 ^ 4) - 0.24e2 / 0.11e2 * (ci2 ^ 2) + 0.8e1 / 0.33e2) * (eta ^ 3) + (0.593e3 / 0.11e2 * (ci2 ^ 4) - 0.1779e4 / 0.44e2 * (ci2 ^ 2) + 0.613e3 / 0.132e3) * (eta ^ 2) - (42 * ci2 ^ 4) + 0.63e2 / 0.2e1 * (ci2 ^ 2) - 0.7e1 / 0.2e1) * cos((-h + 2 * g + 2 * f)) + 0.155e3 / 0.114e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.11e2 / 0.155e3) * (eta ^ 5) + (-0.61e2 / 0.155e3 * (ci2 ^ 4) + 0.61e2 / 0.155e3 * (ci2 ^ 2) - 0.5e1 / 0.31e2) * (eta ^ 4) + (-0.2414e4 / 0.155e3 * (ci2 ^ 4) + 0.2414e4 / 0.155e3 * (ci2 ^ 2) - 0.224e3 / 0.155e3) * (eta ^ 3) + (-0.382e3 / 0.31e2 * (ci2 ^ 4) + 0.382e3 / 0.31e2 * (ci2 ^ 2) - 0.28e2 / 0.31e2) * (eta ^ 2) + (0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * eta + 0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * (eta - 1) * cos((-h + 2 * f)) - 0.7e1 / 0.19e2 * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta ^ 5) + (-(3 * ci2 ^ 4) + 0.15e2 / 0.4e1 * (ci2 ^ 2) - 0.1e1) * (eta ^ 4) + (-0.204e3 / 0.7e1 * (ci2 ^ 4) + 0.255e3 / 0.7e1 * (ci2 ^ 2) - 0.407e3 / 0.42e2) * (eta ^ 3) + (-0.124e3 / 0.7e1 * (ci2 ^ 4) + 0.155e3 / 0.7e1 * (ci2 ^ 2) - 0.247e3 / 0.42e2) * (eta ^ 2) + (0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.2475e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.7e1) * eta + 0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.2475e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.7e1) * (ci2 ^ 2) * (eta - 1) * cos((h + 2 * g + 4 * f)) - (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((h + 4 * f - 2 * g)) / 0.19e2 - 0.11e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.13e2 / 0.132e3) * (eta ^ 3) + (0.10e2 / 0.11e2 * (ci2 ^ 4) - 0.15e2 / 0.22e2 * (ci2 ^ 2) + 0.1e1 / 0.11e2) * (eta ^ 2) + (-(6 * ci2 ^ 4) + 0.9e1 / 0.2e1 * (ci2 ^ 2) - 0.1e1 / 0.2e1) * eta - (6 * ci2 ^ 4) + 0.9e1 / 0.2e1 * (ci2 ^ 2) - 0.1e1 / 0.2e1) * (1 + eta) * ((eta - 1) ^ 2) * cos((h - 2 * g + 2 * f)) + (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((h + 2 * f - 4 * g)) / 0.76e2 - 0.5e1 / 0.57e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.20e2) * (eta ^ 3) + (-0.28e2 / 0.5e1 * (ci2 ^ 4) + 0.21e2 / 0.5e1 * (ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta ^ 2) + (-0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.297e3 / 0.10e2 * (ci2 ^ 2) - 0.33e2 / 0.10e2) * eta - 0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.297e3 / 0.10e2 * (ci2 ^ 2) - 0.33e2 / 0.10e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-h + 6 * f + 2 * g)) - (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((-h + 8 * f + 2 * g)) / 0.19e2 + (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 10 * f + 4 * g)) / 0.76e2 + (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * cos((h + 10 * f + 4 * g)) / 0.76e2 + 0.120e3 / 0.19e2 * ((eta ^ 2) - 0.5e1 / 0.3e1) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (ci2 ^ 2) * (eta ^ 2) * Delta * sin((h + 2 * g + 2 * f)) + (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * cos((-h + 2 * f - 4 * g)) / 0.76e2 + 0.60e2 / 0.19e2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (ci2 ^ 2) * (eta ^ 2) * Delta * (1 + eta) * (eta - 1) * sin((h + 2 * g + 4 * f)) + 0.11e2 / 0.76e2 * ((eta ^ 4) - 0.254e3 / 0.11e2 * (eta ^ 2) + 0.45e2) * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * (eta - 1) * cos((h + 2 * f + 4 * g)) + 0.60e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (1 + eta) * (eta - 1) * sin((-h + 2 * g)) + 0.60e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (1 + eta) * (eta - 1) * sin((-h + 2 * g + 4 * f)) + 0.49e2 / 0.228e3 * (ci2 ^ 2) * ((eta ^ 4) - 0.874e3 / 0.49e2 * (eta ^ 2) + 0.1485e4 / 0.49e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * (eta - 1) * cos((-h + 6 * f + 4 * g)) + 0.13e2 / 0.228e3 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.198e3 / 0.13e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-h + 4 * g)) + 0.7e1 / 0.76e2 * ((eta ^ 2) - 0.66e2 / 0.7e1) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-h + 8 * f + 4 * g)) + 0.49e2 / 0.228e3 * (ci2 ^ 4) * ((eta ^ 4) - 0.874e3 / 0.49e2 * (eta ^ 2) + 0.1485e4 / 0.49e2) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * (eta - 1) * cos((h + 6 * f + 4 * g)) + 0.7e1 / 0.76e2 * ((eta ^ 2) - 0.66e2 / 0.7e1) * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((h + 8 * f + 4 * g)) + 0.120e3 / 0.19e2 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * sin((-h + 2 * g + 2 * f)) + 0.13e2 / 0.228e3 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) - 0.198e3 / 0.13e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((h + 4 * g)) + 0.60e2 / 0.19e2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (ci2 ^ 2) * (eta ^ 2) * Delta * (1 + eta) * (eta - 1) * sin((h + 2 * g)) + 0.11e2 / 0.76e2 * ((eta ^ 4) - 0.254e3 / 0.11e2 * (eta ^ 2) + 0.45e2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * (eta - 1) * cos((-h + 2 * f + 4 * g))) * (1 + eta)) * sqrt((-ci2 ^ 2 + 1)) * R__e ^ 4 / (eta ^ 12) / a ^ 3 / (1 + eta) 0.171e3 / 0.2e1 * J ^ 2 * (ci2 ^ 3) * ((-0.10e2 / 0.19e2 * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * (eta - 1) * cos((h + 5 * f + 2 * g)) - 0.101e3 / 0.114e3 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) - 0.330e3 / 0.101e3) * ((1 + eta) ^ 2) * (eta - 1) * sin((h + 4 * g + 7 * f)) + 0.101e3 / 0.114e3 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.330e3 / 0.101e3) * ((1 + eta) ^ 2) * (eta - 1) * sin((-h + 4 * g + 7 * f)) - 0.10e2 / 0.19e2 * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * (eta - 1) * cos((-h - 2 * g + f)) - 0.30e2 / 0.19e2 * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (eta ^ 2) * (eta ^ 2 - 5) * Delta * (1 + eta) * cos((h + 3 * f + 2 * g)) + (ci2 - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 + 1) * (eta ^ 2 + 48 * eta + 48) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((h + 3 * f - 2 * g)) / 0.76e2 - 0.30e2 / 0.19e2 * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (eta ^ 2) * (eta ^ 2 - 5) * Delta * (1 + eta) * cos((h + f + 2 * g)) - 0.77e2 / 0.114e3 * (ci2 ^ 4) * ((eta ^ 2) - 0.30e2 / 0.7e1) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * (eta - 1) * sin((h + 4 * g + f)) - 0.5e1 / 0.76e2 * (ci2 - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 + 1) * ((eta ^ 2) + 0.48e2 / 0.5e1 * eta + 0.48e2 / 0.5e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-h + 2 * g + 7 * f)) + 0.77e2 / 0.114e3 * (ci2 ^ 2) * ((eta ^ 2) - 0.30e2 / 0.7e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * (eta - 1) * sin((-h + 4 * g + f)) + 0.113e3 / 0.114e3 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.39e2 / 0.113e3) * (eta ^ 6) + (0.650e3 / 0.113e3 * (ci2 ^ 4) - 0.1625e4 / 0.226e3 * (ci2 ^ 2) + 0.443e3 / 0.226e3) * (eta ^ 5) + (0.144e3 / 0.113e3 * (ci2 ^ 4) - 0.180e3 / 0.113e3 * (ci2 ^ 2) + 0.103e3 / 0.226e3) * (eta ^ 4) + (-0.3890e4 / 0.113e3 * (ci2 ^ 4) + 0.9725e4 / 0.226e3 * (ci2 ^ 2) - 0.2607e4 / 0.226e3) * (eta ^ 3) + (-0.3329e4 / 0.113e3 * (ci2 ^ 4) + 0.16645e5 / 0.452e3 * (ci2 ^ 2) - 0.2233e4 / 0.226e3) * (eta ^ 2) + (0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.5940e4 / 0.113e3 * (ci2 ^ 2) + 0.1584e4 / 0.113e3) * eta + 0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.5940e4 / 0.113e3 * (ci2 ^ 2) + 0.1584e4 / 0.113e3) * sin((h + 3 * f + 2 * g)) + 0.87e2 / 0.38e2 * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.91e2 / 0.261e3) * (eta ^ 6) + (0.382e3 / 0.87e2 * (ci2 ^ 4) - 0.955e3 / 0.174e3 * (ci2 ^ 2) + 0.265e3 / 0.174e3) * (eta ^ 5) + (0.80e2 / 0.29e2 * (ci2 ^ 4) - 0.100e3 / 0.29e2 * (ci2 ^ 2) + 0.503e3 / 0.522e3) * (eta ^ 4) + (-0.1558e4 / 0.87e2 * (ci2 ^ 4) + 0.3895e4 / 0.174e3 * (ci2 ^ 2) - 0.3167e4 / 0.522e3) * (eta ^ 3) + (-0.1511e4 / 0.87e2 * (ci2 ^ 4) + 0.7555e4 / 0.348e3 * (ci2 ^ 2) - 0.3073e4 / 0.522e3) * (eta ^ 2) + (0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.660e3 / 0.29e2 * (ci2 ^ 2) + 0.176e3 / 0.29e2) * eta + 0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.660e3 / 0.29e2 * (ci2 ^ 2) + 0.176e3 / 0.29e2) * (ci2 ^ 2) * sin((h + f + 2 * g)) - 0.87e2 / 0.38e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.103e3 / 0.1044e4) * (eta ^ 6) + (0.382e3 / 0.87e2 * (ci2 ^ 4) - 0.191e3 / 0.58e2 * (ci2 ^ 2) + 0.37e2 / 0.87e2) * (eta ^ 5) + (0.80e2 / 0.29e2 * (ci2 ^ 4) - 0.60e2 / 0.29e2 * (ci2 ^ 2) + 0.143e3 / 0.522e3) * (eta ^ 4) + (-0.1558e4 / 0.87e2 * (ci2 ^ 4) + 0.779e3 / 0.58e2 * (ci2 ^ 2) - 0.415e3 / 0.261e3) * (eta ^ 3) + (-0.1511e4 / 0.87e2 * (ci2 ^ 4) + 0.1511e4 / 0.116e3 * (ci2 ^ 2) - 0.1613e4 / 0.1044e4) * (eta ^ 2) + (0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.396e3 / 0.29e2 * (ci2 ^ 2) + 0.44e2 / 0.29e2) * eta + 0.528e3 / 0.29e2 * (ci2 ^ 4) - 0.396e3 / 0.29e2 * (ci2 ^ 2) + 0.44e2 / 0.29e2) * sin((-h + f + 2 * g)) - 0.113e3 / 0.114e3 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.43e2 / 0.452e3) * (eta ^ 6) + (0.650e3 / 0.113e3 * (ci2 ^ 4) - 0.975e3 / 0.226e3 * (ci2 ^ 2) + 0.59e2 / 0.113e3) * (eta ^ 5) + (0.144e3 / 0.113e3 * (ci2 ^ 4) - 0.108e3 / 0.113e3 * (ci2 ^ 2) + 0.31e2 / 0.226e3) * (eta ^ 4) + (-0.3890e4 / 0.113e3 * (ci2 ^ 4) + 0.5835e4 / 0.226e3 * (ci2 ^ 2) - 0.331e3 / 0.113e3) * (eta ^ 3) + (-0.3329e4 / 0.113e3 * (ci2 ^ 4) + 0.9987e4 / 0.452e3 * (ci2 ^ 2) - 0.1137e4 / 0.452e3) * (eta ^ 2) + (0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.3564e4 / 0.113e3 * (ci2 ^ 2) + 0.396e3 / 0.113e3) * eta + 0.4752e4 / 0.113e3 * (ci2 ^ 4) - 0.3564e4 / 0.113e3 * (ci2 ^ 2) + 0.396e3 / 0.113e3) * sin((-h + 3 * f + 2 * g)) + 0.10e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * Delta * ((1 + eta) ^ 2) * (eta - 1) * cos((h - 2 * g + f)) + 0.30e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * (eta ^ 2 - 5) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * Delta * (1 + eta) * cos((-h + 3 * f + 2 * g)) + 0.10e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * Delta * ((1 + eta) ^ 2) * (eta - 1) * cos((-h + 5 * f + 2 * g)) + 0.30e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * (eta ^ 2 - 5) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * Delta * (1 + eta) * cos((-h + f + 2 * g)) + 0.5e1 / 0.76e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (eta ^ 3) + (0.351e3 / 0.5e1 * (ci2 ^ 4) - 0.1053e4 / 0.20e2 * (ci2 ^ 2) + 0.403e3 / 0.60e2) * (eta ^ 2) - (176 * ci2 ^ 4) + (132 * ci2 ^ 2) - 0.44e2 / 0.3e1) * ((1 + eta) ^ 2) * (eta - 1) * sin((h - 2 * g + f)) + 0.55e2 / 0.38e2 * ((eta ^ 4) - 0.1069e4 / 0.165e3 * (eta ^ 2) + 0.36e2 / 0.5e1) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * sin((-h + 3 * f + 4 * g)) + 0.63e2 / 0.38e2 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4) - 0.125e3 / 0.21e2 * (eta ^ 2) + 0.44e2 / 0.7e1) * (1 + eta) * sin((-h + 5 * f + 4 * g)) + 0.3e1 / 0.19e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 9 * f + 4 * g)) + 0.3e1 / 0.19e2 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * sin((-h - 4 * g + f)) - 0.55e2 / 0.38e2 * ((eta ^ 4) - 0.1069e4 / 0.165e3 * (eta ^ 2) + 0.36e2 / 0.5e1) * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * sin((h + 3 * f + 4 * g)) + 0.9e1 / 0.19e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 6) + (0.29e2 / 0.18e2 + 0.187e3 / 0.9e1 * (ci2 ^ 4) - 0.187e3 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 5) + (-0.5e1 / 0.18e2 + 0.85e2 / 0.9e1 * (ci2 ^ 4) - 0.85e2 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 4) + (-0.619e3 / 0.54e2 - 0.3185e4 / 0.27e2 * (ci2 ^ 4) + 0.3185e4 / 0.27e2 * (ci2 ^ 2)) * (eta ^ 3) + (0.2834e4 / 0.27e2 * (ci2 ^ 2) - 0.251e3 / 0.27e2 - 0.2834e4 / 0.27e2 * (ci2 ^ 4)) * (eta ^ 2) + (0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2)) * eta + 0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2)) * sin((-h + f)) - 0.11e2 / 0.18e2 * (1 + eta) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.554e3 / 0.33e2 * (ci2 ^ 4) - 0.554e3 / 0.33e2 * (ci2 ^ 2) + 0.49e2 / 0.33e2) * (eta ^ 3) + (0.305e3 / 0.33e2 * (ci2 ^ 4) - 0.305e3 / 0.33e2 * (ci2 ^ 2) + 0.5e1 / 0.22e2) * (eta ^ 2) + (-(60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * eta - (60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * (eta - 1) * sin((h + 3 * f)) - ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 2) + ((12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * eta + (12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * sin((h + 5 * f)) / 0.6e1 - sin((h + f)) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 6) + (0.29e2 / 0.18e2 + 0.187e3 / 0.9e1 * (ci2 ^ 4) - 0.187e3 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 5) + (-0.5e1 / 0.18e2 + 0.85e2 / 0.9e1 * (ci2 ^ 4) - 0.85e2 / 0.9e1 * (ci2 ^ 2)) * (eta ^ 4) + (-0.619e3 / 0.54e2 - 0.3185e4 / 0.27e2 * (ci2 ^ 4) + 0.3185e4 / 0.27e2 * (ci2 ^ 2)) * (eta ^ 3) + (0.2834e4 / 0.27e2 * (ci2 ^ 2) - 0.251e3 / 0.27e2 - 0.2834e4 / 0.27e2 * (ci2 ^ 4)) * (eta ^ 2) + (0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2)) * eta + 0.44e2 / 0.3e1 + (132 * ci2 ^ 4) - (132 * ci2 ^ 2))) - 0.63e2 / 0.38e2 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4) - 0.125e3 / 0.21e2 * (eta ^ 2) + 0.44e2 / 0.7e1) * (1 + eta) * sin((h + 5 * f + 4 * g)) + 0.5e1 / 0.76e2 * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * ((eta ^ 2) + 0.48e2 / 0.5e1 * eta + 0.48e2 / 0.5e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((h + 2 * g + 7 * f)) - 0.17e2 / 0.76e2 * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (eta ^ 4) + (0.132e3 / 0.17e2 * (ci2 ^ 4) - 0.99e2 / 0.17e2 * (ci2 ^ 2) + 0.10e2 / 0.17e2) * (eta ^ 3) + (-0.29e2 / 0.17e2 * (ci2 ^ 4) + 0.87e2 / 0.68e2 * (ci2 ^ 2) - 0.41e2 / 0.204e3) * (eta ^ 2) + (-0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.660e3 / 0.17e2 * (ci2 ^ 2) - 0.220e3 / 0.51e2) * eta - 0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.660e3 / 0.17e2 * (ci2 ^ 2) - 0.220e3 / 0.51e2) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * (eta - 1) * sin((-h + 5 * f + 2 * g)) - (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta ^ 2 + 48 * eta + 48) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-h + 3 * f - 2 * g)) / 0.76e2 - 0.3e1 / 0.19e2 * (ci2 ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((h - 4 * g + f)) - 0.3e1 / 0.19e2 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * sin((h + 9 * f + 4 * g)) + 0.3e1 / 0.38e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 2) + ((12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * eta + (12 * ci2 ^ 4) - (12 * ci2 ^ 2) + 0.4e1 / 0.3e1) * sin((-h + 5 * f)) + 0.17e2 / 0.76e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta ^ 4) + (0.132e3 / 0.17e2 * (ci2 ^ 4) - 0.165e3 / 0.17e2 * (ci2 ^ 2) + 0.43e2 / 0.17e2) * (eta ^ 3) + (-0.29e2 / 0.17e2 * (ci2 ^ 4) + 0.145e3 / 0.68e2 * (ci2 ^ 2) - 0.32e2 / 0.51e2) * (eta ^ 2) + (-0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.1100e4 / 0.17e2 * (ci2 ^ 2) - 0.880e3 / 0.51e2) * eta - 0.880e3 / 0.17e2 * (ci2 ^ 4) + 0.1100e4 / 0.17e2 * (ci2 ^ 2) - 0.880e3 / 0.51e2) * (1 + eta) * (eta - 1) * sin((h + 5 * f + 2 * g)) + 0.11e2 / 0.38e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (1 + eta) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (eta ^ 4) + (0.554e3 / 0.33e2 * (ci2 ^ 4) - 0.554e3 / 0.33e2 * (ci2 ^ 2) + 0.49e2 / 0.33e2) * (eta ^ 3) + (0.305e3 / 0.33e2 * (ci2 ^ 4) - 0.305e3 / 0.33e2 * (ci2 ^ 2) + 0.5e1 / 0.22e2) * (eta ^ 2) + (-(60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * eta - (60 * ci2 ^ 4) + (60 * ci2 ^ 2) - 0.20e2 / 0.3e1) * (eta - 1) * sin((-h + 3 * f)) - 0.5e1 / 0.76e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (eta - 1) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta ^ 3) + (0.351e3 / 0.5e1 * (ci2 ^ 4) - 0.351e3 / 0.4e1 * (ci2 ^ 2) + 0.364e3 / 0.15e2) * (eta ^ 2) - (176 * ci2 ^ 4) + (220 * ci2 ^ 2) - 0.176e3 / 0.3e1) * sin((-h - 2 * g + f))) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (-0.13e2 / 0.228e3 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.198e3 / 0.13e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-h + 4 * g)) - 0.49e2 / 0.228e3 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4) - 0.874e3 / 0.49e2 * (eta ^ 2) + 0.1485e4 / 0.49e2) * (1 + eta) * (eta - 1) * sin((-h + 6 * f + 4 * g)) + 0.11e2 / 0.76e2 * (ci2 ^ 4) * (ci2 - 1) * ((eta ^ 4) - 0.254e3 / 0.11e2 * (eta ^ 2) + 0.45e2) * (ci2 + 1) * (1 + eta) * (eta - 1) * sin((h + 2 * f + 4 * g)) + 0.13e2 / 0.228e3 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) - 0.198e3 / 0.13e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((h + 4 * g)) - 0.60e2 / 0.19e2 * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (eta ^ 2) * Delta * (1 + eta) * (eta - 1) * cos((h + 2 * g)) - 0.7e1 / 0.76e2 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * ((eta ^ 2) - 0.66e2 / 0.7e1) * ((eta - 1) ^ 2) * sin((-h + 8 * f + 4 * g)) - 0.11e2 / 0.76e2 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((eta ^ 4) - 0.254e3 / 0.11e2 * (eta ^ 2) + 0.45e2) * ((ci2 + 1) ^ 2) * (1 + eta) * (eta - 1) * sin((-h + 2 * f + 4 * g)) - 0.60e2 / 0.19e2 * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (eta ^ 2) * Delta * (1 + eta) * (eta - 1) * cos((h + 2 * g + 4 * f)) + 0.7e1 / 0.76e2 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta ^ 2) - 0.66e2 / 0.7e1) * ((eta - 1) ^ 2) * sin((h + 8 * f + 4 * g)) + 0.120e3 / 0.19e2 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * Delta * cos((-h + 2 * g + 2 * f)) + 0.49e2 / 0.228e3 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4) - 0.874e3 / 0.49e2 * (eta ^ 2) + 0.1485e4 / 0.49e2) * (1 + eta) * (eta - 1) * sin((h + 6 * f + 4 * g)) + 0.60e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * Delta * (1 + eta) * (eta - 1) * cos((-h + 2 * g)) + 0.60e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * Delta * (1 + eta) * (eta - 1) * cos((-h + 2 * g + 4 * f)) + sin(h) * (((ci2 ^ 4) - (ci2 ^ 2) - 0.1e1 / 0.57e2) * (eta ^ 6) + (-0.48e2 / 0.19e2 * (ci2 ^ 4) + 0.48e2 / 0.19e2 * (ci2 ^ 2) - 0.8e1 / 0.19e2) * (eta ^ 5) + (-0.580e3 / 0.19e2 * (ci2 ^ 4) + 0.580e3 / 0.19e2 * (ci2 ^ 2) - 0.46e2 / 0.19e2) * (eta ^ 4) + (0.128e3 / 0.19e2 * (ci2 ^ 4) - 0.128e3 / 0.19e2 * (ci2 ^ 2) + 0.64e2 / 0.57e2) * (eta ^ 3) + (0.5201e4 / 0.57e2 * (ci2 ^ 4) - 0.5201e4 / 0.57e2 * (ci2 ^ 2) + 0.167e3 / 0.19e2) * (eta ^ 2) - 0.1386e4 / 0.19e2 * (ci2 ^ 4) + 0.1386e4 / 0.19e2 * (ci2 ^ 2) - 0.154e3 / 0.19e2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) - 0.22e2 / 0.19e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.23e2 / 0.66e2) * (eta ^ 6) + (-0.32e2 / 0.11e2 * (ci2 ^ 4) + 0.40e2 / 0.11e2 * (ci2 ^ 2) - 0.1e1) * (eta ^ 5) + (-(18 * ci2 ^ 4) + 0.45e2 / 0.2e1 * (ci2 ^ 2) - 0.135e3 / 0.22e2) * (eta ^ 4) + (0.32e2 / 0.11e2 * (ci2 ^ 4) - 0.40e2 / 0.11e2 * (ci2 ^ 2) + 0.32e2 / 0.33e2) * (eta ^ 3) + (0.593e3 / 0.11e2 * (ci2 ^ 4) - 0.2965e4 / 0.44e2 * (ci2 ^ 2) + 0.598e3 / 0.33e2) * (eta ^ 2) - (42 * ci2 ^ 4) + 0.105e3 / 0.2e1 * (ci2 ^ 2) - 0.14e2) * sin((h + 2 * g + 2 * f)) - (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * sin((-h + 2 * f - 4 * g)) / 0.76e2 - (ci2 - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 + 1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((h + 4 * f - 2 * g)) / 0.19e2 + (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * sin((h + 10 * f + 4 * g)) / 0.76e2 - 0.11e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.13e2 / 0.132e3) * (eta ^ 3) + (0.10e2 / 0.11e2 * (ci2 ^ 4) - 0.15e2 / 0.22e2 * (ci2 ^ 2) + 0.1e1 / 0.11e2) * (eta ^ 2) + (-(6 * ci2 ^ 4) + 0.9e1 / 0.2e1 * (ci2 ^ 2) - 0.1e1 / 0.2e1) * eta - (6 * ci2 ^ 4) + 0.9e1 / 0.2e1 * (ci2 ^ 2) - 0.1e1 / 0.2e1) * (1 + eta) * ((eta - 1) ^ 2) * sin((h - 2 * g + 2 * f)) + (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((h + 2 * f - 4 * g)) / 0.76e2 + 0.5e1 / 0.57e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.20e2) * (eta ^ 3) + (-0.28e2 / 0.5e1 * (ci2 ^ 4) + 0.21e2 / 0.5e1 * (ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta ^ 2) + (-0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.297e3 / 0.10e2 * (ci2 ^ 2) - 0.33e2 / 0.10e2) * eta - 0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.297e3 / 0.10e2 * (ci2 ^ 2) - 0.33e2 / 0.10e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-h + 6 * f + 2 * g)) + (ci2 - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 + 1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((-h + 8 * f + 2 * g)) / 0.19e2 - (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 10 * f + 4 * g)) / 0.76e2 - 0.120e3 / 0.19e2 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * (eta ^ 2) * Delta * cos((h + 2 * g + 2 * f)) - 0.7e1 / 0.19e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta ^ 5) + (-(3 * ci2 ^ 4) + 0.15e2 / 0.4e1 * (ci2 ^ 2) - 0.1e1) * (eta ^ 4) + (-0.204e3 / 0.7e1 * (ci2 ^ 4) + 0.255e3 / 0.7e1 * (ci2 ^ 2) - 0.407e3 / 0.42e2) * (eta ^ 3) + (-0.124e3 / 0.7e1 * (ci2 ^ 4) + 0.155e3 / 0.7e1 * (ci2 ^ 2) - 0.247e3 / 0.42e2) * (eta ^ 2) + (0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.2475e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.7e1) * eta + 0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.2475e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.7e1) * (eta - 1) * sin((h + 2 * g + 4 * f)) - 0.155e3 / 0.114e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.11e2 / 0.155e3) * (eta ^ 5) + (-0.61e2 / 0.155e3 * (ci2 ^ 4) + 0.61e2 / 0.155e3 * (ci2 ^ 2) - 0.5e1 / 0.31e2) * (eta ^ 4) + (-0.2414e4 / 0.155e3 * (ci2 ^ 4) + 0.2414e4 / 0.155e3 * (ci2 ^ 2) - 0.224e3 / 0.155e3) * (eta ^ 3) + (-0.382e3 / 0.31e2 * (ci2 ^ 4) + 0.382e3 / 0.31e2 * (ci2 ^ 2) - 0.28e2 / 0.31e2) * (eta ^ 2) + (0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * eta + 0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * sin((-h + 2 * f)) + 0.22e2 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.13e2 / 0.132e3) * (eta ^ 6) + (-0.32e2 / 0.11e2 * (ci2 ^ 4) + 0.24e2 / 0.11e2 * (ci2 ^ 2) - 0.3e1 / 0.11e2) * (eta ^ 5) + (-(18 * ci2 ^ 4) + 0.27e2 / 0.2e1 * (ci2 ^ 2) - 0.18e2 / 0.11e2) * (eta ^ 4) + (0.32e2 / 0.11e2 * (ci2 ^ 4) - 0.24e2 / 0.11e2 * (ci2 ^ 2) + 0.8e1 / 0.33e2) * (eta ^ 3) + (0.593e3 / 0.11e2 * (ci2 ^ 4) - 0.1779e4 / 0.44e2 * (ci2 ^ 2) + 0.613e3 / 0.132e3) * (eta ^ 2) - (42 * ci2 ^ 4) + 0.63e2 / 0.2e1 * (ci2 ^ 2) - 0.7e1 / 0.2e1) * sin((-h + 2 * g + 2 * f)) - 0.77e2 / 0.57e2 * (ci2 ^ 2) * (eta - 1) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.27e2 / 0.77e2) * (eta ^ 5) + (0.53e2 / 0.77e2 * (ci2 ^ 4) - 0.265e3 / 0.308e3 * (ci2 ^ 2) + 0.19e2 / 0.77e2) * (eta ^ 4) + (-0.1004e4 / 0.77e2 * (ci2 ^ 4) + 0.1255e4 / 0.77e2 * (ci2 ^ 2) - 0.687e3 / 0.154e3) * (eta ^ 3) + (-0.992e3 / 0.77e2 * (ci2 ^ 4) + 0.1240e4 / 0.77e2 * (ci2 ^ 2) - 0.97e2 / 0.22e2) * (eta ^ 2) + (0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.675e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.7e1) * eta + 0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.675e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.7e1) * sin((h + 2 * g)) + 0.155e3 / 0.114e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.11e2 / 0.155e3) * (eta ^ 5) + (-0.61e2 / 0.155e3 * (ci2 ^ 4) + 0.61e2 / 0.155e3 * (ci2 ^ 2) - 0.5e1 / 0.31e2) * (eta ^ 4) + (-0.2414e4 / 0.155e3 * (ci2 ^ 4) + 0.2414e4 / 0.155e3 * (ci2 ^ 2) - 0.224e3 / 0.155e3) * (eta ^ 3) + (-0.382e3 / 0.31e2 * (ci2 ^ 4) + 0.382e3 / 0.31e2 * (ci2 ^ 2) - 0.28e2 / 0.31e2) * (eta ^ 2) + (0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * eta + 0.891e3 / 0.31e2 * (ci2 ^ 4) - 0.891e3 / 0.31e2 * (ci2 ^ 2) + 0.99e2 / 0.31e2) * sin((h + 2 * f)) - 0.3e1 / 0.38e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.9e1) * sin((-h + 6 * f)) + 0.59e2 / 0.114e3 * (((ci2 ^ 4) - (ci2 ^ 2) + 0.5e1 / 0.59e2) * (eta ^ 3) + (-0.13e2 / 0.59e2 * (ci2 ^ 4) + 0.13e2 / 0.59e2 * (ci2 ^ 2) - 0.7e1 / 0.59e2) * (eta ^ 2) + (-0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * eta - 0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (1 + eta) * ((eta - 1) ^ 2) * sin((h + 4 * f)) + 0.3e1 / 0.38e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.9e1) * sin((h + 6 * f)) - 0.59e2 / 0.114e3 * (((ci2 ^ 4) - (ci2 ^ 2) + 0.5e1 / 0.59e2) * (eta ^ 3) + (-0.13e2 / 0.59e2 * (ci2 ^ 4) + 0.13e2 / 0.59e2 * (ci2 ^ 2) - 0.7e1 / 0.59e2) * (eta ^ 2) + (-0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * eta - 0.594e3 / 0.59e2 * (ci2 ^ 4) + 0.594e3 / 0.59e2 * (ci2 ^ 2) - 0.66e2 / 0.59e2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (1 + eta) * ((eta - 1) ^ 2) * sin((-h + 4 * f)) - (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((h + 8 * f + 2 * g)) / 0.19e2 + (ci2 ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((-h + 4 * f - 2 * g)) / 0.19e2 + 0.7e1 / 0.19e2 * (ci2 - 1) * (ci2 + 1) * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (eta ^ 5) + (-(3 * ci2 ^ 4) + 0.9e1 / 0.4e1 * (ci2 ^ 2) - 0.1e1 / 0.4e1) * (eta ^ 4) + (-0.204e3 / 0.7e1 * (ci2 ^ 4) + 0.153e3 / 0.7e1 * (ci2 ^ 2) - 0.101e3 / 0.42e2) * (eta ^ 3) + (-0.124e3 / 0.7e1 * (ci2 ^ 4) + 0.93e2 / 0.7e1 * (ci2 ^ 2) - 0.61e2 / 0.42e2) * (eta ^ 2) + (0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.1485e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.28e2) * eta + 0.495e3 / 0.7e1 * (ci2 ^ 4) - 0.1485e4 / 0.28e2 * (ci2 ^ 2) + 0.165e3 / 0.28e2) * (eta - 1) * sin((-h + 2 * g + 4 * f)) + 0.77e2 / 0.57e2 * (((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.31e2 / 0.308e3) * (eta ^ 5) + (0.53e2 / 0.77e2 * (ci2 ^ 4) - 0.159e3 / 0.308e3 * (ci2 ^ 2) + 0.23e2 / 0.308e3) * (eta ^ 4) + (-0.1004e4 / 0.77e2 * (ci2 ^ 4) + 0.753e3 / 0.77e2 * (ci2 ^ 2) - 0.185e3 / 0.154e3) * (eta ^ 3) + (-0.992e3 / 0.77e2 * (ci2 ^ 4) + 0.744e3 / 0.77e2 * (ci2 ^ 2) - 0.183e3 / 0.154e3) * (eta ^ 2) + (0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.405e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.28e2) * eta + 0.135e3 / 0.7e1 * (ci2 ^ 4) - 0.405e3 / 0.28e2 * (ci2 ^ 2) + 0.45e2 / 0.28e2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((-h + 2 * g)) + 0.9e1 / 0.38e2 * (ci2 ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 6) - 0.212e3 / 0.9e1 * (eta ^ 4) + 0.1915e4 / 0.27e2 * (eta ^ 2) - 0.154e3 / 0.3e1) * sin((h + 4 * f + 4 * g)) + 0.11e2 / 0.19e2 * (ci2 ^ 2) * (1 + eta) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.23e2 / 0.66e2) * (eta ^ 3) + (0.10e2 / 0.11e2 * (ci2 ^ 4) - 0.25e2 / 0.22e2 * (ci2 ^ 2) + 0.7e1 / 0.22e2) * (eta ^ 2) + (-(6 * ci2 ^ 4) + 0.15e2 / 0.2e1 * (ci2 ^ 2) - 0.2e1) * eta - (6 * ci2 ^ 4) + 0.15e2 / 0.2e1 * (ci2 ^ 2) - 0.2e1) * ((eta - 1) ^ 2) * sin((-h - 2 * g + 2 * f)) - 0.5e1 / 0.57e2 * (ci2 ^ 2) * (((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.3e1 / 0.10e2) * (eta ^ 3) + (-0.28e2 / 0.5e1 * (ci2 ^ 4) + (7 * ci2 ^ 2) - 0.19e2 / 0.10e2) * (eta ^ 2) + (-0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.99e2 / 0.2e1 * (ci2 ^ 2) - 0.66e2 / 0.5e1) * eta - 0.198e3 / 0.5e1 * (ci2 ^ 4) + 0.99e2 / 0.2e1 * (ci2 ^ 2) - 0.66e2 / 0.5e1) * (1 + eta) * ((eta - 1) ^ 2) * sin((h + 6 * f + 2 * g)) - 0.9e1 / 0.38e2 * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 6) - 0.212e3 / 0.9e1 * (eta ^ 4) + 0.1915e4 / 0.27e2 * (eta ^ 2) - 0.154e3 / 0.3e1) * sin((-h + 4 * f + 4 * g)))) * R__e ^ 4 * sqrt((-ci2 ^ 2 + 1)) / (eta ^ 12) / a ^ 3 / (1 + eta) 0.1551e4 / 0.32e2 * R__e ^ 4 * (0.9e1 / 0.4136e4 * ((eta ^ 2) + 0.208e3 / 0.3e1 * eta + 0.208e3 / 0.3e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 4) * cos((-3 * g - h + 5 * f)) + 0.9e1 / 0.4136e4 * ((eta ^ 2) + 0.208e3 / 0.3e1 * eta + 0.208e3 / 0.3e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 3) * cos((-g + h + 5 * f)) + 0.105e3 / 0.4136e4 * ((eta ^ 2) + 0.464e3 / 0.35e2 * eta + 0.464e3 / 0.35e2) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 3) * cos((3 * g + h + 9 * f)) + 0.105e3 / 0.4136e4 * ((eta ^ 2) + 0.464e3 / 0.35e2 * eta + 0.464e3 / 0.35e2) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 4) * cos((g - h + 9 * f)) + 0.353e3 / 0.376e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((-0.34320e5 / 0.353e3 + 0.29126e5 / 0.3883e4 * (eta ^ 7) + (eta ^ 8) + 0.14149e5 / 0.3883e4 * (eta ^ 6) - 0.230140e6 / 0.3883e4 * (eta ^ 5) + 0.41074e5 / 0.353e3 * (eta ^ 3) + 0.566187e6 / 0.3883e4 * (eta ^ 2) - 0.28080e5 / 0.353e3 * eta - 0.267467e6 / 0.3883e4 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) - 0.29126e5 / 0.3883e4 * (eta ^ 7) - 0.566187e6 / 0.3883e4 * (eta ^ 2) + 0.34320e5 / 0.353e3 + 0.230140e6 / 0.3883e4 * (eta ^ 5) + 0.267467e6 / 0.3883e4 * (eta ^ 4) - 0.41074e5 / 0.353e3 * (eta ^ 3) + 0.28080e5 / 0.353e3 * eta - 0.14149e5 / 0.3883e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.1497e4 / 0.7766e4 * (eta ^ 8) + 0.189329e6 / 0.7766e4 * (eta ^ 2) + 0.5469e4 / 0.3883e4 * (eta ^ 7) - 0.5720e4 / 0.353e3 - 0.4680e4 / 0.353e3 * eta - 0.95465e5 / 0.7766e4 * (eta ^ 4) + 0.5935e4 / 0.7766e4 * (eta ^ 6) + 0.74253e5 / 0.3883e4 * (eta ^ 3) - 0.40066e5 / 0.3883e4 * (eta ^ 5)) * (eta - 1) * cos((g - h + 3 * f)) - 0.111e3 / 0.1034e4 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((5 * g + h + 11 * f)) - 0.15e2 / 0.1034e4 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-3 * g + h + 3 * f)) - 0.1987e4 / 0.517e3 * ((eta ^ 7) + 0.1028e4 / 0.1987e4 * (eta ^ 6) - 0.31813e5 / 0.3974e4 * (eta ^ 5) - 0.22799e5 / 0.3974e4 * (eta ^ 4) + 0.30014e5 / 0.1987e4 * (eta ^ 3) + 0.29169e5 / 0.1987e4 * (eta ^ 2) - 0.31317e5 / 0.3974e4 * eta - 0.40755e5 / 0.3974e4) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * cos((5 * g + h + 5 * f)) - 0.111e3 / 0.1034e4 * (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 11 * f)) - 0.15e2 / 0.1034e4 * (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-5 * g - h + 3 * f)) - 0.203e3 / 0.517e3 * (ci2 ^ 4) * ((eta ^ 7) - 0.92e2 / 0.29e2 * (eta ^ 6) - 0.6789e4 / 0.406e3 * (eta ^ 5) + 0.14897e5 / 0.406e3 * (eta ^ 4) + 0.10886e5 / 0.203e3 * (eta ^ 3) - 0.675e3 / 0.7e1 * (eta ^ 2) - 0.17589e5 / 0.406e3 * eta + 0.27885e5 / 0.406e3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * cos((3 * g - h + 3 * f)) + 0.16011e5 / 0.4136e4 * ((0.57200e5 / 0.5337e4 + 0.29954e5 / 0.5337e4 * (eta ^ 7) + (eta ^ 8) + 0.45239e5 / 0.5337e4 * (eta ^ 6) - 0.30364e5 / 0.1779e4 * (eta ^ 5) - 0.11146e5 / 0.1779e4 * (eta ^ 3) + 0.270553e6 / 0.5337e4 * (eta ^ 2) + 0.25168e5 / 0.593e3 * eta - 0.246521e6 / 0.5337e4 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) - 0.29954e5 / 0.5337e4 * (eta ^ 7) - 0.270553e6 / 0.5337e4 * (eta ^ 2) - 0.57200e5 / 0.5337e4 + 0.30364e5 / 0.1779e4 * (eta ^ 5) + 0.246521e6 / 0.5337e4 * (eta ^ 4) + 0.11146e5 / 0.1779e4 * (eta ^ 3) - 0.25168e5 / 0.593e3 * eta - 0.45239e5 / 0.5337e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.6329e4 / 0.32022e5 * (eta ^ 8) + 0.269617e6 / 0.32022e5 * (eta ^ 2) + 0.17501e5 / 0.16011e5 * (eta ^ 7) + 0.28600e5 / 0.16011e5 + 0.12584e5 / 0.1779e4 * eta - 0.87235e5 / 0.10674e5 * (eta ^ 4) + 0.17669e5 / 0.10674e5 * (eta ^ 6) - 0.2363e4 / 0.1779e4 * (eta ^ 3) - 0.15734e5 / 0.5337e4 * (eta ^ 5)) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((3 * g + h + f)) + (-0.6480e4 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta ^ 4) + 0.23e2 / 0.18e2 * (eta ^ 3) - 0.25e2 / 0.18e2 * (eta ^ 2) - 0.145e3 / 0.54e2 * eta - 0.7e1 / 0.6e1) * sin((3 * g + h + 2 * f)) + 0.219e3 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 7) - 0.581e3 / 0.146e3 * (eta ^ 6) - 0.3077e4 / 0.73e2 * (eta ^ 5) - (30 * eta ^ 4) + 0.12026e5 / 0.73e2 * (eta ^ 3) + 0.24333e5 / 0.146e3 * (eta ^ 2) - 0.12870e5 / 0.73e2 * eta - 0.14014e5 / 0.73e2) * (ci2 ^ 4) + (-(eta ^ 7) + 0.581e3 / 0.146e3 * (eta ^ 6) + 0.3077e4 / 0.73e2 * (eta ^ 5) + (30 * eta ^ 4) - 0.12026e5 / 0.73e2 * (eta ^ 3) - 0.24333e5 / 0.146e3 * (eta ^ 2) + 0.12870e5 / 0.73e2 * eta + 0.14014e5 / 0.73e2) * (ci2 ^ 2) + 0.79e2 / 0.438e3 * (eta ^ 7) - 0.203e3 / 0.292e3 * (eta ^ 6) - 0.3185e4 / 0.438e3 * (eta ^ 5) - 0.395e3 / 0.73e2 * (eta ^ 4) + 0.1980e4 / 0.73e2 * (eta ^ 3) + 0.8075e4 / 0.292e3 * (eta ^ 2) - 0.2145e4 / 0.73e2 * eta - 0.7007e4 / 0.219e3) * cos((g - h + 4 * f)) - 0.251e3 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 7) + 0.243e3 / 0.502e3 * (eta ^ 6) - 0.6074e4 / 0.251e3 * (eta ^ 5) - 0.8119e4 / 0.502e3 * (eta ^ 4) + 0.18871e5 / 0.251e3 * (eta ^ 3) + 0.34269e5 / 0.502e3 * (eta ^ 2) - 0.13728e5 / 0.251e3 * eta - 0.33033e5 / 0.502e3) * (1 + eta) * cos((5 * g + h + 6 * f)) - 0.6e1 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 7) - 0.29e2 / 0.4e1 * (eta ^ 6) - 0.301e3 / 0.3e1 * (eta ^ 5) + 0.3277e4 / 0.12e2 * (eta ^ 4) + 0.1775e4 / 0.3e1 * (eta ^ 3) - 0.4943e4 / 0.4e1 * (eta ^ 2) - (715 * eta) + 0.5005e4 / 0.4e1) * (1 + eta) * cos((3 * g - h + 2 * f)) - 0.529e3 / 0.517e3 * eta * (0.1560e4 / 0.529e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * eta * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta ^ 3) - 0.4e1 / 0.13e2 * (eta ^ 2) - 0.17e2 / 0.13e2 * eta + 0.12e2 / 0.13e2) * (1 + eta) * sin((g - h)) + 0.3000e4 / 0.529e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * eta * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta ^ 2) + 0.29e2 / 0.25e2 * eta + 0.12e2 / 0.25e2) * (1 + eta) * (eta - 1) * sin((3 * g + h)) + cos((g + h)) * ((-0.81081e5 / 0.529e3 + 0.3753e4 / 0.23e2 * (eta ^ 2) - 0.81081e5 / 0.529e3 * eta + (eta ^ 7) - 0.1163e4 / 0.529e3 * (eta ^ 6) - 0.25043e5 / 0.529e3 * (eta ^ 5) - 0.18059e5 / 0.529e3 * (eta ^ 4) + 0.91323e5 / 0.529e3 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) + 0.162162e6 / 0.529e3 + 0.2326e4 / 0.529e3 * (eta ^ 6) + 0.50086e5 / 0.529e3 * (eta ^ 5) + 0.36118e5 / 0.529e3 * (eta ^ 4) - 0.182646e6 / 0.529e3 * (eta ^ 3) - 0.7506e4 / 0.23e2 * (eta ^ 2) + 0.162162e6 / 0.529e3 * eta) * (ci2 ^ 6) + (-0.99099e5 / 0.529e3 + 0.21e2 / 0.23e2 * (eta ^ 7) - 0.1773e4 / 0.529e3 * (eta ^ 6) - 0.29313e5 / 0.529e3 * (eta ^ 5) + 0.109753e6 / 0.529e3 * (eta ^ 3) + 0.103081e6 / 0.529e3 * (eta ^ 2) - 0.99099e5 / 0.529e3 * eta - 0.20001e5 / 0.529e3 * (eta ^ 4)) * (ci2 ^ 4) + (0.2e1 / 0.23e2 * (eta ^ 7) - 0.16762e5 / 0.529e3 * (eta ^ 2) + 0.18018e5 / 0.529e3 + 0.4270e4 / 0.529e3 * (eta ^ 5) + 0.1942e4 / 0.529e3 * (eta ^ 4) - 0.18430e5 / 0.529e3 * (eta ^ 3) + 0.18018e5 / 0.529e3 * eta + 0.610e3 / 0.529e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.2475e4 / 0.1058e4 * (eta ^ 2) - 0.29e2 / 0.1058e4 * (eta ^ 7) - 0.3003e4 / 0.1058e4 * eta - 0.85e2 / 0.1058e4 * (eta ^ 4) - 0.123e3 / 0.1058e4 * (eta ^ 6) + 0.2753e4 / 0.1058e4 * (eta ^ 3) - 0.3003e4 / 0.1058e4 - 0.473e3 / 0.1058e4 * (eta ^ 5))) + ((0.2457e4 / 0.47e2 + 0.30171e5 / 0.517e3 * (eta ^ 2) + 0.7371e4 / 0.47e2 * eta - 0.871e3 / 0.517e3 * (eta ^ 8) + 0.310e3 / 0.517e3 * (eta ^ 7) + 0.19311e5 / 0.517e3 * (eta ^ 6) + 0.1799e4 / 0.47e2 * (eta ^ 5) - 0.62086e5 / 0.517e3 * (eta ^ 4) - 0.88204e5 / 0.517e3 * (eta ^ 3)) * (ci2 ^ 8) + (-0.620e3 / 0.517e3 * (eta ^ 7) - 0.4914e4 / 0.47e2 + 0.1742e4 / 0.517e3 * (eta ^ 8) - 0.38622e5 / 0.517e3 * (eta ^ 6) - 0.3598e4 / 0.47e2 * (eta ^ 5) + 0.124172e6 / 0.517e3 * (eta ^ 4) + 0.176408e6 / 0.517e3 * (eta ^ 3) - 0.60342e5 / 0.517e3 * (eta ^ 2) - 0.14742e5 / 0.47e2 * eta) * (ci2 ^ 6) + (0.3003e4 / 0.47e2 + 0.621e3 / 0.517e3 * (eta ^ 7) - 0.993e3 / 0.517e3 * (eta ^ 8) + 0.486e3 / 0.11e2 * (eta ^ 6) + 0.22449e5 / 0.517e3 * (eta ^ 5) - 0.105753e6 / 0.517e3 * (eta ^ 3) + 0.37734e5 / 0.517e3 * (eta ^ 2) + 0.9009e4 / 0.47e2 * eta - 0.75432e5 / 0.517e3 * (eta ^ 4)) * (ci2 ^ 4) + (0.122e3 / 0.517e3 * (eta ^ 8) - 0.311e3 / 0.517e3 * (eta ^ 7) - 0.7563e4 / 0.517e3 * (eta ^ 2) - 0.546e3 / 0.47e2 - 0.2660e4 / 0.517e3 * (eta ^ 5) + 0.13346e5 / 0.517e3 * (eta ^ 4) + 0.17549e5 / 0.517e3 * (eta ^ 3) - 0.1638e4 / 0.47e2 * eta - 0.321e3 / 0.47e2 * (eta ^ 6)) * (ci2 ^ 2) - 0.5e1 / 0.1034e4 * (eta ^ 8) + 0.247e3 / 0.188e3 * (eta ^ 2) + 0.3e1 / 0.44e2 * (eta ^ 7) + 0.273e3 / 0.94e2 * eta + 0.91e2 / 0.94e2 - 0.2097e4 / 0.1034e4 * (eta ^ 4) + 0.877e3 / 0.2068e4 * (eta ^ 6) - 0.5287e4 / 0.2068e4 * (eta ^ 3) + 0.117e3 / 0.517e3 * (eta ^ 5)) * cos((g + h + 2 * f)) - 0.113e3 / 0.517e3 * (((eta ^ 3) + 0.23e2 / 0.113e3 * (eta ^ 2) - 0.1188e4 / 0.113e3 * eta - 0.1215e4 / 0.113e3) * (ci2 ^ 8) + (-(2 * eta ^ 3) - 0.46e2 / 0.113e3 * (eta ^ 2) + 0.2376e4 / 0.113e3 * eta + 0.2430e4 / 0.113e3) * (ci2 ^ 6) + (0.135e3 / 0.113e3 * (eta ^ 3) + 0.12e2 / 0.113e3 * (eta ^ 2) - 0.1452e4 / 0.113e3 * eta - 0.1485e4 / 0.113e3) * (ci2 ^ 4) + (-0.22e2 / 0.113e3 * (eta ^ 3) + 0.11e2 / 0.113e3 * (eta ^ 2) + 0.264e3 / 0.113e3 * eta + 0.270e3 / 0.113e3) * (ci2 ^ 2) + 0.3e1 / 0.226e3 * (eta ^ 3) - 0.5e1 / 0.452e3 * (eta ^ 2) - 0.22e2 / 0.113e3 * eta - 0.45e2 / 0.226e3) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-g - h + 6 * f)) - 0.27e2 / 0.1034e4 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.11e2 / 0.9e1 * (ci2 ^ 4) - 0.2e1 / 0.9e1 * (ci2 ^ 2) + 0.1e1 / 0.54e2) * ((1 + eta) ^ 4) * ((eta - 1) ^ 4) * cos((-g - h + 8 * f)) + 0.60e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 3) * (eta - 1) * sin((-g + h + 2 * f)) + 0.12e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 5) * ((eta - 1) ^ 3) * cos((3 * g + h + 10 * f)) - 0.56e2 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((eta ^ 4) + 0.127e3 / 0.112e3 * (eta ^ 3) - 0.1805e4 / 0.112e3 * (eta ^ 2) - 0.2301e4 / 0.112e3 * eta - 0.195e3 / 0.16e2) * cos((5 * g + h)) - 0.5e1 / 0.47e2 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 6) - 0.133e3 / 0.110e3 * (eta ^ 5) - 0.5289e4 / 0.110e3 * (eta ^ 4) + 0.283e3 / 0.11e2 * (eta ^ 3) + 0.14346e5 / 0.55e2 * (eta ^ 2) - 0.507e3 / 0.10e2 * eta - 0.3003e4 / 0.10e2) * (1 + eta) * (eta - 1) * cos((3 * g - h + 6 * f)) + 0.258e3 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) + 0.99e2 / 0.86e2 * (eta ^ 5) - 0.572e3 / 0.43e2 * (eta ^ 4) - 0.1645e4 / 0.86e2 * (eta ^ 3) + 0.729e3 / 0.43e2 * (eta ^ 2) + 0.1430e4 / 0.43e2 * eta + 0.455e3 / 0.43e2) * (ci2 ^ 4) + (-(eta ^ 6) - 0.99e2 / 0.86e2 * (eta ^ 5) + 0.572e3 / 0.43e2 * (eta ^ 4) + 0.1645e4 / 0.86e2 * (eta ^ 3) - 0.729e3 / 0.43e2 * (eta ^ 2) - 0.1430e4 / 0.43e2 * eta - 0.455e3 / 0.43e2) * (ci2 ^ 2) + 0.17e2 / 0.86e2 * (eta ^ 6) + 0.119e3 / 0.516e3 * (eta ^ 5) - 0.304e3 / 0.129e3 * (eta ^ 4) - 0.1769e4 / 0.516e3 * (eta ^ 3) + 0.235e3 / 0.86e2 * (eta ^ 2) + 0.715e3 / 0.129e3 * eta + 0.455e3 / 0.258e3) * (1 + eta) * (eta - 1) * cos((-g + h + 2 * f)) + 0.12e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 4) * cos((g - h + 10 * f)) + 0.10e2 / 0.47e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) - 0.643e3 / 0.110e3 * (eta ^ 5) - 0.2996e4 / 0.55e2 * (eta ^ 4) - 0.7171e4 / 0.110e3 * (eta ^ 3) + 0.1227e4 / 0.11e2 * (eta ^ 2) + 0.1248e4 / 0.5e1 * eta + 0.1365e4 / 0.11e2) * (ci2 ^ 4) + (-(eta ^ 6) + 0.643e3 / 0.110e3 * (eta ^ 5) + 0.2996e4 / 0.55e2 * (eta ^ 4) + 0.7171e4 / 0.110e3 * (eta ^ 3) - 0.1227e4 / 0.11e2 * (eta ^ 2) - 0.1248e4 / 0.5e1 * eta - 0.1365e4 / 0.11e2) * (ci2 ^ 2) + 0.13e2 / 0.110e3 * (eta ^ 6) - 0.229e3 / 0.220e3 * (eta ^ 5) - 0.486e3 / 0.55e2 * (eta ^ 4) - 0.207e3 / 0.20e2 * (eta ^ 3) + 0.2073e4 / 0.110e3 * (eta ^ 2) + 0.208e3 / 0.5e1 * eta + 0.455e3 / 0.22e2) * (1 + eta) * (eta - 1) * cos((3 * g + h + 6 * f)) - 0.3e1 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3) + (eta ^ 2) / 0.2e1 - (12 * eta) - 0.15e2 / 0.2e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((-3 * g + h + 2 * f)) + 0.63e2 / 0.517e3 * (ci2 ^ 2) * (((eta ^ 3) - 0.25e2 / 0.14e2 * (eta ^ 2) - 0.130e3 / 0.7e1 * eta - 0.130e3 / 0.7e1) * (ci2 ^ 4) + (-(eta ^ 3) + 0.25e2 / 0.14e2 * (eta ^ 2) + 0.130e3 / 0.7e1 * eta + 0.130e3 / 0.7e1) * (ci2 ^ 2) + 0.19e2 / 0.126e3 * (eta ^ 3) - 0.79e2 / 0.252e3 * (eta ^ 2) - 0.65e2 / 0.21e2 * eta - 0.65e2 / 0.21e2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((3 * g + h + 8 * f)) + 0.6e1 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 5) * ((eta - 1) ^ 3) * cos((-g + h + 6 * f)) - 0.138e3 / 0.517e3 * ((eta ^ 5) + 0.55e2 / 0.92e2 * (eta ^ 4) - 0.1243e4 / 0.69e2 * (eta ^ 3) - 0.1027e4 / 0.69e2 * (eta ^ 2) + 0.741e3 / 0.23e2 * eta + 0.3185e4 / 0.92e2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * (eta - 1) * cos((5 * g + h + 8 * f)) + 0.57e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 3) * (((eta ^ 3) + 0.25e2 / 0.38e2 * (eta ^ 2) - 0.162e3 / 0.19e2 * eta - 0.150e3 / 0.19e2) * (ci2 ^ 4) + (-(eta ^ 3) - 0.25e2 / 0.38e2 * (eta ^ 2) + 0.162e3 / 0.19e2 * eta + 0.150e3 / 0.19e2) * (ci2 ^ 2) + 0.7e1 / 0.38e2 * (eta ^ 3) + 0.29e2 / 0.228e3 * (eta ^ 2) - 0.27e2 / 0.19e2 * eta - 0.25e2 / 0.19e2) * ((eta - 1) ^ 2) * cos((-g + h + 4 * f)) - 0.4e1 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5) - 0.15e2 / 0.8e1 * (eta ^ 4) - 0.87e2 / 0.2e1 * (eta ^ 3) + (62 * eta ^ 2) + (117 * eta) - 0.1365e4 / 0.8e1) * ((1 + eta) ^ 2) * (eta - 1) * cos((3 * g - h)) - 0.54e2 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * ((eta ^ 4) - 0.19e2 / 0.36e2 * (eta ^ 3) - 0.3445e4 / 0.108e3 * (eta ^ 2) + 0.221e3 / 0.36e2 * eta + 0.3185e4 / 0.36e2) * ((eta - 1) ^ 2) * cos((3 * g - h + 8 * f)) + 0.522e3 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.305e3 / 0.174e3 * (eta ^ 4) - 0.1403e4 / 0.174e3 * (eta ^ 3) - 0.1286e4 / 0.87e2 * (eta ^ 2) - 0.65e2 / 0.87e2 * eta + 0.455e3 / 0.87e2) * (ci2 ^ 4) + (-(eta ^ 5) - 0.305e3 / 0.174e3 * (eta ^ 4) + 0.1403e4 / 0.174e3 * (eta ^ 3) + 0.1286e4 / 0.87e2 * (eta ^ 2) + 0.65e2 / 0.87e2 * eta - 0.455e3 / 0.87e2) * (ci2 ^ 2) + 0.103e3 / 0.522e3 * (eta ^ 5) + 0.365e3 / 0.1044e4 * (eta ^ 4) - 0.1423e4 / 0.1044e4 * (eta ^ 3) - 0.655e3 / 0.261e3 * (eta ^ 2) - 0.65e2 / 0.522e3 * eta + 0.455e3 / 0.522e3) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - h + 2 * f)) + 0.70e2 / 0.517e3 * (ci2 ^ 2) * (((eta ^ 5) - 0.517e3 / 0.70e2 * (eta ^ 4) - 0.4001e4 / 0.70e2 * (eta ^ 3) - 0.132e3 / 0.5e1 * (eta ^ 2) + 0.6747e4 / 0.35e2 * eta + 0.195e3) * (ci2 ^ 4) + (-(eta ^ 5) + 0.517e3 / 0.70e2 * (eta ^ 4) + 0.4001e4 / 0.70e2 * (eta ^ 3) + 0.132e3 / 0.5e1 * (eta ^ 2) - 0.6747e4 / 0.35e2 * eta - 0.195e3) * (ci2 ^ 2) + 0.9e1 / 0.70e2 * (eta ^ 5) - 0.179e3 / 0.140e3 * (eta ^ 4) - 0.1279e4 / 0.140e3 * (eta ^ 3) - (4 * eta ^ 2) + 0.2249e4 / 0.70e2 * eta + 0.65e2 / 0.2e1) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * ((eta - 1) ^ 2) * cos((g - h + 6 * f)) - 0.138e3 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 6) + 0.121e3 / 0.92e2 * (eta ^ 5) - 0.6937e4 / 0.276e3 * (eta ^ 4) - 0.5107e4 / 0.138e3 * (eta ^ 3) + 0.1461e4 / 0.46e2 * (eta ^ 2) + 0.7865e4 / 0.92e2 * eta + 0.5005e4 / 0.92e2) * (1 + eta) * (eta - 1) * cos((5 * g + h + 2 * f)) - 0.60e2 / 0.47e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((g - h + 6 * f)) - 0.3600e4 / 0.517e3 * ((eta ^ 3) + 0.3e1 / 0.2e1 * (eta ^ 2) - 0.22e2 / 0.15e2 * eta - 0.21e2 / 0.10e2) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sin((g - h + 2 * f)) + 0.60e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-3 * g - h + 2 * f)) - 0.4200e4 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta ^ 3) + 0.16e2 / 0.35e2 * (eta ^ 2) - 0.11e2 / 0.7e1 * eta - 0.48e2 / 0.35e2) * (1 + eta) * sin((3 * g + h + 4 * f)) - 0.60e2 / 0.47e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 3) * (eta - 1) * sin((3 * g + h + 6 * f)) - 0.15e2 / 0.2068e4 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((5 * g + h + 12 * f)) - 0.3e1 / 0.2068e4 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-3 * g + h + 4 * f)) + 0.103e3 / 0.47e2 * (ci2 ^ 2) * (((eta ^ 7) + 0.4661e4 / 0.2266e4 * (eta ^ 6) - 0.15959e5 / 0.1133e4 * (eta ^ 5) - 0.35198e5 / 0.1133e4 * (eta ^ 4) + 0.10592e5 / 0.1133e4 * (eta ^ 3) + 0.122379e6 / 0.2266e4 * (eta ^ 2) + 0.3510e4 / 0.103e3 * eta + 0.546e3 / 0.103e3) * (ci2 ^ 4) + (-(eta ^ 7) - 0.4661e4 / 0.2266e4 * (eta ^ 6) + 0.15959e5 / 0.1133e4 * (eta ^ 5) + 0.35198e5 / 0.1133e4 * (eta ^ 4) - 0.10592e5 / 0.1133e4 * (eta ^ 3) - 0.122379e6 / 0.2266e4 * (eta ^ 2) - 0.3510e4 / 0.103e3 * eta - 0.546e3 / 0.103e3) * (ci2 ^ 2) + 0.457e3 / 0.2266e4 * (eta ^ 7) + 0.1923e4 / 0.4532e4 * (eta ^ 6) - 0.5809e4 / 0.2266e4 * (eta ^ 5) - 0.6467e4 / 0.1133e4 * (eta ^ 4) + 0.1465e4 / 0.1133e4 * (eta ^ 3) + 0.40805e5 / 0.4532e4 * (eta ^ 2) + 0.585e3 / 0.103e3 * eta + 0.91e2 / 0.103e3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((3 * g + h)) - 0.15e2 / 0.2068e4 * (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 12 * f)) - 0.3e1 / 0.2068e4 * (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-5 * g - h + 4 * f)) - 0.871e3 / 0.517e3 * ((-0.2079e4 / 0.67e2 + 0.77937e5 / 0.871e3 * (eta ^ 2) + (eta ^ 7) + 0.133e3 / 0.871e3 * (eta ^ 6) - 0.18724e5 / 0.871e3 * (eta ^ 5) - 0.25763e5 / 0.871e3 * (eta ^ 4) + 0.43565e5 / 0.871e3 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) + 0.4158e4 / 0.67e2 - 0.266e3 / 0.871e3 * (eta ^ 6) + 0.37448e5 / 0.871e3 * (eta ^ 5) + 0.51526e5 / 0.871e3 * (eta ^ 4) - 0.87130e5 / 0.871e3 * (eta ^ 3) - 0.155874e6 / 0.871e3 * (eta ^ 2)) * (ci2 ^ 6) + (-0.2541e4 / 0.67e2 + 0.993e3 / 0.871e3 * (eta ^ 7) - 0.120e3 / 0.871e3 * (eta ^ 6) - 0.22278e5 / 0.871e3 * (eta ^ 5) + 0.53397e5 / 0.871e3 * (eta ^ 3) + 0.94398e5 / 0.871e3 * (eta ^ 2) - 0.29709e5 / 0.871e3 * (eta ^ 4)) * (ci2 ^ 4) + (-0.122e3 / 0.871e3 * (eta ^ 7) - 0.16461e5 / 0.871e3 * (eta ^ 2) + 0.462e3 / 0.67e2 + 0.3554e4 / 0.871e3 * (eta ^ 5) + 0.3946e4 / 0.871e3 * (eta ^ 4) - 0.9832e4 / 0.871e3 * (eta ^ 3) + 0.253e3 / 0.871e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.407e3 / 0.268e3 * (eta ^ 2) + 0.5e1 / 0.1742e4 * (eta ^ 7) - 0.77e2 / 0.134e3 - 0.431e3 / 0.1742e4 * (eta ^ 4) - 0.139e3 / 0.3484e4 * (eta ^ 6) + 0.813e3 / 0.871e3 * (eta ^ 3) - 0.463e3 / 0.1742e4 * (eta ^ 5)) * (eta - 1) * cos((-g - h + 2 * f)) - 0.15e2 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) + 0.9e1 / 0.10e2 * eta - 0.3e1 / 0.2e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((-5 * g - h + 2 * f)) - 0.36e2 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3) + 0.19e2 / 0.24e2 * (eta ^ 2) - 0.21e2 / 0.2e1 * eta - 0.85e2 / 0.8e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((5 * g + h + 10 * f)) - 0.24e2 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.3e1 / 0.16e2 * eta - 0.255e3 / 0.16e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((3 * g - h + 10 * f)) + 0.81e2 / 0.517e3 * (ci2 ^ 2) * (((eta ^ 3) + 0.73e2 / 0.54e2 * (eta ^ 2) - 0.46e2 / 0.9e1 * eta - 0.50e2 / 0.9e1) * (ci2 ^ 4) + (-(eta ^ 3) - 0.73e2 / 0.54e2 * (eta ^ 2) + 0.46e2 / 0.9e1 * eta + 0.50e2 / 0.9e1) * (ci2 ^ 2) + 0.29e2 / 0.162e3 * (eta ^ 3) + 0.77e2 / 0.324e3 * (eta ^ 2) - 0.23e2 / 0.27e2 * eta - 0.25e2 / 0.27e2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-3 * g - h + 4 * f)) + 0.6e1 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 4) * cos((-3 * g - h + 6 * f)) + 0.39e2 / 0.517e3 * (ci2 ^ 2) * (((eta ^ 3) - 0.75e2 / 0.26e2 * (eta ^ 2) - (30 * eta) - 0.30e2) * (ci2 ^ 4) + (-(eta ^ 3) + 0.75e2 / 0.26e2 * (eta ^ 2) + (30 * eta) + 0.30e2) * (ci2 ^ 2) + 0.11e2 / 0.78e2 * (eta ^ 3) - 0.79e2 / 0.156e3 * (eta ^ 2) - (5 * eta) - 0.5e1) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((g - h + 8 * f)) + (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.546e3 / 0.47e2 - 0.61233e5 / 0.1034e4 * (eta ^ 2) - 0.1872e4 / 0.47e2 * eta + (eta ^ 8) + 0.1415e4 / 0.1034e4 * (eta ^ 7) - 0.1847e4 / 0.94e2 * (eta ^ 6) - 0.9767e4 / 0.517e3 * (eta ^ 5) + 0.34588e5 / 0.517e3 * (eta ^ 4) + 0.5461e4 / 0.94e2 * (eta ^ 3)) * (ci2 ^ 4) + (-(eta ^ 8) - 0.1415e4 / 0.1034e4 * (eta ^ 7) + 0.61233e5 / 0.1034e4 * (eta ^ 2) - 0.546e3 / 0.47e2 + 0.9767e4 / 0.517e3 * (eta ^ 5) - 0.34588e5 / 0.517e3 * (eta ^ 4) - 0.5461e4 / 0.94e2 * (eta ^ 3) + 0.1872e4 / 0.47e2 * eta + 0.1847e4 / 0.94e2 * (eta ^ 6)) * (ci2 ^ 2) + 0.19e2 / 0.94e2 * (eta ^ 8) - 0.20399e5 / 0.2068e4 * (eta ^ 2) + 0.589e3 / 0.2068e4 * (eta ^ 7) + 0.91e2 / 0.47e2 - 0.312e3 / 0.47e2 * eta + 0.6077e4 / 0.517e3 * (eta ^ 4) - 0.7563e4 / 0.2068e4 * (eta ^ 6) + 0.21261e5 / 0.2068e4 * (eta ^ 3) - 0.3661e4 / 0.1034e4 * (eta ^ 5)) * cos((g - h)) + 0.486e3 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.715e3 / 0.9e1 - 0.227e3 / 0.81e2 * (eta ^ 7) + (eta ^ 8) - 0.784e3 / 0.27e2 * (eta ^ 6) - 0.92e2 / 0.9e1 * (eta ^ 5) + 0.421e3 / 0.9e1 * (eta ^ 3) - 0.4376e4 / 0.27e2 * (eta ^ 2) - 0.286e3 / 0.9e1 * eta + 0.3140e4 / 0.27e2 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) + 0.227e3 / 0.81e2 * (eta ^ 7) + 0.4376e4 / 0.27e2 * (eta ^ 2) - 0.715e3 / 0.9e1 + 0.92e2 / 0.9e1 * (eta ^ 5) - 0.3140e4 / 0.27e2 * (eta ^ 4) - 0.421e3 / 0.9e1 * (eta ^ 3) + 0.286e3 / 0.9e1 * eta + 0.784e3 / 0.27e2 * (eta ^ 6)) * (ci2 ^ 2) + 0.97e2 / 0.486e3 * (eta ^ 8) - 0.734e3 / 0.27e2 * (eta ^ 2) - 0.85e2 / 0.162e3 * (eta ^ 7) + 0.715e3 / 0.54e2 - 0.143e3 / 0.27e2 * eta + 0.1648e4 / 0.81e2 * (eta ^ 4) - 0.1312e4 / 0.243e3 * (eta ^ 6) + 0.4117e4 / 0.486e3 * (eta ^ 3) - 0.164e3 / 0.81e2 * (eta ^ 5)) * cos((g - h + 2 * f)) + 0.1014e4 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((-0.495e3 / 0.13e2 - 0.337e3 / 0.169e3 * (eta ^ 7) + (eta ^ 8) - 0.4190e4 / 0.169e3 * (eta ^ 6) - 0.4246e4 / 0.169e3 * (eta ^ 5) + 0.16875e5 / 0.169e3 * (eta ^ 3) - 0.4890e4 / 0.169e3 * (eta ^ 2) - 0.1188e4 / 0.13e2 * eta + 0.11722e5 / 0.169e3 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) + 0.337e3 / 0.169e3 * (eta ^ 7) + 0.4890e4 / 0.169e3 * (eta ^ 2) + 0.495e3 / 0.13e2 + 0.4246e4 / 0.169e3 * (eta ^ 5) - 0.11722e5 / 0.169e3 * (eta ^ 4) - 0.16875e5 / 0.169e3 * (eta ^ 3) + 0.1188e4 / 0.13e2 * eta + 0.4190e4 / 0.169e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.67e2 / 0.338e3 * (eta ^ 8) - 0.165e3 / 0.26e2 - 0.801e3 / 0.169e3 * (eta ^ 2) - 0.373e3 / 0.1014e4 * (eta ^ 7) - 0.198e3 / 0.13e2 * eta + 0.2013e4 / 0.169e3 * (eta ^ 4) - 0.769e3 / 0.169e3 * (eta ^ 6) + 0.17371e5 / 0.1014e4 * (eta ^ 3) - 0.779e3 / 0.169e3 * (eta ^ 5)) * cos((3 * g + h + 2 * f)) + 0.387e3 / 0.517e3 * (ci2 ^ 2) * ((-0.14014e5 / 0.129e3 - 0.281e3 / 0.86e2 * (eta ^ 7) + (eta ^ 8) - 0.9595e4 / 0.258e3 * (eta ^ 6) - 0.4561e4 / 0.129e3 * (eta ^ 5) + 0.18599e5 / 0.86e2 * (eta ^ 3) - 0.10559e5 / 0.258e3 * (eta ^ 2) - 0.9724e4 / 0.43e2 * eta + 0.5694e4 / 0.43e2 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) + 0.281e3 / 0.86e2 * (eta ^ 7) + 0.10559e5 / 0.258e3 * (eta ^ 2) + 0.14014e5 / 0.129e3 + 0.4561e4 / 0.129e3 * (eta ^ 5) - 0.5694e4 / 0.43e2 * (eta ^ 4) - 0.18599e5 / 0.86e2 * (eta ^ 3) + 0.9724e4 / 0.43e2 * eta + 0.9595e4 / 0.258e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.15e2 / 0.86e2 * (eta ^ 8) - 0.10667e5 / 0.1548e4 * (eta ^ 2) - 0.875e3 / 0.1548e4 * (eta ^ 7) - 0.7007e4 / 0.387e3 - 0.4862e4 / 0.129e3 * eta + 0.2854e4 / 0.129e3 * (eta ^ 4) - 0.9743e4 / 0.1548e4 * (eta ^ 6) + 0.55765e5 / 0.1548e4 * (eta ^ 3) - 0.4609e4 / 0.774e3 * (eta ^ 5)) * (ci2 - 1) * (ci2 + 1) * cos((3 * g + h + 4 * f)) - 0.51e2 / 0.1034e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 8) - 0.49e2 / 0.17e2 * (eta ^ 7) - 0.1205e4 / 0.17e2 * (eta ^ 6) + 0.1335e4 / 0.17e2 * (eta ^ 5) + 0.9341e4 / 0.17e2 * (eta ^ 4) - 0.14257e5 / 0.51e2 * (eta ^ 3) - 0.20415e5 / 0.17e2 * (eta ^ 2) + 0.3861e4 / 0.17e2 * eta + 0.12870e5 / 0.17e2) * cos((3 * g - h + 4 * f)) - 0.483e3 / 0.1034e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 8) + 0.227e3 / 0.161e3 * (eta ^ 7) - 0.4321e4 / 0.161e3 * (eta ^ 6) - 0.6861e4 / 0.161e3 * (eta ^ 5) + 0.34075e5 / 0.483e3 * (eta ^ 4) + 0.76355e5 / 0.483e3 * (eta ^ 3) + 0.2397e4 / 0.161e3 * (eta ^ 2) - 0.21879e5 / 0.161e3 * eta - 0.12870e5 / 0.161e3) * cos((5 * g + h + 4 * f)) - 0.2760e4 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (1 + eta) * (eta - 1) * ((eta ^ 2) + 0.7e1 / 0.23e2 * eta - 0.48e2 / 0.23e2) * sin((g - h + 4 * f)) - 0.113e3 / 0.517e3 * (((eta ^ 3) - 0.31e2 / 0.113e3 * (eta ^ 2) - 0.1242e4 / 0.113e3 * eta - 0.1215e4 / 0.113e3) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.62e2 / 0.113e3 * (eta ^ 2) + 0.2484e4 / 0.113e3 * eta + 0.2430e4 / 0.113e3) * (ci2 ^ 6) + (0.135e3 / 0.113e3 * (eta ^ 3) - 0.54e2 / 0.113e3 * (eta ^ 2) - 0.1518e4 / 0.113e3 * eta - 0.1485e4 / 0.113e3) * (ci2 ^ 4) + (-0.22e2 / 0.113e3 * (eta ^ 3) + 0.23e2 / 0.113e3 * (eta ^ 2) + 0.276e3 / 0.113e3 * eta + 0.270e3 / 0.113e3) * (ci2 ^ 2) + 0.3e1 / 0.226e3 * (eta ^ 3) - 0.9e1 / 0.452e3 * (eta ^ 2) - 0.23e2 / 0.113e3 * eta - 0.45e2 / 0.226e3) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((g + h + 6 * f)) - 0.38e2 / 0.47e2 * ((0.12285e5 / 0.418e3 - 0.4208e4 / 0.209e3 * (eta ^ 2) + 0.4914e4 / 0.209e3 * eta + (eta ^ 5) - 0.39e2 / 0.418e3 * (eta ^ 4) - 0.3712e4 / 0.209e3 * (eta ^ 3)) * (ci2 ^ 8) + (-0.12285e5 / 0.209e3 - (2 * eta ^ 5) + 0.39e2 / 0.209e3 * (eta ^ 4) + 0.7424e4 / 0.209e3 * (eta ^ 3) + 0.8416e4 / 0.209e3 * (eta ^ 2) - 0.9828e4 / 0.209e3 * eta) * (ci2 ^ 6) + (0.1365e4 / 0.38e2 + 0.243e3 / 0.209e3 * (eta ^ 5) - 0.4485e4 / 0.209e3 * (eta ^ 3) - 0.4992e4 / 0.209e3 * (eta ^ 2) + 0.546e3 / 0.19e2 * eta - 0.159e3 / 0.418e3 * (eta ^ 4)) * (ci2 ^ 4) + (0.784e3 / 0.209e3 * (eta ^ 2) - 0.1365e4 / 0.209e3 - 0.34e2 / 0.209e3 * (eta ^ 5) + 0.60e2 / 0.209e3 * (eta ^ 4) + 0.773e3 / 0.209e3 * (eta ^ 3) - 0.1092e4 / 0.209e3 * eta) * (ci2 ^ 2) - 0.117e3 / 0.418e3 * (eta ^ 2) + 0.91e2 / 0.209e3 * eta - 0.7e1 / 0.209e3 * (eta ^ 4) - 0.233e3 / 0.836e3 * (eta ^ 3) + 0.455e3 / 0.836e3 + 0.3e1 / 0.418e3 * (eta ^ 5)) * (1 + eta) * ((eta - 1) ^ 2) * cos((-g - h + 4 * f)) - 0.27e2 / 0.1034e4 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.11e2 / 0.9e1 * (ci2 ^ 4) - 0.2e1 / 0.9e1 * (ci2 ^ 2) + 0.1e1 / 0.54e2) * ((1 + eta) ^ 5) * ((eta - 1) ^ 3) * cos((g + h + 8 * f)) - 0.38e2 / 0.47e2 * ((0.12285e5 / 0.418e3 + 0.5620e4 / 0.209e3 * (eta ^ 2) + 0.2457e4 / 0.38e2 * eta + (eta ^ 6) - 0.39e2 / 0.418e3 * (eta ^ 5) - 0.7759e4 / 0.418e3 * (eta ^ 4) - 0.5474e4 / 0.209e3 * (eta ^ 3)) * (ci2 ^ 8) + (-0.12285e5 / 0.209e3 - (2 * eta ^ 6) + 0.39e2 / 0.209e3 * (eta ^ 5) + 0.7759e4 / 0.209e3 * (eta ^ 4) + 0.10948e5 / 0.209e3 * (eta ^ 3) - 0.11240e5 / 0.209e3 * (eta ^ 2) - 0.2457e4 / 0.19e2 * eta) * (ci2 ^ 6) + (0.1365e4 / 0.38e2 + 0.243e3 / 0.209e3 * (eta ^ 6) - 0.159e3 / 0.418e3 * (eta ^ 5) - 0.6453e4 / 0.209e3 * (eta ^ 3) + 0.7020e4 / 0.209e3 * (eta ^ 2) + 0.3003e4 / 0.38e2 * eta - 0.9381e4 / 0.418e3 * (eta ^ 4)) * (ci2 ^ 4) + (-0.1400e4 / 0.209e3 * (eta ^ 2) - 0.1365e4 / 0.209e3 + 0.60e2 / 0.209e3 * (eta ^ 5) + 0.811e3 / 0.209e3 * (eta ^ 4) + 0.89e2 / 0.19e2 * (eta ^ 3) - 0.273e3 / 0.19e2 * eta - 0.34e2 / 0.209e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.13e2 / 0.22e2 * (eta ^ 2) + 0.91e2 / 0.76e2 * eta - 0.243e3 / 0.836e3 * (eta ^ 4) + 0.3e1 / 0.418e3 * (eta ^ 6) - 0.269e3 / 0.836e3 * (eta ^ 3) + 0.455e3 / 0.836e3 - 0.7e1 / 0.209e3 * (eta ^ 5)) * (1 + eta) * (eta - 1) * cos((g + h + 4 * f))) * sqrt((-eta ^ 2 + 1)) - 0.1143e4 / 0.2068e4 * cos((g + h + f)) * ((-0.8580e4 / 0.127e3 - 0.64751e5 / 0.381e3 * (eta ^ 2) - 0.41184e5 / 0.127e3 * eta + 0.27329e5 / 0.1143e4 * (eta ^ 8) + 0.4625e4 / 0.381e3 * (eta ^ 7) - 0.224999e6 / 0.1143e4 * (eta ^ 6) - 0.25635e5 / 0.127e3 * (eta ^ 5) + 0.452951e6 / 0.1143e4 * (eta ^ 4) + 0.571313e6 / 0.1143e4 * (eta ^ 3) + (eta ^ 9)) * (ci2 ^ 8) + (-0.9250e4 / 0.381e3 * (eta ^ 7) + 0.17160e5 / 0.127e3 - 0.54658e5 / 0.1143e4 * (eta ^ 8) - (2 * eta ^ 9) + 0.449998e6 / 0.1143e4 * (eta ^ 6) + 0.51270e5 / 0.127e3 * (eta ^ 5) - 0.905902e6 / 0.1143e4 * (eta ^ 4) - 0.1142626e7 / 0.1143e4 * (eta ^ 3) + 0.129502e6 / 0.381e3 * (eta ^ 2) + 0.82368e5 / 0.127e3 * eta) * (ci2 ^ 6) + (-0.31460e5 / 0.381e3 + 0.4300e4 / 0.381e3 * (eta ^ 7) + 0.3504e4 / 0.127e3 * (eta ^ 8) + 0.4e1 / 0.3e1 * (eta ^ 9) - 0.89260e5 / 0.381e3 * (eta ^ 6) - 0.89516e5 / 0.381e3 * (eta ^ 5) + 0.229316e6 / 0.381e3 * (eta ^ 3) - 0.26668e5 / 0.127e3 * (eta ^ 2) - 0.50336e5 / 0.127e3 * eta + 0.61100e5 / 0.127e3 * (eta ^ 4)) * (ci2 ^ 4) + (-0.4207e4 / 0.1143e4 * (eta ^ 8) + 0.325e3 / 0.381e3 * (eta ^ 7) + 0.15253e5 / 0.381e3 * (eta ^ 2) + 0.5720e4 / 0.381e3 - (eta ^ 9) / 0.3e1 + 0.12611e5 / 0.381e3 * (eta ^ 5) - 0.96949e5 / 0.1143e4 * (eta ^ 4) - 0.116635e6 / 0.1143e4 * (eta ^ 3) + 0.9152e4 / 0.127e3 * eta + 0.42781e5 / 0.1143e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.665e3 / 0.4572e4 * (eta ^ 8) - 0.5291e4 / 0.1524e4 * (eta ^ 2) - 0.1165e4 / 0.4572e4 * (eta ^ 7) + (eta ^ 9) / 0.36e2 - 0.2288e4 / 0.381e3 * eta + 0.10225e5 / 0.1524e4 * (eta ^ 4) - 0.11539e5 / 0.4572e4 * (eta ^ 6) + 0.12011e5 / 0.1524e4 * (eta ^ 3) - 0.9203e4 / 0.4572e4 * (eta ^ 5) - 0.1430e4 / 0.1143e4) + 0.1590e4 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (1 + eta) * ((eta ^ 5) + 0.13e2 / 0.53e2 * (eta ^ 4) - 0.382e3 / 0.53e2 * (eta ^ 3) - 0.182e3 / 0.53e2 * (eta ^ 2) + 0.337e3 / 0.53e2 * eta + 0.273e3 / 0.53e2) * sin((3 * g + h + 3 * f)) + 0.750e3 / 0.517e3 * (ci2 ^ 2) * ((eta ^ 5) - 0.7e1 / 0.25e2 * (eta ^ 4) - 0.182e3 / 0.25e2 * (eta ^ 3) + 0.98e2 / 0.25e2 * (eta ^ 2) + 0.197e3 / 0.25e2 * eta - 0.147e3 / 0.25e2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (1 + eta) * sin((g - h + f)) + 0.75e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((g - h + 7 * f)) + 0.75e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * sin((3 * g + h + 7 * f)) - 0.15e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * sin((-g + h + 3 * f)) - 0.15e2 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((-3 * g - h + 3 * f)) - 0.127e3 / 0.2068e4 * ((eta ^ 3) - 0.29e2 / 0.127e3 * (eta ^ 2) - 0.522e3 / 0.127e3 * eta + 0.210e3 / 0.127e3) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((-3 * g + h + f)) - 0.2743e4 / 0.2068e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((eta ^ 4) + 0.3506e4 / 0.2743e4 * (eta ^ 3) - 0.10443e5 / 0.2743e4 * (eta ^ 2) - 0.1368e4 / 0.211e3 * eta - 0.882e3 / 0.211e3) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((5 * g + h + f)) - 0.1523e4 / 0.517e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 6) + 0.2167e4 / 0.1523e4 * (eta ^ 5) - 0.19559e5 / 0.3046e4 * (eta ^ 4) - 0.17228e5 / 0.1523e4 * (eta ^ 3) + 0.3162e4 / 0.1523e4 * (eta ^ 2) + 0.22737e5 / 0.1523e4 * eta + 0.27885e5 / 0.3046e4) * (1 + eta) * (eta - 1) * cos((5 * g + h + 3 * f)) + 0.1389e4 / 0.4136e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) + 0.3896e4 / 0.463e3 * (eta ^ 5) - 0.1622e4 / 0.463e3 * (eta ^ 4) - 0.40320e5 / 0.463e3 * (eta ^ 3) - 0.31793e5 / 0.463e3 * (eta ^ 2) + 0.71760e5 / 0.463e3 * eta + 0.74256e5 / 0.463e3) * (ci2 ^ 4) + (-(eta ^ 6) - 0.3896e4 / 0.463e3 * (eta ^ 5) + 0.1622e4 / 0.463e3 * (eta ^ 4) + 0.40320e5 / 0.463e3 * (eta ^ 3) + 0.31793e5 / 0.463e3 * (eta ^ 2) - 0.71760e5 / 0.463e3 * eta - 0.74256e5 / 0.463e3) * (ci2 ^ 2) + 0.165e3 / 0.926e3 * (eta ^ 6) + 0.1922e4 / 0.1389e4 * (eta ^ 5) - 0.275e3 / 0.463e3 * (eta ^ 4) - 0.6586e4 / 0.463e3 * (eta ^ 3) - 0.31045e5 / 0.2778e4 * (eta ^ 2) + 0.11960e5 / 0.463e3 * eta + 0.12376e5 / 0.463e3) * (1 + eta) * ((eta - 1) ^ 2) * cos((g - h + 5 * f)) - 0.291e3 / 0.4136e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) - 0.6056e4 / 0.97e2 * (eta ^ 5) - 0.770e3 / 0.97e2 * (eta ^ 4) + 0.34472e5 / 0.97e2 * (eta ^ 3) + 0.5361e4 / 0.97e2 * (eta ^ 2) - 0.36816e5 / 0.97e2 * eta - 0.4368e4 / 0.97e2) * (ci2 ^ 4) + (-(eta ^ 6) + 0.6056e4 / 0.97e2 * (eta ^ 5) + 0.770e3 / 0.97e2 * (eta ^ 4) - 0.34472e5 / 0.97e2 * (eta ^ 3) - 0.5361e4 / 0.97e2 * (eta ^ 2) + 0.36816e5 / 0.97e2 * eta + 0.4368e4 / 0.97e2) * (ci2 ^ 2) + 0.43e2 / 0.194e3 * (eta ^ 6) - 0.3482e4 / 0.291e3 * (eta ^ 5) - 0.443e3 / 0.291e3 * (eta ^ 4) + 0.18298e5 / 0.291e3 * (eta ^ 3) + 0.5893e4 / 0.582e3 * (eta ^ 2) - 0.6136e4 / 0.97e2 * eta - 0.728e3 / 0.97e2) * ((1 + eta) ^ 2) * (eta - 1) * cos((-g + h + f)) + 0.63e2 / 0.4136e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 5) + 0.1651e4 / 0.21e2 * (eta ^ 4) + (127 * eta ^ 3) - 0.4187e4 / 0.21e2 * (eta ^ 2) - 0.9152e4 / 0.21e2 * eta - 0.560e3 / 0.3e1) * (ci2 ^ 4) + (-(eta ^ 5) - 0.1651e4 / 0.21e2 * (eta ^ 4) - (127 * eta ^ 3) + 0.4187e4 / 0.21e2 * (eta ^ 2) + 0.9152e4 / 0.21e2 * eta + 0.560e3 / 0.3e1) * (ci2 ^ 2) + (eta ^ 5) / 0.6e1 + 0.1775e4 / 0.126e3 * (eta ^ 4) + 0.2915e4 / 0.126e3 * (eta ^ 3) - 0.4063e4 / 0.126e3 * (eta ^ 2) - 0.4576e4 / 0.63e2 * eta - 0.280e3 / 0.9e1) * cos((-g + h + 3 * f)) - 0.2247e4 / 0.2068e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4) - 0.1198e4 / 0.2247e4 * (eta ^ 3) - 0.8041e4 / 0.749e3 * (eta ^ 2) + 0.1560e4 / 0.749e3 * eta + 0.1950e4 / 0.107e3) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((3 * g - h + 7 * f)) + 0.111e3 / 0.4136e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.2434e4 / 0.37e2 * (eta ^ 3) + 0.3669e4 / 0.37e2 * (eta ^ 2) - 0.2608e4 / 0.37e2 * eta - 0.3920e4 / 0.37e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.2434e4 / 0.37e2 * (eta ^ 3) - 0.3669e4 / 0.37e2 * (eta ^ 2) + 0.2608e4 / 0.37e2 * eta + 0.3920e4 / 0.37e2) * (ci2 ^ 2) + (eta ^ 4) / 0.6e1 + 0.1279e4 / 0.111e3 * (eta ^ 3) + 0.3793e4 / 0.222e3 * (eta ^ 2) - 0.1304e4 / 0.111e3 * eta - 0.1960e4 / 0.111e3) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-3 * g - h + 3 * f)) - 0.279e3 / 0.2068e4 * (ci2 ^ 4) * ((eta ^ 5) - 0.763e3 / 0.279e3 * (eta ^ 4) - 0.3389e4 / 0.279e3 * (eta ^ 3) + 0.2447e4 / 0.93e2 * (eta ^ 2) + 0.702e3 / 0.31e2 * eta - 0.1274e4 / 0.31e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * (eta - 1) * cos((3 * g - h + f)) - 0.5479e4 / 0.2068e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5) + 0.3445e4 / 0.5479e4 * (eta ^ 4) - 0.33485e5 / 0.5479e4 * (eta ^ 3) - 0.28803e5 / 0.5479e4 * (eta ^ 2) + 0.36270e5 / 0.5479e4 * eta + 0.40950e5 / 0.5479e4) * ((1 + eta) ^ 2) * (eta - 1) * cos((5 * g + h + 7 * f)) - 0.51e2 / 0.4136e4 * (((eta ^ 6) - 0.11640e5 / 0.17e2 * (eta ^ 5) - (1322 * eta ^ 4) + 0.27008e5 / 0.17e2 * (eta ^ 3) + 0.70257e5 / 0.17e2 * (eta ^ 2) + 0.28080e5 / 0.17e2 * eta - 0.4368e4 / 0.17e2) * (ci2 ^ 4) + (-(eta ^ 6) + 0.11640e5 / 0.17e2 * (eta ^ 5) + (1322 * eta ^ 4) - 0.27008e5 / 0.17e2 * (eta ^ 3) - 0.70257e5 / 0.17e2 * (eta ^ 2) - 0.28080e5 / 0.17e2 * eta + 0.4368e4 / 0.17e2) * (ci2 ^ 2) + 0.49e2 / 0.102e3 * (eta ^ 6) - 0.6658e4 / 0.51e2 * (eta ^ 5) - 0.12887e5 / 0.51e2 * (eta ^ 4) + 0.12974e5 / 0.51e2 * (eta ^ 3) + 0.70789e5 / 0.102e3 * (eta ^ 2) + 0.4680e4 / 0.17e2 * eta - 0.728e3 / 0.17e2) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - h + f)) - 0.109e3 / 0.188e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.228e3 / 0.1199e4 * eta - 0.6510e4 / 0.1199e4) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((3 * g - h + 9 * f)) - 0.475e3 / 0.517e3 * ((eta ^ 6) - 0.553e3 / 0.475e3 * (eta ^ 5) - 0.14919e5 / 0.950e3 * (eta ^ 4) + 0.788e3 / 0.95e2 * (eta ^ 3) + 0.978e3 / 0.19e2 * (eta ^ 2) - 0.4719e4 / 0.475e3 * eta - 0.429e3 / 0.10e2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * (eta - 1) * cos((3 * g - h + 5 * f)) + 0.735e3 / 0.4136e4 * (((eta ^ 5) + 0.503e3 / 0.49e2 * (eta ^ 4) + 0.1899e4 / 0.245e3 * (eta ^ 3) - 0.13403e5 / 0.245e3 * (eta ^ 2) - 0.25792e5 / 0.245e3 * eta - 0.368e3 / 0.7e1) * (ci2 ^ 4) + (-(eta ^ 5) - 0.503e3 / 0.49e2 * (eta ^ 4) - 0.1899e4 / 0.245e3 * (eta ^ 3) + 0.13403e5 / 0.245e3 * (eta ^ 2) + 0.25792e5 / 0.245e3 * eta + 0.368e3 / 0.7e1) * (ci2 ^ 2) + (eta ^ 5) / 0.6e1 + 0.2383e4 / 0.1470e4 * (eta ^ 4) + 0.109e3 / 0.98e2 * (eta ^ 3) - 0.2707e4 / 0.294e3 * (eta ^ 2) - 0.12896e5 / 0.735e3 * eta - 0.184e3 / 0.21e2) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((3 * g + h + 7 * f)) - 0.1775e4 / 0.2068e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3) + 0.1427e4 / 0.1775e4 * (eta ^ 2) - 0.6282e4 / 0.1775e4 * eta - 0.1302e4 / 0.355e3) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((5 * g + h + 9 * f)) + 0.2205e4 / 0.4136e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * (eta - 1) * (((eta ^ 7) + 0.2029e4 / 0.245e3 * (eta ^ 6) + 0.142e3 / 0.245e3 * (eta ^ 5) - 0.11630e5 / 0.147e3 * (eta ^ 4) - 0.27827e5 / 0.245e3 * (eta ^ 3) + 0.49951e5 / 0.735e3 * (eta ^ 2) + 0.50336e5 / 0.245e3 * eta + 0.3536e4 / 0.35e2) * (ci2 ^ 4) + (-(eta ^ 7) - 0.2029e4 / 0.245e3 * (eta ^ 6) - 0.142e3 / 0.245e3 * (eta ^ 5) + 0.11630e5 / 0.147e3 * (eta ^ 4) + 0.27827e5 / 0.245e3 * (eta ^ 3) - 0.49951e5 / 0.735e3 * (eta ^ 2) - 0.50336e5 / 0.245e3 * eta - 0.3536e4 / 0.35e2) * (ci2 ^ 2) + 0.767e3 / 0.4410e4 * (eta ^ 7) + 0.1937e4 / 0.1470e4 * (eta ^ 6) - 0.11e2 / 0.2205e4 * (eta ^ 5) - 0.28799e5 / 0.2205e4 * (eta ^ 4) - 0.27347e5 / 0.1470e4 * (eta ^ 3) + 0.50699e5 / 0.4410e4 * (eta ^ 2) + 0.25168e5 / 0.735e3 * eta + 0.1768e4 / 0.105e3) * cos((3 * g + h + 5 * f)) + 0.45e2 / 0.376e3 * (ci2 ^ 2) * (((eta ^ 4) + 0.534e3 / 0.55e2 * (eta ^ 3) - 0.427e3 / 0.165e3 * (eta ^ 2) - 0.1168e4 / 0.15e2 * eta - 0.2576e4 / 0.33e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.534e3 / 0.55e2 * (eta ^ 3) + 0.427e3 / 0.165e3 * (eta ^ 2) + 0.1168e4 / 0.15e2 * eta + 0.2576e4 / 0.33e2) * (ci2 ^ 2) + (eta ^ 4) / 0.6e1 + 0.49e2 / 0.33e2 * (eta ^ 3) - 0.559e3 / 0.990e3 * (eta ^ 2) - 0.584e3 / 0.45e2 * eta - 0.1288e4 / 0.99e2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((g - h + 7 * f)) - 0.703e3 / 0.2068e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) + 0.732e3 / 0.703e3 * eta + 0.210e3 / 0.703e3) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((-5 * g - h + f)) + 0.7499e4 / 0.4136e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((-0.377520e6 / 0.7499e4 + 0.15407e5 / 0.7499e4 * (eta ^ 7) + 0.47429e5 / 0.7499e4 * (eta ^ 8) + (eta ^ 9) - 0.377631e6 / 0.7499e4 * (eta ^ 6) - 0.462959e6 / 0.7499e4 * (eta ^ 5) + 0.1213045e7 / 0.7499e4 * (eta ^ 3) - 0.17253e5 / 0.7499e4 * (eta ^ 2) - 0.823680e6 / 0.7499e4 * eta + 0.666223e6 / 0.7499e4 * (eta ^ 4)) * (ci2 ^ 4) + (-0.47429e5 / 0.7499e4 * (eta ^ 8) - 0.15407e5 / 0.7499e4 * (eta ^ 7) + 0.17253e5 / 0.7499e4 * (eta ^ 2) + 0.377520e6 / 0.7499e4 - (eta ^ 9) + 0.462959e6 / 0.7499e4 * (eta ^ 5) - 0.666223e6 / 0.7499e4 * (eta ^ 4) - 0.1213045e7 / 0.7499e4 * (eta ^ 3) + 0.823680e6 / 0.7499e4 * eta + 0.377631e6 / 0.7499e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.17455e5 / 0.14998e5 * (eta ^ 8) - 0.5151e4 / 0.14998e5 * (eta ^ 2) + 0.6069e4 / 0.14998e5 * (eta ^ 7) - 0.62920e5 / 0.7499e4 + 0.2873e4 / 0.14998e5 * (eta ^ 9) - 0.137280e6 / 0.7499e4 * eta + 0.224461e6 / 0.14998e5 * (eta ^ 4) - 0.130893e6 / 0.14998e5 * (eta ^ 6) + 0.408247e6 / 0.14998e5 * (eta ^ 3) - 0.159909e6 / 0.14998e5 * (eta ^ 5)) * cos((3 * g + h + 3 * f)) + 0.7659e4 / 0.4136e4 * (ci2 ^ 2) * (ci2 - 1) * ((0.57200e5 / 0.2553e4 + 0.131e3 / 0.111e3 * (eta ^ 7) + 0.12215e5 / 0.2553e4 * (eta ^ 8) + (eta ^ 9) - 0.2353e4 / 0.69e2 * (eta ^ 6) - 0.57029e5 / 0.2553e4 * (eta ^ 5) + 0.109703e6 / 0.2553e4 * (eta ^ 3) - 0.60061e5 / 0.851e3 * (eta ^ 2) - 0.18304e5 / 0.851e3 * eta + 0.201029e6 / 0.2553e4 * (eta ^ 4)) * (ci2 ^ 4) + (-0.12215e5 / 0.2553e4 * (eta ^ 8) - 0.131e3 / 0.111e3 * (eta ^ 7) + 0.60061e5 / 0.851e3 * (eta ^ 2) - 0.57200e5 / 0.2553e4 - (eta ^ 9) + 0.57029e5 / 0.2553e4 * (eta ^ 5) - 0.201029e6 / 0.2553e4 * (eta ^ 4) - 0.109703e6 / 0.2553e4 * (eta ^ 3) + 0.18304e5 / 0.851e3 * eta + 0.2353e4 / 0.69e2 * (eta ^ 6)) * (ci2 ^ 2) + 0.14287e5 / 0.15318e5 * (eta ^ 8) - 0.60373e5 / 0.5106e4 * (eta ^ 2) + 0.3733e4 / 0.15318e5 * (eta ^ 7) + 0.337e3 / 0.1702e4 * (eta ^ 9) - 0.9152e4 / 0.2553e4 * eta + 0.209389e6 / 0.15318e5 * (eta ^ 4) - 0.95405e5 / 0.15318e5 * (eta ^ 6) + 0.115991e6 / 0.15318e5 * (eta ^ 3) - 0.2755e4 / 0.666e3 * (eta ^ 5) + 0.28600e5 / 0.7659e4) * (ci2 + 1) * cos((g - h + f)) + 0.1470e4 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (1 + eta) * (eta - 1) * ((eta ^ 4) + 0.8e1 / 0.7e1 * (eta ^ 3) - 0.246e3 / 0.49e2 * (eta ^ 2) - 0.344e3 / 0.49e2 * eta - 0.3e1) * sin((3 * g + h + f)) - 0.255e3 / 0.517e3 * (ci2 ^ 2) * ((eta ^ 2) + 0.16e2 / 0.17e2 * eta - 0.9e1 / 0.17e2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-g + h + f)) - 0.45e2 / 0.47e2 * (ci2 ^ 2) * ((eta ^ 2) + 0.34e2 / 0.33e2 * eta + 0.3e1 / 0.11e2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-3 * g - h + f)) + 0.870e3 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta ^ 4) + 0.16e2 / 0.29e2 * (eta ^ 3) - 0.246e3 / 0.29e2 * (eta ^ 2) - 0.64e2 / 0.29e2 * eta + 0.273e3 / 0.29e2) * (1 + eta) * (eta - 1) * sin((g - h + 3 * f)) + 0.435e3 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 2) * ((eta ^ 2) + 0.10e2 / 0.29e2 * eta - 0.171e3 / 0.29e2) * ((eta - 1) ^ 2) * sin((g - h + 5 * f)) + 0.675e3 / 0.517e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((1 + eta) ^ 2) * (eta - 1) * ((eta ^ 3) + 0.19e2 / 0.45e2 * (eta ^ 2) - 0.181e3 / 0.45e2 * eta - 0.19e2 / 0.5e1) * sin((3 * g + h + 5 * f)) - 0.801e3 / 0.2068e4 * ((0.9828e4 / 0.89e2 + 0.79115e5 / 0.801e3 * (eta ^ 2) + 0.24024e5 / 0.89e2 * eta + (eta ^ 7) + 0.16555e5 / 0.801e3 * (eta ^ 6) + 0.13438e5 / 0.801e3 * (eta ^ 5) - 0.105098e6 / 0.801e3 * (eta ^ 4) - 0.51053e5 / 0.267e3 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) - 0.19656e5 / 0.89e2 - 0.33110e5 / 0.801e3 * (eta ^ 6) - 0.26876e5 / 0.801e3 * (eta ^ 5) + 0.210196e6 / 0.801e3 * (eta ^ 4) + 0.102106e6 / 0.267e3 * (eta ^ 3) - 0.158230e6 / 0.801e3 * (eta ^ 2) - 0.48048e5 / 0.89e2 * eta) * (ci2 ^ 6) + (0.12012e5 / 0.89e2 + 0.4e1 / 0.3e1 * (eta ^ 7) + 0.19424e5 / 0.801e3 * (eta ^ 6) + 0.14096e5 / 0.801e3 * (eta ^ 5) - 0.182468e6 / 0.801e3 * (eta ^ 3) + 0.33080e5 / 0.267e3 * (eta ^ 2) + 0.88088e5 / 0.267e3 * eta - 0.127508e6 / 0.801e3 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 7) / 0.3e1 - 0.20125e5 / 0.801e3 * (eta ^ 2) - 0.2184e4 / 0.89e2 - 0.658e3 / 0.801e3 * (eta ^ 5) + 0.2490e4 / 0.89e2 * (eta ^ 4) + 0.29309e5 / 0.801e3 * (eta ^ 3) - 0.16016e5 / 0.267e3 * eta - 0.2869e4 / 0.801e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.7241e4 / 0.3204e4 * (eta ^ 2) + (eta ^ 7) / 0.36e2 + 0.182e3 / 0.89e2 + 0.4004e4 / 0.801e3 * eta - 0.3457e4 / 0.1602e4 * (eta ^ 4) + 0.625e3 / 0.3204e4 * (eta ^ 6) - 0.8527e4 / 0.3204e4 * (eta ^ 3) - 0.133e3 / 0.1602e4 * (eta ^ 5)) * (1 + eta) * (eta - 1) * cos((g + h + 3 * f)) - 0.315e3 / 0.2068e4 * ((-0.60e2 - 0.18679e5 / 0.315e3 * (eta ^ 2) - 0.624e3 / 0.5e1 * eta + (eta ^ 5) + 0.5567e4 / 0.315e3 * (eta ^ 4) + 0.7057e4 / 0.315e3 * (eta ^ 3)) * (ci2 ^ 8) + (0.120e3 - (2 * eta ^ 5) - 0.11134e5 / 0.315e3 * (eta ^ 4) - 0.14114e5 / 0.315e3 * (eta ^ 3) + 0.37358e5 / 0.315e3 * (eta ^ 2) + 0.1248e4 / 0.5e1 * eta) * (ci2 ^ 6) + (-0.220e3 / 0.3e1 + 0.4e1 / 0.3e1 * (eta ^ 5) + 0.2708e4 / 0.105e3 * (eta ^ 3) - 0.7732e4 / 0.105e3 * (eta ^ 2) - 0.2288e4 / 0.15e2 * eta + 0.744e3 / 0.35e2 * (eta ^ 4)) * (ci2 ^ 4) + (0.4517e4 / 0.315e3 * (eta ^ 2) + 0.40e2 / 0.3e1 - (eta ^ 5) / 0.3e1 - 0.1129e4 / 0.315e3 * (eta ^ 4) - 0.1067e4 / 0.315e3 * (eta ^ 3) + 0.416e3 / 0.15e2 * eta) * (ci2 ^ 2) - 0.173e3 / 0.140e3 * (eta ^ 2) - 0.10e2 / 0.9e1 - 0.104e3 / 0.45e2 * eta + 0.65e2 / 0.252e3 * (eta ^ 4) + 0.253e3 / 0.1260e4 * (eta ^ 3) + (eta ^ 5) / 0.36e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((g + h + 5 * f)) - 0.1143e4 / 0.2068e4 * (1 + eta) * (eta - 1) * ((-0.8580e4 / 0.127e3 + 0.105133e6 / 0.381e3 * (eta ^ 2) + 0.24024e5 / 0.127e3 * eta + (eta ^ 7) + 0.27023e5 / 0.1143e4 * (eta ^ 6) + 0.6970e4 / 0.1143e4 * (eta ^ 5) - 0.198914e6 / 0.1143e4 * (eta ^ 4) - 0.140153e6 / 0.1143e4 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) + 0.17160e5 / 0.127e3 - 0.54046e5 / 0.1143e4 * (eta ^ 6) - 0.13940e5 / 0.1143e4 * (eta ^ 5) + 0.397828e6 / 0.1143e4 * (eta ^ 4) + 0.280306e6 / 0.1143e4 * (eta ^ 3) - 0.210266e6 / 0.381e3 * (eta ^ 2) - 0.48048e5 / 0.127e3 * eta) * (ci2 ^ 6) + (-0.31460e5 / 0.381e3 + 0.4e1 / 0.3e1 * (eta ^ 7) + 0.10376e5 / 0.381e3 * (eta ^ 6) + 0.1696e4 / 0.381e3 * (eta ^ 5) - 0.54772e5 / 0.381e3 * (eta ^ 3) + 0.42544e5 / 0.127e3 * (eta ^ 2) + 0.88088e5 / 0.381e3 * eta - 0.78836e5 / 0.381e3 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 7) / 0.3e1 - 0.22499e5 / 0.381e3 * (eta ^ 2) + 0.5720e4 / 0.381e3 + 0.1882e4 / 0.1143e4 * (eta ^ 5) + 0.37594e5 / 0.1143e4 * (eta ^ 4) + 0.24163e5 / 0.1143e4 * (eta ^ 3) - 0.16016e5 / 0.381e3 * eta - 0.4105e4 / 0.1143e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.2431e4 / 0.508e3 * (eta ^ 2) + (eta ^ 7) / 0.36e2 + 0.4004e4 / 0.1143e4 * eta - 0.5171e4 / 0.2286e4 * (eta ^ 4) + 0.631e3 / 0.4572e4 * (eta ^ 6) - 0.6449e4 / 0.4572e4 * (eta ^ 3) - 0.631e3 / 0.2286e4 * (eta ^ 5) - 0.1430e4 / 0.1143e4) * cos((-g - h + f)) - 0.45e2 / 0.2068e4 * (((eta ^ 2) + 0.84e2 / 0.5e1 * eta + 0.84e2 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta ^ 2) - 0.168e3 / 0.5e1 * eta - 0.168e3 / 0.5e1) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) + 0.308e3 / 0.15e2 * eta + 0.308e3 / 0.15e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 - 0.56e2 / 0.15e2 * eta - 0.56e2 / 0.15e2) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 + 0.14e2 / 0.45e2 * eta + 0.14e2 / 0.45e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 4) * cos((-g - h + 7 * f)) - 0.315e3 / 0.2068e4 * ((-0.60e2 + 0.4757e4 / 0.315e3 * (eta ^ 2) - 0.276e3 / 0.5e1 * eta + (eta ^ 4) + 0.5504e4 / 0.315e3 * (eta ^ 3)) * (ci2 ^ 8) + (0.120e3 - (2 * eta ^ 4) - 0.11008e5 / 0.315e3 * (eta ^ 3) - 0.9514e4 / 0.315e3 * (eta ^ 2) + 0.552e3 / 0.5e1 * eta) * (ci2 ^ 6) + (-0.220e3 / 0.3e1 + 0.2204e4 / 0.105e3 * (eta ^ 3) + 0.1816e4 / 0.105e3 * (eta ^ 2) - 0.1012e4 / 0.15e2 * eta + 0.4e1 / 0.3e1 * (eta ^ 4)) * (ci2 ^ 4) + (-0.691e3 / 0.315e3 * (eta ^ 2) + 0.40e2 / 0.3e1 - (eta ^ 4) / 0.3e1 - 0.1108e4 / 0.315e3 * (eta ^ 3) + 0.184e3 / 0.15e2 * eta) * (ci2 ^ 2) + 0.179e3 / 0.1260e4 * (eta ^ 2) - 0.10e2 / 0.9e1 - 0.46e2 / 0.45e2 * eta + (eta ^ 4) / 0.36e2 + 0.53e2 / 0.210e3 * (eta ^ 3)) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-g - h + 5 * f)) - 0.801e3 / 0.2068e4 * ((0.9828e4 / 0.89e2 - 0.127273e6 / 0.801e3 * (eta ^ 2) + 0.5460e4 / 0.89e2 * eta + (eta ^ 6) + 0.16762e5 / 0.801e3 * (eta ^ 5) + 0.15860e5 / 0.801e3 * (eta ^ 4) - 0.30746e5 / 0.267e3 * (eta ^ 3)) * (ci2 ^ 8) + (-0.19656e5 / 0.89e2 - (2 * eta ^ 6) - 0.33524e5 / 0.801e3 * (eta ^ 5) - 0.31720e5 / 0.801e3 * (eta ^ 4) + 0.61492e5 / 0.267e3 * (eta ^ 3) + 0.254546e6 / 0.801e3 * (eta ^ 2) - 0.10920e5 / 0.89e2 * eta) * (ci2 ^ 6) + (0.12012e5 / 0.89e2 + 0.4e1 / 0.3e1 * (eta ^ 6) + 0.19700e5 / 0.801e3 * (eta ^ 5) - 0.112144e6 / 0.801e3 * (eta ^ 3) - 0.51004e5 / 0.267e3 * (eta ^ 2) + 0.20020e5 / 0.267e3 * eta + 0.17020e5 / 0.801e3 * (eta ^ 4)) * (ci2 ^ 4) + (0.25739e5 / 0.801e3 * (eta ^ 2) - 0.2184e4 / 0.89e2 - 0.2938e4 / 0.801e3 * (eta ^ 5) - 0.1160e4 / 0.801e3 * (eta ^ 4) + 0.19906e5 / 0.801e3 * (eta ^ 3) - 0.3640e4 / 0.267e3 * eta - (eta ^ 6) / 0.3e1) * (ci2 ^ 2) - 0.8047e4 / 0.3204e4 * (eta ^ 2) + 0.182e3 / 0.89e2 + 0.910e3 / 0.801e3 * eta - 0.61e2 / 0.1602e4 * (eta ^ 4) + (eta ^ 6) / 0.36e2 - 0.1570e4 / 0.801e3 * (eta ^ 3) + 0.18e2 / 0.89e2 * (eta ^ 5)) * (1 + eta) * ((eta - 1) ^ 2) * cos((-g - h + 3 * f)) - 0.45e2 / 0.2068e4 * (((eta ^ 2) + 0.84e2 / 0.5e1 * eta + 0.84e2 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta ^ 2) - 0.168e3 / 0.5e1 * eta - 0.168e3 / 0.5e1) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) + 0.308e3 / 0.15e2 * eta + 0.308e3 / 0.15e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 - 0.56e2 / 0.15e2 * eta - 0.56e2 / 0.15e2) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 + 0.14e2 / 0.45e2 * eta + 0.14e2 / 0.45e2) * ((1 + eta) ^ 4) * ((eta - 1) ^ 3) * cos((g + h + 7 * f))) * J ^ 2 / a ^ 3 / (eta ^ 15) / (1 + eta) -0.585e3 / 0.4e1 * R__e ^ 4 * J ^ 2 * (-0.17e2 / 0.4160e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) - 0.11640e5 / 0.17e2 * (eta ^ 5) - (1322 * eta ^ 4) + 0.27008e5 / 0.17e2 * (eta ^ 3) + 0.70257e5 / 0.17e2 * (eta ^ 2) + 0.28080e5 / 0.17e2 * eta - 0.4368e4 / 0.17e2) * (ci2 ^ 4) + (-(eta ^ 6) + 0.11640e5 / 0.17e2 * (eta ^ 5) + (1322 * eta ^ 4) - 0.27008e5 / 0.17e2 * (eta ^ 3) - 0.70257e5 / 0.17e2 * (eta ^ 2) - 0.28080e5 / 0.17e2 * eta + 0.4368e4 / 0.17e2) * (ci2 ^ 2) + 0.49e2 / 0.102e3 * (eta ^ 6) - 0.6658e4 / 0.51e2 * (eta ^ 5) - 0.12887e5 / 0.51e2 * (eta ^ 4) + 0.12974e5 / 0.51e2 * (eta ^ 3) + 0.70789e5 / 0.102e3 * (eta ^ 2) + 0.4680e4 / 0.17e2 * eta - 0.728e3 / 0.17e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - h + f)) - 0.21e2 / 0.4160e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.1651e4 / 0.21e2 * (eta ^ 4) + (127 * eta ^ 3) - 0.4187e4 / 0.21e2 * (eta ^ 2) - 0.9152e4 / 0.21e2 * eta - 0.560e3 / 0.3e1) * (ci2 ^ 4) + (-(eta ^ 5) - 0.1651e4 / 0.21e2 * (eta ^ 4) - (127 * eta ^ 3) + 0.4187e4 / 0.21e2 * (eta ^ 2) + 0.9152e4 / 0.21e2 * eta + 0.560e3 / 0.3e1) * (ci2 ^ 2) + (eta ^ 5) / 0.6e1 + 0.1775e4 / 0.126e3 * (eta ^ 4) + 0.2915e4 / 0.126e3 * (eta ^ 3) - 0.4063e4 / 0.126e3 * (eta ^ 2) - 0.4576e4 / 0.63e2 * eta - 0.280e3 / 0.9e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((-g + h + 3 * f)) + 0.355e3 / 0.1248e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3) + 0.1427e4 / 0.1775e4 * (eta ^ 2) - 0.6282e4 / 0.1775e4 * eta - 0.1302e4 / 0.355e3) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((5 * g + h + 9 * f)) + 0.5479e4 / 0.6240e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5) + 0.3445e4 / 0.5479e4 * (eta ^ 4) - 0.33485e5 / 0.5479e4 * (eta ^ 3) - 0.28803e5 / 0.5479e4 * (eta ^ 2) + 0.36270e5 / 0.5479e4 * eta + 0.40950e5 / 0.5479e4) * ((1 + eta) ^ 2) * (eta - 1) * sin((5 * g + h + 7 * f)) - 0.1199e4 / 0.6240e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.228e3 / 0.1199e4 * eta - 0.6510e4 / 0.1199e4) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((3 * g - h + 9 * f)) + 0.1523e4 / 0.1560e4 * (ci2 ^ 4) * ((eta ^ 6) + 0.2167e4 / 0.1523e4 * (eta ^ 5) - 0.19559e5 / 0.3046e4 * (eta ^ 4) - 0.17228e5 / 0.1523e4 * (eta ^ 3) + 0.3162e4 / 0.1523e4 * (eta ^ 2) + 0.22737e5 / 0.1523e4 * eta + 0.27885e5 / 0.3046e4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * (eta - 1) * sin((5 * g + h + 3 * f)) + 0.97e2 / 0.4160e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) - 0.6056e4 / 0.97e2 * (eta ^ 5) - 0.770e3 / 0.97e2 * (eta ^ 4) + 0.34472e5 / 0.97e2 * (eta ^ 3) + 0.5361e4 / 0.97e2 * (eta ^ 2) - 0.36816e5 / 0.97e2 * eta - 0.4368e4 / 0.97e2) * (ci2 ^ 4) + (-(eta ^ 6) + 0.6056e4 / 0.97e2 * (eta ^ 5) + 0.770e3 / 0.97e2 * (eta ^ 4) - 0.34472e5 / 0.97e2 * (eta ^ 3) - 0.5361e4 / 0.97e2 * (eta ^ 2) + 0.36816e5 / 0.97e2 * eta + 0.4368e4 / 0.97e2) * (ci2 ^ 2) + 0.43e2 / 0.194e3 * (eta ^ 6) - 0.3482e4 / 0.291e3 * (eta ^ 5) - 0.443e3 / 0.291e3 * (eta ^ 4) + 0.18298e5 / 0.291e3 * (eta ^ 3) + 0.5893e4 / 0.582e3 * (eta ^ 2) - 0.6136e4 / 0.97e2 * eta - 0.728e3 / 0.97e2) * ((1 + eta) ^ 2) * (eta - 1) * sin((-g + h + f)) - 0.703e3 / 0.6240e4 * ((eta ^ 2) + 0.732e3 / 0.703e3 * eta + 0.210e3 / 0.703e3) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((-5 * g - h + f)) - 0.95e2 / 0.312e3 * (ci2 ^ 4) * ((eta ^ 6) - 0.553e3 / 0.475e3 * (eta ^ 5) - 0.14919e5 / 0.950e3 * (eta ^ 4) + 0.788e3 / 0.95e2 * (eta ^ 3) + 0.978e3 / 0.19e2 * (eta ^ 2) - 0.4719e4 / 0.475e3 * eta - 0.429e3 / 0.10e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * (eta - 1) * sin((3 * g - h + 5 * f)) - 0.7499e4 / 0.12480e5 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((-0.377520e6 / 0.7499e4 + 0.15407e5 / 0.7499e4 * (eta ^ 7) + 0.47429e5 / 0.7499e4 * (eta ^ 8) + (eta ^ 9) - 0.377631e6 / 0.7499e4 * (eta ^ 6) - 0.462959e6 / 0.7499e4 * (eta ^ 5) + 0.1213045e7 / 0.7499e4 * (eta ^ 3) - 0.17253e5 / 0.7499e4 * (eta ^ 2) - 0.823680e6 / 0.7499e4 * eta + 0.666223e6 / 0.7499e4 * (eta ^ 4)) * (ci2 ^ 4) + (-0.47429e5 / 0.7499e4 * (eta ^ 8) - 0.15407e5 / 0.7499e4 * (eta ^ 7) + 0.17253e5 / 0.7499e4 * (eta ^ 2) + 0.377520e6 / 0.7499e4 - (eta ^ 9) + 0.462959e6 / 0.7499e4 * (eta ^ 5) - 0.666223e6 / 0.7499e4 * (eta ^ 4) - 0.1213045e7 / 0.7499e4 * (eta ^ 3) + 0.823680e6 / 0.7499e4 * eta + 0.377631e6 / 0.7499e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.17455e5 / 0.14998e5 * (eta ^ 8) - 0.5151e4 / 0.14998e5 * (eta ^ 2) + 0.6069e4 / 0.14998e5 * (eta ^ 7) - 0.62920e5 / 0.7499e4 + 0.2873e4 / 0.14998e5 * (eta ^ 9) - 0.137280e6 / 0.7499e4 * eta + 0.224461e6 / 0.14998e5 * (eta ^ 4) - 0.130893e6 / 0.14998e5 * (eta ^ 6) + 0.408247e6 / 0.14998e5 * (eta ^ 3) - 0.159909e6 / 0.14998e5 * (eta ^ 5)) * sin((3 * g + h + 3 * f)) + 0.2553e4 / 0.4160e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.57200e5 / 0.2553e4 + 0.131e3 / 0.111e3 * (eta ^ 7) + 0.12215e5 / 0.2553e4 * (eta ^ 8) + (eta ^ 9) - 0.2353e4 / 0.69e2 * (eta ^ 6) - 0.57029e5 / 0.2553e4 * (eta ^ 5) + 0.109703e6 / 0.2553e4 * (eta ^ 3) - 0.60061e5 / 0.851e3 * (eta ^ 2) - 0.18304e5 / 0.851e3 * eta + 0.201029e6 / 0.2553e4 * (eta ^ 4)) * (ci2 ^ 4) + (-0.12215e5 / 0.2553e4 * (eta ^ 8) - 0.131e3 / 0.111e3 * (eta ^ 7) + 0.60061e5 / 0.851e3 * (eta ^ 2) - 0.57200e5 / 0.2553e4 - (eta ^ 9) + 0.57029e5 / 0.2553e4 * (eta ^ 5) - 0.201029e6 / 0.2553e4 * (eta ^ 4) - 0.109703e6 / 0.2553e4 * (eta ^ 3) + 0.18304e5 / 0.851e3 * eta + 0.2353e4 / 0.69e2 * (eta ^ 6)) * (ci2 ^ 2) + 0.14287e5 / 0.15318e5 * (eta ^ 8) - 0.60373e5 / 0.5106e4 * (eta ^ 2) + 0.3733e4 / 0.15318e5 * (eta ^ 7) + 0.337e3 / 0.1702e4 * (eta ^ 9) - 0.9152e4 / 0.2553e4 * eta + 0.209389e6 / 0.15318e5 * (eta ^ 4) - 0.95405e5 / 0.15318e5 * (eta ^ 6) + 0.115991e6 / 0.15318e5 * (eta ^ 3) - 0.2755e4 / 0.666e3 * (eta ^ 5) + 0.28600e5 / 0.7659e4) * sin((g - h + f)) + 0.5e1 / 0.104e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * cos((3 * g + h + 7 * f)) + 0.53e2 / 0.52e2 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * (1 + eta) * ((eta ^ 5) + 0.13e2 / 0.53e2 * (eta ^ 4) - 0.382e3 / 0.53e2 * (eta ^ 3) - 0.182e3 / 0.53e2 * (eta ^ 2) + 0.337e3 / 0.53e2 * eta + 0.273e3 / 0.53e2) * cos((3 * g + h + 3 * f)) - (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * cos((-g + h + 3 * f)) / 0.104e3 + (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((-3 * g - h + 3 * f)) / 0.104e3 - 0.5e1 / 0.104e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * cos((g - h + 7 * f)) - 0.203e3 / 0.1560e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * ((eta ^ 7) - 0.92e2 / 0.29e2 * (eta ^ 6) - 0.6789e4 / 0.406e3 * (eta ^ 5) + 0.14897e5 / 0.406e3 * (eta ^ 4) + 0.10886e5 / 0.203e3 * (eta ^ 3) - 0.675e3 / 0.7e1 * (eta ^ 2) - 0.17589e5 / 0.406e3 * eta + 0.27885e5 / 0.406e3) * sin((3 * g - h + 3 * f)) + 0.3883e4 / 0.12480e5 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((-0.34320e5 / 0.353e3 + 0.29126e5 / 0.3883e4 * (eta ^ 7) + (eta ^ 8) + 0.14149e5 / 0.3883e4 * (eta ^ 6) - 0.230140e6 / 0.3883e4 * (eta ^ 5) + 0.41074e5 / 0.353e3 * (eta ^ 3) + 0.566187e6 / 0.3883e4 * (eta ^ 2) - 0.28080e5 / 0.353e3 * eta - 0.267467e6 / 0.3883e4 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) - 0.29126e5 / 0.3883e4 * (eta ^ 7) - 0.566187e6 / 0.3883e4 * (eta ^ 2) + 0.34320e5 / 0.353e3 + 0.230140e6 / 0.3883e4 * (eta ^ 5) + 0.267467e6 / 0.3883e4 * (eta ^ 4) - 0.41074e5 / 0.353e3 * (eta ^ 3) + 0.28080e5 / 0.353e3 * eta - 0.14149e5 / 0.3883e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.1497e4 / 0.7766e4 * (eta ^ 8) + 0.189329e6 / 0.7766e4 * (eta ^ 2) + 0.5469e4 / 0.3883e4 * (eta ^ 7) - 0.5720e4 / 0.353e3 - 0.4680e4 / 0.353e3 * eta - 0.95465e5 / 0.7766e4 * (eta ^ 4) + 0.5935e4 / 0.7766e4 * (eta ^ 6) + 0.74253e5 / 0.3883e4 * (eta ^ 3) - 0.40066e5 / 0.3883e4 * (eta ^ 5)) * (eta - 1) * sin((g - h + 3 * f)) - (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-5 * g - h + 3 * f)) / 0.208e3 - 0.37e2 / 0.1040e4 * (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + 11 * f)) - 0.5337e4 / 0.4160e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((0.57200e5 / 0.5337e4 + 0.29954e5 / 0.5337e4 * (eta ^ 7) + (eta ^ 8) + 0.45239e5 / 0.5337e4 * (eta ^ 6) - 0.30364e5 / 0.1779e4 * (eta ^ 5) - 0.11146e5 / 0.1779e4 * (eta ^ 3) + 0.270553e6 / 0.5337e4 * (eta ^ 2) + 0.25168e5 / 0.593e3 * eta - 0.246521e6 / 0.5337e4 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) - 0.29954e5 / 0.5337e4 * (eta ^ 7) - 0.270553e6 / 0.5337e4 * (eta ^ 2) - 0.57200e5 / 0.5337e4 + 0.30364e5 / 0.1779e4 * (eta ^ 5) + 0.246521e6 / 0.5337e4 * (eta ^ 4) + 0.11146e5 / 0.1779e4 * (eta ^ 3) - 0.25168e5 / 0.593e3 * eta - 0.45239e5 / 0.5337e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.6329e4 / 0.32022e5 * (eta ^ 8) + 0.269617e6 / 0.32022e5 * (eta ^ 2) + 0.17501e5 / 0.16011e5 * (eta ^ 7) + 0.28600e5 / 0.16011e5 + 0.12584e5 / 0.1779e4 * eta - 0.87235e5 / 0.10674e5 * (eta ^ 4) + 0.17669e5 / 0.10674e5 * (eta ^ 6) - 0.2363e4 / 0.1779e4 * (eta ^ 3) - 0.15734e5 / 0.5337e4 * (eta ^ 5)) * sin((3 * g + h + f)) + (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-3 * g + h + 3 * f)) / 0.208e3 + 0.37e2 / 0.1040e4 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 11 * f)) + 0.1987e4 / 0.1560e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 7) + 0.1028e4 / 0.1987e4 * (eta ^ 6) - 0.31813e5 / 0.3974e4 * (eta ^ 5) - 0.22799e5 / 0.3974e4 * (eta ^ 4) + 0.30014e5 / 0.1987e4 * (eta ^ 3) + 0.29169e5 / 0.1987e4 * (eta ^ 2) - 0.31317e5 / 0.3974e4 * eta - 0.40755e5 / 0.3974e4) * (1 + eta) * sin((5 * g + h + 5 * f)) - 0.7e1 / 0.832e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) + 0.464e3 / 0.35e2 * eta + 0.464e3 / 0.35e2) * ((1 + eta) ^ 4) * ((eta - 1) ^ 3) * sin((3 * g + h + 9 * f)) + 0.3e1 / 0.4160e4 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) + 0.208e3 / 0.3e1 * eta + 0.208e3 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 4) * sin((-3 * g - h + 5 * f)) + 0.7e1 / 0.832e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) + 0.464e3 / 0.35e2 * eta + 0.464e3 / 0.35e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 4) * sin((g - h + 9 * f)) - 0.3e1 / 0.4160e4 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2) + 0.208e3 / 0.3e1 * eta + 0.208e3 / 0.3e1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 3) * sin((-g + h + 5 * f)) + (-0.17e2 / 0.1040e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((eta ^ 8) - 0.49e2 / 0.17e2 * (eta ^ 7) - 0.1205e4 / 0.17e2 * (eta ^ 6) + 0.1335e4 / 0.17e2 * (eta ^ 5) + 0.9341e4 / 0.17e2 * (eta ^ 4) - 0.14257e5 / 0.51e2 * (eta ^ 3) - 0.20415e5 / 0.17e2 * (eta ^ 2) + 0.3861e4 / 0.17e2 * eta + 0.12870e5 / 0.17e2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + 4 * f)) - 0.13e2 / 0.20e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((-0.495e3 / 0.13e2 - 0.337e3 / 0.169e3 * (eta ^ 7) + (eta ^ 8) - 0.4190e4 / 0.169e3 * (eta ^ 6) - 0.4246e4 / 0.169e3 * (eta ^ 5) + 0.16875e5 / 0.169e3 * (eta ^ 3) - 0.4890e4 / 0.169e3 * (eta ^ 2) - 0.1188e4 / 0.13e2 * eta + 0.11722e5 / 0.169e3 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) + 0.337e3 / 0.169e3 * (eta ^ 7) + 0.4890e4 / 0.169e3 * (eta ^ 2) + 0.495e3 / 0.13e2 + 0.4246e4 / 0.169e3 * (eta ^ 5) - 0.11722e5 / 0.169e3 * (eta ^ 4) - 0.16875e5 / 0.169e3 * (eta ^ 3) + 0.1188e4 / 0.13e2 * eta + 0.4190e4 / 0.169e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.67e2 / 0.338e3 * (eta ^ 8) - 0.165e3 / 0.26e2 - 0.801e3 / 0.169e3 * (eta ^ 2) - 0.373e3 / 0.1014e4 * (eta ^ 7) - 0.198e3 / 0.13e2 * eta + 0.2013e4 / 0.169e3 * (eta ^ 4) - 0.769e3 / 0.169e3 * (eta ^ 6) + 0.17371e5 / 0.1014e4 * (eta ^ 3) - 0.779e3 / 0.169e3 * (eta ^ 5)) * sin((3 * g + h + 2 * f)) + 0.81e2 / 0.260e3 * ((0.715e3 / 0.9e1 - 0.227e3 / 0.81e2 * (eta ^ 7) + (eta ^ 8) - 0.784e3 / 0.27e2 * (eta ^ 6) - 0.92e2 / 0.9e1 * (eta ^ 5) + 0.421e3 / 0.9e1 * (eta ^ 3) - 0.4376e4 / 0.27e2 * (eta ^ 2) - 0.286e3 / 0.9e1 * eta + 0.3140e4 / 0.27e2 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) + 0.227e3 / 0.81e2 * (eta ^ 7) + 0.4376e4 / 0.27e2 * (eta ^ 2) - 0.715e3 / 0.9e1 + 0.92e2 / 0.9e1 * (eta ^ 5) - 0.3140e4 / 0.27e2 * (eta ^ 4) - 0.421e3 / 0.9e1 * (eta ^ 3) + 0.286e3 / 0.9e1 * eta + 0.784e3 / 0.27e2 * (eta ^ 6)) * (ci2 ^ 2) + 0.97e2 / 0.486e3 * (eta ^ 8) - 0.734e3 / 0.27e2 * (eta ^ 2) - 0.85e2 / 0.162e3 * (eta ^ 7) + 0.715e3 / 0.54e2 - 0.143e3 / 0.27e2 * eta + 0.1648e4 / 0.81e2 * (eta ^ 4) - 0.1312e4 / 0.243e3 * (eta ^ 6) + 0.4117e4 / 0.486e3 * (eta ^ 3) - 0.164e3 / 0.81e2 * (eta ^ 5)) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * sin((g - h + 2 * f)) + 0.161e3 / 0.1040e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 8) + 0.227e3 / 0.161e3 * (eta ^ 7) - 0.4321e4 / 0.161e3 * (eta ^ 6) - 0.6861e4 / 0.161e3 * (eta ^ 5) + 0.34075e5 / 0.483e3 * (eta ^ 4) + 0.76355e5 / 0.483e3 * (eta ^ 3) + 0.2397e4 / 0.161e3 * (eta ^ 2) - 0.21879e5 / 0.161e3 * eta - 0.12870e5 / 0.161e3) * sin((5 * g + h + 4 * f)) - 0.129e3 / 0.520e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((-0.14014e5 / 0.129e3 - 0.281e3 / 0.86e2 * (eta ^ 7) + (eta ^ 8) - 0.9595e4 / 0.258e3 * (eta ^ 6) - 0.4561e4 / 0.129e3 * (eta ^ 5) + 0.18599e5 / 0.86e2 * (eta ^ 3) - 0.10559e5 / 0.258e3 * (eta ^ 2) - 0.9724e4 / 0.43e2 * eta + 0.5694e4 / 0.43e2 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 8) + 0.281e3 / 0.86e2 * (eta ^ 7) + 0.10559e5 / 0.258e3 * (eta ^ 2) + 0.14014e5 / 0.129e3 + 0.4561e4 / 0.129e3 * (eta ^ 5) - 0.5694e4 / 0.43e2 * (eta ^ 4) - 0.18599e5 / 0.86e2 * (eta ^ 3) + 0.9724e4 / 0.43e2 * eta + 0.9595e4 / 0.258e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.15e2 / 0.86e2 * (eta ^ 8) - 0.10667e5 / 0.1548e4 * (eta ^ 2) - 0.875e3 / 0.1548e4 * (eta ^ 7) - 0.7007e4 / 0.387e3 - 0.4862e4 / 0.129e3 * eta + 0.2854e4 / 0.129e3 * (eta ^ 4) - 0.9743e4 / 0.1548e4 * (eta ^ 6) + 0.55765e5 / 0.1548e4 * (eta ^ 3) - 0.4609e4 / 0.774e3 * (eta ^ 5)) * sin((3 * g + h + 4 * f)) + 0.517e3 / 0.1560e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.546e3 / 0.47e2 - 0.61233e5 / 0.1034e4 * (eta ^ 2) - 0.1872e4 / 0.47e2 * eta + (eta ^ 8) + 0.1415e4 / 0.1034e4 * (eta ^ 7) - 0.1847e4 / 0.94e2 * (eta ^ 6) - 0.9767e4 / 0.517e3 * (eta ^ 5) + 0.34588e5 / 0.517e3 * (eta ^ 4) + 0.5461e4 / 0.94e2 * (eta ^ 3)) * (ci2 ^ 4) + (-(eta ^ 8) - 0.1415e4 / 0.1034e4 * (eta ^ 7) + 0.61233e5 / 0.1034e4 * (eta ^ 2) - 0.546e3 / 0.47e2 + 0.9767e4 / 0.517e3 * (eta ^ 5) - 0.34588e5 / 0.517e3 * (eta ^ 4) - 0.5461e4 / 0.94e2 * (eta ^ 3) + 0.1872e4 / 0.47e2 * eta + 0.1847e4 / 0.94e2 * (eta ^ 6)) * (ci2 ^ 2) + 0.19e2 / 0.94e2 * (eta ^ 8) - 0.20399e5 / 0.2068e4 * (eta ^ 2) + 0.589e3 / 0.2068e4 * (eta ^ 7) + 0.91e2 / 0.47e2 - 0.312e3 / 0.47e2 * eta + 0.6077e4 / 0.517e3 * (eta ^ 4) - 0.7563e4 / 0.2068e4 * (eta ^ 6) + 0.21261e5 / 0.2068e4 * (eta ^ 3) - 0.3661e4 / 0.1034e4 * (eta ^ 5)) * sin((g - h)) + (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 12 * f)) / 0.416e3 + (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-3 * g + h + 4 * f)) / 0.2080e4 - ((eta ^ 7) - 0.29e2 / 0.4e1 * (eta ^ 6) - 0.301e3 / 0.3e1 * (eta ^ 5) + 0.3277e4 / 0.12e2 * (eta ^ 4) + 0.1775e4 / 0.3e1 * (eta ^ 3) - 0.4943e4 / 0.4e1 * (eta ^ 2) - (715 * eta) + 0.5005e4 / 0.4e1) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * sin((3 * g - h + 2 * f)) / 0.260e3 + 0.251e3 / 0.1560e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 7) + 0.243e3 / 0.502e3 * (eta ^ 6) - 0.6074e4 / 0.251e3 * (eta ^ 5) - 0.8119e4 / 0.502e3 * (eta ^ 4) + 0.18871e5 / 0.251e3 * (eta ^ 3) + 0.34269e5 / 0.502e3 * (eta ^ 2) - 0.13728e5 / 0.251e3 * eta - 0.33033e5 / 0.502e3) * (1 + eta) * sin((5 * g + h + 6 * f)) - 0.1133e4 / 0.1560e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 7) + 0.4661e4 / 0.2266e4 * (eta ^ 6) - 0.15959e5 / 0.1133e4 * (eta ^ 5) - 0.35198e5 / 0.1133e4 * (eta ^ 4) + 0.10592e5 / 0.1133e4 * (eta ^ 3) + 0.122379e6 / 0.2266e4 * (eta ^ 2) + 0.3510e4 / 0.103e3 * eta + 0.546e3 / 0.103e3) * (ci2 ^ 4) + (-(eta ^ 7) - 0.4661e4 / 0.2266e4 * (eta ^ 6) + 0.15959e5 / 0.1133e4 * (eta ^ 5) + 0.35198e5 / 0.1133e4 * (eta ^ 4) - 0.10592e5 / 0.1133e4 * (eta ^ 3) - 0.122379e6 / 0.2266e4 * (eta ^ 2) - 0.3510e4 / 0.103e3 * eta - 0.546e3 / 0.103e3) * (ci2 ^ 2) + 0.457e3 / 0.2266e4 * (eta ^ 7) + 0.1923e4 / 0.4532e4 * (eta ^ 6) - 0.5809e4 / 0.2266e4 * (eta ^ 5) - 0.6467e4 / 0.1133e4 * (eta ^ 4) + 0.1465e4 / 0.1133e4 * (eta ^ 3) + 0.40805e5 / 0.4532e4 * (eta ^ 2) + 0.585e3 / 0.103e3 * eta + 0.91e2 / 0.103e3) * (eta - 1) * sin((3 * g + h)) - (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + 12 * f)) / 0.416e3 - (ci2 ^ 4) * ((eta - 1) ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-5 * g - h + 4 * f)) / 0.2080e4 + 0.73e2 / 0.520e3 * (((eta ^ 7) - 0.581e3 / 0.146e3 * (eta ^ 6) - 0.3077e4 / 0.73e2 * (eta ^ 5) - (30 * eta ^ 4) + 0.12026e5 / 0.73e2 * (eta ^ 3) + 0.24333e5 / 0.146e3 * (eta ^ 2) - 0.12870e5 / 0.73e2 * eta - 0.14014e5 / 0.73e2) * (ci2 ^ 4) + (-(eta ^ 7) + 0.581e3 / 0.146e3 * (eta ^ 6) + 0.3077e4 / 0.73e2 * (eta ^ 5) + (30 * eta ^ 4) - 0.12026e5 / 0.73e2 * (eta ^ 3) - 0.24333e5 / 0.146e3 * (eta ^ 2) + 0.12870e5 / 0.73e2 * eta + 0.14014e5 / 0.73e2) * (ci2 ^ 2) + 0.79e2 / 0.438e3 * (eta ^ 7) - 0.203e3 / 0.292e3 * (eta ^ 6) - 0.3185e4 / 0.438e3 * (eta ^ 5) - 0.395e3 / 0.73e2 * (eta ^ 4) + 0.1980e4 / 0.73e2 * (eta ^ 3) + 0.8075e4 / 0.292e3 * (eta ^ 2) - 0.2145e4 / 0.73e2 * eta - 0.7007e4 / 0.219e3) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((g - h + 4 * f)) + ((ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * eta * Delta * (1 + eta) * ((eta ^ 3) - 0.4e1 / 0.13e2 * (eta ^ 2) - 0.17e2 / 0.13e2 * eta + 0.12e2 / 0.13e2) * cos((g - h)) - 0.25e2 / 0.13e2 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * eta * Delta * (1 + eta) * (eta - 1) * ((eta ^ 2) + 0.29e2 / 0.25e2 * eta + 0.12e2 / 0.25e2) * cos((3 * g + h)) + 0.529e3 / 0.1560e4 * ((-0.81081e5 / 0.529e3 + 0.3753e4 / 0.23e2 * (eta ^ 2) - 0.81081e5 / 0.529e3 * eta + (eta ^ 7) - 0.1163e4 / 0.529e3 * (eta ^ 6) - 0.25043e5 / 0.529e3 * (eta ^ 5) - 0.18059e5 / 0.529e3 * (eta ^ 4) + 0.91323e5 / 0.529e3 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) + 0.162162e6 / 0.529e3 + 0.2326e4 / 0.529e3 * (eta ^ 6) + 0.50086e5 / 0.529e3 * (eta ^ 5) + 0.36118e5 / 0.529e3 * (eta ^ 4) - 0.182646e6 / 0.529e3 * (eta ^ 3) - 0.7506e4 / 0.23e2 * (eta ^ 2) + 0.162162e6 / 0.529e3 * eta) * (ci2 ^ 6) + (-0.99099e5 / 0.529e3 + 0.21e2 / 0.23e2 * (eta ^ 7) - 0.1773e4 / 0.529e3 * (eta ^ 6) - 0.29313e5 / 0.529e3 * (eta ^ 5) + 0.109753e6 / 0.529e3 * (eta ^ 3) + 0.103081e6 / 0.529e3 * (eta ^ 2) - 0.99099e5 / 0.529e3 * eta - 0.20001e5 / 0.529e3 * (eta ^ 4)) * (ci2 ^ 4) + (0.2e1 / 0.23e2 * (eta ^ 7) - 0.16762e5 / 0.529e3 * (eta ^ 2) + 0.18018e5 / 0.529e3 + 0.4270e4 / 0.529e3 * (eta ^ 5) + 0.1942e4 / 0.529e3 * (eta ^ 4) - 0.18430e5 / 0.529e3 * (eta ^ 3) + 0.18018e5 / 0.529e3 * eta + 0.610e3 / 0.529e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.2475e4 / 0.1058e4 * (eta ^ 2) - 0.29e2 / 0.1058e4 * (eta ^ 7) - 0.3003e4 / 0.1058e4 * eta - 0.85e2 / 0.1058e4 * (eta ^ 4) - 0.123e3 / 0.1058e4 * (eta ^ 6) + 0.2753e4 / 0.1058e4 * (eta ^ 3) - 0.3003e4 / 0.1058e4 - 0.473e3 / 0.1058e4 * (eta ^ 5)) * sin((g + h))) * eta + ((-0.693e3 / 0.40e2 - 0.10057e5 / 0.520e3 * (eta ^ 2) - 0.2079e4 / 0.40e2 * eta - 0.31e2 / 0.156e3 * (eta ^ 7) - 0.6437e4 / 0.520e3 * (eta ^ 6) - 0.19789e5 / 0.1560e4 * (eta ^ 5) + 0.31043e5 / 0.780e3 * (eta ^ 4) + 0.22051e5 / 0.390e3 * (eta ^ 3) + 0.67e2 / 0.120e3 * (eta ^ 8)) * (ci2 ^ 8) + (0.31e2 / 0.78e2 * (eta ^ 7) + 0.693e3 / 0.20e2 + 0.6437e4 / 0.260e3 * (eta ^ 6) + 0.19789e5 / 0.780e3 * (eta ^ 5) - 0.31043e5 / 0.390e3 * (eta ^ 4) - 0.22051e5 / 0.195e3 * (eta ^ 3) + 0.10057e5 / 0.260e3 * (eta ^ 2) + 0.2079e4 / 0.20e2 * eta - 0.67e2 / 0.60e2 * (eta ^ 8)) * (ci2 ^ 6) + (-0.847e3 / 0.40e2 - 0.207e3 / 0.520e3 * (eta ^ 7) - 0.3807e4 / 0.260e3 * (eta ^ 6) - 0.7483e4 / 0.520e3 * (eta ^ 5) + 0.35251e5 / 0.520e3 * (eta ^ 3) - 0.6289e4 / 0.260e3 * (eta ^ 2) - 0.2541e4 / 0.40e2 * eta + 0.3143e4 / 0.65e2 * (eta ^ 4) + 0.331e3 / 0.520e3 * (eta ^ 8)) * (ci2 ^ 4) + (0.311e3 / 0.1560e4 * (eta ^ 7) + 0.2521e4 / 0.520e3 * (eta ^ 2) + 0.77e2 / 0.20e2 + 0.133e3 / 0.78e2 * (eta ^ 5) - 0.6673e4 / 0.780e3 * (eta ^ 4) - 0.17549e5 / 0.1560e4 * (eta ^ 3) + 0.231e3 / 0.20e2 * eta + 0.1177e4 / 0.520e3 * (eta ^ 6) - 0.61e2 / 0.780e3 * (eta ^ 8)) * (ci2 ^ 2) - 0.209e3 / 0.480e3 * (eta ^ 2) - 0.47e2 / 0.2080e4 * (eta ^ 7) + (eta ^ 8) / 0.624e3 - 0.77e2 / 0.80e2 * eta - 0.77e2 / 0.240e3 + 0.699e3 / 0.1040e4 * (eta ^ 4) - 0.877e3 / 0.6240e4 * (eta ^ 6) + 0.5287e4 / 0.6240e4 * (eta ^ 3) - 0.3e1 / 0.40e2 * (eta ^ 5)) * sin((g + h + 2 * f)) - 0.54e2 / 0.13e2 * ((eta ^ 4) + 0.23e2 / 0.18e2 * (eta ^ 3) - 0.25e2 / 0.18e2 * (eta ^ 2) - 0.145e3 / 0.54e2 * eta - 0.7e1 / 0.6e1) * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * cos((3 * g + h + 2 * f)) + 0.209e3 / 0.780e3 * ((0.12285e5 / 0.418e3 + 0.5620e4 / 0.209e3 * (eta ^ 2) + 0.2457e4 / 0.38e2 * eta + (eta ^ 6) - 0.39e2 / 0.418e3 * (eta ^ 5) - 0.7759e4 / 0.418e3 * (eta ^ 4) - 0.5474e4 / 0.209e3 * (eta ^ 3)) * (ci2 ^ 8) + (-0.12285e5 / 0.209e3 - (2 * eta ^ 6) + 0.39e2 / 0.209e3 * (eta ^ 5) + 0.7759e4 / 0.209e3 * (eta ^ 4) + 0.10948e5 / 0.209e3 * (eta ^ 3) - 0.11240e5 / 0.209e3 * (eta ^ 2) - 0.2457e4 / 0.19e2 * eta) * (ci2 ^ 6) + (0.1365e4 / 0.38e2 + 0.243e3 / 0.209e3 * (eta ^ 6) - 0.159e3 / 0.418e3 * (eta ^ 5) - 0.6453e4 / 0.209e3 * (eta ^ 3) + 0.7020e4 / 0.209e3 * (eta ^ 2) + 0.3003e4 / 0.38e2 * eta - 0.9381e4 / 0.418e3 * (eta ^ 4)) * (ci2 ^ 4) + (-0.1400e4 / 0.209e3 * (eta ^ 2) - 0.1365e4 / 0.209e3 + 0.60e2 / 0.209e3 * (eta ^ 5) + 0.811e3 / 0.209e3 * (eta ^ 4) + 0.89e2 / 0.19e2 * (eta ^ 3) - 0.273e3 / 0.19e2 * eta - 0.34e2 / 0.209e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.13e2 / 0.22e2 * (eta ^ 2) + 0.91e2 / 0.76e2 * eta - 0.243e3 / 0.836e3 * (eta ^ 4) + 0.3e1 / 0.418e3 * (eta ^ 6) - 0.269e3 / 0.836e3 * (eta ^ 3) + 0.455e3 / 0.836e3 - 0.7e1 / 0.209e3 * (eta ^ 5)) * (1 + eta) * (eta - 1) * sin((g + h + 4 * f)) - 0.209e3 / 0.780e3 * ((0.12285e5 / 0.418e3 - 0.4208e4 / 0.209e3 * (eta ^ 2) + 0.4914e4 / 0.209e3 * eta + (eta ^ 5) - 0.39e2 / 0.418e3 * (eta ^ 4) - 0.3712e4 / 0.209e3 * (eta ^ 3)) * (ci2 ^ 8) + (-0.12285e5 / 0.209e3 - (2 * eta ^ 5) + 0.39e2 / 0.209e3 * (eta ^ 4) + 0.7424e4 / 0.209e3 * (eta ^ 3) + 0.8416e4 / 0.209e3 * (eta ^ 2) - 0.9828e4 / 0.209e3 * eta) * (ci2 ^ 6) + (0.1365e4 / 0.38e2 + 0.243e3 / 0.209e3 * (eta ^ 5) - 0.4485e4 / 0.209e3 * (eta ^ 3) - 0.4992e4 / 0.209e3 * (eta ^ 2) + 0.546e3 / 0.19e2 * eta - 0.159e3 / 0.418e3 * (eta ^ 4)) * (ci2 ^ 4) + (0.784e3 / 0.209e3 * (eta ^ 2) - 0.1365e4 / 0.209e3 - 0.34e2 / 0.209e3 * (eta ^ 5) + 0.60e2 / 0.209e3 * (eta ^ 4) + 0.773e3 / 0.209e3 * (eta ^ 3) - 0.1092e4 / 0.209e3 * eta) * (ci2 ^ 2) - 0.117e3 / 0.418e3 * (eta ^ 2) + 0.91e2 / 0.209e3 * eta - 0.7e1 / 0.209e3 * (eta ^ 4) - 0.233e3 / 0.836e3 * (eta ^ 3) + 0.455e3 / 0.836e3 + 0.3e1 / 0.418e3 * (eta ^ 5)) * (1 + eta) * ((eta - 1) ^ 2) * sin((-g - h + 4 * f)) - 0.67e2 / 0.120e3 * (eta - 1) * ((-0.2079e4 / 0.67e2 + 0.77937e5 / 0.871e3 * (eta ^ 2) + (eta ^ 7) + 0.133e3 / 0.871e3 * (eta ^ 6) - 0.18724e5 / 0.871e3 * (eta ^ 5) - 0.25763e5 / 0.871e3 * (eta ^ 4) + 0.43565e5 / 0.871e3 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) + 0.4158e4 / 0.67e2 - 0.266e3 / 0.871e3 * (eta ^ 6) + 0.37448e5 / 0.871e3 * (eta ^ 5) + 0.51526e5 / 0.871e3 * (eta ^ 4) - 0.87130e5 / 0.871e3 * (eta ^ 3) - 0.155874e6 / 0.871e3 * (eta ^ 2)) * (ci2 ^ 6) + (-0.2541e4 / 0.67e2 + 0.993e3 / 0.871e3 * (eta ^ 7) - 0.120e3 / 0.871e3 * (eta ^ 6) - 0.22278e5 / 0.871e3 * (eta ^ 5) + 0.53397e5 / 0.871e3 * (eta ^ 3) + 0.94398e5 / 0.871e3 * (eta ^ 2) - 0.29709e5 / 0.871e3 * (eta ^ 4)) * (ci2 ^ 4) + (-0.122e3 / 0.871e3 * (eta ^ 7) - 0.16461e5 / 0.871e3 * (eta ^ 2) + 0.462e3 / 0.67e2 + 0.3554e4 / 0.871e3 * (eta ^ 5) + 0.3946e4 / 0.871e3 * (eta ^ 4) - 0.9832e4 / 0.871e3 * (eta ^ 3) + 0.253e3 / 0.871e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.407e3 / 0.268e3 * (eta ^ 2) + 0.5e1 / 0.1742e4 * (eta ^ 7) - 0.77e2 / 0.134e3 - 0.431e3 / 0.1742e4 * (eta ^ 4) - 0.139e3 / 0.3484e4 * (eta ^ 6) + 0.813e3 / 0.871e3 * (eta ^ 3) - 0.463e3 / 0.1742e4 * (eta ^ 5)) * sin((-g - h + 2 * f)) + 0.11e2 / 0.26e2 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((g - h + 6 * f)) - (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-3 * g - h + 2 * f)) / 0.26e2 - 0.35e2 / 0.13e2 * (ci2 ^ 2) * ((eta ^ 3) + 0.16e2 / 0.35e2 * (eta ^ 2) - 0.11e2 / 0.7e1 * eta - 0.48e2 / 0.35e2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * (1 + eta) * cos((3 * g + h + 4 * f)) - 0.11e2 / 0.26e2 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 3) * (eta - 1) * cos((3 * g + h + 6 * f)) + (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 3) * (eta - 1) * cos((-g + h + 2 * f)) / 0.26e2 + 0.30e2 / 0.13e2 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((eta ^ 3) + 0.3e1 / 0.2e1 * (eta ^ 2) - 0.22e2 / 0.15e2 * eta - 0.21e2 / 0.10e2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * (eta - 1) * cos((g - h + 2 * f)) + 0.7e1 / 0.195e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4) + 0.127e3 / 0.112e3 * (eta ^ 3) - 0.1805e4 / 0.112e3 * (eta ^ 2) - 0.2301e4 / 0.112e3 * eta - 0.195e3 / 0.16e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((5 * g + h)) + 0.7e1 / 0.156e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.517e3 / 0.70e2 * (eta ^ 4) - 0.4001e4 / 0.70e2 * (eta ^ 3) - 0.132e3 / 0.5e1 * (eta ^ 2) + 0.6747e4 / 0.35e2 * eta + 0.195e3) * (ci2 ^ 4) + (-(eta ^ 5) + 0.517e3 / 0.70e2 * (eta ^ 4) + 0.4001e4 / 0.70e2 * (eta ^ 3) + 0.132e3 / 0.5e1 * (eta ^ 2) - 0.6747e4 / 0.35e2 * eta - 0.195e3) * (ci2 ^ 2) + 0.9e1 / 0.70e2 * (eta ^ 5) - 0.179e3 / 0.140e3 * (eta ^ 4) - 0.1279e4 / 0.140e3 * (eta ^ 3) - (4 * eta ^ 2) + 0.2249e4 / 0.70e2 * eta + 0.65e2 / 0.2e1) * (1 + eta) * ((eta - 1) ^ 2) * sin((g - h + 6 * f)) + 0.23e2 / 0.260e3 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 6) + 0.121e3 / 0.92e2 * (eta ^ 5) - 0.6937e4 / 0.276e3 * (eta ^ 4) - 0.5107e4 / 0.138e3 * (eta ^ 3) + 0.1461e4 / 0.46e2 * (eta ^ 2) + 0.7865e4 / 0.92e2 * eta + 0.5005e4 / 0.92e2) * (1 + eta) * (eta - 1) * sin((5 * g + h + 2 * f)) - (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5) - 0.15e2 / 0.8e1 * (eta ^ 4) - 0.87e2 / 0.2e1 * (eta ^ 3) + (62 * eta ^ 2) + (117 * eta) - 0.1365e4 / 0.8e1) * ((1 + eta) ^ 2) * (eta - 1) * sin((3 * g - h)) / 0.390e3 - 0.11e2 / 0.156e3 * (((eta ^ 6) - 0.643e3 / 0.110e3 * (eta ^ 5) - 0.2996e4 / 0.55e2 * (eta ^ 4) - 0.7171e4 / 0.110e3 * (eta ^ 3) + 0.1227e4 / 0.11e2 * (eta ^ 2) + 0.1248e4 / 0.5e1 * eta + 0.1365e4 / 0.11e2) * (ci2 ^ 4) + (-(eta ^ 6) + 0.643e3 / 0.110e3 * (eta ^ 5) + 0.2996e4 / 0.55e2 * (eta ^ 4) + 0.7171e4 / 0.110e3 * (eta ^ 3) - 0.1227e4 / 0.11e2 * (eta ^ 2) - 0.1248e4 / 0.5e1 * eta - 0.1365e4 / 0.11e2) * (ci2 ^ 2) + 0.13e2 / 0.110e3 * (eta ^ 6) - 0.229e3 / 0.220e3 * (eta ^ 5) - 0.486e3 / 0.55e2 * (eta ^ 4) - 0.207e3 / 0.20e2 * (eta ^ 3) + 0.2073e4 / 0.110e3 * (eta ^ 2) + 0.208e3 / 0.5e1 * eta + 0.455e3 / 0.22e2) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * (eta - 1) * sin((3 * g + h + 6 * f)) - 0.21e2 / 0.520e3 * (((eta ^ 3) - 0.25e2 / 0.14e2 * (eta ^ 2) - 0.130e3 / 0.7e1 * eta - 0.130e3 / 0.7e1) * (ci2 ^ 4) + (-(eta ^ 3) + 0.25e2 / 0.14e2 * (eta ^ 2) + 0.130e3 / 0.7e1 * eta + 0.130e3 / 0.7e1) * (ci2 ^ 2) + 0.19e2 / 0.126e3 * (eta ^ 3) - 0.79e2 / 0.252e3 * (eta ^ 2) - 0.65e2 / 0.21e2 * eta - 0.65e2 / 0.21e2) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((3 * g + h + 8 * f)) + 0.87e2 / 0.260e3 * (((eta ^ 5) + 0.305e3 / 0.174e3 * (eta ^ 4) - 0.1403e4 / 0.174e3 * (eta ^ 3) - 0.1286e4 / 0.87e2 * (eta ^ 2) - 0.65e2 / 0.87e2 * eta + 0.455e3 / 0.87e2) * (ci2 ^ 4) + (-(eta ^ 5) - 0.305e3 / 0.174e3 * (eta ^ 4) + 0.1403e4 / 0.174e3 * (eta ^ 3) + 0.1286e4 / 0.87e2 * (eta ^ 2) + 0.65e2 / 0.87e2 * eta - 0.455e3 / 0.87e2) * (ci2 ^ 2) + 0.103e3 / 0.522e3 * (eta ^ 5) + 0.365e3 / 0.1044e4 * (eta ^ 4) - 0.1423e4 / 0.1044e4 * (eta ^ 3) - 0.655e3 / 0.261e3 * (eta ^ 2) - 0.65e2 / 0.522e3 * eta + 0.455e3 / 0.522e3) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - h + 2 * f)) + 0.27e2 / 0.520e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.73e2 / 0.54e2 * (eta ^ 2) - 0.46e2 / 0.9e1 * eta - 0.50e2 / 0.9e1) * (ci2 ^ 4) + (-(eta ^ 3) - 0.73e2 / 0.54e2 * (eta ^ 2) + 0.46e2 / 0.9e1 * eta + 0.50e2 / 0.9e1) * (ci2 ^ 2) + 0.29e2 / 0.162e3 * (eta ^ 3) + 0.77e2 / 0.324e3 * (eta ^ 2) - 0.23e2 / 0.27e2 * eta - 0.25e2 / 0.27e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-3 * g - h + 4 * f)) - (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2) - 0.3e1 / 0.16e2 * eta - 0.255e3 / 0.16e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((3 * g - h + 10 * f)) / 0.65e2 - (ci2 ^ 4) * ((eta ^ 2) + 0.9e1 / 0.10e2 * eta - 0.3e1 / 0.2e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sin((-5 * g - h + 2 * f)) / 0.104e3 + 0.23e2 / 0.260e3 * (ci2 ^ 4) * ((eta ^ 5) + 0.55e2 / 0.92e2 * (eta ^ 4) - 0.1243e4 / 0.69e2 * (eta ^ 3) - 0.1027e4 / 0.69e2 * (eta ^ 2) + 0.741e3 / 0.23e2 * eta + 0.3185e4 / 0.92e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * (eta - 1) * sin((5 * g + h + 8 * f)) - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 5) * ((eta - 1) ^ 3) * sin((3 * g + h + 10 * f)) / 0.130e3 + 0.3e1 / 0.130e3 * (ci2 ^ 4) * ((eta ^ 3) + 0.19e2 / 0.24e2 * (eta ^ 2) - 0.21e2 / 0.2e1 * eta - 0.85e2 / 0.8e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((5 * g + h + 10 * f)) + (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3) + (eta ^ 2) / 0.2e1 - (12 * eta) - 0.15e2 / 0.2e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((-3 * g + h + 2 * f)) / 0.520e3 + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 4) * sin((g - h + 10 * f)) / 0.130e3 - 0.11e2 / 0.312e3 * ((eta ^ 6) - 0.133e3 / 0.110e3 * (eta ^ 5) - 0.5289e4 / 0.110e3 * (eta ^ 4) + 0.283e3 / 0.11e2 * (eta ^ 3) + 0.14346e5 / 0.55e2 * (eta ^ 2) - 0.507e3 / 0.10e2 * eta - 0.3003e4 / 0.10e2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (1 + eta) * (eta - 1) * sin((3 * g - h + 6 * f)) - 0.43e2 / 0.260e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) + 0.99e2 / 0.86e2 * (eta ^ 5) - 0.572e3 / 0.43e2 * (eta ^ 4) - 0.1645e4 / 0.86e2 * (eta ^ 3) + 0.729e3 / 0.43e2 * (eta ^ 2) + 0.1430e4 / 0.43e2 * eta + 0.455e3 / 0.43e2) * (ci2 ^ 4) + (-(eta ^ 6) - 0.99e2 / 0.86e2 * (eta ^ 5) + 0.572e3 / 0.43e2 * (eta ^ 4) + 0.1645e4 / 0.86e2 * (eta ^ 3) - 0.729e3 / 0.43e2 * (eta ^ 2) - 0.1430e4 / 0.43e2 * eta - 0.455e3 / 0.43e2) * (ci2 ^ 2) + 0.17e2 / 0.86e2 * (eta ^ 6) + 0.119e3 / 0.516e3 * (eta ^ 5) - 0.304e3 / 0.129e3 * (eta ^ 4) - 0.1769e4 / 0.516e3 * (eta ^ 3) + 0.235e3 / 0.86e2 * (eta ^ 2) + 0.715e3 / 0.129e3 * eta + 0.455e3 / 0.258e3) * (1 + eta) * (eta - 1) * sin((-g + h + 2 * f)) - 0.19e2 / 0.520e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.25e2 / 0.38e2 * (eta ^ 2) - 0.162e3 / 0.19e2 * eta - 0.150e3 / 0.19e2) * (ci2 ^ 4) + (-(eta ^ 3) - 0.25e2 / 0.38e2 * (eta ^ 2) + 0.162e3 / 0.19e2 * eta + 0.150e3 / 0.19e2) * (ci2 ^ 2) + 0.7e1 / 0.38e2 * (eta ^ 3) + 0.29e2 / 0.228e3 * (eta ^ 2) - 0.27e2 / 0.19e2 * eta - 0.25e2 / 0.19e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((-g + h + 4 * f)) - 0.9e1 / 0.260e3 * ((eta ^ 4) - 0.19e2 / 0.36e2 * (eta ^ 3) - 0.3445e4 / 0.108e3 * (eta ^ 2) + 0.221e3 / 0.36e2 * eta + 0.3185e4 / 0.36e2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((3 * g - h + 8 * f)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 4) * sin((-3 * g - h + 6 * f)) / 0.260e3 - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 5) * ((eta - 1) ^ 3) * sin((-g + h + 6 * f)) / 0.260e3 + (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.75e2 / 0.26e2 * (eta ^ 2) - (30 * eta) - 0.30e2) * (ci2 ^ 4) + (-(eta ^ 3) + 0.75e2 / 0.26e2 * (eta ^ 2) + (30 * eta) + 0.30e2) * (ci2 ^ 2) + 0.11e2 / 0.78e2 * (eta ^ 3) - 0.79e2 / 0.156e3 * (eta ^ 2) - (5 * eta) - 0.5e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((g - h + 8 * f)) / 0.40e2 + 0.23e2 / 0.13e2 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((eta ^ 2) + 0.7e1 / 0.23e2 * eta - 0.48e2 / 0.23e2) * (1 + eta) * (eta - 1) * cos((g - h + 4 * f)) - 0.9e1 / 0.1040e4 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.11e2 / 0.9e1 * (ci2 ^ 4) - 0.2e1 / 0.9e1 * (ci2 ^ 2) + 0.1e1 / 0.54e2) * ((1 + eta) ^ 4) * ((eta - 1) ^ 4) * sin((-g - h + 8 * f)) + 0.113e3 / 0.1560e4 * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * (((eta ^ 3) - 0.31e2 / 0.113e3 * (eta ^ 2) - 0.1242e4 / 0.113e3 * eta - 0.1215e4 / 0.113e3) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.62e2 / 0.113e3 * (eta ^ 2) + 0.2484e4 / 0.113e3 * eta + 0.2430e4 / 0.113e3) * (ci2 ^ 6) + (0.135e3 / 0.113e3 * (eta ^ 3) - 0.54e2 / 0.113e3 * (eta ^ 2) - 0.1518e4 / 0.113e3 * eta - 0.1485e4 / 0.113e3) * (ci2 ^ 4) + (-0.22e2 / 0.113e3 * (eta ^ 3) + 0.23e2 / 0.113e3 * (eta ^ 2) + 0.276e3 / 0.113e3 * eta + 0.270e3 / 0.113e3) * (ci2 ^ 2) + 0.3e1 / 0.226e3 * (eta ^ 3) - 0.9e1 / 0.452e3 * (eta ^ 2) - 0.23e2 / 0.113e3 * eta - 0.45e2 / 0.226e3) * sin((g + h + 6 * f)) + 0.9e1 / 0.1040e4 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.11e2 / 0.9e1 * (ci2 ^ 4) - 0.2e1 / 0.9e1 * (ci2 ^ 2) + 0.1e1 / 0.54e2) * ((1 + eta) ^ 5) * ((eta - 1) ^ 3) * sin((g + h + 8 * f)) - 0.113e3 / 0.1560e4 * (((eta ^ 3) + 0.23e2 / 0.113e3 * (eta ^ 2) - 0.1188e4 / 0.113e3 * eta - 0.1215e4 / 0.113e3) * (ci2 ^ 8) + (-(2 * eta ^ 3) - 0.46e2 / 0.113e3 * (eta ^ 2) + 0.2376e4 / 0.113e3 * eta + 0.2430e4 / 0.113e3) * (ci2 ^ 6) + (0.135e3 / 0.113e3 * (eta ^ 3) + 0.12e2 / 0.113e3 * (eta ^ 2) - 0.1452e4 / 0.113e3 * eta - 0.1485e4 / 0.113e3) * (ci2 ^ 4) + (-0.22e2 / 0.113e3 * (eta ^ 3) + 0.11e2 / 0.113e3 * (eta ^ 2) + 0.264e3 / 0.113e3 * eta + 0.270e3 / 0.113e3) * (ci2 ^ 2) + 0.3e1 / 0.226e3 * (eta ^ 3) - 0.5e1 / 0.452e3 * (eta ^ 2) - 0.22e2 / 0.113e3 * eta - 0.45e2 / 0.226e3) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-g - h + 6 * f))) * sqrt((-eta ^ 2 + 1)) - 0.21e2 / 0.416e3 * ((-0.60e2 + 0.4757e4 / 0.315e3 * (eta ^ 2) - 0.276e3 / 0.5e1 * eta + (eta ^ 4) + 0.5504e4 / 0.315e3 * (eta ^ 3)) * (ci2 ^ 8) + (0.120e3 - (2 * eta ^ 4) - 0.11008e5 / 0.315e3 * (eta ^ 3) - 0.9514e4 / 0.315e3 * (eta ^ 2) + 0.552e3 / 0.5e1 * eta) * (ci2 ^ 6) + (-0.220e3 / 0.3e1 + 0.2204e4 / 0.105e3 * (eta ^ 3) + 0.1816e4 / 0.105e3 * (eta ^ 2) - 0.1012e4 / 0.15e2 * eta + 0.4e1 / 0.3e1 * (eta ^ 4)) * (ci2 ^ 4) + (-0.691e3 / 0.315e3 * (eta ^ 2) + 0.40e2 / 0.3e1 - (eta ^ 4) / 0.3e1 - 0.1108e4 / 0.315e3 * (eta ^ 3) + 0.184e3 / 0.15e2 * eta) * (ci2 ^ 2) + 0.179e3 / 0.1260e4 * (eta ^ 2) - 0.10e2 / 0.9e1 - 0.46e2 / 0.45e2 * eta + (eta ^ 4) / 0.36e2 + 0.53e2 / 0.210e3 * (eta ^ 3)) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-g - h + 5 * f)) - 0.25e2 / 0.52e2 * ((eta ^ 5) - 0.7e1 / 0.25e2 * (eta ^ 4) - 0.182e3 / 0.25e2 * (eta ^ 3) + 0.98e2 / 0.25e2 * (eta ^ 2) + 0.197e3 / 0.25e2 * eta - 0.147e3 / 0.25e2) * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * (1 + eta) * cos((g - h + f)) + 0.463e3 / 0.4160e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 6) + 0.3896e4 / 0.463e3 * (eta ^ 5) - 0.1622e4 / 0.463e3 * (eta ^ 4) - 0.40320e5 / 0.463e3 * (eta ^ 3) - 0.31793e5 / 0.463e3 * (eta ^ 2) + 0.71760e5 / 0.463e3 * eta + 0.74256e5 / 0.463e3) * (ci2 ^ 4) + (-(eta ^ 6) - 0.3896e4 / 0.463e3 * (eta ^ 5) + 0.1622e4 / 0.463e3 * (eta ^ 4) + 0.40320e5 / 0.463e3 * (eta ^ 3) + 0.31793e5 / 0.463e3 * (eta ^ 2) - 0.71760e5 / 0.463e3 * eta - 0.74256e5 / 0.463e3) * (ci2 ^ 2) + 0.165e3 / 0.926e3 * (eta ^ 6) + 0.1922e4 / 0.1389e4 * (eta ^ 5) - 0.275e3 / 0.463e3 * (eta ^ 4) - 0.6586e4 / 0.463e3 * (eta ^ 3) - 0.31045e5 / 0.2778e4 * (eta ^ 2) + 0.11960e5 / 0.463e3 * eta + 0.12376e5 / 0.463e3) * (1 + eta) * ((eta - 1) ^ 2) * sin((g - h + 5 * f)) + 0.211e3 / 0.480e3 * (ci2 ^ 4) * ((eta ^ 4) + 0.3506e4 / 0.2743e4 * (eta ^ 3) - 0.10443e5 / 0.2743e4 * (eta ^ 2) - 0.1368e4 / 0.211e3 * eta - 0.882e3 / 0.211e3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((5 * g + h + f)) + 0.37e2 / 0.4160e4 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.2434e4 / 0.37e2 * (eta ^ 3) + 0.3669e4 / 0.37e2 * (eta ^ 2) - 0.2608e4 / 0.37e2 * eta - 0.3920e4 / 0.37e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.2434e4 / 0.37e2 * (eta ^ 3) - 0.3669e4 / 0.37e2 * (eta ^ 2) + 0.2608e4 / 0.37e2 * eta + 0.3920e4 / 0.37e2) * (ci2 ^ 2) + (eta ^ 4) / 0.6e1 + 0.1279e4 / 0.111e3 * (eta ^ 3) + 0.3793e4 / 0.222e3 * (eta ^ 2) - 0.1304e4 / 0.111e3 * eta - 0.1960e4 / 0.111e3) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-3 * g - h + 3 * f)) + 0.127e3 / 0.6240e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3) - 0.29e2 / 0.127e3 * (eta ^ 2) - 0.522e3 / 0.127e3 * eta + 0.210e3 / 0.127e3) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((-3 * g + h + f)) - 0.749e3 / 0.2080e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4) - 0.1198e4 / 0.2247e4 * (eta ^ 3) - 0.8041e4 / 0.749e3 * (eta ^ 2) + 0.1560e4 / 0.749e3 * eta + 0.1950e4 / 0.107e3) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((3 * g - h + 7 * f)) + 0.33e2 / 0.832e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.534e3 / 0.55e2 * (eta ^ 3) - 0.427e3 / 0.165e3 * (eta ^ 2) - 0.1168e4 / 0.15e2 * eta - 0.2576e4 / 0.33e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.534e3 / 0.55e2 * (eta ^ 3) + 0.427e3 / 0.165e3 * (eta ^ 2) + 0.1168e4 / 0.15e2 * eta + 0.2576e4 / 0.33e2) * (ci2 ^ 2) + (eta ^ 4) / 0.6e1 + 0.49e2 / 0.33e2 * (eta ^ 3) - 0.559e3 / 0.990e3 * (eta ^ 2) - 0.584e3 / 0.45e2 * eta - 0.1288e4 / 0.99e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((g - h + 7 * f)) - 0.49e2 / 0.832e3 * (ci2 ^ 2) * (((eta ^ 5) + 0.503e3 / 0.49e2 * (eta ^ 4) + 0.1899e4 / 0.245e3 * (eta ^ 3) - 0.13403e5 / 0.245e3 * (eta ^ 2) - 0.25792e5 / 0.245e3 * eta - 0.368e3 / 0.7e1) * (ci2 ^ 4) + (-(eta ^ 5) - 0.503e3 / 0.49e2 * (eta ^ 4) - 0.1899e4 / 0.245e3 * (eta ^ 3) + 0.13403e5 / 0.245e3 * (eta ^ 2) + 0.25792e5 / 0.245e3 * eta + 0.368e3 / 0.7e1) * (ci2 ^ 2) + (eta ^ 5) / 0.6e1 + 0.2383e4 / 0.1470e4 * (eta ^ 4) + 0.109e3 / 0.98e2 * (eta ^ 3) - 0.2707e4 / 0.294e3 * (eta ^ 2) - 0.12896e5 / 0.735e3 * eta - 0.184e3 / 0.21e2) * (ci2 - 1) * (ci2 + 1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((3 * g + h + 7 * f)) - 0.147e3 / 0.832e3 * (((eta ^ 7) + 0.2029e4 / 0.245e3 * (eta ^ 6) + 0.142e3 / 0.245e3 * (eta ^ 5) - 0.11630e5 / 0.147e3 * (eta ^ 4) - 0.27827e5 / 0.245e3 * (eta ^ 3) + 0.49951e5 / 0.735e3 * (eta ^ 2) + 0.50336e5 / 0.245e3 * eta + 0.3536e4 / 0.35e2) * (ci2 ^ 4) + (-(eta ^ 7) - 0.2029e4 / 0.245e3 * (eta ^ 6) - 0.142e3 / 0.245e3 * (eta ^ 5) + 0.11630e5 / 0.147e3 * (eta ^ 4) + 0.27827e5 / 0.245e3 * (eta ^ 3) - 0.49951e5 / 0.735e3 * (eta ^ 2) - 0.50336e5 / 0.245e3 * eta - 0.3536e4 / 0.35e2) * (ci2 ^ 2) + 0.767e3 / 0.4410e4 * (eta ^ 7) + 0.1937e4 / 0.1470e4 * (eta ^ 6) - 0.11e2 / 0.2205e4 * (eta ^ 5) - 0.28799e5 / 0.2205e4 * (eta ^ 4) - 0.27347e5 / 0.1470e4 * (eta ^ 3) + 0.50699e5 / 0.4410e4 * (eta ^ 2) + 0.25168e5 / 0.735e3 * eta + 0.1768e4 / 0.105e3) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (1 + eta) * (eta - 1) * sin((3 * g + h + 5 * f)) - 0.93e2 / 0.2080e4 * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5) - 0.763e3 / 0.279e3 * (eta ^ 4) - 0.3389e4 / 0.279e3 * (eta ^ 3) + 0.2447e4 / 0.93e2 * (eta ^ 2) + 0.702e3 / 0.31e2 * eta - 0.1274e4 / 0.31e2) * ((1 + eta) ^ 2) * (eta - 1) * sin((3 * g - h + f)) + 0.381e3 / 0.2080e4 * sin((g + h + f)) * ((-0.8580e4 / 0.127e3 - 0.64751e5 / 0.381e3 * (eta ^ 2) - 0.41184e5 / 0.127e3 * eta + 0.27329e5 / 0.1143e4 * (eta ^ 8) + 0.4625e4 / 0.381e3 * (eta ^ 7) - 0.224999e6 / 0.1143e4 * (eta ^ 6) - 0.25635e5 / 0.127e3 * (eta ^ 5) + 0.452951e6 / 0.1143e4 * (eta ^ 4) + 0.571313e6 / 0.1143e4 * (eta ^ 3) + (eta ^ 9)) * (ci2 ^ 8) + (-0.9250e4 / 0.381e3 * (eta ^ 7) + 0.17160e5 / 0.127e3 - 0.54658e5 / 0.1143e4 * (eta ^ 8) - (2 * eta ^ 9) + 0.449998e6 / 0.1143e4 * (eta ^ 6) + 0.51270e5 / 0.127e3 * (eta ^ 5) - 0.905902e6 / 0.1143e4 * (eta ^ 4) - 0.1142626e7 / 0.1143e4 * (eta ^ 3) + 0.129502e6 / 0.381e3 * (eta ^ 2) + 0.82368e5 / 0.127e3 * eta) * (ci2 ^ 6) + (-0.31460e5 / 0.381e3 + 0.4300e4 / 0.381e3 * (eta ^ 7) + 0.3504e4 / 0.127e3 * (eta ^ 8) + 0.4e1 / 0.3e1 * (eta ^ 9) - 0.89260e5 / 0.381e3 * (eta ^ 6) - 0.89516e5 / 0.381e3 * (eta ^ 5) + 0.229316e6 / 0.381e3 * (eta ^ 3) - 0.26668e5 / 0.127e3 * (eta ^ 2) - 0.50336e5 / 0.127e3 * eta + 0.61100e5 / 0.127e3 * (eta ^ 4)) * (ci2 ^ 4) + (-0.4207e4 / 0.1143e4 * (eta ^ 8) + 0.325e3 / 0.381e3 * (eta ^ 7) + 0.15253e5 / 0.381e3 * (eta ^ 2) + 0.5720e4 / 0.381e3 - (eta ^ 9) / 0.3e1 + 0.12611e5 / 0.381e3 * (eta ^ 5) - 0.96949e5 / 0.1143e4 * (eta ^ 4) - 0.116635e6 / 0.1143e4 * (eta ^ 3) + 0.9152e4 / 0.127e3 * eta + 0.42781e5 / 0.1143e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.665e3 / 0.4572e4 * (eta ^ 8) - 0.5291e4 / 0.1524e4 * (eta ^ 2) - 0.1165e4 / 0.4572e4 * (eta ^ 7) + (eta ^ 9) / 0.36e2 - 0.2288e4 / 0.381e3 * eta + 0.10225e5 / 0.1524e4 * (eta ^ 4) - 0.11539e5 / 0.4572e4 * (eta ^ 6) + 0.12011e5 / 0.1524e4 * (eta ^ 3) - 0.9203e4 / 0.4572e4 * (eta ^ 5) - 0.1430e4 / 0.1143e4) + 0.33e2 / 0.104e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * ((eta ^ 2) + 0.34e2 / 0.33e2 * eta + 0.3e1 / 0.11e2) * ((eta - 1) ^ 2) * cos((-3 * g - h + f)) - 0.29e2 / 0.52e2 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * (1 + eta) * (eta - 1) * ((eta ^ 4) + 0.16e2 / 0.29e2 * (eta ^ 3) - 0.246e3 / 0.29e2 * (eta ^ 2) - 0.64e2 / 0.29e2 * eta + 0.273e3 / 0.29e2) * cos((g - h + 3 * f)) - 0.17e2 / 0.104e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((eta ^ 2) + 0.16e2 / 0.17e2 * eta - 0.9e1 / 0.17e2) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-g + h + f)) + 0.49e2 / 0.52e2 * ((eta ^ 4) + 0.8e1 / 0.7e1 * (eta ^ 3) - 0.246e3 / 0.49e2 * (eta ^ 2) - 0.344e3 / 0.49e2 * eta - 0.3e1) * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * (1 + eta) * (eta - 1) * cos((3 * g + h + f)) - 0.29e2 / 0.104e3 * (ci2 ^ 2) * ((eta ^ 2) + 0.10e2 / 0.29e2 * eta - 0.171e3 / 0.29e2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((g - h + 5 * f)) + 0.45e2 / 0.104e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((eta ^ 3) + 0.19e2 / 0.45e2 * (eta ^ 2) - 0.181e3 / 0.45e2 * eta - 0.19e2 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * (eta ^ 2) * Delta * ((1 + eta) ^ 2) * (eta - 1) * cos((3 * g + h + 5 * f)) + 0.267e3 / 0.2080e4 * (1 + eta) * ((0.9828e4 / 0.89e2 + 0.79115e5 / 0.801e3 * (eta ^ 2) + 0.24024e5 / 0.89e2 * eta + (eta ^ 7) + 0.16555e5 / 0.801e3 * (eta ^ 6) + 0.13438e5 / 0.801e3 * (eta ^ 5) - 0.105098e6 / 0.801e3 * (eta ^ 4) - 0.51053e5 / 0.267e3 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) - 0.19656e5 / 0.89e2 - 0.33110e5 / 0.801e3 * (eta ^ 6) - 0.26876e5 / 0.801e3 * (eta ^ 5) + 0.210196e6 / 0.801e3 * (eta ^ 4) + 0.102106e6 / 0.267e3 * (eta ^ 3) - 0.158230e6 / 0.801e3 * (eta ^ 2) - 0.48048e5 / 0.89e2 * eta) * (ci2 ^ 6) + (0.12012e5 / 0.89e2 + 0.4e1 / 0.3e1 * (eta ^ 7) + 0.19424e5 / 0.801e3 * (eta ^ 6) + 0.14096e5 / 0.801e3 * (eta ^ 5) - 0.182468e6 / 0.801e3 * (eta ^ 3) + 0.33080e5 / 0.267e3 * (eta ^ 2) + 0.88088e5 / 0.267e3 * eta - 0.127508e6 / 0.801e3 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 7) / 0.3e1 - 0.20125e5 / 0.801e3 * (eta ^ 2) - 0.2184e4 / 0.89e2 - 0.658e3 / 0.801e3 * (eta ^ 5) + 0.2490e4 / 0.89e2 * (eta ^ 4) + 0.29309e5 / 0.801e3 * (eta ^ 3) - 0.16016e5 / 0.267e3 * eta - 0.2869e4 / 0.801e3 * (eta ^ 6)) * (ci2 ^ 2) + 0.7241e4 / 0.3204e4 * (eta ^ 2) + (eta ^ 7) / 0.36e2 + 0.182e3 / 0.89e2 + 0.4004e4 / 0.801e3 * eta - 0.3457e4 / 0.1602e4 * (eta ^ 4) + 0.625e3 / 0.3204e4 * (eta ^ 6) - 0.8527e4 / 0.3204e4 * (eta ^ 3) - 0.133e3 / 0.1602e4 * (eta ^ 5)) * (eta - 1) * sin((g + h + 3 * f)) - 0.3e1 / 0.416e3 * (((eta ^ 2) + 0.84e2 / 0.5e1 * eta + 0.84e2 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta ^ 2) - 0.168e3 / 0.5e1 * eta - 0.168e3 / 0.5e1) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) + 0.308e3 / 0.15e2 * eta + 0.308e3 / 0.15e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 - 0.56e2 / 0.15e2 * eta - 0.56e2 / 0.15e2) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 + 0.14e2 / 0.45e2 * eta + 0.14e2 / 0.45e2) * ((1 + eta) ^ 3) * ((eta - 1) ^ 4) * sin((-g - h + 7 * f)) - 0.267e3 / 0.2080e4 * (1 + eta) * ((eta - 1) ^ 2) * ((0.9828e4 / 0.89e2 - 0.127273e6 / 0.801e3 * (eta ^ 2) + 0.5460e4 / 0.89e2 * eta + (eta ^ 6) + 0.16762e5 / 0.801e3 * (eta ^ 5) + 0.15860e5 / 0.801e3 * (eta ^ 4) - 0.30746e5 / 0.267e3 * (eta ^ 3)) * (ci2 ^ 8) + (-0.19656e5 / 0.89e2 - (2 * eta ^ 6) - 0.33524e5 / 0.801e3 * (eta ^ 5) - 0.31720e5 / 0.801e3 * (eta ^ 4) + 0.61492e5 / 0.267e3 * (eta ^ 3) + 0.254546e6 / 0.801e3 * (eta ^ 2) - 0.10920e5 / 0.89e2 * eta) * (ci2 ^ 6) + (0.12012e5 / 0.89e2 + 0.4e1 / 0.3e1 * (eta ^ 6) + 0.19700e5 / 0.801e3 * (eta ^ 5) - 0.112144e6 / 0.801e3 * (eta ^ 3) - 0.51004e5 / 0.267e3 * (eta ^ 2) + 0.20020e5 / 0.267e3 * eta + 0.17020e5 / 0.801e3 * (eta ^ 4)) * (ci2 ^ 4) + (0.25739e5 / 0.801e3 * (eta ^ 2) - 0.2184e4 / 0.89e2 - 0.2938e4 / 0.801e3 * (eta ^ 5) - 0.1160e4 / 0.801e3 * (eta ^ 4) + 0.19906e5 / 0.801e3 * (eta ^ 3) - 0.3640e4 / 0.267e3 * eta - (eta ^ 6) / 0.3e1) * (ci2 ^ 2) - 0.8047e4 / 0.3204e4 * (eta ^ 2) + 0.182e3 / 0.89e2 + 0.910e3 / 0.801e3 * eta - 0.61e2 / 0.1602e4 * (eta ^ 4) + (eta ^ 6) / 0.36e2 - 0.1570e4 / 0.801e3 * (eta ^ 3) + 0.18e2 / 0.89e2 * (eta ^ 5)) * sin((-g - h + 3 * f)) + 0.21e2 / 0.416e3 * ((-0.60e2 - 0.18679e5 / 0.315e3 * (eta ^ 2) - 0.624e3 / 0.5e1 * eta + (eta ^ 5) + 0.5567e4 / 0.315e3 * (eta ^ 4) + 0.7057e4 / 0.315e3 * (eta ^ 3)) * (ci2 ^ 8) + (0.120e3 - (2 * eta ^ 5) - 0.11134e5 / 0.315e3 * (eta ^ 4) - 0.14114e5 / 0.315e3 * (eta ^ 3) + 0.37358e5 / 0.315e3 * (eta ^ 2) + 0.1248e4 / 0.5e1 * eta) * (ci2 ^ 6) + (-0.220e3 / 0.3e1 + 0.4e1 / 0.3e1 * (eta ^ 5) + 0.2708e4 / 0.105e3 * (eta ^ 3) - 0.7732e4 / 0.105e3 * (eta ^ 2) - 0.2288e4 / 0.15e2 * eta + 0.744e3 / 0.35e2 * (eta ^ 4)) * (ci2 ^ 4) + (0.4517e4 / 0.315e3 * (eta ^ 2) + 0.40e2 / 0.3e1 - (eta ^ 5) / 0.3e1 - 0.1129e4 / 0.315e3 * (eta ^ 4) - 0.1067e4 / 0.315e3 * (eta ^ 3) + 0.416e3 / 0.15e2 * eta) * (ci2 ^ 2) - 0.173e3 / 0.140e3 * (eta ^ 2) - 0.10e2 / 0.9e1 - 0.104e3 / 0.45e2 * eta + 0.65e2 / 0.252e3 * (eta ^ 4) + 0.253e3 / 0.1260e4 * (eta ^ 3) + (eta ^ 5) / 0.36e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin((g + h + 5 * f)) + 0.3e1 / 0.416e3 * (((eta ^ 2) + 0.84e2 / 0.5e1 * eta + 0.84e2 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta ^ 2) - 0.168e3 / 0.5e1 * eta - 0.168e3 / 0.5e1) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) + 0.308e3 / 0.15e2 * eta + 0.308e3 / 0.15e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 - 0.56e2 / 0.15e2 * eta - 0.56e2 / 0.15e2) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 + 0.14e2 / 0.45e2 * eta + 0.14e2 / 0.45e2) * ((1 + eta) ^ 4) * ((eta - 1) ^ 3) * sin((g + h + 7 * f)) - 0.381e3 / 0.2080e4 * ((-0.8580e4 / 0.127e3 + 0.105133e6 / 0.381e3 * (eta ^ 2) + 0.24024e5 / 0.127e3 * eta + (eta ^ 7) + 0.27023e5 / 0.1143e4 * (eta ^ 6) + 0.6970e4 / 0.1143e4 * (eta ^ 5) - 0.198914e6 / 0.1143e4 * (eta ^ 4) - 0.140153e6 / 0.1143e4 * (eta ^ 3)) * (ci2 ^ 8) + (-(2 * eta ^ 7) + 0.17160e5 / 0.127e3 - 0.54046e5 / 0.1143e4 * (eta ^ 6) - 0.13940e5 / 0.1143e4 * (eta ^ 5) + 0.397828e6 / 0.1143e4 * (eta ^ 4) + 0.280306e6 / 0.1143e4 * (eta ^ 3) - 0.210266e6 / 0.381e3 * (eta ^ 2) - 0.48048e5 / 0.127e3 * eta) * (ci2 ^ 6) + (-0.31460e5 / 0.381e3 + 0.4e1 / 0.3e1 * (eta ^ 7) + 0.10376e5 / 0.381e3 * (eta ^ 6) + 0.1696e4 / 0.381e3 * (eta ^ 5) - 0.54772e5 / 0.381e3 * (eta ^ 3) + 0.42544e5 / 0.127e3 * (eta ^ 2) + 0.88088e5 / 0.381e3 * eta - 0.78836e5 / 0.381e3 * (eta ^ 4)) * (ci2 ^ 4) + (-(eta ^ 7) / 0.3e1 - 0.22499e5 / 0.381e3 * (eta ^ 2) + 0.5720e4 / 0.381e3 + 0.1882e4 / 0.1143e4 * (eta ^ 5) + 0.37594e5 / 0.1143e4 * (eta ^ 4) + 0.24163e5 / 0.1143e4 * (eta ^ 3) - 0.16016e5 / 0.381e3 * eta - 0.4105e4 / 0.1143e4 * (eta ^ 6)) * (ci2 ^ 2) + 0.2431e4 / 0.508e3 * (eta ^ 2) + (eta ^ 7) / 0.36e2 + 0.4004e4 / 0.1143e4 * eta - 0.5171e4 / 0.2286e4 * (eta ^ 4) + 0.631e3 / 0.4572e4 * (eta ^ 6) - 0.6449e4 / 0.4572e4 * (eta ^ 3) - 0.631e3 / 0.2286e4 * (eta ^ 5) - 0.1430e4 / 0.1143e4) * (1 + eta) * (eta - 1) * sin((-g - h + f))) / (eta ^ 15) / a ^ 3 / (1 + eta)];
D2 = [0.135e3 * R__e ^ 4 * ((-0.11e2 / 0.360e3 * ((eta ^ 5 - 0.282e3 / 0.11e2 * eta ^ 4 - 0.332e3 / 0.11e2 * eta ^ 3 + 0.854e3 / 0.11e2 * eta ^ 2 + 0.625e3 / 0.11e2 * eta - 0.324e3 / 0.11e2) * ci2 ^ 6 + (-eta ^ 5 + 0.282e3 / 0.11e2 * eta ^ 4 + 0.332e3 / 0.11e2 * eta ^ 3 - 0.854e3 / 0.11e2 * eta ^ 2 - 0.625e3 / 0.11e2 * eta + 0.324e3 / 0.11e2) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 - 0.170e3 / 0.33e2 * eta ^ 4 - 0.359e3 / 0.33e2 * eta ^ 3 + 0.36e2 / 0.11e2 * eta ^ 2 + 0.105e3 / 0.22e2 * eta - 0.54e2 / 0.11e2) * ci2 ^ 2 + eta * (0.1e1 + eta) * (eta ^ 2 + 0.88e2 * eta + 0.115e3) / 0.33e2) * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((3 * f + 2 * g)) - 0.3e1 / 0.80e2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) * ((eta ^ 2 + 0.31e2 / 0.9e1 * eta + 0.164e3 / 0.9e1) * ci2 ^ 6 + (-eta ^ 2 - 0.31e2 / 0.9e1 * eta - 0.164e3 / 0.9e1) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 + 0.17e2 / 0.18e2 * eta + 0.82e2 / 0.27e2) * ci2 ^ 2 - 0.2e1 / 0.27e2 * eta) * (ci2 - 0.1e1) * sin((5 * f + 2 * g)) + (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta + 0.12e2) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((3 * f - 2 * g)) / 0.240e3 + (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta + 0.12e2 / 0.5e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((2 * g + 7 * f)) / 0.48e2 - 0.13e2 / 0.90e2 * ((eta ^ 3 - 0.69e2 / 0.52e2 * eta ^ 2 - 0.93e2 / 0.26e2 * eta - 0.81e2 / 0.52e2) * ci2 ^ 4 + 0.3e1 / 0.13e2 * eta ^ 2 + 0.3e1 / 0.13e2 * eta) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * sin((3 * f + 4 * g)) - ((eta ^ 3 - 0.17e2 / 0.20e2 * eta ^ 2 - 0.37e2 / 0.10e2 * eta + 0.27e2 / 0.20e2) * ci2 ^ 4 + eta ^ 2 / 0.15e2 + eta / 0.15e2) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * sin((5 * f + 4 * g)) / 0.6e1 + eta * (0.1e1 + eta) * Delta * (ci2 + 0.1e1) * ((eta ^ 2 - 0.4e1 * eta + 0.23e2) * ci2 ^ 6 + (-eta ^ 2 + 0.4e1 * eta - 0.23e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 + 0.4e1 / 0.5e1 * eta + 0.31e2 / 0.5e1) * ci2 ^ 2 - 0.4e1 / 0.5e1 * eta - 0.4e1 / 0.5e1) * (ci2 - 0.1e1) * cos((3 * f + 2 * g)) / 0.18e2 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((5 * f + 2 * g)) / 0.6e1 - 0.73e2 / 0.720e3 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.34e2 / 0.73e2 * eta - 0.123e3 / 0.73e2) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * sin((4 * g + 7 * f)) - ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((9 * f + 4 * g)) / 0.80e2 + 0.7e1 / 0.40e2 * (ci2 + 0.1e1) * ((eta ^ 5 + 0.130e3 / 0.21e2 * eta ^ 4 + 0.60e2 / 0.7e1 * eta ^ 3 + 0.6e1 / 0.7e1 * eta ^ 2 - 0.51e2 / 0.7e1 * eta - 0.36e2 / 0.7e1) * ci2 ^ 6 + (-eta ^ 5 - 0.130e3 / 0.21e2 * eta ^ 4 - 0.60e2 / 0.7e1 * eta ^ 3 - 0.6e1 / 0.7e1 * eta ^ 2 + 0.51e2 / 0.7e1 * eta + 0.36e2 / 0.7e1) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 + 0.82e2 / 0.63e2 * eta ^ 4 + 0.95e2 / 0.63e2 * eta ^ 3 - 0.4e1 / 0.9e1 * eta ^ 2 - 0.29e2 / 0.18e2 * eta - 0.6e1 / 0.7e1) * ci2 ^ 2 - 0.5e1 / 0.63e2 * (eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.17e2 / 0.5e1) * eta * (0.1e1 + eta)) * (ci2 - 0.1e1) * sin((f + 2 * g)) - 0.13e2 / 0.240e3 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.152e3 / 0.13e2 * eta ^ 2 - 0.97e2 / 0.13e2 * eta + 0.164e3 / 0.13e2) * ci2 ^ 6 + (-eta ^ 3 + 0.152e3 / 0.13e2 * eta ^ 2 + 0.97e2 / 0.13e2 * eta - 0.164e3 / 0.13e2) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 - 0.98e2 / 0.39e2 * eta ^ 2 - 0.47e2 / 0.26e2 * eta + 0.82e2 / 0.39e2) * ci2 ^ 2 - 0.2e1 / 0.39e2 * eta ^ 2 - 0.2e1 / 0.39e2 * eta) * (ci2 - 0.1e1) * sin((-2 * g + f)) + 0.5e1 / 0.6e1 * eta * (0.1e1 + eta) * ((eta ^ 2 - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 6 + (-eta ^ 2 + 0.4e1 / 0.5e1 * eta + 0.13e2 / 0.5e1) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 + 0.4e1 / 0.25e2 * eta - 0.1e1 / 0.5e1) * ci2 ^ 2 - 0.4e1 / 0.25e2 * eta - 0.4e1 / 0.25e2) * Delta * (ci2 + 0.1e1) * (ci2 - 0.1e1) * cos((f + 2 * g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((-2 * g + f)) / 0.6e1 - 0.23e2 / 0.720e3 * (eta + 0.3e1) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (eta + 0.41e2 / 0.23e2) * (ci2 - 0.1e1) ^ 2 * sin((4 * g + f)) - ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-4 * g + f)) / 0.80e2 + 0.11e2 / 0.120e3 * ((eta ^ 3 - 0.13e2 / 0.3e1 * eta ^ 2 + 0.109e3 / 0.33e2 * eta + 0.123e3 / 0.11e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.26e2 / 0.3e1 * eta ^ 2 - 0.218e3 / 0.33e2 * eta - 0.246e3 / 0.11e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 - 0.155e3 / 0.33e2 * eta ^ 2 + 0.160e3 / 0.33e2 * eta + 0.41e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.4e1 / 0.11e2 * eta ^ 2 - 0.17e2 / 0.11e2 * eta - 0.82e2 / 0.33e2) * ci2 ^ 2 + eta ^ 3 / 0.36e2 + eta ^ 2 / 0.22e2 + 0.9e1 / 0.44e2 * eta + 0.41e2 / 0.198e3) * (eta - 0.1e1) * (0.1e1 + eta) * sin((3 * f)) - (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((eta + 0.3e1) * ci2 ^ 8 + (-0.2e1 * eta - 0.6e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta + 0.11e2 / 0.3e1) * ci2 ^ 4 + (-eta / 0.3e1 - 0.2e1 / 0.3e1) * ci2 ^ 2 + eta / 0.36e2 + 0.1e1 / 0.18e2) * sin((5 * f)) / 0.40e2 - 0.3e1 / 0.20e2 * ((eta ^ 5 + 0.166e3 / 0.27e2 * eta ^ 4 + 0.19e2 / 0.3e1 * eta ^ 3 - 0.125e3 / 0.27e2 * eta ^ 2 + 0.14e2 / 0.27e2 * eta + 0.9e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 5 - 0.332e3 / 0.27e2 * eta ^ 4 - 0.38e2 / 0.3e1 * eta ^ 3 + 0.250e3 / 0.27e2 * eta ^ 2 - 0.28e2 / 0.27e2 * eta - 0.18e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 5 + 0.197e3 / 0.27e2 * eta ^ 4 + 0.214e3 / 0.27e2 * eta ^ 3 - 0.110e3 / 0.27e2 * eta ^ 2 + 0.38e2 / 0.27e2 * eta + 0.11e2) * ci2 ^ 4 + (-eta ^ 5 / 0.3e1 - 0.31e2 / 0.27e2 * eta ^ 4 - 0.43e2 / 0.27e2 * eta ^ 3 - 0.2e1 - 0.5e1 / 0.9e1 * eta ^ 2 - 0.8e1 / 0.9e1 * eta) * ci2 ^ 2 + eta ^ 4 / 0.27e2 + 0.2e1 / 0.27e2 * eta ^ 3 + 0.1e1 / 0.6e1 + 0.7e1 / 0.36e2 * eta + eta ^ 2 / 0.6e1 + eta ^ 5 / 0.36e2) * sin(f)) * sqrt(-eta ^ 2 + 0.1e1) + (-0.71e2 / 0.720e3 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.73e2 / 0.71e2 * eta ^ 2 - 0.359e3 / 0.71e2 * eta + 0.783e3 / 0.71e2) * ci2 ^ 6 + (-eta ^ 3 - 0.73e2 / 0.71e2 * eta ^ 2 + 0.359e3 / 0.71e2 * eta - 0.783e3 / 0.71e2) * ci2 ^ 4 + (0.29e2 / 0.142e3 * eta ^ 3 + 0.83e2 / 0.142e3 * eta ^ 2 - 0.21e2 / 0.142e3 * eta + 0.261e3 / 0.142e3) * ci2 ^ 2 - 0.16e2 / 0.71e2 * eta ^ 2 - 0.28e2 / 0.71e2 * eta) * (ci2 - 0.1e1) * sin((2 * g + 4 * f)) + 0.73e2 / 0.2880e4 * ((eta ^ 4 - 0.224e3 / 0.73e2 * eta ^ 3 - 0.1002e4 / 0.73e2 * eta ^ 2 - 0.1440e4 / 0.73e2 * eta - 0.783e3 / 0.73e2) * ci2 ^ 4 + 0.48e2 / 0.73e2 * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * sin((2 * f + 4 * g)) + 0.11e2 / 0.576e3 * (eta - 0.1e1) * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.32e2 / 0.165e3 * eta ^ 3 - 0.3266e4 / 0.165e3 * eta ^ 2 - 0.1504e4 / 0.165e3 * eta + 0.783e3 / 0.55e2) * ci2 ^ 4 + 0.16e2 / 0.165e3 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) ^ 2 * sin((6 * f + 4 * g)) + eta * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.9e1 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.29e2) * ci2 ^ 4 + eta ^ 2 / 0.2e1 - 0.5e1 / 0.4e1) * (ci2 - 0.1e1) ^ 2 * sin((4 * f + 4 * g)) / 0.45e2 + (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.41e2 / 0.6e1 * eta + 0.15e2 / 0.2e1) * ci2 ^ 4 + (-eta ^ 2 - 0.41e2 / 0.6e1 * eta - 0.15e2 / 0.2e1) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.43e2 / 0.36e2 * eta + 0.5e1 / 0.4e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((6 * f + 2 * g)) / 0.30e2 - ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.2e1) * ci2 ^ 4 + (-eta ^ 2 - eta / 0.2e1 + 0.5e1 / 0.2e1) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.5e1 / 0.36e2 * eta - 0.5e1 / 0.12e2) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((-2 * g + 2 * f)) / 0.10e2 - 0.2e1 / 0.9e1 * ((eta - 0.1e1) * (eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * ci2 ^ 6 + (-eta ^ 4 - eta ^ 3 / 0.20e2 + 0.53e2 / 0.4e1 * eta ^ 2 + 0.49e2 / 0.20e2 * eta - 0.293e3 / 0.20e2) * ci2 ^ 4 + (eta ^ 4 / 0.5e1 + 0.3e1 / 0.8e1 * eta ^ 3 - 0.87e2 / 0.40e2 * eta ^ 2 - 0.47e2 / 0.40e2 * eta + 0.79e2 / 0.40e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 - 0.2e1) / 0.5e1) * eta * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((2 * g + 2 * f)) + (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (eta ^ 2 + eta / 0.2e1 - 0.45e2 / 0.8e1) * (ci2 - 0.1e1) ^ 2 * sin((8 * f + 4 * g)) / 0.90e2 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * (eta - 0.1e1) * (0.1e1 + eta) * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((2 * g + 4 * f)) - (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((4 * f - 2 * g)) / 0.240e3 - (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((8 * f + 2 * g)) / 0.240e3 - 0.2e1 / 0.3e1 * eta * (0.1e1 + eta) * Delta * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 4 - 0.1e1 / 0.5e1) * (ci2 - 0.1e1) ^ 2 * cos((2 * g + 2 * f)) + (ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((10 * f + 4 * g)) / 0.960e3 + ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((2 * f - 4 * g)) / 0.960e3 + ((0.11e2 / 0.96e2 * eta ^ 4 + 0.22e2 / 0.45e2 * eta ^ 3 - 0.529e3 / 0.720e3 * eta ^ 2 + 0.11e2 / 0.45e2 * eta + 0.261e3 / 0.160e3) * ci2 ^ 8 + (-0.11e2 / 0.48e2 * eta ^ 4 - 0.44e2 / 0.45e2 * eta ^ 3 + 0.529e3 / 0.360e3 * eta ^ 2 - 0.22e2 / 0.45e2 * eta - 0.261e3 / 0.80e2) * ci2 ^ 6 + (0.191e3 / 0.1440e4 * eta ^ 4 + 0.29e2 / 0.45e2 * eta ^ 3 - 0.169e3 / 0.240e3 * eta ^ 2 + 0.13e2 / 0.30e2 * eta + 0.319e3 / 0.160e3) * ci2 ^ 4 + (-0.13e2 / 0.720e3 * eta ^ 4 - 0.7e1 / 0.45e2 * eta ^ 3 - 0.29e2 / 0.80e2 - 0.11e2 / 0.360e3 * eta ^ 2 - 0.17e2 / 0.90e2 * eta) * ci2 ^ 2 - eta ^ 4 / 0.2880e4 + eta ^ 3 / 0.90e2 + eta / 0.30e2 + 0.29e2 / 0.960e3 + 0.29e2 / 0.1440e4 * eta ^ 2) * sin((2 * f)) + (eta - 0.1e1) * (0.1e1 + eta) * ((eta ^ 2 - 0.7e1 / 0.3e1 * eta - 0.45e2 / 0.8e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.14e2 / 0.3e1 * eta + 0.45e2 / 0.4e1) * ci2 ^ 6 + (0.7e1 / 0.6e1 * eta ^ 2 - 0.19e2 / 0.6e1 * eta - 0.55e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 / 0.6e1 + 0.5e1 / 0.6e1 * eta + 0.5e1 / 0.4e1) * ci2 ^ 2 - eta / 0.12e2 - 0.5e1 / 0.48e2) * sin((4 * f)) / 0.15e2 + 0.7e1 / 0.720e3 * ((eta ^ 4 - 0.80e2 / 0.7e1 * eta ^ 3 - 0.1118e4 / 0.7e1 * eta ^ 2 - 0.440e3 / 0.7e1 * eta + 0.783e3 / 0.7e1) * ci2 ^ 6 + (-eta ^ 4 + 0.80e2 / 0.7e1 * eta ^ 3 + 0.1118e4 / 0.7e1 * eta ^ 2 + 0.440e3 / 0.7e1 * eta - 0.783e3 / 0.7e1) * ci2 ^ 4 + (0.23e2 / 0.42e2 * eta ^ 4 + 0.8e1 * eta ^ 3 - 0.227e3 / 0.21e2 * eta ^ 2 - 0.88e2 / 0.21e2 * eta + 0.261e3 / 0.14e2) * ci2 ^ 2 - 0.16e2 / 0.3e1 * eta * (eta + 0.37e2 / 0.28e2) * (0.1e1 + eta)) * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((2 * g)) + (0.1e1 + eta) * ((eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.45e2 / 0.8e1) * (eta - 0.1e1) * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * sin((4 * g)) / 0.90e2 + (ci2 ^ 8 - 0.2e1 * ci2 ^ 6 + 0.11e2 / 0.9e1 * ci2 ^ 4 - 0.2e1 / 0.9e1 * ci2 ^ 2 + 0.1e1 / 0.54e2) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * sin((6 * f)) / 0.160e3 + cos((2 * g)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1))) * (eta - 0.1e1)) * (0.1e1 + eta)) * J ^ 2 / a ^ 5 / eta ^ 9 / (0.1e1 + eta) ^ 2 0.297e3 / 0.128e3 * R__e ^ 4 * (0.25e2 / 0.66e2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.232e3 / 0.25e2 * eta ^ 2 - 0.2537e4 / 0.25e2 * eta - 0.2796e4 / 0.25e2) * ci2 ^ 6 + (-eta ^ 3 + 0.232e3 / 0.25e2 * eta ^ 2 + 0.2537e4 / 0.25e2 * eta + 0.2796e4 / 0.25e2) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 - 0.202e3 / 0.75e2 * eta ^ 2 - 0.903e3 / 0.50e2 * eta - 0.466e3 / 0.25e2) * ci2 ^ 2 + 0.2e1 / 0.15e2 * eta ^ 2 + 0.2e1 / 0.15e2 * eta) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) * (ci2 - 0.1e1) * cos((2 * g + 7 * f)) - 0.2e1 / 0.33e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((6 * f - 2 * g)) - 0.7e1 / 0.66e2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.472e3 / 0.7e1 * eta ^ 2 - 0.215e3 / 0.7e1 * eta + 0.876e3 / 0.7e1) * ci2 ^ 6 + (-eta ^ 3 + 0.472e3 / 0.7e1 * eta ^ 2 + 0.215e3 / 0.7e1 * eta - 0.876e3 / 0.7e1) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 - 0.14e2 * eta ^ 2 - 0.331e3 / 0.42e2 * eta + 0.146e3 / 0.7e1) * ci2 ^ 2 - 0.2e1 / 0.21e2 * eta ^ 2 - 0.2e1 / 0.21e2 * eta) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) * (ci2 - 0.1e1) * cos((3 * f - 2 * g)) - 0.28e2 / 0.33e2 * ((eta ^ 2 + 0.3e1 / 0.14e2 * eta - 0.36e2 / 0.7e1) * ci2 ^ 4 + (-eta ^ 2 - 0.3e1 / 0.14e2 * eta + 0.36e2 / 0.7e1) * ci2 ^ 2 + 0.3e1 / 0.14e2 * eta ^ 2 + eta / 0.12e2 - 0.6e1 / 0.7e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((4 * f - 2 * g)) - 0.763e3 / 0.66e2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.30e2 / 0.109e3 * eta ^ 3 - 0.15908e5 / 0.2289e4 * eta ^ 2 - 0.5974e4 / 0.2289e4 * eta + 0.4065e4 / 0.763e3) * ci2 ^ 4 + 0.24e2 / 0.763e3 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) ^ 2 * cos((4 * g + 7 * f)) + 0.320e3 / 0.11e2 * eta * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 0.1e1) * ((eta ^ 2 - 0.2e1 * eta + 0.1e1 / 0.3e1) * ci2 ^ 6 + (-eta ^ 2 + 0.2e1 * eta - 0.1e1 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 / 0.5e1 - 0.2e1 / 0.5e1 * eta + 0.11e2 / 0.15e2) * ci2 ^ 2 + eta ^ 2 / 0.5e1 - 0.1e1 / 0.3e1) * (ci2 - 0.1e1) * sin((2 * g + 2 * f)) - 0.79e2 / 0.22e2 * ((eta ^ 5 - 0.208e3 / 0.237e3 * eta ^ 4 + 0.1750e4 / 0.237e3 * eta ^ 3 + 0.1212e4 / 0.79e2 * eta ^ 2 - 0.9715e4 / 0.237e3 * eta - 0.3756e4 / 0.79e2) * ci2 ^ 6 + (-eta ^ 5 + 0.208e3 / 0.237e3 * eta ^ 4 - 0.1750e4 / 0.237e3 * eta ^ 3 - 0.1212e4 / 0.79e2 * eta ^ 2 + 0.9715e4 / 0.237e3 * eta + 0.3756e4 / 0.79e2) * ci2 ^ 4 + (0.269e3 / 0.1422e4 * eta ^ 5 - 0.50e2 / 0.711e3 * eta ^ 4 + 0.19e2 / 0.237e3 * eta ^ 3 - 0.76e2 / 0.79e2 * eta ^ 2 - 0.13007e5 / 0.1422e4 * eta - 0.626e3 / 0.79e2) * ci2 ^ 2 - 0.2e1 / 0.79e2 * eta * (0.1e1 + eta) * (eta ^ 2 - 0.232e3 / 0.9e1 * eta - 0.385e3 / 0.9e1)) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) * (ci2 - 0.1e1) * cos((5 * f + 2 * g)) - 0.4e1 / 0.33e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((10 * f + 2 * g)) + 0.79e2 / 0.198e3 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.32e2 / 0.79e2 * eta - 0.729e3 / 0.79e2) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * cos((10 * f + 4 * g)) - 0.37e2 / 0.66e2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * cos((11 * f + 4 * g)) + ci2 ^ 4 * (eta ^ 2 - 0.15e2) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((2 * f - 4 * g)) / 0.66e2 + 0.1280e4 / 0.33e2 * eta * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.3e1 / 0.8e1 * eta - 0.31e2 / 0.8e1) * ci2 ^ 6 + (-eta ^ 2 - 0.3e1 / 0.8e1 * eta + 0.31e2 / 0.8e1) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 - 0.3e1 / 0.40e2 * eta - 0.37e2 / 0.40e2) * ci2 ^ 2 + 0.3e1 / 0.40e2 * eta + 0.3e1 / 0.40e2) * Delta * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((2 * g + 4 * f)) - 0.47e2 / 0.198e3 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) ^ 2 * (eta + 0.63e2 / 0.47e2) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * cos((-4 * g + f)) - 0.959e3 / 0.198e3 * (eta ^ 2 + 0.366e3 / 0.959e3 * eta - 0.2817e4 / 0.959e3) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * cos((9 * f + 4 * g)) - 0.200e3 / 0.33e2 * ((eta ^ 4 - 0.6e1 / 0.5e1 * eta ^ 3 - 0.16e2 / 0.5e1 * eta ^ 2 + 0.6e1 * eta + 0.43e2 / 0.5e1) * ci2 ^ 6 + (-eta ^ 4 + 0.6e1 / 0.5e1 * eta ^ 3 + 0.16e2 / 0.5e1 * eta ^ 2 - 0.6e1 * eta - 0.43e2 / 0.5e1) * ci2 ^ 4 + (eta ^ 4 / 0.5e1 + 0.6e1 / 0.25e2 * eta ^ 3 - 0.4e1 / 0.25e2 * eta ^ 2 - 0.6e1 / 0.5e1 * eta - 0.17e2 / 0.25e2) * ci2 ^ 2 - 0.6e1 / 0.25e2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1)) * eta * sqrt(-eta ^ 2 + 0.1e1) * (0.1e1 + eta) * Delta * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((f + 2 * g)) - 0.320e3 / 0.33e2 * eta * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 0.1e1) * ((eta ^ 2 - 0.3e1 / 0.2e1 * eta - 0.7e1 / 0.2e1) * ci2 ^ 6 + (-eta ^ 2 + 0.3e1 / 0.2e1 * eta + 0.7e1 / 0.2e1) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 + 0.3e1 / 0.10e2 * eta - 0.1e1 / 0.10e2) * ci2 ^ 2 - 0.3e1 / 0.10e2 * eta - 0.3e1 / 0.10e2) * (ci2 - 0.1e1) * sin((2 * g)) - 0.40e2 / 0.33e2 * ((eta ^ 4 - 0.6e1 * eta ^ 3 + 0.64e2 * eta ^ 2 + 0.30e2 * eta - 0.97e2) * ci2 ^ 6 + (-eta ^ 4 + 0.6e1 * eta ^ 3 - 0.64e2 * eta ^ 2 - 0.30e2 * eta + 0.97e2) * ci2 ^ 4 + (eta ^ 4 / 0.5e1 + 0.6e1 / 0.5e1 * eta ^ 3 + 0.76e2 / 0.5e1 * eta ^ 2 - 0.6e1 * eta - 0.157e3 / 0.5e1) * ci2 ^ 2 - 0.6e1 / 0.5e1 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1)) * eta * sqrt(-eta ^ 2 + 0.1e1) * (0.1e1 + eta) * Delta * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((3 * f + 2 * g)) + 0.247e3 / 0.198e3 * ((eta ^ 6 - 0.942e3 / 0.247e3 * eta ^ 5 - 0.8095e4 / 0.247e3 * eta ^ 4 + 0.15452e5 / 0.247e3 * eta ^ 3 + 0.18153e5 / 0.247e3 * eta ^ 2 - 0.28814e5 / 0.247e3 * eta + 0.2079e4 / 0.247e3) * ci2 ^ 4 + 0.96e2 / 0.247e3 * eta * (eta ^ 4 - 0.9e1 * eta ^ 2 + 0.10e2)) * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * cos((4 * f + 4 * g)) + 0.283e3 / 0.22e2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 + 0.1e1) * ((-0.305e3 / 0.283e3 * eta ^ 5 - 0.5100e4 / 0.283e3 * eta ^ 4 - 0.12925e5 / 0.849e3 * eta ^ 3 + 0.4500e4 / 0.283e3 * eta ^ 2 + 0.4629e4 / 0.283e3 * eta + 0.484e3 / 0.849e3 + eta ^ 7 + 0.2276e4 / 0.849e3 * eta ^ 6) * ci2 ^ 6 + (0.305e3 / 0.283e3 * eta ^ 5 + 0.5100e4 / 0.283e3 * eta ^ 4 + 0.12925e5 / 0.849e3 * eta ^ 3 - eta ^ 7 - 0.2276e4 / 0.849e3 * eta ^ 6 - 0.4500e4 / 0.283e3 * eta ^ 2 - 0.4629e4 / 0.283e3 * eta - 0.484e3 / 0.849e3) * ci2 ^ 4 + (0.4405e4 / 0.5094e4 * eta ^ 5 - 0.5834e4 / 0.2547e4 * eta ^ 4 - 0.18701e5 / 0.5094e4 * eta ^ 3 + 0.1009e4 / 0.5094e4 * eta ^ 7 + 0.2158e4 / 0.2547e4 * eta ^ 6 + 0.242e3 / 0.2547e4 + 0.1642e4 / 0.2547e4 * eta ^ 2 + 0.1071e4 / 0.566e3 * eta) * ci2 ^ 2 - 0.404e3 / 0.2547e4 * (eta ^ 4 + 0.252e3 / 0.101e3 * eta ^ 3 + 0.146e3 / 0.101e3 * eta ^ 2 - 0.396e3 / 0.101e3 * eta - 0.383e3 / 0.101e3) * eta * (0.1e1 + eta)) * (ci2 - 0.1e1) * cos((f + 2 * g)) + ((eta ^ 5 - 0.2039e4 / 0.99e2 * eta ^ 4 - 0.64e2 / 0.9e1 * eta ^ 3 + 0.9968e4 / 0.99e2 * eta ^ 2 - 0.3635e4 / 0.99e2 * eta - 0.1569e4 / 0.11e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 5 + 0.4078e4 / 0.99e2 * eta ^ 4 + 0.128e3 / 0.9e1 * eta ^ 3 - 0.19936e5 / 0.99e2 * eta ^ 2 + 0.7270e4 / 0.99e2 * eta + 0.3138e4 / 0.11e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 5 - 0.773e3 / 0.33e2 * eta ^ 4 - 0.260e3 / 0.33e2 * eta ^ 3 + 0.11162e5 / 0.99e2 * eta ^ 2 - 0.5480e4 / 0.99e2 * eta - 0.523e3 / 0.3e1) * ci2 ^ 4 + (-eta ^ 5 / 0.3e1 + 0.280e3 / 0.99e2 * eta ^ 4 + 0.76e2 / 0.99e2 * eta ^ 3 + 0.1046e4 / 0.33e2 - 0.398e3 / 0.33e2 * eta ^ 2 + 0.205e3 / 0.11e2 * eta) * ci2 ^ 2 + eta ^ 4 / 0.18e2 + 0.5e1 / 0.22e2 * eta ^ 3 + eta ^ 5 / 0.36e2 - 0.95e2 / 0.36e2 * eta - 0.8e1 / 0.99e2 * eta ^ 2 - 0.523e3 / 0.198e3) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) * cos((3 * f)) + ((eta ^ 3 - 0.379e3 / 0.3e1 * eta ^ 2 + 0.1493e4 / 0.9e1 * eta + 0.459e3) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.758e3 / 0.3e1 * eta ^ 2 - 0.2986e4 / 0.9e1 * eta - 0.918e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 - 0.1309e4 / 0.9e1 * eta ^ 2 + 0.2056e4 / 0.9e1 * eta + 0.561e3) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.172e3 / 0.9e1 * eta ^ 2 - 0.563e3 / 0.9e1 * eta - 0.102e3) * ci2 ^ 2 + eta ^ 3 / 0.36e2 - eta ^ 2 / 0.6e1 + 0.239e3 / 0.36e2 * eta + 0.17e2 / 0.2e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * cos((5 * f)) / 0.11e2 - 0.14e2 / 0.3e1 * (0.1e1 + eta) * (ci2 + 0.1e1) * (ci2 - 0.1e1) * ((eta - 0.1e1) * (eta ^ 6 + 0.12e2 / 0.11e2 * eta ^ 5 - 0.1807e4 / 0.77e2 * eta ^ 4 - 0.1480e4 / 0.77e2 * eta ^ 3 + 0.4887e4 / 0.77e2 * eta ^ 2 + 0.4212e4 / 0.77e2 * eta - 0.9e1) * ci2 ^ 6 - (eta - 0.1e1) * (eta ^ 6 + 0.12e2 / 0.11e2 * eta ^ 5 - 0.1807e4 / 0.77e2 * eta ^ 4 - 0.1480e4 / 0.77e2 * eta ^ 3 + 0.4887e4 / 0.77e2 * eta ^ 2 + 0.4212e4 / 0.77e2 * eta - 0.9e1) * ci2 ^ 4 + (-0.801e3 / 0.154e3 * eta ^ 5 - 0.1993e4 / 0.462e3 * eta ^ 4 + 0.1685e4 / 0.154e3 * eta ^ 3 + 0.31e2 / 0.154e3 * eta ^ 7 + 0.61e2 / 0.154e3 * eta ^ 6 + 0.3e1 / 0.2e1 + 0.575e3 / 0.154e3 * eta ^ 2 - 0.947e3 / 0.154e3 * eta) * ci2 ^ 2 - 0.16e2 / 0.77e2 * eta * (0.1e1 + eta) * (eta ^ 4 - 0.2e1 * eta ^ 3 - 0.11e2 * eta ^ 2 - eta + 0.43e2 / 0.3e1)) * cos((2 * g + 2 * f)) + 0.19e2 / 0.198e3 * ((0.9127e4 / 0.19e2 * eta ^ 5 - 0.39500e5 / 0.19e2 * eta ^ 4 - 0.25431e5 / 0.19e2 * eta ^ 3 + 0.3644e4 * eta ^ 2 + 0.27421e5 / 0.19e2 * eta - 0.26004e5 / 0.19e2 + eta ^ 7 + 0.6060e4 / 0.19e2 * eta ^ 6) * ci2 ^ 6 + (-0.9127e4 / 0.19e2 * eta ^ 5 + 0.39500e5 / 0.19e2 * eta ^ 4 + 0.25431e5 / 0.19e2 * eta ^ 3 - eta ^ 7 - 0.6060e4 / 0.19e2 * eta ^ 6 - 0.3644e4 * eta ^ 2 - 0.27421e5 / 0.19e2 * eta + 0.26004e5 / 0.19e2) * ci2 ^ 4 + (0.8405e4 / 0.38e2 * eta ^ 5 - 0.2858e4 / 0.19e2 * eta ^ 4 - 0.14765e5 / 0.38e2 * eta ^ 3 + 0.17e2 / 0.38e2 * eta ^ 7 + 0.1454e4 / 0.19e2 * eta ^ 6 - 0.4334e4 / 0.19e2 + 0.2154e4 / 0.19e2 * eta ^ 2 - 0.377e3 / 0.38e2 * eta) * ci2 ^ 2 - 0.132e3 / 0.19e2 * eta * (0.1e1 + eta) * (eta ^ 4 + 0.284e3 / 0.33e2 * eta ^ 3 + 0.322e3 / 0.33e2 * eta ^ 2 - 0.620e3 / 0.33e2 * eta - 0.249e3 / 0.11e2)) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 + 0.1e1) * (ci2 - 0.1e1) * cos((3 * f + 2 * g)) - 0.5e1 / 0.11e2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((eta + 0.21e2 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta - 0.42e2 / 0.5e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta + 0.77e2 / 0.15e2) * ci2 ^ 4 + (-eta / 0.3e1 - 0.14e2 / 0.15e2) * ci2 ^ 2 + eta / 0.36e2 + 0.7e1 / 0.90e2) * cos((7 * f)) + 0.20e2 / 0.11e2 * eta * sqrt(-eta ^ 2 + 0.1e1) * (-0.4e1 / 0.15e2 + (eta - 0.7e1 / 0.3e1) * ci2 ^ 6 + (-eta + 0.7e1 / 0.3e1) * ci2 ^ 4 + (eta / 0.5e1 + 0.1e1 / 0.15e2) * ci2 ^ 2) * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((-2 * g + f)) + sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta + 0.52e2 / 0.3e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((5 * f - 2 * g)) / 0.22e2 + 0.35e2 / 0.66e2 * (eta + 0.116e3 / 0.35e2) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((2 * g + 9 * f)) - 0.80e2 / 0.33e2 * eta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((-2 * g + 2 * f)) + 0.80e2 / 0.3e1 * eta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((6 * f + 2 * g)) + 0.60e2 / 0.11e2 * eta * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 + 0.4e1 / 0.9e1 * eta - 0.149e3 / 0.9e1) * ci2 ^ 6 + (-eta ^ 2 - 0.4e1 / 0.9e1 * eta + 0.149e3 / 0.9e1) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 - 0.4e1 / 0.45e2 * eta - 0.157e3 / 0.45e2) * ci2 ^ 2 + 0.4e1 / 0.45e2 * eta + 0.4e1 / 0.45e2) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 0.1e1) * (ci2 - 0.1e1) * sin((5 * f + 2 * g)) + 0.41e2 / 0.33e2 * ((eta ^ 2 - 0.404e3 / 0.123e3 * eta - 0.387e3 / 0.41e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.808e3 / 0.123e3 * eta + 0.774e3 / 0.41e2) * ci2 ^ 6 + (0.145e3 / 0.123e3 * eta ^ 2 - 0.544e3 / 0.123e3 * eta - 0.473e3 / 0.41e2) * ci2 ^ 4 + (-0.22e2 / 0.123e3 * eta ^ 2 + 0.140e3 / 0.123e3 * eta + 0.86e2 / 0.41e2) * ci2 ^ 2 + eta ^ 2 / 0.246e3 - 0.13e2 / 0.123e3 * eta - 0.43e2 / 0.246e3) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * cos((6 * f)) + 0.3e1 / 0.22e2 * (eta - 0.1e1) ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 ^ 8 - 0.2e1 * ci2 ^ 6 + 0.11e2 / 0.9e1 * ci2 ^ 4 - 0.2e1 / 0.9e1 * ci2 ^ 2 + 0.1e1 / 0.54e2) * cos((8 * f)) + 0.32e2 / 0.11e2 * ((eta ^ 4 + 0.5e1 / 0.12e2 * eta ^ 3 - 0.1117e4 / 0.72e2 * eta ^ 2 + 0.94e2 / 0.9e1 * eta + 0.261e3 / 0.8e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 4 - 0.5e1 / 0.6e1 * eta ^ 3 + 0.1117e4 / 0.36e2 * eta ^ 2 - 0.188e3 / 0.9e1 * eta - 0.261e3 / 0.4e1) * ci2 ^ 6 + (0.7e1 / 0.6e1 * eta ^ 4 + eta ^ 3 / 0.2e1 - 0.421e3 / 0.24e2 * eta ^ 2 + 0.179e3 / 0.12e2 * eta + 0.319e3 / 0.8e1) * ci2 ^ 4 + (-eta ^ 4 / 0.6e1 - eta ^ 3 / 0.12e2 + 0.73e2 / 0.36e2 * eta ^ 2 - 0.161e3 / 0.36e2 * eta - 0.29e2 / 0.4e1) * ci2 ^ 2 - eta ^ 3 / 0.144e3 + eta ^ 2 / 0.144e3 + 0.79e2 / 0.144e3 * eta + 0.29e2 / 0.48e2) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * cos((4 * f)) + 0.29e2 / 0.11e2 * (eta - 0.1e1) * (0.1e1 + eta) * ((0.220e3 / 0.87e2 * eta ^ 5 - 0.5329e4 / 0.261e3 * eta ^ 4 - 0.1768e4 / 0.261e3 * eta ^ 3 + 0.13843e5 / 0.261e3 * eta ^ 2 - 0.300e3 / 0.29e2 * eta + eta ^ 6 - 0.1551e4 / 0.29e2) * ci2 ^ 8 + (-0.440e3 / 0.87e2 * eta ^ 5 + 0.10658e5 / 0.261e3 * eta ^ 4 + 0.3536e4 / 0.261e3 * eta ^ 3 - 0.27686e5 / 0.261e3 * eta ^ 2 + 0.600e3 / 0.29e2 * eta + 0.3102e4 / 0.29e2 - 0.2e1 * eta ^ 6) * ci2 ^ 6 + (0.96e2 / 0.29e2 * eta ^ 5 - 0.1969e4 / 0.87e2 * eta ^ 4 - 0.208e3 / 0.29e2 * eta ^ 3 + 0.101e3 / 0.87e2 * eta ^ 6 + 0.15497e5 / 0.261e3 * eta ^ 2 - 0.4400e4 / 0.261e3 * eta - 0.5687e4 / 0.87e2) * ci2 ^ 4 + (-0.68e2 / 0.87e2 * eta ^ 5 + 0.578e3 / 0.261e3 * eta ^ 4 + 0.104e3 / 0.261e3 * eta ^ 3 - 0.14e2 / 0.87e2 * eta ^ 6 + 0.1034e4 / 0.87e2 - 0.1654e4 / 0.261e3 * eta ^ 2 + 0.1700e4 / 0.261e3 * eta) * ci2 ^ 2 + 0.61e2 / 0.522e3 * eta ^ 4 + 0.70e2 / 0.261e3 * eta ^ 3 - 0.517e3 / 0.522e3 - eta ^ 6 / 0.522e3 + 0.13e2 / 0.261e3 * eta ^ 5 - 0.275e3 / 0.261e3 * eta + eta ^ 2 / 0.58e2) * cos((2 * f)) + 0.179e3 / 0.66e2 * ((eta ^ 5 + 0.1232e4 / 0.179e3 * eta ^ 4 + 0.842e3 / 0.179e3 * eta ^ 3 - 0.3828e4 / 0.179e3 * eta ^ 2 - 0.2701e4 / 0.179e3 * eta + 0.1284e4 / 0.179e3) * ci2 ^ 6 + (-eta ^ 5 - 0.1232e4 / 0.179e3 * eta ^ 4 - 0.842e3 / 0.179e3 * eta ^ 3 + 0.3828e4 / 0.179e3 * eta ^ 2 + 0.2701e4 / 0.179e3 * eta - 0.1284e4 / 0.179e3) * ci2 ^ 4 + (0.211e3 / 0.1074e4 * eta ^ 5 + 0.770e3 / 0.537e3 * eta ^ 4 + 0.237e3 / 0.179e3 * eta ^ 3 - 0.652e3 / 0.179e3 * eta ^ 2 - 0.3089e4 / 0.1074e4 * eta + 0.214e3 / 0.179e3) * ci2 ^ 2 - 0.2e1 / 0.179e3 * eta * (0.1e1 + eta) ^ 2 * (eta + 0.37e2 / 0.3e1)) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) * (ci2 - 0.1e1) * cos((-2 * g + f)) - 0.57e2 / 0.22e2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.110e3 / 0.171e3 * eta ^ 3 - 0.1148e4 / 0.171e3 * eta ^ 2 - 0.1714e4 / 0.171e3 * eta - 0.103e3 / 0.19e2) * ci2 ^ 4 + 0.56e2 / 0.171e3 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) ^ 2 * cos((4 * g + f)) + 0.16e2 / 0.33e2 * ((eta ^ 2 + 0.117e3 / 0.8e1 * eta + 0.93e2 / 0.4e1) * ci2 ^ 4 + (-eta ^ 2 - 0.117e3 / 0.8e1 * eta - 0.93e2 / 0.4e1) * ci2 ^ 2 + eta ^ 2 / 0.4e1 + 0.121e3 / 0.48e2 * eta + 0.31e2 / 0.8e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((8 * f + 2 * g)) - 0.5e1 / 0.66e2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * cos((-4 * g + 3 * f)) + 0.109e3 / 0.99e2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.24e2 / 0.109e3 * eta ^ 3 - 0.2560e4 / 0.109e3 * eta ^ 2 - 0.948e3 / 0.109e3 * eta + 0.3555e4 / 0.109e3) * ci2 ^ 4 + 0.4e1 / 0.109e3 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) ^ 2 * cos((8 * f + 4 * g)) - 0.1649e4 / 0.198e3 * ((eta ^ 5 - 0.2741e4 / 0.1649e4 * eta ^ 4 - 0.14250e5 / 0.1649e4 * eta ^ 3 + 0.4562e4 / 0.1649e4 * eta ^ 2 + 0.17641e5 / 0.1649e4 * eta + 0.3795e4 / 0.1649e4) * ci2 ^ 4 + 0.24e2 / 0.97e2 * eta * (0.1e1 + eta) * (eta ^ 2 - 0.37e2 / 0.17e2)) * sqrt(-eta ^ 2 + 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * cos((3 * f + 4 * g)) - 0.2609e4 / 0.198e3 * sqrt(-eta ^ 2 + 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 - 0.2997e4 / 0.2609e4 * eta ^ 4 - 0.23306e5 / 0.2609e4 * eta ^ 3 + 0.12082e5 / 0.2609e4 * eta ^ 2 + 0.30665e5 / 0.2609e4 * eta - 0.9933e4 / 0.2609e4) * ci2 ^ 4 + 0.312e3 / 0.2609e4 * (eta ^ 2 - 0.83e2 / 0.39e2) * eta * (0.1e1 + eta)) * (ci2 - 0.1e1) ^ 2 * cos((5 * f + 4 * g)) + 0.293e3 / 0.198e3 * ((eta ^ 6 - 0.160e3 / 0.293e3 * eta ^ 5 - 0.10357e5 / 0.293e3 * eta ^ 4 - 0.3520e4 / 0.293e3 * eta ^ 3 + 0.31899e5 / 0.293e3 * eta ^ 2 + 0.12992e5 / 0.293e3 * eta - 0.14091e5 / 0.293e3) * ci2 ^ 4 + 0.48e2 / 0.293e3 * eta * (eta ^ 2 - 0.6e1) * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * cos((6 * f + 4 * g)) + ci2 ^ 4 * (eta - 0.1e1) ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((4 * f - 4 * g)) / 0.132e3 - 0.50e2 / 0.33e2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) * ((eta ^ 4 + 0.22e2 / 0.25e2 * eta ^ 3 - 0.422e3 / 0.25e2 * eta ^ 2 - 0.46e2 / 0.5e1 * eta + 0.381e3 / 0.25e2) * ci2 ^ 6 + (-eta ^ 4 - 0.22e2 / 0.25e2 * eta ^ 3 + 0.422e3 / 0.25e2 * eta ^ 2 + 0.46e2 / 0.5e1 * eta - 0.381e3 / 0.25e2) * ci2 ^ 4 + (0.11e2 / 0.50e2 * eta ^ 4 + eta ^ 3 / 0.5e1 - 0.17e2 / 0.5e1 * eta ^ 2 - 0.53e2 / 0.25e2 * eta + 0.127e3 / 0.50e2) * ci2 ^ 2 - 0.2e1 / 0.75e2 * eta ^ 2 - 0.2e1 / 0.75e2 * eta) * (ci2 - 0.1e1) * cos((-2 * g + 2 * f)) + 0.137e3 / 0.198e3 * ((eta ^ 6 - 0.384e3 / 0.137e3 * eta ^ 5 - 0.4225e4 / 0.137e3 * eta ^ 4 - 0.1536e4 / 0.137e3 * eta ^ 3 + 0.10503e5 / 0.137e3 * eta ^ 2 + 0.13024e5 / 0.137e3 * eta + 0.4785e4 / 0.137e3) * ci2 ^ 4 + 0.80e2 / 0.137e3 * (eta ^ 2 - 0.32e2 / 0.5e1) * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * cos((2 * f + 4 * g)) - 0.124e3 / 0.33e2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) * (ci2 - 0.1e1) * ((0.349e3 / 0.62e2 * eta ^ 5 - 0.364e3 / 0.31e2 * eta ^ 4 + 0.123e3 / 0.31e2 * eta ^ 3 + 0.1671e4 / 0.31e2 * eta ^ 2 - 0.931e3 / 0.62e2 * eta - 0.1562e4 / 0.31e2 + eta ^ 6) * ci2 ^ 6 + (-0.349e3 / 0.62e2 * eta ^ 5 + 0.364e3 / 0.31e2 * eta ^ 4 - 0.123e3 / 0.31e2 * eta ^ 3 - eta ^ 6 - 0.1671e4 / 0.31e2 * eta ^ 2 + 0.931e3 / 0.62e2 * eta + 0.1562e4 / 0.31e2) * ci2 ^ 4 + (0.195e3 / 0.124e3 * eta ^ 5 - 0.26e2 / 0.31e2 * eta ^ 4 - 0.449e3 / 0.186e3 * eta ^ 3 + 0.37e2 / 0.186e3 * eta ^ 6 - 0.781e3 / 0.93e2 + 0.43e2 / 0.62e2 * eta ^ 2 - 0.893e3 / 0.124e3 * eta) * ci2 ^ 2 - 0.8e1 / 0.31e2 * (eta ^ 3 + 0.5e1 / 0.3e1 * eta ^ 2 - 0.15e2 / 0.2e1 * eta - 0.31e2 / 0.3e1) * eta * (0.1e1 + eta)) * cos((2 * g + 4 * f)) + 0.5e1 / 0.132e3 * ci2 ^ 4 * (eta - 0.1e1) ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((12 * f + 4 * g)) - 0.232e3 / 0.99e2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 0.1e1) * ((-0.705e3 / 0.116e3 * eta ^ 5 - 0.2127e4 / 0.58e2 * eta ^ 4 - 0.1591e4 / 0.58e2 * eta ^ 3 + 0.1378e4 / 0.29e2 * eta ^ 2 + 0.5279e4 / 0.116e3 * eta + 0.33e2 / 0.58e2 + eta ^ 6) * ci2 ^ 6 + (0.705e3 / 0.116e3 * eta ^ 5 + 0.2127e4 / 0.58e2 * eta ^ 4 + 0.1591e4 / 0.58e2 * eta ^ 3 - eta ^ 6 - 0.1378e4 / 0.29e2 * eta ^ 2 - 0.5279e4 / 0.116e3 * eta - 0.33e2 / 0.58e2) * ci2 ^ 4 + (-0.215e3 / 0.232e3 * eta ^ 5 - 0.797e3 / 0.116e3 * eta ^ 4 - 0.881e3 / 0.116e3 * eta ^ 3 + 0.6e1 / 0.29e2 * eta ^ 6 + 0.11e2 / 0.116e3 + 0.277e3 / 0.58e2 * eta ^ 2 + 0.1545e4 / 0.232e3 * eta) * ci2 ^ 2 - 0.4e1 / 0.29e2 * (eta ^ 3 + eta ^ 2 / 0.2e1 - 0.17e2 / 0.2e1 * eta - 0.15e2 / 0.2e1) * eta * (0.1e1 + eta)) * (ci2 - 0.1e1) * cos((2 * g)) + 0.19e2 / 0.99e2 * ((eta ^ 4 - 0.56e2 / 0.19e2 * eta ^ 3 - 0.316e3 / 0.19e2 * eta ^ 2 - 0.580e3 / 0.19e2 * eta - 0.423e3 / 0.19e2) * ci2 ^ 4 + 0.12e2 / 0.19e2 * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * cos((4 * g)) - 0.10e2 / 0.99e2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 0.1e1) * ((eta ^ 4 - 0.318e3 / 0.5e1 * eta ^ 3 + 0.26e2 / 0.5e1 * eta ^ 2 + 0.1046e4 * eta + 0.5121e4 / 0.5e1) * ci2 ^ 6 + (-eta ^ 4 + 0.318e3 / 0.5e1 * eta ^ 3 - 0.26e2 / 0.5e1 * eta ^ 2 - 0.1046e4 * eta - 0.5121e4 / 0.5e1) * ci2 ^ 4 + (-eta ^ 4 / 0.10e2 - 0.5e1 * eta ^ 3 + 0.31e2 * eta ^ 2 + 0.993e3 / 0.5e1 * eta + 0.1707e4 / 0.10e2) * ci2 ^ 2 - 0.16e2 / 0.5e1 * eta ^ 3 - 0.54e2 / 0.5e1 * eta ^ 2 - 0.38e2 / 0.5e1 * eta) * (ci2 - 0.1e1) * cos((6 * f + 2 * g)) - 0.20e2 / 0.33e2 * eta * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((3 * f - 2 * g)) + 0.100e3 / 0.33e2 * eta * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((2 * g + 7 * f)) + 0.5e1 / 0.6e1 * ((0.272e3 / 0.165e3 * eta ^ 5 - 0.1293e4 / 0.55e2 * eta ^ 4 - 0.3088e4 / 0.165e3 * eta ^ 3 + 0.5407e4 / 0.165e3 * eta ^ 2 - 0.192e3 / 0.55e2 * eta + eta ^ 6 - 0.189e3 / 0.5e1) * ci2 ^ 8 + (-0.544e3 / 0.165e3 * eta ^ 5 + 0.2586e4 / 0.55e2 * eta ^ 4 + 0.6176e4 / 0.165e3 * eta ^ 3 - 0.10814e5 / 0.165e3 * eta ^ 2 + 0.384e3 / 0.55e2 * eta + 0.378e3 / 0.5e1 - 0.2e1 * eta ^ 6) * ci2 ^ 6 + (0.32e2 / 0.15e2 * eta ^ 5 - 0.4357e4 / 0.165e3 * eta ^ 4 - 0.3728e4 / 0.165e3 * eta ^ 3 + 0.191e3 / 0.165e3 * eta ^ 6 + 0.1129e4 / 0.33e2 * eta ^ 2 - 0.112e3 / 0.15e2 * eta - 0.231e3 / 0.5e1) * ci2 ^ 4 + (-0.16e2 / 0.33e2 * eta ^ 5 + 0.478e3 / 0.165e3 * eta ^ 4 + 0.128e3 / 0.33e2 * eta ^ 3 - 0.26e2 / 0.165e3 * eta ^ 6 + 0.42e2 / 0.5e1 - 0.238e3 / 0.165e3 * eta ^ 2 + 0.656e3 / 0.165e3 * eta) * ci2 ^ 2 - (eta ^ 3 - 0.7e1 * eta ^ 2 - 0.33e2 * eta - 0.33e2) * (eta ^ 3 - eta ^ 2 - eta - 0.7e1) / 0.330e3) * (eta - 0.1e1) * (0.1e1 + eta) - 0.7e1 / 0.11e2 * ((0.1927e4 / 0.63e2 * eta ^ 5 - 0.2495e4 / 0.21e2 * eta ^ 4 - 0.2459e4 / 0.63e2 * eta ^ 3 + 0.12665e5 / 0.63e2 * eta ^ 2 - 0.409e3 / 0.21e2 * eta + eta ^ 7 + 0.195e3 / 0.7e1 * eta ^ 6 - 0.1023e4 / 0.7e1) * ci2 ^ 8 + (-0.3854e4 / 0.63e2 * eta ^ 5 + 0.4990e4 / 0.21e2 * eta ^ 4 + 0.4918e4 / 0.63e2 * eta ^ 3 - 0.25330e5 / 0.63e2 * eta ^ 2 + 0.818e3 / 0.21e2 * eta + 0.2046e4 / 0.7e1 - 0.2e1 * eta ^ 7 - 0.390e3 / 0.7e1 * eta ^ 6) * ci2 ^ 6 + (0.2420e4 / 0.63e2 * eta ^ 5 - 0.8111e4 / 0.63e2 * eta ^ 4 - 0.364e3 / 0.9e1 * eta ^ 3 + 0.4e1 / 0.3e1 * eta ^ 7 + 0.2029e4 / 0.63e2 * eta ^ 6 + 0.14263e5 / 0.63e2 * eta ^ 2 - 0.2260e4 / 0.63e2 * eta - 0.3751e4 / 0.21e2) * ci2 ^ 4 + (-0.493e3 / 0.63e2 * eta ^ 5 + 0.626e3 / 0.63e2 * eta ^ 4 + 0.89e2 / 0.63e2 * eta ^ 3 - eta ^ 7 / 0.3e1 - 0.274e3 / 0.63e2 * eta ^ 6 + 0.682e3 / 0.21e2 - 0.1598e4 / 0.63e2 * eta ^ 2 + 0.1033e4 / 0.63e2 * eta) * ci2 ^ 2 + 0.121e3 / 0.126e3 * eta ^ 4 + 0.421e3 / 0.252e3 * eta ^ 3 + eta ^ 6 / 0.126e3 + 0.25e2 / 0.84e2 * eta ^ 5 - 0.341e3 / 0.126e3 + eta ^ 7 / 0.36e2 - 0.253e3 / 0.84e2 * eta + 0.59e2 / 0.126e3 * eta ^ 2) * sqrt(-eta ^ 2 + 0.1e1) * cos(f)) * J ^ 2 / a ^ 4 / eta ^ 12 / (0.1e1 + eta) ^ 2 0.135e3 * ci2 * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * ((-0.3e1 / 0.80e2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 + 0.31e2 / 0.9e1 * eta + 0.164e3 / 0.9e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.155e3 / 0.36e2 * eta - 0.205e3 / 0.9e1) * ci2 ^ 6 + (eta ^ 2 / 0.3e1 + 0.4e1 / 0.3e1 * eta + 0.164e3 / 0.27e2) * ci2 ^ 4 - ci2 ^ 2 * eta / 0.54e2 - eta / 0.54e2) * sin((h + 5 * f + 2 * g)) - 0.13e2 / 0.240e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 3 - 0.152e3 / 0.13e2 * eta ^ 2 - 0.97e2 / 0.13e2 * eta + 0.164e3 / 0.13e2) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 3 + 0.190e3 / 0.13e2 * eta ^ 2 + 0.485e3 / 0.52e2 * eta - 0.205e3 / 0.13e2) * ci2 ^ 6 + (eta ^ 3 / 0.3e1 - 0.163e3 / 0.39e2 * eta ^ 2 - 0.36e2 / 0.13e2 * eta + 0.164e3 / 0.39e2) * ci2 ^ 4 + (-eta ^ 2 / 0.78e2 - eta / 0.78e2) * ci2 ^ 2 - eta ^ 2 / 0.78e2 - eta / 0.78e2) * sin((-h - 2 * g + f)) + 0.7e1 / 0.40e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.130e3 / 0.21e2 * eta ^ 4 + 0.60e2 / 0.7e1 * eta ^ 3 + 0.6e1 / 0.7e1 * eta ^ 2 - 0.51e2 / 0.7e1 * eta - 0.36e2 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 5 - 0.65e2 / 0.14e2 * eta ^ 4 - 0.45e2 / 0.7e1 * eta ^ 3 - 0.9e1 / 0.14e2 * eta ^ 2 + 0.153e3 / 0.28e2 * eta + 0.27e2 / 0.7e1) * ci2 ^ 4 + (eta ^ 5 / 0.12e2 + 0.41e2 / 0.63e2 * eta ^ 4 + 0.95e2 / 0.126e3 * eta ^ 3 - 0.2e1 / 0.9e1 * eta ^ 2 - 0.29e2 / 0.36e2 * eta - 0.3e1 / 0.7e1) * ci2 ^ 2 - 0.5e1 / 0.252e3 * (eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.17e2 / 0.5e1) * eta * (0.1e1 + eta)) * sin((-h + f + 2 * g)) - 0.11e2 / 0.360e3 * ((eta ^ 5 - 0.282e3 / 0.11e2 * eta ^ 4 - 0.332e3 / 0.11e2 * eta ^ 3 + 0.854e3 / 0.11e2 * eta ^ 2 + 0.625e3 / 0.11e2 * eta - 0.324e3 / 0.11e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 5 + 0.423e3 / 0.22e2 * eta ^ 4 + 0.249e3 / 0.11e2 * eta ^ 3 - 0.1281e4 / 0.22e2 * eta ^ 2 - 0.1875e4 / 0.44e2 * eta + 0.243e3 / 0.11e2) * ci2 ^ 4 + (eta ^ 5 / 0.12e2 - 0.85e2 / 0.33e2 * eta ^ 4 - 0.359e3 / 0.66e2 * eta ^ 3 + 0.18e2 / 0.11e2 * eta ^ 2 + 0.105e3 / 0.44e2 * eta - 0.27e2 / 0.11e2) * ci2 ^ 2 + eta * (0.1e1 + eta) * (eta ^ 2 + 0.88e2 * eta + 0.115e3) / 0.132e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 3 * f + 2 * g)) + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta - 0.1e1) ^ 2 * (eta + 0.12e2 / 0.5e1) * sin((h + 2 * g + 7 * f)) / 0.48e2 - ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 9 * f + 4 * g)) / 0.80e2 + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta + 0.12e2) * (eta - 0.1e1) ^ 2 * sin((-h + 3 * f - 2 * g)) / 0.240e3 - 0.3e1 / 0.80e2 * ((eta ^ 2 + 0.31e2 / 0.9e1 * eta + 0.164e3 / 0.9e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.31e2 / 0.12e2 * eta - 0.41e2 / 0.3e1) * ci2 ^ 4 + (eta ^ 2 / 0.12e2 + 0.17e2 / 0.36e2 * eta + 0.41e2 / 0.27e2) * ci2 ^ 2 - eta / 0.54e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-h + 5 * f + 2 * g)) - 0.13e2 / 0.240e3 * ((eta ^ 3 - 0.152e3 / 0.13e2 * eta ^ 2 - 0.97e2 / 0.13e2 * eta + 0.164e3 / 0.13e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 3 + 0.114e3 / 0.13e2 * eta ^ 2 + 0.291e3 / 0.52e2 * eta - 0.123e3 / 0.13e2) * ci2 ^ 4 + (eta ^ 3 / 0.12e2 - 0.49e2 / 0.39e2 * eta ^ 2 - 0.47e2 / 0.52e2 * eta + 0.41e2 / 0.39e2) * ci2 ^ 2 - eta ^ 2 / 0.78e2 - eta / 0.78e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((h - 2 * g + f)) - ((eta + 0.3e1) * ci2 ^ 4 + (-eta - 0.3e1) * ci2 ^ 2 + eta / 0.6e1 + 0.1e1 / 0.3e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * sin((-h + 5 * f)) / 0.40e2 + 0.11e2 / 0.120e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 3 - 0.13e2 / 0.3e1 * eta ^ 2 + 0.109e3 / 0.33e2 * eta + 0.123e3 / 0.11e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.3e1 * eta ^ 2 - 0.109e3 / 0.33e2 * eta - 0.123e3 / 0.11e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.2e1 / 0.11e2 * eta ^ 2 + 0.17e2 / 0.22e2 * eta + 0.41e2 / 0.33e2) * (eta - 0.1e1) * sin((-h + 3 * f)) - ci2 ^ 6 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h - 4 * g + f)) / 0.80e2 - ci2 ^ 6 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 9 * f + 4 * g)) / 0.80e2 + ((eta ^ 2 - 0.4e1 * eta + 0.23e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.3e1 * eta - 0.69e2 / 0.4e1) * ci2 ^ 4 + (eta ^ 2 / 0.10e2 + 0.2e1 / 0.5e1 * eta + 0.31e2 / 0.10e2) * ci2 ^ 2 - eta / 0.5e1 - 0.1e1 / 0.5e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * cos((-h + 3 * f + 2 * g)) / 0.18e2 - 0.73e2 / 0.720e3 * (eta ^ 2 + 0.34e2 / 0.73e2 * eta - 0.123e3 / 0.73e2) * ci2 ^ 6 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((h + 4 * g + 7 * f)) + 0.5e1 / 0.6e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * ((eta ^ 2 - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.3e1 / 0.5e1 * eta + 0.39e2 / 0.20e2) * ci2 ^ 4 + (eta ^ 2 / 0.10e2 + 0.2e1 / 0.25e2 * eta - 0.1e1 / 0.10e2) * ci2 ^ 2 - eta / 0.25e2 - 0.1e1 / 0.25e2) * cos((-h + f + 2 * g)) - 0.73e2 / 0.720e3 * (eta ^ 2 + 0.34e2 / 0.73e2 * eta - 0.123e3 / 0.73e2) * ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-h + 4 * g + 7 * f)) + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * eta * Delta * (eta - 0.1e1) * cos((-h - 2 * g + f)) / 0.6e1 - ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * eta * Delta * (eta - 0.1e1) * cos((h + 5 * f + 2 * g)) / 0.6e1 - (0.1e1 + eta) * ((eta ^ 3 - 0.17e2 / 0.20e2 * eta ^ 2 - 0.37e2 / 0.10e2 * eta + 0.27e2 / 0.20e2) * ci2 ^ 6 + (eta ^ 2 / 0.30e2 + eta / 0.30e2) * ci2 ^ 2 + eta ^ 2 / 0.30e2 + eta / 0.30e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 5 * f + 4 * g)) / 0.6e1 + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta + 0.12e2) * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * sin((h + 3 * f - 2 * g)) / 0.240e3 - 0.23e2 / 0.720e3 * ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (eta + 0.3e1) * (eta + 0.41e2 / 0.23e2) * sin((-h + 4 * g + f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.12e2 / 0.5e1) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * sin((-h + 2 * g + 7 * f)) / 0.48e2 - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * cos((-h + 5 * f + 2 * g)) / 0.6e1 + ((-0.9e1 / 0.10e2 - 0.51e2 / 0.40e2 * eta + 0.7e1 / 0.40e2 * eta ^ 5 + 0.13e2 / 0.12e2 * eta ^ 4 + 0.3e1 / 0.2e1 * eta ^ 3 + 0.3e1 / 0.20e2 * eta ^ 2) * ci2 ^ 8 + (-0.15e2 / 0.8e1 * eta ^ 3 - 0.3e1 / 0.16e2 * eta ^ 2 + 0.51e2 / 0.32e2 * eta - 0.7e1 / 0.32e2 * eta ^ 5 - 0.65e2 / 0.48e2 * eta ^ 4 + 0.9e1 / 0.8e1) * ci2 ^ 6 + (-0.3e1 / 0.10e2 + 0.7e1 / 0.120e3 * eta ^ 5 + 0.277e3 / 0.720e3 * eta ^ 4 + 0.73e2 / 0.144e3 * eta ^ 3 - 0.331e3 / 0.720e3 * eta - eta ^ 2 / 0.720e3) * ci2 ^ 4 - (eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.17e2 / 0.5e1) * (0.1e1 + eta) * eta * ci2 ^ 2 / 0.288e3 - (eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.17e2 / 0.5e1) * eta * (0.1e1 + eta) / 0.288e3) * sin((h + f + 2 * g)) - 0.3e1 / 0.20e2 * ci2 ^ 2 * (-0.10e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * cos((h - 2 * g + f)) + 0.23e2 / 0.108e3 * ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta + 0.3e1) * (eta + 0.41e2 / 0.23e2) * sin((h + 4 * g + f)) + ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((h - 4 * g + f)) / 0.12e2 + (ci2 ^ 2 - 0.1e1 / 0.2e1) * (((eta ^ 5 + 0.166e3 / 0.27e2 * eta ^ 4 + 0.19e2 / 0.3e1 * eta ^ 3 - 0.125e3 / 0.27e2 * eta ^ 2 + 0.14e2 / 0.27e2 * eta + 0.9e1) * ci2 ^ 4 + (-eta ^ 5 - 0.166e3 / 0.27e2 * eta ^ 4 - 0.9e1 - 0.14e2 / 0.27e2 * eta + 0.125e3 / 0.27e2 * eta ^ 2 - 0.19e2 / 0.3e1 * eta ^ 3) * ci2 ^ 2 + 0.43e2 / 0.54e2 * eta ^ 3 + 0.4e1 / 0.9e1 * eta + 0.5e1 / 0.18e2 * eta ^ 2 + eta ^ 5 / 0.6e1 + 0.31e2 / 0.54e2 * eta ^ 4 + 0.1e1) * sin((-h + f)) - 0.11e2 / 0.18e2 * (0.1e1 + eta) * ((eta ^ 3 - 0.13e2 / 0.3e1 * eta ^ 2 + 0.109e3 / 0.33e2 * eta + 0.123e3 / 0.11e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.3e1 * eta ^ 2 - 0.109e3 / 0.33e2 * eta - 0.123e3 / 0.11e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.2e1 / 0.11e2 * eta ^ 2 + 0.17e2 / 0.22e2 * eta + 0.41e2 / 0.33e2) * (eta - 0.1e1) * sin((h + 3 * f)) + ((eta + 0.3e1) * ci2 ^ 4 + (-eta - 0.3e1) * ci2 ^ 2 + eta / 0.6e1 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((h + 5 * f)) / 0.6e1 + sin((h + f)) * ((eta ^ 5 + 0.166e3 / 0.27e2 * eta ^ 4 + 0.19e2 / 0.3e1 * eta ^ 3 - 0.125e3 / 0.27e2 * eta ^ 2 + 0.14e2 / 0.27e2 * eta + 0.9e1) * ci2 ^ 4 + (-eta ^ 5 - 0.166e3 / 0.27e2 * eta ^ 4 - 0.9e1 - 0.14e2 / 0.27e2 * eta + 0.125e3 / 0.27e2 * eta ^ 2 - 0.19e2 / 0.3e1 * eta ^ 3) * ci2 ^ 2 + 0.43e2 / 0.54e2 * eta ^ 3 + 0.4e1 / 0.9e1 * eta + 0.5e1 / 0.18e2 * eta ^ 2 + eta ^ 5 / 0.6e1 + 0.31e2 / 0.54e2 * eta ^ 4 + 0.1e1))) + ((0.9e1 / 0.10e2 - 0.125e3 / 0.72e2 * eta - 0.11e2 / 0.360e3 * eta ^ 5 + 0.47e2 / 0.60e2 * eta ^ 4 + 0.83e2 / 0.90e2 * eta ^ 3 - 0.427e3 / 0.180e3 * eta ^ 2) * ci2 ^ 8 + (-0.83e2 / 0.72e2 * eta ^ 3 + 0.427e3 / 0.144e3 * eta ^ 2 + 0.625e3 / 0.288e3 * eta + 0.11e2 / 0.288e3 * eta ^ 5 - 0.47e2 / 0.48e2 * eta ^ 4 - 0.9e1 / 0.8e1) * ci2 ^ 6 + (0.3e1 / 0.10e2 - 0.11e2 / 0.1080e4 * eta ^ 5 + 0.593e3 / 0.2160e4 * eta ^ 4 + 0.857e3 / 0.2160e4 * eta ^ 3 - 0.73e2 / 0.144e3 * eta - 0.463e3 / 0.720e3 * eta ^ 2) * ci2 ^ 4 - eta * (0.1e1 + eta) * (eta ^ 2 + 0.88e2 * eta + 0.115e3) * ci2 ^ 2 / 0.4320e4 - eta * (0.1e1 + eta) * (eta ^ 2 + 0.88e2 * eta + 0.115e3) / 0.4320e4) * sin((h + 3 * f + 2 * g)) - 0.13e2 / 0.90e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.69e2 / 0.52e2 * eta ^ 2 - 0.93e2 / 0.26e2 * eta - 0.81e2 / 0.52e2) * ci2 ^ 6 + (0.3e1 / 0.26e2 * eta ^ 2 + 0.3e1 / 0.26e2 * eta) * ci2 ^ 2 + 0.3e1 / 0.26e2 * eta ^ 2 + 0.3e1 / 0.26e2 * eta) * sin((h + 3 * f + 4 * g)) + (0.1e1 + eta) * eta * Delta * ((eta ^ 2 - 0.4e1 * eta + 0.23e2) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 + 0.5e1 * eta - 0.115e3 / 0.4e1) * ci2 ^ 6 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.5e1 * eta + 0.177e3 / 0.20e2) * ci2 ^ 4 + (-eta / 0.5e1 - 0.1e1 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.1e1 / 0.5e1) * cos((h + 3 * f + 2 * g)) / 0.18e2 + 0.5e1 / 0.6e1 * (0.1e1 + eta) * eta * Delta * ((eta ^ 2 - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 + eta + 0.13e2 / 0.4e1) * ci2 ^ 6 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.25e2 * eta - 0.3e1 / 0.4e1) * ci2 ^ 4 + (-eta / 0.25e2 - 0.1e1 / 0.25e2) * ci2 ^ 2 - eta / 0.25e2 - 0.1e1 / 0.25e2) * cos((h + f + 2 * g)) - 0.13e2 / 0.90e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.69e2 / 0.52e2 * eta ^ 2 - 0.93e2 / 0.26e2 * eta - 0.81e2 / 0.52e2) * ci2 ^ 4 + 0.3e1 / 0.26e2 * eta ^ 2 + 0.3e1 / 0.26e2 * eta) * sin((-h + 3 * f + 4 * g)) - (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.17e2 / 0.20e2 * eta ^ 2 - 0.37e2 / 0.10e2 * eta + 0.27e2 / 0.20e2) * ci2 ^ 4 + eta ^ 2 / 0.30e2 + eta / 0.30e2) * sin((-h + 5 * f + 4 * g)) / 0.6e1) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * (-0.71e2 / 0.720e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.73e2 / 0.71e2 * eta ^ 2 - 0.359e3 / 0.71e2 * eta + 0.783e3 / 0.71e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.219e3 / 0.284e3 * eta ^ 2 + 0.1077e4 / 0.284e3 * eta - 0.2349e4 / 0.284e3) * ci2 ^ 4 + (0.29e2 / 0.284e3 * eta ^ 3 + 0.83e2 / 0.284e3 * eta ^ 2 - 0.21e2 / 0.284e3 * eta + 0.261e3 / 0.284e3) * ci2 ^ 2 - 0.4e1 / 0.71e2 * eta ^ 2 - 0.7e1 / 0.71e2 * eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-h + 2 * g + 4 * f)) + 0.73e2 / 0.2880e4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 4 - 0.224e3 / 0.73e2 * eta ^ 3 - 0.1002e4 / 0.73e2 * eta ^ 2 - 0.1440e4 / 0.73e2 * eta - 0.783e3 / 0.73e2) * ci2 ^ 4 + 0.24e2 / 0.73e2 * eta * (0.1e1 + eta) ^ 2) * sin((-h + 2 * f + 4 * g)) + 0.11e2 / 0.576e3 * ((eta ^ 4 - 0.32e2 / 0.165e3 * eta ^ 3 - 0.3266e4 / 0.165e3 * eta ^ 2 - 0.1504e4 / 0.165e3 * eta + 0.783e3 / 0.55e2) * ci2 ^ 4 + 0.8e1 / 0.165e3 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-h + 6 * f + 4 * g)) - 0.2e1 / 0.9e1 * ((eta - 0.1e1) * (eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * ci2 ^ 6 - 0.3e1 / 0.4e1 * (eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * (eta - 0.1e1) * ci2 ^ 4 + (eta ^ 4 / 0.10e2 + 0.3e1 / 0.16e2 * eta ^ 3 - 0.87e2 / 0.80e2 * eta ^ 2 - 0.47e2 / 0.80e2 * eta + 0.79e2 / 0.80e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 - 0.2e1) / 0.20e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * sin((-h + 2 * g + 2 * f)) + ((eta ^ 3 - 0.9e1 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.29e2) * ci2 ^ 4 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.8e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * eta * sin((-h + 4 * f + 4 * g)) / 0.45e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.41e2 / 0.6e1 * eta + 0.15e2 / 0.2e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.41e2 / 0.8e1 * eta - 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.43e2 / 0.72e2 * eta + 0.5e1 / 0.8e1) * sin((-h + 6 * f + 2 * g)) / 0.30e2 + ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + eta / 0.2e1 - 0.45e2 / 0.8e1) * (eta - 0.1e1) ^ 2 * sin((-h + 8 * f + 4 * g)) / 0.90e2 - ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.2e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.5e1 / 0.8e1 * eta + 0.25e2 / 0.8e1) * ci2 ^ 2 + 0.13e2 / 0.36e2 * eta ^ 2 + 0.7e1 / 0.36e2 * eta - 0.5e1 / 0.6e1) * ci2 ^ 4 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-h - 2 * g + 2 * f)) / 0.10e2 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * cos((-h + 2 * g + 4 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * sin((-h + 8 * f + 2 * g)) / 0.240e3 - 0.2e1 / 0.3e1 * (ci2 ^ 6 - 0.3e1 / 0.4e1 * ci2 ^ 4 - ci2 ^ 2 / 0.10e2 + 0.1e1 / 0.20e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * cos((-h + 2 * g + 2 * f)) + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 10 * f + 4 * g)) / 0.960e3 - ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta - 0.1e1) ^ 3 * sin((-h + 4 * f - 2 * g)) / 0.240e3 + ci2 ^ 6 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * f - 4 * g)) / 0.960e3 - 0.71e2 / 0.720e3 * ((eta ^ 3 + 0.73e2 / 0.71e2 * eta ^ 2 - 0.359e3 / 0.71e2 * eta + 0.783e3 / 0.71e2) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.365e3 / 0.284e3 * eta ^ 2 + 0.1795e4 / 0.284e3 * eta - 0.3915e4 / 0.284e3) * ci2 ^ 6 + (0.25e2 / 0.71e2 * eta ^ 3 + 0.39e2 / 0.71e2 * eta ^ 2 - 0.95e2 / 0.71e2 * eta + 0.261e3 / 0.71e2) * ci2 ^ 4 + (-0.4e1 / 0.71e2 * eta ^ 2 - 0.7e1 / 0.71e2 * eta) * ci2 ^ 2 - 0.4e1 / 0.71e2 * eta ^ 2 - 0.7e1 / 0.71e2 * eta) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 2 * g + 4 * f)) - ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.2e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.3e1 / 0.8e1 * eta + 0.15e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.5e1 / 0.72e2 * eta - 0.5e1 / 0.24e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((h - 2 * g + 2 * f)) / 0.10e2 - 0.2e1 / 0.9e1 * ((eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * (eta - 0.1e1) * ci2 ^ 8 - 0.5e1 / 0.4e1 * (eta - 0.1e1) * (eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * ci2 ^ 6 + (0.7e1 / 0.20e2 * eta ^ 4 + eta ^ 3 / 0.5e1 - 0.22e2 / 0.5e1 * eta ^ 2 - 0.6e1 / 0.5e1 * eta + 0.93e2 / 0.20e2) * ci2 ^ 4 - (0.1e1 + eta) * (eta ^ 2 - 0.2e1) * ci2 ^ 2 / 0.20e2 - (0.1e1 + eta) * (eta ^ 2 - 0.2e1) / 0.20e2) * eta * sin((h + 2 * g + 2 * f)) + 0.73e2 / 0.2880e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 4 - 0.224e3 / 0.73e2 * eta ^ 3 - 0.1002e4 / 0.73e2 * eta ^ 2 - 0.1440e4 / 0.73e2 * eta - 0.783e3 / 0.73e2) * ci2 ^ 6 + 0.24e2 / 0.73e2 * eta * (0.1e1 + eta) ^ 2 * ci2 ^ 2 + 0.24e2 / 0.73e2 * eta * (0.1e1 + eta) ^ 2) * sin((h + 2 * f + 4 * g)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * ((eta ^ 3 - 0.9e1 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.29e2) * ci2 ^ 6 + (eta ^ 2 / 0.4e1 - 0.5e1 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.8e1) * sin((h + 4 * f + 4 * g)) / 0.45e2 + 0.11e2 / 0.576e3 * ((eta ^ 4 - 0.32e2 / 0.165e3 * eta ^ 3 - 0.3266e4 / 0.165e3 * eta ^ 2 - 0.1504e4 / 0.165e3 * eta + 0.783e3 / 0.55e2) * ci2 ^ 6 + 0.8e1 / 0.165e3 * eta * (0.1e1 + eta) ^ 2 * ci2 ^ 2 + 0.8e1 / 0.165e3 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((h + 6 * f + 4 * g)) + ((eta ^ 2 + 0.41e2 / 0.6e1 * eta + 0.15e2 / 0.2e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.205e3 / 0.24e2 * eta - 0.75e2 / 0.8e1) * ci2 ^ 2 + 0.13e2 / 0.36e2 * eta ^ 2 + 0.83e2 / 0.36e2 * eta + 0.5e1 / 0.2e1) * ci2 ^ 4 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((h + 6 * f + 2 * g)) / 0.30e2 - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * sin((h + 4 * f - 2 * g)) / 0.240e3 - 0.2e1 / 0.3e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (ci2 ^ 6 - ci2 ^ 4 / 0.4e1 - ci2 ^ 2 / 0.10e2 - 0.1e1 / 0.20e2) * cos((h + 2 * g + 2 * f)) + (ci2 ^ 6 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + eta / 0.2e1 - 0.45e2 / 0.8e1) * (eta - 0.1e1) * sin((h + 8 * f + 4 * g)) / 0.90e2 - ci2 ^ 4 * (0.1e1 + eta) * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * eta * Delta * cos((h + 2 * g + 4 * f)) + ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((h + 2 * f - 4 * g)) / 0.960e3 - ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta - 0.1e1) ^ 2 * sin((h + 8 * f + 2 * g)) / 0.240e3 + ci2 ^ 6 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 10 * f + 4 * g)) / 0.960e3 + 0.7e1 / 0.720e3 * ((eta ^ 4 - 0.80e2 / 0.7e1 * eta ^ 3 - 0.1118e4 / 0.7e1 * eta ^ 2 - 0.440e3 / 0.7e1 * eta + 0.783e3 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 4 + 0.60e2 / 0.7e1 * eta ^ 3 + 0.1677e4 / 0.14e2 * eta ^ 2 + 0.330e3 / 0.7e1 * eta - 0.2349e4 / 0.28e2) * ci2 ^ 4 + (0.23e2 / 0.84e2 * eta ^ 4 + 0.4e1 * eta ^ 3 - 0.227e3 / 0.42e2 * eta ^ 2 - 0.44e2 / 0.21e2 * eta + 0.261e3 / 0.28e2) * ci2 ^ 2 - 0.4e1 / 0.3e1 * eta ^ 3 - 0.65e2 / 0.21e2 * eta ^ 2 - 0.37e2 / 0.21e2 * eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * g)) + 0.11e2 / 0.96e2 * ci2 ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 4 + 0.64e2 / 0.15e2 * eta ^ 3 - 0.1058e4 / 0.165e3 * eta ^ 2 + 0.32e2 / 0.15e2 * eta + 0.783e3 / 0.55e2) * ci2 ^ 4 + (-eta ^ 4 - 0.64e2 / 0.15e2 * eta ^ 3 + 0.1058e4 / 0.165e3 * eta ^ 2 - 0.32e2 / 0.15e2 * eta - 0.783e3 / 0.55e2) * ci2 ^ 2 + 0.13e2 / 0.165e3 * eta ^ 4 + 0.112e3 / 0.165e3 * eta ^ 3 + 0.2e1 / 0.15e2 * eta ^ 2 + 0.136e3 / 0.165e3 * eta + 0.87e2 / 0.55e2) * sin((-h + 2 * f)) + ((eta ^ 2 - 0.7e1 / 0.3e1 * eta - 0.45e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 + 0.7e1 / 0.3e1 * eta + 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.12e2 - 0.5e1 / 0.12e2 * eta - 0.5e1 / 0.8e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * sin((-h + 4 * f)) / 0.15e2 + (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.45e2 / 0.8e1) * ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-h + 4 * g)) / 0.90e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * cos((-h + 2 * g)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) ^ 2 * sin((-h + 6 * f)) / 0.160e3 + ((-eta ^ 3 / 0.9e1 - 0.559e3 / 0.360e3 * eta ^ 2 + 0.7e1 / 0.720e3 * eta ^ 4 - 0.11e2 / 0.18e2 * eta + 0.87e2 / 0.80e2) * ci2 ^ 8 + (0.5e1 / 0.36e2 * eta ^ 3 + 0.559e3 / 0.288e3 * eta ^ 2 - 0.7e1 / 0.576e3 * eta ^ 4 + 0.55e2 / 0.72e2 * eta - 0.87e2 / 0.64e2) * ci2 ^ 6 + (eta ^ 3 / 0.90e2 + 0.11e2 / 0.2160e4 * eta ^ 4 - 0.187e3 / 0.1080e4 * eta - 0.119e3 / 0.270e3 * eta ^ 2 + 0.29e2 / 0.80e2) * ci2 ^ 4 - 0.7e1 / 0.540e3 * (eta + 0.37e2 / 0.28e2) * (0.1e1 + eta) * eta * ci2 ^ 2 - 0.7e1 / 0.540e3 * eta * (eta + 0.37e2 / 0.28e2) * (0.1e1 + eta)) * sin((h + 2 * g)) + ci2 ^ 2 * (0.11e2 / 0.96e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 4 + 0.64e2 / 0.15e2 * eta ^ 3 - 0.1058e4 / 0.165e3 * eta ^ 2 + 0.32e2 / 0.15e2 * eta + 0.783e3 / 0.55e2) * ci2 ^ 4 + (-eta ^ 4 - 0.64e2 / 0.15e2 * eta ^ 3 + 0.1058e4 / 0.165e3 * eta ^ 2 - 0.32e2 / 0.15e2 * eta - 0.783e3 / 0.55e2) * ci2 ^ 2 + 0.13e2 / 0.165e3 * eta ^ 4 + 0.112e3 / 0.165e3 * eta ^ 3 + 0.2e1 / 0.15e2 * eta ^ 2 + 0.136e3 / 0.165e3 * eta + 0.87e2 / 0.55e2) * sin((h + 2 * f)) + (((eta ^ 2 - 0.7e1 / 0.3e1 * eta - 0.45e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 + 0.7e1 / 0.3e1 * eta + 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.12e2 - 0.5e1 / 0.12e2 * eta - 0.5e1 / 0.8e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * sin((h + 4 * f)) / 0.15e2 + (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) ^ 2 * sin((h + 6 * f)) / 0.160e3 + ci2 ^ 2 * ((eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.45e2 / 0.8e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((h + 4 * g)) / 0.90e2 + Delta * eta * cos((h + 2 * g)) * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2))) * (0.1e1 + eta))) * (eta - 0.1e1))) * J ^ 2 / a ^ 4 / eta ^ 9 / (0.1e1 + eta) ^ 2 -0.81e2 / 0.4e1 * ((ci2 ^ 2 * (-0.10e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sin((h - 2 * g + f)) - 0.23e2 / 0.108e3 * (eta + 0.41e2 / 0.23e2) * ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta + 0.3e1) * (eta - 0.1e1) * cos((h + 4 * g + f)) - ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((h - 4 * g + f)) / 0.12e2 + (((eta ^ 5 + 0.166e3 / 0.27e2 * eta ^ 4 + 0.19e2 / 0.3e1 * eta ^ 3 - 0.125e3 / 0.27e2 * eta ^ 2 + 0.14e2 / 0.27e2 * eta + 0.9e1) * ci2 ^ 4 + (-eta ^ 5 - 0.166e3 / 0.27e2 * eta ^ 4 - 0.9e1 - 0.14e2 / 0.27e2 * eta + 0.125e3 / 0.27e2 * eta ^ 2 - 0.19e2 / 0.3e1 * eta ^ 3) * ci2 ^ 2 + 0.43e2 / 0.54e2 * eta ^ 3 + 0.4e1 / 0.9e1 * eta + 0.5e1 / 0.18e2 * eta ^ 2 + eta ^ 5 / 0.6e1 + 0.31e2 / 0.54e2 * eta ^ 4 + 0.1e1) * cos((-h + f)) + 0.11e2 / 0.18e2 * ((eta ^ 3 - 0.13e2 / 0.3e1 * eta ^ 2 + 0.109e3 / 0.33e2 * eta + 0.123e3 / 0.11e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.3e1 * eta ^ 2 - 0.109e3 / 0.33e2 * eta - 0.123e3 / 0.11e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.2e1 / 0.11e2 * eta ^ 2 + 0.17e2 / 0.22e2 * eta + 0.41e2 / 0.33e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 3 * f)) - (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta + 0.3e1) * ci2 ^ 4 + (-eta - 0.3e1) * ci2 ^ 2 + eta / 0.6e1 + 0.1e1 / 0.3e1) * cos((h + 5 * f)) / 0.6e1 - ((eta ^ 5 + 0.166e3 / 0.27e2 * eta ^ 4 + 0.19e2 / 0.3e1 * eta ^ 3 - 0.125e3 / 0.27e2 * eta ^ 2 + 0.14e2 / 0.27e2 * eta + 0.9e1) * ci2 ^ 4 + (-eta ^ 5 - 0.166e3 / 0.27e2 * eta ^ 4 - 0.9e1 - 0.14e2 / 0.27e2 * eta + 0.125e3 / 0.27e2 * eta ^ 2 - 0.19e2 / 0.3e1 * eta ^ 3) * ci2 ^ 2 + 0.43e2 / 0.54e2 * eta ^ 3 + 0.4e1 / 0.9e1 * eta + 0.5e1 / 0.18e2 * eta ^ 2 + eta ^ 5 / 0.6e1 + 0.31e2 / 0.54e2 * eta ^ 4 + 0.1e1) * cos((h + f))) * (ci2 ^ 2 - 0.1e1 / 0.2e1)) + ((0.6e1 - 0.625e3 / 0.54e2 * eta - 0.11e2 / 0.54e2 * eta ^ 5 + 0.47e2 / 0.9e1 * eta ^ 4 + 0.166e3 / 0.27e2 * eta ^ 3 - 0.427e3 / 0.27e2 * eta ^ 2) * ci2 ^ 8 + (-0.415e3 / 0.54e2 * eta ^ 3 + 0.2135e4 / 0.108e3 * eta ^ 2 + 0.3125e4 / 0.216e3 * eta + 0.55e2 / 0.216e3 * eta ^ 5 - 0.235e3 / 0.36e2 * eta ^ 4 - 0.15e2 / 0.2e1) * ci2 ^ 6 + (0.2e1 - 0.11e2 / 0.162e3 * eta ^ 5 + 0.593e3 / 0.324e3 * eta ^ 4 + 0.857e3 / 0.324e3 * eta ^ 3 - 0.365e3 / 0.108e3 * eta - 0.463e3 / 0.108e3 * eta ^ 2) * ci2 ^ 4 - eta * (0.1e1 + eta) * (eta ^ 2 + 0.88e2 * eta + 0.115e3) * ci2 ^ 2 / 0.648e3 - eta * (0.1e1 + eta) * (eta ^ 2 + 0.88e2 * eta + 0.115e3) / 0.648e3) * cos((h + 3 * f + 2 * g)) + ((-0.6e1 - 0.17e2 / 0.2e1 * eta + 0.7e1 / 0.6e1 * eta ^ 5 + 0.65e2 / 0.9e1 * eta ^ 4 + 0.10e2 * eta ^ 3 + eta ^ 2) * ci2 ^ 8 + (-0.25e2 / 0.2e1 * eta ^ 3 - 0.5e1 / 0.4e1 * eta ^ 2 + 0.85e2 / 0.8e1 * eta - 0.35e2 / 0.24e2 * eta ^ 5 - 0.325e3 / 0.36e2 * eta ^ 4 + 0.15e2 / 0.2e1) * ci2 ^ 6 + (-0.2e1 + 0.7e1 / 0.18e2 * eta ^ 5 + 0.277e3 / 0.108e3 * eta ^ 4 + 0.365e3 / 0.108e3 * eta ^ 3 - 0.331e3 / 0.108e3 * eta - eta ^ 2 / 0.108e3) * ci2 ^ 4 - 0.5e1 / 0.216e3 * (eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.17e2 / 0.5e1) * (0.1e1 + eta) * eta * ci2 ^ 2 - 0.5e1 / 0.216e3 * (eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.17e2 / 0.5e1) * eta * (0.1e1 + eta)) * cos((h + f + 2 * g)) + 0.23e2 / 0.108e3 * (eta + 0.41e2 / 0.23e2) * ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta + 0.3e1) * (eta - 0.1e1) * cos((-h + 4 * g + f)) + (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (eta + 0.12e2) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((h + 3 * f - 2 * g)) / 0.36e2 + 0.10e2 / 0.9e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * eta * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * (eta - 0.1e1) * sin((-h - 2 * g + f)) + 0.10e2 / 0.27e2 * ((eta ^ 2 - 0.4e1 * eta + 0.23e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.3e1 * eta - 0.69e2 / 0.4e1) * ci2 ^ 4 + (eta ^ 2 / 0.10e2 + 0.2e1 / 0.5e1 * eta + 0.31e2 / 0.10e2) * ci2 ^ 2 - eta / 0.5e1 - 0.1e1 / 0.5e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sin((-h + 3 * f + 2 * g)) + 0.10e2 / 0.9e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * eta * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * (eta - 0.1e1) * sin((h + 5 * f + 2 * g)) - 0.73e2 / 0.108e3 * ci2 ^ 6 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.34e2 / 0.73e2 * eta - 0.123e3 / 0.73e2) * (eta - 0.1e1) * cos((h + 4 * g + 7 * f)) + 0.50e2 / 0.9e1 * ((eta ^ 2 - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.3e1 / 0.5e1 * eta + 0.39e2 / 0.20e2) * ci2 ^ 4 + (eta ^ 2 / 0.10e2 + 0.2e1 / 0.25e2 * eta - 0.1e1 / 0.10e2) * ci2 ^ 2 - eta / 0.25e2 - 0.1e1 / 0.25e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sin((-h + f + 2 * g)) + 0.73e2 / 0.108e3 * ci2 ^ 4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.34e2 / 0.73e2 * eta - 0.123e3 / 0.73e2) * (eta - 0.1e1) * cos((-h + 4 * g + 7 * f)) - 0.11e2 / 0.18e2 * ci2 ^ 2 * ((eta ^ 3 - 0.13e2 / 0.3e1 * eta ^ 2 + 0.109e3 / 0.33e2 * eta + 0.123e3 / 0.11e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.3e1 * eta ^ 2 - 0.109e3 / 0.33e2 * eta - 0.123e3 / 0.11e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.2e1 / 0.11e2 * eta ^ 2 + 0.17e2 / 0.22e2 * eta + 0.41e2 / 0.33e2) * (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * cos((-h + 3 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.3e1) * ci2 ^ 4 + (-eta - 0.3e1) * ci2 ^ 2 + eta / 0.6e1 + 0.1e1 / 0.3e1) * cos((-h + 5 * f)) / 0.6e1 - 0.13e2 / 0.36e2 * ((eta ^ 3 - 0.152e3 / 0.13e2 * eta ^ 2 - 0.97e2 / 0.13e2 * eta + 0.164e3 / 0.13e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 3 + 0.114e3 / 0.13e2 * eta ^ 2 + 0.291e3 / 0.52e2 * eta - 0.123e3 / 0.13e2) * ci2 ^ 4 + (eta ^ 3 / 0.12e2 - 0.49e2 / 0.39e2 * eta ^ 2 - 0.47e2 / 0.52e2 * eta + 0.41e2 / 0.39e2) * ci2 ^ 2 - eta ^ 2 / 0.78e2 - eta / 0.78e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((h - 2 * g + f)) + (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 + 0.31e2 / 0.9e1 * eta + 0.164e3 / 0.9e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.31e2 / 0.12e2 * eta - 0.41e2 / 0.3e1) * ci2 ^ 4 + (eta ^ 2 / 0.12e2 + 0.17e2 / 0.36e2 * eta + 0.41e2 / 0.27e2) * ci2 ^ 2 - eta / 0.54e2) * cos((-h + 5 * f + 2 * g)) / 0.4e1 + 0.5e1 / 0.36e2 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (eta + 0.12e2 / 0.5e1) * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((h + 2 * g + 7 * f)) - 0.10e2 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sin((-h + 5 * f + 2 * g)) - 0.5e1 / 0.36e2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.12e2 / 0.5e1) * cos((-h + 2 * g + 7 * f)) - ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta + 0.12e2) * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((-h + 3 * f - 2 * g)) / 0.36e2 + ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 9 * f + 4 * g)) / 0.12e2 + ci2 ^ 6 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h - 4 * g + f)) / 0.12e2 - ci2 ^ 6 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 9 * f + 4 * g)) / 0.12e2 - 0.7e1 / 0.6e1 * ((eta ^ 5 + 0.130e3 / 0.21e2 * eta ^ 4 + 0.60e2 / 0.7e1 * eta ^ 3 + 0.6e1 / 0.7e1 * eta ^ 2 - 0.51e2 / 0.7e1 * eta - 0.36e2 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 5 - 0.65e2 / 0.14e2 * eta ^ 4 - 0.45e2 / 0.7e1 * eta ^ 3 - 0.9e1 / 0.14e2 * eta ^ 2 + 0.153e3 / 0.28e2 * eta + 0.27e2 / 0.7e1) * ci2 ^ 4 + (eta ^ 5 / 0.12e2 + 0.41e2 / 0.63e2 * eta ^ 4 + 0.95e2 / 0.126e3 * eta ^ 3 - 0.2e1 / 0.9e1 * eta ^ 2 - 0.29e2 / 0.36e2 * eta - 0.3e1 / 0.7e1) * ci2 ^ 2 - 0.5e1 / 0.252e3 * (eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.17e2 / 0.5e1) * eta * (0.1e1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + f + 2 * g)) - (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.31e2 / 0.9e1 * eta + 0.164e3 / 0.9e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.155e3 / 0.36e2 * eta - 0.205e3 / 0.9e1) * ci2 ^ 6 + (eta ^ 2 / 0.3e1 + 0.4e1 / 0.3e1 * eta + 0.164e3 / 0.27e2) * ci2 ^ 4 - ci2 ^ 2 * eta / 0.54e2 - eta / 0.54e2) * (eta - 0.1e1) * cos((h + 5 * f + 2 * g)) / 0.4e1 + 0.11e2 / 0.54e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.282e3 / 0.11e2 * eta ^ 4 - 0.332e3 / 0.11e2 * eta ^ 3 + 0.854e3 / 0.11e2 * eta ^ 2 + 0.625e3 / 0.11e2 * eta - 0.324e3 / 0.11e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 5 + 0.423e3 / 0.22e2 * eta ^ 4 + 0.249e3 / 0.11e2 * eta ^ 3 - 0.1281e4 / 0.22e2 * eta ^ 2 - 0.1875e4 / 0.44e2 * eta + 0.243e3 / 0.11e2) * ci2 ^ 4 + (eta ^ 5 / 0.12e2 - 0.85e2 / 0.33e2 * eta ^ 4 - 0.359e3 / 0.66e2 * eta ^ 3 + 0.18e2 / 0.11e2 * eta ^ 2 + 0.105e3 / 0.44e2 * eta - 0.27e2 / 0.11e2) * ci2 ^ 2 + eta * (0.1e1 + eta) * (eta ^ 2 + 0.88e2 * eta + 0.115e3) / 0.132e3) * cos((-h + 3 * f + 2 * g)) + 0.13e2 / 0.36e2 * (0.1e1 + eta) * ((eta ^ 3 - 0.152e3 / 0.13e2 * eta ^ 2 - 0.97e2 / 0.13e2 * eta + 0.164e3 / 0.13e2) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 3 + 0.190e3 / 0.13e2 * eta ^ 2 + 0.485e3 / 0.52e2 * eta - 0.205e3 / 0.13e2) * ci2 ^ 6 + (eta ^ 3 / 0.3e1 - 0.163e3 / 0.39e2 * eta ^ 2 - 0.36e2 / 0.13e2 * eta + 0.164e3 / 0.39e2) * ci2 ^ 4 + (-eta ^ 2 / 0.78e2 - eta / 0.78e2) * ci2 ^ 2 - eta ^ 2 / 0.78e2 - eta / 0.78e2) * (eta - 0.1e1) * cos((-h - 2 * g + f)) - 0.10e2 / 0.9e1 * ((eta ^ 3 - 0.17e2 / 0.20e2 * eta ^ 2 - 0.37e2 / 0.10e2 * eta + 0.27e2 / 0.20e2) * ci2 ^ 6 + (eta ^ 2 / 0.30e2 + eta / 0.30e2) * ci2 ^ 2 + eta ^ 2 / 0.30e2 + eta / 0.30e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 5 * f + 4 * g)) + 0.10e2 / 0.9e1 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.17e2 / 0.20e2 * eta ^ 2 - 0.37e2 / 0.10e2 * eta + 0.27e2 / 0.20e2) * ci2 ^ 4 + eta ^ 2 / 0.30e2 + eta / 0.30e2) * cos((-h + 5 * f + 4 * g)) - 0.50e2 / 0.9e1 * (0.1e1 + eta) * eta * Delta * ((eta ^ 2 - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 + eta + 0.13e2 / 0.4e1) * ci2 ^ 6 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.25e2 * eta - 0.3e1 / 0.4e1) * ci2 ^ 4 + (-eta / 0.25e2 - 0.1e1 / 0.25e2) * ci2 ^ 2 - eta / 0.25e2 - 0.1e1 / 0.25e2) * sin((h + f + 2 * g)) - 0.10e2 / 0.27e2 * ((eta ^ 2 - 0.4e1 * eta + 0.23e2) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 + 0.5e1 * eta - 0.115e3 / 0.4e1) * ci2 ^ 6 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.5e1 * eta + 0.177e3 / 0.20e2) * ci2 ^ 4 + (-eta / 0.5e1 - 0.1e1 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.1e1 / 0.5e1) * (0.1e1 + eta) * eta * Delta * sin((h + 3 * f + 2 * g)) - 0.26e2 / 0.27e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.69e2 / 0.52e2 * eta ^ 2 - 0.93e2 / 0.26e2 * eta - 0.81e2 / 0.52e2) * ci2 ^ 6 + (0.3e1 / 0.26e2 * eta ^ 2 + 0.3e1 / 0.26e2 * eta) * ci2 ^ 2 + 0.3e1 / 0.26e2 * eta ^ 2 + 0.3e1 / 0.26e2 * eta) * cos((h + 3 * f + 4 * g)) + 0.26e2 / 0.27e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.69e2 / 0.52e2 * eta ^ 2 - 0.93e2 / 0.26e2 * eta - 0.81e2 / 0.52e2) * ci2 ^ 4 + 0.3e1 / 0.26e2 * eta ^ 2 + 0.3e1 / 0.26e2 * eta) * cos((-h + 3 * f + 4 * g))) * sqrt(-eta ^ 2 + 0.1e1) - 0.55e2 / 0.72e2 * (0.1e1 + eta) * (-0.142e3 / 0.165e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.73e2 / 0.71e2 * eta ^ 2 - 0.359e3 / 0.71e2 * eta + 0.783e3 / 0.71e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.219e3 / 0.284e3 * eta ^ 2 + 0.1077e4 / 0.284e3 * eta - 0.2349e4 / 0.284e3) * ci2 ^ 4 + (0.29e2 / 0.284e3 * eta ^ 3 + 0.83e2 / 0.284e3 * eta ^ 2 - 0.21e2 / 0.284e3 * eta + 0.261e3 / 0.284e3) * ci2 ^ 2 - 0.4e1 / 0.71e2 * eta ^ 2 - 0.7e1 / 0.71e2 * eta) * (eta - 0.1e1) * cos((-h + 2 * g + 4 * f)) + 0.73e2 / 0.330e3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 4 - 0.224e3 / 0.73e2 * eta ^ 3 - 0.1002e4 / 0.73e2 * eta ^ 2 - 0.1440e4 / 0.73e2 * eta - 0.783e3 / 0.73e2) * ci2 ^ 4 + 0.24e2 / 0.73e2 * eta * (0.1e1 + eta) ^ 2) * cos((-h + 2 * f + 4 * g)) + (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 4 - 0.32e2 / 0.165e3 * eta ^ 3 - 0.3266e4 / 0.165e3 * eta ^ 2 - 0.1504e4 / 0.165e3 * eta + 0.783e3 / 0.55e2) * ci2 ^ 4 + 0.8e1 / 0.165e3 * eta * (0.1e1 + eta) ^ 2) * cos((-h + 6 * f + 4 * g)) / 0.6e1 - 0.64e2 / 0.33e2 * ((eta - 0.1e1) * (eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * ci2 ^ 6 - 0.3e1 / 0.4e1 * (eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * (eta - 0.1e1) * ci2 ^ 4 + (eta ^ 4 / 0.10e2 + 0.3e1 / 0.16e2 * eta ^ 3 - 0.87e2 / 0.80e2 * eta ^ 2 - 0.47e2 / 0.80e2 * eta + 0.79e2 / 0.80e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 - 0.2e1) / 0.20e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * cos((-h + 2 * g + 2 * f)) + 0.32e2 / 0.165e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * eta * ((eta ^ 3 - 0.9e1 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.29e2) * ci2 ^ 4 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.8e1) * cos((-h + 4 * f + 4 * g)) + 0.16e2 / 0.55e2 * ((eta ^ 2 + 0.41e2 / 0.6e1 * eta + 0.15e2 / 0.2e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.41e2 / 0.8e1 * eta - 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.43e2 / 0.72e2 * eta + 0.5e1 / 0.8e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((-h + 6 * f + 2 * g)) + 0.16e2 / 0.165e3 * ci2 ^ 4 * (eta ^ 2 + eta / 0.2e1 - 0.45e2 / 0.8e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-h + 8 * f + 4 * g)) - 0.48e2 / 0.55e2 * ci2 ^ 4 * (0.1e1 + eta) * ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.2e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.5e1 / 0.8e1 * eta + 0.25e2 / 0.8e1) * ci2 ^ 2 + 0.13e2 / 0.36e2 * eta ^ 2 + 0.7e1 / 0.36e2 * eta - 0.5e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * cos((-h - 2 * g + 2 * f)) - 0.2e1 / 0.55e2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((-h + 8 * f + 2 * g)) + 0.96e2 / 0.11e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sin((-h + 2 * g + 4 * f)) + 0.64e2 / 0.11e2 * (0.1e1 + eta) * (ci2 ^ 6 - 0.3e1 / 0.4e1 * ci2 ^ 4 - ci2 ^ 2 / 0.10e2 + 0.1e1 / 0.20e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sin((-h + 2 * g + 2 * f)) + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 10 * f + 4 * g)) / 0.110e3 - 0.2e1 / 0.55e2 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((-h + 4 * f - 2 * g)) + ci2 ^ 6 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * f - 4 * g)) / 0.110e3 + 0.142e3 / 0.165e3 * ((eta ^ 3 + 0.73e2 / 0.71e2 * eta ^ 2 - 0.359e3 / 0.71e2 * eta + 0.783e3 / 0.71e2) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.365e3 / 0.284e3 * eta ^ 2 + 0.1795e4 / 0.284e3 * eta - 0.3915e4 / 0.284e3) * ci2 ^ 6 + (0.25e2 / 0.71e2 * eta ^ 3 + 0.39e2 / 0.71e2 * eta ^ 2 - 0.95e2 / 0.71e2 * eta + 0.261e3 / 0.71e2) * ci2 ^ 4 + (-0.4e1 / 0.71e2 * eta ^ 2 - 0.7e1 / 0.71e2 * eta) * ci2 ^ 2 - 0.4e1 / 0.71e2 * eta ^ 2 - 0.7e1 / 0.71e2 * eta) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 2 * g + 4 * f)) + 0.48e2 / 0.55e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.2e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.3e1 / 0.8e1 * eta + 0.15e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.5e1 / 0.72e2 * eta - 0.5e1 / 0.24e2) * cos((h - 2 * g + 2 * f)) + 0.64e2 / 0.33e2 * ((eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * (eta - 0.1e1) * ci2 ^ 8 - 0.5e1 / 0.4e1 * (eta - 0.1e1) * (eta ^ 3 + 0.21e2 / 0.20e2 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.293e3 / 0.20e2) * ci2 ^ 6 + (0.7e1 / 0.20e2 * eta ^ 4 + eta ^ 3 / 0.5e1 - 0.22e2 / 0.5e1 * eta ^ 2 - 0.6e1 / 0.5e1 * eta + 0.93e2 / 0.20e2) * ci2 ^ 4 - (0.1e1 + eta) * (eta ^ 2 - 0.2e1) * ci2 ^ 2 / 0.20e2 - (0.1e1 + eta) * (eta ^ 2 - 0.2e1) / 0.20e2) * eta * cos((h + 2 * g + 2 * f)) - 0.73e2 / 0.330e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.224e3 / 0.73e2 * eta ^ 3 - 0.1002e4 / 0.73e2 * eta ^ 2 - 0.1440e4 / 0.73e2 * eta - 0.783e3 / 0.73e2) * ci2 ^ 6 + 0.24e2 / 0.73e2 * eta * (0.1e1 + eta) ^ 2 * ci2 ^ 2 + 0.24e2 / 0.73e2 * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * cos((h + 2 * f + 4 * g)) - 0.32e2 / 0.165e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * ((eta ^ 3 - 0.9e1 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.29e2) * ci2 ^ 6 + (eta ^ 2 / 0.4e1 - 0.5e1 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.8e1) * cos((h + 4 * f + 4 * g)) - ((eta ^ 4 - 0.32e2 / 0.165e3 * eta ^ 3 - 0.3266e4 / 0.165e3 * eta ^ 2 - 0.1504e4 / 0.165e3 * eta + 0.783e3 / 0.55e2) * ci2 ^ 6 + 0.8e1 / 0.165e3 * eta * (0.1e1 + eta) ^ 2 * ci2 ^ 2 + 0.8e1 / 0.165e3 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((h + 6 * f + 4 * g)) / 0.6e1 - 0.16e2 / 0.55e2 * ci2 ^ 4 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.41e2 / 0.6e1 * eta + 0.15e2 / 0.2e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.205e3 / 0.24e2 * eta - 0.75e2 / 0.8e1) * ci2 ^ 2 + 0.13e2 / 0.36e2 * eta ^ 2 + 0.83e2 / 0.36e2 * eta + 0.5e1 / 0.2e1) * cos((h + 6 * f + 2 * g)) + 0.2e1 / 0.55e2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((h + 4 * f - 2 * g)) - 0.64e2 / 0.11e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (ci2 ^ 6 - ci2 ^ 4 / 0.4e1 - ci2 ^ 2 / 0.10e2 - 0.1e1 / 0.20e2) * sin((h + 2 * g + 2 * f)) + (eta - 0.1e1) * (-0.16e2 / 0.165e3 * ci2 ^ 6 * (eta ^ 2 + eta / 0.2e1 - 0.45e2 / 0.8e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((h + 8 * f + 4 * g)) - ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((h + 2 * f - 4 * g)) / 0.110e3 + 0.2e1 / 0.55e2 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((h + 8 * f + 2 * g)) - 0.96e2 / 0.11e2 * ci2 ^ 4 * (0.1e1 + eta) * eta * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * sin((h + 2 * g + 4 * f)) - ci2 ^ 6 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 10 * f + 4 * g)) / 0.110e3 + 0.14e2 / 0.165e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.80e2 / 0.7e1 * eta ^ 3 - 0.1118e4 / 0.7e1 * eta ^ 2 - 0.440e3 / 0.7e1 * eta + 0.783e3 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 4 + 0.60e2 / 0.7e1 * eta ^ 3 + 0.1677e4 / 0.14e2 * eta ^ 2 + 0.330e3 / 0.7e1 * eta - 0.2349e4 / 0.28e2) * ci2 ^ 4 + (0.23e2 / 0.84e2 * eta ^ 4 + 0.4e1 * eta ^ 3 - 0.227e3 / 0.42e2 * eta ^ 2 - 0.44e2 / 0.21e2 * eta + 0.261e3 / 0.28e2) * ci2 ^ 2 - 0.4e1 / 0.3e1 * eta ^ 3 - 0.65e2 / 0.21e2 * eta ^ 2 - 0.37e2 / 0.21e2 * eta) * cos((-h + 2 * g)) + ci2 ^ 2 * ((eta ^ 4 + 0.64e2 / 0.15e2 * eta ^ 3 - 0.1058e4 / 0.165e3 * eta ^ 2 + 0.32e2 / 0.15e2 * eta + 0.783e3 / 0.55e2) * ci2 ^ 4 + (-eta ^ 4 - 0.64e2 / 0.15e2 * eta ^ 3 + 0.1058e4 / 0.165e3 * eta ^ 2 - 0.32e2 / 0.15e2 * eta - 0.783e3 / 0.55e2) * ci2 ^ 2 + 0.13e2 / 0.165e3 * eta ^ 4 + 0.112e3 / 0.165e3 * eta ^ 3 + 0.2e1 / 0.15e2 * eta ^ 2 + 0.136e3 / 0.165e3 * eta + 0.87e2 / 0.55e2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-h + 2 * f)) + 0.32e2 / 0.55e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2 - 0.7e1 / 0.3e1 * eta - 0.45e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 + 0.7e1 / 0.3e1 * eta + 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.12e2 - 0.5e1 / 0.12e2 * eta - 0.5e1 / 0.8e1) * (eta - 0.1e1) * cos((-h + 4 * f)) + 0.16e2 / 0.165e3 * ci2 ^ 4 * (0.1e1 + eta) * (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.45e2 / 0.8e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((-h + 4 * g)) + 0.3e1 / 0.55e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) ^ 2 * cos((-h + 6 * f)) - 0.96e2 / 0.11e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sin((-h + 2 * g)) + ((0.16e2 / 0.3e1 * eta - 0.14e2 / 0.165e3 * eta ^ 4 + 0.2236e4 / 0.165e3 * eta ^ 2 + 0.32e2 / 0.33e2 * eta ^ 3 - 0.522e3 / 0.55e2) * ci2 ^ 8 + (-0.20e2 / 0.3e1 * eta + 0.7e1 / 0.66e2 * eta ^ 4 - 0.40e2 / 0.33e2 * eta ^ 3 + 0.261e3 / 0.22e2 - 0.559e3 / 0.33e2 * eta ^ 2) * ci2 ^ 6 + (0.68e2 / 0.45e2 * eta - 0.16e2 / 0.165e3 * eta ^ 3 - 0.174e3 / 0.55e2 - 0.2e1 / 0.45e2 * eta ^ 4 + 0.1904e4 / 0.495e3 * eta ^ 2) * ci2 ^ 4 + (0.26e2 / 0.99e2 * eta ^ 2 + 0.56e2 / 0.495e3 * eta ^ 3 + 0.74e2 / 0.495e3 * eta) * ci2 ^ 2 + 0.26e2 / 0.99e2 * eta ^ 2 + 0.56e2 / 0.495e3 * eta ^ 3 + 0.74e2 / 0.495e3 * eta) * cos((h + 2 * g)) - (((eta ^ 4 + 0.64e2 / 0.15e2 * eta ^ 3 - 0.1058e4 / 0.165e3 * eta ^ 2 + 0.32e2 / 0.15e2 * eta + 0.783e3 / 0.55e2) * ci2 ^ 4 + (-eta ^ 4 - 0.64e2 / 0.15e2 * eta ^ 3 + 0.1058e4 / 0.165e3 * eta ^ 2 - 0.32e2 / 0.15e2 * eta - 0.783e3 / 0.55e2) * ci2 ^ 2 + 0.13e2 / 0.165e3 * eta ^ 4 + 0.112e3 / 0.165e3 * eta ^ 3 + 0.2e1 / 0.15e2 * eta ^ 2 + 0.136e3 / 0.165e3 * eta + 0.87e2 / 0.55e2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((h + 2 * f)) + 0.32e2 / 0.55e2 * (0.1e1 + eta) * ((ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2 - 0.7e1 / 0.3e1 * eta - 0.45e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 + 0.7e1 / 0.3e1 * eta + 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.12e2 - 0.5e1 / 0.12e2 * eta - 0.5e1 / 0.8e1) * (eta - 0.1e1) * cos((h + 4 * f)) + 0.3e1 / 0.32e2 * (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) ^ 2 * cos((h + 6 * f)) + ci2 ^ 2 * (ci2 ^ 2 * (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.45e2 / 0.8e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((h + 4 * g)) - 0.90e2 * eta * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * sin((h + 2 * g))) / 0.6e1)) * ci2 ^ 2))) * ci2 * R__e ^ 4 * sqrt(-ci2 ^ 2 + 0.1e1) * J ^ 2 / a ^ 4 / eta ^ 9 / (0.1e1 + eta) ^ 2 -0.135e3 / 0.2e1 * R__e ^ 4 * J ^ 2 * (0.5e1 / 0.96e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * Delta * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 7 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * Delta * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 3 * f)) / 0.96e2 + 0.103e3 / 0.2880e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.875e3 / 0.103e3 * eta ^ 4 + 0.564e3 / 0.103e3 * eta ^ 3 - 0.5242e4 / 0.103e3 * eta ^ 2 - 0.9835e4 / 0.103e3 * eta - 0.5121e4 / 0.103e3) * ci2 ^ 6 + (-eta ^ 5 - 0.875e3 / 0.103e3 * eta ^ 4 - 0.564e3 / 0.103e3 * eta ^ 3 + 0.5242e4 / 0.103e3 * eta ^ 2 + 0.9835e4 / 0.103e3 * eta + 0.5121e4 / 0.103e3) * ci2 ^ 4 + (0.143e3 / 0.618e3 * eta ^ 5 + 0.739e3 / 0.618e3 * eta ^ 4 - 0.254e3 / 0.309e3 * eta ^ 3 - 0.3433e4 / 0.309e3 * eta ^ 2 - 0.3521e4 / 0.206e3 * eta - 0.1707e4 / 0.206e3) * ci2 ^ 2 + 0.16e2 / 0.103e3 * (eta + 0.19e2 / 0.8e1) * (0.1e1 + eta) ^ 2 * eta) * sin((3 * g + h + 6 * f)) - 0.167e3 / 0.960e3 * ((eta ^ 4 + 0.206e3 / 0.167e3 * eta ^ 3 - 0.762e3 / 0.167e3 * eta ^ 2 - 0.516e3 / 0.167e3 * eta + 0.381e3 / 0.167e3) * ci2 ^ 6 + (-eta ^ 4 - 0.206e3 / 0.167e3 * eta ^ 3 + 0.762e3 / 0.167e3 * eta ^ 2 + 0.516e3 / 0.167e3 * eta - 0.381e3 / 0.167e3) * ci2 ^ 4 + (0.223e3 / 0.1002e4 * eta ^ 4 + 0.151e3 / 0.501e3 * eta ^ 3 - 0.135e3 / 0.167e3 * eta ^ 2 - 0.302e3 / 0.501e3 * eta + 0.127e3 / 0.334e3) * ci2 ^ 2 - 0.2e1 / 0.501e3 * eta * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + 2 * f)) + 0.253e3 / 0.11520e5 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 4 + 0.1139e4 / 0.253e3 * eta ^ 3 + 0.3177e4 / 0.253e3 * eta ^ 2 + 0.2705e4 / 0.253e3 * eta + 0.846e3 / 0.253e3) * ci2 ^ 4 - 0.24e2 / 0.253e3 * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * sin((5 * g + h)) + 0.107e3 / 0.11520e5 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 4 - 0.159e3 / 0.107e3 * eta ^ 3 - 0.4341e4 / 0.107e3 * eta ^ 2 - 0.693e3 / 0.107e3 * eta + 0.7110e4 / 0.107e3) * ci2 ^ 4 + 0.8e1 / 0.107e3 * eta * (0.1e1 + eta) ^ 2) * sin((3 * g - h + 8 * f)) - 0.13e2 / 0.16e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * ((eta ^ 5 - 0.53e2 / 0.39e2 * eta ^ 4 - 0.212e3 / 0.39e2 * eta ^ 3 + 0.80e2 / 0.39e2 * eta ^ 2 + 0.173e3 / 0.39e2 * eta - 0.43e2 / 0.39e2) * ci2 ^ 6 + (-eta ^ 5 + 0.53e2 / 0.39e2 * eta ^ 4 + 0.212e3 / 0.39e2 * eta ^ 3 - 0.80e2 / 0.39e2 * eta ^ 2 - 0.173e3 / 0.39e2 * eta + 0.43e2 / 0.39e2) * ci2 ^ 4 + (eta ^ 5 / 0.5e1 + 0.23e2 / 0.195e3 * eta ^ 4 - 0.148e3 / 0.195e3 * eta ^ 3 - 0.8e1 / 0.65e2 * eta ^ 2 + 0.47e2 / 0.65e2 * eta + 0.17e2 / 0.195e3) * ci2 ^ 2 - 0.38e2 / 0.195e3 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * cos((g - h + f)) + 0.7e1 / 0.2880e4 * ((eta ^ 4 + 0.236e3 / 0.7e1 * eta ^ 3 - 0.556e3 / 0.7e1 * eta ^ 2 - 0.5746e4 / 0.7e1 * eta - 0.5121e4 / 0.7e1) * ci2 ^ 6 + (-eta ^ 4 - 0.236e3 / 0.7e1 * eta ^ 3 + 0.556e3 / 0.7e1 * eta ^ 2 + 0.5746e4 / 0.7e1 * eta + 0.5121e4 / 0.7e1) * ci2 ^ 4 + (0.5e1 / 0.14e2 * eta ^ 4 + 0.10e2 / 0.7e1 * eta ^ 3 - 0.734e3 / 0.21e2 * eta ^ 2 - 0.1079e4 / 0.7e1 * eta - 0.1707e4 / 0.14e2) * ci2 ^ 2 + 0.16e2 / 0.7e1 * eta ^ 3 + 0.54e2 / 0.7e1 * eta ^ 2 + 0.38e2 / 0.7e1 * eta) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - h + 6 * f)) - 0.71e2 / 0.960e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 4 - 0.30e2 / 0.71e2 * eta ^ 3 - 0.654e3 / 0.71e2 * eta ^ 2 + 0.56e2 / 0.71e2 * eta + 0.381e3 / 0.71e2) * ci2 ^ 6 + (-eta ^ 4 + 0.30e2 / 0.71e2 * eta ^ 3 + 0.654e3 / 0.71e2 * eta ^ 2 - 0.56e2 / 0.71e2 * eta - 0.381e3 / 0.71e2) * ci2 ^ 4 + (0.95e2 / 0.426e3 * eta ^ 4 - 0.5e1 / 0.71e2 * eta ^ 3 - 0.391e3 / 0.213e3 * eta ^ 2 - 0.16e2 / 0.213e3 * eta + 0.127e3 / 0.142e3) * ci2 ^ 2 - 0.2e1 / 0.213e3 * eta * (0.1e1 + eta)) * sin((-g + h + 2 * f)) + ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 4 * sin((3 * g - h + 12 * f)) / 0.1536e4 - (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 - 0.170e3 / 0.3e1 * eta ^ 4 - 0.274e3 * eta ^ 3 - 0.264e3 * eta ^ 2 - 0.461e3 / 0.3e1 * eta - 0.282e3) * ci2 ^ 4 + 0.8e1 * eta * (0.1e1 + eta) ^ 3) * sin((3 * g - h)) / 0.3840e4 + 0.91e2 / 0.11520e5 * (eta ^ 3 + 0.15e2 / 0.13e2 * eta ^ 2 - 0.97e2 / 0.13e2 * eta - 0.729e3 / 0.91e2) * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((5 * g + h + 10 * f)) + 0.5e1 / 0.12e2 * (0.1e1 + eta) * ((eta ^ 3 - 0.4e1 * eta ^ 2 - 0.47e2 / 0.5e1 * eta + 0.2e1 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 + 0.4e1 * eta ^ 2 + 0.47e2 / 0.5e1 * eta - 0.2e1 / 0.5e1) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 + 0.4e1 / 0.5e1 * eta ^ 2 + eta / 0.5e1 + 0.22e2 / 0.25e2) * ci2 ^ 2 - 0.4e1 / 0.5e1 * eta ^ 2 - 0.26e2 / 0.25e2 * eta - 0.2e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * cos((3 * g + h + 2 * f)) - 0.9e1 / 0.32e2 * ((eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.7e1 / 0.27e2) * ci2 ^ 6 + (-eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.7e1 / 0.27e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 + 0.22e2 / 0.135e3 * eta - 0.1e1 / 0.135e3) * ci2 ^ 2 + 0.4e1 / 0.135e3 * eta + 0.4e1 / 0.135e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 4 * sin((-3 * g - h + 6 * f)) / 0.960e3 + 0.31e2 / 0.96e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.147e3 / 0.31e2 * eta - 0.149e3 / 0.31e2) * ci2 ^ 6 + (-eta ^ 3 - 0.9e1 / 0.31e2 * eta ^ 2 + 0.147e3 / 0.31e2 * eta + 0.149e3 / 0.31e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 + eta ^ 2 / 0.155e3 - 0.163e3 / 0.155e3 * eta - 0.157e3 / 0.155e3) * ci2 ^ 2 + 0.4e1 / 0.155e3 * (0.1e1 + eta) ^ 2) * eta * Delta * (eta - 0.1e1) * cos((3 * g + h + 5 * f)) - 0.19e2 / 0.960e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.6e1 / 0.19e2 * eta - 0.72e2 / 0.19e2) * ci2 ^ 4 + (-eta ^ 2 - 0.6e1 / 0.19e2 * eta + 0.72e2 / 0.19e2) * ci2 ^ 2 + 0.23e2 / 0.114e3 * eta ^ 2 + 0.5e1 / 0.57e2 * eta - 0.12e2 / 0.19e2) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 4 * f)) - ((eta ^ 2 - 0.24e2 / 0.5e1) * ci2 ^ 4 + (-eta ^ 2 + 0.24e2 / 0.5e1) * ci2 ^ 2 + 0.19e2 / 0.90e2 * eta ^ 2 + 0.2e1 / 0.45e2 * eta - 0.4e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-g + h + 4 * f)) / 0.64e2 + 0.1171e4 / 0.3840e4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 + 0.1033e4 / 0.1171e4 * eta ^ 4 - 0.4998e4 / 0.1171e4 * eta ^ 3 - 0.20302e5 / 0.3513e4 * eta ^ 2 + 0.2441e4 / 0.3513e4 * eta + 0.4065e4 / 0.1171e4) * ci2 ^ 4 + 0.24e2 / 0.1171e4 * eta * (0.1e1 + eta) ^ 3) * (eta - 0.1e1) * sin((5 * g + h + 7 * f)) + (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 6 - 0.809e3 / 0.18e2 * eta ^ 5 - 0.1213e4 / 0.18e2 * eta ^ 4 + 0.6085e4 / 0.9e1 * eta ^ 3 + 0.14e2 * eta ^ 2 - 0.19985e5 / 0.18e2 * eta + 0.231e3 / 0.2e1) * ci2 ^ 4 + 0.40e2 / 0.9e1 * (eta ^ 4 - eta ^ 3 / 0.5e1 - 0.43e2 / 0.5e1 * eta ^ 2 + 0.11e2 / 0.5e1 * eta + 0.12e2) * eta) * sin((3 * g - h + 4 * f)) / 0.640e3 - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.766e3 / 0.15e2 * eta ^ 2 + 0.133e3 / 0.5e1 * eta - 0.292e3 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 - 0.766e3 / 0.15e2 * eta ^ 2 - 0.133e3 / 0.5e1 * eta + 0.292e3 / 0.5e1) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 + 0.49e2 / 0.5e1 * eta ^ 2 + 0.103e3 / 0.18e2 * eta - 0.146e3 / 0.15e2) * ci2 ^ 2 + 0.2e1 / 0.45e2 * eta ^ 2 + 0.2e1 / 0.45e2 * eta) * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 3 * f)) / 0.256e3 + 0.11e2 / 0.256e3 * ((eta ^ 5 - 0.568e3 / 0.165e3 * eta ^ 4 + 0.46e2 / 0.33e2 * eta ^ 3 + 0.68e2 / 0.33e2 * eta ^ 2 - 0.11779e5 / 0.165e3 * eta - 0.3756e4 / 0.55e2) * ci2 ^ 6 + (-eta ^ 5 + 0.568e3 / 0.165e3 * eta ^ 4 - 0.46e2 / 0.33e2 * eta ^ 3 - 0.68e2 / 0.33e2 * eta ^ 2 + 0.11779e5 / 0.165e3 * eta + 0.3756e4 / 0.55e2) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 - 0.274e3 / 0.495e3 * eta ^ 4 - 0.799e3 / 0.495e3 * eta ^ 3 - 0.160e3 / 0.33e2 * eta ^ 2 - 0.15071e5 / 0.990e3 * eta - 0.626e3 / 0.55e2) * ci2 ^ 2 - 0.2e1 / 0.33e2 * (eta ^ 2 - 0.46e2 / 0.3e1 * eta - 0.77e2 / 0.3e1) * (0.1e1 + eta) * eta) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - h + 5 * f)) - 0.613e3 / 0.2880e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((0.1678e4 / 0.613e3 * eta ^ 3 + 0.12163e5 / 0.613e3 * eta ^ 2 + 0.318e3 / 0.613e3 * eta + 0.844e3 / 0.613e3 * eta ^ 5 - 0.6324e4 / 0.613e3 * eta ^ 4 + eta ^ 6 - 0.9372e4 / 0.613e3) * ci2 ^ 6 + (0.9372e4 / 0.613e3 - 0.844e3 / 0.613e3 * eta ^ 5 + 0.6324e4 / 0.613e3 * eta ^ 4 - 0.1678e4 / 0.613e3 * eta ^ 3 - eta ^ 6 - 0.318e3 / 0.613e3 * eta - 0.12163e5 / 0.613e3 * eta ^ 2) * ci2 ^ 4 + (0.408e3 / 0.613e3 * eta ^ 5 - 0.658e3 / 0.613e3 * eta ^ 4 - 0.371e3 / 0.613e3 * eta ^ 3 - 0.821e3 / 0.613e3 * eta - 0.1562e4 / 0.613e3 + 0.1069e4 / 0.1226e4 * eta ^ 2 + 0.251e3 / 0.1226e4 * eta ^ 6) * ci2 ^ 2 - 0.144e3 / 0.613e3 * (eta ^ 4 + 0.2e1 * eta ^ 3 - 0.9e1 / 0.4e1 * eta ^ 2 - 0.223e3 / 0.36e2 * eta - 0.31e2 / 0.9e1) * eta) * sin((3 * g + h + 4 * f)) - 0.329e3 / 0.2880e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * ((-0.7566e4 / 0.329e3 * eta ^ 3 + 0.1667e4 / 0.329e3 * eta ^ 2 - 0.5904e4 / 0.329e3 * eta + 0.838e3 / 0.329e3 * eta ^ 5 - 0.5592e4 / 0.329e3 * eta ^ 4 + eta ^ 6 - 0.9372e4 / 0.329e3) * ci2 ^ 6 + (0.9372e4 / 0.329e3 - 0.838e3 / 0.329e3 * eta ^ 5 + 0.5592e4 / 0.329e3 * eta ^ 4 + 0.7566e4 / 0.329e3 * eta ^ 3 - eta ^ 6 + 0.5904e4 / 0.329e3 * eta - 0.1667e4 / 0.329e3 * eta ^ 2) * ci2 ^ 4 + (0.303e3 / 0.329e3 * eta ^ 5 - 0.656e3 / 0.329e3 * eta ^ 4 - 0.1853e4 / 0.329e3 * eta ^ 3 - 0.1858e4 / 0.329e3 * eta - 0.1562e4 / 0.329e3 - 0.2627e4 / 0.658e3 * eta ^ 2 + 0.135e3 / 0.658e3 * eta ^ 6) * ci2 ^ 2 - 0.80e2 / 0.329e3 * (0.1e1 + eta) * eta * (eta ^ 3 + 0.2e1 * eta ^ 2 - 0.81e2 / 0.20e2 * eta - 0.31e2 / 0.5e1)) * sin((g - h + 4 * f)) + 0.53e2 / 0.1152e4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 6 - 0.2107e4 / 0.530e3 * eta ^ 5 - 0.13611e5 / 0.530e3 * eta ^ 4 - 0.157e3 / 0.53e2 * eta ^ 3 + 0.8708e4 / 0.265e3 * eta ^ 2 + 0.6697e4 / 0.106e3 * eta - 0.2079e4 / 0.530e3) * ci2 ^ 4 + 0.168e3 / 0.265e3 * eta * (eta ^ 4 + 0.9e1 / 0.7e1 * eta ^ 3 - 0.55e2 / 0.21e2 * eta ^ 2 - 0.109e3 / 0.21e2 * eta - 0.20e2 / 0.7e1)) * sin((5 * g + h + 4 * f)) - 0.53e2 / 0.2304e4 * (0.1e1 + eta) * ((eta ^ 5 - 0.1173e4 / 0.265e3 * eta ^ 4 - 0.858e3 / 0.53e2 * eta ^ 3 - 0.3422e4 / 0.265e3 * eta ^ 2 - 0.555e3 / 0.53e2 * eta - 0.2781e4 / 0.265e3) * ci2 ^ 4 + 0.168e3 / 0.265e3 * eta * (0.1e1 + eta) ^ 3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((3 * g - h + f)) + 0.3473e4 / 0.11520e5 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 5 - 0.467e3 / 0.3473e4 * eta ^ 4 - 0.15994e5 / 0.3473e4 * eta ^ 3 - 0.38538e5 / 0.3473e4 * eta ^ 2 - 0.29767e5 / 0.3473e4 * eta - 0.165e3 / 0.151e3) * ci2 ^ 4 + 0.984e3 / 0.3473e4 * (0.1e1 + eta) * eta * (eta ^ 2 + 0.58e2 / 0.41e2 * eta + 0.37e2 / 0.41e2)) * sin((5 * g + h + 3 * f)) + 0.13e2 / 0.576e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((0.1458e4 / 0.65e2 * eta ^ 3 + 0.11411e5 / 0.65e2 * eta ^ 2 - 0.604e3 / 0.65e2 * eta - 0.382e3 / 0.65e2 * eta ^ 5 - 0.7486e4 / 0.65e2 * eta ^ 4 + eta ^ 6 + 0.66e2 / 0.65e2) * ci2 ^ 6 + (-0.66e2 / 0.65e2 + 0.382e3 / 0.65e2 * eta ^ 5 + 0.7486e4 / 0.65e2 * eta ^ 4 - 0.1458e4 / 0.65e2 * eta ^ 3 - eta ^ 6 + 0.604e3 / 0.65e2 * eta - 0.11411e5 / 0.65e2 * eta ^ 2) * ci2 ^ 4 + (0.703e3 / 0.195e3 * eta ^ 5 - 0.3379e4 / 0.195e3 * eta ^ 4 - 0.371e3 / 0.39e2 * eta ^ 3 - 0.16e2 / 0.5e1 * eta + 0.11e2 / 0.65e2 + 0.6559e4 / 0.390e3 * eta ^ 2 + 0.3e1 / 0.10e2 * eta ^ 6) * ci2 ^ 2 - 0.496e3 / 0.195e3 * (eta ^ 4 + 0.43e2 / 0.31e2 * eta ^ 3 - 0.329e3 / 0.124e3 * eta ^ 2 - 0.485e3 / 0.124e3 * eta - 0.45e2 / 0.62e2) * eta) * sin((g - h)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.322e3 / 0.15e2 * eta ^ 2 - 0.891e3 / 0.5e1 * eta - 0.932e3 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 + 0.322e3 / 0.15e2 * eta ^ 2 + 0.891e3 / 0.5e1 * eta + 0.932e3 / 0.5e1) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 - 0.247e3 / 0.45e2 * eta ^ 2 - 0.569e3 / 0.18e2 * eta - 0.466e3 / 0.15e2) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.2e1 / 0.9e1 * eta) * (eta - 0.1e1) ^ 3 * sin((g - h + 7 * f)) / 0.256e3 + 0.2e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.13e2 / 0.12e2 * eta + 0.7e1 / 0.24e2) * ci2 ^ 6 + (-eta ^ 2 - 0.13e2 / 0.12e2 * eta - 0.7e1 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 + eta / 0.6e1 + 0.1e1 / 0.120e3) * ci2 ^ 2 + eta / 0.40e2 + 0.1e1 / 0.40e2) * cos((3 * g + h)) - (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + eta / 0.3e1 - 0.31e2 / 0.12e2) * ci2 ^ 6 + (-eta ^ 2 - eta / 0.3e1 + 0.31e2 / 0.12e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 - eta / 0.30e2 - 0.37e2 / 0.60e2) * ci2 ^ 2 + eta / 0.20e2 + 0.1e1 / 0.20e2) * cos((g - h + 4 * f)) - 0.7e1 / 0.768e3 * ci2 ^ 2 * (eta + 0.116e3 / 0.35e2) * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sin((3 * g + h + 9 * f)) + 0.81e2 / 0.640e3 * sqrt(-eta ^ 2 + 0.1e1) * ((-0.517e3 / 0.27e2 - 0.257e3 / 0.9e1 * eta - 0.7859e4 / 0.729e3 * eta ^ 5 - 0.7349e4 / 0.729e3 * eta ^ 4 + 0.2195e4 / 0.81e2 * eta ^ 3 + 0.287e3 / 0.27e2 * eta ^ 2 + 0.3767e4 / 0.729e3 * eta ^ 6 + eta ^ 7) * ci2 ^ 8 + (-0.4390e4 / 0.81e2 * eta ^ 3 - 0.574e3 / 0.27e2 * eta ^ 2 + 0.514e3 / 0.9e1 * eta + 0.15718e5 / 0.729e3 * eta ^ 5 + 0.14698e5 / 0.729e3 * eta ^ 4 - 0.7534e4 / 0.729e3 * eta ^ 6 + 0.1034e4 / 0.27e2 - 0.2e1 * eta ^ 7) * ci2 ^ 6 + (-0.5687e4 / 0.243e3 - 0.7877e4 / 0.729e3 * eta ^ 5 - 0.8167e4 / 0.729e3 * eta ^ 4 + 0.7331e4 / 0.243e3 * eta ^ 3 + 0.553e3 / 0.81e2 * eta ^ 6 - 0.26543e5 / 0.729e3 * eta + 0.6683e4 / 0.729e3 * eta ^ 2 + 0.281e3 / 0.243e3 * eta ^ 7) * ci2 ^ 4 + (0.2e1 / 0.81e2 * eta ^ 5 + 0.818e3 / 0.729e3 * eta ^ 4 - 0.746e3 / 0.243e3 * eta ^ 3 + 0.5726e4 / 0.729e3 * eta + 0.1034e4 / 0.243e3 + 0.1066e4 / 0.729e3 * eta ^ 2 - 0.38e2 / 0.243e3 * eta ^ 7 - 0.1210e4 / 0.729e3 * eta ^ 6) * ci2 ^ 2 + 0.85e2 / 0.1458e4 * eta ^ 3 - 0.839e3 / 0.1458e4 * eta ^ 2 + 0.341e3 / 0.1458e4 * eta ^ 5 - 0.5e1 / 0.1458e4 * eta ^ 7 + 0.317e3 / 0.1458e4 * eta ^ 4 - 0.517e3 / 0.1458e4 - 0.407e3 / 0.486e3 * eta + 0.175e3 / 0.1458e4 * eta ^ 6) * sin((g + h + 2 * f)) + 0.137e3 / 0.640e3 * ((-0.1023e4 / 0.137e3 + 0.581e3 / 0.411e3 * eta + 0.3863e4 / 0.411e3 * eta ^ 5 - 0.1295e4 / 0.411e3 * eta ^ 4 - 0.1765e4 / 0.1233e4 * eta ^ 3 + 0.2021e4 / 0.137e3 * eta ^ 2 + 0.8279e4 / 0.1233e4 * eta ^ 6 + eta ^ 7) * ci2 ^ 8 + (0.3530e4 / 0.1233e4 * eta ^ 3 - 0.4042e4 / 0.137e3 * eta ^ 2 - 0.1162e4 / 0.411e3 * eta - 0.7726e4 / 0.411e3 * eta ^ 5 + 0.2590e4 / 0.411e3 * eta ^ 4 - 0.16558e5 / 0.1233e4 * eta ^ 6 + 0.2046e4 / 0.137e3 - 0.2e1 * eta ^ 7) * ci2 ^ 6 + (-0.3751e4 / 0.411e3 + 0.14354e5 / 0.1233e4 * eta ^ 5 - 0.259e3 / 0.137e3 * eta ^ 4 - 0.568e3 / 0.1233e4 * eta ^ 3 + 0.3329e4 / 0.411e3 * eta ^ 6 + 0.10e2 / 0.9e1 * eta + 0.7055e4 / 0.411e3 * eta ^ 2 + 0.4e1 / 0.3e1 * eta ^ 7) * ci2 ^ 4 + (-0.2765e4 / 0.1233e4 * eta ^ 5 - 0.518e3 / 0.411e3 * eta ^ 4 - 0.133e3 / 0.137e3 * eta ^ 3 + 0.373e3 / 0.1233e4 * eta + 0.682e3 / 0.411e3 - 0.992e3 / 0.411e3 * eta ^ 2 - eta ^ 7 / 0.3e1 - 0.1708e4 / 0.1233e4 * eta ^ 6) * ci2 ^ 2 + 0.1375e4 / 0.4932e4 * eta ^ 3 + 0.197e3 / 0.1233e4 * eta ^ 2 + 0.59e2 / 0.548e3 * eta ^ 5 + eta ^ 7 / 0.36e2 + 0.193e3 / 0.822e3 * eta ^ 4 - 0.539e3 / 0.4932e4 * eta - 0.341e3 / 0.2466e4 + 0.76e2 / 0.1233e4 * eta ^ 6) * (eta - 0.1e1) * sin((-g - h + f)) - 0.31e2 / 0.144e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * ((eta ^ 5 - 0.77e2 / 0.31e2 * eta ^ 4 + 0.252e3 / 0.31e2 * eta ^ 3 + 0.256e3 / 0.31e2 * eta ^ 2 - 0.59e2 / 0.31e2 * eta - 0.291e3 / 0.31e2) * ci2 ^ 6 + (-eta ^ 5 + 0.77e2 / 0.31e2 * eta ^ 4 - 0.252e3 / 0.31e2 * eta ^ 3 - 0.256e3 / 0.31e2 * eta ^ 2 + 0.59e2 / 0.31e2 * eta + 0.291e3 / 0.31e2) * ci2 ^ 4 + (eta ^ 5 / 0.5e1 + 0.79e2 / 0.155e3 * eta ^ 4 + 0.444e3 / 0.155e3 * eta ^ 3 + 0.56e2 / 0.155e3 * eta ^ 2 - 0.95e2 / 0.31e2 * eta - 0.471e3 / 0.155e3) * ci2 ^ 2 - 0.78e2 / 0.155e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * cos((3 * g + h + 3 * f)) + 0.121e3 / 0.3840e4 * ((eta ^ 5 + 0.298e3 / 0.363e3 * eta ^ 4 - 0.1842e4 / 0.121e3 * eta ^ 3 - 0.6592e4 / 0.363e3 * eta ^ 2 + 0.1337e4 / 0.121e3 * eta + 0.2370e4 / 0.121e3) * ci2 ^ 4 + 0.8e1 / 0.363e3 * eta * (0.1e1 + eta) ^ 3) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + h + 8 * f)) + ci2 ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((-3 * g + h + 4 * f)) / 0.7680e4 + ci2 ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((5 * g + h + 12 * f)) / 0.1536e4 + ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 4 * sin((-5 * g - h + 4 * f)) / 0.7680e4 + 0.5e1 / 0.96e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * Delta * (eta - 0.1e1) ^ 3 * cos((g - h + 7 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * Delta * (eta - 0.1e1) ^ 2 * cos((-g + h + 3 * f)) / 0.96e2 + 0.3e1 / 0.1280e4 * (0.1e1 + eta) ^ 3 * (ci2 ^ 8 - 0.2e1 * ci2 ^ 6 + 0.11e2 / 0.9e1 * ci2 ^ 4 - 0.2e1 / 0.9e1 * ci2 ^ 2 + 0.1e1 / 0.54e2) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 4 * sin((-g - h + 8 * f)) - 0.1049e4 / 0.2880e4 * ((0.10771e5 / 0.1049e4 * eta ^ 3 + 0.33845e5 / 0.1049e4 * eta ^ 2 + 0.16011e5 / 0.1049e4 * eta - 0.18103e5 / 0.1049e4 * eta ^ 5 - 0.25933e5 / 0.1049e4 * eta ^ 4 + 0.919e3 / 0.1049e4 * eta ^ 6 - 0.2079e4 / 0.1049e4 + eta ^ 7) * ci2 ^ 6 + (0.2079e4 / 0.1049e4 + 0.18103e5 / 0.1049e4 * eta ^ 5 + 0.25933e5 / 0.1049e4 * eta ^ 4 - 0.10771e5 / 0.1049e4 * eta ^ 3 - 0.919e3 / 0.1049e4 * eta ^ 6 - 0.16011e5 / 0.1049e4 * eta - 0.33845e5 / 0.1049e4 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.5069e4 / 0.2098e4 * eta ^ 5 - 0.10655e5 / 0.2098e4 * eta ^ 4 - 0.1343e4 / 0.2098e4 * eta ^ 3 + 0.3273e4 / 0.2098e4 * eta - 0.693e3 / 0.2098e4 + 0.6375e4 / 0.2098e4 * eta ^ 2 + 0.419e3 / 0.2098e4 * eta ^ 7 + 0.1261e4 / 0.2098e4 * eta ^ 6) * ci2 ^ 2 - 0.240e3 / 0.1049e4 * (eta ^ 4 + 0.67e2 / 0.60e2 * eta ^ 3 - 0.2e1 * eta ^ 2 - 0.77e2 / 0.20e2 * eta - 0.43e2 / 0.15e2) * (0.1e1 + eta) * eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * g + h + 2 * f)) - 0.79e2 / 0.256e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.11953e5 / 0.1185e4 * eta ^ 3 - 0.13638e5 / 0.395e3 * eta ^ 2 - 0.22631e5 / 0.1185e4 * eta + 0.20759e5 / 0.1185e4 * eta ^ 5 + 0.3872e4 / 0.237e3 * eta ^ 4 + 0.9206e4 / 0.1185e4 * eta ^ 6 - 0.484e3 / 0.1185e4 + eta ^ 7) * ci2 ^ 6 + (0.484e3 / 0.1185e4 - 0.20759e5 / 0.1185e4 * eta ^ 5 - 0.3872e4 / 0.237e3 * eta ^ 4 + 0.11953e5 / 0.1185e4 * eta ^ 3 - 0.9206e4 / 0.1185e4 * eta ^ 6 + 0.22631e5 / 0.1185e4 * eta + 0.13638e5 / 0.395e3 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (0.1553e4 / 0.474e3 * eta ^ 5 + 0.944e3 / 0.395e3 * eta ^ 4 - 0.1257e4 / 0.790e3 * eta ^ 3 - 0.18383e5 / 0.7110e4 * eta - 0.242e3 / 0.3555e4 - 0.5551e4 / 0.1185e4 * eta ^ 2 + eta ^ 7 / 0.6e1 + 0.1139e4 / 0.711e3 * eta ^ 6) * ci2 ^ 2 - 0.4e1 / 0.45e2 * (0.1e1 + eta) * (eta ^ 4 - 0.90e2 / 0.79e2 * eta ^ 3 - 0.350e3 / 0.79e2 * eta ^ 2 + 0.218e3 / 0.79e2 * eta + 0.383e3 / 0.79e2) * eta) * (eta - 0.1e1) * sin((3 * g + h + f)) - 0.409e3 / 0.2880e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((0.19651e5 / 0.409e3 * eta ^ 3 + 0.4523e4 / 0.409e3 * eta ^ 2 - 0.9261e4 / 0.409e3 * eta - 0.10799e5 / 0.409e3 * eta ^ 5 - 0.5715e4 / 0.409e3 * eta ^ 4 - 0.215e3 / 0.409e3 * eta ^ 6 + 0.2079e4 / 0.409e3 + eta ^ 7) * ci2 ^ 6 + (-0.2079e4 / 0.409e3 + 0.10799e5 / 0.409e3 * eta ^ 5 + 0.5715e4 / 0.409e3 * eta ^ 4 - 0.19651e5 / 0.409e3 * eta ^ 3 + 0.215e3 / 0.409e3 * eta ^ 6 + 0.9261e4 / 0.409e3 * eta - 0.4523e4 / 0.409e3 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.3573e4 / 0.818e3 * eta ^ 5 - 0.2849e4 / 0.818e3 * eta ^ 4 + 0.7921e4 / 0.818e3 * eta ^ 3 - 0.1023e4 / 0.818e3 * eta + 0.693e3 / 0.818e3 + 0.5529e4 / 0.818e3 * eta ^ 2 + 0.163e3 / 0.818e3 * eta ^ 7 + 0.339e3 / 0.818e3 * eta ^ 6) * ci2 ^ 2 - 0.112e3 / 0.409e3 * (0.1e1 + eta) * eta * (eta ^ 4 + 0.11e2 / 0.28e2 * eta ^ 3 - 0.16e2 / 0.7e1 * eta ^ 2 + 0.89e2 / 0.28e2 * eta + 0.43e2 / 0.7e1)) * sin((g - h + 2 * f)) + 0.47e2 / 0.1920e4 * (0.1e1 + eta) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta ^ 2 - 0.404e3 / 0.141e3 * eta - 0.387e3 / 0.47e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.808e3 / 0.141e3 * eta + 0.774e3 / 0.47e2) * ci2 ^ 6 + (0.167e3 / 0.141e3 * eta ^ 2 - 0.544e3 / 0.141e3 * eta - 0.473e3 / 0.47e2) * ci2 ^ 4 + (-0.26e2 / 0.141e3 * eta ^ 2 + 0.140e3 / 0.141e3 * eta + 0.86e2 / 0.47e2) * ci2 ^ 2 + 0.5e1 / 0.846e3 * eta ^ 2 - 0.13e2 / 0.141e3 * eta - 0.43e2 / 0.282e3) * sin((-g - h + 6 * f)) + (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.32879e5 * eta ^ 3 - 0.7670e4 / 0.3e1 * eta ^ 2 - 0.9109e4 / 0.3e1 * eta - 0.17371e5 / 0.3e1 * eta ^ 5 + 0.65696e5 / 0.3e1 * eta ^ 4 - 0.11422e5 / 0.3e1 * eta ^ 6 + 0.8668e4 + eta ^ 7) * ci2 ^ 6 + (-0.8668e4 + 0.17371e5 / 0.3e1 * eta ^ 5 - 0.65696e5 / 0.3e1 * eta ^ 4 - 0.32879e5 * eta ^ 3 + 0.11422e5 / 0.3e1 * eta ^ 6 + 0.9109e4 / 0.3e1 * eta + 0.7670e4 / 0.3e1 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.33251e5 / 0.18e2 * eta ^ 5 + 0.2672e4 * eta ^ 4 + 0.14245e5 / 0.2e1 * eta ^ 3 + 0.6481e4 / 0.6e1 * eta + 0.4334e4 / 0.3e1 + 0.9107e4 / 0.3e1 * eta ^ 2 + eta ^ 7 / 0.6e1 - 0.6947e4 / 0.9e1 * eta ^ 6) * ci2 ^ 2 - 0.1072e4 / 0.3e1 * eta ^ 3 - 0.16508e5 / 0.9e1 * eta ^ 2 + 0.1180e4 / 0.3e1 * eta ^ 5 + 0.864e3 * eta ^ 4 - 0.996e3 * eta + 0.92e2 / 0.9e1 * eta ^ 6) * (eta - 0.1e1) * sin((g - h + 3 * f)) / 0.3840e4 - 0.2e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + eta ^ 2 / 0.3e1 - 0.29e2 / 0.24e2 * eta - 0.31e2 / 0.24e2) * ci2 ^ 6 + (-eta ^ 3 - eta ^ 2 / 0.3e1 + 0.29e2 / 0.24e2 * eta + 0.31e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 + eta ^ 2 / 0.60e2 - 0.41e2 / 0.120e3 * eta - 0.37e2 / 0.120e3) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.40e2) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * cos((3 * g + h + 4 * f)) + 0.5e1 / 0.32e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * ((eta ^ 2 + 0.2e1 / 0.5e1 * eta - 0.149e3 / 0.15e2) * ci2 ^ 6 + (-eta ^ 2 - 0.2e1 / 0.5e1 * eta + 0.149e3 / 0.15e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 - 0.2e1 / 0.75e2 * eta - 0.157e3 / 0.75e2) * ci2 ^ 2 + 0.4e1 / 0.75e2 * eta + 0.4e1 / 0.75e2) * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sin((3 * g + h + 10 * f)) / 0.480e3 - 0.79e2 / 0.48e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * ((eta ^ 4 + 0.4e1 / 0.79e2 * eta ^ 3 - 0.324e3 / 0.79e2 * eta ^ 2 - 0.276e3 / 0.79e2 * eta - 0.43e2 / 0.79e2) * ci2 ^ 6 + (-eta ^ 4 - 0.4e1 / 0.79e2 * eta ^ 3 + 0.324e3 / 0.79e2 * eta ^ 2 + 0.276e3 / 0.79e2 * eta + 0.43e2 / 0.79e2) * ci2 ^ 4 + (eta ^ 4 / 0.5e1 + 0.144e3 / 0.395e3 * eta ^ 3 - 0.32e2 / 0.395e3 * eta ^ 2 - 0.64e2 / 0.395e3 * eta + 0.17e2 / 0.395e3) * ci2 ^ 2 - 0.14e2 / 0.79e2 * (0.1e1 + eta) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1)) * cos((3 * g + h + f)) + 0.67e2 / 0.11520e5 * ci2 ^ 4 * (eta ^ 2 + 0.14e2 / 0.67e2 * eta - 0.729e3 / 0.67e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((3 * g - h + 10 * f)) - 0.11e2 / 0.96e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.8e1 / 0.11e2 * eta - 0.7e1 / 0.11e2) * (eta - 0.1e1) * ci2 ^ 6 + (-eta ^ 3 + 0.3e1 / 0.11e2 * eta ^ 2 + 0.15e2 / 0.11e2 * eta - 0.7e1 / 0.11e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 - eta ^ 2 / 0.5e1 - 0.31e2 / 0.55e2 * eta - 0.1e1 / 0.55e2) * ci2 ^ 2 + 0.4e1 / 0.55e2 * (0.1e1 + eta) ^ 2) * cos((-g + h + f)) + 0.3e1 / 0.320e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta ^ 2 + 0.40e2 / 0.3e1 * eta + 0.62e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 - 0.40e2 / 0.3e1 * eta - 0.62e2 / 0.3e1) * ci2 ^ 2 + 0.13e2 / 0.54e2 * eta ^ 2 + 0.62e2 / 0.27e2 * eta + 0.31e2 / 0.9e1) * sin((g - h + 8 * f)) + 0.5e1 / 0.12e2 * ((eta ^ 3 - 0.12e2 / 0.5e1 * eta ^ 2 - 0.27e2 / 0.5e1 * eta - 0.2e1 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 + 0.12e2 / 0.5e1 * eta ^ 2 + 0.27e2 / 0.5e1 * eta + 0.2e1 / 0.5e1) * ci2 ^ 4 + (0.1e1 + eta) * (eta ^ 2 + 0.7e1 / 0.5e1 * eta - 0.22e2 / 0.5e1) * ci2 ^ 2 / 0.5e1 - 0.12e2 / 0.25e2 * eta ^ 2 - 0.6e1 / 0.25e2 * eta + 0.2e1 / 0.5e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * cos((g - h + 2 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sin((-g + h + 6 * f)) / 0.960e3 + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.127e3 / 0.5e1 * eta ^ 2 + 0.60e2 * eta + 0.186e3 / 0.5e1) * ci2 ^ 4 + (-eta ^ 3 - 0.127e3 / 0.5e1 * eta ^ 2 - 0.60e2 * eta - 0.186e3 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 + 0.152e3 / 0.15e2 * eta + 0.31e2 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 8 * f)) / 0.192e3 + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta ^ 3 - eta ^ 2 - 0.21e2 * eta - 0.15e2) * sin((-3 * g + h + 2 * f)) / 0.3840e4 - 0.23e2 / 0.144e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * ((eta ^ 4 - 0.28e2 / 0.23e2 * eta ^ 3 + 0.76e2 / 0.23e2 * eta ^ 2 - 0.52e2 / 0.23e2 * eta - 0.291e3 / 0.23e2) * ci2 ^ 6 + (-eta ^ 4 + 0.28e2 / 0.23e2 * eta ^ 3 - 0.76e2 / 0.23e2 * eta ^ 2 + 0.52e2 / 0.23e2 * eta + 0.291e3 / 0.23e2) * ci2 ^ 4 + (eta ^ 4 / 0.5e1 + 0.64e2 / 0.115e3 * eta ^ 3 + 0.224e3 / 0.115e3 * eta ^ 2 - 0.176e3 / 0.115e3 * eta - 0.471e3 / 0.115e3) * ci2 ^ 2 - 0.2e1 / 0.5e1 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2)) * Delta * (eta - 0.1e1) * cos((g - h + 3 * f)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * ((eta ^ 3 - eta ^ 2 / 0.6e1 - 0.13e2 / 0.12e2 * eta + 0.7e1 / 0.12e2) * ci2 ^ 6 + (-eta ^ 3 + eta ^ 2 / 0.6e1 + 0.13e2 / 0.12e2 * eta - 0.7e1 / 0.12e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 - 0.2e1 / 0.15e2 * eta ^ 2 - 0.5e1 / 0.12e2 * eta + 0.1e1 / 0.60e2) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.20e2) * cos((g - h)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 4 * (eta + 0.52e2 / 0.3e1) * sin((-3 * g - h + 5 * f)) / 0.1280e4 - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * (eta + 0.52e2 / 0.3e1) * sin((-g + h + 5 * f)) / 0.1280e4 - 0.7e1 / 0.768e3 * ci2 ^ 2 * (eta + 0.116e3 / 0.35e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 4 * sin((g - h + 9 * f)) + 0.503e3 / 0.1280e4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 6 - 0.3002e4 / 0.4527e4 * eta ^ 5 - 0.25891e5 / 0.4527e4 * eta ^ 4 - 0.12164e5 / 0.4527e4 * eta ^ 3 + 0.8459e4 / 0.1509e4 * eta ^ 2 + 0.30878e5 / 0.4527e4 * eta - 0.3311e4 / 0.1509e4) * ci2 ^ 4 + 0.520e3 / 0.4527e4 * (0.1e1 + eta) * eta * (eta ^ 3 + 0.3e1 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2)) * sin((5 * g + h + 5 * f)) + ((eta ^ 7 - 0.571e3 / 0.9e1 * eta ^ 6 + 0.281e3 / 0.9e1 * eta ^ 5 + 0.189e3 * eta ^ 4 - 0.1565e4 / 0.9e1 * eta ^ 3 - 0.1747e4 / 0.3e1 * eta ^ 2 - 0.7429e4 / 0.9e1 * eta - 0.1595e4 / 0.3e1) * ci2 ^ 4 + 0.64e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * eta * (eta ^ 3 - 0.5e1 / 0.4e1 * eta ^ 2 - eta / 0.4e1 + 0.8e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * g - h + 2 * f)) / 0.1280e4 + 0.47e2 / 0.1920e4 * (0.1e1 + eta) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 - 0.299e3 / 0.141e3 * eta ^ 2 - 0.1565e4 / 0.141e3 * eta - 0.387e3 / 0.47e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.598e3 / 0.141e3 * eta ^ 2 + 0.3130e4 / 0.141e3 * eta + 0.774e3 / 0.47e2) * ci2 ^ 6 + (0.167e3 / 0.141e3 * eta ^ 3 - 0.421e3 / 0.141e3 * eta ^ 2 - 0.1963e4 / 0.141e3 * eta - 0.473e3 / 0.47e2) * ci2 ^ 4 + (-0.26e2 / 0.141e3 * eta ^ 3 + 0.122e3 / 0.141e3 * eta ^ 2 + 0.398e3 / 0.141e3 * eta + 0.86e2 / 0.47e2) * ci2 ^ 2 + 0.5e1 / 0.846e3 * eta ^ 3 - 0.77e2 / 0.846e3 * eta ^ 2 - 0.23e2 / 0.94e2 * eta - 0.43e2 / 0.282e3) * sin((g + h + 6 * f)) - 0.171e3 / 0.1280e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.3919e4 / 0.513e3 * eta ^ 3 - 0.3574e4 / 0.513e3 * eta ^ 2 - 0.5143e4 / 0.513e3 * eta - 0.409e3 / 0.513e3 * eta ^ 5 + 0.88e2 / 0.171e3 * eta ^ 4 + 0.550e3 / 0.171e3 * eta ^ 6 - 0.484e3 / 0.513e3 + eta ^ 7) * ci2 ^ 6 + (0.484e3 / 0.513e3 + 0.409e3 / 0.513e3 * eta ^ 5 - 0.88e2 / 0.171e3 * eta ^ 4 - 0.3919e4 / 0.513e3 * eta ^ 3 - 0.550e3 / 0.171e3 * eta ^ 6 + 0.5143e4 / 0.513e3 * eta + 0.3574e4 / 0.513e3 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.5233e4 / 0.3078e4 * eta ^ 5 - 0.1348e4 / 0.513e3 * eta ^ 4 + 0.3205e4 / 0.1026e4 * eta ^ 3 - 0.895e3 / 0.3078e4 * eta - 0.242e3 / 0.1539e4 + 0.4625e4 / 0.1539e4 * eta ^ 2 + eta ^ 7 / 0.6e1 + 0.1213e4 / 0.1539e4 * eta ^ 6) * ci2 ^ 2 - 0.52e2 / 0.513e3 * eta * (eta ^ 5 - 0.307e3 / 0.39e2 * eta ^ 4 - 0.628e3 / 0.39e2 * eta ^ 3 + 0.92e2 / 0.13e2 * eta ^ 2 + 0.319e3 / 0.13e2 * eta + 0.383e3 / 0.39e2)) * sin((g - h + f)) + 0.61e2 / 0.640e3 * ((0.1044e4 / 0.61e2 + 0.12917e5 / 0.549e3 * eta + eta ^ 5 - 0.320e3 / 0.549e3 * eta ^ 4 - 0.618e3 / 0.61e2 * eta ^ 3 - 0.292e3 / 0.549e3 * eta ^ 2) * ci2 ^ 8 + (0.1236e4 / 0.61e2 * eta ^ 3 + 0.584e3 / 0.549e3 * eta ^ 2 - 0.25834e5 / 0.549e3 * eta - 0.2e1 * eta ^ 5 + 0.640e3 / 0.549e3 * eta ^ 4 - 0.2088e4 / 0.61e2) * ci2 ^ 6 + (0.1276e4 / 0.61e2 + 0.71e2 / 0.61e2 * eta ^ 5 - 0.160e3 / 0.183e3 * eta ^ 4 - 0.6326e4 / 0.549e3 * eta ^ 3 + 0.1823e4 / 0.61e2 * eta + 0.692e3 / 0.549e3 * eta ^ 2) * ci2 ^ 4 + (-0.10e2 / 0.61e2 * eta ^ 5 + 0.160e3 / 0.549e3 * eta ^ 4 + 0.764e3 / 0.549e3 * eta ^ 3 - 0.3490e4 / 0.549e3 * eta - 0.232e3 / 0.61e2 - 0.328e3 / 0.183e3 * eta ^ 2) * ci2 ^ 2 - 0.13e2 / 0.549e3 * eta ^ 3 + 0.62e2 / 0.183e3 * eta ^ 2 - eta ^ 5 / 0.1098e4 - 0.8e1 / 0.183e3 * eta ^ 4 + 0.683e3 / 0.1098e4 * eta + 0.58e2 / 0.183e3) * (0.1e1 + eta) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * sin((g + h + 4 * f)) + 0.11e2 / 0.256e3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 7 - 0.347e3 / 0.1485e4 * eta ^ 6 - 0.13921e5 / 0.495e3 * eta ^ 5 - 0.8527e4 / 0.297e3 * eta ^ 4 + 0.67471e5 / 0.1485e4 * eta ^ 3 + 0.122567e6 / 0.1485e4 * eta ^ 2 + 0.6509e4 / 0.495e3 * eta - 0.427e3 / 0.15e2) * ci2 ^ 4 + 0.256e3 / 0.1485e4 * (0.1e1 + eta) ^ 2 * (eta ^ 3 + 0.9e1 / 0.16e2 * eta ^ 2 - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1) * eta) * sin((5 * g + h + 6 * f)) + 0.29e2 / 0.2304e4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 6 - 0.2822e4 / 0.145e3 * eta ^ 5 + 0.1859e4 / 0.145e3 * eta ^ 4 + 0.2228e4 / 0.29e2 * eta ^ 3 - 0.353e3 / 0.145e3 * eta ^ 2 - 0.1862e4 / 0.29e2 * eta - 0.759e3 / 0.29e2) * ci2 ^ 4 + 0.216e3 / 0.145e3 * (0.1e1 + eta) * (eta ^ 3 - 0.17e2 / 0.9e1 * eta ^ 2 - 0.7e1 / 0.3e1 * eta + 0.37e2 / 0.9e1) * eta) * sin((3 * g - h + 3 * f)) + 0.61e2 / 0.640e3 * (0.1e1 + eta) * ((0.1044e4 / 0.61e2 + 0.2495e4 / 0.549e3 * eta + eta ^ 4 - 0.347e3 / 0.549e3 * eta ^ 3 - 0.6149e4 / 0.549e3 * eta ^ 2) * ci2 ^ 8 + (0.694e3 / 0.549e3 * eta ^ 3 + 0.12298e5 / 0.549e3 * eta ^ 2 - 0.4990e4 / 0.549e3 * eta - 0.2e1 * eta ^ 4 - 0.2088e4 / 0.61e2) * ci2 ^ 6 + (0.1276e4 / 0.61e2 + 0.71e2 / 0.61e2 * eta ^ 4 - 0.57e2 / 0.61e2 * eta ^ 3 + 0.1223e4 / 0.183e3 * eta - 0.7127e4 / 0.549e3 * eta ^ 2) * ci2 ^ 4 + (-0.10e2 / 0.61e2 * eta ^ 4 + 0.166e3 / 0.549e3 * eta ^ 3 - 0.1174e4 / 0.549e3 * eta - 0.232e3 / 0.61e2 + 0.326e3 / 0.183e3 * eta ^ 2) * ci2 ^ 2 - 0.49e2 / 0.1098e4 * eta ^ 3 - 0.67e2 / 0.1098e4 * eta ^ 2 - eta ^ 4 / 0.1098e4 + 0.33e2 / 0.122e3 * eta + 0.58e2 / 0.183e3) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-g - h + 4 * f)) + 0.3e1 / 0.1280e4 * (0.1e1 + eta) ^ 4 * (ci2 ^ 8 - 0.2e1 * ci2 ^ 6 + 0.11e2 / 0.9e1 * ci2 ^ 4 - 0.2e1 / 0.9e1 * ci2 ^ 2 + 0.1e1 / 0.54e2) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((g + h + 8 * f)) + 0.1177e4 / 0.11520e5 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 4 - 0.1390e4 / 0.1177e4 * eta ^ 3 - 0.13708e5 / 0.1177e4 * eta ^ 2 - 0.2194e4 / 0.1177e4 * eta + 0.12195e5 / 0.1177e4) * ci2 ^ 4 + 0.72e2 / 0.1177e4 * eta * (0.1e1 + eta) ^ 2) * sin((3 * g - h + 7 * f)) + 0.157e3 / 0.3840e4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 4 + 0.6190e4 / 0.471e3 * eta ^ 3 + 0.13756e5 / 0.471e3 * eta ^ 2 + 0.3430e4 / 0.157e3 * eta + 0.927e3 / 0.157e3) * ci2 ^ 4 - 0.56e2 / 0.157e3 * eta * (0.1e1 + eta) ^ 2) * sin((5 * g + h + f)) + 0.593e3 / 0.11520e5 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 6 - 0.1496e4 / 0.593e3 * eta ^ 5 - 0.9999e4 / 0.593e3 * eta ^ 4 - 0.28268e5 / 0.593e3 * eta ^ 3 - 0.39169e5 / 0.593e3 * eta ^ 2 - 0.23404e5 / 0.593e3 * eta - 0.4785e4 / 0.593e3) * ci2 ^ 4 + 0.448e3 / 0.593e3 * (0.1e1 + eta) ^ 2 * eta * (eta ^ 2 + 0.33e2 / 0.28e2 * eta + 0.8e1 / 0.7e1)) * (eta - 0.1e1) * sin((5 * g + h + 2 * f)) + (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 - 0.546e3 * eta ^ 2 - 0.31e2 * eta + 0.876e3) * ci2 ^ 6 + (-eta ^ 3 + 0.546e3 * eta ^ 2 + 0.31e2 * eta - 0.876e3) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 - 0.331e3 / 0.3e1 * eta ^ 2 - 0.49e2 / 0.2e1 * eta + 0.146e3) * ci2 ^ 2 - 0.2e1 / 0.3e1 * eta ^ 2 - 0.2e1 / 0.3e1 * eta) * sin((-g + h + 3 * f)) / 0.3840e4 + 0.229e3 / 0.3840e4 * ((eta ^ 5 - 0.1423e4 / 0.229e3 * eta ^ 4 - 0.9958e4 / 0.687e3 * eta ^ 3 + 0.19306e5 / 0.687e3 * eta ^ 2 + 0.20519e5 / 0.687e3 * eta - 0.3311e4 / 0.229e3) * ci2 ^ 4 + 0.88e2 / 0.229e3 * (0.1e1 + eta) * eta * (eta ^ 2 - 0.2e1 / 0.11e2 * eta - 0.83e2 / 0.33e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((3 * g - h + 5 * f)) + 0.65e2 / 0.768e3 * (0.1e1 + eta) * ((eta ^ 5 - 0.4696e4 / 0.325e3 * eta ^ 4 - 0.6362e4 / 0.325e3 * eta ^ 3 + 0.6932e4 / 0.325e3 * eta ^ 2 + 0.6589e4 / 0.325e3 * eta - 0.1284e4 / 0.325e3) * ci2 ^ 6 + (-eta ^ 5 + 0.4696e4 / 0.325e3 * eta ^ 4 + 0.6362e4 / 0.325e3 * eta ^ 3 - 0.6932e4 / 0.325e3 * eta ^ 2 - 0.6589e4 / 0.325e3 * eta + 0.1284e4 / 0.325e3) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 - 0.3058e4 / 0.975e3 * eta ^ 4 - 0.1509e4 / 0.325e3 * eta ^ 3 + 0.1008e4 / 0.325e3 * eta ^ 2 + 0.6977e4 / 0.1950e4 * eta - 0.214e3 / 0.325e3) * ci2 ^ 2 - 0.18e2 / 0.325e3 * (0.1e1 + eta) * eta * (eta ^ 2 - 0.14e2 / 0.27e2 * eta - 0.37e2 / 0.27e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + f)) + 0.103e3 / 0.1280e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.24e2 / 0.103e3 * eta ^ 4 + 0.3430e4 / 0.309e3 * eta ^ 3 + 0.2804e4 / 0.309e3 * eta ^ 2 - 0.7651e4 / 0.309e3 * eta - 0.3756e4 / 0.103e3) * ci2 ^ 6 + (-eta ^ 5 - 0.24e2 / 0.103e3 * eta ^ 4 - 0.3430e4 / 0.309e3 * eta ^ 3 - 0.2804e4 / 0.309e3 * eta ^ 2 + 0.7651e4 / 0.309e3 * eta + 0.3756e4 / 0.103e3) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 + 0.238e3 / 0.927e3 * eta ^ 4 + 0.857e3 / 0.927e3 * eta ^ 3 - 0.344e3 / 0.309e3 * eta ^ 2 - 0.10943e5 / 0.1854e4 * eta - 0.626e3 / 0.103e3) * ci2 ^ 2 - 0.62e2 / 0.927e3 * (eta ^ 3 - 0.227e3 / 0.31e2 * eta ^ 2 - 0.619e3 / 0.31e2 * eta - 0.385e3 / 0.31e2) * eta) * sin((3 * g + h + 5 * f)) - 0.19e2 / 0.768e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 4 - eta ^ 3 - 0.563e3 / 0.19e2 * eta ^ 2 - 0.5197e4 / 0.95e2 * eta - 0.2796e4 / 0.95e2) * ci2 ^ 6 + (-eta ^ 4 + eta ^ 3 + 0.563e3 / 0.19e2 * eta ^ 2 + 0.5197e4 / 0.95e2 * eta + 0.2796e4 / 0.95e2) * ci2 ^ 4 + (eta ^ 4 / 0.6e1 - 0.89e2 / 0.190e3 * eta ^ 3 - 0.1053e4 / 0.190e3 * eta ^ 2 - 0.5369e4 / 0.570e3 * eta - 0.466e3 / 0.95e2) * ci2 ^ 2 + 0.2e1 / 0.57e2 * eta * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 7 * f)) + 0.39e2 / 0.1280e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 - 0.3064e4 / 0.117e3 * eta ^ 4 + 0.54e2 / 0.13e2 * eta ^ 3 + 0.8500e4 / 0.117e3 * eta ^ 2 - 0.1187e4 / 0.117e3 * eta - 0.428e3 / 0.39e2) * ci2 ^ 6 + (-eta ^ 5 + 0.3064e4 / 0.117e3 * eta ^ 4 - 0.54e2 / 0.13e2 * eta ^ 3 - 0.8500e4 / 0.117e3 * eta ^ 2 + 0.1187e4 / 0.117e3 * eta + 0.428e3 / 0.39e2) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 - 0.1922e4 / 0.351e3 * eta ^ 4 + 0.41e2 / 0.351e3 * eta ^ 3 + 0.1592e4 / 0.117e3 * eta ^ 2 - 0.799e3 / 0.702e3 * eta - 0.214e3 / 0.117e3) * ci2 ^ 2 - 0.22e2 / 0.351e3 * (eta ^ 3 - 0.47e2 / 0.11e2 * eta ^ 2 - 0.103e3 / 0.11e2 * eta - 0.37e2 / 0.11e2) * eta) * sin((-g + h + f)) + 0.11e2 / 0.2304e4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 6 - 0.1684e4 / 0.165e3 * eta ^ 5 - 0.5453e4 / 0.55e2 * eta ^ 4 + 0.92e2 * eta ^ 3 + 0.84979e5 / 0.165e3 * eta ^ 2 + 0.5384e4 / 0.55e2 * eta - 0.1281e4 / 0.5e1) * ci2 ^ 4 + 0.128e3 / 0.165e3 * (0.1e1 + eta) ^ 2 * eta * (eta ^ 2 - eta / 0.8e1 - 0.27e2 / 0.4e1)) * sin((3 * g - h + 6 * f)) + 0.31e2 / 0.960e3 * ((-0.3662e4 / 0.31e2 * eta ^ 3 + 0.3793e4 / 0.31e2 * eta ^ 2 + 0.11162e5 / 0.93e2 * eta - 0.776e3 / 0.93e2 * eta ^ 5 - 0.3902e4 / 0.31e2 * eta ^ 4 + eta ^ 6 + 0.22e2 / 0.31e2) * ci2 ^ 6 + (-0.22e2 / 0.31e2 + 0.776e3 / 0.93e2 * eta ^ 5 + 0.3902e4 / 0.31e2 * eta ^ 4 + 0.3662e4 / 0.31e2 * eta ^ 3 - eta ^ 6 - 0.11162e5 / 0.93e2 * eta - 0.3793e4 / 0.31e2 * eta ^ 2) * ci2 ^ 4 + (0.1394e4 / 0.279e3 * eta ^ 5 - 0.515e3 / 0.93e2 * eta ^ 4 - 0.261e3 / 0.31e2 * eta ^ 3 + 0.1753e4 / 0.93e2 * eta + 0.11e2 / 0.93e2 + 0.11855e5 / 0.558e3 * eta ^ 2 + 0.209e3 / 0.558e3 * eta ^ 6) * ci2 ^ 2 - 0.944e3 / 0.279e3 * (0.1e1 + eta) * eta * (eta ^ 3 + 0.133e3 / 0.59e2 * eta ^ 2 + 0.191e3 / 0.236e3 * eta - 0.45e2 / 0.118e3)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + h)) - 0.217e3 / 0.1920e4 * (0.1e1 + eta) * (eta - 0.1e1) * ((-0.4707e4 / 0.217e3 - 0.19808e5 / 0.651e3 * eta - 0.3740e4 / 0.651e3 * eta ^ 5 - 0.457e3 / 0.217e3 * eta ^ 4 + 0.4596e4 / 0.217e3 * eta ^ 3 + 0.3737e4 / 0.651e3 * eta ^ 2 + eta ^ 6) * ci2 ^ 8 + (-0.9192e4 / 0.217e3 * eta ^ 3 - 0.7474e4 / 0.651e3 * eta ^ 2 + 0.39616e5 / 0.651e3 * eta + 0.7480e4 / 0.651e3 * eta ^ 5 + 0.914e3 / 0.217e3 * eta ^ 4 - 0.2e1 * eta ^ 6 + 0.9414e4 / 0.217e3) * ci2 ^ 6 + (-0.5753e4 / 0.217e3 - 0.4103e4 / 0.651e3 * eta ^ 5 - 0.425e3 / 0.217e3 * eta ^ 4 + 0.15542e5 / 0.651e3 * eta ^ 3 + 0.4e1 / 0.3e1 * eta ^ 6 - 0.25247e5 / 0.651e3 * eta + 0.2386e4 / 0.651e3 * eta ^ 2) * ci2 ^ 4 + (0.121e3 / 0.217e3 * eta ^ 5 - 0.32e2 / 0.217e3 * eta ^ 4 - 0.1754e4 / 0.651e3 * eta ^ 3 + 0.259e3 / 0.31e2 * eta + 0.1046e4 / 0.217e3 + 0.193e3 / 0.93e2 * eta ^ 2 - eta ^ 6 / 0.3e1) * ci2 ^ 2 + 0.199e3 / 0.3906e4 * eta ^ 3 - 0.4223e4 / 0.7812e4 * eta ^ 2 + 0.395e3 / 0.7812e4 * eta ^ 5 + 0.30e2 / 0.217e3 * eta ^ 4 - 0.2243e4 / 0.2604e4 * eta - 0.523e3 / 0.1302e4 + eta ^ 6 / 0.36e2) * sin((g + h + 3 * f)) + 0.81e2 / 0.640e3 * ((-0.517e3 / 0.27e2 + 0.2e1 * eta + 0.3974e4 / 0.729e3 * eta ^ 5 - 0.1735e4 / 0.243e3 * eta ^ 4 - 0.632e3 / 0.243e3 * eta ^ 3 + 0.21395e5 / 0.729e3 * eta ^ 2 + eta ^ 6) * ci2 ^ 8 + (0.1264e4 / 0.243e3 * eta ^ 3 - 0.42790e5 / 0.729e3 * eta ^ 2 - 0.4e1 * eta - 0.7948e4 / 0.729e3 * eta ^ 5 + 0.3470e4 / 0.243e3 * eta ^ 4 - 0.2e1 * eta ^ 6 + 0.1034e4 / 0.27e2) * ci2 ^ 6 + (-0.5687e4 / 0.243e3 + 0.1738e4 / 0.243e3 * eta ^ 5 - 0.4391e4 / 0.729e3 * eta ^ 4 - 0.248e3 / 0.243e3 * eta ^ 3 + 0.281e3 / 0.243e3 * eta ^ 6 + 0.682e3 / 0.729e3 * eta + 0.2777e4 / 0.81e2 * eta ^ 2) * ci2 ^ 4 + (-0.1240e4 / 0.729e3 * eta ^ 5 - 0.814e3 / 0.729e3 * eta ^ 4 - 0.128e3 / 0.81e2 * eta ^ 3 + 0.776e3 / 0.729e3 * eta + 0.1034e4 / 0.243e3 - 0.3598e4 / 0.729e3 * eta ^ 2 - 0.38e2 / 0.243e3 * eta ^ 6) * ci2 ^ 2 + 0.328e3 / 0.729e3 * eta ^ 3 + 0.461e3 / 0.1458e4 * eta ^ 2 + 0.86e2 / 0.729e3 * eta ^ 5 + 0.461e3 / 0.1458e4 * eta ^ 4 - 0.517e3 / 0.1458e4 - 0.22e2 / 0.81e2 * eta - 0.5e1 / 0.1458e4 * eta ^ 6) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * sin((-g - h + 2 * f)) + (0.1e1 + eta) ^ 3 * ((eta + 0.21e2 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta - 0.42e2 / 0.5e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta + 0.77e2 / 0.15e2) * ci2 ^ 4 + (-eta / 0.3e1 - 0.14e2 / 0.15e2) * ci2 ^ 2 + eta / 0.36e2 + 0.7e1 / 0.90e2) * (eta - 0.1e1) ^ 4 * sin((-g - h + 7 * f)) / 0.128e3 - 0.217e3 / 0.1920e4 * (0.1e1 + eta) * ((-0.4707e4 / 0.217e3 - 0.1583e4 / 0.651e3 * eta + eta ^ 5 - 0.3287e4 / 0.651e3 * eta ^ 4 - 0.580e3 / 0.651e3 * eta ^ 3 + 0.696e3 / 0.31e2 * eta ^ 2) * ci2 ^ 8 + (0.1160e4 / 0.651e3 * eta ^ 3 - 0.1392e4 / 0.31e2 * eta ^ 2 + 0.3166e4 / 0.651e3 * eta - 0.2e1 * eta ^ 5 + 0.6574e4 / 0.651e3 * eta ^ 4 + 0.9414e4 / 0.217e3) * ci2 ^ 6 + (-0.5753e4 / 0.217e3 + 0.4e1 / 0.3e1 * eta ^ 5 - 0.3499e4 / 0.651e3 * eta ^ 4 - 0.136e3 / 0.651e3 * eta ^ 3 - 0.2972e4 / 0.651e3 * eta + 0.16966e5 / 0.651e3 * eta ^ 2) * ci2 ^ 4 + (-eta ^ 5 / 0.3e1 + 0.212e3 / 0.651e3 * eta ^ 4 - 0.148e3 / 0.217e3 * eta ^ 3 + 0.463e3 / 0.217e3 * eta + 0.1046e4 / 0.217e3 - 0.2350e4 / 0.651e3 * eta ^ 2) * ci2 ^ 2 + 0.83e2 / 0.434e3 * eta ^ 3 + 0.338e3 / 0.1953e4 * eta ^ 2 + eta ^ 5 / 0.36e2 + 0.13e2 / 0.186e3 * eta ^ 4 - 0.893e3 / 0.2604e4 * eta - 0.523e3 / 0.1302e4) * (eta - 0.1e1) ^ 2 * sin((-g - h + 3 * f)) + 0.9e1 / 0.640e3 * (0.1e1 + eta) ^ 2 * ((-0.51e2 - 0.5678e4 / 0.81e2 * eta + eta ^ 4 + 0.442e3 / 0.27e2 * eta ^ 3 - 0.590e3 / 0.81e2 * eta ^ 2) * ci2 ^ 8 + (-0.884e3 / 0.27e2 * eta ^ 3 + 0.1180e4 / 0.81e2 * eta ^ 2 + 0.11356e5 / 0.81e2 * eta - 0.2e1 * eta ^ 4 + 0.102e3) * ci2 ^ 6 + (-0.187e3 / 0.3e1 + 0.4e1 / 0.3e1 * eta ^ 4 + 0.1531e4 / 0.81e2 * eta ^ 3 - 0.7171e4 / 0.81e2 * eta - 0.115e3 / 0.9e1 * eta ^ 2) * ci2 ^ 4 + (-eta ^ 4 / 0.3e1 - 0.205e3 / 0.81e2 * eta ^ 3 + 0.1493e4 / 0.81e2 * eta + 0.34e2 / 0.3e1 + 0.445e3 / 0.81e2 * eta ^ 2) * ci2 ^ 2 + 0.17e2 / 0.324e3 * eta ^ 3 - 0.251e3 / 0.324e3 * eta ^ 2 - 0.17e2 / 0.18e2 + eta ^ 4 / 0.36e2 - 0.61e2 / 0.36e2 * eta) * (eta - 0.1e1) ^ 2 * sin((g + h + 5 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 4 * sin((g - h + 10 * f)) / 0.480e3 + 0.3e1 / 0.1280e4 * (eta + 0.5e1 / 0.3e1) * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) ^ 4 * sin((-5 * g - h + 2 * f)) - 0.11e2 / 0.24e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * cos((g - h + 6 * f)) - 0.11e2 / 0.24e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((3 * g + h + 6 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + 2 * f)) / 0.24e2 + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * eta * sqrt(-eta ^ 2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((-g + h + 2 * f)) / 0.24e2 + ((-0.1023e4 / 0.640e3 - 0.1117e4 / 0.480e3 * eta - 0.581e3 / 0.288e3 * eta ^ 5 - 0.1285e4 / 0.576e3 * eta ^ 4 + 0.1253e4 / 0.480e3 * eta ^ 3 + 0.2221e4 / 0.1440e4 * eta ^ 2 + 0.341e3 / 0.288e3 * eta ^ 6 + 0.137e3 / 0.640e3 * eta ^ 8 + 0.1793e4 / 0.1440e4 * eta ^ 7) * ci2 ^ 8 + (-0.1253e4 / 0.240e3 * eta ^ 3 - 0.2221e4 / 0.720e3 * eta ^ 2 + 0.1117e4 / 0.240e3 * eta + 0.581e3 / 0.144e3 * eta ^ 5 + 0.1285e4 / 0.288e3 * eta ^ 4 - 0.341e3 / 0.144e3 * eta ^ 6 + 0.1023e4 / 0.320e3 - 0.137e3 / 0.320e3 * eta ^ 8 - 0.1793e4 / 0.720e3 * eta ^ 7) * ci2 ^ 6 + (-0.3751e4 / 0.1920e4 - 0.2369e4 / 0.1152e4 * eta ^ 5 - 0.14459e5 / 0.5760e4 * eta ^ 4 + 0.16637e5 / 0.5760e4 * eta ^ 3 + 0.1685e4 / 0.1152e4 * eta ^ 6 - 0.17143e5 / 0.5760e4 * eta + 0.137e3 / 0.480e3 * eta ^ 8 + 0.8731e4 / 0.5760e4 * eta ^ 2 + 0.2837e4 / 0.1920e4 * eta ^ 7) * ci2 ^ 4 + (0.5e1 / 0.128e3 * eta ^ 5 + 0.1609e4 / 0.5760e4 * eta ^ 4 - 0.1601e4 / 0.5760e4 * eta ^ 3 + 0.3739e4 / 0.5760e4 * eta - 0.137e3 / 0.1920e4 * eta ^ 8 + 0.341e3 / 0.960e3 + 0.17e2 / 0.640e3 * eta ^ 2 - 0.1339e4 / 0.5760e4 * eta ^ 7 - 0.107e3 / 0.384e3 * eta ^ 6) * ci2 ^ 2 + 0.17e2 / 0.1536e4 * eta ^ 3 - 0.1091e4 / 0.23040e5 * eta ^ 2 + 0.259e3 / 0.7680e4 * eta ^ 5 + 0.181e3 / 0.23040e5 * eta ^ 7 + 0.701e3 / 0.23040e5 * eta ^ 4 - 0.1661e4 / 0.23040e5 * eta - 0.341e3 / 0.11520e5 + 0.137e3 / 0.23040e5 * eta ^ 8 + 0.77e2 / 0.7680e4 * eta ^ 6) * sin((g + h + f)) + 0.37e2 / 0.3840e4 * ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((3 * g - h + 11 * f)) + 0.37e2 / 0.3840e4 * ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * g + h + 11 * f)) + ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-3 * g + h + 3 * f)) / 0.768e3 + ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-5 * g - h + 3 * f)) / 0.768e3 + 0.809e3 / 0.11520e5 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta ^ 2 + 0.144e3 / 0.809e3 * eta - 0.2817e4 / 0.809e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * sin((3 * g - h + 9 * f)) + 0.377e3 / 0.11520e5 * (eta ^ 2 + 0.368e3 / 0.377e3 * eta + 0.63e2 / 0.377e3) * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-5 * g - h + f)) + 0.89e2 / 0.11520e5 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (eta ^ 3 + 0.85e2 / 0.89e2 * eta ^ 2 - 0.85e2 / 0.89e2 * eta + 0.63e2 / 0.89e2) * sin((-3 * g + h + f)) + 0.1097e4 / 0.11520e5 * (eta ^ 3 + 0.1253e4 / 0.1097e4 * eta ^ 2 - 0.2229e4 / 0.1097e4 * eta - 0.2817e4 / 0.1097e4) * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sin((5 * g + h + 9 * f)) + 0.9e1 / 0.640e3 * ((eta ^ 3 + 0.475e3 / 0.27e2 * eta ^ 2 - 0.1439e4 / 0.81e2 * eta - 0.51e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 - 0.950e3 / 0.27e2 * eta ^ 2 + 0.2878e4 / 0.81e2 * eta + 0.102e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 + 0.1663e4 / 0.81e2 * eta ^ 2 - 0.1990e4 / 0.81e2 * eta - 0.187e3 / 0.3e1) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 - 0.238e3 / 0.81e2 * eta ^ 2 + 0.551e3 / 0.81e2 * eta + 0.34e2 / 0.3e1) * ci2 ^ 2 + eta ^ 3 / 0.36e2 + 0.7e1 / 0.81e2 * eta ^ 2 - 0.235e3 / 0.324e3 * eta - 0.17e2 / 0.18e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-g - h + 5 * f)) + 0.71e2 / 0.2304e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.65813e5 / 0.355e3 * eta ^ 3 - 0.139911e6 / 0.355e3 * eta ^ 2 - 0.19729e5 / 0.355e3 * eta + 0.92141e5 / 0.355e3 * eta ^ 5 + 0.131941e6 / 0.355e3 * eta ^ 4 - 0.28693e5 / 0.355e3 * eta ^ 6 + 0.26004e5 / 0.355e3 + eta ^ 8 - 0.20487e5 / 0.355e3 * eta ^ 7) * ci2 ^ 6 + (-0.26004e5 / 0.355e3 - 0.92141e5 / 0.355e3 * eta ^ 5 - 0.131941e6 / 0.355e3 * eta ^ 4 + 0.65813e5 / 0.355e3 * eta ^ 3 + 0.28693e5 / 0.355e3 * eta ^ 6 + 0.19729e5 / 0.355e3 * eta - eta ^ 8 + 0.139911e6 / 0.355e3 * eta ^ 2 + 0.20487e5 / 0.355e3 * eta ^ 7) * ci2 ^ 4 + (0.37829e5 / 0.2130e4 * eta ^ 5 + 0.8299e4 / 0.142e3 * eta ^ 4 + 0.1553e4 / 0.710e3 * eta ^ 3 + 0.2941e4 / 0.710e3 * eta + eta ^ 8 / 0.6e1 + 0.4334e4 / 0.355e3 - 0.20349e5 / 0.710e3 * eta ^ 2 - 0.8293e4 / 0.710e3 * eta ^ 7 - 0.19927e5 / 0.710e3 * eta ^ 6) * ci2 ^ 2 + 0.124e3 / 0.1065e4 * (0.1e1 + eta) * eta * (eta ^ 5 + 0.1741e4 / 0.31e2 * eta ^ 4 + 0.2844e4 / 0.31e2 * eta ^ 3 - 0.1036e4 / 0.31e2 * eta ^ 2 - 0.4075e4 / 0.31e2 * eta - 0.2241e4 / 0.31e2)) * sin((3 * g + h + 3 * f)) + (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * ((eta + 0.21e2 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta - 0.42e2 / 0.5e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta + 0.77e2 / 0.15e2) * ci2 ^ 4 + (-eta / 0.3e1 - 0.14e2 / 0.15e2) * ci2 ^ 2 + eta / 0.36e2 + 0.7e1 / 0.90e2) * sin((g + h + 7 * f)) / 0.128e3 + 0.11e2 / 0.384e3 * ((0.272e3 / 0.165e3 * eta ^ 5 - 0.1293e4 / 0.55e2 * eta ^ 4 - 0.3088e4 / 0.165e3 * eta ^ 3 + 0.5407e4 / 0.165e3 * eta ^ 2 - 0.192e3 / 0.55e2 * eta + eta ^ 6 - 0.189e3 / 0.5e1) * ci2 ^ 8 + (-0.544e3 / 0.165e3 * eta ^ 5 + 0.2586e4 / 0.55e2 * eta ^ 4 + 0.6176e4 / 0.165e3 * eta ^ 3 - 0.10814e5 / 0.165e3 * eta ^ 2 + 0.384e3 / 0.55e2 * eta + 0.378e3 / 0.5e1 - 0.2e1 * eta ^ 6) * ci2 ^ 6 + (0.32e2 / 0.15e2 * eta ^ 5 - 0.4357e4 / 0.165e3 * eta ^ 4 - 0.3728e4 / 0.165e3 * eta ^ 3 + 0.191e3 / 0.165e3 * eta ^ 6 + 0.1129e4 / 0.33e2 * eta ^ 2 - 0.112e3 / 0.15e2 * eta - 0.231e3 / 0.5e1) * ci2 ^ 4 + (-0.16e2 / 0.33e2 * eta ^ 5 + 0.478e3 / 0.165e3 * eta ^ 4 + 0.128e3 / 0.33e2 * eta ^ 3 - 0.26e2 / 0.165e3 * eta ^ 6 + 0.42e2 / 0.5e1 - 0.238e3 / 0.165e3 * eta ^ 2 + 0.656e3 / 0.165e3 * eta) * ci2 ^ 2 - (eta ^ 3 - 0.7e1 * eta ^ 2 - 0.33e2 * eta - 0.33e2) * (eta ^ 3 - eta ^ 2 - eta - 0.7e1) / 0.330e3) * sqrt(-eta ^ 2 + 0.1e1) * sin((g + h))) / (0.1e1 + eta) ^ 2 / a ^ 4 / eta ^ 12 -0.195e3 / 0.128e3 * R__e ^ 4 * J ^ 2 * (-0.3e1 / 0.65e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-3 * g - h + 6 * f)) + 0.186e3 / 0.13e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.147e3 / 0.31e2 * eta - 0.149e3 / 0.31e2) * ci2 ^ 6 + (-eta ^ 3 - 0.9e1 / 0.31e2 * eta ^ 2 + 0.147e3 / 0.31e2 * eta + 0.149e3 / 0.31e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 + eta ^ 2 / 0.155e3 - 0.163e3 / 0.155e3 * eta - 0.157e3 / 0.155e3) * ci2 ^ 2 + 0.4e1 / 0.155e3 * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) - 0.3e1 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 + 0.127e3 / 0.5e1 * eta ^ 2 + 0.60e2 * eta + 0.186e3 / 0.5e1) * ci2 ^ 4 + (-eta ^ 3 - 0.127e3 / 0.5e1 * eta ^ 2 - 0.60e2 * eta - 0.186e3 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 + 0.152e3 / 0.15e2 * eta + 0.31e2 / 0.5e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g + h + 8 * f)) + 0.240e3 / 0.13e2 * ((eta ^ 3 - 0.4e1 * eta ^ 2 - 0.47e2 / 0.5e1 * eta + 0.2e1 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 + 0.4e1 * eta ^ 2 + 0.47e2 / 0.5e1 * eta - 0.2e1 / 0.5e1) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 + 0.4e1 / 0.5e1 * eta ^ 2 + eta / 0.5e1 + 0.22e2 / 0.25e2) * ci2 ^ 2 - 0.4e1 / 0.5e1 * eta ^ 2 - 0.26e2 / 0.25e2 * eta - 0.2e1 / 0.5e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * g + h + 2 * f)) + 0.3e1 / 0.65e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g + h + 6 * f)) - 0.240e3 / 0.13e2 * ((eta ^ 3 - 0.12e2 / 0.5e1 * eta ^ 2 - 0.27e2 / 0.5e1 * eta - 0.2e1 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 + 0.12e2 / 0.5e1 * eta ^ 2 + 0.27e2 / 0.5e1 * eta + 0.2e1 / 0.5e1) * ci2 ^ 4 + (0.1e1 + eta) * (eta ^ 2 + 0.7e1 / 0.5e1 * eta - 0.22e2 / 0.5e1) * ci2 ^ 2 / 0.5e1 - 0.12e2 / 0.25e2 * eta ^ 2 - 0.6e1 / 0.25e2 * eta + 0.2e1 / 0.5e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((g - h + 2 * f)) + 0.27e2 / 0.65e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta ^ 2 + 0.40e2 / 0.3e1 * eta + 0.62e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 - 0.40e2 / 0.3e1 * eta - 0.62e2 / 0.3e1) * ci2 ^ 2 + 0.13e2 / 0.54e2 * eta ^ 2 + 0.62e2 / 0.27e2 * eta + 0.31e2 / 0.9e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((g - h + 8 * f)) + 0.162e3 / 0.13e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.7e1 / 0.27e2) * ci2 ^ 6 + (-eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.7e1 / 0.27e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 + 0.22e2 / 0.135e3 * eta - 0.1e1 / 0.135e3) * ci2 ^ 2 + 0.4e1 / 0.135e3 * eta + 0.4e1 / 0.135e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + f)) - 0.90e2 / 0.13e2 * ((eta ^ 2 + 0.2e1 / 0.5e1 * eta - 0.149e3 / 0.15e2) * ci2 ^ 6 + (-eta ^ 2 - 0.2e1 / 0.5e1 * eta + 0.149e3 / 0.15e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 - 0.2e1 / 0.75e2 * eta - 0.157e3 / 0.75e2) * ci2 ^ 2 + 0.4e1 / 0.75e2 * eta + 0.4e1 / 0.75e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 2 * sin((g - h + 5 * f)) + 0.9e1 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.24e2 / 0.5e1) * ci2 ^ 4 + (-eta ^ 2 + 0.24e2 / 0.5e1) * ci2 ^ 2 + 0.19e2 / 0.90e2 * eta ^ 2 + 0.2e1 / 0.45e2 * eta - 0.4e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-g + h + 4 * f)) - 0.3e1 / 0.260e3 * ((eta ^ 5 - 0.170e3 / 0.3e1 * eta ^ 4 - 0.274e3 * eta ^ 3 - 0.264e3 * eta ^ 2 - 0.461e3 / 0.3e1 * eta - 0.282e3) * ci2 ^ 4 + 0.8e1 * eta * (0.1e1 + eta) ^ 3) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g - h)) + 0.11e2 / 0.52e2 * (ci2 - 0.1e1) ^ 2 * ((eta ^ 6 - 0.1684e4 / 0.165e3 * eta ^ 5 - 0.5453e4 / 0.55e2 * eta ^ 4 + 0.92e2 * eta ^ 3 + 0.84979e5 / 0.165e3 * eta ^ 2 + 0.5384e4 / 0.55e2 * eta - 0.1281e4 / 0.5e1) * ci2 ^ 4 + 0.128e3 / 0.165e3 * (0.1e1 + eta) ^ 2 * eta * (eta ^ 2 - eta / 0.8e1 - 0.27e2 / 0.4e1)) * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g - h + 6 * f)) - 0.53e2 / 0.52e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 5 - 0.1173e4 / 0.265e3 * eta ^ 4 - 0.858e3 / 0.53e2 * eta ^ 3 - 0.3422e4 / 0.265e3 * eta ^ 2 - 0.555e3 / 0.53e2 * eta - 0.2781e4 / 0.265e3) * ci2 ^ 4 + 0.168e3 / 0.265e3 * eta * (0.1e1 + eta) ^ 3) * cos((3 * g - h + f)) - 0.3e1 / 0.260e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.546e3 * eta ^ 2 - 0.31e2 * eta + 0.876e3) * ci2 ^ 6 + (-eta ^ 3 + 0.546e3 * eta ^ 2 + 0.31e2 * eta - 0.876e3) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 - 0.331e3 / 0.3e1 * eta ^ 2 - 0.49e2 / 0.2e1 * eta + 0.146e3) * ci2 ^ 2 - 0.2e1 / 0.3e1 * eta ^ 2 - 0.2e1 / 0.3e1 * eta) * (eta - 0.1e1) ^ 2 * cos((-g + h + 3 * f)) - 0.9e1 / 0.52e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta ^ 3 + 0.766e3 / 0.15e2 * eta ^ 2 + 0.133e3 / 0.5e1 * eta - 0.292e3 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 - 0.766e3 / 0.15e2 * eta ^ 2 - 0.133e3 / 0.5e1 * eta + 0.292e3 / 0.5e1) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 + 0.49e2 / 0.5e1 * eta ^ 2 + 0.103e3 / 0.18e2 * eta - 0.146e3 / 0.15e2) * ci2 ^ 2 + 0.2e1 / 0.45e2 * eta ^ 2 + 0.2e1 / 0.45e2 * eta) * cos((-3 * g - h + 3 * f)) + 0.1177e4 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 4 - 0.1390e4 / 0.1177e4 * eta ^ 3 - 0.13708e5 / 0.1177e4 * eta ^ 2 - 0.2194e4 / 0.1177e4 * eta + 0.12195e5 / 0.1177e4) * ci2 ^ 4 + 0.72e2 / 0.1177e4 * eta * (0.1e1 + eta) ^ 2) * cos((3 * g - h + 7 * f)) + 0.613e3 / 0.65e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.1678e4 / 0.613e3 * eta ^ 3 + 0.12163e5 / 0.613e3 * eta ^ 2 + 0.318e3 / 0.613e3 * eta + 0.844e3 / 0.613e3 * eta ^ 5 - 0.6324e4 / 0.613e3 * eta ^ 4 + eta ^ 6 - 0.9372e4 / 0.613e3) * ci2 ^ 6 + (0.9372e4 / 0.613e3 - 0.844e3 / 0.613e3 * eta ^ 5 + 0.6324e4 / 0.613e3 * eta ^ 4 - 0.1678e4 / 0.613e3 * eta ^ 3 - eta ^ 6 - 0.318e3 / 0.613e3 * eta - 0.12163e5 / 0.613e3 * eta ^ 2) * ci2 ^ 4 + (0.408e3 / 0.613e3 * eta ^ 5 - 0.658e3 / 0.613e3 * eta ^ 4 - 0.371e3 / 0.613e3 * eta ^ 3 - 0.821e3 / 0.613e3 * eta - 0.1562e4 / 0.613e3 + 0.1069e4 / 0.1226e4 * eta ^ 2 + 0.251e3 / 0.1226e4 * eta ^ 6) * ci2 ^ 2 - 0.144e3 / 0.613e3 * (eta ^ 4 + 0.2e1 * eta ^ 3 - 0.9e1 / 0.4e1 * eta ^ 2 - 0.223e3 / 0.36e2 * eta - 0.31e2 / 0.9e1) * eta) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g + h + 4 * f)) + ((0.1458e4 / 0.65e2 * eta ^ 3 + 0.11411e5 / 0.65e2 * eta ^ 2 - 0.604e3 / 0.65e2 * eta - 0.382e3 / 0.65e2 * eta ^ 5 - 0.7486e4 / 0.65e2 * eta ^ 4 + eta ^ 6 + 0.66e2 / 0.65e2) * ci2 ^ 6 + (-0.66e2 / 0.65e2 + 0.382e3 / 0.65e2 * eta ^ 5 + 0.7486e4 / 0.65e2 * eta ^ 4 - 0.1458e4 / 0.65e2 * eta ^ 3 - eta ^ 6 + 0.604e3 / 0.65e2 * eta - 0.11411e5 / 0.65e2 * eta ^ 2) * ci2 ^ 4 + (0.703e3 / 0.195e3 * eta ^ 5 - 0.3379e4 / 0.195e3 * eta ^ 4 - 0.371e3 / 0.39e2 * eta ^ 3 - 0.16e2 / 0.5e1 * eta + 0.11e2 / 0.65e2 + 0.6559e4 / 0.390e3 * eta ^ 2 + 0.3e1 / 0.10e2 * eta ^ 6) * ci2 ^ 2 - 0.496e3 / 0.195e3 * (eta ^ 4 + 0.43e2 / 0.31e2 * eta ^ 3 - 0.329e3 / 0.124e3 * eta ^ 2 - 0.485e3 / 0.124e3 * eta - 0.45e2 / 0.62e2) * eta) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((g - h)) - 0.471e3 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.6190e4 / 0.471e3 * eta ^ 3 + 0.13756e5 / 0.471e3 * eta ^ 2 + 0.3430e4 / 0.157e3 * eta + 0.927e3 / 0.157e3) * ci2 ^ 4 - 0.56e2 / 0.157e3 * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * cos((5 * g + h + f)) - 0.93e2 / 0.65e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((-0.3662e4 / 0.31e2 * eta ^ 3 + 0.3793e4 / 0.31e2 * eta ^ 2 + 0.11162e5 / 0.93e2 * eta - 0.776e3 / 0.93e2 * eta ^ 5 - 0.3902e4 / 0.31e2 * eta ^ 4 + eta ^ 6 + 0.22e2 / 0.31e2) * ci2 ^ 6 + (-0.22e2 / 0.31e2 + 0.776e3 / 0.93e2 * eta ^ 5 + 0.3902e4 / 0.31e2 * eta ^ 4 + 0.3662e4 / 0.31e2 * eta ^ 3 - eta ^ 6 - 0.11162e5 / 0.93e2 * eta - 0.3793e4 / 0.31e2 * eta ^ 2) * ci2 ^ 4 + (0.1394e4 / 0.279e3 * eta ^ 5 - 0.515e3 / 0.93e2 * eta ^ 4 - 0.261e3 / 0.31e2 * eta ^ 3 + 0.1753e4 / 0.93e2 * eta + 0.11e2 / 0.93e2 + 0.11855e5 / 0.558e3 * eta ^ 2 + 0.209e3 / 0.558e3 * eta ^ 6) * ci2 ^ 2 - 0.944e3 / 0.279e3 * (0.1e1 + eta) * eta * (eta ^ 3 + 0.133e3 / 0.59e2 * eta ^ 2 + 0.191e3 / 0.236e3 * eta - 0.45e2 / 0.118e3)) * cos((3 * g + h)) + 0.57e2 / 0.52e2 * ((eta ^ 4 - eta ^ 3 - 0.563e3 / 0.19e2 * eta ^ 2 - 0.5197e4 / 0.95e2 * eta - 0.2796e4 / 0.95e2) * ci2 ^ 6 + (-eta ^ 4 + eta ^ 3 + 0.563e3 / 0.19e2 * eta ^ 2 + 0.5197e4 / 0.95e2 * eta + 0.2796e4 / 0.95e2) * ci2 ^ 4 + (eta ^ 4 / 0.6e1 - 0.89e2 / 0.190e3 * eta ^ 3 - 0.1053e4 / 0.190e3 * eta ^ 2 - 0.5369e4 / 0.570e3 * eta - 0.466e3 / 0.95e2) * ci2 ^ 2 + 0.2e1 / 0.57e2 * eta * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 7 * f)) + 0.15e2 / 0.4e1 * ((eta ^ 5 - 0.4696e4 / 0.325e3 * eta ^ 4 - 0.6362e4 / 0.325e3 * eta ^ 3 + 0.6932e4 / 0.325e3 * eta ^ 2 + 0.6589e4 / 0.325e3 * eta - 0.1284e4 / 0.325e3) * ci2 ^ 6 + (-eta ^ 5 + 0.4696e4 / 0.325e3 * eta ^ 4 + 0.6362e4 / 0.325e3 * eta ^ 3 - 0.6932e4 / 0.325e3 * eta ^ 2 - 0.6589e4 / 0.325e3 * eta + 0.1284e4 / 0.325e3) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 - 0.3058e4 / 0.975e3 * eta ^ 4 - 0.1509e4 / 0.325e3 * eta ^ 3 + 0.1008e4 / 0.325e3 * eta ^ 2 + 0.6977e4 / 0.1950e4 * eta - 0.214e3 / 0.325e3) * ci2 ^ 2 - 0.18e2 / 0.325e3 * (0.1e1 + eta) * eta * (eta ^ 2 - 0.14e2 / 0.27e2 * eta - 0.37e2 / 0.27e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + f)) - 0.927e3 / 0.260e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.24e2 / 0.103e3 * eta ^ 4 + 0.3430e4 / 0.309e3 * eta ^ 3 + 0.2804e4 / 0.309e3 * eta ^ 2 - 0.7651e4 / 0.309e3 * eta - 0.3756e4 / 0.103e3) * ci2 ^ 6 + (-eta ^ 5 - 0.24e2 / 0.103e3 * eta ^ 4 - 0.3430e4 / 0.309e3 * eta ^ 3 - 0.2804e4 / 0.309e3 * eta ^ 2 + 0.7651e4 / 0.309e3 * eta + 0.3756e4 / 0.103e3) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 + 0.238e3 / 0.927e3 * eta ^ 4 + 0.857e3 / 0.927e3 * eta ^ 3 - 0.344e3 / 0.309e3 * eta ^ 2 - 0.10943e5 / 0.1854e4 * eta - 0.626e3 / 0.103e3) * ci2 ^ 2 - 0.62e2 / 0.927e3 * (eta ^ 3 - 0.227e3 / 0.31e2 * eta ^ 2 - 0.619e3 / 0.31e2 * eta - 0.385e3 / 0.31e2) * eta) * cos((3 * g + h + 5 * f)) - 0.53e2 / 0.26e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * ((eta ^ 6 - 0.2107e4 / 0.530e3 * eta ^ 5 - 0.13611e5 / 0.530e3 * eta ^ 4 - 0.157e3 / 0.53e2 * eta ^ 3 + 0.8708e4 / 0.265e3 * eta ^ 2 + 0.6697e4 / 0.106e3 * eta - 0.2079e4 / 0.530e3) * ci2 ^ 4 + 0.168e3 / 0.265e3 * eta * (eta ^ 4 + 0.9e1 / 0.7e1 * eta ^ 3 - 0.55e2 / 0.21e2 * eta ^ 2 - 0.109e3 / 0.21e2 * eta - 0.20e2 / 0.7e1)) * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * g + h + 4 * f)) - 0.3473e4 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 5 - 0.467e3 / 0.3473e4 * eta ^ 4 - 0.15994e5 / 0.3473e4 * eta ^ 3 - 0.38538e5 / 0.3473e4 * eta ^ 2 - 0.29767e5 / 0.3473e4 * eta - 0.165e3 / 0.151e3) * ci2 ^ 4 + 0.984e3 / 0.3473e4 * (0.1e1 + eta) * eta * (eta ^ 2 + 0.58e2 / 0.41e2 * eta + 0.37e2 / 0.41e2)) * cos((5 * g + h + 3 * f)) + 0.6e1 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((-3 * g - h + 3 * f)) + 0.30e2 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((3 * g + h + 7 * f)) - 0.6e1 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((-g + h + 3 * f)) - 0.30e2 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((g - h + 7 * f)) - 0.1097e4 / 0.260e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (eta ^ 3 + 0.1253e4 / 0.1097e4 * eta ^ 2 - 0.2229e4 / 0.1097e4 * eta - 0.2817e4 / 0.1097e4) * cos((5 * g + h + 9 * f)) - 0.89e2 / 0.260e3 * (eta ^ 3 + 0.85e2 / 0.89e2 * eta ^ 2 - 0.85e2 / 0.89e2 * eta + 0.63e2 / 0.89e2) * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-3 * g + h + f)) - 0.111e3 / 0.260e3 * ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((5 * g + h + 11 * f)) - 0.3e1 / 0.52e2 * ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-3 * g + h + 3 * f)) + 0.111e3 / 0.260e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((3 * g - h + 11 * f)) + 0.3e1 / 0.52e2 * ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-5 * g - h + 3 * f)) - 0.1152e4 / 0.13e2 * (0.1e1 + eta) * ((eta ^ 3 + eta ^ 2 / 0.3e1 - 0.29e2 / 0.24e2 * eta - 0.31e2 / 0.24e2) * ci2 ^ 6 + (-eta ^ 3 - eta ^ 2 / 0.3e1 + 0.29e2 / 0.24e2 * eta + 0.31e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 + eta ^ 2 / 0.60e2 - 0.41e2 / 0.120e3 * eta - 0.37e2 / 0.120e3) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.40e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * g + h + 4 * f)) - 0.576e3 / 0.13e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * ((eta ^ 3 - eta ^ 2 / 0.6e1 - 0.13e2 / 0.12e2 * eta + 0.7e1 / 0.12e2) * ci2 ^ 6 + (-eta ^ 3 + eta ^ 2 / 0.6e1 + 0.13e2 / 0.12e2 * eta - 0.7e1 / 0.12e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 - 0.2e1 / 0.15e2 * eta ^ 2 - 0.5e1 / 0.12e2 * eta + 0.1e1 / 0.60e2) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.20e2) * sqrt(-eta ^ 2 + 0.1e1) * sin((g - h)) - 0.66e2 / 0.13e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * ((eta ^ 2 + 0.8e1 / 0.11e2 * eta - 0.7e1 / 0.11e2) * (eta - 0.1e1) * ci2 ^ 6 + (-eta ^ 3 + 0.3e1 / 0.11e2 * eta ^ 2 + 0.15e2 / 0.11e2 * eta - 0.7e1 / 0.11e2) * ci2 ^ 4 + (eta ^ 3 / 0.5e1 - eta ^ 2 / 0.5e1 - 0.31e2 / 0.55e2 * eta - 0.1e1 / 0.55e2) * ci2 ^ 2 + 0.4e1 / 0.55e2 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * sin((-g + h + f)) - 0.948e3 / 0.13e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * ((eta ^ 4 + 0.4e1 / 0.79e2 * eta ^ 3 - 0.324e3 / 0.79e2 * eta ^ 2 - 0.276e3 / 0.79e2 * eta - 0.43e2 / 0.79e2) * ci2 ^ 6 + (-eta ^ 4 - 0.4e1 / 0.79e2 * eta ^ 3 + 0.324e3 / 0.79e2 * eta ^ 2 + 0.276e3 / 0.79e2 * eta + 0.43e2 / 0.79e2) * ci2 ^ 4 + (eta ^ 4 / 0.5e1 + 0.144e3 / 0.395e3 * eta ^ 3 - 0.32e2 / 0.395e3 * eta ^ 2 - 0.64e2 / 0.395e3 * eta + 0.17e2 / 0.395e3) * ci2 ^ 2 - 0.14e2 / 0.79e2 * (0.1e1 + eta) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1)) * sin((3 * g + h + f)) + 0.67e2 / 0.260e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.14e2 / 0.67e2 * eta - 0.729e3 / 0.67e2) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g - h + 10 * f)) - 0.7e1 / 0.20e2 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (eta ^ 3 + 0.15e2 / 0.13e2 * eta ^ 2 - 0.97e2 / 0.13e2 * eta - 0.729e3 / 0.91e2) * cos((5 * g + h + 10 * f)) + 0.27e2 / 0.260e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta + 0.5e1 / 0.3e1) * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * cos((-5 * g - h + 2 * f)) - 0.3e1 / 0.260e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta ^ 3 - eta ^ 2 - 0.21e2 * eta - 0.15e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-3 * g + h + 2 * f)) + 0.6e1 / 0.65e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((3 * g + h + 10 * f)) - 0.6e1 / 0.65e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g - h + 10 * f)) + 0.92e2 / 0.13e2 * (0.1e1 + eta) * ((eta ^ 4 - 0.28e2 / 0.23e2 * eta ^ 3 + 0.76e2 / 0.23e2 * eta ^ 2 - 0.52e2 / 0.23e2 * eta - 0.291e3 / 0.23e2) * ci2 ^ 6 + (-eta ^ 4 + 0.28e2 / 0.23e2 * eta ^ 3 - 0.76e2 / 0.23e2 * eta ^ 2 + 0.52e2 / 0.23e2 * eta + 0.291e3 / 0.23e2) * ci2 ^ 4 + (eta ^ 4 / 0.5e1 + 0.64e2 / 0.115e3 * eta ^ 3 + 0.224e3 / 0.115e3 * eta ^ 2 - 0.176e3 / 0.115e3 * eta - 0.471e3 / 0.115e3) * ci2 ^ 2 - 0.2e1 / 0.5e1 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sin((g - h + 3 * f)) - 0.57e2 / 0.65e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.6e1 / 0.19e2 * eta - 0.72e2 / 0.19e2) * ci2 ^ 4 + (-eta ^ 2 - 0.6e1 / 0.19e2 * eta + 0.72e2 / 0.19e2) * ci2 ^ 2 + 0.23e2 / 0.114e3 * eta ^ 2 + 0.5e1 / 0.57e2 * eta - 0.12e2 / 0.19e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((-3 * g - h + 4 * f)) - 0.9e1 / 0.260e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta + 0.52e2 / 0.3e1) * (eta - 0.1e1) ^ 4 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-3 * g - h + 5 * f)) + 0.9e1 / 0.260e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta + 0.52e2 / 0.3e1) * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g + h + 5 * f)) - 0.21e2 / 0.52e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta + 0.116e3 / 0.35e2) * (eta - 0.1e1) ^ 4 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g - h + 9 * f)) + 0.81e2 / 0.130e3 * ((eta ^ 3 + 0.475e3 / 0.27e2 * eta ^ 2 - 0.1439e4 / 0.81e2 * eta - 0.51e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 - 0.950e3 / 0.27e2 * eta ^ 2 + 0.2878e4 / 0.81e2 * eta + 0.102e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 + 0.1663e4 / 0.81e2 * eta ^ 2 - 0.1990e4 / 0.81e2 * eta - 0.187e3 / 0.3e1) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 - 0.238e3 / 0.81e2 * eta ^ 2 + 0.551e3 / 0.81e2 * eta + 0.34e2 / 0.3e1) * ci2 ^ 2 + eta ^ 3 / 0.36e2 + 0.7e1 / 0.81e2 * eta ^ 2 - 0.235e3 / 0.324e3 * eta - 0.17e2 / 0.18e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * cos((-g - h + 5 * f)) - 0.71e2 / 0.52e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.65813e5 / 0.355e3 * eta ^ 3 - 0.139911e6 / 0.355e3 * eta ^ 2 - 0.19729e5 / 0.355e3 * eta + 0.92141e5 / 0.355e3 * eta ^ 5 + 0.131941e6 / 0.355e3 * eta ^ 4 - 0.28693e5 / 0.355e3 * eta ^ 6 + 0.26004e5 / 0.355e3 + eta ^ 8 - 0.20487e5 / 0.355e3 * eta ^ 7) * ci2 ^ 6 + (-0.26004e5 / 0.355e3 - 0.92141e5 / 0.355e3 * eta ^ 5 - 0.131941e6 / 0.355e3 * eta ^ 4 + 0.65813e5 / 0.355e3 * eta ^ 3 + 0.28693e5 / 0.355e3 * eta ^ 6 + 0.19729e5 / 0.355e3 * eta - eta ^ 8 + 0.139911e6 / 0.355e3 * eta ^ 2 + 0.20487e5 / 0.355e3 * eta ^ 7) * ci2 ^ 4 + (0.37829e5 / 0.2130e4 * eta ^ 5 + 0.8299e4 / 0.142e3 * eta ^ 4 + 0.1553e4 / 0.710e3 * eta ^ 3 + 0.2941e4 / 0.710e3 * eta + eta ^ 8 / 0.6e1 + 0.4334e4 / 0.355e3 - 0.20349e5 / 0.710e3 * eta ^ 2 - 0.8293e4 / 0.710e3 * eta ^ 7 - 0.19927e5 / 0.710e3 * eta ^ 6) * ci2 ^ 2 + 0.124e3 / 0.1065e4 * (0.1e1 + eta) * eta * (eta ^ 5 + 0.1741e4 / 0.31e2 * eta ^ 4 + 0.2844e4 / 0.31e2 * eta ^ 3 - 0.1036e4 / 0.31e2 * eta ^ 2 - 0.4075e4 / 0.31e2 * eta - 0.2241e4 / 0.31e2)) * cos((3 * g + h + 3 * f)) + 0.729e3 / 0.130e3 * ((-0.517e3 / 0.27e2 + 0.2e1 * eta + 0.3974e4 / 0.729e3 * eta ^ 5 - 0.1735e4 / 0.243e3 * eta ^ 4 - 0.632e3 / 0.243e3 * eta ^ 3 + 0.21395e5 / 0.729e3 * eta ^ 2 + eta ^ 6) * ci2 ^ 8 + (0.1264e4 / 0.243e3 * eta ^ 3 - 0.42790e5 / 0.729e3 * eta ^ 2 - 0.4e1 * eta - 0.7948e4 / 0.729e3 * eta ^ 5 + 0.3470e4 / 0.243e3 * eta ^ 4 - 0.2e1 * eta ^ 6 + 0.1034e4 / 0.27e2) * ci2 ^ 6 + (-0.5687e4 / 0.243e3 + 0.1738e4 / 0.243e3 * eta ^ 5 - 0.4391e4 / 0.729e3 * eta ^ 4 - 0.248e3 / 0.243e3 * eta ^ 3 + 0.281e3 / 0.243e3 * eta ^ 6 + 0.682e3 / 0.729e3 * eta + 0.2777e4 / 0.81e2 * eta ^ 2) * ci2 ^ 4 + (-0.1240e4 / 0.729e3 * eta ^ 5 - 0.814e3 / 0.729e3 * eta ^ 4 - 0.128e3 / 0.81e2 * eta ^ 3 + 0.776e3 / 0.729e3 * eta + 0.1034e4 / 0.243e3 - 0.3598e4 / 0.729e3 * eta ^ 2 - 0.38e2 / 0.243e3 * eta ^ 6) * ci2 ^ 2 + 0.328e3 / 0.729e3 * eta ^ 3 + 0.461e3 / 0.1458e4 * eta ^ 2 + 0.86e2 / 0.729e3 * eta ^ 5 + 0.461e3 / 0.1458e4 * eta ^ 4 - 0.517e3 / 0.1458e4 - 0.22e2 / 0.81e2 * eta - 0.5e1 / 0.1458e4 * eta ^ 6) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-g - h + 2 * f)) - 0.81e2 / 0.130e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * ((-0.51e2 - 0.5678e4 / 0.81e2 * eta + eta ^ 4 + 0.442e3 / 0.27e2 * eta ^ 3 - 0.590e3 / 0.81e2 * eta ^ 2) * ci2 ^ 8 + (-0.884e3 / 0.27e2 * eta ^ 3 + 0.1180e4 / 0.81e2 * eta ^ 2 + 0.11356e5 / 0.81e2 * eta - 0.2e1 * eta ^ 4 + 0.102e3) * ci2 ^ 6 + (-0.187e3 / 0.3e1 + 0.4e1 / 0.3e1 * eta ^ 4 + 0.1531e4 / 0.81e2 * eta ^ 3 - 0.7171e4 / 0.81e2 * eta - 0.115e3 / 0.9e1 * eta ^ 2) * ci2 ^ 4 + (-eta ^ 4 / 0.3e1 - 0.205e3 / 0.81e2 * eta ^ 3 + 0.1493e4 / 0.81e2 * eta + 0.34e2 / 0.3e1 + 0.445e3 / 0.81e2 * eta ^ 2) * ci2 ^ 2 + 0.17e2 / 0.324e3 * eta ^ 3 - 0.251e3 / 0.324e3 * eta ^ 2 - 0.17e2 / 0.18e2 + eta ^ 4 / 0.36e2 - 0.61e2 / 0.36e2 * eta) * cos((g + h + 5 * f)) + 0.651e3 / 0.130e3 * (0.1e1 + eta) * ((-0.4707e4 / 0.217e3 - 0.19808e5 / 0.651e3 * eta - 0.3740e4 / 0.651e3 * eta ^ 5 - 0.457e3 / 0.217e3 * eta ^ 4 + 0.4596e4 / 0.217e3 * eta ^ 3 + 0.3737e4 / 0.651e3 * eta ^ 2 + eta ^ 6) * ci2 ^ 8 + (-0.9192e4 / 0.217e3 * eta ^ 3 - 0.7474e4 / 0.651e3 * eta ^ 2 + 0.39616e5 / 0.651e3 * eta + 0.7480e4 / 0.651e3 * eta ^ 5 + 0.914e3 / 0.217e3 * eta ^ 4 - 0.2e1 * eta ^ 6 + 0.9414e4 / 0.217e3) * ci2 ^ 6 + (-0.5753e4 / 0.217e3 - 0.4103e4 / 0.651e3 * eta ^ 5 - 0.425e3 / 0.217e3 * eta ^ 4 + 0.15542e5 / 0.651e3 * eta ^ 3 + 0.4e1 / 0.3e1 * eta ^ 6 - 0.25247e5 / 0.651e3 * eta + 0.2386e4 / 0.651e3 * eta ^ 2) * ci2 ^ 4 + (0.121e3 / 0.217e3 * eta ^ 5 - 0.32e2 / 0.217e3 * eta ^ 4 - 0.1754e4 / 0.651e3 * eta ^ 3 + 0.259e3 / 0.31e2 * eta + 0.1046e4 / 0.217e3 + 0.193e3 / 0.93e2 * eta ^ 2 - eta ^ 6 / 0.3e1) * ci2 ^ 2 + 0.199e3 / 0.3906e4 * eta ^ 3 - 0.4223e4 / 0.7812e4 * eta ^ 2 + 0.395e3 / 0.7812e4 * eta ^ 5 + 0.30e2 / 0.217e3 * eta ^ 4 - 0.2243e4 / 0.2604e4 * eta - 0.523e3 / 0.1302e4 + eta ^ 6 / 0.36e2) * (eta - 0.1e1) * cos((g + h + 3 * f)) - 0.33e2 / 0.26e2 * cos((g + h)) * ((0.272e3 / 0.165e3 * eta ^ 5 - 0.1293e4 / 0.55e2 * eta ^ 4 - 0.3088e4 / 0.165e3 * eta ^ 3 + 0.5407e4 / 0.165e3 * eta ^ 2 - 0.192e3 / 0.55e2 * eta + eta ^ 6 - 0.189e3 / 0.5e1) * ci2 ^ 8 + (-0.544e3 / 0.165e3 * eta ^ 5 + 0.2586e4 / 0.55e2 * eta ^ 4 + 0.6176e4 / 0.165e3 * eta ^ 3 - 0.10814e5 / 0.165e3 * eta ^ 2 + 0.384e3 / 0.55e2 * eta + 0.378e3 / 0.5e1 - 0.2e1 * eta ^ 6) * ci2 ^ 6 + (0.32e2 / 0.15e2 * eta ^ 5 - 0.4357e4 / 0.165e3 * eta ^ 4 - 0.3728e4 / 0.165e3 * eta ^ 3 + 0.191e3 / 0.165e3 * eta ^ 6 + 0.1129e4 / 0.33e2 * eta ^ 2 - 0.112e3 / 0.15e2 * eta - 0.231e3 / 0.5e1) * ci2 ^ 4 + (-0.16e2 / 0.33e2 * eta ^ 5 + 0.478e3 / 0.165e3 * eta ^ 4 + 0.128e3 / 0.33e2 * eta ^ 3 - 0.26e2 / 0.165e3 * eta ^ 6 + 0.42e2 / 0.5e1 - 0.238e3 / 0.165e3 * eta ^ 2 + 0.656e3 / 0.165e3 * eta) * ci2 ^ 2 - (eta ^ 3 - 0.7e1 * eta ^ 2 - 0.33e2 * eta - 0.33e2) * (eta ^ 3 - eta ^ 2 - eta - 0.7e1) / 0.330e3) * sqrt(-eta ^ 2 + 0.1e1) + 0.1233e4 / 0.130e3 * ((-0.1023e4 / 0.137e3 + 0.581e3 / 0.411e3 * eta + 0.3863e4 / 0.411e3 * eta ^ 5 - 0.1295e4 / 0.411e3 * eta ^ 4 - 0.1765e4 / 0.1233e4 * eta ^ 3 + 0.2021e4 / 0.137e3 * eta ^ 2 + 0.8279e4 / 0.1233e4 * eta ^ 6 + eta ^ 7) * ci2 ^ 8 + (0.3530e4 / 0.1233e4 * eta ^ 3 - 0.4042e4 / 0.137e3 * eta ^ 2 - 0.1162e4 / 0.411e3 * eta - 0.7726e4 / 0.411e3 * eta ^ 5 + 0.2590e4 / 0.411e3 * eta ^ 4 - 0.16558e5 / 0.1233e4 * eta ^ 6 + 0.2046e4 / 0.137e3 - 0.2e1 * eta ^ 7) * ci2 ^ 6 + (-0.3751e4 / 0.411e3 + 0.14354e5 / 0.1233e4 * eta ^ 5 - 0.259e3 / 0.137e3 * eta ^ 4 - 0.568e3 / 0.1233e4 * eta ^ 3 + 0.3329e4 / 0.411e3 * eta ^ 6 + 0.10e2 / 0.9e1 * eta + 0.7055e4 / 0.411e3 * eta ^ 2 + 0.4e1 / 0.3e1 * eta ^ 7) * ci2 ^ 4 + (-0.2765e4 / 0.1233e4 * eta ^ 5 - 0.518e3 / 0.411e3 * eta ^ 4 - 0.133e3 / 0.137e3 * eta ^ 3 + 0.373e3 / 0.1233e4 * eta + 0.682e3 / 0.411e3 - 0.992e3 / 0.411e3 * eta ^ 2 - eta ^ 7 / 0.3e1 - 0.1708e4 / 0.1233e4 * eta ^ 6) * ci2 ^ 2 + 0.1375e4 / 0.4932e4 * eta ^ 3 + 0.197e3 / 0.1233e4 * eta ^ 2 + 0.59e2 / 0.548e3 * eta ^ 5 + eta ^ 7 / 0.36e2 + 0.193e3 / 0.822e3 * eta ^ 4 - 0.539e3 / 0.4932e4 * eta - 0.341e3 / 0.2466e4 + 0.76e2 / 0.1233e4 * eta ^ 6) * (eta - 0.1e1) * cos((-g - h + f)) + 0.687e3 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 - 0.1423e4 / 0.229e3 * eta ^ 4 - 0.9958e4 / 0.687e3 * eta ^ 3 + 0.19306e5 / 0.687e3 * eta ^ 2 + 0.20519e5 / 0.687e3 * eta - 0.3311e4 / 0.229e3) * ci2 ^ 4 + 0.88e2 / 0.229e3 * (0.1e1 + eta) * eta * (eta ^ 2 - 0.2e1 / 0.11e2 * eta - 0.83e2 / 0.33e2)) * (eta - 0.1e1) * cos((3 * g - h + 5 * f)) - 0.27e2 / 0.20e2 * ((eta ^ 5 - 0.3064e4 / 0.117e3 * eta ^ 4 + 0.54e2 / 0.13e2 * eta ^ 3 + 0.8500e4 / 0.117e3 * eta ^ 2 - 0.1187e4 / 0.117e3 * eta - 0.428e3 / 0.39e2) * ci2 ^ 6 + (-eta ^ 5 + 0.3064e4 / 0.117e3 * eta ^ 4 - 0.54e2 / 0.13e2 * eta ^ 3 - 0.8500e4 / 0.117e3 * eta ^ 2 + 0.1187e4 / 0.117e3 * eta + 0.428e3 / 0.39e2) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 - 0.1922e4 / 0.351e3 * eta ^ 4 + 0.41e2 / 0.351e3 * eta ^ 3 + 0.1592e4 / 0.117e3 * eta ^ 2 - 0.799e3 / 0.702e3 * eta - 0.214e3 / 0.117e3) * ci2 ^ 2 - 0.22e2 / 0.351e3 * (eta ^ 3 - 0.47e2 / 0.11e2 * eta ^ 2 - 0.103e3 / 0.11e2 * eta - 0.37e2 / 0.11e2) * eta) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-g + h + f)) - 0.9e1 / 0.52e2 * ((eta ^ 3 - 0.322e3 / 0.15e2 * eta ^ 2 - 0.891e3 / 0.5e1 * eta - 0.932e3 / 0.5e1) * ci2 ^ 6 + (-eta ^ 3 + 0.322e3 / 0.15e2 * eta ^ 2 + 0.891e3 / 0.5e1 * eta + 0.932e3 / 0.5e1) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 - 0.247e3 / 0.45e2 * eta ^ 2 - 0.569e3 / 0.18e2 * eta - 0.466e3 / 0.15e2) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.2e1 / 0.9e1 * eta) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((g - h + 7 * f)) + 0.99e2 / 0.52e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.568e3 / 0.165e3 * eta ^ 4 + 0.46e2 / 0.33e2 * eta ^ 3 + 0.68e2 / 0.33e2 * eta ^ 2 - 0.11779e5 / 0.165e3 * eta - 0.3756e4 / 0.55e2) * ci2 ^ 6 + (-eta ^ 5 + 0.568e3 / 0.165e3 * eta ^ 4 - 0.46e2 / 0.33e2 * eta ^ 3 - 0.68e2 / 0.33e2 * eta ^ 2 + 0.11779e5 / 0.165e3 * eta + 0.3756e4 / 0.55e2) * ci2 ^ 4 + (eta ^ 5 / 0.6e1 - 0.274e3 / 0.495e3 * eta ^ 4 - 0.799e3 / 0.495e3 * eta ^ 3 - 0.160e3 / 0.33e2 * eta ^ 2 - 0.15071e5 / 0.990e3 * eta - 0.626e3 / 0.55e2) * ci2 ^ 2 - 0.2e1 / 0.33e2 * (eta ^ 2 - 0.46e2 / 0.3e1 * eta - 0.77e2 / 0.3e1) * (0.1e1 + eta) * eta) * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) - 0.593e3 / 0.260e3 * ((eta ^ 6 - 0.1496e4 / 0.593e3 * eta ^ 5 - 0.9999e4 / 0.593e3 * eta ^ 4 - 0.28268e5 / 0.593e3 * eta ^ 3 - 0.39169e5 / 0.593e3 * eta ^ 2 - 0.23404e5 / 0.593e3 * eta - 0.4785e4 / 0.593e3) * ci2 ^ 4 + 0.448e3 / 0.593e3 * (0.1e1 + eta) ^ 2 * eta * (eta ^ 2 + 0.33e2 / 0.28e2 * eta + 0.8e1 / 0.7e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * g + h + 2 * f)) - 0.3513e4 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 5 + 0.1033e4 / 0.1171e4 * eta ^ 4 - 0.4998e4 / 0.1171e4 * eta ^ 3 - 0.20302e5 / 0.3513e4 * eta ^ 2 + 0.2441e4 / 0.3513e4 * eta + 0.4065e4 / 0.1171e4) * ci2 ^ 4 + 0.24e2 / 0.1171e4 * eta * (0.1e1 + eta) ^ 3) * cos((5 * g + h + 7 * f)) + 0.9e1 / 0.130e3 * ((eta ^ 6 - 0.809e3 / 0.18e2 * eta ^ 5 - 0.1213e4 / 0.18e2 * eta ^ 4 + 0.6085e4 / 0.9e1 * eta ^ 3 + 0.14e2 * eta ^ 2 - 0.19985e5 / 0.18e2 * eta + 0.231e3 / 0.2e1) * ci2 ^ 4 + 0.40e2 / 0.9e1 * (eta ^ 4 - eta ^ 3 / 0.5e1 - 0.43e2 / 0.5e1 * eta ^ 2 + 0.11e2 / 0.5e1 * eta + 0.12e2) * eta) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g - h + 4 * f)) - 0.329e3 / 0.65e2 * ((-0.7566e4 / 0.329e3 * eta ^ 3 + 0.1667e4 / 0.329e3 * eta ^ 2 - 0.5904e4 / 0.329e3 * eta + 0.838e3 / 0.329e3 * eta ^ 5 - 0.5592e4 / 0.329e3 * eta ^ 4 + eta ^ 6 - 0.9372e4 / 0.329e3) * ci2 ^ 6 + (0.9372e4 / 0.329e3 - 0.838e3 / 0.329e3 * eta ^ 5 + 0.5592e4 / 0.329e3 * eta ^ 4 + 0.7566e4 / 0.329e3 * eta ^ 3 - eta ^ 6 + 0.5904e4 / 0.329e3 * eta - 0.1667e4 / 0.329e3 * eta ^ 2) * ci2 ^ 4 + (0.303e3 / 0.329e3 * eta ^ 5 - 0.656e3 / 0.329e3 * eta ^ 4 - 0.1853e4 / 0.329e3 * eta ^ 3 - 0.1858e4 / 0.329e3 * eta - 0.1562e4 / 0.329e3 - 0.2627e4 / 0.658e3 * eta ^ 2 + 0.135e3 / 0.658e3 * eta ^ 6) * ci2 ^ 2 - 0.80e2 / 0.329e3 * (0.1e1 + eta) * eta * (eta ^ 3 + 0.2e1 * eta ^ 2 - 0.81e2 / 0.20e2 * eta - 0.31e2 / 0.5e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((g - h + 4 * f)) - 0.253e3 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.1139e4 / 0.253e3 * eta ^ 3 + 0.3177e4 / 0.253e3 * eta ^ 2 + 0.2705e4 / 0.253e3 * eta + 0.846e3 / 0.253e3) * ci2 ^ 4 - 0.24e2 / 0.253e3 * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * g + h)) + 0.36e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * ((eta ^ 5 - 0.53e2 / 0.39e2 * eta ^ 4 - 0.212e3 / 0.39e2 * eta ^ 3 + 0.80e2 / 0.39e2 * eta ^ 2 + 0.173e3 / 0.39e2 * eta - 0.43e2 / 0.39e2) * ci2 ^ 6 + (-eta ^ 5 + 0.53e2 / 0.39e2 * eta ^ 4 + 0.212e3 / 0.39e2 * eta ^ 3 - 0.80e2 / 0.39e2 * eta ^ 2 - 0.173e3 / 0.39e2 * eta + 0.43e2 / 0.39e2) * ci2 ^ 4 + (eta ^ 5 / 0.5e1 + 0.23e2 / 0.195e3 * eta ^ 4 - 0.148e3 / 0.195e3 * eta ^ 3 - 0.8e1 / 0.65e2 * eta ^ 2 + 0.47e2 / 0.65e2 * eta + 0.17e2 / 0.195e3) * ci2 ^ 2 - 0.38e2 / 0.195e3 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * sin((g - h + f)) + ((0.9207e4 / 0.130e3 + 0.6702e4 / 0.65e2 * eta + 0.1162e4 / 0.13e2 * eta ^ 5 + 0.1285e4 / 0.13e2 * eta ^ 4 - 0.7518e4 / 0.65e2 * eta ^ 3 - 0.4442e4 / 0.65e2 * eta ^ 2 - 0.682e3 / 0.13e2 * eta ^ 6 - 0.1233e4 / 0.130e3 * eta ^ 8 - 0.3586e4 / 0.65e2 * eta ^ 7) * ci2 ^ 8 + (0.15036e5 / 0.65e2 * eta ^ 3 + 0.8884e4 / 0.65e2 * eta ^ 2 - 0.13404e5 / 0.65e2 * eta - 0.2324e4 / 0.13e2 * eta ^ 5 - 0.2570e4 / 0.13e2 * eta ^ 4 + 0.1364e4 / 0.13e2 * eta ^ 6 - 0.9207e4 / 0.65e2 + 0.1233e4 / 0.65e2 * eta ^ 8 + 0.7172e4 / 0.65e2 * eta ^ 7) * ci2 ^ 6 + (0.11253e5 / 0.130e3 + 0.2369e4 / 0.26e2 * eta ^ 5 + 0.14459e5 / 0.130e3 * eta ^ 4 - 0.16637e5 / 0.130e3 * eta ^ 3 - 0.1685e4 / 0.26e2 * eta ^ 6 + 0.17143e5 / 0.130e3 * eta - 0.822e3 / 0.65e2 * eta ^ 8 - 0.8731e4 / 0.130e3 * eta ^ 2 - 0.8511e4 / 0.130e3 * eta ^ 7) * ci2 ^ 4 + (-0.45e2 / 0.26e2 * eta ^ 5 - 0.1609e4 / 0.130e3 * eta ^ 4 + 0.1601e4 / 0.130e3 * eta ^ 3 - 0.3739e4 / 0.130e3 * eta + 0.411e3 / 0.130e3 * eta ^ 8 - 0.1023e4 / 0.65e2 - 0.153e3 / 0.130e3 * eta ^ 2 + 0.103e3 / 0.10e2 * eta ^ 7 + 0.321e3 / 0.26e2 * eta ^ 6) * ci2 ^ 2 - 0.51e2 / 0.104e3 * eta ^ 3 - 0.137e3 / 0.520e3 * eta ^ 8 + 0.1091e4 / 0.520e3 * eta ^ 2 - 0.777e3 / 0.520e3 * eta ^ 5 - 0.181e3 / 0.520e3 * eta ^ 7 - 0.701e3 / 0.520e3 * eta ^ 4 + 0.341e3 / 0.260e3 + 0.1661e4 / 0.520e3 * eta - 0.231e3 / 0.520e3 * eta ^ 6) * cos((g + h + f)) + 0.27e2 / 0.260e3 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 8 - 0.2e1 * ci2 ^ 6 + 0.11e2 / 0.9e1 * ci2 ^ 4 - 0.2e1 / 0.9e1 * ci2 ^ 2 + 0.1e1 / 0.54e2) * cos((-g - h + 8 * f)) - 0.141e3 / 0.130e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.299e3 / 0.141e3 * eta ^ 2 - 0.1565e4 / 0.141e3 * eta - 0.387e3 / 0.47e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.598e3 / 0.141e3 * eta ^ 2 + 0.3130e4 / 0.141e3 * eta + 0.774e3 / 0.47e2) * ci2 ^ 6 + (0.167e3 / 0.141e3 * eta ^ 3 - 0.421e3 / 0.141e3 * eta ^ 2 - 0.1963e4 / 0.141e3 * eta - 0.473e3 / 0.47e2) * ci2 ^ 4 + (-0.26e2 / 0.141e3 * eta ^ 3 + 0.122e3 / 0.141e3 * eta ^ 2 + 0.398e3 / 0.141e3 * eta + 0.86e2 / 0.47e2) * ci2 ^ 2 + 0.5e1 / 0.846e3 * eta ^ 3 - 0.77e2 / 0.846e3 * eta ^ 2 - 0.23e2 / 0.94e2 * eta - 0.43e2 / 0.282e3) * cos((g + h + 6 * f)) + 0.141e3 / 0.130e3 * ((eta ^ 2 - 0.404e3 / 0.141e3 * eta - 0.387e3 / 0.47e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.808e3 / 0.141e3 * eta + 0.774e3 / 0.47e2) * ci2 ^ 6 + (0.167e3 / 0.141e3 * eta ^ 2 - 0.544e3 / 0.141e3 * eta - 0.473e3 / 0.47e2) * ci2 ^ 4 + (-0.26e2 / 0.141e3 * eta ^ 2 + 0.140e3 / 0.141e3 * eta + 0.86e2 / 0.47e2) * ci2 ^ 2 + 0.5e1 / 0.846e3 * eta ^ 2 - 0.13e2 / 0.141e3 * eta - 0.43e2 / 0.282e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((-g - h + 6 * f)) - 0.99e2 / 0.52e2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 7 - 0.347e3 / 0.1485e4 * eta ^ 6 - 0.13921e5 / 0.495e3 * eta ^ 5 - 0.8527e4 / 0.297e3 * eta ^ 4 + 0.67471e5 / 0.1485e4 * eta ^ 3 + 0.122567e6 / 0.1485e4 * eta ^ 2 + 0.6509e4 / 0.495e3 * eta - 0.427e3 / 0.15e2) * ci2 ^ 4 + 0.256e3 / 0.1485e4 * (0.1e1 + eta) ^ 2 * (eta ^ 3 + 0.9e1 / 0.16e2 * eta ^ 2 - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1) * eta) * cos((5 * g + h + 6 * f)) + 0.21e2 / 0.52e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta + 0.116e3 / 0.35e2) * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((3 * g + h + 9 * f)) + 0.9e1 / 0.26e2 * (0.1e1 + eta) ^ 3 * ((eta + 0.21e2 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta - 0.42e2 / 0.5e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta + 0.77e2 / 0.15e2) * ci2 ^ 4 + (-eta / 0.3e1 - 0.14e2 / 0.15e2) * ci2 ^ 2 + eta / 0.36e2 + 0.7e1 / 0.90e2) * (eta - 0.1e1) ^ 4 * cos((-g - h + 7 * f)) - 0.9e1 / 0.26e2 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * ((eta + 0.21e2 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta - 0.42e2 / 0.5e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta + 0.77e2 / 0.15e2) * ci2 ^ 4 + (-eta / 0.3e1 - 0.14e2 / 0.15e2) * ci2 ^ 2 + eta / 0.36e2 + 0.7e1 / 0.90e2) * cos((g + h + 7 * f)) - 0.651e3 / 0.130e3 * ((-0.4707e4 / 0.217e3 - 0.1583e4 / 0.651e3 * eta + eta ^ 5 - 0.3287e4 / 0.651e3 * eta ^ 4 - 0.580e3 / 0.651e3 * eta ^ 3 + 0.696e3 / 0.31e2 * eta ^ 2) * ci2 ^ 8 + (0.1160e4 / 0.651e3 * eta ^ 3 - 0.1392e4 / 0.31e2 * eta ^ 2 + 0.3166e4 / 0.651e3 * eta - 0.2e1 * eta ^ 5 + 0.6574e4 / 0.651e3 * eta ^ 4 + 0.9414e4 / 0.217e3) * ci2 ^ 6 + (-0.5753e4 / 0.217e3 + 0.4e1 / 0.3e1 * eta ^ 5 - 0.3499e4 / 0.651e3 * eta ^ 4 - 0.136e3 / 0.651e3 * eta ^ 3 - 0.2972e4 / 0.651e3 * eta + 0.16966e5 / 0.651e3 * eta ^ 2) * ci2 ^ 4 + (-eta ^ 5 / 0.3e1 + 0.212e3 / 0.651e3 * eta ^ 4 - 0.148e3 / 0.217e3 * eta ^ 3 + 0.463e3 / 0.217e3 * eta + 0.1046e4 / 0.217e3 - 0.2350e4 / 0.651e3 * eta ^ 2) * ci2 ^ 2 + 0.83e2 / 0.434e3 * eta ^ 3 + 0.338e3 / 0.1953e4 * eta ^ 2 + eta ^ 5 / 0.36e2 + 0.13e2 / 0.186e3 * eta ^ 4 - 0.893e3 / 0.2604e4 * eta - 0.523e3 / 0.1302e4) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-g - h + 3 * f)) + 0.576e3 / 0.13e2 * ((eta ^ 2 + eta / 0.3e1 - 0.31e2 / 0.12e2) * ci2 ^ 6 + (-eta ^ 2 - eta / 0.3e1 + 0.31e2 / 0.12e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 - eta / 0.30e2 - 0.37e2 / 0.60e2) * ci2 ^ 2 + eta / 0.20e2 + 0.1e1 / 0.20e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((g - h + 4 * f)) + 0.1152e4 / 0.13e2 * ((eta ^ 2 + 0.13e2 / 0.12e2 * eta + 0.7e1 / 0.24e2) * ci2 ^ 6 + (-eta ^ 2 - 0.13e2 / 0.12e2 * eta - 0.7e1 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.5e1 + eta / 0.6e1 + 0.1e1 / 0.120e3) * ci2 ^ 2 + eta / 0.40e2 + 0.1e1 / 0.40e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * g + h)) - 0.3e1 / 0.520e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((-3 * g + h + 4 * f)) + 0.107e3 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.159e3 / 0.107e3 * eta ^ 3 - 0.4341e4 / 0.107e3 * eta ^ 2 - 0.693e3 / 0.107e3 * eta + 0.7110e4 / 0.107e3) * ci2 ^ 4 + 0.8e1 / 0.107e3 * eta * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g - h + 8 * f)) + 0.7e1 / 0.65e2 * (0.1e1 + eta) * ((eta ^ 4 + 0.236e3 / 0.7e1 * eta ^ 3 - 0.556e3 / 0.7e1 * eta ^ 2 - 0.5746e4 / 0.7e1 * eta - 0.5121e4 / 0.7e1) * ci2 ^ 6 + (-eta ^ 4 - 0.236e3 / 0.7e1 * eta ^ 3 + 0.556e3 / 0.7e1 * eta ^ 2 + 0.5746e4 / 0.7e1 * eta + 0.5121e4 / 0.7e1) * ci2 ^ 4 + (0.5e1 / 0.14e2 * eta ^ 4 + 0.10e2 / 0.7e1 * eta ^ 3 - 0.734e3 / 0.21e2 * eta ^ 2 - 0.1079e4 / 0.7e1 * eta - 0.1707e4 / 0.14e2) * ci2 ^ 2 + 0.16e2 / 0.7e1 * eta ^ 3 + 0.54e2 / 0.7e1 * eta ^ 2 + 0.38e2 / 0.7e1 * eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((g - h + 6 * f)) - 0.124e3 / 0.13e2 * (0.1e1 + eta) * ((eta ^ 5 - 0.77e2 / 0.31e2 * eta ^ 4 + 0.252e3 / 0.31e2 * eta ^ 3 + 0.256e3 / 0.31e2 * eta ^ 2 - 0.59e2 / 0.31e2 * eta - 0.291e3 / 0.31e2) * ci2 ^ 6 + (-eta ^ 5 + 0.77e2 / 0.31e2 * eta ^ 4 - 0.252e3 / 0.31e2 * eta ^ 3 - 0.256e3 / 0.31e2 * eta ^ 2 + 0.59e2 / 0.31e2 * eta + 0.291e3 / 0.31e2) * ci2 ^ 4 + (eta ^ 5 / 0.5e1 + 0.79e2 / 0.155e3 * eta ^ 4 + 0.444e3 / 0.155e3 * eta ^ 3 + 0.56e2 / 0.155e3 * eta ^ 2 - 0.95e2 / 0.31e2 * eta - 0.471e3 / 0.155e3) * ci2 ^ 2 - 0.78e2 / 0.155e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * sin((3 * g + h + 3 * f)) - 0.363e3 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 + 0.298e3 / 0.363e3 * eta ^ 4 - 0.1842e4 / 0.121e3 * eta ^ 3 - 0.6592e4 / 0.363e3 * eta ^ 2 + 0.1337e4 / 0.121e3 * eta + 0.2370e4 / 0.121e3) * ci2 ^ 4 + 0.8e1 / 0.363e3 * eta * (0.1e1 + eta) ^ 3) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * g + h + 8 * f)) + 0.3e1 / 0.520e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * cos((-5 * g - h + 4 * f)) - 0.501e3 / 0.65e2 * ((eta ^ 4 + 0.206e3 / 0.167e3 * eta ^ 3 - 0.762e3 / 0.167e3 * eta ^ 2 - 0.516e3 / 0.167e3 * eta + 0.381e3 / 0.167e3) * ci2 ^ 6 + (-eta ^ 4 - 0.206e3 / 0.167e3 * eta ^ 3 + 0.762e3 / 0.167e3 * eta ^ 2 + 0.516e3 / 0.167e3 * eta - 0.381e3 / 0.167e3) * ci2 ^ 4 + (0.223e3 / 0.1002e4 * eta ^ 4 + 0.151e3 / 0.501e3 * eta ^ 3 - 0.135e3 / 0.167e3 * eta ^ 2 - 0.302e3 / 0.501e3 * eta + 0.127e3 / 0.334e3) * ci2 ^ 2 - 0.2e1 / 0.501e3 * eta * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-3 * g - h + 2 * f)) + 0.3e1 / 0.104e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g - h + 12 * f)) - 0.3e1 / 0.104e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * g + h + 12 * f)) + 0.213e3 / 0.65e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.30e2 / 0.71e2 * eta ^ 3 - 0.654e3 / 0.71e2 * eta ^ 2 + 0.56e2 / 0.71e2 * eta + 0.381e3 / 0.71e2) * ci2 ^ 6 + (-eta ^ 4 + 0.30e2 / 0.71e2 * eta ^ 3 + 0.654e3 / 0.71e2 * eta ^ 2 - 0.56e2 / 0.71e2 * eta - 0.381e3 / 0.71e2) * ci2 ^ 4 + (0.95e2 / 0.426e3 * eta ^ 4 - 0.5e1 / 0.71e2 * eta ^ 3 - 0.391e3 / 0.213e3 * eta ^ 2 - 0.16e2 / 0.213e3 * eta + 0.127e3 / 0.142e3) * ci2 ^ 2 - 0.2e1 / 0.213e3 * eta * (0.1e1 + eta)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-g + h + 2 * f)) - 0.103e3 / 0.65e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.875e3 / 0.103e3 * eta ^ 4 + 0.564e3 / 0.103e3 * eta ^ 3 - 0.5242e4 / 0.103e3 * eta ^ 2 - 0.9835e4 / 0.103e3 * eta - 0.5121e4 / 0.103e3) * ci2 ^ 6 + (-eta ^ 5 - 0.875e3 / 0.103e3 * eta ^ 4 - 0.564e3 / 0.103e3 * eta ^ 3 + 0.5242e4 / 0.103e3 * eta ^ 2 + 0.9835e4 / 0.103e3 * eta + 0.5121e4 / 0.103e3) * ci2 ^ 4 + (0.143e3 / 0.618e3 * eta ^ 5 + 0.739e3 / 0.618e3 * eta ^ 4 - 0.254e3 / 0.309e3 * eta ^ 3 - 0.3433e4 / 0.309e3 * eta ^ 2 - 0.3521e4 / 0.206e3 * eta - 0.1707e4 / 0.206e3) * ci2 ^ 2 + 0.16e2 / 0.103e3 * (eta + 0.19e2 / 0.8e1) * (0.1e1 + eta) ^ 2 * eta) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g + h + 6 * f)) + 0.711e3 / 0.52e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.11953e5 / 0.1185e4 * eta ^ 3 - 0.13638e5 / 0.395e3 * eta ^ 2 - 0.22631e5 / 0.1185e4 * eta + 0.20759e5 / 0.1185e4 * eta ^ 5 + 0.3872e4 / 0.237e3 * eta ^ 4 + 0.9206e4 / 0.1185e4 * eta ^ 6 - 0.484e3 / 0.1185e4 + eta ^ 7) * ci2 ^ 6 + (0.484e3 / 0.1185e4 - 0.20759e5 / 0.1185e4 * eta ^ 5 - 0.3872e4 / 0.237e3 * eta ^ 4 + 0.11953e5 / 0.1185e4 * eta ^ 3 - 0.9206e4 / 0.1185e4 * eta ^ 6 + 0.22631e5 / 0.1185e4 * eta + 0.13638e5 / 0.395e3 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (0.1553e4 / 0.474e3 * eta ^ 5 + 0.944e3 / 0.395e3 * eta ^ 4 - 0.1257e4 / 0.790e3 * eta ^ 3 - 0.18383e5 / 0.7110e4 * eta - 0.242e3 / 0.3555e4 - 0.5551e4 / 0.1185e4 * eta ^ 2 + eta ^ 7 / 0.6e1 + 0.1139e4 / 0.711e3 * eta ^ 6) * ci2 ^ 2 - 0.4e1 / 0.45e2 * (0.1e1 + eta) * (eta ^ 4 - 0.90e2 / 0.79e2 * eta ^ 3 - 0.350e3 / 0.79e2 * eta ^ 2 + 0.218e3 / 0.79e2 * eta + 0.383e3 / 0.79e2) * eta) * (eta - 0.1e1) * cos((3 * g + h + f)) + 0.29e2 / 0.52e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 6 - 0.2822e4 / 0.145e3 * eta ^ 5 + 0.1859e4 / 0.145e3 * eta ^ 4 + 0.2228e4 / 0.29e2 * eta ^ 3 - 0.353e3 / 0.145e3 * eta ^ 2 - 0.1862e4 / 0.29e2 * eta - 0.759e3 / 0.29e2) * ci2 ^ 4 + 0.216e3 / 0.145e3 * (0.1e1 + eta) * (eta ^ 3 - 0.17e2 / 0.9e1 * eta ^ 2 - 0.7e1 / 0.3e1 * eta + 0.37e2 / 0.9e1) * eta) * cos((3 * g - h + 3 * f)) - 0.1539e4 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.3919e4 / 0.513e3 * eta ^ 3 - 0.3574e4 / 0.513e3 * eta ^ 2 - 0.5143e4 / 0.513e3 * eta - 0.409e3 / 0.513e3 * eta ^ 5 + 0.88e2 / 0.171e3 * eta ^ 4 + 0.550e3 / 0.171e3 * eta ^ 6 - 0.484e3 / 0.513e3 + eta ^ 7) * ci2 ^ 6 + (0.484e3 / 0.513e3 + 0.409e3 / 0.513e3 * eta ^ 5 - 0.88e2 / 0.171e3 * eta ^ 4 - 0.3919e4 / 0.513e3 * eta ^ 3 - 0.550e3 / 0.171e3 * eta ^ 6 + 0.5143e4 / 0.513e3 * eta + 0.3574e4 / 0.513e3 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.5233e4 / 0.3078e4 * eta ^ 5 - 0.1348e4 / 0.513e3 * eta ^ 4 + 0.3205e4 / 0.1026e4 * eta ^ 3 - 0.895e3 / 0.3078e4 * eta - 0.242e3 / 0.1539e4 + 0.4625e4 / 0.1539e4 * eta ^ 2 + eta ^ 7 / 0.6e1 + 0.1213e4 / 0.1539e4 * eta ^ 6) * ci2 ^ 2 - 0.52e2 / 0.513e3 * eta * (eta ^ 5 - 0.307e3 / 0.39e2 * eta ^ 4 - 0.628e3 / 0.39e2 * eta ^ 3 + 0.92e2 / 0.13e2 * eta ^ 2 + 0.319e3 / 0.13e2 * eta + 0.383e3 / 0.39e2)) * cos((g - h + f)) - 0.409e3 / 0.65e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((0.19651e5 / 0.409e3 * eta ^ 3 + 0.4523e4 / 0.409e3 * eta ^ 2 - 0.9261e4 / 0.409e3 * eta - 0.10799e5 / 0.409e3 * eta ^ 5 - 0.5715e4 / 0.409e3 * eta ^ 4 - 0.215e3 / 0.409e3 * eta ^ 6 + 0.2079e4 / 0.409e3 + eta ^ 7) * ci2 ^ 6 + (-0.2079e4 / 0.409e3 + 0.10799e5 / 0.409e3 * eta ^ 5 + 0.5715e4 / 0.409e3 * eta ^ 4 - 0.19651e5 / 0.409e3 * eta ^ 3 + 0.215e3 / 0.409e3 * eta ^ 6 + 0.9261e4 / 0.409e3 * eta - 0.4523e4 / 0.409e3 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.3573e4 / 0.818e3 * eta ^ 5 - 0.2849e4 / 0.818e3 * eta ^ 4 + 0.7921e4 / 0.818e3 * eta ^ 3 - 0.1023e4 / 0.818e3 * eta + 0.693e3 / 0.818e3 + 0.5529e4 / 0.818e3 * eta ^ 2 + 0.163e3 / 0.818e3 * eta ^ 7 + 0.339e3 / 0.818e3 * eta ^ 6) * ci2 ^ 2 - 0.112e3 / 0.409e3 * (0.1e1 + eta) * eta * (eta ^ 4 + 0.11e2 / 0.28e2 * eta ^ 3 - 0.16e2 / 0.7e1 * eta ^ 2 + 0.89e2 / 0.28e2 * eta + 0.43e2 / 0.7e1)) * cos((g - h + 2 * f)) - 0.4527e4 / 0.260e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 6 - 0.3002e4 / 0.4527e4 * eta ^ 5 - 0.25891e5 / 0.4527e4 * eta ^ 4 - 0.12164e5 / 0.4527e4 * eta ^ 3 + 0.8459e4 / 0.1509e4 * eta ^ 2 + 0.30878e5 / 0.4527e4 * eta - 0.3311e4 / 0.1509e4) * ci2 ^ 4 + 0.520e3 / 0.4527e4 * (0.1e1 + eta) * eta * (eta ^ 3 + 0.3e1 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2)) * cos((5 * g + h + 5 * f)) + 0.9e1 / 0.260e3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 7 - 0.571e3 / 0.9e1 * eta ^ 6 + 0.281e3 / 0.9e1 * eta ^ 5 + 0.189e3 * eta ^ 4 - 0.1565e4 / 0.9e1 * eta ^ 3 - 0.1747e4 / 0.3e1 * eta ^ 2 - 0.7429e4 / 0.9e1 * eta - 0.1595e4 / 0.3e1) * ci2 ^ 4 + 0.64e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * eta * (eta ^ 3 - 0.5e1 / 0.4e1 * eta ^ 2 - eta / 0.4e1 + 0.8e1)) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g - h + 2 * f)) + 0.1049e4 / 0.65e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.10771e5 / 0.1049e4 * eta ^ 3 + 0.33845e5 / 0.1049e4 * eta ^ 2 + 0.16011e5 / 0.1049e4 * eta - 0.18103e5 / 0.1049e4 * eta ^ 5 - 0.25933e5 / 0.1049e4 * eta ^ 4 + 0.919e3 / 0.1049e4 * eta ^ 6 - 0.2079e4 / 0.1049e4 + eta ^ 7) * ci2 ^ 6 + (0.2079e4 / 0.1049e4 + 0.18103e5 / 0.1049e4 * eta ^ 5 + 0.25933e5 / 0.1049e4 * eta ^ 4 - 0.10771e5 / 0.1049e4 * eta ^ 3 - 0.919e3 / 0.1049e4 * eta ^ 6 - 0.16011e5 / 0.1049e4 * eta - 0.33845e5 / 0.1049e4 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.5069e4 / 0.2098e4 * eta ^ 5 - 0.10655e5 / 0.2098e4 * eta ^ 4 - 0.1343e4 / 0.2098e4 * eta ^ 3 + 0.3273e4 / 0.2098e4 * eta - 0.693e3 / 0.2098e4 + 0.6375e4 / 0.2098e4 * eta ^ 2 + 0.419e3 / 0.2098e4 * eta ^ 7 + 0.1261e4 / 0.2098e4 * eta ^ 6) * ci2 ^ 2 - 0.240e3 / 0.1049e4 * (eta ^ 4 + 0.67e2 / 0.60e2 * eta ^ 3 - 0.2e1 * eta ^ 2 - 0.77e2 / 0.20e2 * eta - 0.43e2 / 0.15e2) * (0.1e1 + eta) * eta) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * g + h + 2 * f)) + 0.3e1 / 0.260e3 * ((0.32879e5 * eta ^ 3 - 0.7670e4 / 0.3e1 * eta ^ 2 - 0.9109e4 / 0.3e1 * eta - 0.17371e5 / 0.3e1 * eta ^ 5 + 0.65696e5 / 0.3e1 * eta ^ 4 - 0.11422e5 / 0.3e1 * eta ^ 6 + 0.8668e4 + eta ^ 7) * ci2 ^ 6 + (-0.8668e4 + 0.17371e5 / 0.3e1 * eta ^ 5 - 0.65696e5 / 0.3e1 * eta ^ 4 - 0.32879e5 * eta ^ 3 + 0.11422e5 / 0.3e1 * eta ^ 6 + 0.9109e4 / 0.3e1 * eta + 0.7670e4 / 0.3e1 * eta ^ 2 - eta ^ 7) * ci2 ^ 4 + (-0.33251e5 / 0.18e2 * eta ^ 5 + 0.2672e4 * eta ^ 4 + 0.14245e5 / 0.2e1 * eta ^ 3 + 0.6481e4 / 0.6e1 * eta + 0.4334e4 / 0.3e1 + 0.9107e4 / 0.3e1 * eta ^ 2 + eta ^ 7 / 0.6e1 - 0.6947e4 / 0.9e1 * eta ^ 6) * ci2 ^ 2 - 0.1072e4 / 0.3e1 * eta ^ 3 - 0.16508e5 / 0.9e1 * eta ^ 2 + 0.1180e4 / 0.3e1 * eta ^ 5 + 0.864e3 * eta ^ 4 - 0.996e3 * eta + 0.92e2 / 0.9e1 * eta ^ 6) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - h + 3 * f)) - 0.27e2 / 0.260e3 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 8 - 0.2e1 * ci2 ^ 6 + 0.11e2 / 0.9e1 * ci2 ^ 4 - 0.2e1 / 0.9e1 * ci2 ^ 2 + 0.1e1 / 0.54e2) * cos((g + h + 8 * f)) + 0.549e3 / 0.130e3 * ((0.1044e4 / 0.61e2 + 0.2495e4 / 0.549e3 * eta + eta ^ 4 - 0.347e3 / 0.549e3 * eta ^ 3 - 0.6149e4 / 0.549e3 * eta ^ 2) * ci2 ^ 8 + (0.694e3 / 0.549e3 * eta ^ 3 + 0.12298e5 / 0.549e3 * eta ^ 2 - 0.4990e4 / 0.549e3 * eta - 0.2e1 * eta ^ 4 - 0.2088e4 / 0.61e2) * ci2 ^ 6 + (0.1276e4 / 0.61e2 + 0.71e2 / 0.61e2 * eta ^ 4 - 0.57e2 / 0.61e2 * eta ^ 3 + 0.1223e4 / 0.183e3 * eta - 0.7127e4 / 0.549e3 * eta ^ 2) * ci2 ^ 4 + (-0.10e2 / 0.61e2 * eta ^ 4 + 0.166e3 / 0.549e3 * eta ^ 3 - 0.1174e4 / 0.549e3 * eta - 0.232e3 / 0.61e2 + 0.326e3 / 0.183e3 * eta ^ 2) * ci2 ^ 2 - 0.49e2 / 0.1098e4 * eta ^ 3 - 0.67e2 / 0.1098e4 * eta ^ 2 - eta ^ 4 / 0.1098e4 + 0.33e2 / 0.122e3 * eta + 0.58e2 / 0.183e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-g - h + 4 * f)) - 0.549e3 / 0.130e3 * (0.1e1 + eta) * ((0.1044e4 / 0.61e2 + 0.12917e5 / 0.549e3 * eta + eta ^ 5 - 0.320e3 / 0.549e3 * eta ^ 4 - 0.618e3 / 0.61e2 * eta ^ 3 - 0.292e3 / 0.549e3 * eta ^ 2) * ci2 ^ 8 + (0.1236e4 / 0.61e2 * eta ^ 3 + 0.584e3 / 0.549e3 * eta ^ 2 - 0.25834e5 / 0.549e3 * eta - 0.2e1 * eta ^ 5 + 0.640e3 / 0.549e3 * eta ^ 4 - 0.2088e4 / 0.61e2) * ci2 ^ 6 + (0.1276e4 / 0.61e2 + 0.71e2 / 0.61e2 * eta ^ 5 - 0.160e3 / 0.183e3 * eta ^ 4 - 0.6326e4 / 0.549e3 * eta ^ 3 + 0.1823e4 / 0.61e2 * eta + 0.692e3 / 0.549e3 * eta ^ 2) * ci2 ^ 4 + (-0.10e2 / 0.61e2 * eta ^ 5 + 0.160e3 / 0.549e3 * eta ^ 4 + 0.764e3 / 0.549e3 * eta ^ 3 - 0.3490e4 / 0.549e3 * eta - 0.232e3 / 0.61e2 - 0.328e3 / 0.183e3 * eta ^ 2) * ci2 ^ 2 - 0.13e2 / 0.549e3 * eta ^ 3 + 0.62e2 / 0.183e3 * eta ^ 2 - eta ^ 5 / 0.1098e4 - 0.8e1 / 0.183e3 * eta ^ 4 + 0.683e3 / 0.1098e4 * eta + 0.58e2 / 0.183e3) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((g + h + 4 * f)) + 0.809e3 / 0.260e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.144e3 / 0.809e3 * eta - 0.2817e4 / 0.809e3) * (eta - 0.1e1) ^ 3 * cos((3 * g - h + 9 * f)) + 0.29e2 / 0.20e2 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta ^ 2 + 0.368e3 / 0.377e3 * eta + 0.63e2 / 0.377e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * cos((-5 * g - h + f)) - 0.729e3 / 0.130e3 * ((-0.517e3 / 0.27e2 - 0.257e3 / 0.9e1 * eta - 0.7859e4 / 0.729e3 * eta ^ 5 - 0.7349e4 / 0.729e3 * eta ^ 4 + 0.2195e4 / 0.81e2 * eta ^ 3 + 0.287e3 / 0.27e2 * eta ^ 2 + 0.3767e4 / 0.729e3 * eta ^ 6 + eta ^ 7) * ci2 ^ 8 + (-0.4390e4 / 0.81e2 * eta ^ 3 - 0.574e3 / 0.27e2 * eta ^ 2 + 0.514e3 / 0.9e1 * eta + 0.15718e5 / 0.729e3 * eta ^ 5 + 0.14698e5 / 0.729e3 * eta ^ 4 - 0.7534e4 / 0.729e3 * eta ^ 6 + 0.1034e4 / 0.27e2 - 0.2e1 * eta ^ 7) * ci2 ^ 6 + (-0.5687e4 / 0.243e3 - 0.7877e4 / 0.729e3 * eta ^ 5 - 0.8167e4 / 0.729e3 * eta ^ 4 + 0.7331e4 / 0.243e3 * eta ^ 3 + 0.553e3 / 0.81e2 * eta ^ 6 - 0.26543e5 / 0.729e3 * eta + 0.6683e4 / 0.729e3 * eta ^ 2 + 0.281e3 / 0.243e3 * eta ^ 7) * ci2 ^ 4 + (0.2e1 / 0.81e2 * eta ^ 5 + 0.818e3 / 0.729e3 * eta ^ 4 - 0.746e3 / 0.243e3 * eta ^ 3 + 0.5726e4 / 0.729e3 * eta + 0.1034e4 / 0.243e3 + 0.1066e4 / 0.729e3 * eta ^ 2 - 0.38e2 / 0.243e3 * eta ^ 7 - 0.1210e4 / 0.729e3 * eta ^ 6) * ci2 ^ 2 + 0.85e2 / 0.1458e4 * eta ^ 3 - 0.839e3 / 0.1458e4 * eta ^ 2 + 0.341e3 / 0.1458e4 * eta ^ 5 - 0.5e1 / 0.1458e4 * eta ^ 7 + 0.317e3 / 0.1458e4 * eta ^ 4 - 0.517e3 / 0.1458e4 - 0.407e3 / 0.486e3 * eta + 0.175e3 / 0.1458e4 * eta ^ 6) * sqrt(-eta ^ 2 + 0.1e1) * cos((g + h + 2 * f)) + 0.24e2 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((-g + h + 2 * f)) + 0.264e3 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((g - h + 6 * f)) - 0.24e2 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((-3 * g - h + 2 * f)) - 0.264e3 / 0.13e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * eta * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((3 * g + h + 6 * f))) / (0.1e1 + eta) ^ 2 / a ^ 4 / eta ^ 12];
D3 = [0.34e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * J ^ 2 * ((-0.3e1 / 0.272e3 * ci2 ^ 2 * (eta ^ 2 + 76 * eta + 103) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 3 * f + 2 * g)) + 0.9e1 / 0.272e3 * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 5 * f + 2 * g)) + 0.15e2 / 0.34e2 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * sin((-h + 3 * f + 2 * g)) + ((-0.3e1 / 0.272e3 * (eta ^ 2) - 0.57e2 / 0.68e2 * eta - 0.309e3 / 0.272e3) * ci2 ^ 4 + (0.381e3 / 0.272e3 + 0.3e1 / 0.272e3 * (eta ^ 2) + 0.75e2 / 0.68e2 * eta) * ci2 ^ 2 - (eta ^ 2) / 0.272e3 - 0.31e2 / 0.68e2 * eta - 0.151e3 / 0.272e3) * cos((h + 3 * f + 2 * g)) - 0.45e2 / 0.272e3 * ci2 ^ 2 * (ci2 - 0.1e1) * ((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * (ci2 + 0.1e1) * cos((-h + f + 2 * g)) - 0.9e1 / 0.272e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * (eta - 1) * cos((-h - 2 * g + f)) + 0.9e1 / 0.272e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * (eta - 1) * cos((h + 5 * f + 2 * g)) + 0.15e2 / 0.34e2 * (1 + eta) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + 3 * f + 2 * g)) - 0.9e1 / 0.34e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * cos((h + 3 * f + 4 * g)) - 0.3e1 / 0.34e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * cos((h + 5 * f + 4 * g)) + 0.45e2 / 0.34e2 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * sin((-h + f + 2 * g)) + ((-0.45e2 / 0.272e3 * (eta ^ 2) + 0.9e1 / 0.68e2 * eta + 0.117e3 / 0.272e3) * ci2 ^ 4 + (-0.189e3 / 0.272e3 + 0.45e2 / 0.272e3 * (eta ^ 2) - 0.27e2 / 0.68e2 * eta) * ci2 ^ 2 - 0.15e2 / 0.272e3 * (eta ^ 2) + 0.15e2 / 0.68e2 * eta + 0.87e2 / 0.272e3) * cos((h + f + 2 * g)) - 0.18e2 / 0.17e2 * (1 + eta) * (-0.5e1 / 0.4e1 * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((h - 2 * g + f)) / 0.32e2 + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.12e2) * cos((-h + f)) + (-Delta * ci2 ^ 2 / 0.2e1 + Delta / 0.4e1) * sin((-h + f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.12e2) * cos((h + f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * sin((h + f)) / 0.2e1)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (0.15e2 / 0.34e2 * ci2 ^ 2 * ((eta ^ 2) - 0.11e2 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g + 2 * f)) + 0.15e2 / 0.68e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta + 0.19e2 / 0.10e2) * (eta - 1) * cos((-h + 2 * g + 4 * f)) + (0.45e2 / 0.34e2 * Delta * ci2 ^ 4 - 0.45e2 / 0.34e2 * Delta * ci2 ^ 2) * sin((-h + 2 * g + 2 * f)) + ((0.15e2 / 0.34e2 * (eta ^ 2) - 0.33e2 / 0.34e2) * ci2 ^ 4 + (0.39e2 / 0.34e2 - 0.21e2 / 0.34e2 * (eta ^ 2)) * ci2 ^ 2 + 0.9e1 / 0.34e2 * (eta ^ 2) - 0.15e2 / 0.34e2) * cos((h + 2 * g + 2 * f)) + 0.15e2 / 0.68e2 * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.23e2 / 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.9e1 / 0.10e2) * (eta - 1) * cos((h + 2 * g + 4 * f)) + 0.9e1 / 0.68e2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 2 * f + 4 * g)) + 0.3e1 / 0.34e2 * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * f + 4 * g)) + (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 6 * f + 4 * g)) / 0.68e2 + 0.45e2 / 0.34e2 * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + 2 * g + 2 * f)) + 0.9e1 / 0.34e2 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * cos((-h + 2 * f)) - 0.33e2 / 0.68e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (eta + 0.31e2 / 0.22e2) * cos((-h + 2 * g)) + 0.9e1 / 0.34e2 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * cos((h + 2 * f)) - 0.33e2 / 0.68e2 * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 4 + (-0.17e2 / 0.11e2 * eta - 0.43e2 / 0.22e2) * ci2 ^ 2 + 0.23e2 / 0.33e2 * eta + 0.5e1 / 0.6e1) * (eta - 1) * cos((h + 2 * g)) + cos(h) * ((-0.59e2 / 0.34e2 + (eta ^ 2)) * ci2 ^ 4 + (-0.43e2 / 0.34e2 * (eta ^ 2) + 0.2e1 + 0.9e1 / 0.17e2 * Delta ^ 2) * ci2 ^ 2 - 0.9e1 / 0.34e2 * Delta ^ 2 - 0.37e2 / 0.136e3 + 0.7e1 / 0.34e2 * (eta ^ 2)))) / a ^ 5 / ci2 / (eta ^ 8) / (1 + eta) 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * (-(1 + eta) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta - 1) * sin((-h + 3 * f - 2 * g)) / 0.16e2 + (0.5e1 / 0.2e1 * Delta * ci2 ^ 4 - 0.5e1 / 0.2e1 * Delta * ci2 ^ 2) * cos((-h + 5 * f + 2 * g)) - 0.5e1 / 0.16e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ci2 ^ 2 * sin((-h + 2 * g + 7 * f)) + 0.5e1 / 0.2e1 * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * Delta * cos((-h - 2 * g + f)) + 0.5e1 / 0.2e1 * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * Delta * cos((h + 5 * f + 2 * g)) - 0.5e1 / 0.16e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (eta - 1) * sin((h + 2 * g + 7 * f)) + (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ci2 ^ 2 * sin((h + 3 * f - 2 * g)) / 0.16e2 + Delta * ((ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-h + 3 * f)) + (0.5e1 / 0.2e1 * ci2 ^ 4 - 0.5e1 / 0.2e1 * ci2 ^ 2) * cos((h - 2 * g + f)) + cos((h + 3 * f)) * (ci2 ^ 2 - 0.1e1 / 0.2e1))) * ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) / 0.8e1 + (0.83e2 / 0.192e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4) + 0.722e3 / 0.83e2 * (eta ^ 3) + 0.852e3 / 0.83e2 * (eta ^ 2) - 0.1610e4 / 0.83e2 * eta - 0.1991e4 / 0.83e2) * sin((-h + 3 * f + 2 * g)) - 0.9e1 / 0.128e3 * ((eta ^ 2) - 0.196e3 / 0.9e1 * eta - 0.349e3 / 0.9e1) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((-h + 5 * f + 2 * g)) + 0.15e2 / 0.16e2 * Delta * ci2 ^ 2 * (1 + eta) * (eta ^ 2 - 5) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 3 * f + 2 * g)) - 0.3e1 / 0.128e3 * ((eta + 11) * ci2 ^ 4 + (-eta - 0.41e2 / 0.3e1) * ci2 ^ 2 + eta / 0.3e1 + 0.49e2 / 0.9e1) * ((1 + eta) ^ 2) * (eta - 1) * sin((-h - 2 * g + f)) + ((0.83e2 / 0.192e3 * (eta ^ 4) + 0.361e3 / 0.96e2 * (eta ^ 3) + 0.71e2 / 0.16e2 * (eta ^ 2) - 0.805e3 / 0.96e2 * eta - 0.1991e4 / 0.192e3) * ci2 ^ 4 + (0.2491e4 / 0.192e3 - 0.115e3 / 0.192e3 * (eta ^ 4) - 0.491e3 / 0.96e2 * (eta ^ 3) + 0.1055e4 / 0.96e2 * eta - 0.45e2 / 0.8e1 * (eta ^ 2)) * ci2 ^ 2 - 0.997e3 / 0.192e3 + 0.49e2 / 0.192e3 * (eta ^ 4) + 0.69e2 / 0.32e2 * (eta ^ 3) - 0.145e3 / 0.32e2 * eta + 0.109e3 / 0.48e2 * (eta ^ 2)) * sin((h + 3 * f + 2 * g)) - 0.9e1 / 0.128e3 * (1 + eta) * (((eta ^ 2) - 0.196e3 / 0.9e1 * eta - 0.349e3 / 0.9e1) * ci2 ^ 4 + (-(eta ^ 2) + 0.268e3 / 0.9e1 * eta + 0.421e3 / 0.9e1) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.340e3 / 0.27e2 * eta - 0.493e3 / 0.27e2) * (eta - 1) * sin((h + 5 * f + 2 * g)) + 0.15e2 / 0.16e2 * (1 + eta) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * (eta ^ 2 - 5) * Delta * cos((h + 3 * f + 2 * g)) + 0.85e2 / 0.64e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4) + 0.214e3 / 0.85e2 * (eta ^ 3) + 0.124e3 / 0.85e2 * (eta ^ 2) - 0.70e2 / 0.17e2 * eta - 0.337e3 / 0.85e2) * sin((-h + f + 2 * g)) + 0.15e2 / 0.16e2 * Delta * ci2 ^ 2 * (1 + eta) * (eta ^ 2 - 5) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + f + 2 * g)) + 0.17e2 / 0.16e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) - 0.37e2 / 0.17e2) * sin((h + 3 * f + 4 * g)) + 0.13e2 / 0.16e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) - 0.83e2 / 0.39e2) * sin((h + 5 * f + 4 * g)) + 0.3e1 / 0.16e2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g + 7 * f)) + 0.3e1 / 0.4e1 * ((1 + eta) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (eta - 1) * sin((-h + 3 * f)) + ((0.85e2 / 0.64e2 * (eta ^ 4) + 0.107e3 / 0.32e2 * (eta ^ 3) + 0.31e2 / 0.16e2 * (eta ^ 2) - 0.175e3 / 0.32e2 * eta - 0.337e3 / 0.64e2) * ci2 ^ 4 + (0.429e3 / 0.64e2 - 0.145e3 / 0.32e2 * (eta ^ 3) - 0.21e2 / 0.8e1 * (eta ^ 2) + 0.221e3 / 0.32e2 * eta - 0.117e3 / 0.64e2 * (eta ^ 4)) * ci2 ^ 2 + 0.61e2 / 0.32e2 * (eta ^ 3) + 0.53e2 / 0.48e2 * (eta ^ 2) - 0.89e2 / 0.32e2 * eta + 0.149e3 / 0.192e3 * (eta ^ 4) - 0.521e3 / 0.192e3) * sin((h + f + 2 * g)) + 0.3e1 / 0.8e1 * (1 + eta) * (0.5e1 / 0.2e1 * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * (eta ^ 2 - 5) * Delta * cos((h + f + 2 * g)) - ci2 ^ 2 * (eta + 11) * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h - 2 * g + f)) / 0.16e2 + ((-0.7e1 / 0.6e1 + 0.7e1 / 0.6e1 * (eta ^ 2)) * ci2 ^ 2 + 0.7e1 / 0.6e1 - 0.7e1 / 0.6e1 * (eta ^ 2)) * sin((h + 4 * g + f)) + (((2 * eta ^ 2) - 0.14e2 / 0.3e1) * ci2 ^ 4 + (0.4e1 / 0.3e1 * (eta ^ 3) + 0.7e1 / 0.3e1 - (eta ^ 2)) * ci2 ^ 2 - (eta ^ 2) / 0.3e1 - 0.2e1 / 0.3e1 * (eta ^ 3) + 0.7e1 / 0.9e1) * sin((-h + f)) + 0.2e1 * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (eta - 1) * sin((h + 3 * f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta ^ 2 - 5) * Delta * cos((-h + f)) + (((2 * eta ^ 2) - 0.14e2 / 0.3e1) * ci2 ^ 4 + (0.4e1 / 0.3e1 * (eta ^ 3) + 0.7e1 / 0.3e1 - (eta ^ 2)) * ci2 ^ 2 - (eta ^ 2) / 0.3e1 - 0.2e1 / 0.3e1 * (eta ^ 3) + 0.7e1 / 0.9e1) * sin((h + f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((h + f)) * (eta ^ 2 - 5) * Delta)) * sqrt((-eta ^ 2 + 1)) + (-0.5e1 / 0.24e2 * (eta + 0.53e2 / 0.20e2) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * sin((-h + 6 * f + 2 * g)) - 0.5e1 / 0.8e1 * ((eta ^ 4) - (2 * eta ^ 3) - 0.57e2 / 0.5e1 * (eta ^ 2) - 0.6e1 / 0.5e1 * eta + 0.76e2 / 0.5e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * g + 2 * f)) - 0.5e1 / 0.8e1 * ((eta ^ 3) + 0.9e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.10e2 * eta - 0.111e3 / 0.10e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((-h + 2 * g + 4 * f)) + 0.15e2 / 0.4e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((-h + 2 * g + 2 * f)) + 0.15e2 / 0.8e1 * Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g + 4 * f)) + (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((eta - 1) ^ 2) * sin((-h - 2 * g + 2 * f)) / 0.32e2 - 0.5e1 / 0.24e2 * (1 + eta) * ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * ((eta - 1) ^ 2) * sin((h + 6 * f + 2 * g)) + ((-0.5e1 / 0.8e1 * (eta ^ 4) + 0.5e1 / 0.4e1 * (eta ^ 3) + 0.57e2 / 0.8e1 * (eta ^ 2) + 0.3e1 / 0.4e1 * eta - 0.19e2 / 0.2e1) * ci2 ^ 4 + (-0.75e2 / 0.8e1 * (eta ^ 2) + 0.12e2 + 0.7e1 / 0.8e1 * (eta ^ 4) - 0.7e1 / 0.4e1 * (eta ^ 3) - 0.3e1 / 0.4e1 * eta) * ci2 ^ 2 + 0.31e2 / 0.8e1 * (eta ^ 2) - 0.3e1 / 0.8e1 * (eta ^ 4) + 0.3e1 / 0.4e1 * (eta ^ 3) + eta / 0.4e1 - 0.29e2 / 0.6e1) * sin((h + 2 * g + 2 * f)) - 0.5e1 / 0.8e1 * (eta - 1) * (((eta ^ 3) + 0.9e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.10e2 * eta - 0.111e3 / 0.10e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * (eta ^ 3) - 0.11e2 / 0.5e1 * (eta ^ 2) + 0.103e3 / 0.10e2 * eta + 0.137e3 / 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * (eta ^ 3) + 0.13e2 / 0.15e2 * (eta ^ 2) - 0.43e2 / 0.10e2 * eta - 0.163e3 / 0.30e2) * sin((h + 2 * g + 4 * f)) - 0.5e1 / 0.24e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 2) - 0.32e2 / 0.5e1) * sin((h + 2 * f + 4 * g)) - (eta ^ 4 - 9 * eta ^ 2 + 10) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * f + 4 * g)) / 0.4e1 - (eta - 1) * (1 + eta) * (eta ^ 2 - 6) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 6 * f + 4 * g)) / 0.8e1 - ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 8 * f + 4 * g)) / 0.48e2 + 0.15e2 / 0.4e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * Delta * cos((h + 2 * g + 2 * f)) + (eta - 1) * (0.15e2 / 0.8e1 * (1 + eta) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * Delta * cos((h + 2 * g + 4 * f)) + ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h - 2 * g + 2 * f)) / 0.32e2 - (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (eta ^ 2 - 7) * sin((-h + 2 * f)) / 0.4e1 - ((1 + eta) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (eta - 1) * sin((-h + 4 * f)) / 0.8e1 - 0.5e1 / 0.24e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3) + 0.2e1 / 0.5e1 * (eta ^ 2) - 0.91e2 / 0.10e2 * eta - 0.79e2 / 0.10e2) * sin((-h + 2 * g)) + 0.3e1 / 0.4e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * cos((-h + 2 * f)) + 0.15e2 / 0.8e1 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * cos((-h + 2 * g)) - (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (eta ^ 2 - 7) * sin((h + 2 * f)) / 0.4e1 - ((1 + eta) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (eta - 1) * sin((h + 4 * f)) / 0.8e1 + ((-0.5e1 / 0.24e2 * (eta ^ 3) - (eta ^ 2) / 0.12e2 + 0.91e2 / 0.48e2 * eta + 0.79e2 / 0.48e2) * ci2 ^ 4 + (-0.113e3 / 0.48e2 * eta + (eta ^ 2) / 0.6e1 + 0.7e1 / 0.24e2 * (eta ^ 3) - 0.101e3 / 0.48e2) * ci2 ^ 2 - (eta ^ 3) / 0.8e1 - (eta ^ 2) / 0.12e2 + 0.15e2 / 0.16e2 * eta + 0.41e2 / 0.48e2) * sin((h + 2 * g)) - (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g)) / 0.16e2 + (0.15e2 / 0.8e1 * (1 + eta) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((h + 2 * g)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((0.3e1 / 0.4e1 + 0.3e1 / 0.4e1 * eta) * cos((h + 2 * f)) + cos(h) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1))) * Delta)) * (1 + eta)) * J ^ 2 / a ^ 4 / ci2 / (eta ^ 11) / (1 + eta) 0.54e2 * R__e ^ 4 * ((ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 76 * eta + 103) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) / 0.192e3 + (((eta ^ 2) / 0.192e3 + 0.19e2 / 0.48e2 * eta + 0.103e3 / 0.192e3) * ci2 ^ 8 + (-0.5e1 / 0.576e3 * (eta ^ 2) - 0.107e3 / 0.144e3 * eta - 0.563e3 / 0.576e3) * ci2 ^ 6 + (0.7e1 / 0.1728e4 * (eta ^ 2) + 0.43e2 / 0.108e3 * eta + 0.877e3 / 0.1728e4) * ci2 ^ 4 - 0.151e3 / 0.3456e4 - (eta ^ 2) / 0.3456e4 - 0.31e2 / 0.864e3 * eta) * cos((2 * h + 3 * f + 2 * g)) - ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((-2 * h + 5 * f + 2 * g)) / 0.64e2 + (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 3 * f + 4 * g)) / 0.12e2 - (1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * (eta - 1) * cos((2 * h + 5 * f + 2 * g)) / 0.64e2 + (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 5 * f + 4 * g)) / 0.36e2 - 0.5e1 / 0.24e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) - 0.5e1 / 0.24e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * sin((2 * h + 3 * f + 2 * g)) + 0.5e1 / 0.64e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * ((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * cos((-2 * h + f + 2 * g)) + ((0.5e1 / 0.64e2 * (eta ^ 2) - eta / 0.16e2 - 0.13e2 / 0.64e2) * ci2 ^ 8 + (-0.25e2 / 0.192e3 * (eta ^ 2) + 0.3e1 / 0.16e2 * eta + 0.27e2 / 0.64e2) * ci2 ^ 6 + (0.35e2 / 0.576e3 * (eta ^ 2) - 0.143e3 / 0.576e3 - 0.5e1 / 0.36e2 * eta) * ci2 ^ 4 + 0.29e2 / 0.1152e4 - 0.5e1 / 0.1152e4 * (eta ^ 2) + 0.5e1 / 0.288e3 * eta) * cos((2 * h + f + 2 * g)) + (1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * (eta - 1) * cos((-2 * h - 2 * g + f)) / 0.64e2 + ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((2 * h - 2 * g + f)) / 0.64e2 - 0.5e1 / 0.8e1 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) - 0.5e1 / 0.8e1 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * sin((2 * h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 76 * eta + 103) * ci2 ^ 4 + (-0.2e1 / 0.3e1 * (eta ^ 2) - 0.176e3 / 0.3e1 * eta - 0.230e3 / 0.3e1) * ci2 ^ 2 + (eta ^ 2) / 0.18e2 + 0.80e2 / 0.9e1 * eta + 0.187e3 / 0.18e2) * cos((3 * f + 2 * g)) / 0.96e2 + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * cos((3 * f + 4 * g)) / 0.12e2 - ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 4 - 0.2e1 / 0.3e1 * ci2 ^ 2 + 0.1e1 / 0.18e2) * cos((5 * f + 2 * g)) / 0.32e2 + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * cos((5 * f + 4 * g)) / 0.36e2 - 0.5e1 / 0.12e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.4e1 / 0.5e1 * ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((3 * f + 2 * g)) + 0.5e1 / 0.32e2 * (((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 4 + (-0.2e1 / 0.3e1 * (eta ^ 2) + 0.16e2 / 0.15e2 * eta + 0.34e2 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.18e2 - 0.16e2 / 0.45e2 * eta - 0.41e2 / 0.90e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((f + 2 * g)) + (ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 4 - 0.2e1 / 0.3e1 * ci2 ^ 2 + 0.1e1 / 0.18e2) * cos((-2 * g + f)) / 0.32e2 + (0.43e2 / 0.72e2 * ci2 ^ 4 - 0.7e1 / 0.72e2 * ci2 ^ 2 + ci2 ^ 8 / 0.2e1 - ci2 ^ 6) * cos((-2 * h + f)) + (0.43e2 / 0.72e2 * ci2 ^ 4 - 0.7e1 / 0.72e2 * ci2 ^ 2 + ci2 ^ 8 / 0.2e1 - ci2 ^ 6) * cos((2 * h + f)) - 0.5e1 / 0.4e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.4e1 / 0.5e1 * ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((f + 2 * g)) + (-Delta * ci2 ^ 2 / 0.12e2 + Delta * ci2 ^ 4 / 0.4e1 - Delta * ci2 ^ 6 / 0.6e1) * sin((-2 * h + f)) + (-Delta * ci2 ^ 2 / 0.12e2 + Delta * ci2 ^ 4 / 0.4e1 - Delta * ci2 ^ 6 / 0.6e1) * sin((2 * h + f)) + (0.25e2 / 0.36e2 * ci2 ^ 4 - 0.5e1 / 0.3e1 * ci2 ^ 6 - 0.1e1 / 0.72e2 + ci2 ^ 8) * cos(f) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin(f) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.4e1) * Delta / 0.3e1) * (1 + eta)) * sqrt((-eta ^ 2 + 1)) - (1 + eta) * (-0.7e1 / 0.108e3 * (eta ^ 2) + 0.37e2 / 0.432e3 + (1 + eta) * (ci2 ^ 8 - 0.4e1 / 0.3e1 * ci2 ^ 6 + 0.13e2 / 0.36e2 * ci2 ^ 4 + 0.1e1 / 0.36e2) * (eta - 1) * cos((2 * f)) + (-0.563e3 / 0.216e3 - 0.2e1 / 0.3e1 * Delta ^ 2 + 0.59e2 / 0.36e2 * (eta ^ 2)) * ci2 ^ 4 + 0.5e1 / 0.12e2 * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 8 + (-0.29e2 / 0.15e2 * eta - 0.103e3 / 0.30e2) * ci2 ^ 6 + (0.16e2 / 0.15e2 * eta + 0.53e2 / 0.30e2) * ci2 ^ 4 - eta / 0.10e2 - 0.3e1 / 0.20e2) * (eta - 1) * cos((2 * h + 2 * g + 4 * f)) + 0.5e1 / 0.2e1 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * Delta * sin((2 * h + 2 * g + 2 * f)) - 0.11e2 / 0.12e2 * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 8 + (-0.67e2 / 0.33e2 * eta - 0.179e3 / 0.66e2) * ci2 ^ 6 + (0.116e3 / 0.99e2 * eta + 0.295e3 / 0.198e3) * ci2 ^ 4 - 0.23e2 / 0.198e3 * eta - 0.5e1 / 0.36e2) * (eta - 1) * cos((2 * g + 2 * h)) + (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * cos((-2 * h + 2 * f)) / 0.2e1 + (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * cos((2 * h + 2 * f)) / 0.2e1 + (-0.2e1 / 0.3e1 * Delta * ci2 ^ 2 + 0.14e2 / 0.3e1 * Delta * ci2 ^ 4 + 0.5e1 * Delta * ci2 ^ 8 - 0.9e1 * Delta * ci2 ^ 6) * sin((2 * g + 2 * f)) + (-0.59e2 / 0.18e2 + 0.17e2 / 0.9e1 * (eta ^ 2)) * ci2 ^ 8 + (0.313e3 / 0.54e2 - 0.94e2 / 0.27e2 * (eta ^ 2) + 0.2e1 / 0.3e1 * Delta ^ 2) * ci2 ^ 6 + ((0.5e1 / 0.6e1 * (eta ^ 2) - 0.11e2 / 0.6e1) * ci2 ^ 8 + (-0.29e2 / 0.18e2 * (eta ^ 2) + 0.59e2 / 0.18e2) * ci2 ^ 6 + (-0.5e1 / 0.3e1 + 0.8e1 / 0.9e1 * (eta ^ 2)) * ci2 ^ 4 - (eta ^ 2) / 0.12e2 + 0.5e1 / 0.36e2) * cos((2 * h + 2 * g + 2 * f)) + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * (eta - 1) * cos((6 * f + 4 * g)) / 0.54e2 - 0.11e2 / 0.12e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta + 0.31e2 / 0.22e2) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((2 * g - 2 * h)) + 0.5e1 / 0.12e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta + 0.19e2 / 0.10e2) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((-2 * h + 2 * g + 4 * f)) + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * (eta - 1) * cos((2 * f + 4 * g)) / 0.6e1 + Delta ^ 2 / 0.12e2 + ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * cos((4 * f + 4 * g)) / 0.9e1 - 0.11e2 / 0.6e1 * ci2 ^ 2 * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 4 + (-0.28e2 / 0.33e2 * eta - 0.37e2 / 0.33e2) * ci2 ^ 2 + 0.16e2 / 0.99e2 * eta + 0.73e2 / 0.396e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((2 * g)) + 0.5e1 / 0.6e1 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2) - 0.11e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 2 * g + 2 * f)) + (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((2 * h + 2 * f + 4 * g)) / 0.6e1 + (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((2 * h + 6 * f + 4 * g)) / 0.54e2 + 0.5e1 / 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 2 * f)) + 0.5e1 / 0.6e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 4 + (-0.4e1 / 0.5e1 * eta - 0.7e1 / 0.5e1) * ci2 ^ 2 + 0.2e1 / 0.15e2 * eta + 0.11e2 / 0.60e2) * cos((2 * g + 4 * f)) + (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 4 * f + 4 * g)) / 0.9e1 + 0.17e2 / 0.9e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.59e2 / 0.34e2 + (eta ^ 2)) * ci2 ^ 4 + (-0.20e2 / 0.17e2 * (eta ^ 2) + 0.6e1 / 0.17e2 * Delta ^ 2 + 0.65e2 / 0.34e2) * ci2 ^ 2 + 0.19e2 / 0.68e2 * (eta ^ 2) - 0.3e1 / 0.17e2 * Delta ^ 2 - 0.173e3 / 0.408e3) * cos((2 * h)) + 0.5e1 / 0.3e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (((eta ^ 2) - 0.11e2 / 0.5e1) * ci2 ^ 4 + (-0.4e1 / 0.5e1 * (eta ^ 2) + 0.8e1 / 0.5e1) * ci2 ^ 2 + 0.2e1 / 0.15e2 * (eta ^ 2) - 0.1e1 / 0.5e1) * cos((2 * g + 2 * f))) / 0.4e1) * J ^ 2 / (eta ^ 8) / a ^ 4 / (1 + eta) 0.51e2 / 0.4e1 * R__e ^ 4 * J ^ 2 * ((-0.3e1 / 0.136e3 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 76 * eta + 103) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) + ((0.3e1 / 0.136e3 * (eta ^ 2) + 0.57e2 / 0.34e2 * eta + 0.309e3 / 0.136e3) * ci2 ^ 8 + (-0.5e1 / 0.136e3 * (eta ^ 2) - 0.107e3 / 0.34e2 * eta - 0.563e3 / 0.136e3) * ci2 ^ 6 + (0.877e3 / 0.408e3 + 0.7e1 / 0.408e3 * (eta ^ 2) + 0.86e2 / 0.51e2 * eta) * ci2 ^ 4 - 0.151e3 / 0.816e3 - (eta ^ 2) / 0.816e3 - 0.31e2 / 0.204e3 * eta) * sin((2 * h + 3 * f + 2 * g)) - 0.15e2 / 0.17e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) + 0.15e2 / 0.17e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * cos((2 * h + 3 * f + 2 * g)) + 0.9e1 / 0.136e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 5 * f + 2 * g)) + 0.6e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 3 * f + 4 * g)) - 0.9e1 / 0.136e3 * (1 + eta) * (eta - 1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * sin((2 * h + 5 * f + 2 * g)) + 0.2e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 5 * f + 4 * g)) - 0.45e2 / 0.136e3 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) + ((-0.9e1 / 0.34e2 * eta - 0.117e3 / 0.136e3 + 0.45e2 / 0.136e3 * (eta ^ 2)) * ci2 ^ 8 + (0.243e3 / 0.136e3 + 0.27e2 / 0.34e2 * eta - 0.75e2 / 0.136e3 * (eta ^ 2)) * ci2 ^ 6 + (-0.143e3 / 0.136e3 + 0.35e2 / 0.136e3 * (eta ^ 2) - 0.10e2 / 0.17e2 * eta) * ci2 ^ 4 + 0.29e2 / 0.272e3 - 0.5e1 / 0.272e3 * (eta ^ 2) + 0.5e1 / 0.68e2 * eta) * sin((2 * h + f + 2 * g)) - 0.45e2 / 0.17e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + f + 2 * g)) + 0.45e2 / 0.17e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * cos((2 * h + f + 2 * g)) - 0.9e1 / 0.136e3 * (1 + eta) * (eta - 1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * sin((-2 * h - 2 * g + f)) + 0.42e2 / 0.17e2 * (0.3e1 / 0.112e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * h - 2 * g + f)) + ci2 ^ 2 * ((eta ^ 2 + 100 * eta + 127) * ci2 ^ 2 - 0.2e1 / 0.3e1 * (eta ^ 2) - 0.194e3 / 0.3e1 * eta - 0.248e3 / 0.3e1) * sin((3 * f + 2 * g)) / 0.168e3 - (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 - 0.1e1 / 0.2e1) * sin((3 * f + 4 * g)) / 0.7e1 - (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 - 0.1e1 / 0.2e1) * sin((5 * f + 4 * g)) / 0.21e2 + ci2 ^ 2 * ((1 + eta) * Delta * (ci2 ^ 2 - 0.9e1 / 0.14e2) * cos((3 * f + 2 * g)) / 0.3e1 - (1 + eta) * (eta - 1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((5 * f + 2 * g)) / 0.56e2 + ((-0.3e1 / 0.14e2 * eta + 0.5e1 / 0.56e2 * (eta ^ 2) - 0.3e1 / 0.8e1) * ci2 ^ 2 + 0.11e2 / 0.84e2 * eta + 0.5e1 / 0.21e2 - 0.5e1 / 0.84e2 * (eta ^ 2)) * sin((f + 2 * g)) + (1 + eta) * ((-0.6e1 / 0.7e1 * ci2 ^ 4 + 0.6e1 / 0.7e1 * ci2 ^ 2 - 0.1e1 / 0.6e1) * sin((-2 * h + f)) + (0.6e1 / 0.7e1 * ci2 ^ 4 - 0.6e1 / 0.7e1 * ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((2 * h + f)) + Delta * (ci2 ^ 2 - 0.9e1 / 0.14e2) * cos((f + 2 * g)) + (-0.2e1 / 0.7e1 * Delta * ci2 ^ 2 + Delta / 0.7e1) * cos((-2 * h + f)) + (0.2e1 / 0.7e1 * Delta * ci2 ^ 2 - Delta / 0.7e1) * cos((2 * h + f)) - (eta - 1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((-2 * g + f)) / 0.56e2))) * (ci2 - 0.1e1) * (ci2 + 0.1e1)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (0.15e2 / 0.17e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2) - 0.11e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 2 * f)) + 0.15e2 / 0.34e2 * (eta + 0.19e2 / 0.10e2) * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 4 * f)) - 0.3e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((2 * h + 2 * f + 4 * g)) - 0.2e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 4 * f + 4 * g)) - (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((2 * h + 6 * f + 4 * g)) / 0.51e2 + ((0.33e2 / 0.17e2 - 0.15e2 / 0.17e2 * (eta ^ 2)) * ci2 ^ 8 + (-0.59e2 / 0.17e2 + 0.29e2 / 0.17e2 * (eta ^ 2)) * ci2 ^ 6 + (0.30e2 / 0.17e2 - 0.16e2 / 0.17e2 * (eta ^ 2)) * ci2 ^ 4 + 0.3e1 / 0.34e2 * (eta ^ 2) - 0.5e1 / 0.34e2) * sin((2 * h + 2 * g + 2 * f)) - 0.15e2 / 0.34e2 * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 8 + (-0.29e2 / 0.15e2 * eta - 0.103e3 / 0.30e2) * ci2 ^ 6 + (0.16e2 / 0.15e2 * eta + 0.53e2 / 0.30e2) * ci2 ^ 4 - eta / 0.10e2 - 0.3e1 / 0.20e2) * (eta - 1) * sin((2 * h + 2 * g + 4 * f)) - 0.45e2 / 0.17e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 2 * g + 2 * f)) + 0.45e2 / 0.17e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * Delta * cos((2 * h + 2 * g + 2 * f)) + 0.3e1 / 0.17e2 * (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (eta - 1) * sin((2 * f + 4 * g)) + 0.2e1 / 0.17e2 * (ci2 + 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * sin((4 * f + 4 * g)) + (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (eta - 1) * sin((6 * f + 4 * g)) / 0.51e2 - 0.33e2 / 0.34e2 * ci2 ^ 2 * (eta + 0.31e2 / 0.22e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * g - 2 * h)) + 0.33e2 / 0.34e2 * (eta - 1) * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 8 + (-0.67e2 / 0.33e2 * eta - 0.179e3 / 0.66e2) * ci2 ^ 6 + (0.116e3 / 0.99e2 * eta + 0.295e3 / 0.198e3) * ci2 ^ 4 - 0.23e2 / 0.198e3 * eta - 0.5e1 / 0.36e2) * sin((2 * g + 2 * h)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.9e1 / 0.17e2 * (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * sin((-2 * h + 2 * f)) - 0.9e1 / 0.17e2 * (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * sin((2 * h + 2 * f)) + ((0.26e2 / 0.17e2 - 0.14e2 / 0.17e2 * (eta ^ 2)) * ci2 ^ 2 + 0.9e1 / 0.17e2 * (eta ^ 2) - 0.1e1) * sin((2 * g + 2 * f)) - 0.7e1 / 0.17e2 * ((eta + 0.23e2 / 0.14e2) * ci2 ^ 2 - 0.9e1 / 0.14e2 * eta - 0.15e2 / 0.14e2) * (eta - 1) * sin((2 * g + 4 * f)) + (-0.27e2 / 0.17e2 * Delta + 0.42e2 / 0.17e2 * Delta * ci2 ^ 2) * cos((2 * g + 2 * f)) + ((0.59e2 / 0.17e2 - (2 * eta ^ 2)) * ci2 ^ 4 + (-0.65e2 / 0.17e2 - 0.12e2 / 0.17e2 * Delta ^ 2 + 0.40e2 / 0.17e2 * (eta ^ 2)) * ci2 ^ 2 - 0.19e2 / 0.34e2 * (eta ^ 2) + 0.6e1 / 0.17e2 * Delta ^ 2 + 0.173e3 / 0.204e3) * sin((2 * h)) + sin((2 * g)) * ((eta + 0.43e2 / 0.34e2) * ci2 ^ 2 - 0.65e2 / 0.102e3 * eta - 0.83e2 / 0.102e3) * (eta - 1)))) / (eta ^ 8) / a ^ 4 / (1 + eta) -0.243e3 / 0.16e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 4 * J ^ 2 * sqrt(-ci2 ^ 2 + 0.1e1) * (-0.175e3 / 0.54e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 1) * sin((3 * g + f)) - 0.115e3 / 0.162e3 * ci2 ^ 2 * (1 + eta) * ((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 1) * sin((g - 2 * h + 3 * f)) + 0.2e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-g - 2 * h + 3 * f)) + 0.50e2 / 0.27e2 * (1 + eta) * (((eta ^ 2) + 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.57e2 / 0.50e2 * (eta ^ 2) - 0.27e2 / 0.25e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.23e2 / 0.150e3 * (eta ^ 2) + 0.13e2 / 0.75e2 * eta + 0.7e1 / 0.150e3) * (eta - 1) * cos((-g - 2 * h + f)) + 0.31e2 / 0.648e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.1991e4 / 0.31e2 + (eta ^ 5) + 0.1503e4 / 0.31e2 * (eta ^ 4) + 0.2492e4 / 0.31e2 * (eta ^ 3) - 0.904e3 / 0.31e2 * (eta ^ 2) - 0.3579e4 / 0.31e2 * eta) * ci2 ^ 2 + 0.108e3 / 0.31e2 * ((eta ^ 3) - 0.17e2 / 0.9e1 * (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.37e2 / 0.9e1) * (1 + eta)) * cos((3 * g + 3 * f)) + ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((eta + 97) * ci2 ^ 4 + (-eta - 49) * ci2 ^ 2 + eta / 0.3e1 - 0.47e2 / 0.3e1) * cos((-g + 3 * f)) / 0.432e3 - 0.5e1 / 0.432e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((3 * g + 2 * h + 7 * f)) + 0.2e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * (eta - 1) * cos((g + 2 * h + 3 * f)) - 0.95e2 / 0.54e2 * (1 + eta) * Delta * (((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * ci2 ^ 4 + (-0.15e2 / 0.19e2 * (eta ^ 3) + 0.27e2 / 0.95e2 * (eta ^ 2) + 0.79e2 / 0.95e2 * eta - 0.27e2 / 0.19e2) * ci2 ^ 2 + 0.28e2 / 0.95e2 * (eta ^ 3) - 0.12e2 / 0.95e2 * (eta ^ 2) - 0.28e2 / 0.95e2 * eta + 0.12e2 / 0.19e2) * sin((f + g)) - 0.29e2 / 0.27e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * ((eta ^ 2) - 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * sin((g + 2 * h + f)) - 0.65e2 / 0.54e2 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (1 + eta) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 3 * f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * sin((-g - 2 * h + 3 * f)) / 0.27e2 - 0.5e1 / 0.54e2 * ((1 + eta) ^ 3) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 5 * f)) - 0.5e1 / 0.54e2 * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((-3 * g - 2 * h + f)) - 0.5e1 / 0.432e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((g + 7 * f)) - 0.31e2 / 0.432e3 * (1 + eta) * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 4 + (-(eta ^ 3) + 0.263e3 / 0.31e2 * (eta ^ 2) + 0.691e3 / 0.31e2 * eta + 0.421e3 / 0.31e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 - 0.335e3 / 0.93e2 * (eta ^ 2) - 0.835e3 / 0.93e2 * eta - 0.493e3 / 0.93e2) * (eta - 1) * cos((3 * g + 2 * h + 5 * f)) + (((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * ci2 ^ 4 + (-(eta ^ 2) + 0.2e1 / 0.3e1 * eta + 0.41e2 / 0.27e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.26e2 / 0.81e2 * eta - 0.49e2 / 0.81e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - 2 * h + f)) / 0.16e2 - 0.5e1 / 0.144e3 * (1 + eta) * ((eta - 1) ^ 2) * (((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * ci2 ^ 4 + (-(eta ^ 2) + 0.266e3 / 0.15e2 * eta + 0.421e3 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.338e3 / 0.45e2 * eta - 0.493e3 / 0.45e2) * cos((5 * f + g)) + 0.11e2 / 0.432e3 * (1 + eta) * (((eta ^ 3) + 0.757e3 / 0.11e2 * (eta ^ 2) + 0.609e3 / 0.11e2 * eta - 0.257e3 / 0.11e2) * ci2 ^ 4 + (-(eta ^ 3) - 0.861e3 / 0.11e2 * (eta ^ 2) - 0.753e3 / 0.11e2 * eta + 0.153e3 / 0.11e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 + 0.103e3 / 0.11e2 * (eta ^ 2) + 0.289e3 / 0.33e2 * eta + 0.21e2 / 0.11e2) * (eta - 1) * cos((f - g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-3 * g - 2 * h + 3 * f)) / 0.432e3 - 0.95e2 / 0.54e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * sin((g - 2 * h + f)) + 0.11e2 / 0.432e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 3) - 0.43e2 / 0.11e2 * (eta ^ 2) - 0.95e2 / 0.11e2 * eta - 0.3e1) * cos((-g + 2 * h + f)) - 0.5e1 / 0.144e3 * ci2 ^ 2 * (1 + eta) * ((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * cos((g - 2 * h + 5 * f)) + ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * ((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * cos((-3 * g + f)) / 0.16e2 - 0.65e2 / 0.54e2 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + 3 * f)) - 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 5 * f)) + 0.41e2 / 0.54e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 2) + 0.58e2 / 0.41e2 * eta + 0.37e2 / 0.41e2) * cos((5 * g + 2 * h + 3 * f)) + ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + 3 * f)) / 0.432e3 - 0.31e2 / 0.432e3 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 2 - 0.88e2 / 0.31e2 * (eta ^ 2) + 0.16e2 / 0.31e2 * eta + 0.664e3 / 0.93e2) * cos((3 * g + 5 * f)) - 0.5e1 / 0.432e3 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * (-0.24e2 / 0.5e1 + (1 + eta) * ci2 ^ 2) * cos((3 * g + 7 * f)) + ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + 3 * f)) / 0.432e3 - 0.5e1 / 0.432e3 * ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 7 * f)) - 0.29e2 / 0.27e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * (eta - 1) * ((eta ^ 2) + 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * sin((-g - 2 * h + f)) + 0.23e2 / 0.648e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 4) + 0.752e3 / 0.23e2 * (eta ^ 3) + 0.976e3 / 0.23e2 * (eta ^ 2) - 0.1632e4 / 0.23e2 * eta - 0.1991e4 / 0.23e2) * cos((g - 2 * h + 3 * f)) - 0.175e3 / 0.54e2 * (1 + eta) * Delta * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + f)) + ((ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-g - 2 * h + 4 * f)) / 0.27e2 + 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta ^ 2) - 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * cos((g + 2 * h + 2 * f)) + 0.100e3 / 0.27e2 * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 2 * f)) + 0.7e1 / 0.27e2 * ((eta ^ 4) + 0.9e1 / 0.7e1 * (eta ^ 3) - 0.55e2 / 0.21e2 * (eta ^ 2) - 0.109e3 / 0.21e2 * eta - 0.20e2 / 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 4 * f)) + 0.5e1 / 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.37e2 / 0.10e2 + (eta ^ 4) + 0.32e2 / 0.15e2 * (eta ^ 3) - 0.103e3 / 0.45e2 * (eta ^ 2) - 0.587e3 / 0.90e2 * eta) * ci2 ^ 2 + (eta ^ 4) / 0.9e1 - (eta ^ 3) / 0.45e2 - 0.43e2 / 0.45e2 * (eta ^ 2) + 0.11e2 / 0.45e2 * eta + 0.4e1 / 0.3e1) * cos((4 * f + 3 * g)) + (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-g + 4 * f)) / 0.27e2 + 0.2e1 / 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * sin((g + 2 * h + 2 * f)) + 0.25e2 / 0.27e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.619e3 / 0.150e3 * eta - 0.76e2 / 0.25e2 + (eta ^ 4) + 0.11e2 / 0.10e2 * (eta ^ 3) - 0.34e2 / 0.15e2 * (eta ^ 2)) * ci2 ^ 2 + 0.4e1 / 0.75e2 * (1 + eta) * ((eta ^ 3) - 0.5e1 / 0.4e1 * (eta ^ 2) - eta / 0.4e1 + 0.8e1)) * cos((2 * f + 3 * g)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - 2 * h + 2 * f)) / 0.108e3 + 0.5e1 / 0.9e1 * ((1 + eta) ^ 2) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 4 * f)) + 0.4e1 / 0.9e1 * (1 + eta) * (((eta ^ 2) + 0.13e2 / 0.16e2 * eta - 0.19e2 / 0.16e2) * ci2 ^ 4 + (-(eta ^ 2) / 0.2e1 - 0.19e2 / 0.48e2 * eta + 0.29e2 / 0.48e2) * ci2 ^ 2 - (eta ^ 2) / 0.6e1 - 0.7e1 / 0.48e2 * eta + 0.3e1 / 0.16e2) * (eta - 1) * cos((-g + 2 * f)) + 0.5e1 / 0.81e2 * (1 + eta) * ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * ((eta - 1) ^ 2) * cos((g + 6 * f)) + 0.5e1 / 0.81e2 * ((1 + eta) ^ 2) * ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * (eta - 1) * cos((3 * g + 2 * h + 6 * f)) + (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * (eta - 1) * cos((g + 2 * h + 4 * f)) / 0.27e2 + 0.8e1 / 0.27e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * Delta * sin((g + 2 * h)) + 0.130e3 / 0.81e2 * (1 + eta) * eta * (((eta ^ 2) - 0.391e3 / 0.195e3) * ci2 ^ 4 + (-0.13e2 / 0.10e2 * (eta ^ 2) + 0.48e2 / 0.65e2 * Delta ^ 2 + 0.1007e4 / 0.390e3) * ci2 ^ 2 + 0.29e2 / 0.130e3 * (eta ^ 2) - 0.24e2 / 0.65e2 * Delta ^ 2 - 0.35e2 / 0.78e2) * cos((g + 2 * h)) + ((-0.619e3 / 0.162e3 * eta - 0.76e2 / 0.27e2 + 0.25e2 / 0.27e2 * (eta ^ 4) + 0.55e2 / 0.54e2 * (eta ^ 3) - 0.170e3 / 0.81e2 * (eta ^ 2)) * ci2 ^ 4 + (-0.35e2 / 0.27e2 * (eta ^ 4) - 0.79e2 / 0.54e2 * (eta ^ 3) + 0.32e2 / 0.9e1 + 0.190e3 / 0.81e2 * (eta ^ 2) + 0.767e3 / 0.162e3 * eta) * ci2 ^ 2 - 0.116e3 / 0.81e2 - 0.70e2 / 0.81e2 * (eta ^ 2) + 0.5e1 / 0.9e1 * (eta ^ 4) + 0.103e3 / 0.162e3 * (eta ^ 3) - 0.305e3 / 0.162e3 * eta) * cos((3 * g + 2 * h + 2 * f)) + ((-0.37e2 / 0.18e2 + 0.5e1 / 0.9e1 * (eta ^ 4) + 0.32e2 / 0.27e2 * (eta ^ 3) - 0.103e3 / 0.81e2 * (eta ^ 2) - 0.587e3 / 0.162e3 * eta) * ci2 ^ 4 + (0.137e3 / 0.54e2 + 0.140e3 / 0.81e2 * (eta ^ 2) + 0.751e3 / 0.162e3 * eta - 0.7e1 / 0.9e1 * (eta ^ 4) - 0.40e2 / 0.27e2 * (eta ^ 3)) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 + 0.16e2 / 0.27e2 * (eta ^ 3) - 0.163e3 / 0.162e3 - 0.59e2 / 0.81e2 * (eta ^ 2) - 0.305e3 / 0.162e3 * eta) * cos((3 * g + 2 * h + 4 * f)) + ((0.71e2 / 0.81e2 * (eta ^ 4) + 0.109e3 / 0.162e3 * (eta ^ 3) - 0.7e1 / 0.162e3 * eta + 0.62e2 / 0.27e2 - 0.158e3 / 0.81e2 * (eta ^ 2)) * ci2 ^ 4 + (-0.67e2 / 0.81e2 * (eta ^ 4) - 0.83e2 / 0.162e3 * (eta ^ 3) - 0.89e2 / 0.27e2 + 0.133e3 / 0.81e2 * (eta ^ 2) - 0.199e3 / 0.162e3 * eta) * ci2 ^ 2 + 0.173e3 / 0.162e3 * eta + 0.5e1 / 0.27e2 * (eta ^ 4) + 0.5e1 / 0.162e3 * (eta ^ 3) - 0.25e2 / 0.81e2 * (eta ^ 2) + 0.41e2 / 0.27e2) * cos((g + 2 * f)) + ((0.79e2 / 0.162e3 + (eta ^ 4) + 0.58e2 / 0.81e2 * (eta ^ 3) - 0.374e3 / 0.243e3 * (eta ^ 2) - 0.319e3 / 0.486e3 * eta) * ci2 ^ 4 + (-0.101e3 / 0.162e3 - 0.94e2 / 0.81e2 * (eta ^ 4) - 0.23e2 / 0.27e2 * (eta ^ 3) + (0.32e2 / 0.27e2 * Delta ^ 2 + 0.428e3 / 0.243e3) * (eta ^ 2) + (0.32e2 / 0.27e2 * Delta ^ 2 + 0.349e3 / 0.486e3) * eta) * ci2 ^ 2 + 0.41e2 / 0.162e3 - 0.14e2 / 0.243e3 * (eta ^ 4) - 0.41e2 / 0.243e3 * (eta ^ 3) + (-0.16e2 / 0.27e2 * Delta ^ 2 + 0.25e2 / 0.81e2) * (eta ^ 2) + (-0.16e2 / 0.27e2 * Delta ^ 2 + 0.115e3 / 0.162e3) * eta) * cos(g) + 0.5e1 / 0.81e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * (eta + 0.53e2 / 0.20e2) * cos((g - 2 * h + 6 * f)) - 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g)) - 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h)) + 0.100e3 / 0.27e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * sin((2 * f + 3 * g)) + 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) - ci2 ^ 2 * (1 + eta) * ((eta - 1) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + 2 * f)) / 0.108e3 + 0.5e1 / 0.81e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((1 + eta) * (eta + 0.53e2 / 0.20e2) * ci2 ^ 2 + 0.8e1 / 0.15e2 * (eta ^ 2) - eta / 0.15e2 - 0.18e2 / 0.5e1) * cos((3 * g + 6 * f)) + 0.20e2 / 0.9e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * sin((g - 2 * h + 2 * f)) + 0.25e2 / 0.81e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 3) + 0.53e2 / 0.25e2 * (eta ^ 2) - 0.104e3 / 0.25e2 * eta - 0.333e3 / 0.50e2) * cos((g - 2 * h + 4 * f)) - ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + 2 * f)) / 0.108e3 + 0.28e2 / 0.81e2 * ((eta ^ 2) + 0.33e2 / 0.28e2 * eta + 0.8e1 / 0.7e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((5 * g + 2 * h + 2 * f)) + 0.20e2 / 0.9e1 * (((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 4 + (-0.13e2 / 0.10e2 * (eta ^ 2) - eta / 0.2e1 + 0.19e2 / 0.15e2) * ci2 ^ 2 + 0.11e2 / 0.20e2 * (eta ^ 2) + eta / 0.5e1 - 0.11e2 / 0.20e2) * Delta * sin((g + 2 * f)) - 0.5e1 / 0.9e1 * sin(g) * Delta * (((1 + eta) ^ 2) * ci2 ^ 4 + (-0.29e2 / 0.15e2 * (eta ^ 2) - 0.62e2 / 0.15e2 * eta - 0.41e2 / 0.15e2) * ci2 ^ 2 + 0.13e2 / 0.15e2 * (eta ^ 2) + 0.28e2 / 0.15e2 * eta + 0.19e2 / 0.15e2) + 0.28e2 / 0.81e2 * (((eta ^ 3) + 0.31e2 / 0.14e2 * (eta ^ 2) - 0.95e2 / 0.28e2 * eta - 0.327e3 / 0.56e2) * ci2 ^ 4 + (-0.73e2 / 0.56e2 * (eta ^ 3) - 0.143e3 / 0.56e2 * (eta ^ 2) + 0.269e3 / 0.56e2 * eta + 0.51e2 / 0.7e1) * ci2 ^ 2 + 0.29e2 / 0.56e2 * (eta ^ 3) + 0.51e2 / 0.56e2 * (eta ^ 2) - 0.17e2 / 0.8e1 * eta - 0.41e2 / 0.14e2) * (eta - 1) * cos((g + 4 * f)) - 0.31e2 / 0.27e2 * (eta - 1) * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 4 + (-0.143e3 / 0.93e2 * (eta ^ 3) - 0.105e3 / 0.31e2 * (eta ^ 2) - 0.38e2 / 0.31e2 * eta + 0.101e3 / 0.186e3) * ci2 ^ 2 + 0.193e3 / 0.279e3 * (eta ^ 3) + 0.413e3 / 0.279e3 * (eta ^ 2) + 0.151e3 / 0.279e3 * eta - 0.41e2 / 0.186e3) * cos((3 * g + 2 * h)) + 0.5e1 / 0.9e1 * (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((g + 4 * f)) + 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * ((eta ^ 2) + 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * cos((-g - 2 * h + 2 * f)) + 0.16e2 / 0.243e3 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3) + 0.9e1 / 0.16e2 * (eta ^ 2) - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1) * cos((5 * g + 2 * h + 6 * f)) - ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h)) / 0.54e2 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 8 * f)) / 0.162e3 - 0.49e2 / 0.81e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4) + 0.72e2 / 0.49e2 * (eta ^ 3) - 0.136e3 / 0.49e2 * (eta ^ 2) - 0.415e3 / 0.98e2 * eta - 0.79e2 / 0.98e2) * cos((g - 2 * h)) + 0.2e1 / 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * (eta - 1) * sin((-g - 2 * h + 2 * f)) + (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 8 * f)) / 0.162e3 + 0.2e1 / 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * (eta - 1) * sin((-g + 2 * f)) - 0.31e2 / 0.27e2 * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 2 + ((1 + eta) ^ 3) / 0.62e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((3 * g)) + 0.35e2 / 0.81e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4) + 0.5e1 / 0.14e2 * (eta ^ 3) - 0.92e2 / 0.35e2 * (eta ^ 2) + 0.221e3 / 0.70e2 * eta + 0.228e3 / 0.35e2) * cos((g - 2 * h + 2 * f)) - 0.5e1 / 0.9e1 * (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h)) + 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 4 * f))) * sqrt((-eta ^ 2 + 1)) + ((-0.1991e4 / 0.648e3 + 0.31e2 / 0.648e3 * (eta ^ 5) + 0.167e3 / 0.72e2 * (eta ^ 4) + 0.623e3 / 0.162e3 * (eta ^ 3) - 0.113e3 / 0.81e2 * (eta ^ 2) - 0.1193e4 / 0.216e3 * eta) * ci2 ^ 4 + (0.2491e4 / 0.648e3 - 0.1979e4 / 0.648e3 * (eta ^ 4) - 0.799e3 / 0.162e3 * (eta ^ 3) + 0.146e3 / 0.81e2 * (eta ^ 2) + 0.4571e4 / 0.648e3 * eta - 0.31e2 / 0.648e3 * (eta ^ 5)) * ci2 ^ 2 - 0.997e3 / 0.648e3 + 0.31e2 / 0.1944e4 * (eta ^ 5) + 0.2455e4 / 0.1944e4 * (eta ^ 4) + 0.325e3 / 0.162e3 * (eta ^ 3) - 0.179e3 / 0.243e3 * (eta ^ 2) - 0.5563e4 / 0.1944e4 * eta) * cos((3 * g + 2 * h + 3 * f)) + ((0.25e2 / 0.24e2 + 0.13e2 / 0.72e2 * (eta ^ 5) + 0.167e3 / 0.216e3 * (eta ^ 4) - 0.7e1 / 0.18e2 * (eta ^ 3) - (eta ^ 2) + 0.79e2 / 0.72e2 * eta) * ci2 ^ 4 + (-0.373e3 / 0.216e3 - 0.11e2 / 0.216e3 * (eta ^ 4) + 0.14e2 / 0.27e2 * (eta ^ 2) + 0.77e2 / 0.54e2 * (eta ^ 3) - 0.557e3 / 0.216e3 * eta - 0.13e2 / 0.72e2 * (eta ^ 5)) * ci2 ^ 2 - 0.49e2 / 0.72e2 * (eta ^ 4) + 0.41e2 / 0.81e2 * (eta ^ 2) - 0.71e2 / 0.54e2 * (eta ^ 3) + 0.431e3 / 0.216e3 * eta + 0.577e3 / 0.648e3 + 0.13e2 / 0.216e3 * (eta ^ 5)) * cos((f + g)) + 0.79e2 / 0.216e3 * (eta - 1) * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 4 + (-(eta ^ 4) + 0.164e3 / 0.79e2 * (eta ^ 3) + 0.476e3 / 0.79e2 * (eta ^ 2) - 0.212e3 / 0.79e2 * eta - 0.429e3 / 0.79e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 - 0.104e3 / 0.79e2 * (eta ^ 3) - 0.728e3 / 0.237e3 * (eta ^ 2) + 0.200e3 / 0.237e3 * eta + 0.521e3 / 0.237e3) * cos((3 * g + 2 * h + f)) + 0.50e2 / 0.27e2 * (1 + eta) * ((1 + eta) * ((eta ^ 2) - 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.49e2 / 0.50e2 * (eta ^ 3) - 0.3e1 / 0.50e2 * (eta ^ 2) + 0.61e2 / 0.50e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.11e2 / 0.150e3 * (eta ^ 3) - (eta ^ 2) / 0.50e2 - 0.19e2 / 0.150e3 * eta + 0.7e1 / 0.150e3) * cos((g + 2 * h + f)) + 0.23e2 / 0.648e3 * (eta - 1) * (((eta ^ 4) + 0.896e3 / 0.23e2 * (eta ^ 3) + 0.1408e4 / 0.23e2 * (eta ^ 2) - 0.1200e4 / 0.23e2 * eta - 0.1847e4 / 0.23e2) * ci2 ^ 4 + (-(eta ^ 4) - 0.1044e4 / 0.23e2 * (eta ^ 3) - 0.1404e4 / 0.23e2 * (eta ^ 2) + 0.1924e4 / 0.23e2 * eta + 0.2419e4 / 0.23e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 + 0.1120e4 / 0.69e2 * (eta ^ 3) + 0.1184e4 / 0.69e2 * (eta ^ 2) - 0.2864e4 / 0.69e2 * eta - 0.1021e4 / 0.23e2) * cos((g + 3 * f)) + (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 7 * f)) / 0.18e2 - 0.5e1 / 0.54e2 * (1 + eta) * Delta * (eta - 1) * (((1 + eta) ^ 2) * ci2 ^ 4 + (0.51e2 / 0.5e1 * (eta ^ 2) + 0.38e2 / 0.5e1 * eta - 0.37e2 / 0.5e1) * ci2 ^ 2 - 0.26e2 / 0.5e1 * (eta ^ 2) - (4 * eta) + 0.18e2 / 0.5e1) * sin((f - g)) + 0.65e2 / 0.162e3 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3) + 0.3e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2) * cos((5 * g + 2 * h + 5 * f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 3) * Delta * (eta - 1) * sin((g + 2 * h + 3 * f)) / 0.27e2 + 0.13e2 / 0.72e2 * ci2 ^ 2 * (ci2 - 0.1e1) * ((eta ^ 5) - 0.233e3 / 0.39e2 * (eta ^ 4) - 0.532e3 / 0.39e2 * (eta ^ 3) + 0.200e3 / 0.39e2 * (eta ^ 2) + 0.271e3 / 0.13e2 * eta + 0.337e3 / 0.39e2) * (ci2 + 0.1e1) * cos((g - 2 * h + f)) - 0.7e1 / 0.54e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + f)) + 0.79e2 / 0.216e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 2 - 0.28e2 / 0.79e2 * ((1 + eta) ^ 3)) * (eta - 1) * cos((3 * g + f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * sin((-g + 3 * f)) / 0.27e2 - 0.5e1 / 0.54e2 * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((5 * f + g)) - 0.115e3 / 0.162e3 * (1 + eta) * (((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 4 + (-0.31e2 / 0.23e2 * (eta ^ 2) - 0.86e2 / 0.115e3 * eta + 0.321e3 / 0.115e3) * ci2 ^ 2 + 0.66e2 / 0.115e3 * (eta ^ 2) + 0.36e2 / 0.115e3 * eta - 0.6e1 / 0.5e1) * Delta * (eta - 1) * sin((g + 3 * f)) - 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + f)) - 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + f)) - 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 5 * f))) / a ^ 4 / ci2 / (eta ^ 11) / (1 + eta) 0.135e3 / 0.16e2 * ((((-0.179e3 / 0.45e2 * (eta ^ 4) - 0.202e3 / 0.45e2 * (eta ^ 3) + 0.238e3 / 0.27e2 * (eta ^ 2) + 0.2809e4 / 0.270e3 * eta + 0.79e2 / 0.90e2) * ci2 ^ 4 + (-0.101e3 / 0.90e2 + 0.244e3 / 0.45e2 * (eta ^ 4) + 0.269e3 / 0.45e2 * (eta ^ 3) + (-0.32e2 / 0.15e2 * Delta ^ 2 - 0.1586e4 / 0.135e3) * (eta ^ 2) + (-0.3679e4 / 0.270e3 - 0.32e2 / 0.15e2 * Delta ^ 2) * eta) * ci2 ^ 2 + 0.41e2 / 0.90e2 - 0.188e3 / 0.135e3 * (eta ^ 4) - 0.43e2 / 0.27e2 * (eta ^ 3) + (0.85e2 / 0.27e2 + 0.16e2 / 0.15e2 * Delta ^ 2) * (eta ^ 2) + (0.209e3 / 0.54e2 + 0.16e2 / 0.15e2 * Delta ^ 2) * eta) * sin(g) + ((1 + eta) ^ 2) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 4 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - 2 * h + 2 * f)) / 0.60e2 - 0.7e1 / 0.15e2 * ((eta ^ 4) + 0.9e1 / 0.7e1 * (eta ^ 3) - 0.55e2 / 0.21e2 * (eta ^ 2) - 0.109e3 / 0.21e2 * eta - 0.20e2 / 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 4 * f)) + ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + 2 * f)) / 0.60e2 - ci2 ^ 2 * (1 + eta) * ((eta - 1) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + 2 * f)) / 0.60e2 + Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h)) - (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((1 + eta) * (eta + 0.53e2 / 0.20e2) * ci2 ^ 2 - 0.8e1 / 0.15e2 * (eta ^ 2) + eta / 0.15e2 + 0.18e2 / 0.5e1) * sin((3 * g + 6 * f)) / 0.9e1 - 0.4e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * cos((g - 2 * h + 2 * f)) - 0.28e2 / 0.45e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 2) + 0.33e2 / 0.28e2 * eta + 0.8e1 / 0.7e1) * sin((5 * g + 2 * h + 2 * f)) + 0.20e2 / 0.3e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * cos((2 * f + 3 * g)) + Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((4 * f + 3 * g)) + 0.5e1 / 0.9e1 * ((eta ^ 3) + 0.53e2 / 0.25e2 * (eta ^ 2) - 0.104e3 / 0.25e2 * eta - 0.333e3 / 0.50e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((g - 2 * h + 4 * f)) + 0.4e1 / 0.5e1 * (1 + eta) * (eta - 1) * (((eta ^ 2) + 0.41e2 / 0.48e2 * eta - 0.55e2 / 0.48e2) * ci2 ^ 4 + (-(eta ^ 2) / 0.2e1 - 0.7e1 / 0.16e2 * eta + 0.9e1 / 0.16e2) * ci2 ^ 2 - (eta ^ 2) / 0.6e1 - 0.19e2 / 0.144e3 * eta + 0.29e2 / 0.144e3) * sin((-g + 2 * f)) - ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((g + 2 * h + 4 * f)) / 0.15e2 - ((-0.37e2 / 0.10e2 + (eta ^ 4) + 0.32e2 / 0.15e2 * (eta ^ 3) - 0.103e3 / 0.45e2 * (eta ^ 2) - 0.587e3 / 0.90e2 * eta) * ci2 ^ 2 - (eta ^ 4) / 0.9e1 + (eta ^ 3) / 0.45e2 + 0.43e2 / 0.45e2 * (eta ^ 2) - 0.11e2 / 0.45e2 * eta - 0.4e1 / 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) + 0.20e2 / 0.3e1 * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 2 * f)) - 0.26e2 / 0.9e1 * (1 + eta) * eta * (((eta ^ 2) - 0.391e3 / 0.195e3) * ci2 ^ 4 + (-0.13e2 / 0.10e2 * (eta ^ 2) + 0.48e2 / 0.65e2 * Delta ^ 2 + 0.1007e4 / 0.390e3) * ci2 ^ 2 + 0.29e2 / 0.130e3 * (eta ^ 2) - 0.24e2 / 0.65e2 * Delta ^ 2 - 0.35e2 / 0.78e2) * sin((g + 2 * h)) + ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g + 4 * f)) / 0.15e2 + ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g - 2 * h + 4 * f)) / 0.15e2 + 0.8e1 / 0.15e2 * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * cos((g + 2 * h)) + ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((g + 6 * f)) / 0.9e1 - ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * ((1 + eta) ^ 2) * (eta - 1) * sin((3 * g + 2 * h + 6 * f)) / 0.9e1 - 0.4e1 / 0.5e1 * ((1 + eta) ^ 2) * ((eta ^ 2) - 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((g + 2 * h + 2 * f)) + 0.2e1 / 0.5e1 * ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * cos((g + 2 * h + 2 * f)) - 0.5e1 / 0.3e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.619e3 / 0.150e3 * eta - 0.76e2 / 0.25e2 + (eta ^ 4) + 0.11e2 / 0.10e2 * (eta ^ 3) - 0.34e2 / 0.15e2 * (eta ^ 2)) * ci2 ^ 2 - 0.4e1 / 0.75e2 * (1 + eta) * ((eta ^ 3) - 0.5e1 / 0.4e1 * (eta ^ 2) - eta / 0.4e1 + 0.8e1)) * sin((2 * f + 3 * g)) + ((-(eta ^ 4) / 0.45e2 - 0.59e2 / 0.90e2 * (eta ^ 3) - 0.26e2 / 0.45e2 * (eta ^ 2) + 0.449e3 / 0.90e2 * eta + 0.6e1) * ci2 ^ 4 + (-0.427e3 / 0.90e2 * eta - 0.31e2 / 0.45e2 * (eta ^ 4) + (eta ^ 3) / 0.90e2 + 0.67e2 / 0.45e2 * (eta ^ 2) - 0.103e3 / 0.15e2) * ci2 ^ 2 + 0.109e3 / 0.45e2 + 0.3e1 / 0.5e1 * (eta ^ 4) + 0.11e2 / 0.30e2 * (eta ^ 3) - 0.47e2 / 0.45e2 * (eta ^ 2) + 0.97e2 / 0.90e2 * eta) * sin((g + 2 * f)) + ((-(eta ^ 4) - 0.32e2 / 0.15e2 * (eta ^ 3) + 0.103e3 / 0.45e2 * (eta ^ 2) + 0.587e3 / 0.90e2 * eta + 0.37e2 / 0.10e2) * ci2 ^ 4 + (-0.28e2 / 0.9e1 * (eta ^ 2) - 0.751e3 / 0.90e2 * eta + 0.7e1 / 0.5e1 * (eta ^ 4) + 0.8e1 / 0.3e1 * (eta ^ 3) - 0.137e3 / 0.30e2) * ci2 ^ 2 + 0.163e3 / 0.90e2 - 0.3e1 / 0.5e1 * (eta ^ 4) - 0.16e2 / 0.15e2 * (eta ^ 3) + 0.59e2 / 0.45e2 * (eta ^ 2) + 0.61e2 / 0.18e2 * eta) * sin((3 * g + 2 * h + 4 * f)) + ((-0.5e1 / 0.3e1 * (eta ^ 4) - 0.11e2 / 0.6e1 * (eta ^ 3) + 0.34e2 / 0.9e1 * (eta ^ 2) + 0.619e3 / 0.90e2 * eta + 0.76e2 / 0.15e2) * ci2 ^ 4 + (-0.38e2 / 0.9e1 * (eta ^ 2) - 0.767e3 / 0.90e2 * eta + 0.7e1 / 0.3e1 * (eta ^ 4) + 0.79e2 / 0.30e2 * (eta ^ 3) - 0.32e2 / 0.5e1) * ci2 ^ 2 + 0.116e3 / 0.45e2 + 0.14e2 / 0.9e1 * (eta ^ 2) + 0.61e2 / 0.18e2 * eta - (eta ^ 4) - 0.103e3 / 0.90e2 * (eta ^ 3)) * sin((3 * g + 2 * h + 2 * f)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h)) / 0.30e2 - (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 8 * f)) / 0.90e2 + 0.7e1 / 0.9e1 * ci2 ^ 2 * ((eta ^ 4) + 0.5e1 / 0.14e2 * (eta ^ 3) - 0.92e2 / 0.35e2 * (eta ^ 2) + 0.221e3 / 0.70e2 * eta + 0.228e3 / 0.35e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 2 * f)) - 0.16e2 / 0.135e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.16e2 * (eta ^ 2) - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 6 * f)) - 0.2e1 / 0.5e1 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * cos((-g - 2 * h + 2 * f)) - 0.2e1 / 0.5e1 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * cos((-g + 2 * f)) - 0.4e1 * (((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 4 + (-0.3e1 / 0.2e1 * (eta ^ 2) - 0.9e1 / 0.10e2 * eta + 0.16e2 / 0.15e2) * ci2 ^ 2 + 0.13e2 / 0.20e2 * (eta ^ 2) + 0.2e1 / 0.5e1 * eta - 0.9e1 / 0.20e2) * Delta * cos((g + 2 * f)) + 0.31e2 / 0.15e2 * (eta - 1) * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 4 + (-0.143e3 / 0.93e2 * (eta ^ 3) - 0.105e3 / 0.31e2 * (eta ^ 2) - 0.38e2 / 0.31e2 * eta + 0.101e3 / 0.186e3) * ci2 ^ 2 + 0.193e3 / 0.279e3 * (eta ^ 3) + 0.413e3 / 0.279e3 * (eta ^ 2) + 0.151e3 / 0.279e3 * eta - 0.41e2 / 0.186e3) * sin((3 * g + 2 * h)) + 0.22e2 / 0.45e2 * (((eta ^ 3) + (2 * eta ^ 2) - 0.113e3 / 0.22e2 * eta - 0.339e3 / 0.44e2) * ci2 ^ 4 + (-0.67e2 / 0.44e2 * (eta ^ 3) - 0.125e3 / 0.44e2 * (eta ^ 2) + 0.287e3 / 0.44e2 * eta + 0.207e3 / 0.22e2) * ci2 ^ 2 + 0.31e2 / 0.44e2 * (eta ^ 3) + 0.57e2 / 0.44e2 * (eta ^ 2) - 0.113e3 / 0.44e2 * eta - 0.81e2 / 0.22e2) * (eta - 1) * sin((g + 4 * f)) + cos(g) * Delta * (((1 + eta) ^ 2) * ci2 ^ 4 + (-0.13e2 / 0.15e2 * (eta ^ 2) - 0.22e2 / 0.15e2 * eta - 0.1e1 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 + 0.8e1 / 0.15e2 * eta - 0.1e1 / 0.15e2) - 0.49e2 / 0.45e2 * ci2 ^ 2 * ((eta ^ 4) + 0.72e2 / 0.49e2 * (eta ^ 3) - 0.136e3 / 0.49e2 * (eta ^ 2) - 0.415e3 / 0.98e2 * eta - 0.79e2 / 0.98e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h)) + 0.4e1 / 0.5e1 * ((eta ^ 2) + 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g - 2 * h + 2 * f)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 8 * f)) / 0.90e2 - (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((g + 4 * f)) - (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h)) + 0.31e2 / 0.15e2 * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 2 - ((1 + eta) ^ 3) / 0.62e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((3 * g)) - Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 4 * f)) + ci2 ^ 2 * (1 + eta) * (eta + 0.53e2 / 0.20e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * sin((g - 2 * h + 6 * f)) / 0.9e1 - Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g))) * sqrt((-eta ^ 2 + 1)) + ((0.449e3 / 0.120e3 - 0.49e2 / 0.6e1 * (eta ^ 3) + 0.77e2 / 0.15e2 * (eta ^ 2) + 0.13e2 / 0.40e2 * (eta ^ 5) - 0.211e3 / 0.40e2 * (eta ^ 4) + 0.463e3 / 0.40e2 * eta) * ci2 ^ 4 + (-0.97e2 / 0.24e2 + 0.19e2 / 0.2e1 * (eta ^ 3) - 0.34e2 / 0.5e1 * (eta ^ 2) - 0.13e2 / 0.40e2 * (eta ^ 5) + 0.773e3 / 0.120e3 * (eta ^ 4) - 0.329e3 / 0.24e2 * eta) * ci2 ^ 2 + 0.17e2 / 0.9e1 * (eta ^ 2) - 0.617e3 / 0.360e3 * (eta ^ 4) - 0.49e2 / 0.18e2 * (eta ^ 3) + 0.33e2 / 0.8e1 * eta + 0.31e2 / 0.24e2 + 0.13e2 / 0.120e3 * (eta ^ 5)) * sin((f + g)) - (1 + eta) * ((eta - 1) ^ 2) * (((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * ci2 ^ 4 + (-(eta ^ 2) + 0.266e3 / 0.15e2 * eta + 0.421e3 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.338e3 / 0.45e2 * eta - 0.493e3 / 0.45e2) * sin((5 * f + g)) / 0.16e2 + 0.19e2 / 0.6e1 * (1 + eta) * cos((f + g)) * Delta * (((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * ci2 ^ 4 + (-0.191e3 / 0.95e2 * (eta ^ 3) + 0.3e1 / 0.19e2 * (eta ^ 2) + 0.243e3 / 0.95e2 * eta - 0.15e2 / 0.19e2) * ci2 ^ 2 + 0.86e2 / 0.95e2 * (eta ^ 3) - 0.6e1 / 0.95e2 * (eta ^ 2) - 0.22e2 / 0.19e2 * eta + 0.6e1 / 0.19e2) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((3 * g + 2 * h + 7 * f)) / 0.48e2 - 0.11e2 / 0.240e3 * (1 + eta) * (eta - 1) * (((eta ^ 3) - 0.843e3 / 0.11e2 * (eta ^ 2) - 0.799e3 / 0.11e2 * eta + 0.191e3 / 0.11e2) * ci2 ^ 4 + (-(eta ^ 3) + 0.963e3 / 0.11e2 * (eta ^ 2) + 0.975e3 / 0.11e2 * eta - 0.71e2 / 0.11e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 - 0.427e3 / 0.33e2 * (eta ^ 2) - 0.181e3 / 0.11e2 * eta - 0.161e3 / 0.33e2) * sin((f - g)) - 0.2e1 / 0.5e1 * ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((g + 2 * h + 3 * f)) - 0.41e2 / 0.30e2 * (1 + eta) * ((eta ^ 2) + 0.58e2 / 0.41e2 * eta + 0.37e2 / 0.41e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((5 * g + 2 * h + 3 * f)) - 0.35e2 / 0.6e1 * (1 + eta) * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + f)) - ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 7 * f)) / 0.48e2 + ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + 3 * f)) / 0.240e3 + 0.31e2 / 0.240e3 * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 2 + 0.88e2 / 0.31e2 * (eta ^ 2) - 0.16e2 / 0.31e2 * eta - 0.664e3 / 0.93e2) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((3 * g + 5 * f)) + ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * (0.24e2 / 0.5e1 + (1 + eta) * ci2 ^ 2) * sin((3 * g + 7 * f)) / 0.48e2 + 0.29e2 / 0.15e2 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * ((eta ^ 2) + 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * cos((-g - 2 * h + f)) + 0.23e2 / 0.360e3 * ((eta ^ 4) + 0.752e3 / 0.23e2 * (eta ^ 3) + 0.976e3 / 0.23e2 * (eta ^ 2) - 0.1632e4 / 0.23e2 * eta - 0.1991e4 / 0.23e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((g - 2 * h + 3 * f)) - ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + 3 * f)) / 0.240e3 + 0.9e1 / 0.80e2 * (((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * ci2 ^ 4 + (-(eta ^ 2) + 0.2e1 / 0.3e1 * eta + 0.41e2 / 0.27e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.26e2 / 0.81e2 * eta - 0.49e2 / 0.81e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - 2 * h + f)) + 0.31e2 / 0.240e3 * (1 + eta) * (eta - 1) * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 4 + (-(eta ^ 3) + 0.263e3 / 0.31e2 * (eta ^ 2) + 0.691e3 / 0.31e2 * eta + 0.421e3 / 0.31e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 - 0.335e3 / 0.93e2 * (eta ^ 2) - 0.835e3 / 0.93e2 * eta - 0.493e3 / 0.93e2) * sin((3 * g + 2 * h + 5 * f)) + 0.2e1 / 0.5e1 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g - 2 * h + 3 * f)) - 0.31e2 / 0.360e3 * ((-0.1991e4 / 0.31e2 + (eta ^ 5) + 0.1503e4 / 0.31e2 * (eta ^ 4) + 0.2492e4 / 0.31e2 * (eta ^ 3) - 0.904e3 / 0.31e2 * (eta ^ 2) - 0.3579e4 / 0.31e2 * eta) * ci2 ^ 2 - 0.108e3 / 0.31e2 * ((eta ^ 3) - 0.17e2 / 0.9e1 * (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.37e2 / 0.9e1) * (1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 3 * f)) + 0.10e2 / 0.3e1 * (1 + eta) * (((eta ^ 2) + 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.57e2 / 0.50e2 * (eta ^ 2) - 0.27e2 / 0.25e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.23e2 / 0.150e3 * (eta ^ 2) + 0.13e2 / 0.75e2 * eta + 0.7e1 / 0.150e3) * (eta - 1) * sin((-g - 2 * h + f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-3 * g - 2 * h + 3 * f)) / 0.240e3 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((g + 7 * f)) / 0.48e2 - ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((eta - 95) * ci2 ^ 4 + (-eta + 47) * ci2 ^ 2 + eta / 0.3e1 + 0.49e2 / 0.3e1) * sin((-g + 3 * f)) / 0.240e3 + ((-0.31e2 / 0.360e3 * (eta ^ 5) - 0.167e3 / 0.40e2 * (eta ^ 4) - 0.623e3 / 0.90e2 * (eta ^ 3) + 0.113e3 / 0.45e2 * (eta ^ 2) + 0.1193e4 / 0.120e3 * eta + 0.1991e4 / 0.360e3) * ci2 ^ 4 + (0.1979e4 / 0.360e3 * (eta ^ 4) + 0.799e3 / 0.90e2 * (eta ^ 3) - 0.146e3 / 0.45e2 * (eta ^ 2) - 0.4571e4 / 0.360e3 * eta + 0.31e2 / 0.360e3 * (eta ^ 5) - 0.2491e4 / 0.360e3) * ci2 ^ 2 + 0.997e3 / 0.360e3 + 0.5563e4 / 0.1080e4 * eta - 0.31e2 / 0.1080e4 * (eta ^ 5) - 0.491e3 / 0.216e3 * (eta ^ 4) - 0.65e2 / 0.18e2 * (eta ^ 3) + 0.179e3 / 0.135e3 * (eta ^ 2)) * sin((3 * g + 2 * h + 3 * f)) - 0.35e2 / 0.6e1 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 1) * cos((3 * g + f)) + 0.23e2 / 0.18e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * Delta * (eta - 1) * cos((g - 2 * h + 3 * f)) - 0.13e2 / 0.6e1 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 3 * f)) - 0.79e2 / 0.120e3 * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 2 + 0.28e2 / 0.79e2 * ((1 + eta) ^ 3)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((3 * g + f)) - ((1 + eta) ^ 3) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 5 * f)) / 0.6e1 + ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((5 * f + g)) / 0.6e1 - 0.29e2 / 0.15e2 * ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * Delta * cos((g + 2 * h + f)) - 0.10e2 / 0.3e1 * (1 + eta) * ((1 + eta) * ((eta ^ 2) - 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.49e2 / 0.50e2 * (eta ^ 3) - 0.3e1 / 0.50e2 * (eta ^ 2) + 0.61e2 / 0.50e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.11e2 / 0.150e3 * (eta ^ 3) - (eta ^ 2) / 0.50e2 - 0.19e2 / 0.150e3 * eta + 0.7e1 / 0.150e3) * sin((g + 2 * h + f)) + 0.23e2 / 0.360e3 * (eta - 1) * (((eta ^ 4) + 0.608e3 / 0.23e2 * (eta ^ 3) + 0.544e3 / 0.23e2 * (eta ^ 2) - 0.2064e4 / 0.23e2 * eta - 0.2135e4 / 0.23e2) * ci2 ^ 4 + (-(eta ^ 4) - 0.900e3 / 0.23e2 * (eta ^ 3) - 0.972e3 / 0.23e2 * (eta ^ 2) + 0.2356e4 / 0.23e2 * eta + 0.2563e4 / 0.23e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 + 0.1264e4 / 0.69e2 * (eta ^ 3) + 0.1616e4 / 0.69e2 * (eta ^ 2) - 0.2432e4 / 0.69e2 * eta - 0.973e3 / 0.23e2) * sin((g + 3 * f)) - 0.79e2 / 0.120e3 * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 4 + (-(eta ^ 4) + 0.164e3 / 0.79e2 * (eta ^ 3) + 0.476e3 / 0.79e2 * (eta ^ 2) - 0.212e3 / 0.79e2 * eta - 0.429e3 / 0.79e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 - 0.104e3 / 0.79e2 * (eta ^ 3) - 0.728e3 / 0.237e3 * (eta ^ 2) + 0.200e3 / 0.237e3 * eta + 0.521e3 / 0.237e3) * (eta - 1) * sin((3 * g + 2 * h + f)) - (1 + eta) * Delta * (eta - 1) * (((1 + eta) ^ 2) * ci2 ^ 4 + (-(13 * eta ^ 2) - 0.66e2 / 0.5e1 * eta + 0.23e2 / 0.5e1) * ci2 ^ 2 + 0.32e2 / 0.5e1 * (eta ^ 2) + 0.32e2 / 0.5e1 * eta - 0.12e2 / 0.5e1) * cos((f - g)) / 0.6e1 + ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * ((eta - 1) ^ 2) * cos((-g - 2 * h + 3 * f)) / 0.15e2 - ((1 + eta) ^ 3) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * cos((g + 2 * h + 3 * f)) / 0.15e2 + ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((-3 * g - 2 * h + f)) / 0.6e1 - 0.13e2 / 0.18e2 * ((eta ^ 3) + 0.3e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 5 * f)) - (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 7 * f)) / 0.10e2 + ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * ((eta - 1) ^ 2) * cos((-g + 3 * f)) / 0.15e2 + 0.13e2 / 0.40e2 * ((eta ^ 5) - 0.233e3 / 0.39e2 * (eta ^ 4) - 0.532e3 / 0.39e2 * (eta ^ 3) + 0.200e3 / 0.39e2 * (eta ^ 2) + 0.271e3 / 0.13e2 * eta + 0.337e3 / 0.39e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + f)) + 0.7e1 / 0.30e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + f)) + 0.23e2 / 0.18e2 * (1 + eta) * (((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 4 + (-0.167e3 / 0.115e3 * (eta ^ 2) - 0.22e2 / 0.23e2 * eta + 0.309e3 / 0.115e3) * ci2 ^ 2 + 0.72e2 / 0.115e3 * (eta ^ 2) + 0.48e2 / 0.115e3 * eta - 0.132e3 / 0.115e3) * Delta * (eta - 1) * cos((g + 3 * f)) - ci2 ^ 2 * (1 + eta) * ((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * sin((g - 2 * h + 5 * f)) / 0.16e2 + Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + f)) / 0.6e1 + 0.9e1 / 0.80e2 * ci2 ^ 2 * (1 + eta) * ((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * sin((-3 * g + f)) - Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 5 * f)) / 0.6e1 - 0.13e2 / 0.6e1 * ci2 ^ 2 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((3 * g + 3 * f)) - Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + f)) / 0.6e1 + Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 5 * f)) / 0.6e1 - 0.11e2 / 0.240e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 3) - 0.43e2 / 0.11e2 * (eta ^ 2) - 0.95e2 / 0.11e2 * eta - 0.3e1) * sin((-g + 2 * h + f)) + 0.19e2 / 0.6e1 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * Delta * cos((g - 2 * h + f))) * sqrt(-ci2 ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 4 * J ^ 2 / a ^ 4 / ci2 / (eta ^ 11) / (1 + eta)];
D4 = [0.34e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * ((0.3e1 / 0.272e3 * (eta ^ 2 + 76 * eta + 103) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ci2 ^ 2 * sin((-h + 3 * f + 2 * g)) + 0.15e2 / 0.34e2 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * cos((-h + 3 * f + 2 * g)) - 0.9e1 / 0.272e3 * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 5 * f + 2 * g)) + ((-0.3e1 / 0.272e3 * (eta ^ 2) - 0.57e2 / 0.68e2 * eta - 0.309e3 / 0.272e3) * ci2 ^ 4 + (0.381e3 / 0.272e3 + 0.3e1 / 0.272e3 * (eta ^ 2) + 0.75e2 / 0.68e2 * eta) * ci2 ^ 2 - (eta ^ 2) / 0.272e3 - 0.31e2 / 0.68e2 * eta - 0.151e3 / 0.272e3) * sin((h + 3 * f + 2 * g)) + 0.45e2 / 0.272e3 * ((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + f + 2 * g)) - 0.15e2 / 0.34e2 * (1 + eta) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((h + 3 * f + 2 * g)) + 0.9e1 / 0.272e3 * (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * sin((-h - 2 * g + f)) + 0.9e1 / 0.272e3 * (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * sin((h + 5 * f + 2 * g)) + 0.45e2 / 0.34e2 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * cos((-h + f + 2 * g)) - 0.9e1 / 0.34e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * sin((h + 3 * f + 4 * g)) - 0.3e1 / 0.34e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * sin((h + 5 * f + 4 * g)) + ((-0.45e2 / 0.272e3 * (eta ^ 2) + 0.9e1 / 0.68e2 * eta + 0.117e3 / 0.272e3) * ci2 ^ 4 + (-0.189e3 / 0.272e3 + 0.45e2 / 0.272e3 * (eta ^ 2) - 0.27e2 / 0.68e2 * eta) * ci2 ^ 2 - 0.15e2 / 0.272e3 * (eta ^ 2) + 0.15e2 / 0.68e2 * eta + 0.87e2 / 0.272e3) * sin((h + f + 2 * g)) + 0.9e1 / 0.17e2 * (1 + eta) * (-0.5e1 / 0.2e1 * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((h + f + 2 * g)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((h - 2 * g + f)) / 0.16e2 + (0.2e1 * ci2 ^ 4 - 0.2e1 * ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((-h + f)) + Delta * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-h + f)) + (-0.2e1 * ci2 ^ 4 + 0.2e1 * ci2 ^ 2 - 0.1e1 / 0.6e1) * sin((h + f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * cos((h + f)))) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (-0.15e2 / 0.34e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) - 0.11e2 / 0.5e1) * sin((-h + 2 * g + 2 * f)) - 0.15e2 / 0.68e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (eta + 0.19e2 / 0.10e2) * sin((-h + 2 * g + 4 * f)) + (0.45e2 / 0.34e2 * Delta * ci2 ^ 4 - 0.45e2 / 0.34e2 * Delta * ci2 ^ 2) * cos((-h + 2 * g + 2 * f)) + ((0.15e2 / 0.34e2 * (eta ^ 2) - 0.33e2 / 0.34e2) * ci2 ^ 4 + (0.39e2 / 0.34e2 - 0.21e2 / 0.34e2 * (eta ^ 2)) * ci2 ^ 2 + 0.9e1 / 0.34e2 * (eta ^ 2) - 0.15e2 / 0.34e2) * sin((h + 2 * g + 2 * f)) + 0.15e2 / 0.68e2 * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.23e2 / 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.9e1 / 0.10e2) * (eta - 1) * sin((h + 2 * g + 4 * f)) + 0.9e1 / 0.68e2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 2 * f + 4 * g)) + 0.3e1 / 0.34e2 * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * f + 4 * g)) + (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 6 * f + 4 * g)) / 0.68e2 - 0.45e2 / 0.34e2 * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((h + 2 * g + 2 * f)) - 0.9e1 / 0.34e2 * (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-h + 2 * f)) + 0.33e2 / 0.68e2 * (eta + 0.31e2 / 0.22e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((-h + 2 * g)) + 0.9e1 / 0.34e2 * (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((h + 2 * f)) - 0.33e2 / 0.68e2 * (eta - 1) * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 4 + (-0.17e2 / 0.11e2 * eta - 0.43e2 / 0.22e2) * ci2 ^ 2 + 0.23e2 / 0.33e2 * eta + 0.5e1 / 0.6e1) * sin((h + 2 * g)) + sin(h) * ((-0.59e2 / 0.34e2 + (eta ^ 2)) * ci2 ^ 4 + (-0.43e2 / 0.34e2 * (eta ^ 2) + 0.2e1 + 0.9e1 / 0.17e2 * Delta ^ 2) * ci2 ^ 2 - 0.9e1 / 0.34e2 * Delta ^ 2 - 0.37e2 / 0.136e3 + 0.7e1 / 0.34e2 * (eta ^ 2)))) * J ^ 2 / a ^ 5 / ci2 / (eta ^ 8) / (1 + eta) 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 4 * sqrt(-ci2 ^ 2 + 0.1e1) * J ^ 2 * ((1 + eta) * (-(eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((-h + 3 * f - 2 * g)) / 0.16e2 + 0.5e1 / 0.16e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ci2 ^ 2 * cos((-h + 2 * g + 7 * f)) + (0.5e1 / 0.2e1 * Delta * ci2 ^ 4 - 0.5e1 / 0.2e1 * Delta * ci2 ^ 2) * sin((-h + 5 * f + 2 * g)) - 0.5e1 / 0.16e2 * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((h + 2 * g + 7 * f)) + 0.5e1 / 0.2e1 * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((-h - 2 * g + f)) - 0.5e1 / 0.2e1 * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + 5 * f + 2 * g)) + (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ci2 ^ 2 * cos((h + 3 * f - 2 * g)) / 0.16e2 + ((ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((-h + 3 * f)) + (0.5e1 / 0.2e1 * ci2 ^ 2 - 0.5e1 / 0.2e1 * ci2 ^ 4) * sin((h - 2 * g + f)) + sin((h + 3 * f)) * (-ci2 ^ 2 + 0.1e1 / 0.2e1)) * Delta) * ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) / 0.8e1 + (0.83e2 / 0.192e3 * ((eta ^ 4) + 0.722e3 / 0.83e2 * (eta ^ 3) + 0.852e3 / 0.83e2 * (eta ^ 2) - 0.1610e4 / 0.83e2 * eta - 0.1991e4 / 0.83e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 3 * f + 2 * g)) - 0.9e1 / 0.128e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) - 0.196e3 / 0.9e1 * eta - 0.349e3 / 0.9e1) * (eta - 1) * cos((-h + 5 * f + 2 * g)) - 0.15e2 / 0.16e2 * Delta * ci2 ^ 2 * (1 + eta) * (eta ^ 2 - 5) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 3 * f + 2 * g)) - 0.3e1 / 0.128e3 * ((1 + eta) ^ 2) * ((eta + 11) * ci2 ^ 4 + (-eta - 0.41e2 / 0.3e1) * ci2 ^ 2 + eta / 0.3e1 + 0.49e2 / 0.9e1) * (eta - 1) * cos((-h - 2 * g + f)) + ((-0.83e2 / 0.192e3 * (eta ^ 4) - 0.361e3 / 0.96e2 * (eta ^ 3) - 0.71e2 / 0.16e2 * (eta ^ 2) + 0.805e3 / 0.96e2 * eta + 0.1991e4 / 0.192e3) * ci2 ^ 4 + (0.115e3 / 0.192e3 * (eta ^ 4) + 0.491e3 / 0.96e2 * (eta ^ 3) + 0.45e2 / 0.8e1 * (eta ^ 2) - 0.1055e4 / 0.96e2 * eta - 0.2491e4 / 0.192e3) * ci2 ^ 2 + 0.997e3 / 0.192e3 - 0.49e2 / 0.192e3 * (eta ^ 4) - 0.69e2 / 0.32e2 * (eta ^ 3) + 0.145e3 / 0.32e2 * eta - 0.109e3 / 0.48e2 * (eta ^ 2)) * cos((h + 3 * f + 2 * g)) + 0.9e1 / 0.128e3 * (((eta ^ 2) - 0.196e3 / 0.9e1 * eta - 0.349e3 / 0.9e1) * ci2 ^ 4 + (-(eta ^ 2) + 0.268e3 / 0.9e1 * eta + 0.421e3 / 0.9e1) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.340e3 / 0.27e2 * eta - 0.493e3 / 0.27e2) * (1 + eta) * (eta - 1) * cos((h + 5 * f + 2 * g)) + 0.15e2 / 0.16e2 * (1 + eta) * Delta * (eta ^ 2 - 5) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + 3 * f + 2 * g)) + 0.85e2 / 0.64e2 * ci2 ^ 2 * ((eta ^ 4) + 0.214e3 / 0.85e2 * (eta ^ 3) + 0.124e3 / 0.85e2 * (eta ^ 2) - 0.70e2 / 0.17e2 * eta - 0.337e3 / 0.85e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + f + 2 * g)) - 0.17e2 / 0.16e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) - 0.37e2 / 0.17e2) * cos((h + 3 * f + 4 * g)) - 0.13e2 / 0.16e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) - 0.83e2 / 0.39e2) * cos((h + 5 * f + 4 * g)) - 0.3e1 / 0.16e2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g + 7 * f)) - 0.15e2 / 0.16e2 * Delta * ci2 ^ 2 * (1 + eta) * (eta ^ 2 - 5) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + f + 2 * g)) + 0.3e1 / 0.4e1 * ((1 + eta) ^ 2) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * cos((-h + 3 * f)) + ((-0.85e2 / 0.64e2 * (eta ^ 4) - 0.31e2 / 0.16e2 * (eta ^ 2) - 0.107e3 / 0.32e2 * (eta ^ 3) + 0.175e3 / 0.32e2 * eta + 0.337e3 / 0.64e2) * ci2 ^ 4 + (0.117e3 / 0.64e2 * (eta ^ 4) + 0.21e2 / 0.8e1 * (eta ^ 2) + 0.145e3 / 0.32e2 * (eta ^ 3) - 0.221e3 / 0.32e2 * eta - 0.429e3 / 0.64e2) * ci2 ^ 2 + 0.521e3 / 0.192e3 - 0.149e3 / 0.192e3 * (eta ^ 4) - 0.53e2 / 0.48e2 * (eta ^ 2) - 0.61e2 / 0.32e2 * (eta ^ 3) + 0.89e2 / 0.32e2 * eta) * cos((h + f + 2 * g)) + 0.3e1 / 0.4e1 * (1 + eta) * (0.5e1 / 0.4e1 * Delta * (eta ^ 2 - 5) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + f + 2 * g)) + ci2 ^ 2 * (eta + 11) * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h - 2 * g + f)) / 0.32e2 - 0.7e1 / 0.12e2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g + f)) + (((eta ^ 2) - 0.7e1 / 0.3e1) * ci2 ^ 4 + (0.2e1 / 0.3e1 * (eta ^ 3) + 0.7e1 / 0.6e1 - (eta ^ 2) / 0.2e1) * ci2 ^ 2 - (eta ^ 2) / 0.6e1 + 0.7e1 / 0.18e2 - (eta ^ 3) / 0.3e1) * cos((-h + f)) - (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * cos((h + 3 * f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta ^ 2 - 5) * sin((-h + f)) / 0.2e1 + ((-(eta ^ 2) + 0.7e1 / 0.3e1) * ci2 ^ 4 + ((eta ^ 2) / 0.2e1 - 0.7e1 / 0.6e1 - 0.2e1 / 0.3e1 * (eta ^ 3)) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 - 0.7e1 / 0.18e2 + (eta ^ 2) / 0.6e1) * cos((h + f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((h + f)) * Delta * (eta ^ 2 - 5) / 0.2e1)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (-0.5e1 / 0.24e2 * ci2 ^ 2 * (1 + eta) * (eta + 0.53e2 / 0.20e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * cos((-h + 6 * f + 2 * g)) - 0.5e1 / 0.8e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4) - (2 * eta ^ 3) - 0.57e2 / 0.5e1 * (eta ^ 2) - 0.6e1 / 0.5e1 * eta + 0.76e2 / 0.5e1) * cos((-h + 2 * g + 2 * f)) - 0.5e1 / 0.8e1 * ci2 ^ 2 * ((eta ^ 3) + 0.9e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.10e2 * eta - 0.111e3 / 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((-h + 2 * g + 4 * f)) + (1 + eta) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((-h - 2 * g + 2 * f)) / 0.32e2 - 0.15e2 / 0.4e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((-h + 2 * g + 2 * f)) - 0.15e2 / 0.8e1 * Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * g + 4 * f)) + 0.5e1 / 0.24e2 * (1 + eta) * ((eta - 1) ^ 2) * ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * cos((h + 6 * f + 2 * g)) + ((-0.5e1 / 0.4e1 * (eta ^ 3) - 0.57e2 / 0.8e1 * (eta ^ 2) - 0.3e1 / 0.4e1 * eta + 0.5e1 / 0.8e1 * (eta ^ 4) + 0.19e2 / 0.2e1) * ci2 ^ 4 + (-0.7e1 / 0.8e1 * (eta ^ 4) + 0.7e1 / 0.4e1 * (eta ^ 3) + 0.75e2 / 0.8e1 * (eta ^ 2) + 0.3e1 / 0.4e1 * eta - 0.12e2) * ci2 ^ 2 - eta / 0.4e1 - 0.3e1 / 0.4e1 * (eta ^ 3) + 0.3e1 / 0.8e1 * (eta ^ 4) - 0.31e2 / 0.8e1 * (eta ^ 2) + 0.29e2 / 0.6e1) * cos((h + 2 * g + 2 * f)) + 0.5e1 / 0.8e1 * (((eta ^ 3) + 0.9e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.10e2 * eta - 0.111e3 / 0.10e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * (eta ^ 3) - 0.11e2 / 0.5e1 * (eta ^ 2) + 0.103e3 / 0.10e2 * eta + 0.137e3 / 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * (eta ^ 3) + 0.13e2 / 0.15e2 * (eta ^ 2) - 0.43e2 / 0.10e2 * eta - 0.163e3 / 0.30e2) * (eta - 1) * cos((h + 2 * g + 4 * f)) + 0.5e1 / 0.24e2 * (1 + eta) * ((eta ^ 2) - 0.32e2 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((h + 2 * f + 4 * g)) + (eta ^ 4 - 9 * eta ^ 2 + 10) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * f + 4 * g)) / 0.4e1 + (eta - 1) * (1 + eta) * (eta ^ 2 - 6) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 6 * f + 4 * g)) / 0.8e1 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 8 * f + 4 * g)) / 0.48e2 + 0.15e2 / 0.4e1 * ((eta ^ 2) - 0.5e1 / 0.3e1) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + 2 * g + 2 * f)) + (eta - 1) * (0.15e2 / 0.8e1 * (1 + eta) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + 2 * g + 4 * f)) - ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h - 2 * g + 2 * f)) / 0.32e2 - (1 + eta) * (eta ^ 2 - 7) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * cos((-h + 2 * f)) / 0.4e1 - ((1 + eta) ^ 2) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * cos((-h + 4 * f)) / 0.8e1 - 0.5e1 / 0.24e2 * ((eta ^ 3) + 0.2e1 / 0.5e1 * (eta ^ 2) - 0.91e2 / 0.10e2 * eta - 0.79e2 / 0.10e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g)) - 0.3e1 / 0.4e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * sin((-h + 2 * f)) - 0.15e2 / 0.8e1 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (1 + eta) * sin((-h + 2 * g)) + (1 + eta) * (eta ^ 2 - 7) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * cos((h + 2 * f)) / 0.4e1 + ((1 + eta) ^ 2) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * cos((h + 4 * f)) / 0.8e1 + (((eta ^ 2) / 0.12e2 - 0.91e2 / 0.48e2 * eta + 0.5e1 / 0.24e2 * (eta ^ 3) - 0.79e2 / 0.48e2) * ci2 ^ 4 + (-0.7e1 / 0.24e2 * (eta ^ 3) + 0.101e3 / 0.48e2 - (eta ^ 2) / 0.6e1 + 0.113e3 / 0.48e2 * eta) * ci2 ^ 2 - 0.15e2 / 0.16e2 * eta + (eta ^ 3) / 0.8e1 - 0.41e2 / 0.48e2 + (eta ^ 2) / 0.12e2) * cos((h + 2 * g)) + (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g)) / 0.16e2 + (0.15e2 / 0.8e1 * (1 + eta) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((h + 2 * g)) + ((0.3e1 / 0.4e1 + 0.3e1 / 0.4e1 * eta) * sin((h + 2 * f)) + sin(h) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1)) * (ci2 ^ 2 - 0.1e1 / 0.2e1)) * Delta))) / a ^ 4 / ci2 / (eta ^ 11) / (1 + eta) -0.51e2 / 0.4e1 * R__e ^ 4 * ((0.3e1 / 0.136e3 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 76 * eta + 103) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) + ((-0.3e1 / 0.136e3 * (eta ^ 2) - 0.57e2 / 0.34e2 * eta - 0.309e3 / 0.136e3) * ci2 ^ 8 + (0.5e1 / 0.136e3 * (eta ^ 2) + 0.107e3 / 0.34e2 * eta + 0.563e3 / 0.136e3) * ci2 ^ 6 + (-0.877e3 / 0.408e3 - 0.7e1 / 0.408e3 * (eta ^ 2) - 0.86e2 / 0.51e2 * eta) * ci2 ^ 4 + 0.151e3 / 0.816e3 + (eta ^ 2) / 0.816e3 + 0.31e2 / 0.204e3 * eta) * sin((2 * h + 3 * f + 2 * g)) + 0.15e2 / 0.17e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) - 0.15e2 / 0.17e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * cos((2 * h + 3 * f + 2 * g)) - 0.9e1 / 0.136e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 5 * f + 2 * g)) - 0.6e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 3 * f + 4 * g)) + 0.9e1 / 0.136e3 * (1 + eta) * (eta - 1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * sin((2 * h + 5 * f + 2 * g)) - 0.2e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 5 * f + 4 * g)) + 0.45e2 / 0.136e3 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) + ((-0.45e2 / 0.136e3 * (eta ^ 2) + 0.9e1 / 0.34e2 * eta + 0.117e3 / 0.136e3) * ci2 ^ 8 + (0.75e2 / 0.136e3 * (eta ^ 2) - 0.27e2 / 0.34e2 * eta - 0.243e3 / 0.136e3) * ci2 ^ 6 + (-0.35e2 / 0.136e3 * (eta ^ 2) + 0.10e2 / 0.17e2 * eta + 0.143e3 / 0.136e3) * ci2 ^ 4 - 0.29e2 / 0.272e3 + 0.5e1 / 0.272e3 * (eta ^ 2) - 0.5e1 / 0.68e2 * eta) * sin((2 * h + f + 2 * g)) + 0.45e2 / 0.17e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + f + 2 * g)) - 0.45e2 / 0.17e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * cos((2 * h + f + 2 * g)) + 0.9e1 / 0.136e3 * (1 + eta) * (eta - 1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * sin((-2 * h - 2 * g + f)) + 0.42e2 / 0.17e2 * (-0.3e1 / 0.112e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * h - 2 * g + f)) + ci2 ^ 2 * ((eta ^ 2 + 100 * eta + 127) * ci2 ^ 2 - 0.2e1 / 0.3e1 * (eta ^ 2) - 0.194e3 / 0.3e1 * eta - 0.248e3 / 0.3e1) * sin((3 * f + 2 * g)) / 0.168e3 - (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 - 0.1e1 / 0.2e1) * sin((3 * f + 4 * g)) / 0.7e1 - (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 - 0.1e1 / 0.2e1) * sin((5 * f + 4 * g)) / 0.21e2 + ((1 + eta) * Delta * (ci2 ^ 2 - 0.9e1 / 0.14e2) * cos((3 * f + 2 * g)) / 0.3e1 - (1 + eta) * (eta - 1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((5 * f + 2 * g)) / 0.56e2 + ((-0.3e1 / 0.14e2 * eta + 0.5e1 / 0.56e2 * (eta ^ 2) - 0.3e1 / 0.8e1) * ci2 ^ 2 + 0.11e2 / 0.84e2 * eta + 0.5e1 / 0.21e2 - 0.5e1 / 0.84e2 * (eta ^ 2)) * sin((f + 2 * g)) + (1 + eta) * ((0.6e1 / 0.7e1 * ci2 ^ 4 - 0.6e1 / 0.7e1 * ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((-2 * h + f)) + (-0.6e1 / 0.7e1 * ci2 ^ 4 + 0.6e1 / 0.7e1 * ci2 ^ 2 - 0.1e1 / 0.6e1) * sin((2 * h + f)) + Delta * (ci2 ^ 2 - 0.9e1 / 0.14e2) * cos((f + 2 * g)) + (0.2e1 / 0.7e1 * Delta * ci2 ^ 2 - Delta / 0.7e1) * cos((-2 * h + f)) + (-0.2e1 / 0.7e1 * Delta * ci2 ^ 2 + Delta / 0.7e1) * cos((2 * h + f)) - (eta - 1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((-2 * g + f)) / 0.56e2)) * ci2 ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1)) * sqrt((-eta ^ 2 + 1)) + (1 + eta) * (-0.15e2 / 0.17e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2) - 0.11e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 2 * f)) - 0.15e2 / 0.34e2 * (eta + 0.19e2 / 0.10e2) * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 4 * f)) + 0.3e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((2 * h + 2 * f + 4 * g)) + 0.2e1 / 0.17e2 * (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 4 * f + 4 * g)) + (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((2 * h + 6 * f + 4 * g)) / 0.51e2 + ((0.15e2 / 0.17e2 * (eta ^ 2) - 0.33e2 / 0.17e2) * ci2 ^ 8 + (-0.29e2 / 0.17e2 * (eta ^ 2) + 0.59e2 / 0.17e2) * ci2 ^ 6 + (0.16e2 / 0.17e2 * (eta ^ 2) - 0.30e2 / 0.17e2) * ci2 ^ 4 - 0.3e1 / 0.34e2 * (eta ^ 2) + 0.5e1 / 0.34e2) * sin((2 * h + 2 * g + 2 * f)) + 0.15e2 / 0.34e2 * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 8 + (-0.29e2 / 0.15e2 * eta - 0.103e3 / 0.30e2) * ci2 ^ 6 + (0.16e2 / 0.15e2 * eta + 0.53e2 / 0.30e2) * ci2 ^ 4 - eta / 0.10e2 - 0.3e1 / 0.20e2) * (eta - 1) * sin((2 * h + 2 * g + 4 * f)) + 0.45e2 / 0.17e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 2 * g + 2 * f)) - 0.45e2 / 0.17e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * Delta * cos((2 * h + 2 * g + 2 * f)) + 0.3e1 / 0.17e2 * (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (eta - 1) * sin((2 * f + 4 * g)) + 0.2e1 / 0.17e2 * (ci2 + 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * sin((4 * f + 4 * g)) + (ci2 + 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (eta - 1) * sin((6 * f + 4 * g)) / 0.51e2 + 0.33e2 / 0.34e2 * ci2 ^ 2 * (eta + 0.31e2 / 0.22e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * g - 2 * h)) - 0.33e2 / 0.34e2 * (eta - 1) * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 8 + (-0.67e2 / 0.33e2 * eta - 0.179e3 / 0.66e2) * ci2 ^ 6 + (0.116e3 / 0.99e2 * eta + 0.295e3 / 0.198e3) * ci2 ^ 4 - 0.23e2 / 0.198e3 * eta - 0.5e1 / 0.36e2) * sin((2 * g + 2 * h)) + ci2 ^ 2 * (-0.9e1 / 0.17e2 * (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * sin((-2 * h + 2 * f)) + 0.9e1 / 0.17e2 * (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * sin((2 * h + 2 * f)) + ((0.26e2 / 0.17e2 - 0.14e2 / 0.17e2 * (eta ^ 2)) * ci2 ^ 2 + 0.9e1 / 0.17e2 * (eta ^ 2) - 0.1e1) * sin((2 * g + 2 * f)) - 0.7e1 / 0.17e2 * ((eta + 0.23e2 / 0.14e2) * ci2 ^ 2 - 0.9e1 / 0.14e2 * eta - 0.15e2 / 0.14e2) * (eta - 1) * sin((2 * g + 4 * f)) + (-0.27e2 / 0.17e2 * Delta + 0.42e2 / 0.17e2 * Delta * ci2 ^ 2) * cos((2 * g + 2 * f)) + (((2 * eta ^ 2) - 0.59e2 / 0.17e2) * ci2 ^ 4 + (0.12e2 / 0.17e2 * Delta ^ 2 + 0.65e2 / 0.17e2 - 0.40e2 / 0.17e2 * (eta ^ 2)) * ci2 ^ 2 + 0.19e2 / 0.34e2 * (eta ^ 2) - 0.173e3 / 0.204e3 - 0.6e1 / 0.17e2 * Delta ^ 2) * sin((2 * h)) + sin((2 * g)) * ((eta + 0.43e2 / 0.34e2) * ci2 ^ 2 - 0.65e2 / 0.102e3 * eta - 0.83e2 / 0.102e3) * (eta - 1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1))) * J ^ 2 / (eta ^ 8) / a ^ 4 / (1 + eta) 0.54e2 * R__e ^ 4 * ((-ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 76 * eta + 103) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) / 0.192e3 + ((-(eta ^ 2) / 0.192e3 - 0.103e3 / 0.192e3 - 0.19e2 / 0.48e2 * eta) * ci2 ^ 8 + (0.563e3 / 0.576e3 + 0.5e1 / 0.576e3 * (eta ^ 2) + 0.107e3 / 0.144e3 * eta) * ci2 ^ 6 + (-0.7e1 / 0.1728e4 * (eta ^ 2) - 0.43e2 / 0.108e3 * eta - 0.877e3 / 0.1728e4) * ci2 ^ 4 + 0.151e3 / 0.3456e4 + (eta ^ 2) / 0.3456e4 + 0.31e2 / 0.864e3 * eta) * cos((2 * h + 3 * f + 2 * g)) + ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((-2 * h + 5 * f + 2 * g)) / 0.64e2 - (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 3 * f + 4 * g)) / 0.12e2 + (1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * (eta - 1) * cos((2 * h + 5 * f + 2 * g)) / 0.64e2 - (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 5 * f + 4 * g)) / 0.36e2 + 0.5e1 / 0.24e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) + 0.5e1 / 0.24e2 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * sin((2 * h + 3 * f + 2 * g)) - 0.5e1 / 0.64e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * ((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * cos((-2 * h + f + 2 * g)) + ((0.13e2 / 0.64e2 - 0.5e1 / 0.64e2 * (eta ^ 2) + eta / 0.16e2) * ci2 ^ 8 + (-0.3e1 / 0.16e2 * eta + 0.25e2 / 0.192e3 * (eta ^ 2) - 0.27e2 / 0.64e2) * ci2 ^ 6 + (-0.35e2 / 0.576e3 * (eta ^ 2) + 0.5e1 / 0.36e2 * eta + 0.143e3 / 0.576e3) * ci2 ^ 4 - 0.29e2 / 0.1152e4 + 0.5e1 / 0.1152e4 * (eta ^ 2) - 0.5e1 / 0.288e3 * eta) * cos((2 * h + f + 2 * g)) - (1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.7e1 / 0.9e1 * ci2 ^ 4 - 0.1e1 / 0.18e2) * (eta - 1) * cos((-2 * h - 2 * g + f)) / 0.64e2 - ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((2 * h - 2 * g + f)) / 0.64e2 + 0.5e1 / 0.8e1 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) + 0.5e1 / 0.8e1 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * (1 + eta) * Delta * sin((2 * h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 76 * eta + 103) * ci2 ^ 4 + (-0.2e1 / 0.3e1 * (eta ^ 2) - 0.176e3 / 0.3e1 * eta - 0.230e3 / 0.3e1) * ci2 ^ 2 + (eta ^ 2) / 0.18e2 + 0.80e2 / 0.9e1 * eta + 0.187e3 / 0.18e2) * cos((3 * f + 2 * g)) / 0.96e2 + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * cos((3 * f + 4 * g)) / 0.12e2 - ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 4 - 0.2e1 / 0.3e1 * ci2 ^ 2 + 0.1e1 / 0.18e2) * cos((5 * f + 2 * g)) / 0.32e2 + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * cos((5 * f + 4 * g)) / 0.36e2 - 0.5e1 / 0.12e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.4e1 / 0.5e1 * ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((3 * f + 2 * g)) + 0.5e1 / 0.32e2 * (((eta ^ 2) - 0.4e1 / 0.5e1 * eta - 0.13e2 / 0.5e1) * ci2 ^ 4 + (-0.2e1 / 0.3e1 * (eta ^ 2) + 0.16e2 / 0.15e2 * eta + 0.34e2 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.18e2 - 0.16e2 / 0.45e2 * eta - 0.41e2 / 0.90e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((f + 2 * g)) + (ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 4 - 0.2e1 / 0.3e1 * ci2 ^ 2 + 0.1e1 / 0.18e2) * cos((-2 * g + f)) / 0.32e2 + (-0.43e2 / 0.72e2 * ci2 ^ 4 + 0.7e1 / 0.72e2 * ci2 ^ 2 - ci2 ^ 8 / 0.2e1 + ci2 ^ 6) * cos((-2 * h + f)) + (-0.43e2 / 0.72e2 * ci2 ^ 4 + 0.7e1 / 0.72e2 * ci2 ^ 2 - ci2 ^ 8 / 0.2e1 + ci2 ^ 6) * cos((2 * h + f)) - 0.5e1 / 0.4e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.4e1 / 0.5e1 * ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((f + 2 * g)) + (Delta * ci2 ^ 6 / 0.6e1 - Delta * ci2 ^ 4 / 0.4e1 + Delta * ci2 ^ 2 / 0.12e2) * sin((-2 * h + f)) + (Delta * ci2 ^ 6 / 0.6e1 - Delta * ci2 ^ 4 / 0.4e1 + Delta * ci2 ^ 2 / 0.12e2) * sin((2 * h + f)) + (0.25e2 / 0.36e2 * ci2 ^ 4 - 0.5e1 / 0.3e1 * ci2 ^ 6 - 0.1e1 / 0.72e2 + ci2 ^ 8) * cos(f) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin(f) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.4e1) * Delta / 0.3e1) * (1 + eta)) * sqrt((-eta ^ 2 + 1)) - (1 + eta) * (-0.7e1 / 0.108e3 * (eta ^ 2) + 0.37e2 / 0.432e3 + (1 + eta) * (ci2 ^ 8 - 0.4e1 / 0.3e1 * ci2 ^ 6 + 0.13e2 / 0.36e2 * ci2 ^ 4 + 0.1e1 / 0.36e2) * (eta - 1) * cos((2 * f)) + (-0.563e3 / 0.216e3 - 0.2e1 / 0.3e1 * Delta ^ 2 + 0.59e2 / 0.36e2 * (eta ^ 2)) * ci2 ^ 4 - 0.5e1 / 0.12e2 * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 8 + (-0.29e2 / 0.15e2 * eta - 0.103e3 / 0.30e2) * ci2 ^ 6 + (0.16e2 / 0.15e2 * eta + 0.53e2 / 0.30e2) * ci2 ^ 4 - eta / 0.10e2 - 0.3e1 / 0.20e2) * (eta - 1) * cos((2 * h + 2 * g + 4 * f)) - 0.5e1 / 0.2e1 * (ci2 ^ 8 - 0.29e2 / 0.15e2 * ci2 ^ 6 + 0.16e2 / 0.15e2 * ci2 ^ 4 - 0.1e1 / 0.10e2) * Delta * sin((2 * h + 2 * g + 2 * f)) + 0.11e2 / 0.12e2 * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 8 + (-0.67e2 / 0.33e2 * eta - 0.179e3 / 0.66e2) * ci2 ^ 6 + (0.116e3 / 0.99e2 * eta + 0.295e3 / 0.198e3) * ci2 ^ 4 - 0.23e2 / 0.198e3 * eta - 0.5e1 / 0.36e2) * (eta - 1) * cos((2 * g + 2 * h)) + ((0.11e2 / 0.6e1 - 0.5e1 / 0.6e1 * (eta ^ 2)) * ci2 ^ 8 + (-0.59e2 / 0.18e2 + 0.29e2 / 0.18e2 * (eta ^ 2)) * ci2 ^ 6 + (0.5e1 / 0.3e1 - 0.8e1 / 0.9e1 * (eta ^ 2)) * ci2 ^ 4 + (eta ^ 2) / 0.12e2 - 0.5e1 / 0.36e2) * cos((2 * h + 2 * g + 2 * f)) - (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * cos((-2 * h + 2 * f)) / 0.2e1 - (ci2 ^ 2 + ci2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (ci2 ^ 2 - ci2 + 0.1e1 / 0.6e1) * cos((2 * h + 2 * f)) / 0.2e1 + (-0.2e1 / 0.3e1 * Delta * ci2 ^ 2 + 0.14e2 / 0.3e1 * Delta * ci2 ^ 4 + 0.5e1 * Delta * ci2 ^ 8 - 0.9e1 * Delta * ci2 ^ 6) * sin((2 * g + 2 * f)) + (-0.59e2 / 0.18e2 + 0.17e2 / 0.9e1 * (eta ^ 2)) * ci2 ^ 8 + (0.313e3 / 0.54e2 - 0.94e2 / 0.27e2 * (eta ^ 2) + 0.2e1 / 0.3e1 * Delta ^ 2) * ci2 ^ 6 + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * (eta - 1) * cos((6 * f + 4 * g)) / 0.54e2 + 0.11e2 / 0.12e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta + 0.31e2 / 0.22e2) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((2 * g - 2 * h)) - 0.5e1 / 0.12e2 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta + 0.19e2 / 0.10e2) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 1) * cos((-2 * h + 2 * g + 4 * f)) + (1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * (eta - 1) * cos((2 * f + 4 * g)) / 0.6e1 + Delta ^ 2 / 0.12e2 + ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 + 0.1e1 / 0.2e1) * cos((4 * f + 4 * g)) / 0.9e1 - 0.11e2 / 0.6e1 * ci2 ^ 2 * ((eta + 0.31e2 / 0.22e2) * ci2 ^ 4 + (-0.28e2 / 0.33e2 * eta - 0.37e2 / 0.33e2) * ci2 ^ 2 + 0.16e2 / 0.99e2 * eta + 0.73e2 / 0.396e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((2 * g)) - 0.5e1 / 0.6e1 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2) - 0.11e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 2 * g + 2 * f)) - (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((2 * h + 2 * f + 4 * g)) / 0.6e1 - (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((2 * h + 6 * f + 4 * g)) / 0.54e2 - 0.5e1 / 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 2 * f)) + 0.5e1 / 0.6e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta + 0.19e2 / 0.10e2) * ci2 ^ 4 + (-0.4e1 / 0.5e1 * eta - 0.7e1 / 0.5e1) * ci2 ^ 2 + 0.2e1 / 0.15e2 * eta + 0.11e2 / 0.60e2) * cos((2 * g + 4 * f)) - (ci2 ^ 4 + ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.5e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 4 * f + 4 * g)) / 0.9e1 - 0.17e2 / 0.9e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.59e2 / 0.34e2 + (eta ^ 2)) * ci2 ^ 4 + (-0.20e2 / 0.17e2 * (eta ^ 2) + 0.6e1 / 0.17e2 * Delta ^ 2 + 0.65e2 / 0.34e2) * ci2 ^ 2 + 0.19e2 / 0.68e2 * (eta ^ 2) - 0.3e1 / 0.17e2 * Delta ^ 2 - 0.173e3 / 0.408e3) * cos((2 * h)) + 0.5e1 / 0.3e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (((eta ^ 2) - 0.11e2 / 0.5e1) * ci2 ^ 4 + (-0.4e1 / 0.5e1 * (eta ^ 2) + 0.8e1 / 0.5e1) * ci2 ^ 2 + 0.2e1 / 0.15e2 * (eta ^ 2) - 0.1e1 / 0.5e1) * cos((2 * g + 2 * f))) / 0.4e1) * J ^ 2 / (eta ^ 8) / a ^ 4 / (1 + eta) -0.135e3 / 0.16e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * ((((0.5e1 / 0.3e1 * (eta ^ 4) + 0.11e2 / 0.6e1 * (eta ^ 3) - 0.34e2 / 0.9e1 * (eta ^ 2) - 0.619e3 / 0.90e2 * eta - 0.76e2 / 0.15e2) * ci2 ^ 4 + (-0.7e1 / 0.3e1 * (eta ^ 4) - 0.79e2 / 0.30e2 * (eta ^ 3) + 0.38e2 / 0.9e1 * (eta ^ 2) + 0.767e3 / 0.90e2 * eta + 0.32e2 / 0.5e1) * ci2 ^ 2 - 0.14e2 / 0.9e1 * (eta ^ 2) - 0.61e2 / 0.18e2 * eta - 0.116e3 / 0.45e2 + (eta ^ 4) + 0.103e3 / 0.90e2 * (eta ^ 3)) * sin((3 * g + 2 * h + 2 * f)) + ((-0.37e2 / 0.10e2 + (eta ^ 4) + 0.32e2 / 0.15e2 * (eta ^ 3) - 0.103e3 / 0.45e2 * (eta ^ 2) - 0.587e3 / 0.90e2 * eta) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * (eta ^ 4) - 0.8e1 / 0.3e1 * (eta ^ 3) + 0.28e2 / 0.9e1 * (eta ^ 2) + 0.751e3 / 0.90e2 * eta + 0.137e3 / 0.30e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * (eta ^ 4) + 0.16e2 / 0.15e2 * (eta ^ 3) - 0.59e2 / 0.45e2 * (eta ^ 2) - 0.61e2 / 0.18e2 * eta - 0.163e3 / 0.90e2) * sin((3 * g + 2 * h + 4 * f)) + ((-0.179e3 / 0.45e2 * (eta ^ 4) - 0.202e3 / 0.45e2 * (eta ^ 3) + 0.238e3 / 0.27e2 * (eta ^ 2) + 0.2809e4 / 0.270e3 * eta + 0.79e2 / 0.90e2) * ci2 ^ 4 + (-0.101e3 / 0.90e2 + 0.244e3 / 0.45e2 * (eta ^ 4) + 0.269e3 / 0.45e2 * (eta ^ 3) + (-0.32e2 / 0.15e2 * Delta ^ 2 - 0.1586e4 / 0.135e3) * (eta ^ 2) + (-0.3679e4 / 0.270e3 - 0.32e2 / 0.15e2 * Delta ^ 2) * eta) * ci2 ^ 2 + 0.41e2 / 0.90e2 - 0.188e3 / 0.135e3 * (eta ^ 4) - 0.43e2 / 0.27e2 * (eta ^ 3) + (0.85e2 / 0.27e2 + 0.16e2 / 0.15e2 * Delta ^ 2) * (eta ^ 2) + (0.209e3 / 0.54e2 + 0.16e2 / 0.15e2 * Delta ^ 2) * eta) * sin(g) - ((1 + eta) ^ 2) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 4 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - 2 * h + 2 * f)) / 0.60e2 + 0.7e1 / 0.15e2 * ((eta ^ 4) + 0.9e1 / 0.7e1 * (eta ^ 3) - 0.55e2 / 0.21e2 * (eta ^ 2) - 0.109e3 / 0.21e2 * eta - 0.20e2 / 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 4 * f)) - ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + 2 * f)) / 0.60e2 - ci2 ^ 2 * (1 + eta) * ((eta - 1) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + 2 * f)) / 0.60e2 - Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h)) - (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((1 + eta) * (eta + 0.53e2 / 0.20e2) * ci2 ^ 2 - 0.8e1 / 0.15e2 * (eta ^ 2) + eta / 0.15e2 + 0.18e2 / 0.5e1) * sin((3 * g + 6 * f)) / 0.9e1 + 0.4e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * cos((g - 2 * h + 2 * f)) + 0.28e2 / 0.45e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 2) + 0.33e2 / 0.28e2 * eta + 0.8e1 / 0.7e1) * sin((5 * g + 2 * h + 2 * f)) + 0.20e2 / 0.3e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * cos((2 * f + 3 * g)) + Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((4 * f + 3 * g)) - 0.5e1 / 0.9e1 * ((eta ^ 3) + 0.53e2 / 0.25e2 * (eta ^ 2) - 0.104e3 / 0.25e2 * eta - 0.333e3 / 0.50e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((g - 2 * h + 4 * f)) + 0.4e1 / 0.5e1 * (1 + eta) * (eta - 1) * (((eta ^ 2) + 0.41e2 / 0.48e2 * eta - 0.55e2 / 0.48e2) * ci2 ^ 4 + (-(eta ^ 2) / 0.2e1 - 0.7e1 / 0.16e2 * eta + 0.9e1 / 0.16e2) * ci2 ^ 2 - (eta ^ 2) / 0.6e1 - 0.19e2 / 0.144e3 * eta + 0.29e2 / 0.144e3) * sin((-g + 2 * f)) + ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((g + 2 * h + 4 * f)) / 0.15e2 - ((-0.37e2 / 0.10e2 + (eta ^ 4) + 0.32e2 / 0.15e2 * (eta ^ 3) - 0.103e3 / 0.45e2 * (eta ^ 2) - 0.587e3 / 0.90e2 * eta) * ci2 ^ 2 - (eta ^ 4) / 0.9e1 + (eta ^ 3) / 0.45e2 + 0.43e2 / 0.45e2 * (eta ^ 2) - 0.11e2 / 0.45e2 * eta - 0.4e1 / 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) - 0.20e2 / 0.3e1 * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 2 * f)) + 0.26e2 / 0.9e1 * (1 + eta) * eta * (((eta ^ 2) - 0.391e3 / 0.195e3) * ci2 ^ 4 + (-0.13e2 / 0.10e2 * (eta ^ 2) + 0.48e2 / 0.65e2 * Delta ^ 2 + 0.1007e4 / 0.390e3) * ci2 ^ 2 + 0.29e2 / 0.130e3 * (eta ^ 2) - 0.24e2 / 0.65e2 * Delta ^ 2 - 0.35e2 / 0.78e2) * sin((g + 2 * h)) + ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g + 4 * f)) / 0.15e2 - ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g - 2 * h + 4 * f)) / 0.15e2 - 0.8e1 / 0.15e2 * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * cos((g + 2 * h)) + ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((g + 6 * f)) / 0.9e1 + ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * ((1 + eta) ^ 2) * (eta - 1) * sin((3 * g + 2 * h + 6 * f)) / 0.9e1 + 0.4e1 / 0.5e1 * ((1 + eta) ^ 2) * ((eta ^ 2) - 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((g + 2 * h + 2 * f)) - 0.2e1 / 0.5e1 * ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * cos((g + 2 * h + 2 * f)) - 0.5e1 / 0.3e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.619e3 / 0.150e3 * eta - 0.76e2 / 0.25e2 + (eta ^ 4) + 0.11e2 / 0.10e2 * (eta ^ 3) - 0.34e2 / 0.15e2 * (eta ^ 2)) * ci2 ^ 2 - 0.4e1 / 0.75e2 * (1 + eta) * ((eta ^ 3) - 0.5e1 / 0.4e1 * (eta ^ 2) - eta / 0.4e1 + 0.8e1)) * sin((2 * f + 3 * g)) + ((-(eta ^ 4) / 0.45e2 - 0.59e2 / 0.90e2 * (eta ^ 3) - 0.26e2 / 0.45e2 * (eta ^ 2) + 0.449e3 / 0.90e2 * eta + 0.6e1) * ci2 ^ 4 + (-0.427e3 / 0.90e2 * eta - 0.31e2 / 0.45e2 * (eta ^ 4) + (eta ^ 3) / 0.90e2 + 0.67e2 / 0.45e2 * (eta ^ 2) - 0.103e3 / 0.15e2) * ci2 ^ 2 + 0.109e3 / 0.45e2 + 0.3e1 / 0.5e1 * (eta ^ 4) + 0.11e2 / 0.30e2 * (eta ^ 3) - 0.47e2 / 0.45e2 * (eta ^ 2) + 0.97e2 / 0.90e2 * eta) * sin((g + 2 * f)) - ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h)) / 0.30e2 + (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 8 * f)) / 0.90e2 - 0.7e1 / 0.9e1 * ci2 ^ 2 * ((eta ^ 4) + 0.5e1 / 0.14e2 * (eta ^ 3) - 0.92e2 / 0.35e2 * (eta ^ 2) + 0.221e3 / 0.70e2 * eta + 0.228e3 / 0.35e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 2 * f)) + 0.16e2 / 0.135e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.16e2 * (eta ^ 2) - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 6 * f)) + 0.2e1 / 0.5e1 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * cos((-g - 2 * h + 2 * f)) - 0.2e1 / 0.5e1 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * cos((-g + 2 * f)) - 0.4e1 * (((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 4 + (-0.3e1 / 0.2e1 * (eta ^ 2) - 0.9e1 / 0.10e2 * eta + 0.16e2 / 0.15e2) * ci2 ^ 2 + 0.13e2 / 0.20e2 * (eta ^ 2) + 0.2e1 / 0.5e1 * eta - 0.9e1 / 0.20e2) * Delta * cos((g + 2 * f)) - 0.31e2 / 0.15e2 * (eta - 1) * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 4 + (-0.143e3 / 0.93e2 * (eta ^ 3) - 0.105e3 / 0.31e2 * (eta ^ 2) - 0.38e2 / 0.31e2 * eta + 0.101e3 / 0.186e3) * ci2 ^ 2 + 0.193e3 / 0.279e3 * (eta ^ 3) + 0.413e3 / 0.279e3 * (eta ^ 2) + 0.151e3 / 0.279e3 * eta - 0.41e2 / 0.186e3) * sin((3 * g + 2 * h)) + 0.22e2 / 0.45e2 * (((eta ^ 3) + (2 * eta ^ 2) - 0.113e3 / 0.22e2 * eta - 0.339e3 / 0.44e2) * ci2 ^ 4 + (-0.67e2 / 0.44e2 * (eta ^ 3) - 0.125e3 / 0.44e2 * (eta ^ 2) + 0.287e3 / 0.44e2 * eta + 0.207e3 / 0.22e2) * ci2 ^ 2 + 0.31e2 / 0.44e2 * (eta ^ 3) + 0.57e2 / 0.44e2 * (eta ^ 2) - 0.113e3 / 0.44e2 * eta - 0.81e2 / 0.22e2) * (eta - 1) * sin((g + 4 * f)) + cos(g) * Delta * (((1 + eta) ^ 2) * ci2 ^ 4 + (-0.13e2 / 0.15e2 * (eta ^ 2) - 0.22e2 / 0.15e2 * eta - 0.1e1 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 + 0.8e1 / 0.15e2 * eta - 0.1e1 / 0.15e2) + 0.49e2 / 0.45e2 * ci2 ^ 2 * ((eta ^ 4) + 0.72e2 / 0.49e2 * (eta ^ 3) - 0.136e3 / 0.49e2 * (eta ^ 2) - 0.415e3 / 0.98e2 * eta - 0.79e2 / 0.98e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h)) - 0.4e1 / 0.5e1 * ((eta ^ 2) + 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * (1 + eta) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g - 2 * h + 2 * f)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 8 * f)) / 0.90e2 - (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((g + 4 * f)) + (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h)) + 0.31e2 / 0.15e2 * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 2 - ((1 + eta) ^ 3) / 0.62e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((3 * g)) + Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 4 * f)) - ci2 ^ 2 * (1 + eta) * (eta + 0.53e2 / 0.20e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * sin((g - 2 * h + 6 * f)) / 0.9e1 - Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g))) * sqrt((-eta ^ 2 + 1)) + ((0.449e3 / 0.120e3 - 0.49e2 / 0.6e1 * (eta ^ 3) + 0.77e2 / 0.15e2 * (eta ^ 2) + 0.13e2 / 0.40e2 * (eta ^ 5) - 0.211e3 / 0.40e2 * (eta ^ 4) + 0.463e3 / 0.40e2 * eta) * ci2 ^ 4 + (-0.97e2 / 0.24e2 + 0.19e2 / 0.2e1 * (eta ^ 3) - 0.34e2 / 0.5e1 * (eta ^ 2) - 0.13e2 / 0.40e2 * (eta ^ 5) + 0.773e3 / 0.120e3 * (eta ^ 4) - 0.329e3 / 0.24e2 * eta) * ci2 ^ 2 + 0.17e2 / 0.9e1 * (eta ^ 2) - 0.617e3 / 0.360e3 * (eta ^ 4) - 0.49e2 / 0.18e2 * (eta ^ 3) + 0.33e2 / 0.8e1 * eta + 0.31e2 / 0.24e2 + 0.13e2 / 0.120e3 * (eta ^ 5)) * sin((f + g)) - (1 + eta) * ((eta - 1) ^ 2) * (((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * ci2 ^ 4 + (-(eta ^ 2) + 0.266e3 / 0.15e2 * eta + 0.421e3 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.338e3 / 0.45e2 * eta - 0.493e3 / 0.45e2) * sin((5 * f + g)) / 0.16e2 + 0.19e2 / 0.6e1 * (1 + eta) * cos((f + g)) * Delta * (((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * ci2 ^ 4 + (-0.191e3 / 0.95e2 * (eta ^ 3) + 0.3e1 / 0.19e2 * (eta ^ 2) + 0.243e3 / 0.95e2 * eta - 0.15e2 / 0.19e2) * ci2 ^ 2 + 0.86e2 / 0.95e2 * (eta ^ 3) - 0.6e1 / 0.95e2 * (eta ^ 2) - 0.22e2 / 0.19e2 * eta + 0.6e1 / 0.19e2) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * sin((3 * g + 2 * h + 7 * f)) / 0.48e2 - 0.11e2 / 0.240e3 * (1 + eta) * (eta - 1) * (((eta ^ 3) - 0.843e3 / 0.11e2 * (eta ^ 2) - 0.799e3 / 0.11e2 * eta + 0.191e3 / 0.11e2) * ci2 ^ 4 + (-(eta ^ 3) + 0.963e3 / 0.11e2 * (eta ^ 2) + 0.975e3 / 0.11e2 * eta - 0.71e2 / 0.11e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 - 0.427e3 / 0.33e2 * (eta ^ 2) - 0.181e3 / 0.11e2 * eta - 0.161e3 / 0.33e2) * sin((f - g)) + 0.2e1 / 0.5e1 * ((1 + eta) ^ 3) * (eta - 1) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((g + 2 * h + 3 * f)) + 0.41e2 / 0.30e2 * (1 + eta) * ((eta ^ 2) + 0.58e2 / 0.41e2 * eta + 0.37e2 / 0.41e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((5 * g + 2 * h + 3 * f)) + 0.35e2 / 0.6e1 * (1 + eta) * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + f)) + ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 7 * f)) / 0.48e2 + ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + 3 * f)) / 0.240e3 + 0.31e2 / 0.240e3 * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 2 + 0.88e2 / 0.31e2 * (eta ^ 2) - 0.16e2 / 0.31e2 * eta - 0.664e3 / 0.93e2) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((3 * g + 5 * f)) + ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * (0.24e2 / 0.5e1 + (1 + eta) * ci2 ^ 2) * sin((3 * g + 7 * f)) / 0.48e2 - 0.29e2 / 0.15e2 * (1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * ((eta ^ 2) + 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * cos((-g - 2 * h + f)) - 0.23e2 / 0.360e3 * ((eta ^ 4) + 0.752e3 / 0.23e2 * (eta ^ 3) + 0.976e3 / 0.23e2 * (eta ^ 2) - 0.1632e4 / 0.23e2 * eta - 0.1991e4 / 0.23e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((g - 2 * h + 3 * f)) + ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + 3 * f)) / 0.240e3 - 0.9e1 / 0.80e2 * (((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * ci2 ^ 4 + (-(eta ^ 2) + 0.2e1 / 0.3e1 * eta + 0.41e2 / 0.27e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.26e2 / 0.81e2 * eta - 0.49e2 / 0.81e2) * (1 + eta) * ((eta - 1) ^ 2) * sin((-3 * g - 2 * h + f)) - 0.31e2 / 0.240e3 * (1 + eta) * (eta - 1) * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 4 + (-(eta ^ 3) + 0.263e3 / 0.31e2 * (eta ^ 2) + 0.691e3 / 0.31e2 * eta + 0.421e3 / 0.31e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 - 0.335e3 / 0.93e2 * (eta ^ 2) - 0.835e3 / 0.93e2 * eta - 0.493e3 / 0.93e2) * sin((3 * g + 2 * h + 5 * f)) - 0.2e1 / 0.5e1 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * sin((-g - 2 * h + 3 * f)) - 0.31e2 / 0.360e3 * ((-0.1991e4 / 0.31e2 + (eta ^ 5) + 0.1503e4 / 0.31e2 * (eta ^ 4) + 0.2492e4 / 0.31e2 * (eta ^ 3) - 0.904e3 / 0.31e2 * (eta ^ 2) - 0.3579e4 / 0.31e2 * eta) * ci2 ^ 2 - 0.108e3 / 0.31e2 * ((eta ^ 3) - 0.17e2 / 0.9e1 * (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.37e2 / 0.9e1) * (1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 3 * f)) - 0.10e2 / 0.3e1 * (1 + eta) * (((eta ^ 2) + 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.57e2 / 0.50e2 * (eta ^ 2) - 0.27e2 / 0.25e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.23e2 / 0.150e3 * (eta ^ 2) + 0.13e2 / 0.75e2 * eta + 0.7e1 / 0.150e3) * (eta - 1) * sin((-g - 2 * h + f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-3 * g - 2 * h + 3 * f)) / 0.240e3 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((g + 7 * f)) / 0.48e2 - ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((eta - 95) * ci2 ^ 4 + (-eta + 47) * ci2 ^ 2 + eta / 0.3e1 + 0.49e2 / 0.3e1) * sin((-g + 3 * f)) / 0.240e3 - 0.35e2 / 0.6e1 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 1) * cos((3 * g + f)) - 0.23e2 / 0.18e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * Delta * (eta - 1) * cos((g - 2 * h + 3 * f)) + 0.13e2 / 0.6e1 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 3 * f)) - 0.79e2 / 0.120e3 * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 2 + 0.28e2 / 0.79e2 * ((1 + eta) ^ 3)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * sin((3 * g + f)) + ((1 + eta) ^ 3) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((3 * g + 2 * h + 5 * f)) / 0.6e1 + ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((5 * f + g)) / 0.6e1 + 0.29e2 / 0.15e2 * ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) - 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * Delta * cos((g + 2 * h + f)) + 0.10e2 / 0.3e1 * (1 + eta) * ((1 + eta) * ((eta ^ 2) - 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.49e2 / 0.50e2 * (eta ^ 3) - 0.3e1 / 0.50e2 * (eta ^ 2) + 0.61e2 / 0.50e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.11e2 / 0.150e3 * (eta ^ 3) - (eta ^ 2) / 0.50e2 - 0.19e2 / 0.150e3 * eta + 0.7e1 / 0.150e3) * sin((g + 2 * h + f)) + 0.23e2 / 0.360e3 * (eta - 1) * (((eta ^ 4) + 0.608e3 / 0.23e2 * (eta ^ 3) + 0.544e3 / 0.23e2 * (eta ^ 2) - 0.2064e4 / 0.23e2 * eta - 0.2135e4 / 0.23e2) * ci2 ^ 4 + (-(eta ^ 4) - 0.900e3 / 0.23e2 * (eta ^ 3) - 0.972e3 / 0.23e2 * (eta ^ 2) + 0.2356e4 / 0.23e2 * eta + 0.2563e4 / 0.23e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 + 0.1264e4 / 0.69e2 * (eta ^ 3) + 0.1616e4 / 0.69e2 * (eta ^ 2) - 0.2432e4 / 0.69e2 * eta - 0.973e3 / 0.23e2) * sin((g + 3 * f)) + 0.79e2 / 0.120e3 * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 4 + (-(eta ^ 4) + 0.164e3 / 0.79e2 * (eta ^ 3) + 0.476e3 / 0.79e2 * (eta ^ 2) - 0.212e3 / 0.79e2 * eta - 0.429e3 / 0.79e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 - 0.104e3 / 0.79e2 * (eta ^ 3) - 0.728e3 / 0.237e3 * (eta ^ 2) + 0.200e3 / 0.237e3 * eta + 0.521e3 / 0.237e3) * (eta - 1) * sin((3 * g + 2 * h + f)) + ((0.31e2 / 0.360e3 * (eta ^ 5) + 0.167e3 / 0.40e2 * (eta ^ 4) + 0.623e3 / 0.90e2 * (eta ^ 3) - 0.113e3 / 0.45e2 * (eta ^ 2) - 0.1193e4 / 0.120e3 * eta - 0.1991e4 / 0.360e3) * ci2 ^ 4 + (-0.31e2 / 0.360e3 * (eta ^ 5) + 0.4571e4 / 0.360e3 * eta - 0.799e3 / 0.90e2 * (eta ^ 3) + 0.146e3 / 0.45e2 * (eta ^ 2) + 0.2491e4 / 0.360e3 - 0.1979e4 / 0.360e3 * (eta ^ 4)) * ci2 ^ 2 + 0.491e3 / 0.216e3 * (eta ^ 4) + 0.65e2 / 0.18e2 * (eta ^ 3) - 0.179e3 / 0.135e3 * (eta ^ 2) - 0.5563e4 / 0.1080e4 * eta + 0.31e2 / 0.1080e4 * (eta ^ 5) - 0.997e3 / 0.360e3) * sin((3 * g + 2 * h + 3 * f)) - (1 + eta) * Delta * (eta - 1) * (((1 + eta) ^ 2) * ci2 ^ 4 + (-(13 * eta ^ 2) - 0.66e2 / 0.5e1 * eta + 0.23e2 / 0.5e1) * ci2 ^ 2 + 0.32e2 / 0.5e1 * (eta ^ 2) + 0.32e2 / 0.5e1 * eta - 0.12e2 / 0.5e1) * cos((f - g)) / 0.6e1 - ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * ((eta - 1) ^ 2) * cos((-g - 2 * h + 3 * f)) / 0.15e2 + ((1 + eta) ^ 3) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * (eta - 1) * cos((g + 2 * h + 3 * f)) / 0.15e2 - ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * cos((-3 * g - 2 * h + f)) / 0.6e1 + 0.13e2 / 0.18e2 * ((eta ^ 3) + 0.3e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 5 * f)) + (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 7 * f)) / 0.10e2 + ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * Delta * ((eta - 1) ^ 2) * cos((-g + 3 * f)) / 0.15e2 - 0.13e2 / 0.40e2 * ((eta ^ 5) - 0.233e3 / 0.39e2 * (eta ^ 4) - 0.532e3 / 0.39e2 * (eta ^ 3) + 0.200e3 / 0.39e2 * (eta ^ 2) + 0.271e3 / 0.13e2 * eta + 0.337e3 / 0.39e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + f)) - 0.7e1 / 0.30e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + f)) + 0.23e2 / 0.18e2 * (1 + eta) * (((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 4 + (-0.167e3 / 0.115e3 * (eta ^ 2) - 0.22e2 / 0.23e2 * eta + 0.309e3 / 0.115e3) * ci2 ^ 2 + 0.72e2 / 0.115e3 * (eta ^ 2) + 0.48e2 / 0.115e3 * eta - 0.132e3 / 0.115e3) * Delta * (eta - 1) * cos((g + 3 * f)) + ci2 ^ 2 * (1 + eta) * ((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * sin((g - 2 * h + 5 * f)) / 0.16e2 + Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + f)) / 0.6e1 + 0.9e1 / 0.80e2 * ci2 ^ 2 * (1 + eta) * ((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * sin((-3 * g + f)) - Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 5 * f)) / 0.6e1 - 0.13e2 / 0.6e1 * ci2 ^ 2 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((3 * g + 3 * f)) + Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + f)) / 0.6e1 - Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 5 * f)) / 0.6e1 + 0.11e2 / 0.240e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 3) - 0.43e2 / 0.11e2 * (eta ^ 2) - 0.95e2 / 0.11e2 * eta - 0.3e1) * sin((-g + 2 * h + f)) - 0.19e2 / 0.6e1 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * Delta * cos((g - 2 * h + f))) * J ^ 2 / a ^ 4 / ci2 / (eta ^ 11) / (1 + eta) -0.243e3 / 0.16e2 * (-0.175e3 / 0.54e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 1) * sin((3 * g + f)) + 0.115e3 / 0.162e3 * ci2 ^ 2 * (1 + eta) * ((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 1) * sin((g - 2 * h + 3 * f)) + ((-0.167e3 / 0.72e2 * (eta ^ 4) + 0.113e3 / 0.81e2 * (eta ^ 2) - 0.31e2 / 0.648e3 * (eta ^ 5) - 0.623e3 / 0.162e3 * (eta ^ 3) + 0.1193e4 / 0.216e3 * eta + 0.1991e4 / 0.648e3) * ci2 ^ 4 + (0.1979e4 / 0.648e3 * (eta ^ 4) - 0.146e3 / 0.81e2 * (eta ^ 2) - 0.2491e4 / 0.648e3 - 0.4571e4 / 0.648e3 * eta + 0.799e3 / 0.162e3 * (eta ^ 3) + 0.31e2 / 0.648e3 * (eta ^ 5)) * ci2 ^ 2 - 0.325e3 / 0.162e3 * (eta ^ 3) + 0.179e3 / 0.243e3 * (eta ^ 2) - 0.31e2 / 0.1944e4 * (eta ^ 5) + 0.5563e4 / 0.1944e4 * eta + 0.997e3 / 0.648e3 - 0.2455e4 / 0.1944e4 * (eta ^ 4)) * cos((3 * g + 2 * h + 3 * f)) + (((-0.25e2 / 0.27e2 * (eta ^ 4) - 0.55e2 / 0.54e2 * (eta ^ 3) + 0.170e3 / 0.81e2 * (eta ^ 2) + 0.619e3 / 0.162e3 * eta + 0.76e2 / 0.27e2) * ci2 ^ 4 + (0.35e2 / 0.27e2 * (eta ^ 4) + 0.79e2 / 0.54e2 * (eta ^ 3) - 0.190e3 / 0.81e2 * (eta ^ 2) - 0.767e3 / 0.162e3 * eta - 0.32e2 / 0.9e1) * ci2 ^ 2 + 0.70e2 / 0.81e2 * (eta ^ 2) + 0.305e3 / 0.162e3 * eta - 0.5e1 / 0.9e1 * (eta ^ 4) - 0.103e3 / 0.162e3 * (eta ^ 3) + 0.116e3 / 0.81e2) * cos((3 * g + 2 * h + 2 * f)) + ((-0.32e2 / 0.27e2 * (eta ^ 3) + 0.587e3 / 0.162e3 * eta + 0.103e3 / 0.81e2 * (eta ^ 2) + 0.37e2 / 0.18e2 - 0.5e1 / 0.9e1 * (eta ^ 4)) * ci2 ^ 4 + (0.40e2 / 0.27e2 * (eta ^ 3) - 0.751e3 / 0.162e3 * eta + 0.7e1 / 0.9e1 * (eta ^ 4) - 0.140e3 / 0.81e2 * (eta ^ 2) - 0.137e3 / 0.54e2) * ci2 ^ 2 + 0.59e2 / 0.81e2 * (eta ^ 2) + 0.305e3 / 0.162e3 * eta - (eta ^ 4) / 0.3e1 - 0.16e2 / 0.27e2 * (eta ^ 3) + 0.163e3 / 0.162e3) * cos((3 * g + 2 * h + 4 * f)) - (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-g - 2 * h + 4 * f)) / 0.27e2 - 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta ^ 2) - 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * cos((g + 2 * h + 2 * f)) - 0.100e3 / 0.27e2 * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 2 * f)) - 0.7e1 / 0.27e2 * ((eta ^ 4) + 0.9e1 / 0.7e1 * (eta ^ 3) - 0.55e2 / 0.21e2 * (eta ^ 2) - 0.109e3 / 0.21e2 * eta - 0.20e2 / 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 4 * f)) + 0.5e1 / 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.37e2 / 0.10e2 + (eta ^ 4) + 0.32e2 / 0.15e2 * (eta ^ 3) - 0.103e3 / 0.45e2 * (eta ^ 2) - 0.587e3 / 0.90e2 * eta) * ci2 ^ 2 + (eta ^ 4) / 0.9e1 - (eta ^ 3) / 0.45e2 - 0.43e2 / 0.45e2 * (eta ^ 2) + 0.11e2 / 0.45e2 * eta + 0.4e1 / 0.3e1) * cos((4 * f + 3 * g)) + (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-g + 4 * f)) / 0.27e2 - 0.2e1 / 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * sin((g + 2 * h + 2 * f)) + 0.25e2 / 0.27e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.619e3 / 0.150e3 * eta - 0.76e2 / 0.25e2 + (eta ^ 4) + 0.11e2 / 0.10e2 * (eta ^ 3) - 0.34e2 / 0.15e2 * (eta ^ 2)) * ci2 ^ 2 + 0.4e1 / 0.75e2 * (1 + eta) * ((eta ^ 3) - 0.5e1 / 0.4e1 * (eta ^ 2) - eta / 0.4e1 + 0.8e1)) * cos((2 * f + 3 * g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - 2 * h + 2 * f)) / 0.108e3 - 0.5e1 / 0.9e1 * ((1 + eta) ^ 2) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 4 * f)) + 0.4e1 / 0.9e1 * (1 + eta) * (((eta ^ 2) + 0.13e2 / 0.16e2 * eta - 0.19e2 / 0.16e2) * ci2 ^ 4 + (-(eta ^ 2) / 0.2e1 - 0.19e2 / 0.48e2 * eta + 0.29e2 / 0.48e2) * ci2 ^ 2 - (eta ^ 2) / 0.6e1 - 0.7e1 / 0.48e2 * eta + 0.3e1 / 0.16e2) * (eta - 1) * cos((-g + 2 * f)) + 0.5e1 / 0.81e2 * (1 + eta) * ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * ((eta - 1) ^ 2) * cos((g + 6 * f)) - 0.5e1 / 0.81e2 * ((1 + eta) ^ 2) * ((eta + 0.53e2 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.5e1 * eta - 0.61e2 / 0.20e2) * ci2 ^ 2 + 0.3e1 / 0.5e1 * eta + 0.23e2 / 0.20e2) * (eta - 1) * cos((3 * g + 2 * h + 6 * f)) - (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * (eta - 1) * cos((g + 2 * h + 4 * f)) / 0.27e2 - 0.8e1 / 0.27e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * Delta * sin((g + 2 * h)) - 0.130e3 / 0.81e2 * (1 + eta) * eta * (((eta ^ 2) - 0.391e3 / 0.195e3) * ci2 ^ 4 + (-0.13e2 / 0.10e2 * (eta ^ 2) + 0.48e2 / 0.65e2 * Delta ^ 2 + 0.1007e4 / 0.390e3) * ci2 ^ 2 + 0.29e2 / 0.130e3 * (eta ^ 2) - 0.24e2 / 0.65e2 * Delta ^ 2 - 0.35e2 / 0.78e2) * cos((g + 2 * h)) + ((0.71e2 / 0.81e2 * (eta ^ 4) + 0.109e3 / 0.162e3 * (eta ^ 3) - 0.7e1 / 0.162e3 * eta + 0.62e2 / 0.27e2 - 0.158e3 / 0.81e2 * (eta ^ 2)) * ci2 ^ 4 + (-0.67e2 / 0.81e2 * (eta ^ 4) - 0.83e2 / 0.162e3 * (eta ^ 3) - 0.89e2 / 0.27e2 + 0.133e3 / 0.81e2 * (eta ^ 2) - 0.199e3 / 0.162e3 * eta) * ci2 ^ 2 + 0.173e3 / 0.162e3 * eta + 0.5e1 / 0.27e2 * (eta ^ 4) + 0.5e1 / 0.162e3 * (eta ^ 3) - 0.25e2 / 0.81e2 * (eta ^ 2) + 0.41e2 / 0.27e2) * cos((g + 2 * f)) + ((0.79e2 / 0.162e3 + (eta ^ 4) + 0.58e2 / 0.81e2 * (eta ^ 3) - 0.374e3 / 0.243e3 * (eta ^ 2) - 0.319e3 / 0.486e3 * eta) * ci2 ^ 4 + (-0.101e3 / 0.162e3 - 0.94e2 / 0.81e2 * (eta ^ 4) - 0.23e2 / 0.27e2 * (eta ^ 3) + (0.32e2 / 0.27e2 * Delta ^ 2 + 0.428e3 / 0.243e3) * (eta ^ 2) + (0.32e2 / 0.27e2 * Delta ^ 2 + 0.349e3 / 0.486e3) * eta) * ci2 ^ 2 + 0.41e2 / 0.162e3 - 0.14e2 / 0.243e3 * (eta ^ 4) - 0.41e2 / 0.243e3 * (eta ^ 3) + (-0.16e2 / 0.27e2 * Delta ^ 2 + 0.25e2 / 0.81e2) * (eta ^ 2) + (-0.16e2 / 0.27e2 * Delta ^ 2 + 0.115e3 / 0.162e3) * eta) * cos(g) - 0.5e1 / 0.81e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * (eta + 0.53e2 / 0.20e2) * cos((g - 2 * h + 6 * f)) - 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g)) + 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h)) + 0.100e3 / 0.27e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2) + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * sin((2 * f + 3 * g)) + 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) - ci2 ^ 2 * (1 + eta) * ((eta - 1) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + 2 * f)) / 0.108e3 + 0.5e1 / 0.81e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((1 + eta) * (eta + 0.53e2 / 0.20e2) * ci2 ^ 2 + 0.8e1 / 0.15e2 * (eta ^ 2) - eta / 0.15e2 - 0.18e2 / 0.5e1) * cos((3 * g + 6 * f)) - 0.20e2 / 0.9e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * sin((g - 2 * h + 2 * f)) - 0.25e2 / 0.81e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 3) + 0.53e2 / 0.25e2 * (eta ^ 2) - 0.104e3 / 0.25e2 * eta - 0.333e3 / 0.50e2) * cos((g - 2 * h + 4 * f)) + ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + 2 * f)) / 0.108e3 - 0.28e2 / 0.81e2 * ((eta ^ 2) + 0.33e2 / 0.28e2 * eta + 0.8e1 / 0.7e1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((5 * g + 2 * h + 2 * f)) + 0.20e2 / 0.9e1 * (((eta ^ 2) + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 4 + (-0.13e2 / 0.10e2 * (eta ^ 2) - eta / 0.2e1 + 0.19e2 / 0.15e2) * ci2 ^ 2 + 0.11e2 / 0.20e2 * (eta ^ 2) + eta / 0.5e1 - 0.11e2 / 0.20e2) * Delta * sin((g + 2 * f)) - 0.5e1 / 0.9e1 * sin(g) * Delta * (((1 + eta) ^ 2) * ci2 ^ 4 + (-0.29e2 / 0.15e2 * (eta ^ 2) - 0.62e2 / 0.15e2 * eta - 0.41e2 / 0.15e2) * ci2 ^ 2 + 0.13e2 / 0.15e2 * (eta ^ 2) + 0.28e2 / 0.15e2 * eta + 0.19e2 / 0.15e2) + 0.28e2 / 0.81e2 * (((eta ^ 3) + 0.31e2 / 0.14e2 * (eta ^ 2) - 0.95e2 / 0.28e2 * eta - 0.327e3 / 0.56e2) * ci2 ^ 4 + (-0.73e2 / 0.56e2 * (eta ^ 3) - 0.143e3 / 0.56e2 * (eta ^ 2) + 0.269e3 / 0.56e2 * eta + 0.51e2 / 0.7e1) * ci2 ^ 2 + 0.29e2 / 0.56e2 * (eta ^ 3) + 0.51e2 / 0.56e2 * (eta ^ 2) - 0.17e2 / 0.8e1 * eta - 0.41e2 / 0.14e2) * (eta - 1) * cos((g + 4 * f)) + 0.31e2 / 0.27e2 * (eta - 1) * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 4 + (-0.143e3 / 0.93e2 * (eta ^ 3) - 0.105e3 / 0.31e2 * (eta ^ 2) - 0.38e2 / 0.31e2 * eta + 0.101e3 / 0.186e3) * ci2 ^ 2 + 0.193e3 / 0.279e3 * (eta ^ 3) + 0.413e3 / 0.279e3 * (eta ^ 2) + 0.151e3 / 0.279e3 * eta - 0.41e2 / 0.186e3) * cos((3 * g + 2 * h)) + 0.5e1 / 0.9e1 * (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((g + 4 * f)) - 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * (1 + eta) * (eta - 1) * ((eta ^ 2) + 0.5e1 / 0.6e1 * eta - 0.7e1 / 0.6e1) * cos((-g - 2 * h + 2 * f)) - 0.16e2 / 0.243e3 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3) + 0.9e1 / 0.16e2 * (eta ^ 2) - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1) * cos((5 * g + 2 * h + 6 * f)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h)) / 0.54e2 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 8 * f)) / 0.162e3 + 0.49e2 / 0.81e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4) + 0.72e2 / 0.49e2 * (eta ^ 3) - 0.136e3 / 0.49e2 * (eta ^ 2) - 0.415e3 / 0.98e2 * eta - 0.79e2 / 0.98e2) * cos((g - 2 * h)) - 0.2e1 / 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * (eta - 1) * sin((-g - 2 * h + 2 * f)) - (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 8 * f)) / 0.162e3 + 0.2e1 / 0.9e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * (eta - 1) * sin((-g + 2 * f)) - 0.31e2 / 0.27e2 * (((eta ^ 3) + 0.7e1 / 0.3e1 * (eta ^ 2) + 0.77e2 / 0.93e2 * eta - 0.79e2 / 0.186e3) * ci2 ^ 2 + ((1 + eta) ^ 3) / 0.62e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * cos((3 * g)) - 0.35e2 / 0.81e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4) + 0.5e1 / 0.14e2 * (eta ^ 3) - 0.92e2 / 0.35e2 * (eta ^ 2) + 0.221e3 / 0.70e2 * eta + 0.228e3 / 0.35e2) * cos((g - 2 * h + 2 * f)) + 0.5e1 / 0.9e1 * (1 + eta) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h)) - 0.5e1 / 0.9e1 * Delta * ci2 ^ 2 * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 4 * f))) * sqrt((-eta ^ 2 + 1)) - 0.2e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * cos((-g - 2 * h + 3 * f)) - 0.50e2 / 0.27e2 * (1 + eta) * (((eta ^ 2) + 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.57e2 / 0.50e2 * (eta ^ 2) - 0.27e2 / 0.25e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.23e2 / 0.150e3 * (eta ^ 2) + 0.13e2 / 0.75e2 * eta + 0.7e1 / 0.150e3) * (eta - 1) * cos((-g - 2 * h + f)) + 0.31e2 / 0.648e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.1991e4 / 0.31e2 + (eta ^ 5) + 0.1503e4 / 0.31e2 * (eta ^ 4) + 0.2492e4 / 0.31e2 * (eta ^ 3) - 0.904e3 / 0.31e2 * (eta ^ 2) - 0.3579e4 / 0.31e2 * eta) * ci2 ^ 2 + 0.108e3 / 0.31e2 * ((eta ^ 3) - 0.17e2 / 0.9e1 * (eta ^ 2) - 0.7e1 / 0.3e1 * eta + 0.37e2 / 0.9e1) * (1 + eta)) * cos((3 * g + 3 * f)) + ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((eta + 97) * ci2 ^ 4 + (-eta - 49) * ci2 ^ 2 + eta / 0.3e1 - 0.47e2 / 0.3e1) * cos((-g + 3 * f)) / 0.432e3 + 0.5e1 / 0.432e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 3) * ((eta - 1) ^ 2) * cos((3 * g + 2 * h + 7 * f)) - 0.2e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 / 0.2e1 - 0.1e1 / 0.6e1) * ((1 + eta) ^ 3) * (eta - 1) * cos((g + 2 * h + 3 * f)) - 0.95e2 / 0.54e2 * (1 + eta) * Delta * (((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * ci2 ^ 4 + (-0.15e2 / 0.19e2 * (eta ^ 3) + 0.27e2 / 0.95e2 * (eta ^ 2) + 0.79e2 / 0.95e2 * eta - 0.27e2 / 0.19e2) * ci2 ^ 2 + 0.28e2 / 0.95e2 * (eta ^ 3) - 0.12e2 / 0.95e2 * (eta ^ 2) - 0.28e2 / 0.95e2 * eta + 0.12e2 / 0.19e2) * sin((f + g)) + 0.29e2 / 0.27e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * ((eta ^ 2) - 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * sin((g + 2 * h + f)) + 0.65e2 / 0.54e2 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (1 + eta) * Delta * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 3 * f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * sin((-g - 2 * h + 3 * f)) / 0.27e2 + 0.5e1 / 0.54e2 * ((1 + eta) ^ 3) * Delta * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + 5 * f)) + 0.5e1 / 0.54e2 * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((-3 * g - 2 * h + f)) - 0.5e1 / 0.432e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((g + 7 * f)) + 0.31e2 / 0.432e3 * (1 + eta) * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 4 + (-(eta ^ 3) + 0.263e3 / 0.31e2 * (eta ^ 2) + 0.691e3 / 0.31e2 * eta + 0.421e3 / 0.31e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 - 0.335e3 / 0.93e2 * (eta ^ 2) - 0.835e3 / 0.93e2 * eta - 0.493e3 / 0.93e2) * (eta - 1) * cos((3 * g + 2 * h + 5 * f)) - (((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * ci2 ^ 4 + (-(eta ^ 2) + 0.2e1 / 0.3e1 * eta + 0.41e2 / 0.27e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.26e2 / 0.81e2 * eta - 0.49e2 / 0.81e2) * (1 + eta) * ((eta - 1) ^ 2) * cos((-3 * g - 2 * h + f)) / 0.16e2 - 0.5e1 / 0.144e3 * (1 + eta) * ((eta - 1) ^ 2) * (((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * ci2 ^ 4 + (-(eta ^ 2) + 0.266e3 / 0.15e2 * eta + 0.421e3 / 0.15e2) * ci2 ^ 2 + (eta ^ 2) / 0.3e1 - 0.338e3 / 0.45e2 * eta - 0.493e3 / 0.45e2) * cos((5 * f + g)) + 0.11e2 / 0.432e3 * (1 + eta) * (((eta ^ 3) + 0.757e3 / 0.11e2 * (eta ^ 2) + 0.609e3 / 0.11e2 * eta - 0.257e3 / 0.11e2) * ci2 ^ 4 + (-(eta ^ 3) - 0.861e3 / 0.11e2 * (eta ^ 2) - 0.753e3 / 0.11e2 * eta + 0.153e3 / 0.11e2) * ci2 ^ 2 + (eta ^ 3) / 0.3e1 + 0.103e3 / 0.11e2 * (eta ^ 2) + 0.289e3 / 0.33e2 * eta + 0.21e2 / 0.11e2) * (eta - 1) * cos((f - g)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.3e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-3 * g - 2 * h + 3 * f)) / 0.432e3 + 0.95e2 / 0.54e2 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * sin((g - 2 * h + f)) - 0.11e2 / 0.432e3 * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 3) - 0.43e2 / 0.11e2 * (eta ^ 2) - 0.95e2 / 0.11e2 * eta - 0.3e1) * cos((-g + 2 * h + f)) + 0.5e1 / 0.144e3 * ci2 ^ 2 * (1 + eta) * ((eta ^ 2) - 0.194e3 / 0.15e2 * eta - 0.349e3 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * cos((g - 2 * h + 5 * f)) + ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * ((eta ^ 2) - 0.10e2 / 0.27e2 * eta - 0.11e2 / 0.9e1) * cos((-3 * g + f)) / 0.16e2 - 0.65e2 / 0.54e2 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * ci2 ^ 2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + 3 * f)) - 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 5 * f)) - 0.41e2 / 0.54e2 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 2) + 0.58e2 / 0.41e2 * eta + 0.37e2 / 0.41e2) * cos((5 * g + 2 * h + 3 * f)) - ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + 3 * f)) / 0.432e3 - 0.31e2 / 0.432e3 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * (((eta ^ 3) - 0.191e3 / 0.31e2 * (eta ^ 2) - 0.547e3 / 0.31e2 * eta - 0.349e3 / 0.31e2) * ci2 ^ 2 - 0.88e2 / 0.31e2 * (eta ^ 2) + 0.16e2 / 0.31e2 * eta + 0.664e3 / 0.93e2) * cos((3 * g + 5 * f)) - 0.5e1 / 0.432e3 * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * (-0.24e2 / 0.5e1 + (1 + eta) * ci2 ^ 2) * cos((3 * g + 7 * f)) + ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + 3 * f)) / 0.432e3 + 0.5e1 / 0.432e3 * ci2 ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 7 * f)) + 0.29e2 / 0.27e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (1 + eta) * Delta * (eta - 1) * ((eta ^ 2) + 0.26e2 / 0.29e2 * eta - 0.15e2 / 0.29e2) * sin((-g - 2 * h + f)) - 0.23e2 / 0.648e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 1) * ((eta ^ 4) + 0.752e3 / 0.23e2 * (eta ^ 3) + 0.976e3 / 0.23e2 * (eta ^ 2) - 0.1632e4 / 0.23e2 * eta - 0.1991e4 / 0.23e2) * cos((g - 2 * h + 3 * f)) + 0.175e3 / 0.54e2 * (1 + eta) * Delta * ((eta ^ 2) + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 1) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((3 * g + 2 * h + f)) + ((0.25e2 / 0.24e2 + 0.13e2 / 0.72e2 * (eta ^ 5) + 0.167e3 / 0.216e3 * (eta ^ 4) - 0.7e1 / 0.18e2 * (eta ^ 3) - (eta ^ 2) + 0.79e2 / 0.72e2 * eta) * ci2 ^ 4 + (-0.373e3 / 0.216e3 - 0.11e2 / 0.216e3 * (eta ^ 4) + 0.14e2 / 0.27e2 * (eta ^ 2) + 0.77e2 / 0.54e2 * (eta ^ 3) - 0.557e3 / 0.216e3 * eta - 0.13e2 / 0.72e2 * (eta ^ 5)) * ci2 ^ 2 - 0.49e2 / 0.72e2 * (eta ^ 4) + 0.41e2 / 0.81e2 * (eta ^ 2) - 0.71e2 / 0.54e2 * (eta ^ 3) + 0.431e3 / 0.216e3 * eta + 0.577e3 / 0.648e3 + 0.13e2 / 0.216e3 * (eta ^ 5)) * cos((f + g)) - 0.79e2 / 0.216e3 * (eta - 1) * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 4 + (-(eta ^ 4) + 0.164e3 / 0.79e2 * (eta ^ 3) + 0.476e3 / 0.79e2 * (eta ^ 2) - 0.212e3 / 0.79e2 * eta - 0.429e3 / 0.79e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 - 0.104e3 / 0.79e2 * (eta ^ 3) - 0.728e3 / 0.237e3 * (eta ^ 2) + 0.200e3 / 0.237e3 * eta + 0.521e3 / 0.237e3) * cos((3 * g + 2 * h + f)) - 0.50e2 / 0.27e2 * (1 + eta) * ((1 + eta) * ((eta ^ 2) - 0.22e2 / 0.25e2 * eta - 0.7e1 / 0.25e2) * ci2 ^ 4 + (-0.49e2 / 0.50e2 * (eta ^ 3) - 0.3e1 / 0.50e2 * (eta ^ 2) + 0.61e2 / 0.50e2 * eta + 0.7e1 / 0.50e2) * ci2 ^ 2 + 0.11e2 / 0.150e3 * (eta ^ 3) - (eta ^ 2) / 0.50e2 - 0.19e2 / 0.150e3 * eta + 0.7e1 / 0.150e3) * cos((g + 2 * h + f)) + 0.23e2 / 0.648e3 * (eta - 1) * (((eta ^ 4) + 0.896e3 / 0.23e2 * (eta ^ 3) + 0.1408e4 / 0.23e2 * (eta ^ 2) - 0.1200e4 / 0.23e2 * eta - 0.1847e4 / 0.23e2) * ci2 ^ 4 + (-(eta ^ 4) - 0.1044e4 / 0.23e2 * (eta ^ 3) - 0.1404e4 / 0.23e2 * (eta ^ 2) + 0.1924e4 / 0.23e2 * eta + 0.2419e4 / 0.23e2) * ci2 ^ 2 + (eta ^ 4) / 0.3e1 + 0.1120e4 / 0.69e2 * (eta ^ 3) + 0.1184e4 / 0.69e2 * (eta ^ 2) - 0.2864e4 / 0.69e2 * eta - 0.1021e4 / 0.23e2) * cos((g + 3 * f)) - (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 7 * f)) / 0.18e2 - 0.5e1 / 0.54e2 * (1 + eta) * Delta * (eta - 1) * (((1 + eta) ^ 2) * ci2 ^ 4 + (0.51e2 / 0.5e1 * (eta ^ 2) + 0.38e2 / 0.5e1 * eta - 0.37e2 / 0.5e1) * ci2 ^ 2 - 0.26e2 / 0.5e1 * (eta ^ 2) - (4 * eta) + 0.18e2 / 0.5e1) * sin((f - g)) - 0.65e2 / 0.162e3 * (1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3) + 0.3e1 / 0.5e1 * (eta ^ 2) - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2) * cos((5 * g + 2 * h + 5 * f)) + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 3) * Delta * (eta - 1) * sin((g + 2 * h + 3 * f)) / 0.27e2 - 0.13e2 / 0.72e2 * ci2 ^ 2 * (ci2 - 0.1e1) * ((eta ^ 5) - 0.233e3 / 0.39e2 * (eta ^ 4) - 0.532e3 / 0.39e2 * (eta ^ 3) + 0.200e3 / 0.39e2 * (eta ^ 2) + 0.271e3 / 0.13e2 * eta + 0.337e3 / 0.39e2) * (ci2 + 0.1e1) * cos((g - 2 * h + f)) + 0.7e1 / 0.54e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + f)) + 0.79e2 / 0.216e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (((eta ^ 4) - 0.16e2 / 0.79e2 * (eta ^ 3) - 0.224e3 / 0.79e2 * (eta ^ 2) + 0.224e3 / 0.79e2 * eta + 0.337e3 / 0.79e2) * ci2 ^ 2 - 0.28e2 / 0.79e2 * ((1 + eta) ^ 3)) * (eta - 1) * cos((3 * g + f)) - (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * sin((-g + 3 * f)) / 0.27e2 - 0.5e1 / 0.54e2 * ((1 + eta) ^ 2) * Delta * ((eta - 1) ^ 2) * (ci2 ^ 4 - 0.7e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.5e1) * sin((5 * f + g)) - 0.115e3 / 0.162e3 * (1 + eta) * (((eta ^ 2) + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 4 + (-0.31e2 / 0.23e2 * (eta ^ 2) - 0.86e2 / 0.115e3 * eta + 0.321e3 / 0.115e3) * ci2 ^ 2 + 0.66e2 / 0.115e3 * (eta ^ 2) + 0.36e2 / 0.115e3 * eta - 0.6e1 / 0.5e1) * Delta * (eta - 1) * sin((g + 3 * f)) - 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + f)) + 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * (eta - 1) * ((1 + eta) ^ 3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + f)) + 0.5e1 / 0.54e2 * Delta * ci2 ^ 2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 5 * f))) * R__e ^ 4 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * J ^ 2 * sqrt(-ci2 ^ 2 + 0.1e1) / a ^ 4 / ci2 / (eta ^ 11) / (1 + eta)];
D5 = [0.213e3 / 0.2e1 * ((-0.14e2 / 0.71e2 * ((eta + 0.61e2 / 0.28e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.65e2 / 0.28e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.27e2 / 0.56e2) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + h + 6 * f)) + 0.89e2 / 0.284e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2) * cos((5 * g + h + 2 * f)) + 0.89e2 / 0.71e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 + 0.389e3 / 0.178e3 * eta + 0.110e3 / 0.89e2) * ci2 ^ 6 + (-0.119e3 / 0.89e2 * eta ^ 2 - 0.509e3 / 0.178e3 * eta - 0.140e3 / 0.89e2) * ci2 ^ 4 + (0.47e2 / 0.89e2 * eta ^ 2 + 0.393e3 / 0.356e3 * eta + 0.52e2 / 0.89e2) * ci2 ^ 2 - 0.73e2 / 0.1068e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * cos((3 * g + h)) - 0.21e2 / 0.71e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta + 0.11e2 / 0.14e2) * (eta + 0.2e1) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.19e2 / 0.6e1 * eta - 0.37e2 / 0.21e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.61e2 / 0.84e2 * eta + 0.5e1 / 0.14e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.84e2) * cos((g - h + 4 * f)) - 0.180e3 / 0.71e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 6 - 0.7e1 / 0.6e1 * ci2 ^ 4 + ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.60e2) * sin((g - h + 2 * f)) - 0.420e3 / 0.71e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.17e2 / 0.14e2 * ci2 ^ 4 + 0.27e2 / 0.70e2 * ci2 ^ 2 - 0.1e1 / 0.28e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + h + 2 * f)) + 0.11e2 / 0.284e3 * ci2 ^ 2 * ((eta ^ 2 + 0.51e2 / 0.11e2) * ci2 ^ 2 - 0.5e1 / 0.11e2 * eta ^ 2 - 0.25e2 / 0.11e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((3 * g - h + 2 * f)) + 0.5e1 / 0.284e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.4e1 / 0.5e1) * ci2 ^ 2 - 0.3e1 / 0.5e1 * eta ^ 2 - 0.1e1 / 0.5e1) * cos((3 * g - h + 4 * f)) + 0.6e1 / 0.71e2 * (0.1e1 + eta) ^ 2 * ((eta + 0.3e1 / 0.4e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.4e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.7e1 / 0.24e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-g + h + 2 * f)) + 0.120e3 / 0.71e2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (0.1e1 + eta) * sin((g + h)) * Delta * (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) + 0.67e2 / 0.142e3 * (0.1e1 + eta) * ((eta ^ 3 - 0.41e2 / 0.67e2 * eta ^ 2 - 0.409e3 / 0.67e2 * eta - 0.409e3 / 0.67e2) * ci2 ^ 8 + (-0.179e3 / 0.67e2 * eta ^ 3 + 0.37e2 / 0.67e2 * eta ^ 2 + 0.923e3 / 0.67e2 * eta + 0.923e3 / 0.67e2) * ci2 ^ 6 + (0.180e3 / 0.67e2 * eta ^ 3 + 0.36e2 / 0.67e2 * eta ^ 2 - 0.770e3 / 0.67e2 * eta - 0.770e3 / 0.67e2) * ci2 ^ 4 + (-0.78e2 / 0.67e2 * eta ^ 3 - 0.42e2 / 0.67e2 * eta ^ 2 + 0.278e3 / 0.67e2 * eta + 0.278e3 / 0.67e2) * ci2 ^ 2 + 0.23e2 / 0.134e3 * eta ^ 3 + 0.17e2 / 0.134e3 * eta ^ 2 - 0.35e2 / 0.67e2 * eta - 0.35e2 / 0.67e2) * cos((g + h + 2 * f)) + 0.33e2 / 0.142e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.2e1 * eta + 0.5e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.202e3 / 0.33e2 * eta - 0.65e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.76e2 / 0.11e2 * eta + 0.30e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.36e2 / 0.11e2 * eta - 0.16e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.17e2 / 0.33e2 * eta + 0.8e1 / 0.33e2) * cos((-g - h + 2 * f)) + 0.17e2 / 0.142e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((eta + 0.53e2 / 0.17e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.111e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.81e2 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.24e2 / 0.17e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.5e1 / 0.34e2) * cos((g + h + 4 * f)) - 0.18e2 / 0.71e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((g - h)) - 0.180e3 / 0.71e2 * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + h + 4 * f)) - 0.5e1 / 0.284e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (-0.3e1 / 0.5e1 + ci2 ^ 2) * cos((3 * g - h)) + 0.3e1 / 0.284e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((5 * g + h + 8 * f)) - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 ^ 2 + 0.1e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((3 * g - h + 6 * f)) / 0.852e3 + ((-0.413e3 / 0.142e3 * eta ^ 4 - 0.485e3 / 0.71e2 * eta ^ 3 + (0.300e3 / 0.71e2 * Delta ^ 2 + 0.121e3 / 0.426e3) * eta ^ 2 + (0.600e3 / 0.71e2 * Delta ^ 2 + 0.2152e4 / 0.213e3) * eta + 0.1292e4 / 0.213e3 + 0.300e3 / 0.71e2 * Delta ^ 2) * ci2 ^ 8 + (0.2861e4 / 0.426e3 * eta ^ 4 + 0.3293e4 / 0.213e3 * eta ^ 3 + (-0.720e3 / 0.71e2 * Delta ^ 2 - 0.272e3 / 0.213e3) * eta ^ 2 + (-0.1440e4 / 0.71e2 * Delta ^ 2 - 0.1663e4 / 0.71e2) * eta - 0.1951e4 / 0.142e3 - 0.720e3 / 0.71e2 * Delta ^ 2) * ci2 ^ 6 + (-0.751e3 / 0.142e3 * eta ^ 4 - 0.847e3 / 0.71e2 * eta ^ 3 + (0.612e3 / 0.71e2 * Delta ^ 2 + 0.4e1 / 0.3e1) * eta ^ 2 + (0.3877e4 / 0.213e3 + 0.1224e4 / 0.71e2 * Delta ^ 2) * eta + 0.4453e4 / 0.426e3 + 0.612e3 / 0.71e2 * Delta ^ 2) * ci2 ^ 4 + (0.352e3 / 0.213e3 * eta ^ 4 + 0.776e3 / 0.213e3 * eta ^ 3 + (-0.216e3 / 0.71e2 * Delta ^ 2 - 0.95e2 / 0.213e3) * eta ^ 2 + (-0.386e3 / 0.71e2 - 0.432e3 / 0.71e2 * Delta ^ 2) * eta - 0.216e3 / 0.71e2 * Delta ^ 2 - 0.217e3 / 0.71e2) * ci2 ^ 2 - 0.161e3 / 0.852e3 * eta ^ 4 - 0.173e3 / 0.426e3 * eta ^ 3 + (0.5e1 / 0.142e3 + 0.27e2 / 0.71e2 * Delta ^ 2) * eta ^ 2 + (0.54e2 / 0.71e2 * Delta ^ 2 + 0.235e3 / 0.426e3) * eta + 0.259e3 / 0.852e3 + 0.27e2 / 0.71e2 * Delta ^ 2) * cos((g + h)) - 0.51e2 / 0.71e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.27e2 / 0.34e2 * eta ^ 2 - 0.481e3 / 0.102e3 * eta - 0.281e3 / 0.51e2) * ci2 ^ 6 + (-0.65e2 / 0.51e2 * eta ^ 3 - 0.109e3 / 0.102e3 * eta ^ 2 + 0.189e3 / 0.34e2 * eta + 0.108e3 / 0.17e2) * ci2 ^ 4 + (0.23e2 / 0.51e2 * eta ^ 3 + 0.91e2 / 0.204e3 * eta ^ 2 - 0.105e3 / 0.68e2 * eta - 0.29e2 / 0.17e2) * ci2 ^ 2 - 0.11e2 / 0.204e3 * eta ^ 3 - 0.7e1 / 0.102e3 * eta ^ 2 + 0.7e1 / 0.68e2 * eta + 0.2e1 / 0.17e2) * cos((3 * g + h + 4 * f)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.229e3 / 0.142e3 * eta ^ 2 - 0.359e3 / 0.142e3 * eta - 0.220e3 / 0.71e2) * ci2 ^ 6 + (-0.91e2 / 0.71e2 * eta ^ 3 - 0.269e3 / 0.142e3 * eta ^ 2 + 0.441e3 / 0.142e3 * eta + 0.261e3 / 0.71e2) * ci2 ^ 4 + (0.31e2 / 0.71e2 * eta ^ 3 + 0.147e3 / 0.284e3 * eta ^ 2 - 0.931e3 / 0.852e3 * eta - 0.7e1 / 0.6e1) * ci2 ^ 2 - 0.9e1 / 0.284e3 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1) * (0.1e1 + eta)) * cos((g - h)) + 0.31e2 / 0.284e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 4 + (-0.9e1 / 0.31e2 * eta ^ 2 + 0.109e3 / 0.93e2) * ci2 ^ 2 + 0.2e1 / 0.93e2 * eta ^ 2 - 0.2e1 / 0.93e2) * (ci2 + 0.1e1) ^ 2 * cos((5 * g + h + 6 * f)) - 0.36e2 / 0.71e2 * ((eta ^ 3 + 0.37e2 / 0.24e2 * eta ^ 2 + 0.9e1 / 0.8e1) * ci2 ^ 6 + (-0.11e2 / 0.9e1 * eta ^ 3 - 0.139e3 / 0.72e2 * eta ^ 2 - 0.19e2 / 0.36e2 * eta - 0.119e3 / 0.72e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.89e2 / 0.144e3 * eta ^ 2 + 0.17e2 / 0.24e2 * eta + 0.43e2 / 0.48e2) * ci2 ^ 2 - eta ^ 3 / 0.144e3 - 0.5e1 / 0.144e3 * eta ^ 2 - 0.7e1 / 0.48e2 * eta - 0.7e1 / 0.48e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - h + 2 * f)) - 0.60e2 / 0.71e2 * (0.1e1 + eta) * ((eta ^ 3 + 0.3e1 / 0.40e2 * eta ^ 2 - 0.7e1 / 0.6e1 * eta + 0.67e2 / 0.120e3) * ci2 ^ 6 + (-0.41e2 / 0.30e2 * eta ^ 3 - 0.41e2 / 0.120e3 * eta ^ 2 + 0.37e2 / 0.20e2 * eta + 0.1e1 / 0.8e1) * ci2 ^ 4 + (0.17e2 / 0.30e2 * eta ^ 3 + 0.79e2 / 0.240e3 * eta ^ 2 - 0.37e2 / 0.40e2 * eta - 0.51e2 / 0.80e2) * ci2 ^ 2 - 0.7e1 / 0.80e2 * eta ^ 3 - 0.17e2 / 0.240e3 * eta ^ 2 + 0.17e2 / 0.80e2 * eta + 0.17e2 / 0.80e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + h + 2 * f)) + 0.85e2 / 0.284e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 4 + (-0.31e2 / 0.85e2 * eta ^ 2 + 0.7e1 / 0.5e1) * ci2 ^ 2 + 0.4e1 / 0.85e2 * eta ^ 2 - 0.2e1 / 0.17e2) * cos((5 * g + h + 4 * f)) + 0.180e3 / 0.71e2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((g + h + 2 * f))) * sqrt(-eta ^ 2 + 0.1e1) - 0.15e2 / 0.568e3 * (0.1e1 + eta) * (-0.48e2 / 0.5e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.47e2 / 0.8e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta - 0.113e3 / 0.8e1) * ci2 ^ 6 + (-0.4e1 / 0.3e1 * eta ^ 3 - 0.63e2 / 0.8e1 * eta ^ 2 - 0.15e2 / 0.4e1 * eta + 0.419e3 / 0.24e2) * ci2 ^ 4 + (0.5e1 / 0.8e1 * eta ^ 3 + 0.431e3 / 0.144e3 * eta ^ 2 + eta / 0.2e1 - 0.845e3 / 0.144e3) * ci2 ^ 2 - 0.13e2 / 0.144e3 * eta ^ 3 - 0.13e2 / 0.48e2 * eta ^ 2 + eta / 0.16e2 + 0.67e2 / 0.144e3) * cos((g - h + f)) - 0.368e3 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 4 + (-0.7e1 / 0.23e2 * eta ^ 2 + 0.21e2 / 0.46e2) * ci2 ^ 2 + eta ^ 2 / 0.46e2 - 0.1e1 / 0.46e2) * cos((5 * g + h + 5 * f)) + 0.10e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 3 - 0.138e3 / 0.25e2 * eta ^ 2 - 0.421e3 / 0.25e2 * eta - 0.262e3 / 0.25e2) * ci2 ^ 6 + (-0.33e2 / 0.25e2 * eta ^ 3 + 0.164e3 / 0.25e2 * eta ^ 2 + 0.489e3 / 0.25e2 * eta + 0.296e3 / 0.25e2) * ci2 ^ 4 + (eta ^ 3 / 0.2e1 - 0.49e2 / 0.25e2 * eta ^ 2 - 0.851e3 / 0.150e3 * eta - 0.81e2 / 0.25e2) * ci2 ^ 2 - 0.13e2 / 0.150e3 * eta ^ 3 + eta ^ 2 / 0.30e2 + 0.3e1 / 0.10e2 * eta + 0.9e1 / 0.50e2) * cos((3 * g + h + f)) - 0.184e3 / 0.5e1 * (0.1e1 + eta) * (0.60e2 / 0.23e2 * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 2 + 0.17e2 / 0.15e2) * ci2 ^ 4 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.19e2 / 0.60e2) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.60e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((g - h + f)) - 0.10e2 / 0.23e2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (0.1e1 + eta) * Delta * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((g + h + 3 * f)) + 0.70e2 / 0.23e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * (eta - 0.1e1) * sin((3 * g + h + f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * sin((-g + h + f)) / 0.23e2 + ((0.109e3 / 0.138e3 + eta ^ 3 - 0.239e3 / 0.138e3 * eta ^ 2 - 0.36e2 / 0.23e2 * eta) * ci2 ^ 8 + (-0.119e3 / 0.69e2 - 0.50e2 / 0.23e2 * eta ^ 3 + 0.257e3 / 0.69e2 * eta ^ 2 + 0.72e2 / 0.23e2 * eta) * ci2 ^ 6 + (0.19e2 / 0.23e2 - 0.55e2 / 0.23e2 * eta ^ 2 - 0.48e2 / 0.23e2 * eta + 0.112e3 / 0.69e2 * eta ^ 3) * ci2 ^ 4 + (-0.11e2 / 0.23e2 * eta ^ 3 + 0.59e2 / 0.138e3 * eta ^ 2 + 0.12e2 / 0.23e2 * eta + 0.5e1 / 0.46e2) * ci2 ^ 2 - 0.11e2 / 0.184e3 + 0.13e2 / 0.276e3 * eta ^ 3 - 0.5e1 / 0.552e3 * eta ^ 2 - eta / 0.23e2) * cos((g + h + f)) - 0.100e3 / 0.23e2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta * sin((g + h + f)) * ((eta ^ 2 - 0.11e2 / 0.5e1) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * eta ^ 2 + 0.12e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 2 - 0.1e1 / 0.2e1)) + 0.22e2 / 0.5e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 - 0.53e2 / 0.11e2 * eta - 0.62e2 / 0.11e2) * ci2 ^ 6 + (-eta ^ 2 + 0.5e1 * eta + 0.64e2 / 0.11e2) * ci2 ^ 4 + (0.3e1 / 0.22e2 * eta ^ 2 - 0.115e3 / 0.66e2 * eta - 0.61e2 / 0.33e2) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) / 0.66e2) * cos((-g + h + f)) + ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + f)) + 0.112e3 * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * sin((-g - h + f)) - 0.64e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 6 + (-0.37e2 / 0.30e2 * eta ^ 2 + 0.19e2 / 0.5e1) * ci2 ^ 4 + (0.49e2 / 0.120e3 * eta ^ 2 - 0.119e3 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.24e2 + 0.1e1 / 0.24e2) * Delta * sin((3 * g + h + 3 * f)) + 0.8e1 / 0.15e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.3e1 + (eta ^ 2 - 0.5e1) * ci2 ^ 2) * cos((3 * g - h + 3 * f)) + 0.6e1 / 0.5e1 * (0.1e1 + eta) * ((eta ^ 2 + 0.127e3 / 0.3e1 * eta + 0.190e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 2 - 0.145e3 / 0.3e1 * eta - 0.208e3 / 0.3e1) * ci2 ^ 4 + (eta ^ 2 / 0.18e2 + 0.217e3 / 0.18e2 * eta + 0.47e2 / 0.3e1) * ci2 ^ 2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.18e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + h + 5 * f)) - 0.7e1 / 0.5e1 * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) - 0.536e3 / 0.15e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 4 - 0.99e2 / 0.268e3 * ci2 ^ 2 + 0.3e1 / 0.67e2) * cos((5 * g + h + 3 * f)) - 0.16e2 * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) + 0.76e2 / 0.5e1 * ((eta ^ 3 + 0.413e3 / 0.57e2 * eta ^ 2 + 0.793e3 / 0.57e2 * eta + 0.473e3 / 0.57e2) * ci2 ^ 8 + (-0.46e2 / 0.19e2 * eta ^ 3 - 0.940e3 / 0.57e2 * eta ^ 2 - 0.1766e4 / 0.57e2 * eta - 0.1036e4 / 0.57e2) * ci2 ^ 6 + (0.116e3 / 0.57e2 * eta ^ 3 + 0.238e3 / 0.19e2 * eta ^ 2 + 0.1304e4 / 0.57e2 * eta + 0.754e3 / 0.57e2) * ci2 ^ 4 + (-0.13e2 / 0.19e2 * eta ^ 3 - 0.205e3 / 0.57e2 * eta ^ 2 - 0.359e3 / 0.57e2 * eta - 0.205e3 / 0.57e2) * ci2 ^ 2 + 0.17e2 / 0.228e3 * eta ^ 3 + eta ^ 2 / 0.3e1 + 0.127e3 / 0.228e3 * eta + 0.6e1 / 0.19e2) * (eta - 0.1e1) * cos((-g - h + f)) + 0.2e1 / 0.5e1 * (0.1e1 + eta) * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * cos((-g - h + 3 * f)) - 0.28e2 / 0.5e1 * ((eta ^ 2 + 0.122e3 / 0.21e2 * eta + 0.29e2 / 0.3e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 - 0.274e3 / 0.21e2 * eta - 0.436e3 / 0.21e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 + 0.76e2 / 0.7e1 * eta + 0.16e2) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 - 0.82e2 / 0.21e2 * eta - 0.109e3 / 0.21e2) * ci2 ^ 2 + eta ^ 2 / 0.36e2 + 0.121e3 / 0.252e3 * eta + 0.37e2 / 0.63e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((g + h + 3 * f)) + 0.6e1 / 0.5e1 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * cos((g + h + 5 * f)) - 0.32e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * sin((g - h + 3 * f)) + 0.20e2 / 0.3e1 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((3 * g - h + f)) - 0.56e2 / 0.15e2 * (ci2 ^ 2 - 0.9e1 / 0.28e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((5 * g + h + 7 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((3 * g + h + 7 * f)) + 0.4e1 / 0.15e2 * (ci2 ^ 2 + 0.1e1 / 0.2e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((3 * g - h + 5 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g + h + 3 * f)) / 0.5e1 - 0.58e2 / 0.15e2 * ((eta ^ 3 - 0.206e3 / 0.29e2 * eta ^ 2 - 0.529e3 / 0.29e2 * eta - 0.266e3 / 0.29e2) * ci2 ^ 6 + (-0.37e2 / 0.29e2 * eta ^ 3 + 0.220e3 / 0.29e2 * eta ^ 2 + 0.573e3 / 0.29e2 * eta + 0.288e3 / 0.29e2) * ci2 ^ 4 + (eta ^ 3 / 0.2e1 - 0.35e2 / 0.29e2 * eta ^ 2 - 0.599e3 / 0.174e3 * eta - 0.137e3 / 0.87e2) * ci2 ^ 2 - 0.3e1 / 0.58e2 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - h + 3 * f)) + 0.8e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.223e3 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.297e3 / 0.20e2) * ci2 ^ 6 + (-0.17e2 / 0.15e2 * eta ^ 3 - 0.287e3 / 0.20e2 * eta ^ 2 + 0.27e2 / 0.10e2 * eta + 0.1163e4 / 0.60e2) * ci2 ^ 4 + (0.17e2 / 0.60e2 * eta ^ 3 + 0.207e3 / 0.40e2 * eta ^ 2 - 0.3e1 / 0.10e2 * eta - 0.847e3 / 0.120e3) * ci2 ^ 2 - eta ^ 3 / 0.40e2 - 0.27e2 / 0.40e2 * eta ^ 2 - 0.3e1 / 0.40e2 * eta + 0.39e2 / 0.40e2) * cos((3 * g + h + 3 * f)))) / (0.1e1 + eta) ^ 2 * R__e ^ 4 * J ^ 2 / a ^ 5 / eta ^ 8 -0.405e3 / 0.4e1 * (-0.11e2 / 0.360e3 * ((eta ^ 3 - 0.140e3 / 0.33e2 * eta ^ 2 - 0.301e3 / 0.33e2 * eta - 0.20e2 / 0.33e2) * ci2 ^ 8 + (-0.26e2 / 0.11e2 * eta ^ 3 + 0.155e3 / 0.11e2 * eta ^ 2 + 0.332e3 / 0.11e2 * eta + 0.79e2 / 0.11e2) * ci2 ^ 6 + (0.64e2 / 0.33e2 * eta ^ 3 - 0.189e3 / 0.11e2 * eta ^ 2 - 0.1202e4 / 0.33e2 * eta - 0.427e3 / 0.33e2) * ci2 ^ 4 + (-0.7e1 / 0.11e2 * eta ^ 3 + 0.26e2 / 0.3e1 * eta ^ 2 + 0.599e3 / 0.33e2 * eta + 0.256e3 / 0.33e2) * ci2 ^ 2 + 0.3e1 / 0.44e2 * eta ^ 3 - 0.377e3 / 0.264e3 * eta ^ 2 - 0.65e2 / 0.22e2 * eta - 0.361e3 / 0.264e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-g - h + 3 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 4 * sin((-g - h + 5 * f)) / 0.480e3 + 0.107e3 / 0.480e3 * ((-0.7205e4 / 0.321e3 - 0.5978e4 / 0.321e3 * eta + eta ^ 4 + 0.4798e4 / 0.963e3 * eta ^ 3 + 0.3340e4 / 0.963e3 * eta ^ 2) * ci2 ^ 8 + (0.15866e5 / 0.321e3 - 0.3812e4 / 0.321e3 * eta ^ 3 - 0.2792e4 / 0.321e3 * eta ^ 2 + 0.13412e5 / 0.321e3 * eta - 0.230e3 / 0.107e3 * eta ^ 4) * ci2 ^ 6 + (-0.37688e5 / 0.963e3 + 0.10108e5 / 0.963e3 * eta ^ 3 - 0.32780e5 / 0.963e3 * eta + 0.508e3 / 0.321e3 * eta ^ 4 + 0.7924e4 / 0.963e3 * eta ^ 2) * ci2 ^ 4 + (-0.3854e4 / 0.963e3 * eta ^ 3 + 0.106e3 / 0.9e1 * eta - 0.49e2 / 0.107e3 * eta ^ 4 + 0.12569e5 / 0.963e3 - 0.3248e4 / 0.963e3 * eta ^ 2) * ci2 ^ 2 + 0.1015e4 / 0.1926e4 * eta ^ 3 + 0.451e3 / 0.963e3 * eta ^ 2 + 0.19e2 / 0.428e3 * eta ^ 4 - 0.1949e4 / 0.1284e4 - 0.2719e4 / 0.1926e4 * eta) * (0.1e1 + eta) * (eta - 0.1e1) * sin((g + h + 3 * f)) + (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.349e3 / 0.9e1 * eta + 0.826e3 / 0.9e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 - 0.263e3 / 0.3e1 * eta - 0.581e3 / 0.3e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 + 0.656e3 / 0.9e1 * eta + 0.1292e4 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 - 0.26e2 * eta - 0.131e3 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.36e2 + 0.229e3 / 0.72e2 * eta + 0.335e3 / 0.72e2) * (eta - 0.1e1) ^ 2 * sin((g + h + 5 * f)) / 0.120e3 - (0.1e1 + eta) * ((0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 6 - 0.37e2 / 0.30e2 * ci2 ^ 4 + 0.11e2 / 0.30e2 * ci2 ^ 2 - 0.1e1 / 0.60e2) * cos((-g + h + f)) + 0.3e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 4 - 0.6e1 * eta ^ 2 + 0.5e1) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 4 + 0.106e3 / 0.15e2 * eta ^ 2 - 0.52e2 / 0.9e1) * ci2 ^ 4 + (0.7e1 / 0.20e2 * eta ^ 4 - 0.61e2 / 0.30e2 * eta ^ 2 + 0.59e2 / 0.36e2) * ci2 ^ 2 - eta ^ 4 / 0.60e2 + eta ^ 2 / 0.10e2 - 0.1e1 / 0.12e2) * cos((g - h + f)) - 0.8e1 / 0.3e1 * (0.1e1 + eta) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta * (eta - 0.1e1) * ((eta ^ 2 - 0.11e2 / 0.2e1) * ci2 ^ 4 + (-0.9e1 / 0.8e1 * eta ^ 2 + 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.4e1 - 0.1e1) * cos((g + h + 3 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta * (eta - 0.1e1) ^ 2 * cos((g + h + 5 * f)) / 0.2e1 + 0.13e2 / 0.3e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 - 0.97e2 / 0.13e2) * ci2 ^ 6 + (-0.167e3 / 0.130e3 * eta ^ 2 + 0.1187e4 / 0.130e3) * ci2 ^ 4 + (0.61e2 / 0.130e3 * eta ^ 2 - 0.77e2 / 0.26e2) * ci2 ^ 2 - 0.3e1 / 0.52e2 * eta ^ 2 + 0.15e2 / 0.52e2) * cos((3 * g + h + f)) - 0.379e3 / 0.180e3 * (ci2 ^ 4 - 0.609e3 / 0.1516e4 * ci2 ^ 2 + 0.21e2 / 0.379e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sin((5 * g + h + f)) - 0.5e1 / 0.72e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * sin((-3 * g + h + f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((g + h + 7 * f)) / 0.16e2 + ((-0.755e3 / 0.18e2 - 0.233e3 / 0.30e2 * eta ^ 5 - 0.5e1 / 0.2e1 * eta - 0.25e2 / 0.6e1 * eta ^ 4 + 0.68e2 / 0.3e1 * eta ^ 3 + 0.157e3 / 0.5e1 * eta ^ 2) * ci2 ^ 8 + (0.1699e4 / 0.18e2 + 0.92e2 / 0.5e1 * eta ^ 5 - 0.253e3 / 0.5e1 * eta ^ 3 - 0.3286e4 / 0.45e2 * eta ^ 2 + 0.5e1 * eta + 0.311e3 / 0.30e2 * eta ^ 4) * ci2 ^ 6 + (-0.13679e5 / 0.180e3 + 0.589e3 / 0.15e2 * eta ^ 3 - 0.10e2 / 0.3e1 * eta - 0.581e3 / 0.60e2 * eta ^ 4 + 0.1861e4 / 0.30e2 * eta ^ 2 - 0.77e2 / 0.5e1 * eta ^ 5) * ci2 ^ 4 + (-0.123e3 / 0.10e2 * eta ^ 3 + 0.5e1 / 0.6e1 * eta + 0.47e2 / 0.12e2 * eta ^ 4 + 0.4603e4 / 0.180e3 - 0.337e3 / 0.15e2 * eta ^ 2 + 0.16e2 / 0.3e1 * eta ^ 5) * ci2 ^ 2 + 0.4e1 / 0.3e1 * eta ^ 3 - 0.47e2 / 0.72e2 * eta ^ 5 + 0.1013e4 / 0.360e3 * eta ^ 2 - 0.389e3 / 0.720e3 * eta ^ 4 - 0.5e1 / 0.72e2 * eta - 0.2149e4 / 0.720e3) * sin((g + h + f)) - 0.5e1 * cos((g + h + f)) * ((eta ^ 4 - 0.42e2 / 0.5e1 * eta ^ 2 + 0.9e1) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * eta ^ 4 + 0.48e2 / 0.5e1 * eta ^ 2 - 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 4 - 0.11e2 / 0.5e1 * eta ^ 2 + 0.13e2 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta) / 0.6e1 - 0.5e1 / 0.36e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * cos((3 * g + h + 7 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-g + h + 3 * f)) / 0.360e3 - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * sin((-3 * g - h + 3 * f)) / 0.576e3 + 0.7e1 / 0.36e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * Delta * (eta - 0.1e1) ^ 2 * cos((-g - h + 3 * f)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.117e3 / 0.8e1 * eta - 0.101e3 / 0.8e1) * ci2 ^ 6 + (-eta ^ 2 + 0.115e3 / 0.8e1 * eta + 0.99e2 / 0.8e1) * ci2 ^ 4 + (eta ^ 2 / 0.8e1 - 0.77e2 / 0.16e2 * eta - 0.71e2 / 0.16e2) * ci2 ^ 2 + (eta + 0.29e2) * (0.1e1 + eta) / 0.48e2) * sin((-g + h + 3 * f)) / 0.180e3 - 0.89e2 / 0.2160e4 * (-ci2 ^ 2 * (ci2 ^ 2 + 0.1e1) * sin((3 * g - h + 8 * f)) / 0.89e2 + (0.12e2 / 0.89e2 * ci2 ^ 4 - 0.4e1 / 0.89e2 * ci2 ^ 2) * sin((5 * g + h + 10 * f)) + sin((5 * g + h)) * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2)) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (-eta ^ 2 + 0.1e1) ^ (0.3e1 / 0.2e1) + (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * ((eta ^ 2 + 0.23e2 / 0.4e1 * eta + 0.39e2 / 0.20e2) * ci2 ^ 6 + (-0.7e1 / 0.5e1 * eta ^ 2 - 0.173e3 / 0.20e2 * eta - 0.97e2 / 0.20e2) * ci2 ^ 4 + (0.11e2 / 0.20e2 * eta ^ 2 + 0.101e3 / 0.24e2 * eta + 0.141e3 / 0.40e2) * ci2 ^ 2 - 0.11e2 / 0.120e3 * eta ^ 2 - 0.17e2 / 0.20e2 * eta - 0.33e2 / 0.40e2) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + f)) / 0.72e2 + 0.7e1 / 0.360e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.22e2 / 0.3e1 * eta ^ 2 - 0.223e3 / 0.21e2) * ci2 ^ 2 - 0.6e1 / 0.7e1 * eta ^ 4 - 0.58e2 / 0.21e2 * eta ^ 2 + 0.16e2 / 0.3e1) * sin((3 * g - h + 3 * f)) + 0.2e1 / 0.45e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 - 0.709e3 / 0.64e2 * eta ^ 2 - 0.1021e4 / 0.32e2 * eta - 0.1125e4 / 0.64e2) * ci2 ^ 6 + (-0.9e1 / 0.8e1 * eta ^ 3 + 0.823e3 / 0.64e2 * eta ^ 2 + 0.1143e4 / 0.32e2 * eta + 0.1247e4 / 0.64e2) * ci2 ^ 4 + (0.17e2 / 0.64e2 * eta ^ 3 - 0.1265e4 / 0.384e3 * eta ^ 2 - 0.731e3 / 0.96e2 * eta - 0.471e3 / 0.128e3) * ci2 ^ 2 + (0.1e1 + eta) * (eta ^ 2 + 0.22e2 * eta - 0.131e3) / 0.384e3) * sin((g - h + 5 * f)) - 0.89e2 / 0.2880e4 * ((eta ^ 4 - 0.490e3 / 0.89e2 * eta ^ 3 - 0.488e3 / 0.89e2 * eta ^ 2 + 0.746e3 / 0.89e2 * eta + 0.639e3 / 0.89e2) * ci2 ^ 6 + (-0.137e3 / 0.89e2 * eta ^ 4 + 0.434e3 / 0.89e2 * eta ^ 3 + 0.480e3 / 0.89e2 * eta ^ 2 - 0.434e3 / 0.89e2 * eta - 0.327e3 / 0.89e2) * ci2 ^ 4 + (0.103e3 / 0.178e3 * eta ^ 4 - 0.269e3 / 0.267e3 * eta ^ 3 - 0.128e3 / 0.89e2 * eta ^ 2 + 0.47e2 / 0.89e2 * eta + 0.187e3 / 0.534e3) * ci2 ^ 2 - 0.11e2 / 0.267e3 * (0.1e1 + eta) * (eta ^ 3 - 0.27e2 / 0.11e2 * eta ^ 2 - 0.3e1 / 0.11e2 * eta + 0.51e2 / 0.11e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + h + f)) + 0.115e3 / 0.108e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * ((eta ^ 2 - 0.318e3 / 0.115e3) * ci2 ^ 4 + (-0.841e3 / 0.2300e4 * eta ^ 2 + 0.2209e4 / 0.2300e4) * ci2 ^ 2 + 0.51e2 / 0.1150e4 * eta ^ 2 - 0.111e3 / 0.1150e4) * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((5 * g + h + 3 * f)) - (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 4 - 0.32e2 / 0.3e1 * eta ^ 2 + 0.115e3 / 0.9e1) * ci2 ^ 6 + (-0.37e2 / 0.30e2 * eta ^ 4 + 0.188e3 / 0.15e2 * eta ^ 2 - 0.265e3 / 0.18e2) * ci2 ^ 4 + (0.49e2 / 0.120e3 * eta ^ 4 - 0.217e3 / 0.60e2 * eta ^ 2 + 0.287e3 / 0.72e2) * ci2 ^ 2 - eta ^ 4 / 0.24e2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.24e2) * cos((3 * g + h + 3 * f)) + 0.2e1 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta * (eta - 0.1e1) * ((eta ^ 2 - 0.6e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 + 0.29e2 / 0.4e1) * ci2 ^ 2 + eta ^ 2 / 0.3e1 - 0.11e2 / 0.6e1) * cos((-g - h + f)) + (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.1123e4 / 0.20e2 * eta - 0.2071e4 / 0.20e2) * ci2 ^ 6 + (-eta ^ 2 + 0.1281e4 / 0.20e2 * eta + 0.2229e4 / 0.20e2) * ci2 ^ 4 + (eta ^ 2 / 0.4e1 - 0.1913e4 / 0.120e3 * eta - 0.957e3 / 0.40e2) * ci2 ^ 2 - eta ^ 2 / 0.24e2 + 0.23e2 / 0.60e2 * eta + 0.17e2 / 0.40e2) * sin((3 * g + h + 7 * f)) / 0.72e2 + 0.7e1 / 0.576e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (eta - 0.1e1) ^ 3 * sin((g - h + 7 * f)) - 0.31e2 / 0.192e3 * ((eta ^ 4 + 0.1574e4 / 0.93e2 * eta ^ 3 + 0.8864e4 / 0.465e3 * eta ^ 2 - 0.4870e4 / 0.93e2 * eta - 0.6125e4 / 0.93e2) * ci2 ^ 6 + (-0.171e3 / 0.155e3 * eta ^ 4 - 0.9478e4 / 0.465e3 * eta ^ 3 - 0.10424e5 / 0.465e3 * eta ^ 2 + 0.9442e4 / 0.155e3 * eta + 0.34601e5 / 0.465e3) * ci2 ^ 4 + (0.223e3 / 0.930e3 * eta ^ 4 + 0.8599e4 / 0.1395e4 * eta ^ 3 + 0.20e2 / 0.3e1 * eta ^ 2 - 0.22759e5 / 0.1395e4 * eta - 0.10481e5 / 0.558e3) * ci2 ^ 2 + (0.1e1 + eta) * (eta ^ 3 - 0.721e3 * eta ^ 2 - 0.153e3 * eta + 0.1385e4) / 0.1395e4) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) + 0.269e3 / 0.540e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.680e3 / 0.269e3) * ci2 ^ 4 + (-0.327e3 / 0.1076e4 * eta ^ 2 + 0.851e3 / 0.1076e4) * ci2 ^ 2 + 0.9e1 / 0.538e3 * eta ^ 2 - 0.9e1 / 0.538e3) * sin((5 * g + h + 7 * f)) - 0.5e1 / 0.9e1 * (0.1e1 + eta) * ((eta ^ 5 + 0.2069e4 / 0.400e3 * eta ^ 4 - 0.259e3 / 0.60e2 * eta ^ 3 - 0.979e3 / 0.40e2 * eta ^ 2 + 0.5e1 / 0.4e1 * eta + 0.27587e5 / 0.1200e4) * ci2 ^ 6 + (-0.73e2 / 0.60e2 * eta ^ 5 - 0.2637e4 / 0.400e3 * eta ^ 4 + 0.121e3 / 0.25e2 * eta ^ 3 + 0.18259e5 / 0.600e3 * eta ^ 2 - 0.5e1 / 0.4e1 * eta - 0.11277e5 / 0.400e3) * ci2 ^ 4 + (0.463e3 / 0.1200e4 * eta ^ 5 + 0.1867e4 / 0.800e3 * eta ^ 4 - 0.227e3 / 0.200e3 * eta ^ 3 - 0.12097e5 / 0.1200e4 * eta ^ 2 + 0.41e2 / 0.400e3 * eta + 0.7171e4 / 0.800e3) * ci2 ^ 2 - 0.31e2 / 0.800e3 * eta ^ 5 - 0.689e3 / 0.2400e4 * eta ^ 4 + 0.7e1 / 0.240e3 * eta ^ 3 + 0.271e3 / 0.240e3 * eta ^ 2 + 0.127e3 / 0.2400e4 * eta - 0.2269e4 / 0.2400e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + h + 3 * f)) - 0.49e2 / 0.320e3 * ((eta ^ 5 + 0.85e2 / 0.9e1 * eta ^ 4 + 0.2810e4 / 0.147e3 * eta ^ 3 - 0.2186e4 / 0.441e3 * eta ^ 2 - 0.1937e4 / 0.63e2 * eta - 0.6443e4 / 0.441e3) * ci2 ^ 6 + (-0.1531e4 / 0.1323e4 * eta ^ 5 - 0.14471e5 / 0.1323e4 * eta ^ 4 - 0.29194e5 / 0.1323e4 * eta ^ 3 + 0.5710e4 / 0.1323e4 * eta ^ 2 + 0.6179e4 / 0.189e3 * eta + 0.20617e5 / 0.1323e4) * ci2 ^ 4 + (0.769e3 / 0.2646e4 * eta ^ 5 + 0.7229e4 / 0.2646e4 * eta ^ 4 + 0.1025e4 / 0.189e3 * eta ^ 3 + 0.155e3 / 0.1323e4 * eta ^ 2 - 0.13919e5 / 0.2646e4 * eta - 0.6115e4 / 0.2646e4) * ci2 ^ 2 - 0.2e1 / 0.441e3 * (eta ^ 4 + 0.16e2 / 0.3e1 * eta ^ 3 - 0.10e2 / 0.3e1 * eta ^ 2 + 0.160e3 / 0.3e1 * eta + 0.287e3 / 0.3e1) * (0.1e1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((g - h + 3 * f)) + 0.103e3 / 0.90e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.437e3 / 0.103e3 * eta ^ 2 + 0.1112e4 / 0.309e3) * ci2 ^ 4 + (-0.34e2 / 0.103e3 * eta ^ 4 + 0.841e3 / 0.618e3 * eta ^ 2 - 0.707e3 / 0.618e3) * ci2 ^ 2 + 0.13e2 / 0.412e3 * eta ^ 4 - 0.61e2 / 0.618e3 * eta ^ 2 + 0.83e2 / 0.1236e4) * sin((5 * g + h + 5 * f)) - 0.7e1 / 0.36e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + f)) + 0.7e1 / 0.576e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((3 * g + h + 9 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.32e2) * ci2 ^ 2 - eta ^ 2 / 0.12e2 + 0.181e3 / 0.12e2) * sin((3 * g - h + f)) / 0.180e3 + 0.73e2 / 0.1080e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sin((5 * g + h + 9 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((-g + h + 5 * f)) / 0.960e3 - 0.11e2 / 0.18e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 - 0.83e2 / 0.11e2) * ci2 ^ 6 + (-0.129e3 / 0.110e3 * eta ^ 2 + 0.921e3 / 0.110e3) * ci2 ^ 4 + (0.37e2 / 0.110e3 * eta ^ 2 - 0.217e3 / 0.110e3) * ci2 ^ 2 - eta ^ 2 / 0.44e2 + 0.1e1 / 0.44e2) * cos((3 * g + h + 5 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.24e2 / 0.5e1) * ci2 ^ 2 - 0.33e2 / 0.20e2 * eta ^ 2 - 0.7e1 / 0.20e2) * (eta - 0.1e1) * sin((3 * g - h + 5 * f)) / 0.108e3 - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 + 0.13e2 / 0.18e2) * (eta - 0.1e1) ^ 2 * sin((3 * g - h + 7 * f)) / 0.240e3 - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.5e1) * ci2 ^ 6 + (-0.107e3 / 0.90e2 * eta ^ 2 + 0.527e3 / 0.90e2) * ci2 ^ 4 + (0.31e2 / 0.90e2 * eta ^ 2 - 0.151e3 / 0.90e2) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.12e2) * (eta - 0.1e1) * cos((g - h + 3 * f)) / 0.2e1 - (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * cos((g - h + 5 * f)) / 0.6e1 + (0.11e2 / 0.360e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.25e2 / 0.11e2 * eta + 0.2e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.20e2 / 0.3e1 * eta - 0.47e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.80e2 / 0.11e2 * eta + 0.26e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.37e2 / 0.11e2 * eta - 0.15e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.23e2 / 0.44e2 * eta + 0.31e2 / 0.132e3) * (eta - 0.1e1) ^ 2 * sin((-g - h + 4 * f)) - 0.37e2 / 0.90e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.585e3 / 0.148e3 * eta ^ 4 - 0.657e3 / 0.37e2 * eta ^ 3 - 0.19e2 / 0.2e1 * eta ^ 2 + 0.802e3 / 0.37e2 * eta + 0.2583e4 / 0.148e3) * ci2 ^ 6 + (-0.49e2 / 0.37e2 * eta ^ 5 + 0.681e3 / 0.148e3 * eta ^ 4 + 0.832e3 / 0.37e2 * eta ^ 3 + 0.973e3 / 0.74e2 * eta ^ 2 - 0.1005e4 / 0.37e2 * eta - 0.3395e4 / 0.148e3) * ci2 ^ 4 + (0.19e2 / 0.37e2 * eta ^ 5 - 0.1133e4 / 0.888e3 * eta ^ 4 - 0.581e3 / 0.74e2 * eta ^ 3 - 0.2431e4 / 0.444e3 * eta ^ 2 + 0.2027e4 / 0.222e3 * eta + 0.7531e4 / 0.888e3) * ci2 ^ 2 - 0.8e1 / 0.111e3 * eta ^ 5 + 0.10e2 / 0.111e3 * eta ^ 4 + 0.433e3 / 0.444e3 * eta ^ 3 + 0.365e3 / 0.444e3 * eta ^ 2 - 0.497e3 / 0.444e3 * eta - 0.509e3 / 0.444e3) * sin((3 * g + h + 2 * f)) + 0.17e2 / 0.540e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * sin((g + h + 6 * f)) - 0.17e2 / 0.30e2 * ((eta ^ 5 - 0.143e3 / 0.204e3 * eta ^ 4 - 0.814e3 / 0.51e2 * eta ^ 3 - 0.513e3 / 0.34e2 * eta ^ 2 + 0.70e2 / 0.3e1 * eta + 0.5201e4 / 0.204e3) * ci2 ^ 6 + (-0.65e2 / 0.51e2 * eta ^ 5 + 0.41e2 / 0.68e2 * eta ^ 4 + 0.655e3 / 0.34e2 * eta ^ 3 + 0.929e3 / 0.51e2 * eta ^ 2 - 0.2821e4 / 0.102e3 * eta - 0.6083e4 / 0.204e3) * ci2 ^ 4 + (0.23e2 / 0.51e2 * eta ^ 5 + 0.19e2 / 0.408e3 * eta ^ 4 - 0.898e3 / 0.153e3 * eta ^ 3 - 0.3497e4 / 0.612e3 * eta ^ 2 + 0.805e3 / 0.102e3 * eta + 0.10237e5 / 0.1224e4) * ci2 ^ 2 - 0.11e2 / 0.204e3 * (0.1e1 + eta) * (eta ^ 4 + 0.2e1 / 0.33e2 * eta ^ 3 - 0.323e3 / 0.33e2 * eta ^ 2 - 0.34e2 / 0.33e2 * eta + 0.398e3 / 0.33e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + h + 4 * f)) - 0.19e2 / 0.90e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.63e2 / 0.76e2 * eta ^ 4 - 0.239e3 / 0.19e2 * eta ^ 3 - 0.397e3 / 0.38e2 * eta ^ 2 + 0.182e3 / 0.19e2 * eta + 0.489e3 / 0.76e2) * ci2 ^ 6 + (-0.23e2 / 0.19e2 * eta ^ 5 + 0.63e2 / 0.76e2 * eta ^ 4 + 0.264e3 / 0.19e2 * eta ^ 3 + 0.447e3 / 0.38e2 * eta ^ 2 - 0.175e3 / 0.19e2 * eta - 0.461e3 / 0.76e2) * ci2 ^ 4 + (eta ^ 5 / 0.3e1 - 0.59e2 / 0.456e3 * eta ^ 4 - 0.337e3 / 0.114e3 * eta ^ 3 - 0.31e2 / 0.12e2 * eta ^ 2 + 0.27e2 / 0.38e2 * eta + 0.37e2 / 0.456e3) * ci2 ^ 2 - eta ^ 5 / 0.114e3 - eta ^ 4 / 0.114e3 - 0.17e2 / 0.228e3 * eta ^ 3 - 0.7e1 / 0.76e2 * eta ^ 2 + 0.25e2 / 0.76e2 * eta + 0.29e2 / 0.76e2) * sin((g - h + 2 * f)) + 0.2e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.5e1 / 0.3e1) * ci2 ^ 6 + (-0.71e2 / 0.60e2 * eta ^ 2 + 0.349e3 / 0.180e3) * ci2 ^ 4 + (0.41e2 / 0.120e3 * eta ^ 2 - 0.199e3 / 0.360e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.36e2) * Delta * cos((g - h + 2 * f)) + (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * sin((-g + h + 4 * f)) / 0.90e2 - 0.7e1 / 0.90e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 8 * f)) + 0.29e2 / 0.180e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.1435e4 / 0.174e3) * ci2 ^ 4 + (-0.35e2 / 0.87e2 * eta ^ 2 + 0.533e3 / 0.174e3) * ci2 ^ 2 + 0.5e1 / 0.87e2 * eta ^ 2 - 0.32e2 / 0.87e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((5 * g + h + 2 * f)) - 0.2e1 / 0.3e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta * (eta - 0.1e1) * cos((g + h + 4 * f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.7e1 / 0.5e1 * eta ^ 2 - 0.8e1) * ci2 ^ 2 - 0.3e1 / 0.5e1 * eta ^ 4 + 0.4e1 / 0.5e1 * eta ^ 2 + 0.49e2 / 0.15e2) * sin((3 * g - h + 4 * f)) / 0.72e2 + (0.1e1 + eta) * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + 2 * f)) / 0.144e3 - 0.7e1 / 0.90e2 * (0.1e1 + eta) * ((eta ^ 2 + 0.191e3 / 0.56e2 * eta + 0.113e3 / 0.56e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.91e2 / 0.24e2 * eta - 0.53e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.37e2 / 0.48e2 * eta + 0.125e3 / 0.336e3) * ci2 ^ 2 - eta ^ 2 / 0.84e2 + eta / 0.24e2 + 0.3e1 / 0.56e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - h + 6 * f)) + 0.13e2 / 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 - 0.95e2 / 0.39e2) * ci2 ^ 6 + (-0.159e3 / 0.130e3 * eta ^ 2 + 0.75e2 / 0.26e2) * ci2 ^ 4 + (0.103e3 / 0.260e3 * eta ^ 2 - 0.133e3 / 0.156e3) * ci2 ^ 2 - eta ^ 2 / 0.26e2 + 0.5e1 / 0.78e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((3 * g + h + 2 * f)) + 0.4e1 * ((eta ^ 2 - 0.22e2 / 0.9e1) * ci2 ^ 6 + (-0.7e1 / 0.6e1 * eta ^ 2 + 0.124e3 / 0.45e2) * ci2 ^ 4 + (0.79e2 / 0.240e3 * eta ^ 2 - 0.497e3 / 0.720e3) * ci2 ^ 2 - eta ^ 2 / 0.48e2 + 0.1e1 / 0.48e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((3 * g + h + 4 * f)) - 0.31e2 / 0.90e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.357e3 / 0.248e3 * eta ^ 2 - 0.3671e4 / 0.372e3 * eta - 0.10849e5 / 0.744e3) * ci2 ^ 6 + (-0.113e3 / 0.93e2 * eta ^ 3 - 0.1231e4 / 0.744e3 * eta ^ 2 + 0.1405e4 / 0.124e3 * eta + 0.3979e4 / 0.248e3) * ci2 ^ 4 + (0.35e2 / 0.93e2 * eta ^ 3 + 0.23e2 / 0.48e2 * eta ^ 2 - 0.2153e4 / 0.744e3 * eta - 0.5519e4 / 0.1488e4) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 + 0.11e2 / 0.24e2 * eta - 0.89e2 / 0.24e2) / 0.31e2) * (eta - 0.1e1) * sin((3 * g + h + 6 * f)) - 0.4e1 / 0.3e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta * (eta - 0.1e1) * cos((-g - h + 2 * f)) + ((eta ^ 3 + 0.31e2 / 0.16e2 * eta ^ 2 - 0.77e2 / 0.8e1 * eta - 0.157e3 / 0.16e2) * ci2 ^ 6 + (-eta ^ 3 - 0.31e2 / 0.16e2 * eta ^ 2 + 0.69e2 / 0.8e1 * eta + 0.141e3 / 0.16e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.43e2 / 0.96e2 * eta ^ 2 - 0.133e3 / 0.48e2 * eta - 0.265e3 / 0.96e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 - eta / 0.2e1 - 0.19e2 / 0.2e1) / 0.24e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + h + 2 * f)) / 0.45e2 + 0.2e1 / 0.135e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.79e2 / 0.16e2 * eta ^ 2 - 0.267e3 / 0.16e2) * ci2 ^ 2 - eta ^ 4 / 0.2e1 - 0.29e2 / 0.16e2 * eta ^ 2 + 0.133e3 / 0.16e2) * sin((3 * g - h + 2 * f)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 2 + 0.52e2 / 0.45e2) * ci2 ^ 4 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.59e2 / 0.180e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.60e2) * cos((g - h)) + 0.13e2 / 0.240e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.815e3 / 0.117e3) * ci2 ^ 4 + (-0.35e2 / 0.117e3 * eta ^ 2 + 0.259e3 / 0.117e3) * ci2 ^ 2 + 0.2e1 / 0.117e3 * eta ^ 2 - 0.2e1 / 0.117e3) * sin((5 * g + h + 8 * f)) + 0.29e2 / 0.120e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.1091e4 / 0.87e2 * eta ^ 2 + 0.4568e4 / 0.261e3) * ci2 ^ 4 + (-0.95e2 / 0.261e3 * eta ^ 4 + 0.1108e4 / 0.261e3 * eta ^ 2 - 0.1505e4 / 0.261e3) * ci2 ^ 2 + 0.4e1 / 0.87e2 * eta ^ 4 - 0.12e2 / 0.29e2 * eta ^ 2 + 0.40e2 / 0.87e2) * sin((5 * g + h + 4 * f)) + 0.23e2 / 0.135e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.2207e4 / 0.184e3 * eta ^ 2 + 0.2979e4 / 0.184e3) * ci2 ^ 4 + (-0.15e2 / 0.46e2 * eta ^ 4 + 0.687e3 / 0.184e3 * eta ^ 2 - 0.931e3 / 0.184e3) * ci2 ^ 2 + 0.3e1 / 0.92e2 * eta ^ 4 - 0.21e2 / 0.92e2 * eta ^ 2 + 0.9e1 / 0.46e2) * sin((5 * g + h + 6 * f)) - 0.2e1 / 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.527e3 / 0.160e3 * eta ^ 3 - 0.753e3 / 0.160e3 * eta ^ 2 - 0.507e3 / 0.32e2 * eta - 0.1311e4 / 0.160e3) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 4 - 0.123e3 / 0.32e2 * eta ^ 3 + 0.829e3 / 0.160e3 * eta ^ 2 + 0.2799e4 / 0.160e3 * eta + 0.1443e4 / 0.160e3) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.317e3 / 0.320e3 * eta ^ 3 - 0.1033e4 / 0.960e3 * eta ^ 2 - 0.1117e4 / 0.320e3 * eta - 0.1583e4 / 0.960e3) * ci2 ^ 2 - (eta ^ 3 + eta ^ 2 / 0.5e1 + 0.13e2 / 0.5e1 * eta + 0.81e2 / 0.5e1) * (0.1e1 + eta) / 0.96e2) * (eta - 0.1e1) * sin((g - h + 4 * f)) - 0.7e1 / 0.90e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.47e2 / 0.28e2 * eta ^ 3 - 0.267e3 / 0.28e2 * eta ^ 2 + 0.109e3 / 0.28e2 * eta - 0.1e1 / 0.28e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 4 - 0.83e2 / 0.28e2 * eta ^ 3 + 0.779e3 / 0.84e2 * eta ^ 2 - 0.109e3 / 0.28e2 * eta + 0.269e3 / 0.84e2) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.211e3 / 0.168e3 * eta ^ 3 - 0.271e3 / 0.168e3 * eta ^ 2 + 0.31e2 / 0.56e2 * eta - 0.389e3 / 0.168e3) * ci2 ^ 2 - eta ^ 4 / 0.84e2 - 0.2e1 / 0.21e2 * eta ^ 3 - 0.5e1 / 0.84e2 * eta ^ 2 + eta / 0.21e2 + 0.11e2 / 0.42e2) * sin((g - h)) + (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.53e2 / 0.45e2 * ci2 ^ 4 + 0.61e2 / 0.180e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((g - h + 4 * f)) + 0.11e2 / 0.2160e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 + 0.151e3 / 0.11e2) * ci2 ^ 2 - 0.5e1 / 0.11e2 * eta ^ 2 - 0.67e2 / 0.11e2) * sin((3 * g - h)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 + 0.17e2 / 0.4e1) * ci2 ^ 2 - eta ^ 2 + 0.7e1 / 0.4e1) * sin((3 * g - h + 6 * f)) / 0.270e3 + 0.14e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 ^ 6 - 0.89e2 / 0.70e2 * ci2 ^ 4 + 0.127e3 / 0.280e3 * ci2 ^ 2 - 0.3e1 / 0.56e2) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((3 * g + h)) + ((0.817e3 / 0.180e3 - 0.223e3 / 0.540e3 * eta ^ 5 + 0.208e3 / 0.45e2 * eta - 0.238e3 / 0.135e3 * eta ^ 4 - 0.1621e4 / 0.540e3 * eta ^ 3 - 0.59e2 / 0.108e3 * eta ^ 2) * ci2 ^ 8 + (-0.359e3 / 0.36e2 + 0.163e3 / 0.180e3 * eta ^ 5 + 0.599e3 / 0.90e2 * eta ^ 3 + 0.13e2 / 0.10e2 * eta ^ 2 - 0.365e3 / 0.36e2 * eta + 0.697e3 / 0.180e3 * eta ^ 4) * ci2 ^ 6 + (0.413e3 / 0.54e2 - 0.2791e4 / 0.540e3 * eta ^ 3 + 0.419e3 / 0.54e2 * eta - 0.1579e4 / 0.540e3 * eta ^ 4 - 0.623e3 / 0.540e3 * eta ^ 2 - 0.367e3 / 0.540e3 * eta ^ 5) * ci2 ^ 4 + (0.293e3 / 0.180e3 * eta ^ 3 - 0.259e3 / 0.108e3 * eta + 0.157e3 / 0.180e3 * eta ^ 4 - 0.64e2 / 0.27e2 + 0.79e2 / 0.180e3 * eta ^ 2 + eta ^ 5 / 0.5e1) * ci2 ^ 2 - 0.31e2 / 0.180e3 * eta ^ 3 - 0.7e1 / 0.360e3 * eta ^ 5 - 0.59e2 / 0.1080e4 * eta ^ 2 - 0.187e3 / 0.2160e4 * eta ^ 4 + 0.271e3 / 0.1080e4 * eta + 0.179e3 / 0.720e3) * sin((g + h)) + ((0.385e3 / 0.54e2 + 0.7e1 / 0.45e2 * eta ^ 5 + 0.3787e4 / 0.540e3 * eta - 0.203e3 / 0.180e3 * eta ^ 4 - 0.251e3 / 0.60e2 * eta ^ 3 - 0.157e3 / 0.60e2 * eta ^ 2) * ci2 ^ 8 + (-0.2156e4 / 0.135e3 - 0.109e3 / 0.270e3 * eta ^ 5 + 0.1309e4 / 0.135e3 * eta ^ 3 + 0.859e3 / 0.135e3 * eta ^ 2 - 0.4249e4 / 0.270e3 * eta + 0.319e3 / 0.135e3 * eta ^ 4) * ci2 ^ 6 + (0.6959e4 / 0.540e3 - 0.41e2 / 0.5e1 * eta ^ 3 + 0.1375e4 / 0.108e3 * eta - 0.33e2 / 0.20e2 * eta ^ 4 - 0.52e2 / 0.9e1 * eta ^ 2 + 0.71e2 / 0.180e3 * eta ^ 5) * ci2 ^ 4 + (0.133e3 / 0.45e2 * eta ^ 3 - 0.391e3 / 0.90e2 * eta + 0.77e2 / 0.180e3 * eta ^ 4 - 0.263e3 / 0.60e2 + 0.34e2 / 0.15e2 * eta ^ 2 - eta ^ 5 / 0.6e1) * ci2 ^ 2 - 0.133e3 / 0.360e3 * eta ^ 3 + 0.13e2 / 0.540e3 * eta ^ 5 - 0.41e2 / 0.135e3 * eta ^ 2 - 0.73e2 / 0.2160e4 * eta ^ 4 + 0.557e3 / 0.1080e4 * eta + 0.1121e4 / 0.2160e4) * sin((g + h + 2 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-g + h + 2 * f)) / 0.90e2 + 0.11e2 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * cos((3 * g + h + 6 * f)) + (0.1e1 + eta) * ((eta ^ 3 + 0.2e1 / 0.3e1 * eta ^ 2 - 0.329e3 / 0.27e2 * eta - 0.2608e4 / 0.135e3) * ci2 ^ 8 + (-0.67e2 / 0.27e2 * eta ^ 3 - 0.49e2 / 0.27e2 * eta ^ 2 + 0.739e3 / 0.27e2 * eta + 0.5621e4 / 0.135e3) * ci2 ^ 6 + (0.104e3 / 0.45e2 * eta ^ 3 + 0.28e2 / 0.15e2 * eta ^ 2 - 0.3034e4 / 0.135e3 * eta - 0.4318e4 / 0.135e3) * ci2 ^ 4 + (-0.14e2 / 0.15e2 * eta ^ 3 - 0.37e2 / 0.45e2 * eta ^ 2 + 0.1064e4 / 0.135e3 * eta + 0.277e3 / 0.27e2) * ci2 ^ 2 + 0.7e1 / 0.54e2 * eta ^ 3 + 0.13e2 / 0.108e3 * eta ^ 2 - 0.257e3 / 0.270e3 * eta - 0.23e2 / 0.20e2) * (eta - 0.1e1) * sin((g + h + 4 * f)) / 0.8e1 - (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 4 + 0.41e2 / 0.80e2 * eta ^ 3 - 0.1933e4 / 0.240e3 * eta ^ 2 - 0.535e3 / 0.48e2 * eta - 0.167e3 / 0.48e2) * ci2 ^ 6 + (-0.41e2 / 0.30e2 * eta ^ 4 - 0.227e3 / 0.240e3 * eta ^ 3 + 0.2609e4 / 0.240e3 * eta ^ 2 + 0.1353e4 / 0.80e2 * eta + 0.509e3 / 0.80e2) * ci2 ^ 4 + (0.17e2 / 0.30e2 * eta ^ 4 + 0.289e3 / 0.480e3 * eta ^ 3 - 0.2087e4 / 0.480e3 * eta ^ 2 - 0.3857e4 / 0.480e3 * eta - 0.349e3 / 0.96e2) * ci2 ^ 2 - 0.7e1 / 0.80e2 * (0.1e1 + eta) * (eta ^ 3 + 0.5e1 / 0.21e2 * eta ^ 2 - 0.61e2 / 0.7e1 * eta - 0.25e2 / 0.3e1)) * sin((3 * g + h)) / 0.9e1 - 0.20e2 / 0.9e1 * cos((g + h)) * ((eta ^ 3 + 0.3e1 / 0.2e1 * eta ^ 2 - 0.31e2 / 0.10e2) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * eta ^ 3 - 0.9e1 / 0.5e1 * eta ^ 2 + 0.18e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 3 + 0.9e1 / 0.20e2 * eta ^ 2 - 0.17e2 / 0.20e2) * (0.1e1 + eta) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * Delta - 0.8e1 / 0.3e1 * (0.1e1 + eta) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * ((eta ^ 2 - 0.2e1) * ci2 ^ 4 + (-0.9e1 / 0.8e1 * eta ^ 2 + 0.17e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.12e2) * Delta * cos((g + h + 2 * f)) + 0.11e2 / 0.180e3 * ((0.325e3 / 0.66e2 + 0.101e3 / 0.66e2 * eta + eta ^ 4 + 0.125e3 / 0.22e2 * eta ^ 3 + 0.229e3 / 0.66e2 * eta ^ 2) * ci2 ^ 8 + (-0.136e3 / 0.33e2 - 0.481e3 / 0.33e2 * eta ^ 3 - 0.37e2 / 0.11e2 * eta ^ 2 + 0.277e3 / 0.33e2 * eta - 0.101e3 / 0.33e2 * eta ^ 4) * ci2 ^ 6 + (-0.184e3 / 0.33e2 + 0.150e3 / 0.11e2 * eta ^ 3 - 0.734e3 / 0.33e2 * eta + 0.38e2 / 0.11e2 * eta ^ 4 - 0.118e3 / 0.33e2 * eta ^ 2) * ci2 ^ 4 + (-0.119e3 / 0.22e2 * eta ^ 3 + 0.91e2 / 0.6e1 * eta - 0.18e2 / 0.11e2 * eta ^ 4 + 0.409e3 / 0.66e2 + 0.295e3 / 0.66e2 * eta ^ 2) * ci2 ^ 2 + 0.65e2 / 0.88e2 * eta ^ 3 - 0.265e3 / 0.264e3 * eta ^ 2 + 0.17e2 / 0.66e2 * eta ^ 4 - 0.347e3 / 0.264e3 - 0.755e3 / 0.264e3 * eta) * (eta - 0.1e1) * sin((-g - h + 2 * f))) * sqrt(-eta ^ 2 + 0.1e1) - 0.109e3 / 0.180e3 * ((eta ^ 5 + 0.495e3 / 0.436e3 * eta ^ 4 - 0.85e2 / 0.109e3 * eta ^ 3 - 0.705e3 / 0.218e3 * eta ^ 2 + 0.120e3 / 0.109e3 * eta + 0.171e3 / 0.436e3) * ci2 ^ 6 + (-0.130e3 / 0.109e3 * eta ^ 5 - 0.559e3 / 0.436e3 * eta ^ 4 + 0.86e2 / 0.109e3 * eta ^ 3 + 0.703e3 / 0.218e3 * eta ^ 2 - 0.120e3 / 0.109e3 * eta + 0.25e2 / 0.436e3) * ci2 ^ 4 + (0.145e3 / 0.436e3 * eta ^ 5 + 0.787e3 / 0.2616e4 * eta ^ 4 - 0.83e2 / 0.654e3 * eta ^ 3 - 0.587e3 / 0.1308e4 * eta ^ 2 + 0.227e3 / 0.1308e4 * eta - 0.1109e4 / 0.2616e4) * ci2 ^ 2 - 0.31e2 / 0.2616e4 * eta ^ 5 + eta ^ 4 / 0.2616e4 - 0.11e2 / 0.1308e4 * eta ^ 3 - 0.29e2 / 0.436e3 * eta ^ 2 + 0.13e2 / 0.2616e4 * eta + 0.87e2 / 0.872e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - h + f)) - 0.491e3 / 0.576e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.8219e4 / 0.2455e4 * eta ^ 4 + 0.6994e4 / 0.2455e4 * eta ^ 3 - 0.9334e4 / 0.2455e4 * eta ^ 2 - 0.17433e5 / 0.2455e4 * eta - 0.6837e4 / 0.2455e4) * ci2 ^ 6 + (-0.3239e4 / 0.2455e4 * eta ^ 5 - 0.2183e4 / 0.491e3 * eta ^ 4 - 0.9842e4 / 0.2455e4 * eta ^ 3 + 0.11622e5 / 0.2455e4 * eta ^ 2 + 0.23881e5 / 0.2455e4 * eta + 0.10061e5 / 0.2455e4) * ci2 ^ 4 + (0.2501e4 / 0.4910e4 * eta ^ 5 + 0.25603e5 / 0.14730e5 * eta ^ 4 + 0.12809e5 / 0.7365e4 * eta ^ 3 - 0.11627e5 / 0.7365e4 * eta ^ 2 - 0.11549e5 / 0.2946e4 * eta - 0.26941e5 / 0.14730e5) * ci2 ^ 2 - 0.514e3 / 0.7365e4 * (eta ^ 4 + 0.656e3 / 0.257e3 * eta ^ 3 + 0.346e3 / 0.257e3 * eta ^ 2 - 0.1136e4 / 0.257e3 * eta - 0.1123e4 / 0.257e3) * (0.1e1 + eta)) * sin((3 * g + h + f)) + 0.949e3 / 0.1440e4 * ((0.7627e4 / 0.2847e4 + eta ^ 5 + 0.1019e4 / 0.219e3 * eta + 0.6011e4 / 0.2847e4 * eta ^ 4 + 0.5938e4 / 0.2847e4 * eta ^ 3 + 0.2894e4 / 0.949e3 * eta ^ 2) * ci2 ^ 8 + (-0.15014e5 / 0.2847e4 - 0.2394e4 / 0.949e3 * eta ^ 5 - 0.5116e4 / 0.949e3 * eta ^ 3 - 0.18404e5 / 0.2847e4 * eta ^ 2 - 0.26014e5 / 0.2847e4 * eta - 0.5234e4 / 0.949e3 * eta ^ 4) * ci2 ^ 6 + (0.704e3 / 0.219e3 + 0.14384e5 / 0.2847e4 * eta ^ 3 + 0.15628e5 / 0.2847e4 * eta + 0.14776e5 / 0.2847e4 * eta ^ 4 + 0.4312e4 / 0.949e3 * eta ^ 2 + 0.2156e4 / 0.949e3 * eta ^ 5) * ci2 ^ 4 + (-0.1906e4 / 0.949e3 * eta ^ 3 - 0.847e3 / 0.949e3 * eta - 0.1959e4 / 0.949e3 * eta ^ 4 - 0.535e3 / 0.949e3 - 0.1106e4 / 0.949e3 * eta ^ 2 - 0.815e3 / 0.949e3 * eta ^ 5) * ci2 ^ 2 + 0.1601e4 / 0.5694e4 * eta ^ 3 + 0.1319e4 / 0.11388e5 * eta ^ 5 + 0.159e3 / 0.1898e4 * eta ^ 2 + 0.85e2 / 0.292e3 * eta ^ 4 - 0.115e3 / 0.3796e4 * eta - 0.61e2 / 0.11388e5) * (eta - 0.1e1) * sin((-g - h + f))) * R__e ^ 4 * J ^ 2 / a ^ 4 / eta ^ 11 / (0.1e1 + eta) -0.813e3 / 0.4e1 * ci2 / (0.1e1 + eta) ^ 2 * R__e ^ 4 * J ^ 2 * sqrt(-ci2 ^ 2 + 0.1e1) * ((0.360e3 / 0.271e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * sin((3 * g + 2 * h + 4 * f)) - 0.33e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.2e1 * eta + 0.5e1 / 0.11e2) * ci2 ^ 6 + (-0.101e3 / 0.44e2 * eta ^ 2 - 0.101e3 / 0.22e2 * eta - 0.65e2 / 0.44e2) * ci2 ^ 4 + (0.19e2 / 0.11e2 * eta ^ 2 + 0.38e2 / 0.11e2 * eta + 0.15e2 / 0.11e2) * ci2 ^ 2 - 0.9e1 / 0.22e2 * eta ^ 2 - 0.9e1 / 0.11e2 * eta - 0.4e1 / 0.11e2) * cos((-g - 2 * h + 2 * f)) + ((eta ^ 4 + 0.599e3 / 0.271e3 * eta ^ 3 + (-0.600e3 / 0.271e3 * Delta ^ 2 + 0.269e3 / 0.813e3) * eta ^ 2 + (-0.1200e4 / 0.271e3 * Delta ^ 2 - 0.1907e4 / 0.813e3) * eta - 0.1264e4 / 0.813e3 - 0.600e3 / 0.271e3 * Delta ^ 2) * ci2 ^ 8 + (-0.2031e4 / 0.1084e4 * eta ^ 4 - 0.4491e4 / 0.1084e4 * eta ^ 3 + (0.1080e4 / 0.271e3 * Delta ^ 2 - 0.58e2 / 0.271e3) * eta ^ 2 + (0.2160e4 / 0.271e3 * Delta ^ 2 + 0.5491e4 / 0.1084e4) * eta + 0.3407e4 / 0.1084e4 + 0.1080e4 / 0.271e3 * Delta ^ 2) * ci2 ^ 6 + (0.299e3 / 0.271e3 * eta ^ 4 + 0.1333e4 / 0.542e3 * eta ^ 3 + (-0.612e3 / 0.271e3 * Delta ^ 2 - 0.65e2 / 0.1626e4) * eta ^ 2 + (-0.5347e4 / 0.1626e4 - 0.1224e4 / 0.271e3 * Delta ^ 2) * eta - 0.3173e4 / 0.1626e4 - 0.612e3 / 0.271e3 * Delta ^ 2) * ci2 ^ 4 + (-0.1381e4 / 0.6504e4 * eta ^ 4 - 0.3059e4 / 0.6504e4 * eta ^ 3 + (0.108e3 / 0.271e3 * Delta ^ 2 + 0.317e3 / 0.6504e4) * eta ^ 2 + (0.1493e4 / 0.2168e4 + 0.216e3 / 0.271e3 * Delta ^ 2) * eta + 0.108e3 / 0.271e3 * Delta ^ 2 + 0.211e3 / 0.542e3) * ci2 ^ 2 + 0.9e1 / 0.2168e4 * (0.1e1 + eta) ^ 2 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1)) * cos(g) + 0.360e3 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 2 - 0.1e1 / 0.5e1) * sin((4 * f + 3 * g)) - 0.3e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1 / 0.2e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * cos((8 * f + 5 * g)) + 0.360e3 / 0.271e3 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.7e1 / 0.8e1 * ci2 ^ 4 + ci2 ^ 2 / 0.6e1 - 0.1e1 / 0.240e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((g - 2 * h + 2 * f)) - 0.89e2 / 0.542e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 4 - 0.117e3 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * cos((2 * f + 5 * g)) + 0.169e3 / 0.1626e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.367e3 / 0.169e3) * ci2 ^ 6 + (-0.573e3 / 0.676e3 * eta - 0.1167e4 / 0.676e3) * ci2 ^ 4 + (0.97e2 / 0.676e3 * eta + 0.163e3 / 0.676e3) * ci2 ^ 2 - eta / 0.676e3 - 0.1e1 / 0.676e3) * (eta - 0.1e1) * cos((3 * g + 6 * f)) - 0.45e2 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.29e2 / 0.15e2 * eta + 0.8e1 / 0.15e2) * ci2 ^ 8 + (-0.121e3 / 0.60e2 * eta ^ 2 - 0.79e2 / 0.20e2 * eta - 0.4e1 / 0.3e1) * ci2 ^ 6 + (0.62e2 / 0.45e2 * eta ^ 2 + 0.41e2 / 0.15e2 * eta + 0.49e2 / 0.45e2) * ci2 ^ 4 + (-0.109e3 / 0.360e3 * eta ^ 2 - 0.109e3 / 0.180e3 * eta - 0.97e2 / 0.360e3) * ci2 ^ 2 - (0.1e1 + eta) ^ 2 / 0.360e3) * (eta - 0.1e1) * cos((-g + 2 * f)) + 0.840e3 / 0.271e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 8 - 0.79e2 / 0.56e2 * ci2 ^ 6 + 0.139e3 / 0.280e3 * ci2 ^ 4 - ci2 ^ 2 / 0.112e3 - 0.1e1 / 0.112e3) * sin((3 * g + 2 * h + 2 * f)) + 0.28e2 / 0.271e3 * (0.1e1 + eta) ^ 2 * ((eta + 0.61e2 / 0.28e2) * ci2 ^ 8 + (-0.19e2 / 0.14e2 * eta - 0.317e3 / 0.112e3) * ci2 ^ 6 + (0.3e1 / 0.7e1 * eta + 0.23e2 / 0.28e2) * ci2 ^ 4 + (-eta / 0.672e3 - 0.1e1 / 0.672e3) * ci2 ^ 2 - eta / 0.672e3 - 0.1e1 / 0.672e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + 6 * f)) + 0.25e2 / 0.271e3 * ((eta ^ 2 + 0.47e2 / 0.25e2 * eta + 0.13e2 / 0.25e2) * ci2 ^ 8 + (-0.117e3 / 0.100e3 * eta ^ 2 - 0.183e3 / 0.100e3 * eta - 0.21e2 / 0.100e3) * ci2 ^ 6 + (0.3e1 / 0.25e2 * eta ^ 2 - 0.17e2 / 0.50e2 * eta - 0.29e2 / 0.50e2) * ci2 ^ 4 + (0.23e2 / 0.200e3 * eta ^ 2 + 0.73e2 / 0.200e3 * eta + 0.1e1 / 0.4e1) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.200e3) * (0.1e1 + eta) * (eta - 0.1e1) * cos((g + 4 * f)) - 0.178e3 / 0.271e3 * ((eta ^ 2 + 0.389e3 / 0.178e3 * eta + 0.110e3 / 0.89e2) * ci2 ^ 8 + (-0.535e3 / 0.356e3 * eta ^ 2 - 0.2305e4 / 0.712e3 * eta - 0.160e3 / 0.89e2) * ci2 ^ 6 + (0.213e3 / 0.356e3 * eta ^ 2 + 0.451e3 / 0.356e3 * eta + 0.61e2 / 0.89e2) * ci2 ^ 4 - 0.73e2 / 0.4272e4 * (eta + 0.82e2 / 0.73e2) * (0.1e1 + eta) * ci2 ^ 2 - 0.73e2 / 0.4272e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * (0.1e1 + eta) * (eta - 0.1e1) * cos((3 * g + 2 * h)) - 0.67e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) * ((eta ^ 3 - 0.41e2 / 0.67e2 * eta ^ 2 - 0.409e3 / 0.67e2 * eta - 0.409e3 / 0.67e2) * ci2 ^ 6 + (-0.537e3 / 0.268e3 * eta ^ 3 + 0.111e3 / 0.268e3 * eta ^ 2 + 0.2769e4 / 0.268e3 * eta + 0.2769e4 / 0.268e3) * ci2 ^ 4 + (0.90e2 / 0.67e2 * eta ^ 3 + 0.18e2 / 0.67e2 * eta ^ 2 - 0.385e3 / 0.67e2 * eta - 0.385e3 / 0.67e2) * ci2 ^ 2 - 0.39e2 / 0.134e3 * eta ^ 3 - 0.21e2 / 0.134e3 * eta ^ 2 + 0.139e3 / 0.134e3 * eta + 0.139e3 / 0.134e3) * cos((g + 2 * h + 2 * f)) + 0.99e2 / 0.271e3 * (ci2 ^ 6 - 0.15e2 / 0.11e2 * ci2 ^ 4 + 0.29e2 / 0.66e2 * ci2 ^ 2 - 0.1e1 / 0.66e2) * (0.1e1 + eta) ^ 2 * Delta * sin((g + 2 * f)) - 0.85e2 / 0.542e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 4 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * cos((5 * g + 4 * f)) - 0.142e3 / 0.271e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.229e3 / 0.142e3 * eta ^ 2 - 0.359e3 / 0.142e3 * eta - 0.220e3 / 0.71e2) * ci2 ^ 6 + (-0.273e3 / 0.284e3 * eta ^ 3 - 0.807e3 / 0.568e3 * eta ^ 2 + 0.1323e4 / 0.568e3 * eta + 0.783e3 / 0.284e3) * ci2 ^ 4 + (0.31e2 / 0.142e3 * eta ^ 3 + 0.147e3 / 0.568e3 * eta ^ 2 - 0.931e3 / 0.1704e4 * eta - 0.7e1 / 0.12e2) * ci2 ^ 2 - 0.9e1 / 0.1136e4 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1) * (0.1e1 + eta)) * cos((g - 2 * h)) - 0.240e3 / 0.271e3 * sin(g) * ((eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * ci2 ^ 6 + (-0.33e2 / 0.20e2 * eta ^ 2 - 0.339e3 / 0.80e2 * eta - 0.339e3 / 0.80e2) * ci2 ^ 4 + (0.5e1 / 0.6e1 * eta ^ 2 + 0.259e3 / 0.120e3 * eta + 0.259e3 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.8e1 - 0.5e1 / 0.16e2 * eta - 0.5e1 / 0.16e2) * ci2 ^ 2 * (0.1e1 + eta) * Delta - 0.17e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * ((eta + 0.53e2 / 0.17e2) * ci2 ^ 6 + (-0.117e3 / 0.68e2 * eta - 0.333e3 / 0.68e2) * ci2 ^ 4 + (0.33e2 / 0.34e2 * eta + 0.81e2 / 0.34e2) * ci2 ^ 2 - 0.3e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * (eta - 0.1e1) * cos((g + 2 * h + 4 * f)) - 0.85e2 / 0.542e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 6 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 4 + (-0.23e2 / 0.340e3 * eta ^ 2 + 0.99e2 / 0.340e3) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * cos((5 * g + 2 * h + 4 * f)) + 0.72e2 / 0.271e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.37e2 / 0.24e2 * eta ^ 2 + 0.9e1 / 0.8e1) * ci2 ^ 6 + (-0.11e2 / 0.12e2 * eta ^ 3 - 0.139e3 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.48e2 * eta - 0.119e3 / 0.96e2) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 + 0.89e2 / 0.288e3 * eta ^ 2 + 0.17e2 / 0.48e2 * eta + 0.43e2 / 0.96e2) * ci2 ^ 2 - eta ^ 3 / 0.576e3 - 0.5e1 / 0.576e3 * eta ^ 2 - 0.7e1 / 0.192e3 * eta - 0.7e1 / 0.192e3) * cos((g - 2 * h + 2 * f)) - 0.360e3 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * sin((g + 2 * h + 2 * f)) - 0.31e2 / 0.542e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 6 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 4 + (-0.23e2 / 0.372e3 * eta ^ 2 + 0.35e2 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * cos((5 * g + 2 * h + 6 * f)) + 0.229e3 / 0.542e3 * ((eta ^ 3 + 0.7e1 / 0.229e3 * eta ^ 2 - 0.331e3 / 0.229e3 * eta + 0.83e2 / 0.229e3) * ci2 ^ 6 + (-0.969e3 / 0.916e3 * eta ^ 3 - 0.231e3 / 0.916e3 * eta ^ 2 + 0.1407e4 / 0.916e3 * eta + 0.165e3 / 0.916e3) * ci2 ^ 4 + (0.277e3 / 0.916e3 * eta ^ 3 + 0.163e3 / 0.916e3 * eta ^ 2 - 0.419e3 / 0.916e3 * eta - 0.281e3 / 0.916e3) * ci2 ^ 2 - 0.21e2 / 0.916e3 * eta ^ 3 - 0.17e2 / 0.916e3 * eta ^ 2 + 0.51e2 / 0.916e3 * eta + 0.51e2 / 0.916e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * f + 3 * g)) - 0.31e2 / 0.542e3 * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 4 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((6 * f + 5 * g)) + 0.199e3 / 0.542e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.157e3 / 0.199e3 * eta ^ 2 - 0.966e3 / 0.199e3 * eta - 0.1128e4 / 0.199e3) * ci2 ^ 6 + (-0.771e3 / 0.796e3 * eta ^ 3 - 0.645e3 / 0.796e3 * eta ^ 2 + 0.3405e4 / 0.796e3 * eta + 0.3891e4 / 0.796e3) * ci2 ^ 4 + (0.187e3 / 0.796e3 * eta ^ 3 + 0.185e3 / 0.796e3 * eta ^ 2 - 0.629e3 / 0.796e3 * eta - 0.695e3 / 0.796e3) * ci2 ^ 2 - 0.11e2 / 0.796e3 * (0.1e1 + eta) * (eta ^ 2 + 0.3e1 / 0.11e2 * eta - 0.24e2 / 0.11e2)) * cos((4 * f + 3 * g)) + 0.5e1 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.152e3 / 0.5e1 * eta ^ 2 + 0.409e3 / 0.5e1 * eta + 0.98e2) * ci2 ^ 8 + (0.129e3 / 0.20e2 * eta ^ 3 - 0.75e2 / 0.2e1 * eta ^ 2 - 0.2883e4 / 0.20e2 * eta - 0.822e3 / 0.5e1) * ci2 ^ 6 + (-0.56e2 / 0.5e1 * eta ^ 3 + 0.39e2 / 0.5e1 * eta ^ 2 + 0.84e2 * eta + 0.447e3 / 0.5e1) * ci2 ^ 4 + (0.31e2 / 0.8e1 * eta ^ 3 + 0.79e2 / 0.40e2 * eta ^ 2 - 0.577e3 / 0.40e2 * eta - 0.577e3 / 0.40e2) * ci2 ^ 2 - eta ^ 3 / 0.40e2 - eta ^ 2 / 0.8e1 - 0.21e2 / 0.40e2 * eta - 0.21e2 / 0.40e2) * cos((g + 2 * f)) + 0.120e3 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.3e1 / 0.40e2 * eta ^ 2 - 0.7e1 / 0.6e1 * eta + 0.67e2 / 0.120e3) * ci2 ^ 8 + (-0.61e2 / 0.40e2 * eta ^ 3 - 0.47e2 / 0.160e3 * eta ^ 2 + 0.473e3 / 0.240e3 * eta - 0.89e2 / 0.480e3) * ci2 ^ 6 + (0.5e1 / 0.8e1 * eta ^ 3 + eta ^ 2 / 0.4e1 - 0.37e2 / 0.40e2 * eta - 0.7e1 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * ci2 ^ 2 - 0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * cos((3 * g + 2 * h + 2 * f)) + 0.102e3 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.27e2 / 0.34e2 * eta ^ 2 - 0.481e3 / 0.102e3 * eta - 0.281e3 / 0.51e2) * ci2 ^ 8 + (-0.99e2 / 0.68e2 * eta ^ 3 - 0.163e3 / 0.136e3 * eta ^ 2 + 0.2663e4 / 0.408e3 * eta + 0.767e3 / 0.102e3) * ci2 ^ 6 + (0.37e2 / 0.68e2 * eta ^ 3 + 0.25e2 / 0.51e2 * eta ^ 2 - 0.147e3 / 0.68e2 * eta - 0.83e2 / 0.34e2) * ci2 ^ 4 + (-0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * ci2 ^ 2 - 0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * cos((3 * g + 2 * h + 4 * f)) + 0.413e3 / 0.271e3 * ((eta ^ 4 + 0.970e3 / 0.413e3 * eta ^ 3 + (-0.600e3 / 0.413e3 * Delta ^ 2 - 0.121e3 / 0.1239e4) * eta ^ 2 + (-0.1200e4 / 0.413e3 * Delta ^ 2 - 0.4304e4 / 0.1239e4) * eta - 0.2584e4 / 0.1239e4 - 0.600e3 / 0.413e3 * Delta ^ 2) * ci2 ^ 6 + (-0.2861e4 / 0.1652e4 * eta ^ 4 - 0.3293e4 / 0.826e3 * eta ^ 3 + (0.1080e4 / 0.413e3 * Delta ^ 2 + 0.136e3 / 0.413e3) * eta ^ 2 + (0.4989e4 / 0.826e3 + 0.2160e4 / 0.413e3 * Delta ^ 2) * eta + 0.5853e4 / 0.1652e4 + 0.1080e4 / 0.413e3 * Delta ^ 2) * ci2 ^ 4 + (0.751e3 / 0.826e3 * eta ^ 4 + 0.121e3 / 0.59e2 * eta ^ 3 + (-0.612e3 / 0.413e3 * Delta ^ 2 - 0.284e3 / 0.1239e4) * eta ^ 2 + (-0.3877e4 / 0.1239e4 - 0.1224e4 / 0.413e3 * Delta ^ 2) * eta - 0.612e3 / 0.413e3 * Delta ^ 2 - 0.4453e4 / 0.2478e4) * ci2 ^ 2 - 0.176e3 / 0.1239e4 * eta ^ 4 - 0.388e3 / 0.1239e4 * eta ^ 3 + (0.95e2 / 0.2478e4 + 0.108e3 / 0.413e3 * Delta ^ 2) * eta ^ 2 + (0.216e3 / 0.413e3 * Delta ^ 2 + 0.193e3 / 0.413e3) * eta + 0.108e3 / 0.413e3 * Delta ^ 2 + 0.31e2 / 0.118e3) * ci2 ^ 2 * cos((g + 2 * h)) - 0.240e3 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * Delta * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * sin((g + 2 * h)) - 0.351e3 / 0.542e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 + 0.256e3 / 0.117e3 * eta + 0.145e3 / 0.117e3) * ci2 ^ 6 + (-0.473e3 / 0.468e3 * eta ^ 2 - 0.253e3 / 0.117e3 * eta - 0.557e3 / 0.468e3) * ci2 ^ 4 + (0.379e3 / 0.1404e4 * eta ^ 2 + 0.22e2 / 0.39e2 * eta + 0.419e3 / 0.1404e4) * ci2 ^ 2 - 0.73e2 / 0.4212e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * cos((3 * g)) - 0.12e2 / 0.271e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta + 0.3e1 / 0.4e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.9e1 / 0.16e2) * ci2 ^ 4 + (eta / 0.6e1 + 0.7e1 / 0.48e2) * ci2 ^ 2 - eta / 0.96e2 - 0.1e1 / 0.96e2) * cos((-g + 2 * h + 2 * f)) - 0.89e2 / 0.542e3 * (ci2 ^ 6 - 0.117e3 / 0.356e3 * ci2 ^ 4 - 0.27e2 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((5 * g + 2 * h + 2 * f)) - 0.11e2 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.51e2 / 0.11e2) * ci2 ^ 2 - 0.15e2 / 0.44e2 * eta ^ 2 - 0.75e2 / 0.44e2) * cos((-2 * h + 3 * g + 2 * f)) - 0.5e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.4e1 / 0.5e1) * ci2 ^ 2 - 0.9e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.20e2) * cos((-2 * h + 3 * g + 4 * f)) + 0.42e2 / 0.271e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * ((eta + 0.11e2 / 0.14e2) * (eta + 0.2e1) * ci2 ^ 6 + (-0.25e2 / 0.28e2 * eta ^ 2 - 0.19e2 / 0.8e1 * eta - 0.37e2 / 0.28e2) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 + 0.61e2 / 0.168e3 * eta + 0.5e1 / 0.28e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.336e3) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - 2 * h + 4 * f)) + 0.5e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.9e1 / 0.20e2) * cos((-2 * h + 3 * g)) + 0.840e3 / 0.271e3 * (ci2 ^ 4 - 0.2e1 / 0.7e1 * ci2 ^ 2 + 0.1e1 / 0.70e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.5e1 / 0.8e1) * sin((2 * f + 3 * g)) - 0.3e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.12e2) * (eta - 0.1e1) * cos((5 * g + 2 * h + 8 * f)) + 0.27e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * Delta * sin((g - 2 * h)) + (ci2 ^ 2 + 0.3e1 / 0.4e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((-2 * h + 3 * g + 6 * f)) / 0.1626e4) * sqrt(-eta ^ 2 + 0.1e1) - 0.60e2 / 0.271e3 * (0.1e1 + eta) * (0.23e2 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 6 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 4 + (-0.3e1 / 0.46e2 * eta ^ 2 + 0.19e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * cos((5 * g + 2 * h + 5 * f)) + 0.23e2 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 4 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * (ci2 + 0.1e1) ^ 2 * cos((5 * f + 5 * g)) - 0.10e2 * ci2 ^ 2 * (0.1e1 + eta) * Delta * ((eta ^ 2 - 0.11e2 / 0.5e1) * ci2 ^ 6 + (-0.9e1 / 0.5e1 * eta ^ 2 + 0.189e3 / 0.50e2) * ci2 ^ 4 + (0.51e2 / 0.50e2 * eta ^ 2 - 0.101e3 / 0.50e2) * ci2 ^ 2 - 0.9e1 / 0.50e2 * eta ^ 2 + 0.33e2 / 0.100e3) * sin((g + 2 * h + f)) + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((3 * g + 2 * h + 7 * f)) / 0.16e2 - 0.5e1 / 0.8e1 * ((eta ^ 3 - 0.364e3 / 0.75e2 * eta ^ 2 - 0.1163e4 / 0.75e2 * eta - 0.736e3 / 0.75e2) * ci2 ^ 6 + (-0.99e2 / 0.100e3 * eta ^ 3 + 0.471e3 / 0.100e3 * eta ^ 2 + 0.57e2 / 0.4e1 * eta + 0.867e3 / 0.100e3) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.21e2 / 0.20e2 * eta ^ 2 - 0.893e3 / 0.300e3 * eta - 0.169e3 / 0.100e3) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + f)) + 0.29e2 / 0.120e3 * ((eta ^ 3 - 0.206e3 / 0.29e2 * eta ^ 2 - 0.529e3 / 0.29e2 * eta - 0.266e3 / 0.29e2) * ci2 ^ 6 + (-0.111e3 / 0.116e3 * eta ^ 3 + 0.165e3 / 0.29e2 * eta ^ 2 + 0.1719e4 / 0.116e3 * eta + 0.216e3 / 0.29e2) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.35e2 / 0.58e2 * eta ^ 2 - 0.599e3 / 0.348e3 * eta - 0.137e3 / 0.174e3) * ci2 ^ 2 - 0.3e1 / 0.232e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) + 0.4e1 * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 8 + (-0.57e2 / 0.40e2 * eta ^ 2 + 0.271e3 / 0.60e2) * ci2 ^ 6 + (0.41e2 / 0.80e2 * eta ^ 2 - 0.347e3 / 0.240e3) * ci2 ^ 4 + (-eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * ci2 ^ 2 - eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * (0.1e1 + eta) * Delta * sin((3 * g + 2 * h + 3 * f)) - 0.3e1 / 0.40e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * Delta * (eta - 0.1e1) * sin((-g + 2 * h + f)) + 0.7e1 / 0.30e2 * (ci2 ^ 2 - 0.3e1 / 0.7e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 + 0.3e1 / 0.16e2) * cos((5 * g + 2 * h + 7 * f)) + 0.29e2 / 0.10e2 * (0.1e1 + eta) * ((eta - 0.1e1) ^ 2 * ((eta - 0.1e1) * ci2 ^ 8 + (eta / 0.4e1 + 0.11e2 / 0.4e1) * ci2 ^ 6 + (-0.2e1 * eta - 0.8e1 / 0.3e1) * ci2 ^ 4 + (0.7e1 / 0.12e2 * eta + 0.7e1 / 0.12e2) * ci2 ^ 2 + eta / 0.12e2 + 0.1e1 / 0.12e2) * cos((5 * f + g)) / 0.232e3 + 0.10e2 / 0.29e2 * (ci2 ^ 8 - 0.9e1 / 0.8e1 * ci2 ^ 6 + ci2 ^ 4 / 0.10e2 + 0.7e1 / 0.60e2 * ci2 ^ 2 - 0.1e1 / 0.120e3) * (0.1e1 + eta) * Delta * (eta - 0.1e1) * sin((g + 3 * f)) + 0.70e2 / 0.29e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 4 - 0.13e2 / 0.35e2 * ci2 ^ 2 + 0.1e1 / 0.35e2) * sin((3 * g + f)) - 0.70e2 / 0.29e2 * ci2 ^ 2 * (0.1e1 + eta) * Delta * (eta - 0.1e1) * (ci2 ^ 6 - 0.519e3 / 0.280e3 * ci2 ^ 4 + 0.153e3 / 0.140e3 * ci2 ^ 2 - 0.57e2 / 0.280e3) * sin((f - g)) + ((eta ^ 3 - 0.55e2 / 0.348e3 * eta ^ 2 - 0.27e2 / 0.58e2 * eta - 0.799e3 / 0.348e3) * ci2 ^ 8 + (-0.93e2 / 0.58e2 * eta ^ 3 + 0.179e3 / 0.464e3 * eta ^ 2 + 0.207e3 / 0.232e3 * eta + 0.1459e4 / 0.464e3) * ci2 ^ 6 + (-0.823e3 / 0.696e3 + 0.541e3 / 0.696e3 * eta ^ 3 - 0.135e3 / 0.232e3 * eta - 0.161e3 / 0.696e3 * eta ^ 2) * ci2 ^ 4 + (-0.277e3 / 0.2784e4 * eta ^ 3 + 0.127e3 / 0.2784e4 + 0.197e3 / 0.2784e4 * eta ^ 2 + 0.99e2 / 0.928e3 * eta) * ci2 ^ 2 - 0.13e2 / 0.928e3 * eta ^ 2 + 0.67e2 / 0.2784e4 - 0.13e2 / 0.2784e4 * eta ^ 3 + 0.3e1 / 0.928e3 * eta) * cos((f + g)) - 0.40e2 / 0.29e2 * ((eta ^ 2 - 0.4e1) * ci2 ^ 8 + (-0.12e2 / 0.5e1 * eta ^ 2 + 0.297e3 / 0.40e2) * ci2 ^ 6 + (0.147e3 / 0.80e2 * eta ^ 2 - 0.351e3 / 0.80e2) * ci2 ^ 4 + (-0.71e2 / 0.160e3 * eta ^ 2 + 0.131e3 / 0.160e3) * ci2 ^ 2 + eta ^ 2 / 0.160e3 - 0.1e1 / 0.160e3) * Delta * sin((f + g))) + 0.6e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.9e1 / 0.10e2 * eta ^ 2 + 0.17e2 / 0.20e2) * ci2 ^ 4 + (0.7e1 / 0.40e2 * eta ^ 2 - 0.19e2 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.240e3 + 0.1e1 / 0.240e3) * sin((g - 2 * h + f)) + 0.7e1 / 0.80e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.15e2 / 0.28e2) * ci2 ^ 4 + (eta / 0.28e2 + 0.1e1 / 0.84e2) * ci2 ^ 2 + eta / 0.84e2 + 0.1e1 / 0.84e2) * cos((g - 2 * h + 5 * f)) + 0.67e2 / 0.30e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 6 - 0.297e3 / 0.1072e4 * ci2 ^ 4 - 0.75e2 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * cos((5 * g + 2 * h + 3 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.9e1 / 0.4e1 + (eta ^ 2 - 0.5e1) * ci2 ^ 2) * cos((-2 * h + 3 * g + 3 * f)) / 0.30e2 + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * sin((3 * g + 2 * h + 5 * f)) - 0.3e1 / 0.40e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * cos((2 * h + g + 5 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 3 * cos((-g - 2 * h + 3 * f)) / 0.40e2 - 0.11e2 / 0.40e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 - 0.53e2 / 0.11e2 * eta - 0.62e2 / 0.11e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta + 0.48e2 / 0.11e2) * ci2 ^ 4 + (0.3e1 / 0.44e2 * eta ^ 2 - 0.115e3 / 0.132e3 * eta - 0.61e2 / 0.66e2) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) / 0.264e3) * cos((-g + 2 * h + f)) - (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.21e2 / 0.20e2) * ci2 ^ 4 + (0.3e1 / 0.20e2 * eta + 0.11e2 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * cos((-3 * g + f)) / 0.16e2 - 0.7e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.261e3 / 0.140e3 * ci2 ^ 4 + 0.11e2 / 0.10e2 * ci2 ^ 2 - 0.57e2 / 0.280e3) * Delta * (eta - 0.1e1) * sin((-g - 2 * h + f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * (eta - 0.1e1) * sin((g + 2 * h + 3 * f)) - 0.3e1 / 0.40e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.383e3 / 0.9e1 * eta + 0.572e3 / 0.9e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.217e3 / 0.6e1 * eta - 0.623e3 / 0.12e2) * ci2 ^ 4 + (eta ^ 2 / 0.36e2 + 0.109e3 / 0.18e2 * eta + 0.283e3 / 0.36e2) * ci2 ^ 2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * (eta - 0.1e1) * cos((3 * g + 5 * f)) + 0.67e2 / 0.30e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 4 - 0.297e3 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * (eta - 0.1e1) * cos((3 * f + 5 * g)) + 0.7e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 8 - 0.419e3 / 0.280e3 * ci2 ^ 6 + 0.83e2 / 0.140e3 * ci2 ^ 4 - ci2 ^ 2 / 0.56e2 - 0.1e1 / 0.56e2) * Delta * (eta - 0.1e1) * sin((3 * g + 2 * h + f)) + 0.3e1 / 0.5e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.47e2 / 0.8e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta - 0.113e3 / 0.8e1) * ci2 ^ 6 + (-eta ^ 3 - 0.189e3 / 0.32e2 * eta ^ 2 - 0.45e2 / 0.16e2 * eta + 0.419e3 / 0.32e2) * ci2 ^ 4 + (0.5e1 / 0.16e2 * eta ^ 3 + 0.431e3 / 0.288e3 * eta ^ 2 + eta / 0.4e1 - 0.845e3 / 0.288e3) * ci2 ^ 2 - 0.13e2 / 0.576e3 * eta ^ 3 - 0.13e2 / 0.192e3 * eta ^ 2 + eta / 0.64e2 + 0.67e2 / 0.576e3) * cos((g - 2 * h + f)) - (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.673e3 / 0.60e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.911e3 / 0.60e2) * ci2 ^ 6 + (-0.17e2 / 0.20e2 * eta ^ 3 - 0.861e3 / 0.80e2 * eta ^ 2 + 0.81e2 / 0.40e2 * eta + 0.235e3 / 0.16e2) * ci2 ^ 4 + (0.17e2 / 0.120e3 * eta ^ 3 + 0.207e3 / 0.80e2 * eta ^ 2 - 0.3e1 / 0.20e2 * eta - 0.167e3 / 0.48e2) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * cos((3 * g + 3 * f)) / 0.2e1 + 0.7e1 / 0.20e2 * ci2 ^ 2 * (0.1e1 + eta) * ((eta ^ 2 + 0.122e3 / 0.21e2 * eta + 0.29e2 / 0.3e1) * ci2 ^ 6 + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.137e3 / 0.14e2 * eta - 0.109e3 / 0.7e1) * ci2 ^ 4 + (0.2e1 / 0.3e1 * eta ^ 2 + 0.38e2 / 0.7e1 * eta + 0.8e1) * ci2 ^ 2 - eta ^ 2 / 0.12e2 - 0.41e2 / 0.42e2 * eta - 0.109e3 / 0.84e2) * (eta - 0.1e1) * cos((g + 2 * h + 3 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.3e1) * ci2 ^ 6 + (-0.7e1 / 0.4e1 * eta + 0.17e2 / 0.4e1) * ci2 ^ 4 + (eta - 0.5e1 / 0.3e1) * ci2 ^ 2 - eta / 0.6e1 + 0.1e1 / 0.6e1) * cos((-g + 3 * f)) / 0.80e2 - (0.1e1 + eta) * ((eta ^ 3 + 0.223e3 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.297e3 / 0.20e2) * ci2 ^ 8 + (-0.27e2 / 0.20e2 * eta ^ 3 - 0.1307e4 / 0.80e2 * eta ^ 2 + 0.27e2 / 0.8e1 * eta + 0.1757e4 / 0.80e2) * ci2 ^ 6 + (0.17e2 / 0.40e2 * eta ^ 3 + 0.247e3 / 0.40e2 * eta ^ 2 - 0.33e2 / 0.40e2 * eta - 0.67e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * cos((3 * g + 2 * h + 3 * f)) / 0.2e1 - 0.5e1 / 0.8e1 * ((eta ^ 3 - 0.138e3 / 0.25e2 * eta ^ 2 - 0.421e3 / 0.25e2 * eta - 0.262e3 / 0.25e2) * ci2 ^ 8 + (-0.149e3 / 0.100e3 * eta ^ 3 + 0.192e3 / 0.25e2 * eta ^ 2 + 0.2309e4 / 0.100e3 * eta + 0.353e3 / 0.25e2) * ci2 ^ 6 + (0.29e2 / 0.50e2 * eta ^ 3 - 0.131e3 / 0.50e2 * eta ^ 2 - 0.1159e4 / 0.150e3 * eta - 0.229e3 / 0.50e2) * ci2 ^ 4 + (-0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + f)) - 0.19e2 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * ((eta ^ 3 + 0.413e3 / 0.57e2 * eta ^ 2 + 0.793e3 / 0.57e2 * eta + 0.473e3 / 0.57e2) * ci2 ^ 6 + (-0.69e2 / 0.38e2 * eta ^ 3 - 0.235e3 / 0.19e2 * eta ^ 2 - 0.883e3 / 0.38e2 * eta - 0.259e3 / 0.19e2) * ci2 ^ 4 + (0.58e2 / 0.57e2 * eta ^ 3 + 0.119e3 / 0.19e2 * eta ^ 2 + 0.652e3 / 0.57e2 * eta + 0.377e3 / 0.57e2) * ci2 ^ 2 - 0.13e2 / 0.76e2 * eta ^ 3 - 0.205e3 / 0.228e3 * eta ^ 2 - 0.359e3 / 0.228e3 * eta - 0.205e3 / 0.228e3) * cos((-g - 2 * h + f)) + 0.23e2 / 0.10e2 * ci2 ^ 2 * (0.1e1 + eta) * ((0.109e3 / 0.138e3 + eta ^ 3 - 0.239e3 / 0.138e3 * eta ^ 2 - 0.36e2 / 0.23e2 * eta) * ci2 ^ 6 + (-0.75e2 / 0.46e2 * eta ^ 3 + 0.257e3 / 0.92e2 * eta ^ 2 + 0.54e2 / 0.23e2 * eta - 0.119e3 / 0.92e2) * ci2 ^ 4 + (0.56e2 / 0.69e2 * eta ^ 3 - 0.55e2 / 0.46e2 * eta ^ 2 - 0.24e2 / 0.23e2 * eta + 0.19e2 / 0.46e2) * ci2 ^ 2 - 0.11e2 / 0.92e2 * eta ^ 3 + 0.59e2 / 0.552e3 * eta ^ 2 + 0.3e1 / 0.23e2 * eta + 0.5e1 / 0.184e3) * cos((g + 2 * h + f)) - (0.1e1 + eta) * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta - 0.7e1 / 0.4e1) * ci2 ^ 6 + (0.2e1 / 0.5e1 * eta + 0.8e1 / 0.15e2) * ci2 ^ 4 + (-eta / 0.60e2 - 0.1e1 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + f)) / 0.16e2 - 0.3e1 / 0.40e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.127e3 / 0.3e1 * eta + 0.190e3 / 0.3e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.689e3 / 0.12e2 * eta - 0.251e3 / 0.3e1) * ci2 ^ 6 + (0.5e1 / 0.18e2 * eta ^ 2 + 0.163e3 / 0.9e1 * eta + 0.151e3 / 0.6e1) * ci2 ^ 4 + (0.1e1 + eta) * (eta - 0.7e1) * ci2 ^ 2 / 0.72e2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * cos((3 * g + 2 * h + 5 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 2 - 0.1e1 / 0.5e1) * sin((3 * g + 5 * f)) - 0.49e2 / 0.40e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.100e3 / 0.21e2 * eta ^ 2 + 0.1241e4 / 0.147e3 * eta + 0.760e3 / 0.147e3) * ci2 ^ 8 + (-0.331e3 / 0.196e3 * eta ^ 3 - 0.416e3 / 0.49e2 * eta ^ 2 - 0.2945e4 / 0.196e3 * eta - 0.439e3 / 0.49e2) * ci2 ^ 6 + (0.253e3 / 0.294e3 * eta ^ 3 + 0.187e3 / 0.42e2 * eta ^ 2 + 0.2311e4 / 0.294e3 * eta + 0.193e3 / 0.42e2) * ci2 ^ 4 + (-0.155e3 / 0.1176e4 * eta ^ 3 - 0.115e3 / 0.168e3 * eta ^ 2 - 0.1409e4 / 0.1176e4 * eta - 0.269e3 / 0.392e3) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) ^ 2 / 0.1176e4) * cos((f - g)) + 0.71e2 / 0.120e3 * (eta - 0.1e1) * ((eta ^ 3 + 0.80e2 / 0.71e2 * eta ^ 2 + 0.121e3 / 0.71e2 * eta + 0.140e3 / 0.71e2) * ci2 ^ 8 + (-0.421e3 / 0.284e3 * eta ^ 3 - 0.206e3 / 0.71e2 * eta ^ 2 - 0.1483e4 / 0.284e3 * eta - 0.305e3 / 0.71e2) * ci2 ^ 6 + (0.89e2 / 0.142e3 * eta ^ 3 + 0.367e3 / 0.142e3 * eta ^ 2 + 0.2225e4 / 0.426e3 * eta + 0.1447e4 / 0.426e3) * ci2 ^ 4 - 0.31e2 / 0.568e3 * (0.1e1 + eta) * (eta ^ 2 + 0.334e3 / 0.31e2 * eta + 0.451e3 / 0.31e2) * ci2 ^ 2 - 0.3e1 / 0.568e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * cos((g + 3 * f)) + 0.4e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 4 + (-0.3e1 / 0.10e2 * eta ^ 2 + 0.23e2 / 0.30e2) * ci2 ^ 2 - 0.1e1 / 0.60e2 + eta ^ 2 / 0.60e2) * Delta * (ci2 ^ 2 - 0.5e1 / 0.8e1) * sin((3 * g + 3 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 + 0.3e1 / 0.8e1) * (eta - 0.1e1) * cos((-2 * h + 3 * g + 5 * f)) / 0.60e2 + (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((3 * g + 7 * f)) / 0.16e2 + 0.7e1 / 0.30e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.27e2 / 0.112e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((7 * f + 5 * g)) - 0.5e1 / 0.12e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.63e2 / 0.200e3) * cos((-2 * h + 3 * g + f)) + (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((-g + 2 * h + 3 * f)) / 0.80e2 + 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.71e2 / 0.80e2 * ci2 ^ 4 + 0.41e2 / 0.240e3 * ci2 ^ 2 - 0.1e1 / 0.240e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((g - 2 * h + 3 * f)))) / eta ^ 8 / a ^ 4 0.180e3 * ci2 / (0.1e1 + eta) ^ 2 * R__e ^ 4 * J ^ 2 * ((-0.17e2 / 0.96e2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 4 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * g + 4 * f)) + 0.17e2 / 0.240e3 * ((eta + 0.53e2 / 0.17e2) * ci2 ^ 6 + (-0.117e3 / 0.68e2 * eta - 0.333e3 / 0.68e2) * ci2 ^ 4 + (0.33e2 / 0.34e2 * eta + 0.81e2 / 0.34e2) * ci2 ^ 2 - 0.3e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((g + 2 * h + 4 * f)) + 0.31e2 / 0.480e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 6 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 4 + (-0.23e2 / 0.372e3 * eta ^ 2 + 0.35e2 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * sin((5 * g + 2 * h + 6 * f)) + 0.17e2 / 0.96e2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 6 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 4 + (-0.23e2 / 0.340e3 * eta ^ 2 + 0.99e2 / 0.340e3) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 4 * f)) - 0.3e1 / 0.2e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * Delta * cos((g + 2 * h + 2 * f)) + 0.209e3 / 0.480e3 * ((eta ^ 3 + 0.167e3 / 0.209e3 * eta ^ 2 - 0.958e3 / 0.209e3 * eta - 0.1120e4 / 0.209e3) * ci2 ^ 6 + (-0.789e3 / 0.836e3 * eta ^ 3 - 0.663e3 / 0.836e3 * eta ^ 2 + 0.309e3 / 0.76e2 * eta + 0.3885e4 / 0.836e3) * ci2 ^ 4 + (0.181e3 / 0.836e3 * eta ^ 3 + 0.179e3 / 0.836e3 * eta ^ 2 - 0.631e3 / 0.836e3 * eta - 0.697e3 / 0.836e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 + 0.3e1 / 0.11e2 * eta - 0.24e2 / 0.11e2) / 0.76e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) + 0.3e1 * (ci2 ^ 8 - 0.121e3 / 0.80e2 * ci2 ^ 6 + 0.31e2 / 0.48e2 * ci2 ^ 4 - 0.31e2 / 0.480e3 * ci2 ^ 2 - 0.1e1 / 0.480e3) * (0.1e1 + eta) ^ 2 * Delta * cos((g + 2 * f)) - (ci2 + 0.1e1 / 0.2e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 - 0.1e1 / 0.2e1) * sin((8 * f + 5 * g)) / 0.160e3 - 0.3e1 / 0.2e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.5e1) * cos((4 * f + 3 * g)) - 0.11e2 / 0.480e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.51e2 / 0.11e2) * ci2 ^ 2 - 0.15e2 / 0.44e2 * eta ^ 2 - 0.75e2 / 0.44e2) * sin((-2 * h + 3 * g + 2 * f)) - ((eta ^ 2 + 0.4e1 / 0.5e1) * ci2 ^ 2 - 0.9e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.20e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-2 * h + 3 * g + 4 * f)) / 0.96e2 + 0.89e2 / 0.480e3 * (ci2 ^ 6 - 0.117e3 / 0.356e3 * ci2 ^ 4 - 0.27e2 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 2 * f)) + ((eta + 0.3e1 / 0.4e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.9e1 / 0.16e2) * ci2 ^ 4 + (eta / 0.6e1 + 0.7e1 / 0.48e2) * ci2 ^ 2 - eta / 0.96e2 - 0.1e1 / 0.96e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + 2 * h + 2 * f)) / 0.20e2 - (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * Delta * cos((g + 2 * h)) - 0.361e3 / 0.480e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 + 0.788e3 / 0.361e3 * eta + 0.445e3 / 0.361e3) * ci2 ^ 6 + (-0.1437e4 / 0.1444e4 * eta ^ 2 - 0.768e3 / 0.361e3 * eta - 0.1689e4 / 0.1444e4) * ci2 ^ 4 + (0.373e3 / 0.1444e4 * eta ^ 2 + 0.195e3 / 0.361e3 * eta + 0.413e3 / 0.1444e4) * ci2 ^ 2 - 0.73e2 / 0.4332e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * sin((3 * g)) + 0.167e3 / 0.1440e4 * (0.1e1 + eta) ^ 2 * ((eta + 0.365e3 / 0.167e3) * ci2 ^ 6 + (-0.579e3 / 0.668e3 * eta - 0.1173e4 / 0.668e3) * ci2 ^ 4 + (0.95e2 / 0.668e3 * eta + 0.161e3 / 0.668e3) * ci2 ^ 2 - eta / 0.668e3 - 0.1e1 / 0.668e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 6 * f)) - 0.3e1 / 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.7e1 / 0.8e1 * ci2 ^ 4 + ci2 ^ 2 / 0.6e1 - 0.1e1 / 0.240e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((g - 2 * h + 2 * f)) - 0.89e2 / 0.480e3 * (ci2 ^ 4 - 0.117e3 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((2 * f + 5 * g)) + 0.7e1 / 0.40e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.11e2 / 0.14e2) * (eta + 0.2e1) * ci2 ^ 6 + (-0.25e2 / 0.28e2 * eta ^ 2 - 0.19e2 / 0.8e1 * eta - 0.37e2 / 0.28e2) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 + 0.61e2 / 0.168e3 * eta + 0.5e1 / 0.28e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.336e3) * (eta - 0.1e1) * sin((g - 2 * h + 4 * f)) + ((0.37e2 / 0.16e2 * eta ^ 4 + 0.447e3 / 0.80e2 * eta ^ 3 + (-0.5e1 / 0.2e1 * Delta ^ 2 - 0.511e3 / 0.720e3) * eta ^ 2 + (-0.5e1 * Delta ^ 2 - 0.6701e4 / 0.720e3) * eta - 0.244e3 / 0.45e2 - 0.5e1 / 0.2e1 * Delta ^ 2) * ci2 ^ 8 + (-0.3691e4 / 0.960e3 * eta ^ 4 - 0.8681e4 / 0.960e3 * eta ^ 3 + (0.9e1 / 0.2e1 * Delta ^ 2 + 0.11e2 / 0.8e1) * eta ^ 2 + (0.9e1 * Delta ^ 2 + 0.2893e4 / 0.192e3) * eta + 0.8299e4 / 0.960e3 + 0.9e1 / 0.2e1 * Delta ^ 2) * ci2 ^ 6 + (0.113e3 / 0.60e2 * eta ^ 4 + 0.137e3 / 0.32e2 * eta ^ 3 + (-0.51e2 / 0.20e2 * Delta ^ 2 - 0.119e3 / 0.160e3) * eta ^ 2 + (-0.1129e4 / 0.160e3 - 0.51e2 / 0.10e2 * Delta ^ 2) * eta - 0.637e3 / 0.160e3 - 0.51e2 / 0.20e2 * Delta ^ 2) * ci2 ^ 4 + (-0.287e3 / 0.1152e4 * eta ^ 4 - 0.3149e4 / 0.5760e4 * eta ^ 3 + (0.9e1 / 0.20e2 * Delta ^ 2 + 0.443e3 / 0.5760e4) * eta ^ 2 + (0.319e3 / 0.384e3 + 0.9e1 / 0.10e2 * Delta ^ 2) * eta + 0.223e3 / 0.480e3 + 0.9e1 / 0.20e2 * Delta ^ 2) * ci2 ^ 2 - 0.3e1 / 0.640e3 * (0.1e1 + eta) ^ 2 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1)) * sin(g) + 0.7e1 / 0.80e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.15e2 / 0.7e1 * eta + 0.2e1 / 0.7e1) * ci2 ^ 8 + (-0.81e2 / 0.28e2 * eta ^ 2 - 0.167e3 / 0.28e2 * eta - 0.25e2 / 0.14e2) * ci2 ^ 6 + (0.52e2 / 0.21e2 * eta ^ 2 + 0.5e1 * eta + 0.41e2 / 0.21e2) * ci2 ^ 4 + (-0.107e3 / 0.168e3 * eta ^ 2 - 0.107e3 / 0.84e2 * eta - 0.95e2 / 0.168e3) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.168e3) * sin((-g + 2 * f)) - 0.7e1 / 0.60e2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((eta + 0.61e2 / 0.28e2) * ci2 ^ 8 + (-0.19e2 / 0.14e2 * eta - 0.317e3 / 0.112e3) * ci2 ^ 6 + (0.3e1 / 0.7e1 * eta + 0.23e2 / 0.28e2) * ci2 ^ 4 + (-eta / 0.672e3 - 0.1e1 / 0.672e3) * ci2 ^ 2 - eta / 0.672e3 - 0.1e1 / 0.672e3) * sin((3 * g + 2 * h + 6 * f)) + 0.67e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * ((eta ^ 3 - 0.41e2 / 0.67e2 * eta ^ 2 - 0.409e3 / 0.67e2 * eta - 0.409e3 / 0.67e2) * ci2 ^ 6 + (-0.537e3 / 0.268e3 * eta ^ 3 + 0.111e3 / 0.268e3 * eta ^ 2 + 0.2769e4 / 0.268e3 * eta + 0.2769e4 / 0.268e3) * ci2 ^ 4 + (0.90e2 / 0.67e2 * eta ^ 3 + 0.18e2 / 0.67e2 * eta ^ 2 - 0.385e3 / 0.67e2 * eta - 0.385e3 / 0.67e2) * ci2 ^ 2 - 0.39e2 / 0.134e3 * eta ^ 3 - 0.21e2 / 0.134e3 * eta ^ 2 + 0.139e3 / 0.134e3 * eta + 0.139e3 / 0.134e3) * sin((g + 2 * h + 2 * f)) - 0.59e2 / 0.240e3 * ((eta ^ 2 + 0.187e3 / 0.59e2 * eta + 0.119e3 / 0.59e2) * ci2 ^ 8 + (-0.351e3 / 0.236e3 * eta ^ 2 - 0.1083e4 / 0.236e3 * eta - 0.687e3 / 0.236e3) * ci2 ^ 6 + (0.36e2 / 0.59e2 * eta ^ 2 + 0.211e3 / 0.118e3 * eta + 0.133e3 / 0.118e3) * ci2 ^ 4 - 0.25e2 / 0.472e3 * (eta + 0.46e2 / 0.25e2) * (0.1e1 + eta) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.472e3) * (0.1e1 + eta) * (eta - 0.1e1) * sin((g + 4 * f)) + 0.7e1 / 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 8 - 0.79e2 / 0.56e2 * ci2 ^ 6 + 0.139e3 / 0.280e3 * ci2 ^ 4 - ci2 ^ 2 / 0.112e3 - 0.1e1 / 0.112e3) * Delta * cos((3 * g + 2 * h + 2 * f)) + 0.89e2 / 0.120e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.389e3 / 0.178e3 * eta + 0.110e3 / 0.89e2) * ci2 ^ 8 + (-0.535e3 / 0.356e3 * eta ^ 2 - 0.2305e4 / 0.712e3 * eta - 0.160e3 / 0.89e2) * ci2 ^ 6 + (0.213e3 / 0.356e3 * eta ^ 2 + 0.451e3 / 0.356e3 * eta + 0.61e2 / 0.89e2) * ci2 ^ 4 - 0.73e2 / 0.4272e4 * (eta + 0.82e2 / 0.73e2) * (0.1e1 + eta) * ci2 ^ 2 - 0.73e2 / 0.4272e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * (eta - 0.1e1) * sin((3 * g + 2 * h)) - 0.413e3 / 0.240e3 * ci2 ^ 2 * ((eta ^ 4 + 0.970e3 / 0.413e3 * eta ^ 3 + (-0.600e3 / 0.413e3 * Delta ^ 2 - 0.121e3 / 0.1239e4) * eta ^ 2 + (-0.1200e4 / 0.413e3 * Delta ^ 2 - 0.4304e4 / 0.1239e4) * eta - 0.2584e4 / 0.1239e4 - 0.600e3 / 0.413e3 * Delta ^ 2) * ci2 ^ 6 + (-0.2861e4 / 0.1652e4 * eta ^ 4 - 0.3293e4 / 0.826e3 * eta ^ 3 + (0.1080e4 / 0.413e3 * Delta ^ 2 + 0.136e3 / 0.413e3) * eta ^ 2 + (0.4989e4 / 0.826e3 + 0.2160e4 / 0.413e3 * Delta ^ 2) * eta + 0.5853e4 / 0.1652e4 + 0.1080e4 / 0.413e3 * Delta ^ 2) * ci2 ^ 4 + (0.751e3 / 0.826e3 * eta ^ 4 + 0.121e3 / 0.59e2 * eta ^ 3 + (-0.612e3 / 0.413e3 * Delta ^ 2 - 0.284e3 / 0.1239e4) * eta ^ 2 + (-0.3877e4 / 0.1239e4 - 0.1224e4 / 0.413e3 * Delta ^ 2) * eta - 0.612e3 / 0.413e3 * Delta ^ 2 - 0.4453e4 / 0.2478e4) * ci2 ^ 2 - 0.176e3 / 0.1239e4 * eta ^ 4 - 0.388e3 / 0.1239e4 * eta ^ 3 + (0.95e2 / 0.2478e4 + 0.108e3 / 0.413e3 * Delta ^ 2) * eta ^ 2 + (0.216e3 / 0.413e3 * Delta ^ 2 + 0.193e3 / 0.413e3) * eta + 0.108e3 / 0.413e3 * Delta ^ 2 + 0.31e2 / 0.118e3) * sin((g + 2 * h)) - 0.17e2 / 0.40e2 * (0.1e1 + eta) * ((eta ^ 3 + 0.27e2 / 0.34e2 * eta ^ 2 - 0.481e3 / 0.102e3 * eta - 0.281e3 / 0.51e2) * ci2 ^ 8 + (-0.99e2 / 0.68e2 * eta ^ 3 - 0.163e3 / 0.136e3 * eta ^ 2 + 0.2663e4 / 0.408e3 * eta + 0.767e3 / 0.102e3) * ci2 ^ 6 + (0.37e2 / 0.68e2 * eta ^ 3 + 0.25e2 / 0.51e2 * eta ^ 2 - 0.147e3 / 0.68e2 * eta - 0.83e2 / 0.34e2) * ci2 ^ 4 + (-0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * ci2 ^ 2 - 0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * sin((3 * g + 2 * h + 4 * f)) - 0.139e3 / 0.240e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.70e2 / 0.139e3 * eta ^ 2 - 0.409e3 / 0.139e3 * eta - 0.328e3 / 0.139e3) * ci2 ^ 8 + (-0.945e3 / 0.556e3 * eta ^ 3 - 0.132e3 / 0.139e3 * eta ^ 2 + 0.2655e4 / 0.556e3 * eta + 0.1125e4 / 0.278e3) * ci2 ^ 6 + (0.124e3 / 0.139e3 * eta ^ 3 + 0.75e2 / 0.139e3 * eta ^ 2 - 0.350e3 / 0.139e3 * eta - 0.323e3 / 0.139e3) * ci2 ^ 4 + (-0.157e3 / 0.1112e4 * eta ^ 3 - 0.89e2 / 0.1112e4 * eta ^ 2 + 0.535e3 / 0.1112e4 * eta + 0.535e3 / 0.1112e4) * ci2 ^ 2 - eta ^ 3 / 0.1112e4 - 0.5e1 / 0.1112e4 * eta ^ 2 - 0.21e2 / 0.1112e4 * eta - 0.21e2 / 0.1112e4) * sin((g + 2 * f)) - ((eta ^ 3 + 0.3e1 / 0.40e2 * eta ^ 2 - 0.7e1 / 0.6e1 * eta + 0.67e2 / 0.120e3) * ci2 ^ 8 + (-0.61e2 / 0.40e2 * eta ^ 3 - 0.47e2 / 0.160e3 * eta ^ 2 + 0.473e3 / 0.240e3 * eta - 0.89e2 / 0.480e3) * ci2 ^ 6 + (0.5e1 / 0.8e1 * eta ^ 3 + eta ^ 2 / 0.4e1 - 0.37e2 / 0.40e2 * eta - 0.7e1 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * ci2 ^ 2 - 0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * (0.1e1 + eta) * sin((3 * g + 2 * h + 2 * f)) / 0.2e1 + 0.3e1 / 0.2e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * Delta * cos((3 * g + 2 * h + 4 * f)) + cos(g) * ci2 ^ 2 * (0.1e1 + eta) * Delta * ((eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * ci2 ^ 6 + (-0.33e2 / 0.20e2 * eta ^ 2 - 0.321e3 / 0.80e2 * eta - 0.321e3 / 0.80e2) * ci2 ^ 4 + (0.5e1 / 0.6e1 * eta ^ 2 + 0.241e3 / 0.120e3 * eta + 0.241e3 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.8e1 - 0.5e1 / 0.16e2 * eta - 0.5e1 / 0.16e2) - 0.71e2 / 0.120e3 * ((eta ^ 3 + 0.229e3 / 0.142e3 * eta ^ 2 - 0.359e3 / 0.142e3 * eta - 0.220e3 / 0.71e2) * ci2 ^ 6 + (-0.273e3 / 0.284e3 * eta ^ 3 - 0.807e3 / 0.568e3 * eta ^ 2 + 0.1323e4 / 0.568e3 * eta + 0.783e3 / 0.284e3) * ci2 ^ 4 + (0.31e2 / 0.142e3 * eta ^ 3 + 0.147e3 / 0.568e3 * eta ^ 2 - 0.931e3 / 0.1704e4 * eta - 0.7e1 / 0.12e2) * ci2 ^ 2 - 0.9e1 / 0.1136e4 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h)) - 0.31e2 / 0.480e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 4 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((6 * f + 5 * g)) - 0.11e2 / 0.80e2 * ci2 ^ 2 * ((eta ^ 2 + 0.2e1 * eta + 0.5e1 / 0.11e2) * ci2 ^ 6 + (-0.101e3 / 0.44e2 * eta ^ 2 - 0.101e3 / 0.22e2 * eta - 0.65e2 / 0.44e2) * ci2 ^ 4 + (0.19e2 / 0.11e2 * eta ^ 2 + 0.38e2 / 0.11e2 * eta + 0.15e2 / 0.11e2) * ci2 ^ 2 - 0.9e1 / 0.22e2 * eta ^ 2 - 0.9e1 / 0.11e2 * eta - 0.4e1 / 0.11e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-g - 2 * h + 2 * f)) + 0.3e1 / 0.10e2 * ((eta ^ 3 + 0.37e2 / 0.24e2 * eta ^ 2 + 0.9e1 / 0.8e1) * ci2 ^ 6 + (-0.11e2 / 0.12e2 * eta ^ 3 - 0.139e3 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.48e2 * eta - 0.119e3 / 0.96e2) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 + 0.89e2 / 0.288e3 * eta ^ 2 + 0.17e2 / 0.48e2 * eta + 0.43e2 / 0.96e2) * ci2 ^ 2 - eta ^ 3 / 0.576e3 - 0.5e1 / 0.576e3 * eta ^ 2 - 0.7e1 / 0.192e3 * eta - 0.7e1 / 0.192e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 2 * f)) + 0.251e3 / 0.480e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.29e2 / 0.251e3 * eta ^ 2 - 0.229e3 / 0.251e3 * eta + 0.185e3 / 0.251e3) * ci2 ^ 6 + (-0.999e3 / 0.1004e4 * eta ^ 3 - 0.261e3 / 0.1004e4 * eta ^ 2 + 0.1257e4 / 0.1004e4 * eta + 0.15e2 / 0.1004e4) * ci2 ^ 4 + (0.267e3 / 0.1004e4 * eta ^ 3 + 0.153e3 / 0.1004e4 * eta ^ 2 - 0.469e3 / 0.1004e4 * eta - 0.331e3 / 0.1004e4) * ci2 ^ 2 - 0.21e2 / 0.1004e4 * eta ^ 3 - 0.17e2 / 0.1004e4 * eta ^ 2 + 0.51e2 / 0.1004e4 * eta + 0.51e2 / 0.1004e4) * sin((2 * f + 3 * g)) - 0.9e1 / 0.80e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((g - 2 * h)) + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 2 + 0.3e1 / 0.4e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-2 * h + 3 * g + 6 * f)) / 0.1440e4 - 0.7e1 / 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.2e1 / 0.7e1 * ci2 ^ 2 + 0.1e1 / 0.70e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * Delta * cos((2 * f + 3 * g)) + (ci2 ^ 2 - 0.9e1 / 0.20e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-2 * h + 3 * g)) / 0.96e2 + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.12e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 8 * f)) / 0.160e3) * sqrt(-eta ^ 2 + 0.1e1) - 0.3e1 / 0.160e3 * (0.29e2 / 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.206e3 / 0.29e2 * eta ^ 2 - 0.529e3 / 0.29e2 * eta - 0.266e3 / 0.29e2) * ci2 ^ 6 + (-0.111e3 / 0.116e3 * eta ^ 3 + 0.165e3 / 0.29e2 * eta ^ 2 + 0.1719e4 / 0.116e3 * eta + 0.216e3 / 0.29e2) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.35e2 / 0.58e2 * eta ^ 2 - 0.599e3 / 0.348e3 * eta - 0.137e3 / 0.174e3) * ci2 ^ 2 - 0.3e1 / 0.232e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * (eta - 0.1e1) * sin((g - 2 * h + 3 * f)) + 0.280e3 / 0.3e1 * (ci2 ^ 8 - 0.419e3 / 0.280e3 * ci2 ^ 6 + 0.83e2 / 0.140e3 * ci2 ^ 4 - ci2 ^ 2 / 0.56e2 - 0.1e1 / 0.56e2) * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + f)) - 0.5e1 / 0.6e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * sin((3 * g + 2 * h + 7 * f)) - 0.14e2 / 0.3e1 * ((eta ^ 2 + 0.122e3 / 0.21e2 * eta + 0.29e2 / 0.3e1) * ci2 ^ 6 + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.137e3 / 0.14e2 * eta - 0.109e3 / 0.7e1) * ci2 ^ 4 + (0.2e1 / 0.3e1 * eta ^ 2 + 0.38e2 / 0.7e1 * eta + 0.8e1) * ci2 ^ 2 - eta ^ 2 / 0.12e2 - 0.41e2 / 0.42e2 * eta - 0.109e3 / 0.84e2) * ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) * sin((g + 2 * h + 3 * f)) - 0.400e3 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) * Delta * ((eta ^ 2 - 0.11e2 / 0.5e1) * ci2 ^ 6 + (-0.9e1 / 0.5e1 * eta ^ 2 + 0.189e3 / 0.50e2) * ci2 ^ 4 + (0.51e2 / 0.50e2 * eta ^ 2 - 0.101e3 / 0.50e2) * ci2 ^ 2 - 0.9e1 / 0.50e2 * eta ^ 2 + 0.33e2 / 0.100e3) * cos((g + 2 * h + f)) + ci2 ^ 2 * (0.1e1 + eta) * ((eta - 0.1e1 / 0.3e1) * ci2 ^ 6 + (-0.17e2 / 0.12e2 * eta + 0.7e1 / 0.12e2) * ci2 ^ 4 + (0.5e1 / 0.9e1 * eta - 0.1e1 / 0.3e1) * ci2 ^ 2 - eta / 0.18e2 + 0.1e1 / 0.18e2) * (eta - 0.1e1) ^ 2 * sin((-g + 3 * f)) / 0.2e1 - 0.184e3 / 0.9e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 6 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 4 + (-0.3e1 / 0.46e2 * eta ^ 2 + 0.19e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * sin((5 * g + 2 * h + 5 * f)) - 0.20e2 / 0.3e1 * (0.1e1 + eta) * ((eta ^ 3 + 0.133e3 / 0.12e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.871e3 / 0.60e2) * ci2 ^ 6 + (-0.17e2 / 0.20e2 * eta ^ 3 - 0.861e3 / 0.80e2 * eta ^ 2 + 0.81e2 / 0.40e2 * eta + 0.1151e4 / 0.80e2) * ci2 ^ 4 + (0.17e2 / 0.120e3 * eta ^ 3 + 0.207e3 / 0.80e2 * eta ^ 2 - 0.3e1 / 0.20e2 * eta - 0.859e3 / 0.240e3) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 3 * f)) + 0.8e1 * ((eta ^ 3 + 0.47e2 / 0.8e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta - 0.113e3 / 0.8e1) * ci2 ^ 6 + (-eta ^ 3 - 0.189e3 / 0.32e2 * eta ^ 2 - 0.45e2 / 0.16e2 * eta + 0.419e3 / 0.32e2) * ci2 ^ 4 + (0.5e1 / 0.16e2 * eta ^ 3 + 0.431e3 / 0.288e3 * eta ^ 2 + eta / 0.4e1 - 0.845e3 / 0.288e3) * ci2 ^ 2 - 0.13e2 / 0.576e3 * eta ^ 3 - 0.13e2 / 0.192e3 * eta ^ 2 + eta / 0.64e2 + 0.67e2 / 0.576e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + f)) + 0.184e3 / 0.9e1 * (0.1e1 + eta) * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 4 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * f + 5 * g)) - 0.25e2 / 0.3e1 * ((eta ^ 3 - 0.464e3 / 0.75e2 * eta ^ 2 - 0.1363e4 / 0.75e2 * eta - 0.836e3 / 0.75e2) * ci2 ^ 6 + (-0.99e2 / 0.100e3 * eta ^ 3 + 0.513e3 / 0.100e3 * eta ^ 2 + 0.1509e4 / 0.100e3 * eta + 0.909e3 / 0.100e3) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.91e2 / 0.100e3 * eta ^ 2 - 0.809e3 / 0.300e3 * eta - 0.31e2 / 0.20e2) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + f)) + 0.7e1 / 0.6e1 * (0.1e1 + eta) * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.15e2 / 0.28e2) * ci2 ^ 4 + (eta / 0.28e2 + 0.1e1 / 0.84e2) * ci2 ^ 2 + eta / 0.84e2 + 0.1e1 / 0.84e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - 2 * h + 5 * f)) - (0.1e1 + eta) * ((eta ^ 2 + 0.379e3 / 0.9e1 * eta + 0.568e3 / 0.9e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.109e3 / 0.3e1 * eta - 0.625e3 / 0.12e2) * ci2 ^ 4 + (eta ^ 2 / 0.36e2 + 0.6e1 * eta + 0.281e3 / 0.36e2) * ci2 ^ 2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 5 * f)) + 0.268e3 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 4 - 0.297e3 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * (eta - 0.1e1) * sin((3 * f + 5 * g)) - 0.80e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.9e1 / 0.10e2 * eta ^ 2 + 0.17e2 / 0.20e2) * ci2 ^ 4 + (0.7e1 / 0.40e2 * eta ^ 2 - 0.19e2 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.240e3 + 0.1e1 / 0.240e3) * Delta * cos((g - 2 * h + f)) - 0.4e1 / 0.9e1 * (0.9e1 / 0.4e1 + (eta ^ 2 - 0.5e1) * ci2 ^ 2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-2 * h + 3 * g + 3 * f)) + 0.40e2 / 0.3e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + 5 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((-g - 2 * h + 3 * f)) / 0.3e1 - 0.5e1 / 0.6e1 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta - 0.7e1 / 0.4e1) * ci2 ^ 6 + (0.2e1 / 0.5e1 * eta + 0.8e1 / 0.15e2) * ci2 ^ 4 + (-eta / 0.60e2 - 0.1e1 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * sin((-3 * g - 2 * h + f)) - 0.13e2 / 0.6e1 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta + 0.11e2 / 0.13e2) * ci2 ^ 8 + (-0.71e2 / 0.52e2 * eta - 0.61e2 / 0.52e2) * ci2 ^ 6 + (0.6e1 / 0.13e2 * eta + 0.16e2 / 0.39e2) * ci2 ^ 4 + (-0.5e1 / 0.156e3 * eta - 0.5e1 / 0.156e3) * ci2 ^ 2 + eta / 0.156e3 + 0.1e1 / 0.156e3) * sin((5 * f + g)) + 0.160e3 / 0.3e1 * (0.1e1 + eta) * Delta * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 8 + (-0.57e2 / 0.40e2 * eta ^ 2 + 0.271e3 / 0.60e2) * ci2 ^ 6 + (0.41e2 / 0.80e2 * eta ^ 2 - 0.347e3 / 0.240e3) * ci2 ^ 4 + (-eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * ci2 ^ 2 - eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * cos((3 * g + 2 * h + 3 * f)) + ((eta ^ 2 + 0.127e3 / 0.3e1 * eta + 0.190e3 / 0.3e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.689e3 / 0.12e2 * eta - 0.251e3 / 0.3e1) * ci2 ^ 6 + (0.5e1 / 0.18e2 * eta ^ 2 + 0.163e3 / 0.9e1 * eta + 0.151e3 / 0.6e1) * ci2 ^ 4 + (0.1e1 + eta) * (eta - 0.7e1) * ci2 ^ 2 / 0.72e2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + 2 * h + 5 * f)) - 0.92e2 / 0.3e1 * ci2 ^ 2 * ((0.109e3 / 0.138e3 + eta ^ 3 - 0.239e3 / 0.138e3 * eta ^ 2 - 0.36e2 / 0.23e2 * eta) * ci2 ^ 6 + (-0.75e2 / 0.46e2 * eta ^ 3 + 0.257e3 / 0.92e2 * eta ^ 2 + 0.54e2 / 0.23e2 * eta - 0.119e3 / 0.92e2) * ci2 ^ 4 + (0.56e2 / 0.69e2 * eta ^ 3 - 0.55e2 / 0.46e2 * eta ^ 2 - 0.24e2 / 0.23e2 * eta + 0.19e2 / 0.46e2) * ci2 ^ 2 - 0.11e2 / 0.92e2 * eta ^ 3 + 0.59e2 / 0.552e3 * eta ^ 2 + 0.3e1 / 0.23e2 * eta + 0.5e1 / 0.184e3) * (0.1e1 + eta) * sin((g + 2 * h + f)) - 0.38e2 / 0.3e1 * ci2 ^ 2 * (eta - 0.1e1) * ((eta ^ 3 + 0.413e3 / 0.57e2 * eta ^ 2 + 0.793e3 / 0.57e2 * eta + 0.473e3 / 0.57e2) * ci2 ^ 6 + (-0.69e2 / 0.38e2 * eta ^ 3 - 0.235e3 / 0.19e2 * eta ^ 2 - 0.883e3 / 0.38e2 * eta - 0.259e3 / 0.19e2) * ci2 ^ 4 + (0.58e2 / 0.57e2 * eta ^ 3 + 0.119e3 / 0.19e2 * eta ^ 2 + 0.652e3 / 0.57e2 * eta + 0.377e3 / 0.57e2) * ci2 ^ 2 - 0.13e2 / 0.76e2 * eta ^ 3 - 0.205e3 / 0.228e3 * eta ^ 2 - 0.359e3 / 0.228e3 * eta - 0.205e3 / 0.228e3) * sin((-g - 2 * h + f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-g + 2 * h + f)) - 0.28e2 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.3e1 / 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 + 0.3e1 / 0.16e2) * sin((5 * g + 2 * h + 7 * f)) - 0.280e3 / 0.3e1 * (0.1e1 + eta) * (-0.3e1 / 0.7e1 * (0.1e1 + eta) * (ci2 ^ 8 - 0.59e2 / 0.40e2 * ci2 ^ 6 + 0.53e2 / 0.90e2 * ci2 ^ 4 - 0.2e1 / 0.45e2 * ci2 ^ 2 - 0.1e1 / 0.360e3) * Delta * (eta - 0.1e1) * cos((g + 3 * f)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 4 - 0.13e2 / 0.35e2 * ci2 ^ 2 + 0.1e1 / 0.35e2) * Delta * (eta - 0.1e1) * cos((3 * g + f)) + (ci2 ^ 6 - 0.15e2 / 0.8e1 * ci2 ^ 4 + 0.31e2 / 0.28e2 * ci2 ^ 2 - 0.57e2 / 0.280e3) * ci2 ^ 2 * (0.1e1 + eta) * Delta * (eta - 0.1e1) * cos((f - g)) + ((-0.17e2 / 0.70e2 * eta ^ 3 + 0.901e3 / 0.840e3 * eta ^ 2 + 0.117e3 / 0.140e3 * eta - 0.247e3 / 0.168e3) * ci2 ^ 8 + (0.57e2 / 0.140e3 * eta ^ 3 - 0.1877e4 / 0.1120e4 * eta ^ 2 - 0.657e3 / 0.560e3 * eta + 0.2411e4 / 0.1120e4) * ci2 ^ 6 + (-0.71e2 / 0.336e3 * eta ^ 3 + 0.1159e4 / 0.1680e4 * eta ^ 2 + 0.249e3 / 0.560e3 * eta - 0.1279e4 / 0.1680e4) * ci2 ^ 4 + (0.251e3 / 0.6720e4 * eta ^ 3 - 0.55e2 / 0.1344e4 * eta ^ 2 - 0.93e2 / 0.2240e4 * eta + 0.1e1 / 0.960e3) * ci2 ^ 2 + 0.67e2 / 0.6720e4 - 0.13e2 / 0.2240e4 * eta ^ 2 - 0.13e2 / 0.6720e4 * eta ^ 3 + 0.3e1 / 0.2240e4 * eta) * sin((f + g)) - 0.16e2 / 0.7e1 * ((eta ^ 2 - 0.7e1 / 0.4e1) * ci2 ^ 8 + (-0.33e2 / 0.20e2 * eta ^ 2 + 0.459e3 / 0.160e3) * ci2 ^ 6 + (0.261e3 / 0.320e3 * eta ^ 2 - 0.457e3 / 0.320e3) * ci2 ^ 4 + (-0.73e2 / 0.640e3 * eta ^ 2 + 0.133e3 / 0.640e3) * ci2 ^ 2 - eta ^ 2 / 0.640e3 + 0.1e1 / 0.640e3) * Delta * cos((f + g))) + 0.20e2 / 0.3e1 * ((eta ^ 3 + 0.223e3 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.297e3 / 0.20e2) * ci2 ^ 8 + (-0.27e2 / 0.20e2 * eta ^ 3 - 0.1307e4 / 0.80e2 * eta ^ 2 + 0.27e2 / 0.8e1 * eta + 0.1757e4 / 0.80e2) * ci2 ^ 6 + (0.17e2 / 0.40e2 * eta ^ 3 + 0.247e3 / 0.40e2 * eta ^ 2 - 0.33e2 / 0.40e2 * eta - 0.67e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * (0.1e1 + eta) * sin((3 * g + 2 * h + 3 * f)) + 0.25e2 / 0.3e1 * ((eta ^ 3 - 0.138e3 / 0.25e2 * eta ^ 2 - 0.421e3 / 0.25e2 * eta - 0.262e3 / 0.25e2) * ci2 ^ 8 + (-0.149e3 / 0.100e3 * eta ^ 3 + 0.192e3 / 0.25e2 * eta ^ 2 + 0.2309e4 / 0.100e3 * eta + 0.353e3 / 0.25e2) * ci2 ^ 6 + (0.29e2 / 0.50e2 * eta ^ 3 - 0.131e3 / 0.50e2 * eta ^ 2 - 0.1159e4 / 0.150e3 * eta - 0.229e3 / 0.50e2) * ci2 ^ 4 + (-0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (eta - 0.1e1) * sin((3 * g + 2 * h + f)) - 0.40e2 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.5e1) * cos((3 * g + 5 * f)) - 0.160e3 / 0.3e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 4 + (-0.3e1 / 0.10e2 * eta ^ 2 + 0.23e2 / 0.30e2) * ci2 ^ 2 - 0.1e1 / 0.60e2 + eta ^ 2 / 0.60e2) * Delta * cos((3 * g + 3 * f)) - 0.2e1 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 + 0.3e1 / 0.8e1) * sin((-2 * h + 3 * g + 5 * f)) - 0.80e2 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.71e2 / 0.80e2 * ci2 ^ 4 + 0.41e2 / 0.240e3 * ci2 ^ 2 - 0.1e1 / 0.240e3) * Delta * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) + 0.28e2 / 0.9e1 * (ci2 ^ 2 - 0.27e2 / 0.112e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((7 * f + 5 * g)) - 0.50e2 / 0.9e1 * (ci2 ^ 2 - 0.63e2 / 0.200e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-2 * h + 3 * g + f)) - (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-g + 2 * h + 3 * f)) / 0.6e1 + 0.5e1 / 0.6e1 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((3 * g + 7 * f)) + 0.11e2 / 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 - 0.53e2 / 0.11e2 * eta - 0.62e2 / 0.11e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta + 0.48e2 / 0.11e2) * ci2 ^ 4 + (0.3e1 / 0.44e2 * eta ^ 2 - 0.115e3 / 0.132e3 * eta - 0.61e2 / 0.66e2) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) / 0.264e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + 2 * h + f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((2 * h + g + 5 * f)) + 0.5e1 / 0.6e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.21e2 / 0.20e2) * ci2 ^ 4 + (0.3e1 / 0.20e2 * eta + 0.11e2 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * sin((-3 * g + f)) - 0.268e3 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.297e3 / 0.1072e4 * ci2 ^ 4 - 0.75e2 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * (eta - 0.1e1) * sin((5 * g + 2 * h + 3 * f)) + 0.280e3 / 0.3e1 * ci2 ^ 2 * (ci2 ^ 6 - 0.261e3 / 0.140e3 * ci2 ^ 4 + 0.11e2 / 0.10e2 * ci2 ^ 2 - 0.57e2 / 0.280e3) * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * cos((-g - 2 * h + f)) - 0.40e2 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * Delta * (eta - 0.1e1) * cos((g + 2 * h + 3 * f)) + 0.13e2 / 0.9e1 * (eta - 0.1e1) * ((eta ^ 3 + 0.492e3 / 0.13e2 * eta ^ 2 + 0.1179e4 / 0.13e2 * eta + 0.672e3 / 0.13e2) * ci2 ^ 8 + (-0.83e2 / 0.52e2 * eta ^ 3 - 0.742e3 / 0.13e2 * eta ^ 2 - 0.7037e4 / 0.52e2 * eta - 0.1003e4 / 0.13e2) * ci2 ^ 6 + (0.23e2 / 0.26e2 * eta ^ 3 + 0.657e3 / 0.26e2 * eta ^ 2 + 0.4543e4 / 0.78e2 * eta + 0.2585e4 / 0.78e2) * ci2 ^ 4 - 0.25e2 / 0.104e3 * (0.1e1 + eta) * (eta ^ 2 + 0.322e3 / 0.25e2 * eta + 0.421e3 / 0.25e2) * ci2 ^ 2 + 0.3e1 / 0.104e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * sin((g + 3 * f)) + 0.9e1 * ((eta ^ 3 + 0.952e3 / 0.81e2 * eta ^ 2 + 0.1931e4 / 0.81e2 * eta + 0.1132e4 / 0.81e2) * ci2 ^ 8 + (-0.221e3 / 0.108e3 * eta ^ 3 - 0.524e3 / 0.27e2 * eta ^ 2 - 0.1373e4 / 0.36e2 * eta - 0.199e3 / 0.9e1) * ci2 ^ 6 + (0.211e3 / 0.162e3 * eta ^ 3 + 0.1547e4 / 0.162e3 * eta ^ 2 + 0.2905e4 / 0.162e3 * eta + 0.185e3 / 0.18e2) * ci2 ^ 4 + (-0.157e3 / 0.648e3 * eta ^ 3 - 0.835e3 / 0.648e3 * eta ^ 2 - 0.1463e4 / 0.648e3 * eta - 0.833e3 / 0.648e3) * ci2 ^ 2 - (eta + 0.13e2) * (0.1e1 + eta) ^ 2 / 0.648e3) * (eta - 0.1e1) * sin((f - g))) * (0.1e1 + eta)) * sqrt(-ci2 ^ 2 + 0.1e1) / eta ^ 8 / a ^ 4 -0.6939e4 / 0.256e3 * (0.358e3 / 0.771e3 + 0.5770e4 / 0.6939e4 * eta ^ 6 + 0.480e3 / 0.257e3 * (ci2 ^ 6 - 0.53e2 / 0.45e2 * ci2 ^ 4 + 0.61e2 / 0.180e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sin((-2 * h + 4 * f)) - 0.640e3 / 0.257e3 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sin((-2 * g - 2 * h + 2 * f)) + 0.178e3 / 0.2313e4 * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2) * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * cos((6 * g + 2 * h)) + 0.52e2 / 0.2313e4 * ((eta ^ 2 + 0.3e1 / 0.13e2 * eta + 0.48e2 / 0.13e2) * ci2 ^ 2 - eta ^ 2 + 0.7e1 / 0.26e2 * eta - 0.7e1 / 0.26e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 5 * f + 2 * g)) + 0.50e2 / 0.2313e4 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h - 2 * g + f)) + 0.292e3 / 0.2313e4 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + 9 * f)) + 0.1840e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 6 + (-0.409e3 / 0.345e3 * eta ^ 2 - 0.497e3 / 0.690e3 * eta + 0.527e3 / 0.230e3) * ci2 ^ 4 + (0.473e3 / 0.1380e4 * eta ^ 2 + 0.287e3 / 0.1380e4 * eta - 0.151e3 / 0.230e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - 0.7e1 / 0.690e3 * eta + 0.3e1 / 0.92e2) * sin((-2 * h + 3 * f)) - 0.2e1 / 0.257e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 + 0.13e2 / 0.18e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g - 2 * h + 7 * f)) + (0.6536e4 / 0.771e3 + 0.13616e5 / 0.2313e4 * eta ^ 7 + 0.30128e5 / 0.2313e4 * eta ^ 6 + (-0.3200e4 / 0.257e3 * Delta ^ 2 - 0.16072e5 / 0.771e3) * eta ^ 5 + (-0.6400e4 / 0.257e3 * Delta ^ 2 - 0.16712e5 / 0.257e3) * eta ^ 4 + (0.3200e4 / 0.771e3 * Delta ^ 2 - 0.103952e6 / 0.6939e4) * eta ^ 3 + (0.25600e5 / 0.771e3 * Delta ^ 2 + 0.414560e6 / 0.6939e4) * eta ^ 2 + (0.12800e5 / 0.771e3 * Delta ^ 2 + 0.319144e6 / 0.6939e4) * eta) * ci2 ^ 8 + (0.33040e5 / 0.2313e4 + 0.25208e5 / 0.2313e4 * eta ^ 7 + 0.53720e5 / 0.2313e4 * eta ^ 6 + (-0.6528e4 / 0.257e3 * Delta ^ 2 - 0.93616e5 / 0.2313e4) * eta ^ 5 + (-0.13056e5 / 0.257e3 * Delta ^ 2 - 0.30528e5 / 0.257e3) * eta ^ 4 + (0.2176e4 / 0.257e3 * Delta ^ 2 - 0.168056e6 / 0.6939e4) * eta ^ 3 + (0.17408e5 / 0.257e3 * Delta ^ 2 + 0.750344e6 / 0.6939e4) * eta ^ 2 + (0.8704e4 / 0.257e3 * Delta ^ 2 + 0.558112e6 / 0.6939e4) * eta) * ci2 ^ 4 + (-0.14360e5 / 0.771e3 - 0.94912e5 / 0.6939e4 * eta ^ 7 - 0.206168e6 / 0.6939e4 * eta ^ 6 + (0.7680e4 / 0.257e3 * Delta ^ 2 + 0.344144e6 / 0.6939e4) * eta ^ 5 + (0.15360e5 / 0.257e3 * Delta ^ 2 + 0.38536e5 / 0.257e3) * eta ^ 4 + (-0.2560e4 / 0.257e3 * Delta ^ 2 + 0.74720e5 / 0.2313e4) * eta ^ 3 + (-0.20480e5 / 0.257e3 * Delta ^ 2 - 0.317624e6 / 0.2313e4) * eta ^ 2 + (-0.10240e5 / 0.257e3 * Delta ^ 2 - 0.239632e6 / 0.2313e4) * eta) * ci2 ^ 6 + 0.50e2 / 0.2313e4 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g + f)) + 0.80e2 / 0.257e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 5 * f)) + 0.292e3 / 0.2313e4 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((9 * f + 4 * g)) + 0.520e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta + 0.1e1 / 0.13e2) * ci2 ^ 6 + (-0.193e3 / 0.130e3 * eta - 0.19e2 / 0.130e3) * ci2 ^ 4 + (0.11e2 / 0.20e2 * eta + 0.29e2 / 0.260e3) * ci2 ^ 2 - 0.3e1 / 0.65e2 * eta - 0.2e1 / 0.65e2) * sin((-2 * g + f)) + 0.400e3 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.7e1 / 0.15e2 * eta - 0.16e2 / 0.3e1) * ci2 ^ 6 + (-0.117e3 / 0.100e3 * eta ^ 2 - 0.41e2 / 0.75e2 * eta + 0.1771e4 / 0.300e3) * ci2 ^ 4 + (0.199e3 / 0.600e3 * eta ^ 2 + 0.23e2 / 0.150e3 * eta - 0.827e3 / 0.600e3) * ci2 ^ 2 - eta ^ 2 / 0.50e2 - eta / 0.150e3 + 0.1e1 / 0.75e2) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f + 2 * g)) + ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 5 * f)) / 0.514e3 + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f - 2 * g)) / 0.514e3 + 0.3200e4 / 0.257e3 * ((eta ^ 2 + 0.133e3 / 0.120e3 * eta + 0.97e2 / 0.120e3) * ci2 ^ 6 + (-0.4e1 / 0.3e1 * eta ^ 2 - 0.589e3 / 0.400e3 * eta - 0.1187e4 / 0.1200e4) * ci2 ^ 4 + (0.253e3 / 0.480e3 * eta ^ 2 + 0.1387e4 / 0.2400e4 * eta + 0.77e2 / 0.240e3) * ci2 ^ 2 - 0.7e1 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.240e3 * eta - 0.1e1 / 0.32e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + f)) + 0.35e2 / 0.1542e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 9 * f)) + 0.280e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * sin((-4 * g - 2 * h + f)) + 0.35e2 / 0.1542e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + 9 * f)) - 0.403e3 / 0.1542e4 * ((eta ^ 4 - 0.2544e4 / 0.403e3 * eta ^ 3 - 0.954e3 / 0.403e3 * eta ^ 2 + 0.3784e4 / 0.403e3 * eta + 0.639e3 / 0.403e3) * ci2 ^ 6 + (-0.419e3 / 0.403e3 * eta ^ 4 + 0.2576e4 / 0.403e3 * eta ^ 3 + 0.946e3 / 0.403e3 * eta ^ 2 - 0.3624e4 / 0.403e3 * eta - 0.327e3 / 0.403e3) * ci2 ^ 4 + (0.157e3 / 0.806e3 * eta ^ 4 - 0.2272e4 / 0.1209e4 * eta ^ 3 - 0.191e3 / 0.403e3 * eta ^ 2 + 0.3164e4 / 0.1209e4 * eta + 0.187e3 / 0.2418e4) * ci2 ^ 2 + eta ^ 4 / 0.403e3 + 0.218e3 / 0.1209e4 * eta ^ 3 + 0.8e1 / 0.1209e4 * eta ^ 2 - 0.118e3 / 0.403e3 * eta - 0.17e2 / 0.403e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + f)) - 0.347e3 / 0.1542e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 5 + 0.12643e5 / 0.347e3 * eta ^ 4 + 0.22950e5 / 0.347e3 * eta ^ 3 - 0.14226e5 / 0.347e3 * eta ^ 2 - 0.51281e5 / 0.347e3 * eta - 0.30625e5 / 0.347e3) * ci2 ^ 6 + (-0.363e3 / 0.347e3 * eta ^ 5 - 0.14931e5 / 0.347e3 * eta ^ 4 - 0.26782e5 / 0.347e3 * eta ^ 3 + 0.16410e5 / 0.347e3 * eta ^ 2 + 0.59001e5 / 0.347e3 * eta + 0.34601e5 / 0.347e3) * ci2 ^ 4 + (0.101e3 / 0.694e3 * eta ^ 5 + 0.25351e5 / 0.2082e4 * eta ^ 4 + 0.22715e5 / 0.1041e4 * eta ^ 3 - 0.12257e5 / 0.1041e4 * eta ^ 2 - 0.93077e5 / 0.2082e4 * eta - 0.52405e5 / 0.2082e4) * ci2 ^ 2 + 0.23e2 / 0.1041e4 * (eta ^ 4 - 0.870e3 / 0.23e2 * eta ^ 3 - 0.872e3 / 0.23e2 * eta ^ 2 + 0.1214e4 / 0.23e2 * eta + 0.1385e4 / 0.23e2) * (0.1e1 + eta)) * cos((2 * h + 5 * f + 4 * g)) - 0.224e3 / 0.771e3 * ((eta ^ 4 + 0.1297e4 / 0.168e3 * eta ^ 3 + 0.193e3 / 0.24e2 * eta ^ 2 - 0.3133e4 / 0.168e3 * eta - 0.3403e4 / 0.168e3) * ci2 ^ 4 + (-0.17e2 / 0.112e3 * eta ^ 4 - 0.107e3 / 0.42e2 * eta ^ 3 - 0.169e3 / 0.56e2 * eta ^ 2 + 0.269e3 / 0.42e2 * eta + 0.811e3 / 0.112e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) * (eta ^ 2 - 0.16e2 * eta - 0.37e2) / 0.56e2) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f + 4 * g)) + 0.8e1 / 0.2313e4 * ((eta ^ 4 + 0.80e2 * eta ^ 3 - 0.432e3 * eta ^ 2 - 0.1276e4 * eta - 0.851e3) * ci2 ^ 4 + (0.3e1 * eta ^ 4 - 0.28e2 * eta ^ 3 + 0.161e3 * eta ^ 2 + 0.477e3 * eta + 0.333e3) * ci2 ^ 2 + 0.2e1 * eta ^ 4 + 0.7e1 * eta ^ 3 + 0.6e1 * eta ^ 2 - 0.31e2 * eta - 0.32e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((2 * f + 4 * g)) - 0.1475e4 / 0.1542e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.9591e4 / 0.1475e4 * eta ^ 4 - 0.38322e5 / 0.1475e4 * eta ^ 3 - 0.33294e5 / 0.1475e4 * eta ^ 2 + 0.179e3 / 0.295e3 * eta + 0.6837e4 / 0.1475e4) * ci2 ^ 6 + (-0.1971e4 / 0.1475e4 * eta ^ 5 + 0.11271e5 / 0.1475e4 * eta ^ 4 + 0.44394e5 / 0.1475e4 * eta ^ 3 + 0.35446e5 / 0.1475e4 * eta ^ 2 - 0.5863e4 / 0.1475e4 * eta - 0.10061e5 / 0.1475e4) * ci2 ^ 4 + (0.1529e4 / 0.2950e4 * eta ^ 5 - 0.19559e5 / 0.8850e4 * eta ^ 4 - 0.38101e5 / 0.4425e4 * eta ^ 3 - 0.955e3 / 0.177e3 * eta ^ 2 + 0.31343e5 / 0.8850e4 * eta + 0.26941e5 / 0.8850e4) * ci2 ^ 2 - 0.406e3 / 0.4425e4 * (0.1e1 + eta) * (eta ^ 4 - 0.204e3 / 0.203e3 * eta ^ 3 - 0.498e3 / 0.203e3 * eta ^ 2 + 0.984e3 / 0.203e3 * eta + 0.1123e4 / 0.203e3)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + f)) - 0.976e3 / 0.6939e4 * (0.1e1 + eta) ^ 2 * ((eta ^ 4 - 0.74e2 / 0.61e2 * eta ^ 3 - 0.1249e4 / 0.61e2 * eta ^ 2 + 0.416e3 / 0.61e2 * eta + 0.2247e4 / 0.61e2) * ci2 ^ 4 + (-0.26e2 / 0.61e2 * eta ^ 4 + 0.16e2 / 0.61e2 * eta ^ 3 + 0.785e3 / 0.122e3 * eta ^ 2 - 0.229e3 / 0.122e3 * eta - 0.693e3 / 0.61e2) * ci2 ^ 2 + 0.3e1 / 0.61e2 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.2e1 * eta ^ 2 - 0.53e2 / 0.6e1 * eta + 0.9e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((6 * f + 4 * g)) - 0.10e2 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * cos((-4 * g - 2 * h + 2 * f)) - 0.64e2 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 + 0.89e2 / 0.48e2 * eta ^ 2 - 0.19e2 / 0.24e2 * eta - 0.25e2 / 0.16e2) * ci2 ^ 6 + (-eta ^ 3 - 0.89e2 / 0.48e2 * eta ^ 2 + 0.5e1 / 0.8e1 * eta + 0.67e2 / 0.48e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.59e2 / 0.96e2 * eta ^ 2 - 0.25e2 / 0.144e3 * eta - 0.127e3 / 0.288e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 + 0.5e1 / 0.6e1 * eta - 0.3e1 / 0.2e1) / 0.24e2) * cos((-2 * g + 2 * f)) - 0.184e3 / 0.2313e4 * ((eta ^ 2 - 0.13e2 / 0.46e2 * eta - 0.204e3 / 0.23e2) * ci2 ^ 4 + (-0.7e1 / 0.23e2 * eta ^ 2 + 0.3e1 / 0.46e2 * eta + 0.129e3 / 0.46e2) * ci2 ^ 2 + eta ^ 2 / 0.46e2 - 0.1e1 / 0.46e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((8 * f + 4 * g)) - 0.10384e5 / 0.2313e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.13063e5 / 0.5192e4 * eta ^ 4 - 0.1564e4 / 0.649e3 * eta ^ 3 - 0.21303e5 / 0.2596e4 * eta ^ 2 - 0.2895e4 / 0.649e3 * eta - 0.841e3 / 0.5192e4) * ci2 ^ 6 + (-0.844e3 / 0.649e3 * eta ^ 5 - 0.16239e5 / 0.5192e4 * eta ^ 4 + 0.2039e4 / 0.649e3 * eta ^ 3 + 0.27095e5 / 0.2596e4 * eta ^ 2 + 0.3819e4 / 0.649e3 * eta + 0.35e2 / 0.88e2) * ci2 ^ 4 + (0.302e3 / 0.649e3 * eta ^ 5 + 0.10645e5 / 0.10384e5 * eta ^ 4 - 0.2372e4 / 0.1947e4 * eta ^ 3 - 0.58631e5 / 0.15576e5 * eta ^ 2 - 0.4346e4 / 0.1947e4 * eta - 0.2523e4 / 0.10384e5) * ci2 ^ 2 - 0.679e3 / 0.15576e5 * (0.1e1 + eta) * (eta ^ 4 + 0.664e3 / 0.679e3 * eta ^ 3 - 0.2878e4 / 0.679e3 * eta ^ 2 - 0.496e3 / 0.97e2 * eta - 0.657e3 / 0.679e3)) * cos((2 * g)) - 0.4720e4 / 0.257e3 * ((eta ^ 4 + 0.58e2 / 0.59e2 * eta ^ 3 - 0.512e3 / 0.177e3 * eta ^ 2 - 0.470e3 / 0.177e3 * eta + 0.21e2 / 0.59e2) * ci2 ^ 4 + (-0.73e2 / 0.59e2 * eta ^ 4 - 0.72e2 / 0.59e2 * eta ^ 3 + 0.198e3 / 0.59e2 * eta ^ 2 + 0.184e3 / 0.59e2 * eta - 0.21e2 / 0.59e2) * ci2 ^ 2 + 0.115e3 / 0.354e3 * eta ^ 4 + 0.19e2 / 0.59e2 * eta ^ 3 - 0.140e3 / 0.177e3 * eta ^ 2 - 0.133e3 / 0.177e3 * eta + 0.7e1 / 0.118e3) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * sin(f) - 0.128e3 / 0.771e3 * ((eta ^ 3 + 0.21e2 / 0.64e2 * eta ^ 2 - 0.55e2 / 0.16e2 * eta - 0.157e3 / 0.64e2) * ci2 ^ 6 + (-eta ^ 3 - 0.21e2 / 0.64e2 * eta ^ 2 + 0.51e2 / 0.16e2 * eta + 0.141e3 / 0.64e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.11e2 / 0.128e3 * eta ^ 2 - 0.103e3 / 0.96e2 * eta - 0.265e3 / 0.384e3) * ci2 ^ 2 - eta ^ 3 / 0.24e2 - eta ^ 2 / 0.192e3 + 0.5e1 / 0.32e2 * eta + 0.19e2 / 0.192e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((2 * h + 2 * f)) + 0.122e3 / 0.257e3 * ((eta ^ 5 + 0.787e3 / 0.61e2 * eta ^ 4 + 0.1278e4 / 0.61e2 * eta ^ 3 - 0.4030e4 / 0.183e3 * eta ^ 2 - 0.6481e4 / 0.183e3 * eta - 0.57e2 / 0.61e2) * ci2 ^ 6 + (-0.81e2 / 0.61e2 * eta ^ 5 - 0.1017e4 / 0.61e2 * eta ^ 4 - 0.4544e4 / 0.183e3 * eta ^ 3 + 0.5164e4 / 0.183e3 * eta ^ 2 + 0.2537e4 / 0.61e2 * eta - 0.25e2 / 0.183e3) * ci2 ^ 4 + (0.227e3 / 0.366e3 * eta ^ 5 + 0.6463e4 / 0.1098e4 * eta ^ 4 + 0.3790e4 / 0.549e3 * eta ^ 3 - 0.5582e4 / 0.549e3 * eta ^ 2 - 0.4367e4 / 0.366e3 * eta + 0.1109e4 / 0.1098e4) * ci2 ^ 2 - 0.11e2 / 0.122e3 * eta ^ 5 - 0.521e3 / 0.1098e4 * eta ^ 4 - 0.17e2 / 0.61e2 * eta ^ 3 + 0.161e3 / 0.183e3 * eta ^ 2 + 0.653e3 / 0.1098e4 * eta - 0.29e2 / 0.122e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + f)) - 0.320e3 / 0.257e3 * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sin((4 * f)) - 0.40e2 / 0.257e3 * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f)) + 0.85e2 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.691e3 / 0.85e2 * eta ^ 2 - 0.2037e4 / 0.85e2 * eta - 0.225e3 / 0.17e2) * ci2 ^ 6 + (-0.93e2 / 0.85e2 * eta ^ 3 + 0.161e3 / 0.17e2 * eta ^ 2 + 0.2281e4 / 0.85e2 * eta + 0.1247e4 / 0.85e2) * ci2 ^ 4 + (0.37e2 / 0.170e3 * eta ^ 3 - 0.421e3 / 0.170e3 * eta ^ 2 - 0.2923e4 / 0.510e3 * eta - 0.471e3 / 0.170e3) * ci2 ^ 2 + 0.7e1 / 0.510e3 * (0.1e1 + eta) * (eta ^ 2 + 0.24e2 / 0.7e1 * eta - 0.131e3 / 0.7e1)) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 5 * f)) - 0.40e2 / 0.257e3 * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f + 2 * g)) + 0.640e3 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.11e2 / 0.24e2 * eta ^ 2 - 0.7e1 / 0.2e1 * eta - 0.83e2 / 0.24e2) * ci2 ^ 6 + (-0.17e2 / 0.15e2 * eta ^ 3 - 0.43e2 / 0.80e2 * eta ^ 2 + 0.233e3 / 0.60e2 * eta + 0.307e3 / 0.80e2) * ci2 ^ 4 + (0.139e3 / 0.480e3 * eta ^ 3 + 0.37e2 / 0.240e3 * eta ^ 2 - 0.439e3 / 0.480e3 * eta - 0.217e3 / 0.240e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.96e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f + 4 * g)) + 0.35e2 / 0.1542e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 7 * f)) - (0.1e1 + eta) ^ 3 * ((eta ^ 2 - 0.110e3 / 0.3e1 * eta - 0.101e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 2 + 0.36e2 * eta + 0.33e2) * ci2 ^ 4 + (eta ^ 2 / 0.18e2 - 0.112e3 / 0.9e1 * eta - 0.71e2 / 0.6e1) * ci2 ^ 2 + (eta + 0.29e2) * (0.1e1 + eta) / 0.18e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f)) / 0.257e3 + 0.4480e4 / 0.771e3 * ((eta ^ 4 + 0.47e2 / 0.56e2 * eta ^ 3 - 0.703e3 / 0.168e3 * eta ^ 2 - 0.289e3 / 0.168e3 * eta + 0.185e3 / 0.56e2) * ci2 ^ 6 + (-0.2047e4 / 0.1680e4 * eta ^ 4 - 0.851e3 / 0.840e3 * eta ^ 3 + 0.524e3 / 0.105e3 * eta ^ 2 + 0.1759e4 / 0.840e3 * eta - 0.2123e4 / 0.560e3) * ci2 ^ 4 + (0.1297e4 / 0.3360e4 * eta ^ 4 + 0.521e3 / 0.1680e4 * eta ^ 3 - 0.211e3 / 0.140e3 * eta ^ 2 - 0.75e2 / 0.112e3 * eta + 0.1133e4 / 0.1120e4) * ci2 ^ 2 - 0.53e2 / 0.1680e4 * (0.1e1 + eta) * (eta ^ 3 - 0.18e2 / 0.53e2 * eta ^ 2 - 0.177e3 / 0.53e2 * eta + 0.90e2 / 0.53e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f + 2 * g)) + 0.15e2 / 0.514e3 * ((eta ^ 2 - 0.2236e4 / 0.45e2 * eta - 0.4117e4 / 0.45e2) * ci2 ^ 6 + (-eta ^ 2 + 0.2552e4 / 0.45e2 * eta + 0.4433e4 / 0.45e2) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 - 0.1928e4 / 0.135e3 * eta - 0.5737e4 / 0.270e3) * ci2 ^ 2 + 0.56e2 / 0.135e3 * eta + 0.56e2 / 0.135e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 7 * f)) - 0.3392e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.1233e4 / 0.848e3 * eta + 0.571e3 / 0.848e3) * ci2 ^ 4 + (-0.1405e4 / 0.3392e4 * eta ^ 2 - 0.63e2 / 0.106e3 * eta - 0.971e3 / 0.3392e4) * ci2 ^ 2 + 0.21e2 / 0.848e3 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + f)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.236e3 / 0.3e1 * eta - 0.65e2) * ci2 ^ 6 + (-eta ^ 2 + 0.232e3 / 0.3e1 * eta + 0.191e3 / 0.3e1) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 - 0.76e2 / 0.3e1 * eta - 0.415e3 / 0.18e2) * ci2 ^ 2 + 0.28e2 / 0.9e1 * eta + 0.28e2 / 0.9e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f - 2 * g)) / 0.514e3 + 0.3120e4 / 0.257e3 * (0.1e1 + eta) * ((0.1e1 + eta) * (eta ^ 3 - 0.4e1 / 0.117e3 * eta ^ 2 - 0.35e2 / 0.39e2 * eta + 0.4e1 / 0.9e1) * ci2 ^ 6 + (-0.1457e4 / 0.1170e4 * eta ^ 4 - 0.233e3 / 0.195e3 * eta ^ 3 + 0.6e1 / 0.5e1 * eta ^ 2 + 0.343e3 / 0.585e3 * eta - 0.667e3 / 0.1170e4) * ci2 ^ 4 + (0.319e3 / 0.780e3 * eta ^ 4 + 0.449e3 / 0.1170e4 * eta ^ 3 - 0.274e3 / 0.585e3 * eta ^ 2 - 0.19e2 / 0.78e2 * eta + 0.95e2 / 0.468e3) * ci2 ^ 2 - 0.41e2 / 0.1170e4 * eta ^ 4 - 0.7e1 / 0.234e3 * eta ^ 3 + 0.5e1 / 0.78e2 * eta ^ 2 + eta / 0.30e2 - 0.1e1 / 0.39e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((f + 2 * g)) + 0.1520e4 / 0.257e3 * ((eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (0.1e1 + eta) * ci2 ^ 6 + (-0.137e3 / 0.114e3 * eta ^ 4 - 0.577e3 / 0.570e3 * eta ^ 3 + 0.889e3 / 0.570e3 * eta ^ 2 + 0.253e3 / 0.570e3 * eta - 0.52e2 / 0.57e2) * ci2 ^ 4 + (0.20e2 / 0.57e2 * eta ^ 4 + 0.337e3 / 0.1140e4 * eta ^ 3 - 0.499e3 / 0.1140e4 * eta ^ 2 - 0.7e1 / 0.60e2 * eta + 0.59e2 / 0.228e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) / 0.60e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + f)) + 0.80e2 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.23e2 / 0.15e2 * eta ^ 3 - 0.37e2 / 0.30e2 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.37e2 / 0.30e2) * ci2 ^ 4 + (0.31e2 / 0.60e2 * eta ^ 3 + 0.11e2 / 0.30e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.11e2 / 0.30e2) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * sin((2 * h + f)) - 0.55e2 / 0.771e3 * ((eta ^ 3 + 0.39e2 / 0.55e2 * eta ^ 2 - 0.63e2 / 0.55e2 * eta - 0.39e2 / 0.55e2) * ci2 ^ 6 + (-0.47e2 / 0.55e2 * eta ^ 3 + 0.27e2 / 0.55e2 * eta ^ 2 + 0.179e3 / 0.55e2 * eta + 0.97e2 / 0.55e2) * ci2 ^ 4 + (0.23e2 / 0.110e3 * eta ^ 3 - 0.19e2 / 0.22e2 * eta ^ 2 - 0.157e3 / 0.66e2 * eta - 0.141e3 / 0.110e3) * ci2 ^ 2 - 0.19e2 / 0.330e3 * (eta ^ 2 - 0.4e1 * eta - 0.99e2 / 0.19e2) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g - 2 * h + f)) - 0.1516e4 / 0.2313e4 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - 0.609e3 / 0.1516e4 * ci2 ^ 2 + 0.21e2 / 0.379e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + f)) - 0.676e3 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.6e1 / 0.169e3 * eta ^ 2 - 0.283e3 / 0.169e3 * eta + 0.192e3 / 0.169e3) * ci2 ^ 2 - 0.73e2 / 0.169e3 * eta ^ 3 + eta ^ 2 / 0.338e3 + 0.109e3 / 0.169e3 * eta - 0.181e3 / 0.338e3) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + f + 2 * g)) - 0.5e1 / 0.1542e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g - 2 * h + 3 * f)) + 0.23e2 / 0.1542e4 * ((eta ^ 4 - 0.7076e4 / 0.23e2 * eta ^ 3 - 0.9438e4 / 0.23e2 * eta ^ 2 + 0.21700e5 / 0.23e2 * eta + 0.28375e5 / 0.23e2) * ci2 ^ 6 + (-eta ^ 4 + 0.8632e4 / 0.23e2 * eta ^ 3 + 0.11250e5 / 0.23e2 * eta ^ 2 - 0.25176e5 / 0.23e2 * eta - 0.32107e5 / 0.23e2) * ci2 ^ 4 + (-0.3e1 / 0.46e2 * eta ^ 4 - 0.8092e4 / 0.69e2 * eta ^ 3 - 0.9865e4 / 0.69e2 * eta ^ 2 + 0.6948e4 / 0.23e2 * eta + 0.49579e5 / 0.138e3) * ci2 ^ 2 + 0.16e2 / 0.69e2 * (eta ^ 3 + 0.181e3 / 0.4e1 * eta ^ 2 + 0.3e1 / 0.2e1 * eta - 0.379e3 / 0.4e1) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f + 2 * g)) + 0.200e3 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((4 * g + 2 * h + 7 * f)) - 0.4e1 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((3 * f - 2 * g)) - 0.4e1 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((2 * h + 3 * f)) + 0.200e3 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((2 * g + 7 * f)) - 0.320e3 / 0.257e3 * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((2 * h + 2 * g + 4 * f)) + (-0.5584e4 / 0.6939e4 + 0.96e2 / 0.257e3 * Delta ^ 2) * eta ^ 3 + (0.25294e5 / 0.6939e4 + 0.768e3 / 0.257e3 * Delta ^ 2) * eta ^ 2 + (-0.10240e5 / 0.2313e4 - 0.24112e5 / 0.6939e4 * eta ^ 7 - 0.50312e5 / 0.6939e4 * eta ^ 6 + (0.2304e4 / 0.257e3 * Delta ^ 2 + 0.91352e5 / 0.6939e4) * eta ^ 5 + (0.4608e4 / 0.257e3 * Delta ^ 2 + 0.9648e4 / 0.257e3) * eta ^ 4 + (-0.768e3 / 0.257e3 * Delta ^ 2 + 0.17024e5 / 0.2313e4) * eta ^ 3 + (-0.6144e4 / 0.257e3 * Delta ^ 2 - 0.78104e5 / 0.2313e4) * eta ^ 2 + (-0.3072e4 / 0.257e3 * Delta ^ 2 - 0.57592e5 / 0.2313e4) * eta) * ci2 ^ 2 - 0.16e2 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((-2 * g + 2 * f)) - 0.16e2 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((2 * h + 2 * f)) + 0.1760e4 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((6 * f + 2 * g)) + 0.1760e4 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((2 * h + 6 * f + 4 * g)) + 0.2816e4 / 0.6939e4 * eta ^ 7 + 0.40e2 / 0.257e3 * (0.1e1 + eta) ^ 3 * ((eta ^ 2 + 0.43e2 / 0.30e2 * eta + 0.4e1 / 0.3e1) * ci2 ^ 4 + (-0.23e2 / 0.45e2 * eta ^ 2 - 0.7e1 / 0.10e2 * eta - 0.53e2 / 0.90e2) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.30e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((4 * g)) + 0.112e3 / 0.771e3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * (eta - 0.1e1) ^ 2 * cos((4 * g + 2 * h + 8 * f)) + 0.112e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * cos((8 * f + 2 * g)) + 0.544e3 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 4 + 0.925e3 / 0.272e3 * eta ^ 3 - 0.365e3 / 0.272e3 * eta ^ 2 - 0.2409e4 / 0.272e3 * eta - 0.1311e4 / 0.272e3) * ci2 ^ 6 + (-0.61e2 / 0.51e2 * eta ^ 4 - 0.1077e4 / 0.272e3 * eta ^ 3 + 0.377e3 / 0.272e3 * eta ^ 2 + 0.7955e4 / 0.816e3 * eta + 0.1443e4 / 0.272e3) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.551e3 / 0.544e3 * eta ^ 3 - 0.349e3 / 0.1632e4 * eta ^ 2 - 0.3121e4 / 0.1632e4 * eta - 0.1583e4 / 0.1632e4) * ci2 ^ 2 - 0.3e1 / 0.272e3 * (eta ^ 3 + eta ^ 2 / 0.9e1 + 0.5e1 / 0.3e1 * eta + 0.9e1) * (0.1e1 + eta)) * cos((-2 * h + 4 * f)) + 0.112e3 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta ^ 2 + 0.191e3 / 0.56e2 * eta + 0.113e3 / 0.56e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.91e2 / 0.24e2 * eta - 0.53e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.37e2 / 0.48e2 * eta + 0.125e3 / 0.336e3) * ci2 ^ 2 - eta ^ 2 / 0.84e2 + eta / 0.24e2 + 0.3e1 / 0.56e2) * cos((-2 * h + 6 * f)) + 0.1964e4 / 0.2313e4 * ((eta ^ 4 - 0.735e3 / 0.491e3 * eta ^ 3 - 0.3823e4 / 0.491e3 * eta ^ 2 + 0.1459e4 / 0.491e3 * eta + 0.4496e4 / 0.491e3) * ci2 ^ 4 + (-0.407e3 / 0.982e3 * eta ^ 4 + 0.188e3 / 0.491e3 * eta ^ 3 + 0.1233e4 / 0.491e3 * eta ^ 2 - 0.436e3 / 0.491e3 * eta - 0.2835e4 / 0.982e3) * ci2 ^ 2 + 0.25e2 / 0.491e3 * (0.1e1 + eta) * (eta ^ 3 - 0.39e2 / 0.25e2 * eta ^ 2 - 0.77e2 / 0.25e2 * eta + 0.83e2 / 0.25e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f + 4 * g)) + 0.2800e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 + 0.269e3 / 0.350e3 * eta ^ 2 - 0.621e3 / 0.350e3 * eta - 0.68e2 / 0.35e2) * ci2 ^ 4 + (-0.43e2 / 0.140e3 * eta ^ 3 - 0.327e3 / 0.1400e4 * eta ^ 2 + 0.387e3 / 0.700e3 * eta + 0.851e3 / 0.1400e4) * ci2 ^ 2 + 0.9e1 / 0.700e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * cos((6 * g + 2 * h + 7 * f)) + 0.9320e4 / 0.2313e4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.1783e4 / 0.1165e4 * eta ^ 3 - 0.1143e4 / 0.1165e4 * eta ^ 2 - 0.753e3 / 0.233e3 * eta - 0.2224e4 / 0.1165e4) * ci2 ^ 4 + (-0.1489e4 / 0.4660e4 * eta ^ 4 - 0.461e3 / 0.932e3 * eta ^ 3 + 0.1441e4 / 0.4660e4 * eta ^ 2 + 0.961e3 / 0.932e3 * eta + 0.707e3 / 0.1165e4) * ci2 ^ 2 + 0.13e2 / 0.466e3 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2)) * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + 5 * f)) + 0.2288e4 / 0.771e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.675e3 / 0.572e3 * eta ^ 4 - 0.43e2 / 0.858e3 * eta ^ 3 - 0.712e3 / 0.429e3 * eta ^ 2 - 0.5389e4 / 0.858e3 * eta - 0.2583e4 / 0.572e3) * ci2 ^ 6 + (-0.197e3 / 0.143e3 * eta ^ 5 - 0.1083e4 / 0.572e3 * eta ^ 4 + 0.85e2 / 0.286e3 * eta ^ 3 + 0.551e3 / 0.143e3 * eta ^ 2 + 0.241e3 / 0.26e2 * eta + 0.3395e4 / 0.572e3) * ci2 ^ 4 + (0.83e2 / 0.143e3 * eta ^ 5 + 0.313e3 / 0.312e3 * eta ^ 4 - 0.149e3 / 0.572e3 * eta ^ 3 - 0.745e3 / 0.286e3 * eta ^ 2 - 0.7099e4 / 0.1716e4 * eta - 0.7531e4 / 0.3432e4) * ci2 ^ 2 - 0.157e3 / 0.1716e4 * eta ^ 5 - 0.305e3 / 0.1716e4 * eta ^ 4 + 0.20e2 / 0.143e3 * eta ^ 3 + 0.283e3 / 0.429e3 * eta ^ 2 + 0.1241e4 / 0.1716e4 * eta + 0.509e3 / 0.1716e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((2 * h + 2 * f + 4 * g)) - 0.3200e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * ((eta ^ 2 + 0.4e1 / 0.5e1 * eta - 0.3e1 / 0.5e1) * ci2 ^ 4 + (-0.11e2 / 0.10e2 * eta ^ 2 - 0.9e1 / 0.10e2 * eta + 0.3e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 2 + eta / 0.5e1 - 0.1e1 / 0.10e2) * sin((2 * f)) - 0.1520e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 + 0.8e1 / 0.19e2 * eta ^ 2 - 0.51e2 / 0.19e2 * eta - 0.44e2 / 0.19e2) * ci2 ^ 4 + (-0.20e2 / 0.19e2 * eta ^ 3 - 0.9e1 / 0.19e2 * eta ^ 2 + 0.52e2 / 0.19e2 * eta + 0.45e2 / 0.19e2) * ci2 ^ 2 + 0.23e2 / 0.114e3 * eta ^ 3 + 0.2e1 / 0.19e2 * eta ^ 2 - 0.55e2 / 0.114e3 * eta - 0.8e1 / 0.19e2) * sin((2 * h + 3 * f + 2 * g)) + 0.4960e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 - 0.7e1 / 0.31e2 * eta ^ 2 - 0.121e3 / 0.93e2 * eta + 0.65e2 / 0.93e2) * ci2 ^ 6 + (-0.112e3 / 0.93e2 * eta ^ 3 + 0.44e2 / 0.155e3 * eta ^ 2 + 0.8e1 / 0.5e1 * eta - 0.388e3 / 0.465e3) * ci2 ^ 4 + (0.349e3 / 0.930e3 * eta ^ 3 - eta ^ 2 / 0.10e2 - 0.493e3 / 0.930e3 * eta + 0.233e3 / 0.930e3) * ci2 ^ 2 - 0.14e2 / 0.465e3 * eta ^ 3 + 0.2e1 / 0.155e3 * eta ^ 2 + 0.8e1 / 0.155e3 * eta - 0.2e1 / 0.93e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((2 * g + 2 * f)) + 0.2608e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.2957e4 / 0.1304e4 * eta ^ 3 - 0.6291e4 / 0.1304e4 * eta ^ 2 - 0.17737e5 / 0.1304e4 * eta - 0.10849e5 / 0.1304e4) * ci2 ^ 6 + (-0.193e3 / 0.163e3 * eta ^ 4 - 0.3357e4 / 0.1304e4 * eta ^ 3 + 0.7203e4 / 0.1304e4 * eta ^ 2 + 0.19897e5 / 0.1304e4 * eta + 0.11937e5 / 0.1304e4) * ci2 ^ 4 + (0.55e2 / 0.163e3 * eta ^ 4 + 0.1787e4 / 0.2608e4 * eta ^ 3 - 0.3573e4 / 0.2608e4 * eta ^ 2 - 0.9647e4 / 0.2608e4 * eta - 0.5519e4 / 0.2608e4) * ci2 ^ 2 - 0.41e2 / 0.1956e4 * (eta ^ 3 + 0.105e3 / 0.82e2 * eta ^ 2 - 0.116e3 / 0.41e2 * eta - 0.267e3 / 0.82e2) * (0.1e1 + eta)) * (eta - 0.1e1) * cos((2 * h + 6 * f + 4 * g)) - 0.34e2 / 0.257e3 * ((eta ^ 3 + 0.13e2 / 0.17e2 * eta ^ 2 - 0.791e3 / 0.153e3 * eta - 0.815e3 / 0.153e3) * ci2 ^ 4 + (-0.47e2 / 0.153e3 * eta ^ 3 - 0.35e2 / 0.153e3 * eta ^ 2 + 0.251e3 / 0.153e3 * eta + 0.259e3 / 0.153e3) * ci2 ^ 2 + 0.2e1 / 0.153e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((6 * g + 2 * h + 8 * f)) + 0.656e3 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.355e3 / 0.164e3 * eta ^ 4 + 0.203e3 / 0.82e2 * eta ^ 3 + 0.446e3 / 0.41e2 * eta ^ 2 + 0.1069e4 / 0.82e2 * eta + 0.489e3 / 0.164e3) * ci2 ^ 6 + (-0.151e3 / 0.123e3 * eta ^ 5 - 0.1361e4 / 0.492e3 * eta ^ 4 - 0.323e3 / 0.82e2 * eta ^ 3 - 0.1669e4 / 0.123e3 * eta ^ 2 - 0.3571e4 / 0.246e3 * eta - 0.461e3 / 0.164e3) * ci2 ^ 4 + (eta ^ 5 / 0.3e1 + 0.907e3 / 0.984e3 * eta ^ 4 + 0.1073e4 / 0.492e3 * eta ^ 3 + 0.1181e4 / 0.246e3 * eta ^ 2 + 0.555e3 / 0.164e3 * eta + 0.37e2 / 0.984e3) * ci2 ^ 2 - eta ^ 5 / 0.164e3 - 0.29e2 / 0.492e3 * eta ^ 4 - 0.77e2 / 0.246e3 * eta ^ 3 - 0.109e3 / 0.246e3 * eta ^ 2 - 0.7e1 / 0.492e3 * eta + 0.29e2 / 0.164e3) * cos((-2 * h + 2 * f)) - 0.11360e5 / 0.771e3 * ((eta ^ 4 + 0.157e3 / 0.142e3 * eta ^ 3 - 0.379e3 / 0.142e3 * eta ^ 2 - 0.505e3 / 0.142e3 * eta - 0.135e3 / 0.142e3) * ci2 ^ 4 + (-0.171e3 / 0.142e3 * eta ^ 4 - 0.189e3 / 0.142e3 * eta ^ 3 + 0.417e3 / 0.142e3 * eta ^ 2 + 0.561e3 / 0.142e3 * eta + 0.75e2 / 0.71e2) * ci2 ^ 2 + 0.43e2 / 0.142e3 * eta ^ 4 + 0.95e2 / 0.284e3 * eta ^ 3 - 0.177e3 / 0.284e3 * eta ^ 2 - 0.243e3 / 0.284e3 * eta - 0.65e2 / 0.284e3) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + f + 2 * g)) - 0.2240e4 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.89e2 / 0.70e2 * ci2 ^ 4 + 0.127e3 / 0.280e3 * ci2 ^ 2 - 0.3e1 / 0.56e2) * Delta * (eta - 0.1e1) ^ 2 * sin((4 * g + 2 * h)) + (-0.288e3 / 0.257e3 * Delta ^ 2 - 0.10312e5 / 0.6939e4) * eta ^ 5 + (-0.576e3 / 0.257e3 * Delta ^ 2 - 0.28942e5 / 0.6939e4) * eta ^ 4 + (0.384e3 / 0.257e3 * Delta ^ 2 + 0.18392e5 / 0.6939e4) * eta + 0.554e3 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 - 0.254e3 / 0.831e3 * eta - 0.2729e4 / 0.831e3) * ci2 ^ 4 + (-0.171e3 / 0.554e3 * eta ^ 2 + 0.64e2 / 0.831e3 * eta + 0.563e3 / 0.554e3) * ci2 ^ 2 + 0.6e1 / 0.277e3 * eta ^ 2 - 0.6e1 / 0.277e3) * cos((4 * g + 7 * f)) - 0.569e3 / 0.1542e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.2868e4 / 0.569e3 * eta ^ 3 - 0.6842e4 / 0.569e3 * eta ^ 2 - 0.2860e4 / 0.569e3 * eta + 0.561e3 / 0.569e3) * ci2 ^ 6 + (-eta ^ 4 + 0.3144e4 / 0.569e3 * eta ^ 3 + 0.7502e4 / 0.569e3 * eta ^ 2 + 0.3672e4 / 0.569e3 * eta - 0.133e3 / 0.569e3) * ci2 ^ 4 + (0.179e3 / 0.1138e4 * eta ^ 4 - 0.1192e4 / 0.569e3 * eta ^ 3 - 0.7883e4 / 0.1707e4 * eta ^ 2 - 0.4376e4 / 0.1707e4 * eta - 0.659e3 / 0.3414e4) * ci2 ^ 2 + 0.16e2 / 0.1707e4 * (0.1e1 + eta) * (eta ^ 3 + 0.59e2 / 0.2e1 * eta ^ 2 + 0.67e2 / 0.2e1 * eta + 0.3e1)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g + f)) - 0.80e2 / 0.2313e4 * ((eta ^ 4 + 0.41e2 / 0.20e2 * eta ^ 3 - 0.187e3 / 0.20e2 * eta ^ 2 - 0.33e2 / 0.20e2 * eta + 0.223e3 / 0.20e2) * ci2 ^ 2 - 0.17e2 / 0.40e2 * eta ^ 4 - 0.53e2 / 0.40e2 * eta ^ 3 + 0.189e3 / 0.40e2 * eta ^ 2 + 0.73e2 / 0.40e2 * eta - 0.28e2 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 3 * f + 2 * g)) + 0.1136e4 / 0.257e3 * ((eta ^ 2 + 0.1853e4 / 0.1278e4 * eta + 0.265e3 / 0.213e3) * ci2 ^ 4 + (-0.973e3 / 0.2556e4 * eta ^ 2 - 0.929e3 / 0.1704e4 * eta - 0.2209e4 / 0.5112e4) * ci2 ^ 2 + 0.41e2 / 0.852e3 * eta ^ 2 + 0.29e2 / 0.426e3 * eta + 0.37e2 / 0.852e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + 3 * f)) + 0.65e2 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.1113e4 / 0.65e2 * eta ^ 2 - 0.3169e4 / 0.65e2 * eta - 0.2071e4 / 0.65e2) * ci2 ^ 6 + (-eta ^ 3 + 0.1271e4 / 0.65e2 * eta ^ 2 + 0.697e3 / 0.13e2 * eta + 0.2229e4 / 0.65e2) * ci2 ^ 4 + (0.5e1 / 0.26e2 * eta ^ 3 - 0.631e3 / 0.130e3 * eta ^ 2 - 0.4759e4 / 0.390e3 * eta - 0.957e3 / 0.130e3) * ci2 ^ 2 - (0.1e1 + eta) ^ 2 * (eta - 0.51e2 / 0.5e1) / 0.78e2) * cos((4 * g + 2 * h + 7 * f)) + 0.7520e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.20e2 / 0.47e2 * eta - 0.79e2 / 0.47e2) * ci2 ^ 6 + (-0.274e3 / 0.235e3 * eta ^ 2 - 0.117e3 / 0.235e3 * eta + 0.443e3 / 0.235e3) * ci2 ^ 4 + (0.77e2 / 0.235e3 * eta ^ 2 + 0.33e2 / 0.235e3 * eta - 0.109e3 / 0.235e3) * ci2 ^ 2 - 0.9e1 / 0.470e3 * eta ^ 2 - 0.3e1 / 0.470e3 * eta + 0.3e1 / 0.235e3) * sin((2 * g + 4 * f)) + 0.1920e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 6 + (-0.421e3 / 0.360e3 * eta ^ 2 - 0.26e2 / 0.45e2 * eta + 0.349e3 / 0.360e3) * ci2 ^ 4 + (0.241e3 / 0.720e3 * eta ^ 2 + 0.59e2 / 0.360e3 * eta - 0.199e3 / 0.720e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - eta / 0.120e3 + 0.1e1 / 0.72e2) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((-2 * h + 2 * f)) + 0.62e2 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 3 + 0.11e2 / 0.31e2 * eta ^ 2 + 0.71e2 / 0.31e2 * eta + 0.151e3 / 0.31e2) * ci2 ^ 2 - 0.17e2 / 0.31e2 * eta ^ 3 - 0.5e1 / 0.31e2 * eta ^ 2 - 0.19e2 / 0.31e2 * eta - 0.67e2 / 0.31e2) * cos((2 * g - 2 * h)) - 0.3680e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.1e1 + eta) * (eta + 0.5e1 / 0.23e2) * ci2 ^ 6 + (-0.166e3 / 0.115e3 * eta ^ 2 - 0.201e3 / 0.115e3 * eta - 0.37e2 / 0.115e3) * ci2 ^ 4 + (0.59e2 / 0.115e3 * eta ^ 2 + 0.15e2 / 0.23e2 * eta + 0.17e2 / 0.115e3) * ci2 ^ 2 - 0.9e1 / 0.230e3 * eta ^ 2 - 0.3e1 / 0.46e2 * eta - 0.3e1 / 0.115e3) * Delta * (eta - 0.1e1) * sin((2 * g)) + 0.6880e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 + 0.56e2 / 0.43e2 * eta + 0.95e2 / 0.129e3) * ci2 ^ 6 + (-0.1579e4 / 0.1290e4 * eta ^ 2 - 0.1028e4 / 0.645e3 * eta - 0.75e2 / 0.86e2) * ci2 ^ 4 + (0.205e3 / 0.516e3 * eta ^ 2 + 0.667e3 / 0.1290e4 * eta + 0.133e3 / 0.516e3) * ci2 ^ 2 - 0.5e1 / 0.129e3 * eta ^ 2 - 0.13e2 / 0.258e3 * eta - 0.5e1 / 0.258e3) * (eta - 0.1e1) * sin((2 * h + 2 * f + 4 * g)) - 0.280e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g - 2 * h + 3 * f)) - 0.1480e4 / 0.771e3 * ((eta ^ 2 + 0.28e2 / 0.37e2 * eta - 0.81e2 / 0.37e2) * ci2 ^ 4 + (-0.41e2 / 0.37e2 * eta ^ 2 - 0.32e2 / 0.37e2 * eta + 0.81e2 / 0.37e2) * ci2 ^ 2 + 0.53e2 / 0.222e3 * eta ^ 2 + 0.22e2 / 0.111e3 * eta - 0.27e2 / 0.74e2) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f)) + 0.5840e4 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 4 + 0.91e2 / 0.73e2 * eta ^ 3 - 0.781e3 / 0.219e3 * eta ^ 2 - 0.1357e4 / 0.219e3 * eta - 0.230e3 / 0.73e2) * ci2 ^ 6 + (-0.907e3 / 0.730e3 * eta ^ 4 - 0.1129e4 / 0.730e3 * eta ^ 3 + 0.2997e4 / 0.730e3 * eta ^ 2 + 0.5253e4 / 0.730e3 * eta + 0.265e3 / 0.73e2) * ci2 ^ 4 + (0.153e3 / 0.365e3 * eta ^ 4 + 0.759e3 / 0.1460e4 * eta ^ 3 - 0.971e3 / 0.876e3 * eta ^ 2 - 0.8761e4 / 0.4380e4 * eta - 0.287e3 / 0.292e3) * ci2 ^ 2 - 0.13e2 / 0.292e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * sin((2 * h + 3 * f + 4 * g)) - 0.64e2 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 4 + eta ^ 3 / 0.16e2 + eta ^ 2 / 0.2e1 - 0.13e2 / 0.16e2 * eta - 0.15e2 / 0.2e1) * ci2 ^ 2 - eta ^ 4 / 0.2e1 + eta ^ 3 / 0.16e2 - eta ^ 2 / 0.16e2 - 0.13e2 / 0.16e2 * eta + 0.49e2 / 0.16e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((-2 * h + 2 * g + 4 * f)) - 0.8240e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 + 0.91e2 / 0.103e3 * eta - 0.72e2 / 0.103e3) * ci2 ^ 4 + (-0.132e3 / 0.103e3 * eta ^ 2 - 0.117e3 / 0.103e3 * eta + 0.87e2 / 0.103e3) * ci2 ^ 2 + 0.73e2 / 0.206e3 * eta ^ 2 + 0.65e2 / 0.206e3 * eta - 0.22e2 / 0.103e3) * sin((-2 * h - 2 * g + f)) - 0.52e2 / 0.6939e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + eta / 0.13e2 + 0.51e2 / 0.13e2) * ci2 ^ 2 - 0.11e2 / 0.13e2 * eta ^ 2 + eta / 0.13e2 + 0.21e2 / 0.13e2) * (eta - 0.1e1) ^ 2 * cos((2 * g - 2 * h + 6 * f)) - 0.8e1 / 0.771e3 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * cos((10 * f + 4 * g)) + 0.2e1 / 0.2313e4 * ci2 ^ 2 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 ^ 2 + 0.1e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((2 * g - 2 * h + 8 * f)) - 0.8e1 / 0.771e3 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 5 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((6 * g + 2 * h + 10 * f)) - 0.16e2 / 0.771e3 * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((2 * h + 4 * f)) - 0.650e3 / 0.771e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.4231e4 / 0.325e3 * eta ^ 4 + 0.4626e4 / 0.325e3 * eta ^ 3 - 0.10754e5 / 0.975e3 * eta ^ 2 - 0.34277e5 / 0.975e3 * eta - 0.27587e5 / 0.975e3) * ci2 ^ 6 + (-0.223e3 / 0.195e3 * eta ^ 5 - 0.16387e5 / 0.975e3 * eta ^ 4 - 0.19088e5 / 0.975e3 * eta ^ 3 + 0.4668e4 / 0.325e3 * eta ^ 2 + 0.1787e4 / 0.39e2 * eta + 0.11277e5 / 0.325e3) * ci2 ^ 4 + (0.193e3 / 0.650e3 * eta ^ 5 + 0.2389e4 / 0.390e3 * eta ^ 4 + 0.2632e4 / 0.325e3 * eta ^ 3 - 0.1652e4 / 0.325e3 * eta ^ 2 - 0.32299e5 / 0.1950e4 * eta - 0.7171e4 / 0.650e3) * ci2 ^ 2 - 0.19e2 / 0.650e3 * eta ^ 5 - 0.1627e4 / 0.1950e4 * eta ^ 4 - 0.79e2 / 0.65e2 * eta ^ 3 + 0.763e3 / 0.975e3 * eta ^ 2 + 0.4307e4 / 0.1950e4 * eta + 0.2269e4 / 0.1950e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 4 * g)) - 0.3220e4 / 0.2313e4 * ((eta ^ 2 + 0.979e3 / 0.805e3 * eta + 0.41e2 / 0.23e2) * ci2 ^ 4 + (-0.359e3 / 0.805e3 * eta ^ 2 - 0.429e3 / 0.805e3 * eta - 0.533e3 / 0.805e3) * ci2 ^ 2 + 0.8e1 / 0.115e3 * eta ^ 2 + 0.66e2 / 0.805e3 * eta + 0.64e2 / 0.805e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((6 * g + 2 * h + 2 * f)) + 0.480e3 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.71e2 / 0.45e2 * eta ^ 3 - 0.6e1 / 0.5e1 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.52e2 / 0.45e2) * ci2 ^ 4 + (0.97e2 / 0.180e3 * eta ^ 3 + 0.7e1 / 0.20e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.59e2 / 0.180e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((2 * h)) - 0.3392e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 4 + 0.1109e4 / 0.848e3 * eta ^ 3 - 0.220e3 / 0.53e2 * eta ^ 2 - 0.6793e4 / 0.848e3 * eta - 0.571e3 / 0.106e3) * ci2 ^ 4 + (-0.79e2 / 0.212e3 * eta ^ 4 - 0.411e3 / 0.848e3 * eta ^ 3 + 0.1191e4 / 0.848e3 * eta ^ 2 + 0.2299e4 / 0.848e3 * eta + 0.1505e4 / 0.848e3) * ci2 ^ 2 + 0.21e2 / 0.424e3 * eta ^ 4 + 0.27e2 / 0.424e3 * eta ^ 3 - 0.55e2 / 0.424e3 * eta ^ 2 - 0.109e3 / 0.424e3 * eta - 0.15e2 / 0.106e3) * cos((6 * g + 2 * h + 4 * f)) - 0.11872e5 / 0.2313e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.18369e5 / 0.5936e4 * eta ^ 3 + 0.17687e5 / 0.5936e4 * eta ^ 2 + 0.4323e4 / 0.5936e4 * eta - 0.835e3 / 0.5936e4) * ci2 ^ 6 + (-0.993e3 / 0.742e3 * eta ^ 4 - 0.24233e5 / 0.5936e4 * eta ^ 3 - 0.3253e4 / 0.848e3 * eta ^ 2 - 0.4859e4 / 0.5936e4 * eta + 0.1527e4 / 0.5936e4) * ci2 ^ 4 + (0.393e3 / 0.742e3 * eta ^ 4 + 0.18931e5 / 0.11872e5 * eta ^ 3 + 0.17197e5 / 0.11872e5 * eta ^ 2 + 0.2777e4 / 0.11872e5 * eta - 0.1745e4 / 0.11872e5) * ci2 ^ 2 - 0.1231e4 / 0.17808e5 * eta ^ 4 - 0.89e2 / 0.424e3 * eta ^ 3 - 0.68e2 / 0.371e3 * eta ^ 2 - 0.29e2 / 0.2226e4 * eta + 0.25e2 / 0.848e3) * (eta - 0.1e1) ^ 2 * cos((4 * g + 2 * h)) - 0.4480e4 / 0.771e3 * ((eta ^ 4 + 0.59e2 / 0.14e2 * eta ^ 3 + 0.109e3 / 0.14e2 * eta ^ 2 + 0.93e2 / 0.14e2 * eta + 0.31e2 / 0.14e2) * ci2 ^ 4 + (-eta ^ 4 - 0.61e2 / 0.14e2 * eta ^ 3 - 0.58e2 / 0.7e1 * eta ^ 2 - 0.103e3 / 0.14e2 * eta - 0.18e2 / 0.7e1) * ci2 ^ 2 + eta ^ 4 / 0.6e1 + 0.67e2 / 0.84e2 * eta ^ 3 + 0.137e3 / 0.84e2 * eta ^ 2 + 0.19e2 / 0.12e2 * eta + 0.17e2 / 0.28e2) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((2 * g + 2 * h)) + 0.11840e5 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.18e2 / 0.37e2 * eta ^ 2 - 0.45e2 / 0.37e2 * eta - 0.44e2 / 0.37e2) * ci2 ^ 6 + (-0.419e3 / 0.370e3 * eta ^ 3 - 0.21e2 / 0.37e2 * eta ^ 2 + 0.507e3 / 0.370e3 * eta + 0.248e3 / 0.185e3) * ci2 ^ 4 + (0.427e3 / 0.1480e4 * eta ^ 3 + 0.237e3 / 0.1480e4 * eta ^ 2 - 0.507e3 / 0.1480e4 * eta - 0.497e3 / 0.1480e4) * ci2 ^ 2 - 0.3e1 / 0.296e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * Delta * sin((2 * h + 4 * f + 4 * g)) - 0.68e2 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 - 0.16e2 / 0.17e2 * eta ^ 4 + 0.177e3 / 0.17e2 * eta ^ 3 - 0.79e2 / 0.17e2 * eta ^ 2 - 0.394e3 / 0.17e2 * eta + 0.267e3 / 0.17e2) * ci2 ^ 2 - 0.7e1 / 0.17e2 * eta ^ 5 + 0.8e1 / 0.17e2 * eta ^ 4 - 0.93e2 / 0.17e2 * eta ^ 3 + 0.29e2 / 0.17e2 * eta ^ 2 + 0.184e3 / 0.17e2 * eta - 0.133e3 / 0.17e2) * cos((-2 * h + 2 * g + 2 * f)) + 0.1360e4 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.231e3 / 0.136e3 * eta ^ 4 - 0.302e3 / 0.51e2 * eta ^ 3 - 0.6209e4 / 0.1020e4 * eta ^ 2 + 0.673e3 / 0.51e2 * eta + 0.9091e4 / 0.680e3) * ci2 ^ 6 + (-0.319e3 / 0.255e3 * eta ^ 5 - 0.4249e4 / 0.2040e4 * eta ^ 4 + 0.1903e4 / 0.255e3 * eta ^ 3 + 0.7993e4 / 0.1020e4 * eta ^ 2 - 0.3958e4 / 0.255e3 * eta - 0.10723e5 / 0.680e3) * ci2 ^ 4 + (0.7e1 / 0.17e2 * eta ^ 5 + 0.857e3 / 0.1360e4 * eta ^ 4 - 0.131e3 / 0.51e2 * eta ^ 3 - 0.5563e4 / 0.2040e4 * eta ^ 2 + 0.1166e4 / 0.255e3 * eta + 0.6297e4 / 0.1360e4) * ci2 ^ 2 - 0.77e2 / 0.2040e4 * (0.1e1 + eta) * (eta ^ 4 - 0.8e1 / 0.77e2 * eta ^ 3 - 0.94e2 / 0.11e2 * eta ^ 2 + 0.877e3 / 0.77e2)) * (eta - 0.1e1) * cos((2 * g + 4 * f)) + 0.1600e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 + 0.689e3 / 0.400e3 * eta ^ 2 - 0.1721e4 / 0.200e3 * eta - 0.1051e4 / 0.80e2) * ci2 ^ 6 + (-0.61e2 / 0.50e2 * eta ^ 3 - 0.801e3 / 0.400e3 * eta ^ 2 + 0.1973e4 / 0.200e3 * eta + 0.5783e4 / 0.400e3) * ci2 ^ 4 + (0.19e2 / 0.50e2 * eta ^ 3 + 0.443e3 / 0.800e3 * eta ^ 2 - 0.41e2 / 0.16e2 * eta - 0.2697e4 / 0.800e3) * ci2 ^ 2 - 0.19e2 / 0.600e3 * (0.1e1 + eta) * (eta ^ 2 + 0.5e1 / 0.38e2 * eta - 0.147e3 / 0.38e2)) * cos((6 * f + 2 * g)) - 0.16e2 / 0.771e3 * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((4 * f - 2 * g)) + 0.967e3 / 0.4626e4 * ((eta ^ 5 - 0.6411e4 / 0.967e3 * eta ^ 4 - 0.15834e5 / 0.967e3 * eta ^ 3 + 0.16698e5 / 0.967e3 * eta ^ 2 + 0.44707e5 / 0.967e3 * eta + 0.19329e5 / 0.967e3) * ci2 ^ 6 + (-0.1271e4 / 0.967e3 * eta ^ 5 + 0.6491e4 / 0.967e3 * eta ^ 4 + 0.16482e5 / 0.967e3 * eta ^ 3 - 0.18658e5 / 0.967e3 * eta ^ 2 - 0.48219e5 / 0.967e3 * eta - 0.20617e5 / 0.967e3) * ci2 ^ 4 + (0.1093e4 / 0.1934e4 * eta ^ 5 - 0.937e3 / 0.1934e4 * eta ^ 4 - 0.1875e4 / 0.967e3 * eta ^ 3 + 0.4635e4 / 0.967e3 * eta ^ 2 + 0.51539e5 / 0.5802e4 * eta + 0.6115e4 / 0.1934e4) * ci2 ^ 2 - 0.66e2 / 0.967e3 * (0.1e1 + eta) * (eta ^ 4 + 0.112e3 / 0.33e2 * eta ^ 3 + 0.62e2 / 0.11e2 * eta ^ 2 - 0.100e3 / 0.33e2 * eta - 0.287e3 / 0.33e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 3 * f)) - 0.3080e4 / 0.2313e4 * (0.1e1 + eta) * ((0.10e2 + eta ^ 6 - 0.458e3 / 0.385e3 * eta ^ 5 + 0.7698e4 / 0.385e3 * eta - 0.4364e4 / 0.385e3 * eta ^ 4 - 0.4808e4 / 0.385e3 * eta ^ 3 + 0.2993e4 / 0.385e3 * eta ^ 2) * ci2 ^ 8 + (-0.112e3 / 0.5e1 - 0.207e3 / 0.77e2 * eta ^ 6 + 0.91e2 / 0.55e2 * eta ^ 5 + 0.11554e5 / 0.385e3 * eta ^ 3 - 0.929e3 / 0.55e2 * eta ^ 2 - 0.17447e5 / 0.385e3 * eta + 0.10042e5 / 0.385e3 * eta ^ 4) * ci2 ^ 6 + (0.6959e4 / 0.385e3 - 0.1482e4 / 0.55e2 * eta ^ 3 + 0.2058e4 / 0.55e2 * eta - 0.243e3 / 0.11e2 * eta ^ 4 - 0.36e2 / 0.385e3 * eta ^ 5 + 0.1047e4 / 0.385e3 * eta ^ 6 + 0.461e3 / 0.35e2 * eta ^ 2) * ci2 ^ 4 + (0.4034e4 / 0.385e3 * eta ^ 3 - 0.461e3 / 0.35e2 * eta + 0.443e3 / 0.55e2 * eta ^ 4 - 0.2367e4 / 0.385e3 - 0.207e3 / 0.385e3 * eta ^ 5 - 0.456e3 / 0.385e3 * eta ^ 6 - 0.238e3 / 0.55e2 * eta ^ 2) * ci2 ^ 2 - 0.1077e4 / 0.770e3 * eta ^ 3 + 0.193e3 / 0.385e3 * eta ^ 2 - 0.1579e4 / 0.1540e4 * eta ^ 4 + 0.2487e4 / 0.1540e4 * eta + 0.1121e4 / 0.1540e4 + 0.27e2 / 0.154e3 * eta ^ 6 + 0.29e2 / 0.220e3 * eta ^ 5) * cos((2 * h + 2 * g + 2 * f)) + ((0.4203e4 / 0.257e3 + eta ^ 6 - 0.7652e4 / 0.771e3 * eta ^ 5 + 0.126004e6 / 0.2313e4 * eta - 0.68575e5 / 0.2313e4 * eta ^ 4 - 0.680e3 / 0.2313e4 * eta ^ 3 + 0.43793e5 / 0.771e3 * eta ^ 2) * ci2 ^ 8 + (-0.27658e5 / 0.771e3 - 0.2e1 * eta ^ 6 + 0.52736e5 / 0.2313e4 * eta ^ 5 - 0.1184e4 / 0.771e3 * eta ^ 3 - 0.293590e6 / 0.2313e4 * eta ^ 2 - 0.277664e6 / 0.2313e4 * eta + 0.151558e6 / 0.2313e4 * eta ^ 4) * ci2 ^ 6 + (0.63868e5 / 0.2313e4 + 0.4576e4 / 0.2313e4 * eta ^ 3 + 0.208736e6 / 0.2313e4 * eta - 0.111260e6 / 0.2313e4 * eta ^ 4 - 0.4416e4 / 0.257e3 * eta ^ 5 + 0.4e1 / 0.3e1 * eta ^ 6 + 0.218644e6 / 0.2313e4 * eta ^ 2) * ci2 ^ 4 + (-0.1016e4 / 0.2313e4 * eta ^ 3 - 0.6820e4 / 0.257e3 * eta + 0.10231e5 / 0.771e3 * eta ^ 4 - 0.20017e5 / 0.2313e4 + 0.3700e4 / 0.771e3 * eta ^ 5 - eta ^ 6 / 0.3e1 - 0.61393e5 / 0.2313e4 * eta ^ 2) * ci2 ^ 2 - 0.16e2 / 0.771e3 * eta ^ 3 + 0.22531e5 / 0.9252e4 * eta ^ 2 - 0.11419e5 / 0.9252e4 * eta ^ 4 + 0.672e3 / 0.257e3 * eta + 0.2845e4 / 0.3084e4 + eta ^ 6 / 0.36e2 - 0.1040e4 / 0.2313e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * cos(f) + 0.20224e5 / 0.2313e4 * (eta - 0.1e1) * ((0.2451e4 / 0.2528e4 + eta ^ 6 + 0.1085e4 / 0.316e3 * eta ^ 5 + (-0.150e3 / 0.79e2 * Delta ^ 2 + 0.14767e5 / 0.7584e4) * eta ^ 4 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.5801e4 / 0.1264e4) * eta ^ 3 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.432e3 / 0.79e2) * eta ^ 2 + (-0.150e3 / 0.79e2 * Delta ^ 2 - 0.1429e4 / 0.3792e4) * eta) * ci2 ^ 8 + (-0.5385e4 / 0.2528e4 - 0.2931e4 / 0.1264e4 * eta ^ 6 - 0.19821e5 / 0.2528e4 * eta ^ 5 + (0.360e3 / 0.79e2 * Delta ^ 2 - 0.10279e5 / 0.2528e4) * eta ^ 4 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.7089e4 / 0.632e3) * eta ^ 3 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.16503e5 / 0.1264e4) * eta ^ 2 + (0.360e3 / 0.79e2 * Delta ^ 2 + 0.2849e4 / 0.2528e4) * eta) * ci2 ^ 6 + (0.2065e4 / 0.1264e4 + 0.4653e4 / 0.2528e4 * eta ^ 6 + 0.7745e4 / 0.1264e4 * eta ^ 5 + (-0.306e3 / 0.79e2 * Delta ^ 2 + 0.1369e4 / 0.474e3) * eta ^ 4 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.1467e4 / 0.158e3) * eta ^ 3 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.26615e5 / 0.2528e4) * eta ^ 2 + (-0.306e3 / 0.79e2 * Delta ^ 2 - 0.3727e4 / 0.3792e4) * eta) * ci2 ^ 4 + (-0.40e2 / 0.79e2 - 0.737e3 / 0.1264e4 * eta ^ 6 - 0.4821e4 / 0.2528e4 * eta ^ 5 + (0.108e3 / 0.79e2 * Delta ^ 2 - 0.1023e4 / 0.1264e4) * eta ^ 4 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.1913e4 / 0.632e3) * eta ^ 3 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.263e3 / 0.79e2) * eta ^ 2 + (0.108e3 / 0.79e2 * Delta ^ 2 + 0.769e3 / 0.2528e4) * eta) * ci2 ^ 2 + 0.537e3 / 0.10112e5 + 0.171e3 / 0.2528e4 * eta ^ 6 + 0.2191e4 / 0.10112e5 * eta ^ 5 + (-0.27e2 / 0.158e3 * Delta ^ 2 + 0.2671e4 / 0.30336e5) * eta ^ 4 + (-0.1721e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 3 + (-0.1869e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 2 + (-0.27e2 / 0.158e3 * Delta ^ 2 - 0.1111e4 / 0.30336e5) * eta) * cos((2 * g + 2 * h)) - 0.136e3 / 0.2313e4 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * cos((2 * g + 2 * h + 6 * f)) + 0.443e3 / 0.771e3 * (0.1e1 + eta) * ((-0.7205e4 / 0.443e3 + eta ^ 5 - 0.13677e5 / 0.443e3 * eta + 0.3051e4 / 0.443e3 * eta ^ 4 + 0.13654e5 / 0.1329e4 * eta ^ 3 - 0.16850e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 8 + (0.15866e5 / 0.443e3 - 0.902e3 / 0.443e3 * eta ^ 5 - 0.31796e5 / 0.1329e4 * eta ^ 3 + 0.36748e5 / 0.1329e4 * eta ^ 2 + 0.91174e5 / 0.1329e4 * eta - 0.21146e5 / 0.1329e4 * eta ^ 4) * ci2 ^ 6 + (-0.37688e5 / 0.1329e4 + 0.27520e5 / 0.1329e4 * eta ^ 3 - 0.73372e5 / 0.1329e4 * eta + 0.18128e5 / 0.1329e4 * eta ^ 4 + 0.1852e4 / 0.1329e4 * eta ^ 5 - 0.28792e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 4 + (-0.3438e4 / 0.443e3 * eta ^ 3 + 0.25037e5 / 0.1329e4 * eta - 0.6719e4 / 0.1329e4 * eta ^ 4 + 0.12569e5 / 0.1329e4 - 0.161e3 / 0.443e3 * eta ^ 5 + 0.9478e4 / 0.1329e4 * eta ^ 2) * ci2 ^ 2 + 0.8011e4 / 0.7974e4 * eta ^ 3 - 0.6461e4 / 0.7974e4 * eta ^ 2 + 0.1143e4 / 0.1772e4 * eta ^ 4 - 0.35617e5 / 0.15948e5 * eta - 0.1949e4 / 0.1772e4 + 0.169e3 / 0.5316e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 2 * g)) - 0.176e3 / 0.257e3 * (0.1e1 + eta) * ((0.325e3 / 0.396e3 + 0.269e3 / 0.396e3 * eta + eta ^ 4 + 0.449e3 / 0.132e3 * eta ^ 3 + 0.967e3 / 0.396e3 * eta ^ 2) * ci2 ^ 8 + (-0.68e2 / 0.99e2 - 0.989e3 / 0.99e2 * eta ^ 3 - 0.229e3 / 0.33e2 * eta ^ 2 - eta / 0.3e1 - 0.101e3 / 0.33e2 * eta ^ 4) * ci2 ^ 6 + (-0.92e2 / 0.99e2 + 0.358e3 / 0.33e2 * eta ^ 3 - 0.136e3 / 0.99e2 * eta + 0.38e2 / 0.11e2 * eta ^ 4 + 0.712e3 / 0.99e2 * eta ^ 2) * ci2 ^ 4 + (-0.219e3 / 0.44e2 * eta ^ 3 + 0.515e3 / 0.396e3 * eta - 0.18e2 / 0.11e2 * eta ^ 4 + 0.409e3 / 0.396e3 - 0.1241e4 / 0.396e3 * eta ^ 2) * ci2 ^ 2 + 0.1213e4 / 0.1584e4 * eta ^ 3 + 0.727e3 / 0.1584e4 * eta ^ 2 + 0.17e2 / 0.66e2 * eta ^ 4 - 0.347e3 / 0.1584e4 - 0.433e3 / 0.1584e4 * eta) * (eta - 0.1e1) ^ 2 * cos((-2 * g - 2 * h + 2 * f)) - 0.136e3 / 0.2313e4 * (0.1e1 + eta) ^ 3 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * (eta - 0.1e1) ^ 3 * cos((6 * f)) - 0.944e3 / 0.2313e4 * ((eta ^ 3 + 0.115e3 / 0.59e2 * eta ^ 2 - 0.721e3 / 0.118e3 * eta - 0.1301e4 / 0.118e3) * ci2 ^ 8 + (-0.148e3 / 0.59e2 * eta ^ 3 - 0.565e3 / 0.118e3 * eta ^ 2 + 0.791e3 / 0.59e2 * eta + 0.2787e4 / 0.118e3) * ci2 ^ 6 + (0.279e3 / 0.118e3 * eta ^ 3 + 0.519e3 / 0.118e3 * eta ^ 2 - 0.628e3 / 0.59e2 * eta - 0.1060e4 / 0.59e2) * ci2 ^ 4 + (-0.57e2 / 0.59e2 * eta ^ 3 - 0.207e3 / 0.118e3 * eta ^ 2 + 0.421e3 / 0.118e3 * eta + 0.335e3 / 0.59e2) * ci2 ^ 2 + 0.8e1 / 0.59e2 * eta ^ 3 + 0.115e3 / 0.472e3 * eta ^ 2 - 0.24e2 / 0.59e2 * eta - 0.5e1 / 0.8e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((4 * f)) - 0.3064e4 / 0.2313e4 * (0.1e1 + eta) * (eta - 0.1e1) * ((0.8025e4 / 0.766e3 + eta ^ 5 + 0.3855e4 / 0.383e3 * eta + 0.233e3 / 0.766e3 * eta ^ 4 - 0.2466e4 / 0.383e3 * eta ^ 3 - 0.2213e4 / 0.383e3 * eta ^ 2) * ci2 ^ 8 + (-0.8760e4 / 0.383e3 - 0.1081e4 / 0.383e3 * eta ^ 5 + 0.5738e4 / 0.383e3 * eta ^ 3 + 0.6288e4 / 0.383e3 * eta ^ 2 - 0.7689e4 / 0.383e3 * eta - 0.848e3 / 0.383e3 * eta ^ 4) * ci2 ^ 6 + (0.6775e4 / 0.383e3 - 0.5034e4 / 0.383e3 * eta ^ 3 + 0.4923e4 / 0.383e3 * eta + 0.1389e4 / 0.383e3 * eta ^ 4 + 0.1143e4 / 0.383e3 * eta ^ 5 - 0.6940e4 / 0.383e3 * eta ^ 2) * ci2 ^ 4 + (0.1944e4 / 0.383e3 * eta ^ 3 - 0.1040e4 / 0.383e3 * eta - 0.1593e4 / 0.766e3 * eta ^ 4 - 0.4325e4 / 0.766e3 - 0.516e3 / 0.383e3 * eta ^ 5 + 0.3299e4 / 0.383e3 * eta ^ 2) * ci2 ^ 2 - 0.264e3 / 0.383e3 * eta ^ 3 - 0.2067e4 / 0.1532e4 * eta ^ 2 + 0.1087e4 / 0.3064e4 * eta ^ 4 + 0.1895e4 / 0.3064e4 + 0.75e2 / 0.766e3 * eta + 0.157e3 / 0.766e3 * eta ^ 5) * cos((2 * f)) - 0.1084e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((-0.2608e4 / 0.271e3 - 0.4375e4 / 0.271e3 * eta + eta ^ 4 + 0.631e3 / 0.271e3 * eta ^ 3 - 0.1695e4 / 0.271e3 * eta ^ 2) * ci2 ^ 8 + (0.5621e4 / 0.271e3 - 0.1432e4 / 0.271e3 * eta ^ 3 + 0.3750e4 / 0.271e3 * eta ^ 2 + 0.9580e4 / 0.271e3 * eta - 0.647e3 / 0.271e3 * eta ^ 4) * ci2 ^ 6 + (-0.4318e4 / 0.271e3 + 0.1188e4 / 0.271e3 * eta ^ 3 - 0.7556e4 / 0.271e3 * eta + 0.576e3 / 0.271e3 * eta ^ 4 - 0.3010e4 / 0.271e3 * eta ^ 2) * ci2 ^ 4 + (-0.423e3 / 0.271e3 * eta ^ 3 + 0.2515e4 / 0.271e3 * eta - 0.222e3 / 0.271e3 * eta ^ 4 + 0.1385e4 / 0.271e3 + 0.1025e4 / 0.271e3 * eta ^ 2) * ci2 ^ 2 + 0.213e3 / 0.1084e4 * eta ^ 3 - 0.481e3 / 0.1084e4 * eta ^ 2 + 0.59e2 / 0.542e3 * eta ^ 4 - 0.1165e4 / 0.1084e4 * eta - 0.621e3 / 0.1084e4) * cos((2 * h + 2 * g + 4 * f)) - 0.44e2 / 0.771e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.25e2 / 0.11e2 * eta + 0.2e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.20e2 / 0.3e1 * eta - 0.47e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.80e2 / 0.11e2 * eta + 0.26e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.37e2 / 0.11e2 * eta - 0.15e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.23e2 / 0.44e2 * eta + 0.31e2 / 0.132e3) * (eta - 0.1e1) ^ 3 * cos((-2 * g - 2 * h + 4 * f)) + 0.2204e4 / 0.771e3 * (0.1e1 + eta) * sqrt(-eta ^ 2 + 0.1e1) * ((-0.7550e4 / 0.1653e4 + eta ^ 5 - 0.4792e4 / 0.1653e4 * eta - 0.805e3 / 0.1653e4 * eta ^ 4 - 0.173e3 / 0.57e2 * eta ^ 3 - 0.2209e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 8 + (0.16990e5 / 0.1653e4 - 0.1202e4 / 0.551e3 * eta ^ 5 + 0.10004e5 / 0.1653e4 * eta ^ 3 + 0.3716e4 / 0.1653e4 * eta ^ 2 + 0.3574e4 / 0.551e3 * eta + 0.1598e4 / 0.1653e4 * eta ^ 4) * ci2 ^ 6 + (-0.13679e5 / 0.1653e4 - 0.5888e4 / 0.1653e4 * eta ^ 3 - 0.9536e4 / 0.1653e4 * eta - 0.5e1 / 0.19e2 * eta ^ 4 + 0.2704e4 / 0.1653e4 * eta ^ 5 - 0.2462e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 4 + (0.851e3 / 0.1653e4 * eta ^ 3 + 0.3874e4 / 0.1653e4 * eta - 0.388e3 / 0.1653e4 * eta ^ 4 + 0.4603e4 / 0.1653e4 - 0.267e3 / 0.551e3 * eta ^ 5 + 0.853e3 / 0.1653e4 * eta ^ 2) * ci2 ^ 2 + 0.7e1 / 0.551e3 * eta ^ 3 - 0.37e2 / 0.551e3 * eta ^ 2 + 0.401e3 / 0.6612e4 * eta ^ 4 - 0.2149e4 / 0.6612e4 - 0.2129e4 / 0.6612e4 * eta + 0.317e3 / 0.6612e4 * eta ^ 5) * cos((2 * h + f + 2 * g)) - 0.1001e4 / 0.771e3 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((-0.7627e4 / 0.3003e4 + eta ^ 5 + 0.5617e4 / 0.1001e4 * eta + 0.9959e4 / 0.1001e4 * eta ^ 4 + 0.78194e5 / 0.3003e4 * eta ^ 3 + 0.25362e5 / 0.1001e4 * eta ^ 2) * ci2 ^ 8 + (0.15014e5 / 0.3003e4 - 0.2402e4 / 0.1001e4 * eta ^ 5 - 0.60052e5 / 0.1001e4 * eta ^ 3 - 0.175876e6 / 0.3003e4 * eta ^ 2 - 0.42430e5 / 0.3003e4 * eta - 0.69506e5 / 0.3003e4 * eta ^ 4) * ci2 ^ 6 + (-0.64e2 / 0.21e2 + 0.141208e6 / 0.3003e4 * eta ^ 3 + 0.12508e5 / 0.1001e4 * eta + 0.4240e4 / 0.231e3 * eta ^ 4 + 0.6004e4 / 0.3003e4 * eta ^ 5 + 0.3568e4 / 0.77e2 * eta ^ 2) * ci2 ^ 4 + (-0.1114e4 / 0.77e2 * eta ^ 3 - 0.13753e5 / 0.3003e4 * eta - 0.17179e5 / 0.3003e4 * eta ^ 4 + 0.535e3 / 0.1001e4 - 0.667e3 / 0.1001e4 * eta ^ 5 - 0.2082e4 / 0.143e3 * eta ^ 2) * ci2 ^ 2 + 0.3057e4 / 0.2002e4 * eta ^ 3 + 0.9605e4 / 0.6006e4 * eta ^ 2 + 0.557e3 / 0.924e3 * eta ^ 4 + 0.661e3 / 0.1092e4 * eta + 0.289e3 / 0.4004e4 * eta ^ 5 + 0.61e2 / 0.12012e5) * cos((-2 * h - 2 * g + f)) - 0.176e3 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 - 0.123e3 / 0.22e2 * eta ^ 4 - 0.479e3 / 0.22e2 * eta ^ 3 + 0.1647e4 / 0.22e2 * eta ^ 2 + 0.1059e4 / 0.22e2 * eta - 0.1172e4 / 0.11e2) * ci2 ^ 4 + (-0.8e1 / 0.11e2 * eta ^ 5 + 0.43e2 / 0.22e2 * eta ^ 4 + 0.101e3 / 0.11e2 * eta ^ 3 - 0.274e3 / 0.11e2 * eta ^ 2 - 0.183e3 / 0.11e2 * eta + 0.777e3 / 0.22e2) * ci2 ^ 2 + eta ^ 5 / 0.22e2 - 0.3e1 / 0.11e2 * eta ^ 4 - 0.16e2 / 0.11e2 * eta ^ 3 + 0.27e2 / 0.11e2 * eta ^ 2 + 0.49e2 / 0.22e2 * eta - 0.30e2 / 0.11e2) * cos((4 * f + 4 * g)) + 0.1408e4 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.1047e4 / 0.176e3 + eta ^ 6 + 0.131e3 / 0.176e3 * eta ^ 5 + 0.2731e4 / 0.264e3 * eta ^ 3 - 0.799e3 / 0.264e3 * eta ^ 2 - 0.8399e4 / 0.528e3 * eta + 0.1427e4 / 0.528e3 * eta ^ 4) * ci2 ^ 6 + (0.1467e4 / 0.176e3 - 0.1077e4 / 0.88e2 * eta ^ 3 + 0.9979e4 / 0.528e3 * eta - 0.557e3 / 0.176e3 * eta ^ 4 - 0.541e3 / 0.528e3 * eta ^ 5 - 0.169e3 / 0.132e3 * eta ^ 6 + 0.629e3 / 0.264e3 * eta ^ 2) * ci2 ^ 4 + (0.2033e4 / 0.528e3 * eta ^ 3 - 0.6097e4 / 0.1056e4 * eta + 0.1061e4 / 0.1056e4 * eta ^ 4 - 0.1249e4 / 0.352e3 + 0.415e3 / 0.1056e4 * eta ^ 5 + 0.5e1 / 0.12e2 * eta ^ 6 + 0.179e3 / 0.528e3 * eta ^ 2) * ci2 ^ 2 - 0.35e2 / 0.88e2 * eta ^ 3 + 0.149e3 / 0.264e3 - 0.113e3 / 0.264e3 * eta ^ 2 - eta ^ 4 / 0.88e2 + 0.23e2 / 0.48e2 * eta - 0.3e1 / 0.88e2 * eta ^ 6 - eta ^ 5 / 0.48e2) * cos((2 * g + 2 * f)) - 0.4784e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.45e2 / 0.52e2 * eta ^ 4 - 0.3645e4 / 0.598e3 * eta ^ 3 - 0.30e2 / 0.23e2 * eta ^ 2 + 0.3487e4 / 0.598e3 * eta - 0.3e1 / 0.1196e4) * ci2 ^ 6 + (-0.383e3 / 0.299e3 * eta ^ 5 - 0.1087e4 / 0.1196e4 * eta ^ 4 + 0.2168e4 / 0.299e3 * eta ^ 3 + 0.769e3 / 0.598e3 * eta ^ 2 - 0.2035e4 / 0.299e3 * eta + 0.269e3 / 0.1196e4) * ci2 ^ 4 + (0.129e3 / 0.299e3 * eta ^ 5 + 0.409e3 / 0.2392e4 * eta ^ 4 - 0.205e3 / 0.92e2 * eta ^ 3 - 0.5e1 / 0.26e2 * eta ^ 2 + 0.563e3 / 0.276e3 * eta - 0.389e3 / 0.2392e4) * ci2 ^ 2 - 0.9e1 / 0.299e3 * eta ^ 5 + 0.5e1 / 0.1196e4 * eta ^ 4 + 0.85e2 / 0.598e3 * eta ^ 3 - 0.21e2 / 0.1196e4 * eta ^ 2 - 0.38e2 / 0.299e3 * eta + 0.11e2 / 0.598e3) * cos((2 * h)) - 0.5e1 / 0.257e3 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((7 * f)) - 0.3e1 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.1378e4 / 0.27e2 * eta - 0.3313e4 / 0.27e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.1040e4 / 0.9e1 * eta + 0.2330e4 / 0.9e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 - 0.2600e4 / 0.27e2 * eta - 0.5180e4 / 0.27e2) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.310e3 / 0.9e1 * eta + 0.175e3 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.38e2 / 0.9e1 * eta - 0.671e3 / 0.108e3) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f)) + 0.277e3 / 0.771e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((-0.21535e5 / 0.831e3 - 0.5070e4 / 0.277e3 * eta + eta ^ 4 + 0.2254e4 / 0.277e3 * eta ^ 3 + 0.8848e4 / 0.831e3 * eta ^ 2) * ci2 ^ 8 + (0.15550e5 / 0.277e3 - 0.16336e5 / 0.831e3 * eta ^ 3 - 0.22460e5 / 0.831e3 * eta ^ 2 + 0.32048e5 / 0.831e3 * eta - 0.2e1 * eta ^ 4) * ci2 ^ 6 + (-0.35980e5 / 0.831e3 + 0.14936e5 / 0.831e3 * eta ^ 3 - 0.23416e5 / 0.831e3 * eta + 0.4e1 / 0.3e1 * eta ^ 4 + 0.21848e5 / 0.831e3 * eta ^ 2) * ci2 ^ 4 + (-0.5978e4 / 0.831e3 * eta ^ 3 + 0.2270e4 / 0.277e3 * eta - eta ^ 4 / 0.3e1 + 0.11545e5 / 0.831e3 - 0.3100e4 / 0.277e3 * eta ^ 2) * ci2 ^ 2 + 0.2474e4 / 0.2493e4 * eta ^ 3 + 0.8069e4 / 0.4986e4 * eta ^ 2 + eta ^ 4 / 0.36e2 - 0.5125e4 / 0.3324e4 - 0.1930e4 / 0.2493e4 * eta) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f)) + 0.841e3 / 0.1542e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((-0.6153e4 / 0.841e3 + eta ^ 6 + 0.19064e5 / 0.841e3 * eta ^ 5 - 0.13840e5 / 0.841e3 * eta ^ 3 - 0.95765e5 / 0.841e3 * eta ^ 2 - 0.60840e5 / 0.841e3 * eta + 0.45525e5 / 0.841e3 * eta ^ 4) * ci2 ^ 6 + (0.10161e5 / 0.841e3 + 0.17216e5 / 0.841e3 * eta ^ 3 + 0.78864e5 / 0.841e3 * eta - 0.57581e5 / 0.841e3 * eta ^ 4 - 0.24912e5 / 0.841e3 * eta ^ 5 - 0.1097e4 / 0.841e3 * eta ^ 6 + 0.119621e6 / 0.841e3 * eta ^ 2) * ci2 ^ 4 + (-0.16640e5 / 0.2523e4 * eta ^ 3 - 0.86584e5 / 0.2523e4 * eta + 0.120781e6 / 0.5046e4 * eta ^ 4 - 0.10459e5 / 0.1682e4 + 0.28216e5 / 0.2523e4 * eta ^ 5 + 0.1059e4 / 0.1682e4 * eta ^ 6 - 0.242533e6 / 0.5046e4 * eta ^ 2) * ci2 ^ 2 - 0.208e3 / 0.2523e4 * (0.1e1 + eta) * (eta ^ 5 + 0.343e3 / 0.26e2 * eta ^ 4 + 0.425e3 / 0.26e2 * eta ^ 3 - 0.489e3 / 0.26e2 * eta ^ 2 - 0.903e3 / 0.26e2 * eta - 0.173e3 / 0.13e2)) * cos((f + 2 * g)) + 0.137e3 / 0.1542e4 * ((-0.91019e5 / 0.411e3 + eta ^ 6 - 0.6840e4 / 0.137e3 * eta ^ 5 + 0.53936e5 / 0.411e3 * eta ^ 3 - 0.3061e4 / 0.137e3 * eta ^ 2 - 0.149960e6 / 0.411e3 * eta - 0.18097e5 / 0.411e3 * eta ^ 4) * ci2 ^ 6 + (0.114707e6 / 0.411e3 - 0.73088e5 / 0.411e3 * eta ^ 3 + 0.180368e6 / 0.411e3 * eta + 0.7315e4 / 0.137e3 * eta ^ 4 + 0.8272e4 / 0.137e3 * eta ^ 5 - 0.667e3 / 0.411e3 * eta ^ 6 - 0.2545e4 / 0.411e3 * eta ^ 2) * ci2 ^ 4 + (0.91120e5 / 0.1233e4 * eta ^ 3 - 0.171232e6 / 0.1233e4 * eta - 0.31913e5 / 0.2466e4 * eta ^ 4 - 0.79937e5 / 0.822e3 - 0.2384e4 / 0.137e3 * eta ^ 5 + 0.291e3 / 0.274e3 * eta ^ 6 + 0.64625e5 / 0.2466e4 * eta ^ 2) * ci2 ^ 2 - 0.16e2 / 0.137e3 * (0.1e1 + eta) * (eta ^ 5 - 0.14e2 * eta ^ 4 + 0.103e3 / 0.6e1 * eta ^ 3 + 0.599e3 / 0.6e1 * eta ^ 2 - 0.121e3 / 0.6e1 * eta - 0.213e3 / 0.2e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f + 2 * g)) - 0.62e2 / 0.771e3 * ((eta ^ 3 - 0.298e3 / 0.93e2 * eta ^ 2 - 0.623e3 / 0.93e2 * eta - 0.40e2 / 0.93e2) * ci2 ^ 8 + (-0.70e2 / 0.31e2 * eta ^ 3 + 0.322e3 / 0.31e2 * eta ^ 2 + 0.678e3 / 0.31e2 * eta + 0.158e3 / 0.31e2) * ci2 ^ 6 + (0.164e3 / 0.93e2 * eta ^ 3 - 0.386e3 / 0.31e2 * eta ^ 2 - 0.2432e4 / 0.93e2 * eta - 0.854e3 / 0.93e2) * ci2 ^ 4 + (-0.17e2 / 0.31e2 * eta ^ 3 + 0.578e3 / 0.93e2 * eta ^ 2 + 0.1205e4 / 0.93e2 * eta + 0.512e3 / 0.93e2) * ci2 ^ 2 + 0.7e1 / 0.124e3 * eta ^ 3 - 0.379e3 / 0.372e3 * eta ^ 2 - 0.2347e4 / 0.1116e4 * eta - 0.361e3 / 0.372e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g - 2 * h + 3 * f)) + 0.2224e4 / 0.771e3 * ((0.5201e4 / 0.556e3 + eta ^ 6 + 0.519e3 / 0.556e3 * eta ^ 5 - 0.10607e5 / 0.834e3 * eta ^ 3 + 0.917e3 / 0.834e3 * eta ^ 2 + 0.24745e5 / 0.1668e4 * eta - 0.12385e5 / 0.1668e4 * eta ^ 4) * ci2 ^ 6 + (-0.6083e4 / 0.556e3 + 0.4313e4 / 0.278e3 * eta ^ 3 - 0.9895e4 / 0.556e3 * eta + 0.5001e4 / 0.556e3 * eta ^ 4 - 0.723e3 / 0.556e3 * eta ^ 5 - 0.179e3 / 0.139e3 * eta ^ 6 - 0.369e3 / 0.278e3 * eta ^ 2) * ci2 ^ 4 + (-0.8189e4 / 0.1668e4 * eta ^ 3 + 0.17647e5 / 0.3336e4 * eta - 0.9143e4 / 0.3336e4 * eta ^ 4 + 0.10237e5 / 0.3336e4 + 0.1907e4 / 0.3336e4 * eta ^ 5 + 0.65e2 / 0.139e3 * eta ^ 6 + 0.533e3 / 0.1668e4 * eta ^ 2) * ci2 ^ 2 - 0.49e2 / 0.834e3 * (0.1e1 + eta) * (eta ^ 5 + 0.51e2 / 0.98e2 * eta ^ 4 - 0.34e2 / 0.7e1 * eta ^ 3 - 0.355e3 / 0.98e2 * eta ^ 2 + 0.188e3 / 0.49e2 * eta + 0.199e3 / 0.49e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 4 * f + 4 * g)) - 0.1556e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * ((eta ^ 5 + 0.184e3 / 0.389e3 * eta ^ 4 - 0.2751e4 / 0.389e3 * eta ^ 3 - 0.2207e4 / 0.389e3 * eta ^ 2 + 0.2458e4 / 0.389e3 * eta + 0.2979e4 / 0.389e3) * ci2 ^ 4 + (-0.119e3 / 0.389e3 * eta ^ 5 - 0.60e2 / 0.389e3 * eta ^ 4 + 0.853e3 / 0.389e3 * eta ^ 3 + 0.687e3 / 0.389e3 * eta ^ 2 - 0.2294e4 / 0.1167e4 * eta - 0.931e3 / 0.389e3) * ci2 ^ 2 + 0.32e2 / 0.1167e4 * (0.1e1 + eta) * (eta - 0.1e1) * (eta ^ 3 + 0.9e1 / 0.16e2 * eta ^ 2 - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((6 * g + 2 * h + 6 * f)) - 0.10e2 / 0.257e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.734e3 / 0.45e2 * eta ^ 2 - 0.2359e4 / 0.45e2 * eta - 0.1652e4 / 0.45e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.110e3 / 0.3e1 * eta ^ 2 + 0.1694e4 / 0.15e2 * eta + 0.1162e4 / 0.15e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 - 0.272e3 / 0.9e1 * eta ^ 2 - 0.3908e4 / 0.45e2 * eta - 0.2584e4 / 0.45e2) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.32e2 / 0.3e1 * eta ^ 2 + 0.419e3 / 0.15e2 * eta + 0.262e3 / 0.15e2) * ci2 ^ 2 + eta ^ 3 / 0.36e2 - 0.233e3 / 0.180e3 * eta ^ 2 - 0.113e3 / 0.36e2 * eta - 0.67e2 / 0.36e2) * cos((2 * h + 5 * f + 2 * g)) - (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g - 2 * h + 5 * f)) / 0.257e3 - 0.5e1 / 0.257e3 * (0.1e1 + eta) ^ 4 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 2 * h + 7 * f)) - 0.3200e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.2e1 / 0.5e1 * eta ^ 2 - 0.6e1 / 0.5e1 * eta - 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.21e2 / 0.20e2 * eta ^ 3 - 0.9e1 / 0.20e2 * eta ^ 2 + 0.5e1 / 0.4e1 * eta + 0.17e2 / 0.20e2) * ci2 ^ 2 + eta ^ 3 / 0.5e1 + eta ^ 2 / 0.10e2 - 0.7e1 / 0.30e2 * eta - 0.1e1 / 0.6e1) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sin((2 * h + 2 * g + 2 * f))) * R__e ^ 4 * J ^ 2 / (0.1e1 + eta) ^ 2 / a ^ 4 / eta ^ 11 0.1215e4 / 0.16e2 * R__e ^ 4 * (-0.119e3 / 0.810e3 * ((0.7375e4 / 0.238e3 + eta ^ 5 + 0.3597e4 / 0.119e3 * eta - 0.1405e4 / 0.238e3 * eta ^ 4 - 0.2776e4 / 0.119e3 * eta ^ 3 - 0.1973e4 / 0.119e3 * eta ^ 2) * ci2 ^ 8 + (-0.8488e4 / 0.119e3 - 0.39e2 / 0.17e2 * eta ^ 5 + 0.6194e4 / 0.119e3 * eta ^ 3 + 0.588e3 / 0.17e2 * eta ^ 2 - 0.8657e4 / 0.119e3 * eta + 0.1492e4 / 0.119e3 * eta ^ 4) * ci2 ^ 6 + (0.7143e4 / 0.119e3 - 0.718e3 / 0.17e2 * eta ^ 3 + 0.7683e4 / 0.119e3 * eta - 0.1083e4 / 0.119e3 * eta ^ 4 + 0.33e2 / 0.17e2 * eta ^ 5 - 0.3076e4 / 0.119e3 * eta ^ 2) * ci2 ^ 4 + (0.248e3 / 0.17e2 * eta ^ 3 - 0.2936e4 / 0.119e3 * eta + 0.621e3 / 0.238e3 * eta ^ 4 - 0.5143e4 / 0.238e3 - 0.12e2 / 0.17e2 * eta ^ 5 + 0.953e3 / 0.119e3 * eta ^ 2) * ci2 ^ 2 - 0.208e3 / 0.119e3 * eta ^ 3 - 0.377e3 / 0.476e3 * eta ^ 2 - 0.251e3 / 0.952e3 * eta ^ 4 + 0.787e3 / 0.238e3 * eta + 0.2589e4 / 0.952e3 + 0.3e1 / 0.34e2 * eta ^ 5) * (0.1e1 + eta) * (eta - 0.1e1) * sin((2 * f)) - 0.551e3 / 0.540e3 * (0.1e1 + eta) * ((-0.7550e4 / 0.1653e4 + eta ^ 5 - 0.4792e4 / 0.1653e4 * eta - 0.805e3 / 0.1653e4 * eta ^ 4 - 0.173e3 / 0.57e2 * eta ^ 3 - 0.2209e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 8 + (0.16990e5 / 0.1653e4 - 0.1202e4 / 0.551e3 * eta ^ 5 + 0.10004e5 / 0.1653e4 * eta ^ 3 + 0.3716e4 / 0.1653e4 * eta ^ 2 + 0.3574e4 / 0.551e3 * eta + 0.1598e4 / 0.1653e4 * eta ^ 4) * ci2 ^ 6 + (-0.13679e5 / 0.1653e4 - 0.5888e4 / 0.1653e4 * eta ^ 3 - 0.9536e4 / 0.1653e4 * eta - 0.5e1 / 0.19e2 * eta ^ 4 + 0.2704e4 / 0.1653e4 * eta ^ 5 - 0.2462e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 4 + (0.851e3 / 0.1653e4 * eta ^ 3 + 0.3874e4 / 0.1653e4 * eta - 0.388e3 / 0.1653e4 * eta ^ 4 + 0.4603e4 / 0.1653e4 - 0.267e3 / 0.551e3 * eta ^ 5 + 0.853e3 / 0.1653e4 * eta ^ 2) * ci2 ^ 2 + 0.7e1 / 0.551e3 * eta ^ 3 - 0.37e2 / 0.551e3 * eta ^ 2 + 0.401e3 / 0.6612e4 * eta ^ 4 - 0.2149e4 / 0.6612e4 - 0.2129e4 / 0.6612e4 * eta + 0.317e3 / 0.6612e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + f + 2 * g)) + 0.77e2 / 0.432e3 * (0.1e1 + eta) * ((-0.4339e4 / 0.231e3 - 0.5898e4 / 0.385e3 * eta + eta ^ 4 + 0.5774e4 / 0.1155e4 * eta ^ 3 + 0.5308e4 / 0.1155e4 * eta ^ 2) * ci2 ^ 8 + (0.16182e5 / 0.385e3 - 0.12976e5 / 0.1155e4 * eta ^ 3 - 0.10748e5 / 0.1155e4 * eta ^ 2 + 0.41744e5 / 0.1155e4 * eta - 0.802e3 / 0.385e3 * eta ^ 4) * ci2 ^ 6 + (-0.1876e4 / 0.55e2 + 0.976e3 / 0.105e3 * eta ^ 3 - 0.12112e5 / 0.385e3 * eta + 0.340e3 / 0.231e3 * eta ^ 4 + 0.512e3 / 0.77e2 * eta ^ 2) * ci2 ^ 4 + (-0.3814e4 / 0.1155e4 * eta ^ 3 + 0.1946e4 / 0.165e3 * eta - 0.31e2 / 0.77e2 * eta ^ 4 + 0.4531e4 / 0.385e3 - 0.2216e4 / 0.1155e4 * eta ^ 2) * ci2 ^ 2 + 0.2e1 / 0.5e1 * eta ^ 3 + 0.25e2 / 0.154e3 * eta ^ 2 + 0.57e2 / 0.1540e4 * eta ^ 4 - 0.6569e4 / 0.4620e4 - 0.54e2 / 0.35e2 * eta) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f)) - 0.31e2 / 0.1080e4 * (0.1e1 + eta) * ((eta ^ 3 - 0.298e3 / 0.93e2 * eta ^ 2 - 0.623e3 / 0.93e2 * eta - 0.40e2 / 0.93e2) * ci2 ^ 8 + (-0.70e2 / 0.31e2 * eta ^ 3 + 0.322e3 / 0.31e2 * eta ^ 2 + 0.678e3 / 0.31e2 * eta + 0.158e3 / 0.31e2) * ci2 ^ 6 + (0.164e3 / 0.93e2 * eta ^ 3 - 0.386e3 / 0.31e2 * eta ^ 2 - 0.2432e4 / 0.93e2 * eta - 0.854e3 / 0.93e2) * ci2 ^ 4 + (-0.17e2 / 0.31e2 * eta ^ 3 + 0.578e3 / 0.93e2 * eta ^ 2 + 0.1205e4 / 0.93e2 * eta + 0.512e3 / 0.93e2) * ci2 ^ 2 + 0.7e1 / 0.124e3 * eta ^ 3 - 0.379e3 / 0.372e3 * eta ^ 2 - 0.2347e4 / 0.1116e4 * eta - 0.361e3 / 0.372e3) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g - 2 * h + 3 * f)) - ((eta ^ 2 - 0.1378e4 / 0.9e1 * eta - 0.3295e4 / 0.9e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.1040e4 / 0.3e1 * eta + 0.2318e4 / 0.3e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 - 0.2600e4 / 0.9e1 * eta - 0.5156e4 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.310e3 / 0.3e1 * eta + 0.523e3 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.38e2 / 0.3e1 * eta - 0.223e3 / 0.12e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f)) / 0.720e3 + (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.734e3 / 0.45e2 * eta ^ 2 - 0.2359e4 / 0.45e2 * eta - 0.1652e4 / 0.45e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.110e3 / 0.3e1 * eta ^ 2 + 0.1694e4 / 0.15e2 * eta + 0.1162e4 / 0.15e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 - 0.272e3 / 0.9e1 * eta ^ 2 - 0.3908e4 / 0.45e2 * eta - 0.2584e4 / 0.45e2) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.32e2 / 0.3e1 * eta ^ 2 + 0.419e3 / 0.15e2 * eta + 0.262e3 / 0.15e2) * ci2 ^ 2 + eta ^ 3 / 0.36e2 - 0.233e3 / 0.180e3 * eta ^ 2 - 0.113e3 / 0.36e2 * eta - 0.67e2 / 0.36e2) * sin((2 * h + 5 * f + 2 * g)) / 0.72e2 + ci2 ^ 2 * (0.1e1 + eta) ^ 5 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((6 * g + 2 * h + 10 * f)) / 0.270e3 + ci2 ^ 2 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 ^ 2 + 0.1e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((2 * g - 2 * h + 8 * f)) / 0.3240e4 + 0.7e1 / 0.864e3 * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 7 * f)) + 0.283e3 / 0.1080e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.218e3 / 0.849e3 * eta - 0.2711e4 / 0.849e3) * ci2 ^ 4 + (-0.487e3 / 0.1698e4 * eta ^ 2 + 0.30e2 / 0.283e3 * eta + 0.1715e4 / 0.1698e4) * ci2 ^ 2 + 0.6e1 / 0.283e3 * eta ^ 2 - 0.6e1 / 0.283e3) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 7 * f)) + 0.103e3 / 0.27e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.91e2 / 0.103e3 * eta - 0.72e2 / 0.103e3) * ci2 ^ 4 + (-0.132e3 / 0.103e3 * eta ^ 2 - 0.117e3 / 0.103e3 * eta + 0.87e2 / 0.103e3) * ci2 ^ 2 + 0.73e2 / 0.206e3 * eta ^ 2 + 0.65e2 / 0.206e3 * eta - 0.22e2 / 0.103e3) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h - 2 * g + f)) - 0.143e3 / 0.1440e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.4564e4 / 0.429e3 * eta ^ 3 - 0.1618e4 / 0.429e3 * eta ^ 2 - 0.34388e5 / 0.429e3 * eta - 0.32875e5 / 0.429e3) * ci2 ^ 6 + (-0.461e3 / 0.429e3 * eta ^ 4 - 0.5696e4 / 0.429e3 * eta ^ 3 + 0.1238e4 / 0.429e3 * eta ^ 2 + 0.39328e5 / 0.429e3 * eta + 0.12365e5 / 0.143e3) * ci2 ^ 4 + (0.167e3 / 0.858e3 * eta ^ 4 + 0.640e3 / 0.143e3 * eta ^ 3 + 0.15e2 / 0.13e2 * eta ^ 2 - 0.3280e4 / 0.143e3 * eta - 0.5021e4 / 0.234e3) * ci2 ^ 2 + 0.14e2 / 0.1287e4 * (eta ^ 3 - 0.49e2 * eta ^ 2 - 0.123e3 / 0.7e1 * eta + 0.627e3 / 0.7e1) * (0.1e1 + eta)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f + 2 * g)) + 0.73e2 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((9 * f + 4 * g)) - 0.22e2 / 0.27e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) ^ 2 * cos((6 * f + 2 * g)) - 0.7e1 / 0.54e2 * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g - 2 * h + f)) + 0.40e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.133e3 / 0.120e3 * eta + 0.97e2 / 0.120e3) * ci2 ^ 6 + (-0.4e1 / 0.3e1 * eta ^ 2 - 0.589e3 / 0.400e3 * eta - 0.1187e4 / 0.1200e4) * ci2 ^ 4 + (0.253e3 / 0.480e3 * eta ^ 2 + 0.1387e4 / 0.2400e4 * eta + 0.77e2 / 0.240e3) * ci2 ^ 2 - 0.7e1 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.240e3 * eta - 0.1e1 / 0.32e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + f)) - 0.73e2 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 9 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f - 2 * g)) / 0.1440e4 - 0.7e1 / 0.864e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + 9 * f)) - (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 5 * f)) / 0.9e1 - 0.5e1 / 0.648e3 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h - 2 * g + f)) + (0.1e1 + eta) ^ 3 * ((eta + 0.13e2) * ci2 ^ 6 + (0.7e1 / 0.10e2 * eta - 0.167e3 / 0.10e2) * ci2 ^ 4 + (0.3e1 / 0.20e2 * eta + 0.117e3 / 0.20e2) * ci2 ^ 2 - 0.2e1 / 0.5e1 * eta - 0.3e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g + f)) / 0.54e2 - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((2 * h + 2 * f)) / 0.135e3 + 0.7e1 / 0.864e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g + 9 * f)) + 0.13e2 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 + 0.3e1 / 0.13e2 * eta + 0.48e2 / 0.13e2) * ci2 ^ 2 - eta ^ 2 + 0.7e1 / 0.26e2 * eta - 0.7e1 / 0.26e2) * sin((-2 * h + 5 * f + 2 * g)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f)) / 0.1440e4 - ((eta ^ 2 - 0.5e1 / 0.9e1 * eta - 0.86e2 / 0.9e1) * ci2 ^ 6 + (-0.209e3 / 0.180e3 * eta ^ 2 + 0.2e1 / 0.3e1 * eta + 0.1913e4 / 0.180e3) * ci2 ^ 4 + (0.13e2 / 0.40e2 * eta ^ 2 - eta / 0.5e1 - 0.101e3 / 0.40e2) * ci2 ^ 2 - eta ^ 2 / 0.45e2 + eta / 0.90e2 + 0.1e1 / 0.30e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f + 2 * g)) / 0.3e1 + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-2 * g + 2 * f)) / 0.135e3 - 0.23e2 / 0.27e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 6 + (-0.409e3 / 0.345e3 * eta ^ 2 - 0.497e3 / 0.690e3 * eta + 0.527e3 / 0.230e3) * ci2 ^ 4 + (0.473e3 / 0.1380e4 * eta ^ 2 + 0.287e3 / 0.1380e4 * eta - 0.151e3 / 0.230e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - 0.7e1 / 0.690e3 * eta + 0.3e1 / 0.92e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 3 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 + 0.13e2 / 0.18e2) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g - 2 * h + 7 * f)) / 0.360e3 + 0.5e1 / 0.648e3 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-4 * g + f)) + 0.403e3 / 0.4320e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 4 - 0.2544e4 / 0.403e3 * eta ^ 3 - 0.954e3 / 0.403e3 * eta ^ 2 + 0.3784e4 / 0.403e3 * eta + 0.639e3 / 0.403e3) * ci2 ^ 6 + (-0.419e3 / 0.403e3 * eta ^ 4 + 0.2576e4 / 0.403e3 * eta ^ 3 + 0.946e3 / 0.403e3 * eta ^ 2 - 0.3624e4 / 0.403e3 * eta - 0.327e3 / 0.403e3) * ci2 ^ 4 + (0.157e3 / 0.806e3 * eta ^ 4 - 0.2272e4 / 0.1209e4 * eta ^ 3 - 0.191e3 / 0.403e3 * eta ^ 2 + 0.3164e4 / 0.1209e4 * eta + 0.187e3 / 0.2418e4) * ci2 ^ 2 + eta ^ 4 / 0.403e3 + 0.218e3 / 0.1209e4 * eta ^ 3 + 0.8e1 / 0.1209e4 * eta ^ 2 - 0.118e3 / 0.403e3 * eta - 0.17e2 / 0.403e3) * sin((2 * h + f)) - 0.47e2 / 0.1620e4 * ((eta ^ 2 - 0.11e2 / 0.47e2 * eta - 0.407e3 / 0.47e2) * ci2 ^ 4 + (-0.13e2 / 0.47e2 * eta ^ 2 + 0.5e1 / 0.47e2 * eta + 0.130e3 / 0.47e2) * ci2 ^ 2 + eta ^ 2 / 0.47e2 - 0.1e1 / 0.47e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sin((8 * f + 4 * g)) + 0.7e1 / 0.135e3 * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((8 * f + 2 * g)) - ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((-4 * g - 2 * h + 2 * f)) / 0.216e3 - 0.233e3 / 0.162e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.1783e4 / 0.1165e4 * eta ^ 3 - 0.1143e4 / 0.1165e4 * eta ^ 2 - 0.753e3 / 0.233e3 * eta - 0.2224e4 / 0.1165e4) * ci2 ^ 4 + (-0.1489e4 / 0.4660e4 * eta ^ 4 - 0.461e3 / 0.932e3 * eta ^ 3 + 0.1441e4 / 0.4660e4 * eta ^ 2 + 0.961e3 / 0.932e3 * eta + 0.707e3 / 0.1165e4) * ci2 ^ 2 + 0.13e2 / 0.466e3 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2)) * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 5 * f)) + 0.8e1 / 0.135e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 3 + 0.21e2 / 0.64e2 * eta ^ 2 - 0.55e2 / 0.16e2 * eta - 0.157e3 / 0.64e2) * ci2 ^ 6 + (-eta ^ 3 - 0.21e2 / 0.64e2 * eta ^ 2 + 0.51e2 / 0.16e2 * eta + 0.141e3 / 0.64e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.11e2 / 0.128e3 * eta ^ 2 - 0.103e3 / 0.96e2 * eta - 0.265e3 / 0.384e3) * ci2 ^ 2 - eta ^ 3 / 0.24e2 - eta ^ 2 / 0.192e3 + 0.5e1 / 0.32e2 * eta + 0.19e2 / 0.192e3) * sin((2 * h + 2 * f)) + 0.41e2 / 0.135e3 * ((eta ^ 5 + 0.355e3 / 0.164e3 * eta ^ 4 + 0.203e3 / 0.82e2 * eta ^ 3 + 0.446e3 / 0.41e2 * eta ^ 2 + 0.1069e4 / 0.82e2 * eta + 0.489e3 / 0.164e3) * ci2 ^ 6 + (-0.151e3 / 0.123e3 * eta ^ 5 - 0.1361e4 / 0.492e3 * eta ^ 4 - 0.323e3 / 0.82e2 * eta ^ 3 - 0.1669e4 / 0.123e3 * eta ^ 2 - 0.3571e4 / 0.246e3 * eta - 0.461e3 / 0.164e3) * ci2 ^ 4 + (eta ^ 5 / 0.3e1 + 0.907e3 / 0.984e3 * eta ^ 4 + 0.1073e4 / 0.492e3 * eta ^ 3 + 0.1181e4 / 0.246e3 * eta ^ 2 + 0.555e3 / 0.164e3 * eta + 0.37e2 / 0.984e3) * ci2 ^ 2 - eta ^ 5 / 0.164e3 - 0.29e2 / 0.492e3 * eta ^ 4 - 0.77e2 / 0.246e3 * eta ^ 3 - 0.109e3 / 0.246e3 * eta ^ 2 - 0.7e1 / 0.492e3 * eta + 0.29e2 / 0.164e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-2 * h + 2 * f)) + 0.148e3 / 0.27e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.18e2 / 0.37e2 * eta ^ 2 - 0.45e2 / 0.37e2 * eta - 0.44e2 / 0.37e2) * ci2 ^ 6 + (-0.419e3 / 0.370e3 * eta ^ 3 - 0.21e2 / 0.37e2 * eta ^ 2 + 0.507e3 / 0.370e3 * eta + 0.248e3 / 0.185e3) * ci2 ^ 4 + (0.427e3 / 0.1480e4 * eta ^ 3 + 0.237e3 / 0.1480e4 * eta ^ 2 - 0.507e3 / 0.1480e4 * eta - 0.497e3 / 0.1480e4) * ci2 ^ 2 - 0.3e1 / 0.296e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((2 * h + 4 * f + 4 * g)) + 0.2e1 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.19e2 * eta ^ 2 + 0.25e2 / 0.3e1 * eta - 0.125e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 3 / 0.15e2 - 0.23e2 * eta ^ 2 - 0.187e3 / 0.15e2 * eta + 0.737e3 / 0.15e2) * ci2 ^ 4 + (-0.14e2 / 0.15e2 * eta ^ 3 + 0.36e2 / 0.5e1 * eta ^ 2 + 0.88e2 / 0.15e2 * eta - 0.72e2 / 0.5e1) * ci2 ^ 2 + 0.2e1 / 0.5e1 * eta ^ 3 - 0.3e1 / 0.5e1 * eta ^ 2 - 0.16e2 / 0.15e2 * eta + 0.1e1) * Delta * cos((2 * g + 2 * f)) + (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((2 * h + 4 * f)) / 0.135e3 - 0.142e3 / 0.27e2 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * ((eta ^ 4 + 0.157e3 / 0.142e3 * eta ^ 3 - 0.379e3 / 0.142e3 * eta ^ 2 - 0.505e3 / 0.142e3 * eta - 0.135e3 / 0.142e3) * ci2 ^ 4 + (-0.171e3 / 0.142e3 * eta ^ 4 - 0.189e3 / 0.142e3 * eta ^ 3 + 0.417e3 / 0.142e3 * eta ^ 2 + 0.561e3 / 0.142e3 * eta + 0.75e2 / 0.71e2) * ci2 ^ 2 + 0.43e2 / 0.142e3 * eta ^ 4 + 0.95e2 / 0.284e3 * eta ^ 3 - 0.177e3 / 0.284e3 * eta ^ 2 - 0.243e3 / 0.284e3 * eta - 0.65e2 / 0.284e3) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + f + 2 * g)) - 0.143e3 / 0.135e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.675e3 / 0.572e3 * eta ^ 4 - 0.43e2 / 0.858e3 * eta ^ 3 - 0.712e3 / 0.429e3 * eta ^ 2 - 0.5389e4 / 0.858e3 * eta - 0.2583e4 / 0.572e3) * ci2 ^ 6 + (-0.197e3 / 0.143e3 * eta ^ 5 - 0.1083e4 / 0.572e3 * eta ^ 4 + 0.85e2 / 0.286e3 * eta ^ 3 + 0.551e3 / 0.143e3 * eta ^ 2 + 0.241e3 / 0.26e2 * eta + 0.3395e4 / 0.572e3) * ci2 ^ 4 + (0.83e2 / 0.143e3 * eta ^ 5 + 0.313e3 / 0.312e3 * eta ^ 4 - 0.149e3 / 0.572e3 * eta ^ 3 - 0.745e3 / 0.286e3 * eta ^ 2 - 0.7099e4 / 0.1716e4 * eta - 0.7531e4 / 0.3432e4) * ci2 ^ 2 - 0.157e3 / 0.1716e4 * eta ^ 5 - 0.305e3 / 0.1716e4 * eta ^ 4 + 0.20e2 / 0.143e3 * eta ^ 3 + 0.283e3 / 0.429e3 * eta ^ 2 + 0.1241e4 / 0.1716e4 * eta + 0.509e3 / 0.1716e4) * sin((2 * h + 2 * f + 4 * g)) + 0.2e1 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.71e2 / 0.45e2 * eta ^ 3 - 0.6e1 / 0.5e1 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.52e2 / 0.45e2) * ci2 ^ 4 + (0.97e2 / 0.180e3 * eta ^ 3 + 0.7e1 / 0.20e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.59e2 / 0.180e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * cos((2 * h)) + 0.212e3 / 0.405e3 * ((eta ^ 4 + 0.1109e4 / 0.848e3 * eta ^ 3 - 0.220e3 / 0.53e2 * eta ^ 2 - 0.6793e4 / 0.848e3 * eta - 0.571e3 / 0.106e3) * ci2 ^ 4 + (-0.79e2 / 0.212e3 * eta ^ 4 - 0.411e3 / 0.848e3 * eta ^ 3 + 0.1191e4 / 0.848e3 * eta ^ 2 + 0.2299e4 / 0.848e3 * eta + 0.1505e4 / 0.848e3) * ci2 ^ 2 + 0.21e2 / 0.424e3 * eta ^ 4 + 0.27e2 / 0.424e3 * eta ^ 3 - 0.55e2 / 0.424e3 * eta ^ 2 - 0.109e3 / 0.424e3 * eta - 0.15e2 / 0.106e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((6 * g + 2 * h + 4 * f)) - 0.11e2 / 0.135e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.1415e4 / 0.88e2 * eta ^ 4 + 0.1465e4 / 0.33e2 * eta ^ 3 - 0.4441e4 / 0.132e3 * eta ^ 2 - 0.6344e4 / 0.33e2 * eta - 0.11713e5 / 0.88e2) * ci2 ^ 6 + (-0.25e2 / 0.33e2 * eta ^ 5 - 0.4693e4 / 0.264e3 * eta ^ 4 - 0.1883e4 / 0.33e2 * eta ^ 3 + 0.3805e4 / 0.132e3 * eta ^ 2 + 0.7250e4 / 0.33e2 * eta + 0.13609e5 / 0.88e2) * ci2 ^ 4 + (-0.3e1 / 0.11e2 * eta ^ 5 + 0.173e3 / 0.48e2 * eta ^ 4 + 0.1345e4 / 0.66e2 * eta ^ 3 + 0.725e3 / 0.264e3 * eta ^ 2 - 0.3623e4 / 0.66e2 * eta - 0.22057e5 / 0.528e3) * ci2 ^ 2 + 0.17e2 / 0.88e2 * (eta ^ 4 + 0.4e1 / 0.51e2 * eta ^ 3 - 0.230e3 / 0.17e2 * eta ^ 2 - 0.184e3 / 0.51e2 * eta + 0.715e3 / 0.51e2) * (0.1e1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((2 * g + 4 * f)) - 0.4e1 / 0.81e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.1251e4 / 0.80e2 * eta ^ 3 + 0.2001e4 / 0.80e2 * eta ^ 2 - 0.435e3 / 0.16e2 * eta - 0.2957e4 / 0.80e2) * ci2 ^ 4 + (-0.17e2 / 0.160e3 * eta ^ 4 - 0.447e3 / 0.80e2 * eta ^ 3 - 0.57e2 / 0.5e1 * eta ^ 2 + 0.111e3 / 0.16e2 * eta + 0.397e3 / 0.32e2) * ci2 ^ 2 - 0.3e1 / 0.80e2 * (eta - 0.1e1) * (0.1e1 + eta) * (eta ^ 2 - 0.16e2 * eta - 0.37e2)) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f + 4 * g)) - 0.56e2 / 0.27e2 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * ((eta ^ 4 + 0.59e2 / 0.14e2 * eta ^ 3 + 0.109e3 / 0.14e2 * eta ^ 2 + 0.93e2 / 0.14e2 * eta + 0.31e2 / 0.14e2) * ci2 ^ 4 + (-eta ^ 4 - 0.61e2 / 0.14e2 * eta ^ 3 - 0.58e2 / 0.7e1 * eta ^ 2 - 0.103e3 / 0.14e2 * eta - 0.18e2 / 0.7e1) * ci2 ^ 2 + eta ^ 4 / 0.6e1 + 0.67e2 / 0.84e2 * eta ^ 3 + 0.137e3 / 0.84e2 * eta ^ 2 + 0.19e2 / 0.12e2 * eta + 0.17e2 / 0.28e2) * cos((2 * g + 2 * h)) - 0.35e2 / 0.81e2 * ((eta ^ 3 + 0.269e3 / 0.350e3 * eta ^ 2 - 0.621e3 / 0.350e3 * eta - 0.68e2 / 0.35e2) * ci2 ^ 4 + (-0.43e2 / 0.140e3 * eta ^ 3 - 0.327e3 / 0.1400e4 * eta ^ 2 + 0.387e3 / 0.700e3 * eta + 0.851e3 / 0.1400e4) * ci2 ^ 2 + 0.9e1 / 0.700e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 7 * f)) + 0.163e3 / 0.540e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.757e3 / 0.489e3 * eta ^ 3 - 0.1311e4 / 0.163e3 * eta ^ 2 + 0.1273e4 / 0.489e3 * eta + 0.4400e4 / 0.489e3) * ci2 ^ 4 + (-0.331e3 / 0.978e3 * eta ^ 4 + 0.259e3 / 0.489e3 * eta ^ 3 + 0.1280e4 / 0.489e3 * eta ^ 2 - 0.415e3 / 0.489e3 * eta - 0.2821e4 / 0.978e3) * ci2 ^ 2 + 0.25e2 / 0.489e3 * (0.1e1 + eta) * (eta ^ 3 - 0.39e2 / 0.25e2 * eta ^ 2 - 0.77e2 / 0.25e2 * eta + 0.83e2 / 0.25e2)) * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f + 4 * g)) - (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((4 * f - 2 * g)) / 0.135e3 - 0.89e2 / 0.3240e4 * (0.1e1 + eta) ^ 4 * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * sin((6 * g + 2 * h)) + 0.161e3 / 0.324e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.979e3 / 0.805e3 * eta + 0.41e2 / 0.23e2) * ci2 ^ 4 + (-0.359e3 / 0.805e3 * eta ^ 2 - 0.429e3 / 0.805e3 * eta - 0.533e3 / 0.805e3) * ci2 ^ 2 + 0.8e1 / 0.115e3 * eta ^ 2 + 0.66e2 / 0.805e3 * eta + 0.64e2 / 0.805e3) * sin((6 * g + 2 * h + 2 * f)) + 0.17e2 / 0.360e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 + 0.13e2 / 0.17e2 * eta ^ 2 - 0.791e3 / 0.153e3 * eta - 0.815e3 / 0.153e3) * ci2 ^ 4 + (-0.47e2 / 0.153e3 * eta ^ 3 - 0.35e2 / 0.153e3 * eta ^ 2 + 0.251e3 / 0.153e3 * eta + 0.259e3 / 0.153e3) * ci2 ^ 2 + 0.2e1 / 0.153e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * sin((6 * g + 2 * h + 8 * f)) + 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * cos((4 * f)) + 0.7e1 / 0.135e3 * ((eta ^ 2 + 0.191e3 / 0.56e2 * eta + 0.113e3 / 0.56e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.91e2 / 0.24e2 * eta - 0.53e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.37e2 / 0.48e2 * eta + 0.125e3 / 0.336e3) * ci2 ^ 2 - eta ^ 2 / 0.84e2 + eta / 0.24e2 + 0.3e1 / 0.56e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((-2 * h + 6 * f)) + 0.65e2 / 0.216e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.4231e4 / 0.325e3 * eta ^ 4 + 0.4626e4 / 0.325e3 * eta ^ 3 - 0.10754e5 / 0.975e3 * eta ^ 2 - 0.34277e5 / 0.975e3 * eta - 0.27587e5 / 0.975e3) * ci2 ^ 6 + (-0.223e3 / 0.195e3 * eta ^ 5 - 0.16387e5 / 0.975e3 * eta ^ 4 - 0.19088e5 / 0.975e3 * eta ^ 3 + 0.4668e4 / 0.325e3 * eta ^ 2 + 0.1787e4 / 0.39e2 * eta + 0.11277e5 / 0.325e3) * ci2 ^ 4 + (0.193e3 / 0.650e3 * eta ^ 5 + 0.2389e4 / 0.390e3 * eta ^ 4 + 0.2632e4 / 0.325e3 * eta ^ 3 - 0.1652e4 / 0.325e3 * eta ^ 2 - 0.32299e5 / 0.1950e4 * eta - 0.7171e4 / 0.650e3) * ci2 ^ 2 - 0.19e2 / 0.650e3 * eta ^ 5 - 0.1627e4 / 0.1950e4 * eta ^ 4 - 0.79e2 / 0.65e2 * eta ^ 3 + 0.763e3 / 0.975e3 * eta ^ 2 + 0.4307e4 / 0.1950e4 * eta + 0.2269e4 / 0.1950e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 3 * f + 4 * g)) + 0.347e3 / 0.4320e4 * ((eta ^ 5 + 0.12643e5 / 0.347e3 * eta ^ 4 + 0.22950e5 / 0.347e3 * eta ^ 3 - 0.14226e5 / 0.347e3 * eta ^ 2 - 0.51281e5 / 0.347e3 * eta - 0.30625e5 / 0.347e3) * ci2 ^ 6 + (-0.363e3 / 0.347e3 * eta ^ 5 - 0.14931e5 / 0.347e3 * eta ^ 4 - 0.26782e5 / 0.347e3 * eta ^ 3 + 0.16410e5 / 0.347e3 * eta ^ 2 + 0.59001e5 / 0.347e3 * eta + 0.34601e5 / 0.347e3) * ci2 ^ 4 + (0.101e3 / 0.694e3 * eta ^ 5 + 0.25351e5 / 0.2082e4 * eta ^ 4 + 0.22715e5 / 0.1041e4 * eta ^ 3 - 0.12257e5 / 0.1041e4 * eta ^ 2 - 0.93077e5 / 0.2082e4 * eta - 0.52405e5 / 0.2082e4) * ci2 ^ 2 + 0.23e2 / 0.1041e4 * (eta ^ 4 - 0.870e3 / 0.23e2 * eta ^ 3 - 0.872e3 / 0.23e2 * eta ^ 2 + 0.1214e4 / 0.23e2 * eta + 0.1385e4 / 0.23e2) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f + 4 * g)) + 0.967e3 / 0.12960e5 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.6411e4 / 0.967e3 * eta ^ 4 - 0.15834e5 / 0.967e3 * eta ^ 3 + 0.16698e5 / 0.967e3 * eta ^ 2 + 0.44707e5 / 0.967e3 * eta + 0.19329e5 / 0.967e3) * ci2 ^ 6 + (-0.1271e4 / 0.967e3 * eta ^ 5 + 0.6491e4 / 0.967e3 * eta ^ 4 + 0.16482e5 / 0.967e3 * eta ^ 3 - 0.18658e5 / 0.967e3 * eta ^ 2 - 0.48219e5 / 0.967e3 * eta - 0.20617e5 / 0.967e3) * ci2 ^ 4 + (0.1093e4 / 0.1934e4 * eta ^ 5 - 0.937e3 / 0.1934e4 * eta ^ 4 - 0.1875e4 / 0.967e3 * eta ^ 3 + 0.4635e4 / 0.967e3 * eta ^ 2 + 0.51539e5 / 0.5802e4 * eta + 0.6115e4 / 0.1934e4) * ci2 ^ 2 - 0.66e2 / 0.967e3 * (0.1e1 + eta) * (eta ^ 4 + 0.112e3 / 0.33e2 * eta ^ 3 + 0.62e2 / 0.11e2 * eta ^ 2 - 0.100e3 / 0.33e2 * eta - 0.287e3 / 0.33e2)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 3 * f)) + (0.1e1 + eta) * ((eta ^ 4 - 0.70e2 / 0.9e1 * eta ^ 2 + 0.23e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 4 + 0.2e1 / 0.9e1 * eta ^ 3 + 0.8e1 * eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.79e2 / 0.9e1) * ci2 ^ 2 + eta ^ 4 / 0.6e1 - 0.4e1 / 0.27e2 * eta ^ 3 - 0.13e2 / 0.9e1 * eta ^ 2 + 0.20e2 / 0.27e2 * eta + 0.109e3 / 0.54e2) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * cos(f) + 0.295e3 / 0.864e3 * ((eta ^ 5 - 0.9591e4 / 0.1475e4 * eta ^ 4 - 0.38322e5 / 0.1475e4 * eta ^ 3 - 0.33294e5 / 0.1475e4 * eta ^ 2 + 0.179e3 / 0.295e3 * eta + 0.6837e4 / 0.1475e4) * ci2 ^ 6 + (-0.1971e4 / 0.1475e4 * eta ^ 5 + 0.11271e5 / 0.1475e4 * eta ^ 4 + 0.44394e5 / 0.1475e4 * eta ^ 3 + 0.35446e5 / 0.1475e4 * eta ^ 2 - 0.5863e4 / 0.1475e4 * eta - 0.10061e5 / 0.1475e4) * ci2 ^ 4 + (0.1529e4 / 0.2950e4 * eta ^ 5 - 0.19559e5 / 0.8850e4 * eta ^ 4 - 0.38101e5 / 0.4425e4 * eta ^ 3 - 0.955e3 / 0.177e3 * eta ^ 2 + 0.31343e5 / 0.8850e4 * eta + 0.26941e5 / 0.8850e4) * ci2 ^ 2 - 0.406e3 / 0.4425e4 * (0.1e1 + eta) * (eta ^ 4 - 0.204e3 / 0.203e3 * eta ^ 3 - 0.498e3 / 0.203e3 * eta ^ 2 + 0.984e3 / 0.203e3 * eta + 0.1123e4 / 0.203e3)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + f)) - 0.163e3 / 0.405e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 4 + 0.2957e4 / 0.1304e4 * eta ^ 3 - 0.6291e4 / 0.1304e4 * eta ^ 2 - 0.17737e5 / 0.1304e4 * eta - 0.10849e5 / 0.1304e4) * ci2 ^ 6 + (-0.193e3 / 0.163e3 * eta ^ 4 - 0.3357e4 / 0.1304e4 * eta ^ 3 + 0.7203e4 / 0.1304e4 * eta ^ 2 + 0.19897e5 / 0.1304e4 * eta + 0.11937e5 / 0.1304e4) * ci2 ^ 4 + (0.55e2 / 0.163e3 * eta ^ 4 + 0.1787e4 / 0.2608e4 * eta ^ 3 - 0.3573e4 / 0.2608e4 * eta ^ 2 - 0.9647e4 / 0.2608e4 * eta - 0.5519e4 / 0.2608e4) * ci2 ^ 2 - 0.41e2 / 0.1956e4 * (eta ^ 3 + 0.105e3 / 0.82e2 * eta ^ 2 - 0.116e3 / 0.41e2 * eta - 0.267e3 / 0.82e2) * (0.1e1 + eta)) * sin((2 * h + 6 * f + 4 * g)) + 0.58e2 / 0.405e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 - 0.13e2 / 0.58e2 * eta ^ 2 - 0.2177e4 / 0.116e3 * eta - 0.2797e4 / 0.116e3) * ci2 ^ 6 + (-0.36e2 / 0.29e2 * eta ^ 3 + 0.9e1 / 0.58e2 * eta ^ 2 + 0.2477e4 / 0.116e3 * eta + 0.3077e4 / 0.116e3) * ci2 ^ 4 + (0.12e2 / 0.29e2 * eta ^ 3 + 0.9e1 / 0.58e2 * eta ^ 2 - 0.1217e4 / 0.232e3 * eta - 0.1411e4 / 0.232e3) * ci2 ^ 2 - 0.4e1 / 0.87e2 * eta ^ 3 - eta ^ 2 / 0.12e2 + 0.47e2 / 0.348e3 * eta + 0.5e1 / 0.29e2) * sin((6 * f + 2 * g)) + 0.61e2 / 0.360e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.787e3 / 0.61e2 * eta ^ 4 + 0.1278e4 / 0.61e2 * eta ^ 3 - 0.4030e4 / 0.183e3 * eta ^ 2 - 0.6481e4 / 0.183e3 * eta - 0.57e2 / 0.61e2) * ci2 ^ 6 + (-0.81e2 / 0.61e2 * eta ^ 5 - 0.1017e4 / 0.61e2 * eta ^ 4 - 0.4544e4 / 0.183e3 * eta ^ 3 + 0.5164e4 / 0.183e3 * eta ^ 2 + 0.2537e4 / 0.61e2 * eta - 0.25e2 / 0.183e3) * ci2 ^ 4 + (0.227e3 / 0.366e3 * eta ^ 5 + 0.6463e4 / 0.1098e4 * eta ^ 4 + 0.3790e4 / 0.549e3 * eta ^ 3 - 0.5582e4 / 0.549e3 * eta ^ 2 - 0.4367e4 / 0.366e3 * eta + 0.1109e4 / 0.1098e4) * ci2 ^ 2 - 0.11e2 / 0.122e3 * eta ^ 5 - 0.521e3 / 0.1098e4 * eta ^ 4 - 0.17e2 / 0.61e2 * eta ^ 3 + 0.161e3 / 0.183e3 * eta ^ 2 + 0.653e3 / 0.1098e4 * eta - 0.29e2 / 0.122e3) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + f)) - 0.7e1 / 0.135e3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * sin((4 * g + 2 * h + 8 * f)) - 0.4e1 / 0.45e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta - 0.1e1) * (eta ^ 2 + 0.11e2 / 0.4e1 * eta + 0.41e2 / 0.24e2) * ci2 ^ 6 + (-eta ^ 3 - 0.7e1 / 0.4e1 * eta ^ 2 + 0.7e1 / 0.8e1 * eta + 0.37e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.7e1 / 0.12e2 * eta ^ 2 - 0.35e2 / 0.144e3 * eta - 0.23e2 / 0.48e2) * ci2 ^ 2 - (eta + 0.5e1 / 0.3e1) * (0.1e1 + eta) * (eta - 0.1e1) / 0.24e2) * sin((-2 * g + 2 * f)) + 0.742e3 / 0.405e3 * (0.1e1 + eta) * ((eta ^ 4 + 0.18369e5 / 0.5936e4 * eta ^ 3 + 0.17687e5 / 0.5936e4 * eta ^ 2 + 0.4323e4 / 0.5936e4 * eta - 0.835e3 / 0.5936e4) * ci2 ^ 6 + (-0.993e3 / 0.742e3 * eta ^ 4 - 0.24233e5 / 0.5936e4 * eta ^ 3 - 0.3253e4 / 0.848e3 * eta ^ 2 - 0.4859e4 / 0.5936e4 * eta + 0.1527e4 / 0.5936e4) * ci2 ^ 4 + (0.393e3 / 0.742e3 * eta ^ 4 + 0.18931e5 / 0.11872e5 * eta ^ 3 + 0.17197e5 / 0.11872e5 * eta ^ 2 + 0.2777e4 / 0.11872e5 * eta - 0.1745e4 / 0.11872e5) * ci2 ^ 2 - 0.1231e4 / 0.17808e5 * eta ^ 4 - 0.89e2 / 0.424e3 * eta ^ 3 - 0.68e2 / 0.371e3 * eta ^ 2 - 0.29e2 / 0.2226e4 * eta + 0.25e2 / 0.848e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((4 * g + 2 * h)) - 0.17e2 / 0.1620e4 * ((eta ^ 5 - 0.16e2 / 0.17e2 * eta ^ 4 + 0.177e3 / 0.17e2 * eta ^ 3 - 0.79e2 / 0.17e2 * eta ^ 2 - 0.394e3 / 0.17e2 * eta + 0.267e3 / 0.17e2) * ci2 ^ 2 - 0.7e1 / 0.17e2 * eta ^ 5 + 0.8e1 / 0.17e2 * eta ^ 4 - 0.93e2 / 0.17e2 * eta ^ 3 + 0.29e2 / 0.17e2 * eta ^ 2 + 0.184e3 / 0.17e2 * eta - 0.133e3 / 0.17e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-2 * h + 2 * g + 2 * f)) + 0.8e1 / 0.3e1 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * ((eta ^ 2 - 0.5e1 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 + eta / 0.6e1 + 0.11e2 / 0.6e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - eta / 0.9e1 - 0.7e1 / 0.18e2) * cos((2 * f)) + 0.34e2 / 0.135e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.925e3 / 0.272e3 * eta ^ 3 - 0.365e3 / 0.272e3 * eta ^ 2 - 0.2409e4 / 0.272e3 * eta - 0.1311e4 / 0.272e3) * ci2 ^ 6 + (-0.61e2 / 0.51e2 * eta ^ 4 - 0.1077e4 / 0.272e3 * eta ^ 3 + 0.377e3 / 0.272e3 * eta ^ 2 + 0.7955e4 / 0.816e3 * eta + 0.1443e4 / 0.272e3) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.551e3 / 0.544e3 * eta ^ 3 - 0.349e3 / 0.1632e4 * eta ^ 2 - 0.3121e4 / 0.1632e4 * eta - 0.1583e4 / 0.1632e4) * ci2 ^ 2 - 0.3e1 / 0.272e3 * (eta ^ 3 + eta ^ 2 / 0.9e1 + 0.5e1 / 0.3e1 * eta + 0.9e1) * (0.1e1 + eta)) * (eta - 0.1e1) ^ 2 * sin((-2 * h + 4 * f)) - 0.23e2 / 0.486e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 4 - 0.167e3 / 0.115e3 * eta ^ 3 - 0.512e3 / 0.23e2 * eta ^ 2 + 0.731e3 / 0.115e3 * eta + 0.4443e4 / 0.115e3) * ci2 ^ 4 + (-0.7e1 / 0.23e2 * eta ^ 4 + 0.61e2 / 0.115e3 * eta ^ 3 + 0.777e3 / 0.115e3 * eta ^ 2 - 0.54e2 / 0.23e2 * eta - 0.1407e4 / 0.115e3) * ci2 ^ 2 + 0.6e1 / 0.115e3 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.2e1 * eta ^ 2 - 0.53e2 / 0.6e1 * eta + 0.9e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((6 * f + 4 * g)) + 0.14e2 / 0.135e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 4 + 0.179e3 / 0.84e2 * eta ^ 3 + 0.25e2 / 0.14e2 * eta ^ 2 - 0.205e3 / 0.28e2 * eta - 0.146e3 / 0.21e2) * ci2 ^ 4 + (-0.17e2 / 0.42e2 * eta ^ 4 - 0.73e2 / 0.84e2 * eta ^ 3 - 0.127e3 / 0.84e2 * eta ^ 2 + 0.40e2 / 0.21e2 * eta + 0.50e2 / 0.21e2) * ci2 ^ 2 + (0.1e1 + eta) * (eta ^ 3 + 0.5e1 / 0.2e1 * eta ^ 2 + eta / 0.2e1 - 0.16e2) / 0.42e2) * sin((2 * f + 4 * g)) - (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.49e2 * eta + 0.31e2) * ci2 ^ 4 + (-0.7e1 * eta ^ 2 + 0.15e2 * eta - 0.14e2) * ci2 ^ 2 - 0.3e1 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * sin((4 * g)) / 0.1620e4 + 0.233e3 / 0.405e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.5909e4 / 0.1864e4 * eta ^ 4 - 0.135e3 / 0.233e3 * eta ^ 3 - 0.4073e4 / 0.932e3 * eta ^ 2 - 0.268e3 / 0.233e3 * eta + 0.829e3 / 0.1864e4) * ci2 ^ 6 + (-0.286e3 / 0.233e3 * eta ^ 5 - 0.6781e4 / 0.1864e4 * eta ^ 4 + 0.107e3 / 0.233e3 * eta ^ 3 + 0.3965e4 / 0.932e3 * eta ^ 2 + 0.193e3 / 0.233e3 * eta - 0.989e3 / 0.1864e4) * ci2 ^ 4 + (0.80e2 / 0.233e3 * eta ^ 5 + 0.3135e4 / 0.3728e4 * eta ^ 4 - 0.133e3 / 0.1398e4 * eta ^ 3 - 0.2849e4 / 0.5592e4 * eta ^ 2 + 0.485e3 / 0.1398e4 * eta + 0.967e3 / 0.3728e4) * ci2 ^ 2 + 0.31e2 / 0.5592e4 * (0.1e1 + eta) * (eta ^ 4 + 0.172e3 / 0.31e2 * eta ^ 3 - 0.562e3 / 0.31e2 * eta ^ 2 - 0.1288e4 / 0.31e2 * eta - 0.393e3 / 0.31e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((2 * g)) - 0.19e2 / 0.27e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.8e1 / 0.19e2 * eta ^ 2 - 0.51e2 / 0.19e2 * eta - 0.44e2 / 0.19e2) * ci2 ^ 4 + (-0.20e2 / 0.19e2 * eta ^ 3 - 0.9e1 / 0.19e2 * eta ^ 2 + 0.52e2 / 0.19e2 * eta + 0.45e2 / 0.19e2) * ci2 ^ 2 + 0.23e2 / 0.114e3 * eta ^ 3 + 0.2e1 / 0.19e2 * eta ^ 2 - 0.55e2 / 0.114e3 * eta - 0.8e1 / 0.19e2) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f)) / 0.540e3 - 0.5e1 / 0.54e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 7 * f)) + 0.5e1 / 0.54e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + 7 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f - 2 * g)) / 0.540e3 + 0.379e3 / 0.1620e4 * (ci2 ^ 4 - 0.609e3 / 0.1516e4 * ci2 ^ 2 + 0.21e2 / 0.379e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + f)) - 0.169e3 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.6e1 / 0.169e3 * eta ^ 2 - 0.283e3 / 0.169e3 * eta + 0.192e3 / 0.169e3) * ci2 ^ 2 - 0.73e2 / 0.169e3 * eta ^ 3 + eta ^ 2 / 0.338e3 + 0.109e3 / 0.169e3 * eta - 0.181e3 / 0.338e3) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + f + 2 * g)) - 0.11e2 / 0.432e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.39e2 / 0.55e2 * eta ^ 2 - 0.63e2 / 0.55e2 * eta - 0.39e2 / 0.55e2) * ci2 ^ 6 + (-0.47e2 / 0.55e2 * eta ^ 3 + 0.27e2 / 0.55e2 * eta ^ 2 + 0.179e3 / 0.55e2 * eta + 0.97e2 / 0.55e2) * ci2 ^ 4 + (0.23e2 / 0.110e3 * eta ^ 3 - 0.19e2 / 0.22e2 * eta ^ 2 - 0.157e3 / 0.66e2 * eta - 0.141e3 / 0.110e3) * ci2 ^ 2 - 0.19e2 / 0.330e3 * (eta ^ 2 - 0.4e1 * eta - 0.99e2 / 0.19e2) * (0.1e1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-4 * g - 2 * h + f)) - 0.5e1 / 0.864e3 * ((eta ^ 2 + 0.2356e4 / 0.25e2 * eta + 0.4167e4 / 0.25e2) * ci2 ^ 6 + (-eta ^ 2 - 0.2672e4 / 0.25e2 * eta - 0.4483e4 / 0.25e2) * ci2 ^ 4 + (-eta ^ 2 / 0.10e2 + 0.1948e4 / 0.75e2 * eta + 0.5747e4 / 0.150e3) * ci2 ^ 2 + 0.2e1 / 0.15e2 * eta ^ 2 - 0.12e2 / 0.25e2 * eta - 0.46e2 / 0.75e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g + 7 * f)) - 0.8e1 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 6 + (-0.421e3 / 0.360e3 * eta ^ 2 - 0.26e2 / 0.45e2 * eta + 0.349e3 / 0.360e3) * ci2 ^ 4 + (0.241e3 / 0.720e3 * eta ^ 2 + 0.59e2 / 0.360e3 * eta - 0.199e3 / 0.720e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - eta / 0.120e3 + 0.1e1 / 0.72e2) * cos((-2 * h + 2 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f)) / 0.18e2 + 0.10e2 / 0.27e2 * ((0.1e1 + eta) * (eta + 0.23e2 / 0.5e1) * ci2 ^ 6 + (-0.12e2 / 0.25e2 * eta ^ 2 - 0.31e2 / 0.5e1 * eta - 0.141e3 / 0.25e2) * ci2 ^ 4 + (0.9e1 / 0.50e2 * eta ^ 2 + 0.52e2 / 0.25e2 * eta + 0.93e2 / 0.50e2) * ci2 ^ 2 - 0.3e1 / 0.25e2 * eta ^ 2 - 0.3e1 / 0.10e2 * eta - 0.9e1 / 0.50e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((2 * g)) - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((10 * f + 4 * g)) / 0.270e3 + 0.2e1 / 0.9e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 4 + 0.11e2 / 0.2e1 * eta ^ 3 + 0.403e3 / 0.18e2 * eta ^ 2 - 0.335e3 / 0.18e2 * eta - 0.275e3 / 0.6e1) * ci2 ^ 6 + (-0.157e3 / 0.180e3 * eta ^ 4 - 0.286e3 / 0.45e2 * eta ^ 3 - 0.487e3 / 0.18e2 * eta ^ 2 + 0.190e3 / 0.9e1 * eta + 0.1059e4 / 0.20e2) * ci2 ^ 4 + (-0.23e2 / 0.360e3 * eta ^ 4 + 0.151e3 / 0.90e2 * eta ^ 3 + 0.305e3 / 0.36e2 * eta ^ 2 - 0.487e3 / 0.90e2 * eta - 0.579e3 / 0.40e2) * ci2 ^ 2 + 0.11e2 / 0.90e2 * eta ^ 4 - eta ^ 3 / 0.36e2 - 0.29e2 / 0.36e2 * eta ^ 2 + 0.17e2 / 0.180e3 * eta + 0.3e1 / 0.4e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f + 2 * g)) + 0.31e2 / 0.3240e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 + 0.11e2 / 0.31e2 * eta ^ 2 + 0.71e2 / 0.31e2 * eta + 0.151e3 / 0.31e2) * ci2 ^ 2 - 0.17e2 / 0.31e2 * eta ^ 3 - 0.5e1 / 0.31e2 * eta ^ 2 - 0.19e2 / 0.31e2 * eta - 0.67e2 / 0.31e2) * (eta - 0.1e1) * sin((2 * g - 2 * h)) - 0.17e2 / 0.810e3 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * sin((6 * f)) - 0.17e2 / 0.162e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.122e3 / 0.85e2 * eta ^ 2 - 0.802e3 / 0.85e2 * eta - 0.1307e4 / 0.85e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta ^ 3 - 0.244e3 / 0.85e2 * eta ^ 2 + 0.1849e4 / 0.85e2 * eta + 0.2834e4 / 0.85e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta ^ 3 + 0.33e2 / 0.17e2 * eta ^ 2 - 0.1574e4 / 0.85e2 * eta - 0.2198e4 / 0.85e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta ^ 3 - 0.42e2 / 0.85e2 * eta ^ 2 + 0.577e3 / 0.85e2 * eta + 0.143e3 / 0.17e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta ^ 3 + 0.3e1 / 0.85e2 * eta ^ 2 - 0.73e2 / 0.85e2 * eta - 0.163e3 / 0.170e3) * (eta - 0.1e1) ^ 2 * sin((4 * f)) + 0.433e3 / 0.432e3 * ((0.22573e5 / 0.6495e4 + eta ^ 6 + 0.6188e4 / 0.6495e4 * eta ^ 5 + 0.1604e4 / 0.433e3 * eta - 0.21361e5 / 0.6495e4 * eta ^ 4 - 0.43784e5 / 0.6495e4 * eta ^ 3 - 0.7273e4 / 0.2165e4 * eta ^ 2) * ci2 ^ 8 + (-0.52946e5 / 0.6495e4 - 0.4874e4 / 0.2165e4 * eta ^ 6 - 0.4352e4 / 0.2165e4 * eta ^ 5 + 0.33184e5 / 0.2165e4 * eta ^ 3 + 0.46918e5 / 0.6495e4 * eta ^ 2 - 0.11744e5 / 0.1299e4 * eta + 0.16526e5 / 0.2165e4 * eta ^ 4) * ci2 ^ 6 + (0.15188e5 / 0.2165e4 - 0.16240e5 / 0.1299e4 * eta ^ 3 + 0.17624e5 / 0.2165e4 * eta - 0.39916e5 / 0.6495e4 * eta ^ 4 + 0.3256e4 / 0.2165e4 * eta ^ 5 + 0.2276e4 / 0.1299e4 * eta ^ 6 - 0.36356e5 / 0.6495e4 * eta ^ 2) * ci2 ^ 4 + (0.9288e4 / 0.2165e4 * eta ^ 3 - 0.4100e4 / 0.1299e4 * eta + 0.877e3 / 0.433e3 * eta ^ 4 - 0.16807e5 / 0.6495e4 - 0.972e3 / 0.2165e4 * eta ^ 5 - 0.235e3 / 0.433e3 * eta ^ 6 + 0.3939e4 / 0.2165e4 * eta ^ 2) * ci2 ^ 2 - 0.3392e4 / 0.6495e4 * eta ^ 3 - 0.1721e4 / 0.8660e4 * eta ^ 2 - 0.6541e4 / 0.25980e5 * eta ^ 4 + 0.2788e4 / 0.6495e4 * eta + 0.1447e4 / 0.25980e5 * eta ^ 6 + 0.8657e4 / 0.25980e5 + 0.44e2 / 0.1299e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * sin(f) - 0.1264e4 / 0.405e3 * (eta - 0.1e1) * ((0.2451e4 / 0.2528e4 + eta ^ 6 + 0.1085e4 / 0.316e3 * eta ^ 5 + (-0.150e3 / 0.79e2 * Delta ^ 2 + 0.14767e5 / 0.7584e4) * eta ^ 4 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.5801e4 / 0.1264e4) * eta ^ 3 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.432e3 / 0.79e2) * eta ^ 2 + (-0.150e3 / 0.79e2 * Delta ^ 2 - 0.1429e4 / 0.3792e4) * eta) * ci2 ^ 8 + (-0.5385e4 / 0.2528e4 - 0.2931e4 / 0.1264e4 * eta ^ 6 - 0.19821e5 / 0.2528e4 * eta ^ 5 + (0.360e3 / 0.79e2 * Delta ^ 2 - 0.10279e5 / 0.2528e4) * eta ^ 4 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.7089e4 / 0.632e3) * eta ^ 3 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.16503e5 / 0.1264e4) * eta ^ 2 + (0.360e3 / 0.79e2 * Delta ^ 2 + 0.2849e4 / 0.2528e4) * eta) * ci2 ^ 6 + (0.2065e4 / 0.1264e4 + 0.4653e4 / 0.2528e4 * eta ^ 6 + 0.7745e4 / 0.1264e4 * eta ^ 5 + (-0.306e3 / 0.79e2 * Delta ^ 2 + 0.1369e4 / 0.474e3) * eta ^ 4 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.1467e4 / 0.158e3) * eta ^ 3 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.26615e5 / 0.2528e4) * eta ^ 2 + (-0.306e3 / 0.79e2 * Delta ^ 2 - 0.3727e4 / 0.3792e4) * eta) * ci2 ^ 4 + (-0.40e2 / 0.79e2 - 0.737e3 / 0.1264e4 * eta ^ 6 - 0.4821e4 / 0.2528e4 * eta ^ 5 + (0.108e3 / 0.79e2 * Delta ^ 2 - 0.1023e4 / 0.1264e4) * eta ^ 4 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.1913e4 / 0.632e3) * eta ^ 3 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.263e3 / 0.79e2) * eta ^ 2 + (0.108e3 / 0.79e2 * Delta ^ 2 + 0.769e3 / 0.2528e4) * eta) * ci2 ^ 2 + 0.537e3 / 0.10112e5 + 0.171e3 / 0.2528e4 * eta ^ 6 + 0.2191e4 / 0.10112e5 * eta ^ 5 + (-0.27e2 / 0.158e3 * Delta ^ 2 + 0.2671e4 / 0.30336e5) * eta ^ 4 + (-0.1721e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 3 + (-0.1869e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 2 + (-0.27e2 / 0.158e3 * Delta ^ 2 - 0.1111e4 / 0.30336e5) * eta) * sin((2 * g + 2 * h)) + 0.77e2 / 0.162e3 * (0.1e1 + eta) * ((0.10e2 + eta ^ 6 - 0.458e3 / 0.385e3 * eta ^ 5 + 0.7698e4 / 0.385e3 * eta - 0.4364e4 / 0.385e3 * eta ^ 4 - 0.4808e4 / 0.385e3 * eta ^ 3 + 0.2993e4 / 0.385e3 * eta ^ 2) * ci2 ^ 8 + (-0.112e3 / 0.5e1 - 0.207e3 / 0.77e2 * eta ^ 6 + 0.91e2 / 0.55e2 * eta ^ 5 + 0.11554e5 / 0.385e3 * eta ^ 3 - 0.929e3 / 0.55e2 * eta ^ 2 - 0.17447e5 / 0.385e3 * eta + 0.10042e5 / 0.385e3 * eta ^ 4) * ci2 ^ 6 + (0.6959e4 / 0.385e3 - 0.1482e4 / 0.55e2 * eta ^ 3 + 0.2058e4 / 0.55e2 * eta - 0.243e3 / 0.11e2 * eta ^ 4 - 0.36e2 / 0.385e3 * eta ^ 5 + 0.1047e4 / 0.385e3 * eta ^ 6 + 0.461e3 / 0.35e2 * eta ^ 2) * ci2 ^ 4 + (0.4034e4 / 0.385e3 * eta ^ 3 - 0.461e3 / 0.35e2 * eta + 0.443e3 / 0.55e2 * eta ^ 4 - 0.2367e4 / 0.385e3 - 0.207e3 / 0.385e3 * eta ^ 5 - 0.456e3 / 0.385e3 * eta ^ 6 - 0.238e3 / 0.55e2 * eta ^ 2) * ci2 ^ 2 - 0.1077e4 / 0.770e3 * eta ^ 3 + 0.193e3 / 0.385e3 * eta ^ 2 - 0.1579e4 / 0.1540e4 * eta ^ 4 + 0.2487e4 / 0.1540e4 * eta + 0.1121e4 / 0.1540e4 + 0.27e2 / 0.154e3 * eta ^ 6 + 0.29e2 / 0.220e3 * eta ^ 5) * sin((2 * h + 2 * g + 2 * f)) - ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((-4 * g - 2 * h + 3 * f)) / 0.864e3 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 5 * f + 2 * g)) / 0.18e2 + 0.86e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.56e2 / 0.43e2 * eta + 0.95e2 / 0.129e3) * ci2 ^ 6 + (-0.1579e4 / 0.1290e4 * eta ^ 2 - 0.1028e4 / 0.645e3 * eta - 0.75e2 / 0.86e2) * ci2 ^ 4 + (0.205e3 / 0.516e3 * eta ^ 2 + 0.667e3 / 0.1290e4 * eta + 0.133e3 / 0.516e3) * ci2 ^ 2 - 0.5e1 / 0.129e3 * eta ^ 2 - 0.13e2 / 0.258e3 * eta - 0.5e1 / 0.258e3) * cos((2 * h + 2 * f + 4 * g)) + 0.73e2 / 0.27e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 4 + 0.91e2 / 0.73e2 * eta ^ 3 - 0.781e3 / 0.219e3 * eta ^ 2 - 0.1357e4 / 0.219e3 * eta - 0.230e3 / 0.73e2) * ci2 ^ 6 + (-0.907e3 / 0.730e3 * eta ^ 4 - 0.1129e4 / 0.730e3 * eta ^ 3 + 0.2997e4 / 0.730e3 * eta ^ 2 + 0.5253e4 / 0.730e3 * eta + 0.265e3 / 0.73e2) * ci2 ^ 4 + (0.153e3 / 0.365e3 * eta ^ 4 + 0.759e3 / 0.1460e4 * eta ^ 3 - 0.971e3 / 0.876e3 * eta ^ 2 - 0.8761e4 / 0.4380e4 * eta - 0.287e3 / 0.292e3) * ci2 ^ 2 - 0.13e2 / 0.292e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 4 * g)) + 0.7e1 / 0.54e2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * cos((-2 * g - 2 * h + 3 * f)) - 0.19e2 / 0.9e1 * ((eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (0.1e1 + eta) * ci2 ^ 6 + (-0.137e3 / 0.114e3 * eta ^ 4 - 0.577e3 / 0.570e3 * eta ^ 3 + 0.889e3 / 0.570e3 * eta ^ 2 + 0.253e3 / 0.570e3 * eta - 0.52e2 / 0.57e2) * ci2 ^ 4 + (0.20e2 / 0.57e2 * eta ^ 4 + 0.337e3 / 0.1140e4 * eta ^ 3 - 0.499e3 / 0.1140e4 * eta ^ 2 - 0.7e1 / 0.60e2 * eta + 0.59e2 / 0.228e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) / 0.60e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + f)) + (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.23e2 / 0.15e2 * eta ^ 3 - 0.37e2 / 0.30e2 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.37e2 / 0.30e2) * ci2 ^ 4 + (0.31e2 / 0.60e2 * eta ^ 3 + 0.11e2 / 0.30e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.11e2 / 0.30e2) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + f)) / 0.9e1 + (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 - 0.110e3 / 0.3e1 * eta - 0.101e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 2 + 0.36e2 * eta + 0.33e2) * ci2 ^ 4 + (eta ^ 2 / 0.18e2 - 0.112e3 / 0.9e1 * eta - 0.71e2 / 0.6e1) * ci2 ^ 2 + (eta + 0.29e2) * (0.1e1 + eta) / 0.18e2) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 3 * f)) / 0.720e3 - 0.4e1 / 0.405e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + eta ^ 3 / 0.16e2 + eta ^ 2 / 0.2e1 - 0.13e2 / 0.16e2 * eta - 0.15e2 / 0.2e1) * ci2 ^ 2 - eta ^ 4 / 0.2e1 + eta ^ 3 / 0.16e2 - eta ^ 2 / 0.16e2 - 0.13e2 / 0.16e2 * eta + 0.49e2 / 0.16e2) * (eta - 0.1e1) * sin((-2 * h + 2 * g + 4 * f)) - 0.71e2 / 0.45e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.1853e4 / 0.1278e4 * eta + 0.265e3 / 0.213e3) * ci2 ^ 4 + (-0.973e3 / 0.2556e4 * eta ^ 2 - 0.929e3 / 0.1704e4 * eta - 0.2209e4 / 0.5112e4) * ci2 ^ 2 + 0.41e2 / 0.852e3 * eta ^ 2 + 0.29e2 / 0.426e3 * eta + 0.37e2 / 0.852e3) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 3 * f)) - 0.13e2 / 0.432e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.1113e4 / 0.65e2 * eta ^ 2 - 0.3169e4 / 0.65e2 * eta - 0.2071e4 / 0.65e2) * ci2 ^ 6 + (-eta ^ 3 + 0.1271e4 / 0.65e2 * eta ^ 2 + 0.697e3 / 0.13e2 * eta + 0.2229e4 / 0.65e2) * ci2 ^ 4 + (0.5e1 / 0.26e2 * eta ^ 3 - 0.631e3 / 0.130e3 * eta ^ 2 - 0.4759e4 / 0.390e3 * eta - 0.957e3 / 0.130e3) * ci2 ^ 2 - (0.1e1 + eta) ^ 2 * (eta - 0.51e2 / 0.5e1) / 0.78e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + 7 * f)) - 0.13e2 / 0.4860e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + eta / 0.13e2 + 0.51e2 / 0.13e2) * ci2 ^ 2 - 0.11e2 / 0.13e2 * eta ^ 2 + eta / 0.13e2 + 0.21e2 / 0.13e2) * sin((2 * g - 2 * h + 6 * f)) - 0.589e3 / 0.4320e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.2308e4 / 0.589e3 * eta ^ 3 - 0.5354e4 / 0.589e3 * eta ^ 2 - 0.1724e4 / 0.589e3 * eta + 0.717e3 / 0.589e3) * ci2 ^ 6 + (-0.621e3 / 0.589e3 * eta ^ 4 + 0.2288e4 / 0.589e3 * eta ^ 3 + 0.5286e4 / 0.589e3 * eta ^ 2 + 0.1840e4 / 0.589e3 * eta - 0.521e3 / 0.589e3) * ci2 ^ 4 + (0.231e3 / 0.1178e4 * eta ^ 4 - 0.780e3 / 0.589e3 * eta ^ 3 - 0.1533e4 / 0.589e3 * eta ^ 2 - 0.1388e4 / 0.1767e4 * eta + 0.1033e4 / 0.3534e4) * ci2 ^ 2 + 0.2e1 / 0.589e3 * (0.1e1 + eta) ^ 2 * (eta ^ 2 + 0.116e3 / 0.3e1 * eta - 0.25e2)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g + f)) + ((eta ^ 2 - 0.283e3 / 0.90e2 * eta - 0.187e3 / 0.90e2) * ci2 ^ 4 + (-0.187e3 / 0.360e3 * eta ^ 2 + 0.7e1 / 0.6e1 * eta + 0.247e3 / 0.360e3) * ci2 ^ 2 - 0.7e1 / 0.30e2 * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + f)) / 0.18e2 - 0.58e2 / 0.27e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.16e2 / 0.29e2 * eta - 0.97e2 / 0.29e2) * ci2 ^ 6 + (-0.168e3 / 0.145e3 * eta ^ 2 + 0.19e2 / 0.29e2 * eta + 0.549e3 / 0.145e3) * ci2 ^ 4 + (0.93e2 / 0.290e3 * eta ^ 2 - 0.28e2 / 0.145e3 * eta - 0.279e3 / 0.290e3) * ci2 ^ 2 - 0.3e1 / 0.145e3 * eta ^ 2 + 0.3e1 / 0.290e3 * eta + 0.9e1 / 0.290e3) * (eta - 0.1e1) * cos((2 * g + 4 * f)) - 0.28e2 / 0.27e2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.89e2 / 0.70e2 * ci2 ^ 4 + 0.127e3 / 0.280e3 * ci2 ^ 2 - 0.3e1 / 0.56e2) * Delta * (eta - 0.1e1) ^ 2 * cos((4 * g + 2 * h)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 4 + 0.41e2 / 0.20e2 * eta ^ 3 - 0.187e3 / 0.20e2 * eta ^ 2 - 0.33e2 / 0.20e2 * eta + 0.223e3 / 0.20e2) * ci2 ^ 2 - 0.17e2 / 0.40e2 * eta ^ 4 - 0.53e2 / 0.40e2 * eta ^ 3 + 0.189e3 / 0.40e2 * eta ^ 2 + 0.73e2 / 0.40e2 * eta - 0.28e2 / 0.5e1) * sin((-2 * h + 3 * f + 2 * g)) / 0.81e2 + 0.5e1 / 0.3e1 * (0.1e1 + eta) * ((eta ^ 3 + 0.22e2 / 0.45e2 * eta ^ 2 - 0.11e2 / 0.15e2 * eta - 0.142e3 / 0.45e2) * (0.1e1 + eta) * ci2 ^ 6 + (-0.163e3 / 0.150e3 * eta ^ 4 - 0.382e3 / 0.225e3 * eta ^ 3 - eta ^ 2 / 0.5e1 + 0.38e2 / 0.9e1 * eta + 0.569e3 / 0.150e3) * ci2 ^ 4 + (0.179e3 / 0.900e3 * eta ^ 4 + 0.91e2 / 0.225e3 * eta ^ 3 + 0.191e3 / 0.450e3 * eta ^ 2 - 0.73e2 / 0.75e2 * eta - 0.71e2 / 0.60e2) * ci2 ^ 2 + 0.7e1 / 0.225e3 * (0.1e1 + eta) * (eta ^ 3 - 0.9e1 / 0.14e2 * eta ^ 2 - 0.23e2 / 0.7e1 * eta + 0.45e2 / 0.14e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * cos((f + 2 * g)) + 0.23e2 / 0.54e2 * ((eta ^ 2 - 0.95e2 / 0.23e2) * ci2 ^ 4 + (-eta ^ 2 + 0.4e1 / 0.23e2 * eta + 0.99e2 / 0.23e2) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.8e1 / 0.69e2 * eta - 0.37e2 / 0.46e2) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f)) - 0.2e1 / 0.3e1 * (ci2 ^ 6 - 0.53e2 / 0.45e2 * ci2 ^ 4 + 0.61e2 / 0.180e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * cos((-2 * h + 4 * f)) + 0.17e2 / 0.432e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.691e3 / 0.85e2 * eta ^ 2 - 0.2037e4 / 0.85e2 * eta - 0.225e3 / 0.17e2) * ci2 ^ 6 + (-0.93e2 / 0.85e2 * eta ^ 3 + 0.161e3 / 0.17e2 * eta ^ 2 + 0.2281e4 / 0.85e2 * eta + 0.1247e4 / 0.85e2) * ci2 ^ 4 + (0.37e2 / 0.170e3 * eta ^ 3 - 0.421e3 / 0.170e3 * eta ^ 2 - 0.2923e4 / 0.510e3 * eta - 0.471e3 / 0.170e3) * ci2 ^ 2 + 0.7e1 / 0.510e3 * (0.1e1 + eta) * (eta ^ 2 + 0.24e2 / 0.7e1 * eta - 0.131e3 / 0.7e1)) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 5 * f)) - 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * cos((2 * h + 2 * g + 4 * f)) + 0.8e1 / 0.9e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * cos((-2 * g - 2 * h + 2 * f)) + 0.22e2 / 0.27e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) * cos((2 * h + 6 * f + 4 * g)) + 0.40e2 / 0.27e2 * ((eta ^ 3 + 0.3e1 / 0.2e1 * eta ^ 2 - 0.31e2 / 0.10e2) * ci2 ^ 4 + (-eta ^ 3 - 0.13e2 / 0.10e2 * eta ^ 2 + eta / 0.2e1 + 0.18e2 / 0.5e1) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.7e1 / 0.60e2 * eta ^ 2 - eta / 0.3e1 - 0.17e2 / 0.20e2) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) - 0.14e2 / 0.45e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.128e3 / 0.7e1 + eta ^ 6 + 0.30e2 / 0.7e1 * eta ^ 5 - 0.1685e4 / 0.63e2 * eta ^ 3 - 0.526e3 / 0.63e2 * eta ^ 2 + 0.1955e4 / 0.63e2 * eta - 0.59e2 / 0.9e1 * eta ^ 4) * ci2 ^ 6 + (-0.482e3 / 0.21e2 + 0.632e3 / 0.21e2 * eta ^ 3 - 0.2105e4 / 0.63e2 * eta + 0.110e3 / 0.21e2 * eta ^ 4 - 0.331e3 / 0.63e2 * eta ^ 5 - 0.10e2 / 0.9e1 * eta ^ 6 + 0.130e3 / 0.9e1 * eta ^ 2) * ci2 ^ 4 + (-0.131e3 / 0.18e2 * eta ^ 3 + 0.863e3 / 0.126e3 * eta + 0.13e2 / 0.14e2 * eta ^ 4 + 0.473e3 / 0.63e2 + 0.103e3 / 0.63e2 * eta ^ 5 + 0.10e2 / 0.63e2 * eta ^ 6 - 0.1027e4 / 0.126e3 * eta ^ 2) * ci2 ^ 2 + 0.13e2 / 0.252e3 * (0.1e1 + eta) * (eta ^ 5 - 0.42e2 / 0.13e2 * eta ^ 4 - 0.123e3 / 0.13e2 * eta ^ 3 + 0.193e3 / 0.13e2 * eta ^ 2 + 0.202e3 / 0.13e2 * eta - 0.211e3 / 0.13e2)) * sin((2 * g + 2 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((7 * f)) / 0.144e3 - 0.1391e4 / 0.4320e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.7521e4 / 0.1391e4 + eta ^ 6 + 0.360e3 / 0.1391e4 * eta ^ 5 - 0.6608e4 / 0.1391e4 * eta ^ 3 + 0.9949e4 / 0.1391e4 * eta ^ 2 + 0.20776e5 / 0.1391e4 * eta - 0.4397e4 / 0.1391e4 * eta ^ 4) * ci2 ^ 6 + (-0.9961e4 / 0.1391e4 + 0.96e2 / 0.13e2 * eta ^ 3 - 0.25056e5 / 0.1391e4 * eta + 0.5381e4 / 0.1391e4 * eta ^ 4 - 0.1216e4 / 0.1391e4 * eta ^ 5 - 0.1871e4 / 0.1391e4 * eta ^ 6 - 0.9485e4 / 0.1391e4 * eta ^ 2) * ci2 ^ 4 + (-0.16096e5 / 0.4173e4 * eta ^ 3 + 0.8168e4 / 0.1391e4 * eta - 0.339e3 / 0.214e3 * eta ^ 4 + 0.22505e5 / 0.8346e4 + 0.3176e4 / 0.4173e4 * eta ^ 5 + 0.1717e4 / 0.2782e4 * eta ^ 6 + 0.8669e4 / 0.8346e4 * eta ^ 2) * ci2 ^ 2 - 0.132e3 / 0.1391e4 * (eta ^ 5 - 0.19e2 / 0.99e2 * eta ^ 4 - 0.48e2 / 0.11e2 * eta ^ 3 - 0.188e3 / 0.99e2 * eta ^ 2 + 0.55e2 / 0.9e1 * eta + 0.431e3 / 0.99e2) * (0.1e1 + eta)) * sqrt(-eta ^ 2 + 0.1e1) * sin((f + 2 * g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g + 2 * h + 7 * f)) / 0.144e3 - 0.139e3 / 0.135e3 * ((0.5201e4 / 0.556e3 + eta ^ 6 + 0.519e3 / 0.556e3 * eta ^ 5 - 0.10607e5 / 0.834e3 * eta ^ 3 + 0.917e3 / 0.834e3 * eta ^ 2 + 0.24745e5 / 0.1668e4 * eta - 0.12385e5 / 0.1668e4 * eta ^ 4) * ci2 ^ 6 + (-0.6083e4 / 0.556e3 + 0.4313e4 / 0.278e3 * eta ^ 3 - 0.9895e4 / 0.556e3 * eta + 0.5001e4 / 0.556e3 * eta ^ 4 - 0.723e3 / 0.556e3 * eta ^ 5 - 0.179e3 / 0.139e3 * eta ^ 6 - 0.369e3 / 0.278e3 * eta ^ 2) * ci2 ^ 4 + (-0.8189e4 / 0.1668e4 * eta ^ 3 + 0.17647e5 / 0.3336e4 * eta - 0.9143e4 / 0.3336e4 * eta ^ 4 + 0.10237e5 / 0.3336e4 + 0.1907e4 / 0.3336e4 * eta ^ 5 + 0.65e2 / 0.139e3 * eta ^ 6 + 0.533e3 / 0.1668e4 * eta ^ 2) * ci2 ^ 2 - 0.49e2 / 0.834e3 * (0.1e1 + eta) * (eta ^ 5 + 0.51e2 / 0.98e2 * eta ^ 4 - 0.34e2 / 0.7e1 * eta ^ 3 - 0.355e3 / 0.98e2 * eta ^ 2 + 0.188e3 / 0.49e2 * eta + 0.199e3 / 0.49e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 4 * f + 4 * g)) + 0.299e3 / 0.405e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.45e2 / 0.52e2 * eta ^ 4 - 0.3645e4 / 0.598e3 * eta ^ 3 - 0.30e2 / 0.23e2 * eta ^ 2 + 0.3487e4 / 0.598e3 * eta - 0.3e1 / 0.1196e4) * ci2 ^ 6 + (-0.383e3 / 0.299e3 * eta ^ 5 - 0.1087e4 / 0.1196e4 * eta ^ 4 + 0.2168e4 / 0.299e3 * eta ^ 3 + 0.769e3 / 0.598e3 * eta ^ 2 - 0.2035e4 / 0.299e3 * eta + 0.269e3 / 0.1196e4) * ci2 ^ 4 + (0.129e3 / 0.299e3 * eta ^ 5 + 0.409e3 / 0.2392e4 * eta ^ 4 - 0.205e3 / 0.92e2 * eta ^ 3 - 0.5e1 / 0.26e2 * eta ^ 2 + 0.563e3 / 0.276e3 * eta - 0.389e3 / 0.2392e4) * ci2 ^ 2 - 0.9e1 / 0.299e3 * eta ^ 5 + 0.5e1 / 0.1196e4 * eta ^ 4 + 0.85e2 / 0.598e3 * eta ^ 3 - 0.21e2 / 0.1196e4 * eta ^ 2 - 0.38e2 / 0.299e3 * eta + 0.11e2 / 0.598e3) * sin((2 * h)) - 0.817e3 / 0.4320e4 * ((0.129677e6 / 0.2451e4 + eta ^ 6 - 0.2040e4 / 0.817e3 * eta ^ 5 - 0.32848e5 / 0.817e3 * eta ^ 3 + 0.91433e5 / 0.2451e4 * eta ^ 2 + 0.87304e5 / 0.817e3 * eta - 0.67657e5 / 0.2451e4 * eta ^ 4) * ci2 ^ 6 + (-0.155941e6 / 0.2451e4 + 0.128800e6 / 0.2451e4 * eta ^ 3 - 0.99392e5 / 0.817e3 * eta + 0.74257e5 / 0.2451e4 * eta ^ 4 + 0.3872e4 / 0.2451e4 * eta ^ 5 - 0.161e3 / 0.129e3 * eta ^ 6 - 0.79417e5 / 0.2451e4 * eta ^ 2) * ci2 ^ 4 + (-0.142544e6 / 0.7353e4 * eta ^ 3 + 0.221552e6 / 0.7353e4 * eta - 0.90881e5 / 0.14706e5 * eta ^ 4 + 0.92167e5 / 0.4902e4 + 0.2464e4 / 0.2451e4 * eta ^ 5 + 0.747e3 / 0.1634e4 * eta ^ 6 - 0.20887e5 / 0.14706e5 * eta ^ 2) * ci2 ^ 2 - 0.44e2 / 0.817e3 * (0.1e1 + eta) * (eta ^ 5 + 0.265e3 / 0.33e2 * eta ^ 4 - 0.104e3 / 0.33e2 * eta ^ 3 - 0.488e3 / 0.11e2 * eta ^ 2 - 0.265e3 / 0.33e2 * eta + 0.991e3 / 0.33e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f + 2 * g)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g - 2 * h + 5 * f)) / 0.720e3 + 0.389e3 / 0.1620e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 + 0.184e3 / 0.389e3 * eta ^ 4 - 0.2751e4 / 0.389e3 * eta ^ 3 - 0.2207e4 / 0.389e3 * eta ^ 2 + 0.2458e4 / 0.389e3 * eta + 0.2979e4 / 0.389e3) * ci2 ^ 4 + (-0.119e3 / 0.389e3 * eta ^ 5 - 0.60e2 / 0.389e3 * eta ^ 4 + 0.853e3 / 0.389e3 * eta ^ 3 + 0.687e3 / 0.389e3 * eta ^ 2 - 0.2294e4 / 0.1167e4 * eta - 0.931e3 / 0.389e3) * ci2 ^ 2 + 0.32e2 / 0.1167e4 * (0.1e1 + eta) * (eta - 0.1e1) * (eta ^ 3 + 0.9e1 / 0.16e2 * eta ^ 2 - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1)) * sin((6 * g + 2 * h + 6 * f)) - 0.11e2 / 0.540e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * ((eta ^ 2 + 0.25e2 / 0.11e2 * eta + 0.2e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.20e2 / 0.3e1 * eta - 0.47e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.80e2 / 0.11e2 * eta + 0.26e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.37e2 / 0.11e2 * eta - 0.15e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.23e2 / 0.44e2 * eta + 0.31e2 / 0.132e3) * sin((-2 * g - 2 * h + 4 * f)) - 0.1001e4 / 0.2160e4 * (eta - 0.1e1) * ((-0.7627e4 / 0.3003e4 + eta ^ 5 + 0.5617e4 / 0.1001e4 * eta + 0.9959e4 / 0.1001e4 * eta ^ 4 + 0.78194e5 / 0.3003e4 * eta ^ 3 + 0.25362e5 / 0.1001e4 * eta ^ 2) * ci2 ^ 8 + (0.15014e5 / 0.3003e4 - 0.2402e4 / 0.1001e4 * eta ^ 5 - 0.60052e5 / 0.1001e4 * eta ^ 3 - 0.175876e6 / 0.3003e4 * eta ^ 2 - 0.42430e5 / 0.3003e4 * eta - 0.69506e5 / 0.3003e4 * eta ^ 4) * ci2 ^ 6 + (-0.64e2 / 0.21e2 + 0.141208e6 / 0.3003e4 * eta ^ 3 + 0.12508e5 / 0.1001e4 * eta + 0.4240e4 / 0.231e3 * eta ^ 4 + 0.6004e4 / 0.3003e4 * eta ^ 5 + 0.3568e4 / 0.77e2 * eta ^ 2) * ci2 ^ 4 + (-0.1114e4 / 0.77e2 * eta ^ 3 - 0.13753e5 / 0.3003e4 * eta - 0.17179e5 / 0.3003e4 * eta ^ 4 + 0.535e3 / 0.1001e4 - 0.667e3 / 0.1001e4 * eta ^ 5 - 0.2082e4 / 0.143e3 * eta ^ 2) * ci2 ^ 2 + 0.3057e4 / 0.2002e4 * eta ^ 3 + 0.9605e4 / 0.6006e4 * eta ^ 2 + 0.557e3 / 0.924e3 * eta ^ 4 + 0.661e3 / 0.1092e4 * eta + 0.289e3 / 0.4004e4 * eta ^ 5 + 0.61e2 / 0.12012e5) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h - 2 * g + f)) - 0.11e2 / 0.45e2 * ((0.325e3 / 0.396e3 + 0.269e3 / 0.396e3 * eta + eta ^ 4 + 0.449e3 / 0.132e3 * eta ^ 3 + 0.967e3 / 0.396e3 * eta ^ 2) * ci2 ^ 8 + (-0.68e2 / 0.99e2 - 0.989e3 / 0.99e2 * eta ^ 3 - 0.229e3 / 0.33e2 * eta ^ 2 - eta / 0.3e1 - 0.101e3 / 0.33e2 * eta ^ 4) * ci2 ^ 6 + (-0.92e2 / 0.99e2 + 0.358e3 / 0.33e2 * eta ^ 3 - 0.136e3 / 0.99e2 * eta + 0.38e2 / 0.11e2 * eta ^ 4 + 0.712e3 / 0.99e2 * eta ^ 2) * ci2 ^ 4 + (-0.219e3 / 0.44e2 * eta ^ 3 + 0.515e3 / 0.396e3 * eta - 0.18e2 / 0.11e2 * eta ^ 4 + 0.409e3 / 0.396e3 - 0.1241e4 / 0.396e3 * eta ^ 2) * ci2 ^ 2 + 0.1213e4 / 0.1584e4 * eta ^ 3 + 0.727e3 / 0.1584e4 * eta ^ 2 + 0.17e2 / 0.66e2 * eta ^ 4 - 0.347e3 / 0.1584e4 - 0.433e3 / 0.1584e4 * eta) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-2 * g - 2 * h + 2 * f)) + 0.271e3 / 0.1620e4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((-0.2608e4 / 0.271e3 - 0.4375e4 / 0.271e3 * eta + eta ^ 4 + 0.631e3 / 0.271e3 * eta ^ 3 - 0.1695e4 / 0.271e3 * eta ^ 2) * ci2 ^ 8 + (0.5621e4 / 0.271e3 - 0.1432e4 / 0.271e3 * eta ^ 3 + 0.3750e4 / 0.271e3 * eta ^ 2 + 0.9580e4 / 0.271e3 * eta - 0.647e3 / 0.271e3 * eta ^ 4) * ci2 ^ 6 + (-0.4318e4 / 0.271e3 + 0.1188e4 / 0.271e3 * eta ^ 3 - 0.7556e4 / 0.271e3 * eta + 0.576e3 / 0.271e3 * eta ^ 4 - 0.3010e4 / 0.271e3 * eta ^ 2) * ci2 ^ 4 + (-0.423e3 / 0.271e3 * eta ^ 3 + 0.2515e4 / 0.271e3 * eta - 0.222e3 / 0.271e3 * eta ^ 4 + 0.1385e4 / 0.271e3 + 0.1025e4 / 0.271e3 * eta ^ 2) * ci2 ^ 2 + 0.213e3 / 0.1084e4 * eta ^ 3 - 0.481e3 / 0.1084e4 * eta ^ 2 + 0.59e2 / 0.542e3 * eta ^ 4 - 0.1165e4 / 0.1084e4 * eta - 0.621e3 / 0.1084e4) * sin((2 * h + 2 * g + 4 * f)) - 0.443e3 / 0.2160e4 * (0.1e1 + eta) * ((-0.7205e4 / 0.443e3 + eta ^ 5 - 0.13677e5 / 0.443e3 * eta + 0.3051e4 / 0.443e3 * eta ^ 4 + 0.13654e5 / 0.1329e4 * eta ^ 3 - 0.16850e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 8 + (0.15866e5 / 0.443e3 - 0.902e3 / 0.443e3 * eta ^ 5 - 0.31796e5 / 0.1329e4 * eta ^ 3 + 0.36748e5 / 0.1329e4 * eta ^ 2 + 0.91174e5 / 0.1329e4 * eta - 0.21146e5 / 0.1329e4 * eta ^ 4) * ci2 ^ 6 + (-0.37688e5 / 0.1329e4 + 0.27520e5 / 0.1329e4 * eta ^ 3 - 0.73372e5 / 0.1329e4 * eta + 0.18128e5 / 0.1329e4 * eta ^ 4 + 0.1852e4 / 0.1329e4 * eta ^ 5 - 0.28792e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 4 + (-0.3438e4 / 0.443e3 * eta ^ 3 + 0.25037e5 / 0.1329e4 * eta - 0.6719e4 / 0.1329e4 * eta ^ 4 + 0.12569e5 / 0.1329e4 - 0.161e3 / 0.443e3 * eta ^ 5 + 0.9478e4 / 0.1329e4 * eta ^ 2) * ci2 ^ 2 + 0.8011e4 / 0.7974e4 * eta ^ 3 - 0.6461e4 / 0.7974e4 * eta ^ 2 + 0.1143e4 / 0.1772e4 * eta ^ 4 - 0.35617e5 / 0.15948e5 * eta - 0.1949e4 / 0.1772e4 + 0.169e3 / 0.5316e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 3 * f + 2 * g)) + 0.17e2 / 0.810e3 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * sin((2 * g + 2 * h + 6 * f)) - 0.40e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * ((eta ^ 3 + 0.2e1 / 0.5e1 * eta ^ 2 - 0.6e1 / 0.5e1 * eta - 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.21e2 / 0.20e2 * eta ^ 3 - 0.9e1 / 0.20e2 * eta ^ 2 + 0.5e1 / 0.4e1 * eta + 0.17e2 / 0.20e2) * ci2 ^ 2 + eta ^ 3 / 0.5e1 + eta ^ 2 / 0.10e2 - 0.7e1 / 0.30e2 * eta - 0.1e1 / 0.6e1) * cos((2 * h + 2 * g + 2 * f)) + 0.4e1 / 0.135e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 + 0.23e2 / 0.4e1 * eta ^ 4 + 0.85e2 / 0.4e1 * eta ^ 3 - 0.271e3 / 0.4e1 * eta ^ 2 - 0.583e3 / 0.12e2 * eta + 0.278e3 / 0.3e1) * ci2 ^ 4 + (-0.5e1 / 0.12e2 * eta ^ 5 - 0.13e2 / 0.6e1 * eta ^ 4 - 0.35e2 / 0.4e1 * eta ^ 3 + 0.70e2 / 0.3e1 * eta ^ 2 + 0.107e3 / 0.6e1 * eta - 0.91e2 / 0.3e1) * ci2 ^ 2 - eta ^ 5 / 0.24e2 + eta ^ 4 / 0.4e1 + 0.4e1 / 0.3e1 * eta ^ 3 - 0.9e1 / 0.4e1 * eta ^ 2 - 0.49e2 / 0.24e2 * eta + 0.5e1 / 0.2e1) * sin((4 * f + 4 * g)) + 0.7e1 / 0.4320e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.260e3 / 0.7e1 * eta + 0.209e3 / 0.7e1) * ci2 ^ 6 + (-eta ^ 2 - 0.256e3 / 0.7e1 * eta - 0.205e3 / 0.7e1) * ci2 ^ 4 + (0.5e1 / 0.14e2 * eta ^ 2 + 0.248e3 / 0.21e2 * eta + 0.437e3 / 0.42e2) * ci2 ^ 2 - 0.2e1 / 0.21e2 * (eta + 0.15e2) * (0.1e1 + eta)) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f - 2 * g)) + 0.8e1 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 + 0.11e2 / 0.24e2 * eta ^ 2 - 0.7e1 / 0.2e1 * eta - 0.83e2 / 0.24e2) * ci2 ^ 6 + (-0.17e2 / 0.15e2 * eta ^ 3 - 0.43e2 / 0.80e2 * eta ^ 2 + 0.233e3 / 0.60e2 * eta + 0.307e3 / 0.80e2) * ci2 ^ 4 + (0.139e3 / 0.480e3 * eta ^ 3 + 0.37e2 / 0.240e3 * eta ^ 2 - 0.439e3 / 0.480e3 * eta - 0.217e3 / 0.240e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.96e2) * cos((2 * h + 5 * f + 4 * g))) * J ^ 2 / (0.1e1 + eta) ^ 2 / a ^ 4 / eta ^ 11];
D6 = [-0.27e2 * ((-0.85e2 / 0.72e2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 4 + (-0.31e2 / 0.85e2 * eta ^ 2 + 0.7e1 / 0.5e1) * ci2 ^ 2 + 0.4e1 / 0.85e2 * eta ^ 2 - 0.2e1 / 0.17e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * g + h + 4 * f)) + 0.10e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * cos((g + h + 2 * f)) - 0.2e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.37e2 / 0.24e2 * eta ^ 2 + 0.9e1 / 0.8e1) * ci2 ^ 6 + (-0.11e2 / 0.9e1 * eta ^ 3 - 0.139e3 / 0.72e2 * eta ^ 2 - 0.19e2 / 0.36e2 * eta - 0.119e3 / 0.72e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.89e2 / 0.144e3 * eta ^ 2 + 0.17e2 / 0.24e2 * eta + 0.43e2 / 0.48e2) * ci2 ^ 2 - eta ^ 3 / 0.144e3 - 0.5e1 / 0.144e3 * eta ^ 2 - 0.7e1 / 0.48e2 * eta - 0.7e1 / 0.48e2) * sin((g - h + 2 * f)) - 0.31e2 / 0.72e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 4 + (-0.9e1 / 0.31e2 * eta ^ 2 + 0.109e3 / 0.93e2) * ci2 ^ 2 + 0.2e1 / 0.93e2 * eta ^ 2 - 0.2e1 / 0.93e2) * sin((5 * g + h + 6 * f)) + 0.71e2 / 0.18e2 * ((eta ^ 3 + 0.229e3 / 0.142e3 * eta ^ 2 - 0.359e3 / 0.142e3 * eta - 0.220e3 / 0.71e2) * ci2 ^ 6 + (-0.91e2 / 0.71e2 * eta ^ 3 - 0.269e3 / 0.142e3 * eta ^ 2 + 0.441e3 / 0.142e3 * eta + 0.261e3 / 0.71e2) * ci2 ^ 4 + (0.31e2 / 0.71e2 * eta ^ 3 + 0.147e3 / 0.284e3 * eta ^ 2 - 0.931e3 / 0.852e3 * eta - 0.7e1 / 0.6e1) * ci2 ^ 2 - 0.9e1 / 0.284e3 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - h)) + 0.17e2 / 0.6e1 * ((eta ^ 3 + 0.27e2 / 0.34e2 * eta ^ 2 - 0.481e3 / 0.102e3 * eta - 0.281e3 / 0.51e2) * ci2 ^ 6 + (-0.65e2 / 0.51e2 * eta ^ 3 - 0.109e3 / 0.102e3 * eta ^ 2 + 0.189e3 / 0.34e2 * eta + 0.108e3 / 0.17e2) * ci2 ^ 4 + (0.23e2 / 0.51e2 * eta ^ 3 + 0.91e2 / 0.204e3 * eta ^ 2 - 0.105e3 / 0.68e2 * eta - 0.29e2 / 0.17e2) * ci2 ^ 2 - 0.11e2 / 0.204e3 * eta ^ 3 - 0.7e1 / 0.102e3 * eta ^ 2 + 0.7e1 / 0.68e2 * eta + 0.2e1 / 0.17e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + h + 4 * f)) + 0.10e2 / 0.3e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.3e1 / 0.40e2 * eta ^ 2 - 0.7e1 / 0.6e1 * eta + 0.67e2 / 0.120e3) * ci2 ^ 6 + (-0.41e2 / 0.30e2 * eta ^ 3 - 0.41e2 / 0.120e3 * eta ^ 2 + 0.37e2 / 0.20e2 * eta + 0.1e1 / 0.8e1) * ci2 ^ 4 + (0.17e2 / 0.30e2 * eta ^ 3 + 0.79e2 / 0.240e3 * eta ^ 2 - 0.37e2 / 0.40e2 * eta - 0.51e2 / 0.80e2) * ci2 ^ 2 - 0.7e1 / 0.80e2 * eta ^ 3 - 0.17e2 / 0.240e3 * eta ^ 2 + 0.17e2 / 0.80e2 * eta + 0.17e2 / 0.80e2) * sin((3 * g + h + 2 * f)) + 0.7e1 / 0.9e1 * (0.1e1 + eta) ^ 2 * ((eta + 0.61e2 / 0.28e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.65e2 / 0.28e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.27e2 / 0.56e2) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + h + 6 * f)) - 0.89e2 / 0.72e2 * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((5 * g + h + 2 * f)) - 0.89e2 / 0.18e2 * ((eta ^ 2 + 0.389e3 / 0.178e3 * eta + 0.110e3 / 0.89e2) * ci2 ^ 6 + (-0.119e3 / 0.89e2 * eta ^ 2 - 0.509e3 / 0.178e3 * eta - 0.140e3 / 0.89e2) * ci2 ^ 4 + (0.47e2 / 0.89e2 * eta ^ 2 + 0.393e3 / 0.356e3 * eta + 0.52e2 / 0.89e2) * ci2 ^ 2 - 0.73e2 / 0.1068e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + h)) + 0.20e2 / 0.3e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((g + h)) * (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) + 0.5e1 / 0.72e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.4e1 / 0.5e1) * ci2 ^ 2 - 0.3e1 / 0.5e1 * eta ^ 2 - 0.1e1 / 0.5e1) * sin((3 * g - h + 4 * f)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta + 0.3e1 / 0.4e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.4e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.7e1 / 0.24e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * sin((-g + h + 2 * f)) / 0.3e1 - 0.7e1 / 0.6e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * ((eta + 0.11e2 / 0.14e2) * (eta + 0.2e1) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.19e2 / 0.6e1 * eta - 0.37e2 / 0.21e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.61e2 / 0.84e2 * eta + 0.5e1 / 0.14e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.84e2) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((g - h + 4 * f)) + 0.11e2 / 0.72e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.51e2 / 0.11e2) * ci2 ^ 2 - 0.5e1 / 0.11e2 * eta ^ 2 - 0.25e2 / 0.11e2) * sin((3 * g - h + 2 * f)) + ((0.413e3 / 0.36e2 * eta ^ 4 + 0.485e3 / 0.18e2 * eta ^ 3 + (-0.50e2 / 0.3e1 * Delta ^ 2 - 0.121e3 / 0.108e3) * eta ^ 2 + (-0.100e3 / 0.3e1 * Delta ^ 2 - 0.1076e4 / 0.27e2) * eta - 0.646e3 / 0.27e2 - 0.50e2 / 0.3e1 * Delta ^ 2) * ci2 ^ 8 + (-0.2861e4 / 0.108e3 * eta ^ 4 - 0.3293e4 / 0.54e2 * eta ^ 3 + (0.40e2 * Delta ^ 2 + 0.136e3 / 0.27e2) * eta ^ 2 + (0.80e2 * Delta ^ 2 + 0.1663e4 / 0.18e2) * eta + 0.1951e4 / 0.36e2 + 0.40e2 * Delta ^ 2) * ci2 ^ 6 + (0.751e3 / 0.36e2 * eta ^ 4 + 0.847e3 / 0.18e2 * eta ^ 3 + (-0.34e2 * Delta ^ 2 - 0.142e3 / 0.27e2) * eta ^ 2 + (-0.3877e4 / 0.54e2 - 0.68e2 * Delta ^ 2) * eta - 0.4453e4 / 0.108e3 - 0.34e2 * Delta ^ 2) * ci2 ^ 4 + (-0.176e3 / 0.27e2 * eta ^ 4 - 0.388e3 / 0.27e2 * eta ^ 3 + (0.12e2 * Delta ^ 2 + 0.95e2 / 0.54e2) * eta ^ 2 + (0.193e3 / 0.9e1 + 0.24e2 * Delta ^ 2) * eta + 0.217e3 / 0.18e2 + 0.12e2 * Delta ^ 2) * ci2 ^ 2 + 0.161e3 / 0.216e3 * eta ^ 4 + 0.173e3 / 0.108e3 * eta ^ 3 + (-0.5e1 / 0.36e2 - 0.3e1 / 0.2e1 * Delta ^ 2) * eta ^ 2 + (-0.235e3 / 0.108e3 - 0.3e1 * Delta ^ 2) * eta - 0.3e1 / 0.2e1 * Delta ^ 2 - 0.259e3 / 0.216e3) * sin((g + h)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((5 * g + h + 8 * f)) / 0.24e2 + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((g - h)) - 0.10e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * cos((3 * g + h + 4 * f)) - 0.5e1 / 0.72e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (-0.3e1 / 0.5e1 + ci2 ^ 2) * sin((3 * g - h)) - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 ^ 2 + 0.1e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((3 * g - h + 6 * f)) / 0.216e3 - 0.17e2 / 0.36e2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((eta + 0.53e2 / 0.17e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.111e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.81e2 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.24e2 / 0.17e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.5e1 / 0.34e2) * sin((g + h + 4 * f)) + 0.11e2 / 0.12e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.2e1 * eta + 0.5e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.202e3 / 0.33e2 * eta - 0.65e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.76e2 / 0.11e2 * eta + 0.30e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.36e2 / 0.11e2 * eta - 0.16e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.17e2 / 0.33e2 * eta + 0.8e1 / 0.33e2) * sin((-g - h + 2 * f)) - 0.67e2 / 0.36e2 * (0.1e1 + eta) * ((eta ^ 3 - 0.41e2 / 0.67e2 * eta ^ 2 - 0.409e3 / 0.67e2 * eta - 0.409e3 / 0.67e2) * ci2 ^ 8 + (-0.179e3 / 0.67e2 * eta ^ 3 + 0.37e2 / 0.67e2 * eta ^ 2 + 0.923e3 / 0.67e2 * eta + 0.923e3 / 0.67e2) * ci2 ^ 6 + (0.180e3 / 0.67e2 * eta ^ 3 + 0.36e2 / 0.67e2 * eta ^ 2 - 0.770e3 / 0.67e2 * eta - 0.770e3 / 0.67e2) * ci2 ^ 4 + (-0.78e2 / 0.67e2 * eta ^ 3 - 0.42e2 / 0.67e2 * eta ^ 2 + 0.278e3 / 0.67e2 * eta + 0.278e3 / 0.67e2) * ci2 ^ 2 + 0.23e2 / 0.134e3 * eta ^ 3 + 0.17e2 / 0.134e3 * eta ^ 2 - 0.35e2 / 0.67e2 * eta - 0.35e2 / 0.67e2) * sin((g + h + 2 * f)) + 0.10e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.7e1 / 0.6e1 * ci2 ^ 4 + ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.60e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((g - h + 2 * f)) - 0.70e2 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.17e2 / 0.14e2 * ci2 ^ 4 + 0.27e2 / 0.70e2 * ci2 ^ 2 - 0.1e1 / 0.28e2) * Delta * cos((3 * g + h + 2 * f))) * sqrt(-eta ^ 2 + 0.1e1) + 0.35e2 / 0.3e1 * (-0.23e2 / 0.105e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 4 + (-0.7e1 / 0.23e2 * eta ^ 2 + 0.21e2 / 0.46e2) * ci2 ^ 2 + eta ^ 2 / 0.46e2 - 0.1e1 / 0.46e2) * sin((5 * g + h + 5 * f)) + (0.1e1 + eta) * ((eta ^ 3 + 0.223e3 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.297e3 / 0.20e2) * ci2 ^ 6 + (-0.17e2 / 0.15e2 * eta ^ 3 - 0.287e3 / 0.20e2 * eta ^ 2 + 0.27e2 / 0.10e2 * eta + 0.1163e4 / 0.60e2) * ci2 ^ 4 + (0.17e2 / 0.60e2 * eta ^ 3 + 0.207e3 / 0.40e2 * eta ^ 2 - 0.3e1 / 0.10e2 * eta - 0.847e3 / 0.120e3) * ci2 ^ 2 - eta ^ 3 / 0.40e2 - 0.27e2 / 0.40e2 * eta ^ 2 - 0.3e1 / 0.40e2 * eta + 0.39e2 / 0.40e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + h + 3 * f)) / 0.14e2 + 0.5e1 / 0.56e2 * ((eta ^ 3 - 0.138e3 / 0.25e2 * eta ^ 2 - 0.421e3 / 0.25e2 * eta - 0.262e3 / 0.25e2) * ci2 ^ 6 + (-0.33e2 / 0.25e2 * eta ^ 3 + 0.164e3 / 0.25e2 * eta ^ 2 + 0.489e3 / 0.25e2 * eta + 0.296e3 / 0.25e2) * ci2 ^ 4 + (eta ^ 3 / 0.2e1 - 0.49e2 / 0.25e2 * eta ^ 2 - 0.851e3 / 0.150e3 * eta - 0.81e2 / 0.25e2) * ci2 ^ 2 - 0.13e2 / 0.150e3 * eta ^ 3 + eta ^ 2 / 0.30e2 + 0.3e1 / 0.10e2 * eta + 0.9e1 / 0.50e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + h + f)) + 0.29e2 / 0.840e3 * ((eta ^ 3 - 0.206e3 / 0.29e2 * eta ^ 2 - 0.529e3 / 0.29e2 * eta - 0.266e3 / 0.29e2) * ci2 ^ 6 + (-0.37e2 / 0.29e2 * eta ^ 3 + 0.220e3 / 0.29e2 * eta ^ 2 + 0.573e3 / 0.29e2 * eta + 0.288e3 / 0.29e2) * ci2 ^ 4 + (eta ^ 3 / 0.2e1 - 0.35e2 / 0.29e2 * eta ^ 2 - 0.599e3 / 0.174e3 * eta - 0.137e3 / 0.87e2) * ci2 ^ 2 - 0.3e1 / 0.58e2 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((g - h + 3 * f)) + 0.3e1 / 0.35e2 * ((eta ^ 3 + 0.47e2 / 0.8e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta - 0.113e3 / 0.8e1) * ci2 ^ 6 + (-0.4e1 / 0.3e1 * eta ^ 3 - 0.63e2 / 0.8e1 * eta ^ 2 - 0.15e2 / 0.4e1 * eta + 0.419e3 / 0.24e2) * ci2 ^ 4 + (0.5e1 / 0.8e1 * eta ^ 3 + 0.431e3 / 0.144e3 * eta ^ 2 + eta / 0.2e1 - 0.845e3 / 0.144e3) * ci2 ^ 2 - 0.13e2 / 0.144e3 * eta ^ 3 - 0.13e2 / 0.48e2 * eta ^ 2 + eta / 0.16e2 + 0.67e2 / 0.144e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - h + f)) - 0.67e2 / 0.210e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 4 - 0.99e2 / 0.268e3 * ci2 ^ 2 + 0.3e1 / 0.67e2) * (eta - 0.1e1) * sin((5 * g + h + 3 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.3e1 + (eta ^ 2 - 0.5e1) * ci2 ^ 2) * sin((3 * g - h + 3 * f)) / 0.210e3 + 0.11e2 / 0.280e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 - 0.53e2 / 0.11e2 * eta - 0.62e2 / 0.11e2) * ci2 ^ 6 + (-eta ^ 2 + 0.5e1 * eta + 0.64e2 / 0.11e2) * ci2 ^ 4 + (0.3e1 / 0.22e2 * eta ^ 2 - 0.115e3 / 0.66e2 * eta - 0.61e2 / 0.33e2) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) / 0.66e2) * sin((-g + h + f)) - (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * sin((-3 * g - h + f)) / 0.112e3 + 0.3e1 / 0.280e3 * ((eta ^ 2 + 0.127e3 / 0.3e1 * eta + 0.190e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 2 - 0.145e3 / 0.3e1 * eta - 0.208e3 / 0.3e1) * ci2 ^ 4 + (eta ^ 2 / 0.18e2 + 0.217e3 / 0.18e2 * eta + 0.47e2 / 0.3e1) * ci2 ^ 2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.18e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) + ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - h + 5 * f)) / 0.80e2 + (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * cos((-g - h + f)) + 0.4e1 / 0.7e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 6 + (-0.37e2 / 0.30e2 * eta ^ 2 + 0.19e2 / 0.5e1) * ci2 ^ 4 + (0.49e2 / 0.120e3 * eta ^ 2 - 0.119e3 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.24e2 + 0.1e1 / 0.24e2) * cos((3 * g + h + 3 * f)) - 0.5e1 / 0.84e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.21e2 / 0.50e2) * sin((3 * g - h + f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * cos((3 * g + h + 5 * f)) / 0.7e1 - 0.2e1 / 0.7e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (eta - 0.1e1) * cos((g - h + 3 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-g + h + 3 * f)) / 0.560e3 - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.9e1 / 0.28e2) * sin((5 * g + h + 7 * f)) / 0.30e2 - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 + 0.1e1 / 0.2e1) * sin((3 * g - h + 5 * f)) / 0.420e3 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 7 * f)) / 0.112e3 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) ^ 3 * sin((-g - h + 3 * f)) / 0.280e3 + 0.3e1 / 0.280e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((g + h + 5 * f)) - (0.1e1 + eta) * ((eta ^ 2 + 0.122e3 / 0.21e2 * eta + 0.29e2 / 0.3e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 - 0.274e3 / 0.21e2 * eta - 0.436e3 / 0.21e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 + 0.76e2 / 0.7e1 * eta + 0.16e2) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 - 0.82e2 / 0.21e2 * eta - 0.109e3 / 0.21e2) * ci2 ^ 2 + eta ^ 2 / 0.36e2 + 0.121e3 / 0.252e3 * eta + 0.37e2 / 0.63e2) * (eta - 0.1e1) * sin((g + h + 3 * f)) / 0.20e2 - (0.1e1 + eta) * (0.60e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 2 + 0.17e2 / 0.15e2) * ci2 ^ 4 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.19e2 / 0.60e2) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.60e2) * Delta * cos((g - h + f)) + 0.10e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * cos((g + h + 3 * f)) - 0.70e2 * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((3 * g + h + f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-g + h + f)) + ((0.23e2 * eta ^ 3 - 0.239e3 / 0.6e1 * eta ^ 2 - 0.36e2 * eta + 0.109e3 / 0.6e1) * ci2 ^ 8 + (-0.50e2 * eta ^ 3 + 0.257e3 / 0.3e1 * eta ^ 2 + 0.72e2 * eta - 0.119e3 / 0.3e1) * ci2 ^ 6 + (0.112e3 / 0.3e1 * eta ^ 3 - 0.55e2 * eta ^ 2 - 0.48e2 * eta + 0.19e2) * ci2 ^ 4 + (-0.11e2 * eta ^ 3 + 0.59e2 / 0.6e1 * eta ^ 2 + 0.12e2 * eta + 0.5e1 / 0.2e1) * ci2 ^ 2 - 0.11e2 / 0.8e1 + 0.13e2 / 0.12e2 * eta ^ 3 - 0.5e1 / 0.24e2 * eta ^ 2 - eta) * sin((g + h + f)) + 0.100e3 * ((eta ^ 2 - 0.11e2 / 0.5e1) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * eta ^ 2 + 0.12e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 2 - 0.1e1 / 0.2e1) * Delta * cos((g + h + f)) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2)) / 0.70e2 - 0.19e2 / 0.140e3 * (eta - 0.1e1) * ((eta ^ 3 + 0.413e3 / 0.57e2 * eta ^ 2 + 0.793e3 / 0.57e2 * eta + 0.473e3 / 0.57e2) * ci2 ^ 8 + (-0.46e2 / 0.19e2 * eta ^ 3 - 0.940e3 / 0.57e2 * eta ^ 2 - 0.1766e4 / 0.57e2 * eta - 0.1036e4 / 0.57e2) * ci2 ^ 6 + (0.116e3 / 0.57e2 * eta ^ 3 + 0.238e3 / 0.19e2 * eta ^ 2 + 0.1304e4 / 0.57e2 * eta + 0.754e3 / 0.57e2) * ci2 ^ 4 + (-0.13e2 / 0.19e2 * eta ^ 3 - 0.205e3 / 0.57e2 * eta ^ 2 - 0.359e3 / 0.57e2 * eta - 0.205e3 / 0.57e2) * ci2 ^ 2 + 0.17e2 / 0.228e3 * eta ^ 3 + eta ^ 2 / 0.3e1 + 0.127e3 / 0.228e3 * eta + 0.6e1 / 0.19e2) * sin((-g - h + f))) * (0.1e1 + eta)) / (0.1e1 + eta) ^ 2 * R__e ^ 4 * J ^ 2 / a ^ 5 / eta ^ 8 0.63e2 / 0.8e1 * R__e ^ 4 * (0.321e3 / 0.112e3 * ((-0.7205e4 / 0.321e3 - 0.5978e4 / 0.321e3 * eta + eta ^ 4 + 0.4798e4 / 0.963e3 * eta ^ 3 + 0.3340e4 / 0.963e3 * eta ^ 2) * ci2 ^ 8 + (0.15866e5 / 0.321e3 - 0.3812e4 / 0.321e3 * eta ^ 3 - 0.2792e4 / 0.321e3 * eta ^ 2 + 0.13412e5 / 0.321e3 * eta - 0.230e3 / 0.107e3 * eta ^ 4) * ci2 ^ 6 + (-0.37688e5 / 0.963e3 + 0.10108e5 / 0.963e3 * eta ^ 3 - 0.32780e5 / 0.963e3 * eta + 0.508e3 / 0.321e3 * eta ^ 4 + 0.7924e4 / 0.963e3 * eta ^ 2) * ci2 ^ 4 + (-0.3854e4 / 0.963e3 * eta ^ 3 + 0.106e3 / 0.9e1 * eta - 0.49e2 / 0.107e3 * eta ^ 4 + 0.12569e5 / 0.963e3 - 0.3248e4 / 0.963e3 * eta ^ 2) * ci2 ^ 2 + 0.1015e4 / 0.1926e4 * eta ^ 3 + 0.451e3 / 0.963e3 * eta ^ 2 + 0.19e2 / 0.428e3 * eta ^ 4 - 0.1949e4 / 0.1284e4 - 0.2719e4 / 0.1926e4 * eta) * (0.1e1 + eta) * (eta - 0.1e1) * cos((g + h + 3 * f)) + 0.3e1 / 0.112e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 4 * cos((-g - h + 5 * f)) + 0.3e1 / 0.28e2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.349e3 / 0.9e1 * eta + 0.826e3 / 0.9e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 - 0.263e3 / 0.3e1 * eta - 0.581e3 / 0.3e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 + 0.656e3 / 0.9e1 * eta + 0.1292e4 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 - 0.26e2 * eta - 0.131e3 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.36e2 + 0.229e3 / 0.72e2 * eta + 0.335e3 / 0.72e2) * cos((g + h + 5 * f)) - 0.949e3 / 0.112e3 * ((0.7627e4 / 0.2847e4 + eta ^ 5 + 0.1019e4 / 0.219e3 * eta + 0.6011e4 / 0.2847e4 * eta ^ 4 + 0.5938e4 / 0.2847e4 * eta ^ 3 + 0.2894e4 / 0.949e3 * eta ^ 2) * ci2 ^ 8 + (-0.15014e5 / 0.2847e4 - 0.2394e4 / 0.949e3 * eta ^ 5 - 0.5116e4 / 0.949e3 * eta ^ 3 - 0.18404e5 / 0.2847e4 * eta ^ 2 - 0.26014e5 / 0.2847e4 * eta - 0.5234e4 / 0.949e3 * eta ^ 4) * ci2 ^ 6 + (0.704e3 / 0.219e3 + 0.14384e5 / 0.2847e4 * eta ^ 3 + 0.15628e5 / 0.2847e4 * eta + 0.14776e5 / 0.2847e4 * eta ^ 4 + 0.4312e4 / 0.949e3 * eta ^ 2 + 0.2156e4 / 0.949e3 * eta ^ 5) * ci2 ^ 4 + (-0.1906e4 / 0.949e3 * eta ^ 3 - 0.847e3 / 0.949e3 * eta - 0.1959e4 / 0.949e3 * eta ^ 4 - 0.535e3 / 0.949e3 - 0.1106e4 / 0.949e3 * eta ^ 2 - 0.815e3 / 0.949e3 * eta ^ 5) * ci2 ^ 2 + 0.1601e4 / 0.5694e4 * eta ^ 3 + 0.1319e4 / 0.11388e5 * eta ^ 5 + 0.159e3 / 0.1898e4 * eta ^ 2 + 0.85e2 / 0.292e3 * eta ^ 4 - 0.115e3 / 0.3796e4 * eta - 0.61e2 / 0.11388e5) * (eta - 0.1e1) * cos((-g - h + f)) + 0.25e2 / 0.14e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((3 * g + h + 7 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * sin((-g + h + 3 * f)) / 0.28e2 - 0.50e2 / 0.7e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.2069e4 / 0.400e3 * eta ^ 4 - 0.259e3 / 0.60e2 * eta ^ 3 - 0.979e3 / 0.40e2 * eta ^ 2 + 0.5e1 / 0.4e1 * eta + 0.27587e5 / 0.1200e4) * ci2 ^ 6 + (-0.73e2 / 0.60e2 * eta ^ 5 - 0.2637e4 / 0.400e3 * eta ^ 4 + 0.121e3 / 0.25e2 * eta ^ 3 + 0.18259e5 / 0.600e3 * eta ^ 2 - 0.5e1 / 0.4e1 * eta - 0.11277e5 / 0.400e3) * ci2 ^ 4 + (0.463e3 / 0.1200e4 * eta ^ 5 + 0.1867e4 / 0.800e3 * eta ^ 4 - 0.227e3 / 0.200e3 * eta ^ 3 - 0.12097e5 / 0.1200e4 * eta ^ 2 + 0.41e2 / 0.400e3 * eta + 0.7171e4 / 0.800e3) * ci2 ^ 2 - 0.31e2 / 0.800e3 * eta ^ 5 - 0.689e3 / 0.2400e4 * eta ^ 4 + 0.7e1 / 0.240e3 * eta ^ 3 + 0.271e3 / 0.240e3 * eta ^ 2 + 0.127e3 / 0.2400e4 * eta - 0.2269e4 / 0.2400e4) * cos((3 * g + h + 3 * f)) + 0.103e3 / 0.7e1 * (0.1e1 + eta) * ((eta ^ 4 - 0.437e3 / 0.103e3 * eta ^ 2 + 0.1112e4 / 0.309e3) * ci2 ^ 4 + (-0.34e2 / 0.103e3 * eta ^ 4 + 0.841e3 / 0.618e3 * eta ^ 2 - 0.707e3 / 0.618e3) * ci2 ^ 2 + 0.13e2 / 0.412e3 * eta ^ 4 - 0.61e2 / 0.618e3 * eta ^ 2 + 0.83e2 / 0.1236e4) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((5 * g + h + 5 * f)) - 0.2455e4 / 0.224e3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.8219e4 / 0.2455e4 * eta ^ 4 + 0.6994e4 / 0.2455e4 * eta ^ 3 - 0.9334e4 / 0.2455e4 * eta ^ 2 - 0.17433e5 / 0.2455e4 * eta - 0.6837e4 / 0.2455e4) * ci2 ^ 6 + (-0.3239e4 / 0.2455e4 * eta ^ 5 - 0.2183e4 / 0.491e3 * eta ^ 4 - 0.9842e4 / 0.2455e4 * eta ^ 3 + 0.11622e5 / 0.2455e4 * eta ^ 2 + 0.23881e5 / 0.2455e4 * eta + 0.10061e5 / 0.2455e4) * ci2 ^ 4 + (0.2501e4 / 0.4910e4 * eta ^ 5 + 0.25603e5 / 0.14730e5 * eta ^ 4 + 0.12809e5 / 0.7365e4 * eta ^ 3 - 0.11627e5 / 0.7365e4 * eta ^ 2 - 0.11549e5 / 0.2946e4 * eta - 0.26941e5 / 0.14730e5) * ci2 ^ 2 - 0.514e3 / 0.7365e4 * (eta ^ 4 + 0.656e3 / 0.257e3 * eta ^ 3 + 0.346e3 / 0.257e3 * eta ^ 2 - 0.1136e4 / 0.257e3 * eta - 0.1123e4 / 0.257e3) * (0.1e1 + eta)) * cos((3 * g + h + f)) + 0.60e2 / 0.7e1 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.6e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 + 0.29e2 / 0.4e1) * ci2 ^ 2 + eta ^ 2 / 0.3e1 - 0.11e2 / 0.6e1) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((-g - h + f)) - 0.89e2 / 0.168e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 * (ci2 ^ 2 + 0.1e1) * cos((3 * g - h + 8 * f)) / 0.89e2 + (0.12e2 / 0.89e2 * ci2 ^ 4 - 0.4e1 / 0.89e2 * ci2 ^ 2) * cos((5 * g + h + 10 * f)) + cos((5 * g + h)) * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2)) * (eta - 0.1e1) * (-eta ^ 2 + 0.1e1) ^ (0.3e1 / 0.2e1) - 0.5e1 / 0.28e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.23e2 / 0.4e1 * eta + 0.39e2 / 0.20e2) * ci2 ^ 6 + (-0.7e1 / 0.5e1 * eta ^ 2 - 0.173e3 / 0.20e2 * eta - 0.97e2 / 0.20e2) * ci2 ^ 4 + (0.11e2 / 0.20e2 * eta ^ 2 + 0.101e3 / 0.24e2 * eta + 0.141e3 / 0.40e2) * ci2 ^ 2 - 0.11e2 / 0.120e3 * eta ^ 2 - 0.17e2 / 0.20e2 * eta - 0.33e2 / 0.40e2) * cos((-3 * g - h + f)) + 0.5e1 / 0.28e2 * ((eta ^ 2 - 0.1123e4 / 0.20e2 * eta - 0.2071e4 / 0.20e2) * ci2 ^ 6 + (-eta ^ 2 + 0.1281e4 / 0.20e2 * eta + 0.2229e4 / 0.20e2) * ci2 ^ 4 + (eta ^ 2 / 0.4e1 - 0.1913e4 / 0.120e3 * eta - 0.957e3 / 0.40e2) * ci2 ^ 2 - eta ^ 2 / 0.24e2 + 0.23e2 / 0.60e2 * eta + 0.17e2 / 0.40e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 7 * f)) - 0.5e1 / 0.32e2 * (0.1e1 + eta) ^ 2 * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((g - h + 7 * f)) + 0.3e1 / 0.224e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((-g + h + 5 * f)) - 0.5e1 / 0.2e1 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * sin((-3 * g - h + f)) + 0.3e1 / 0.56e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 + 0.13e2 / 0.18e2) * (eta - 0.1e1) ^ 2 * cos((3 * g - h + 7 * f)) - 0.45e2 / 0.7e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.5e1) * ci2 ^ 6 + (-0.107e3 / 0.90e2 * eta ^ 2 + 0.527e3 / 0.90e2) * ci2 ^ 4 + (0.31e2 / 0.90e2 * eta ^ 2 - 0.151e3 / 0.90e2) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.12e2) * Delta * (eta - 0.1e1) * sin((g - h + 3 * f)) - 0.15e2 / 0.7e1 * (0.1e1 + eta) ^ 3 * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sin((g - h + 5 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.32e2) * ci2 ^ 2 - eta ^ 2 / 0.12e2 + 0.181e3 / 0.12e2) * cos((3 * g - h + f)) / 0.14e2 + 0.73e2 / 0.84e2 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((5 * g + h + 9 * f)) + 0.5e1 / 0.32e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((3 * g + h + 9 * f)) + (-0.37e2 / 0.7e1 * ((eta ^ 5 - 0.585e3 / 0.148e3 * eta ^ 4 - 0.657e3 / 0.37e2 * eta ^ 3 - 0.19e2 / 0.2e1 * eta ^ 2 + 0.802e3 / 0.37e2 * eta + 0.2583e4 / 0.148e3) * ci2 ^ 6 + (-0.49e2 / 0.37e2 * eta ^ 5 + 0.681e3 / 0.148e3 * eta ^ 4 + 0.832e3 / 0.37e2 * eta ^ 3 + 0.973e3 / 0.74e2 * eta ^ 2 - 0.1005e4 / 0.37e2 * eta - 0.3395e4 / 0.148e3) * ci2 ^ 4 + (0.19e2 / 0.37e2 * eta ^ 5 - 0.1133e4 / 0.888e3 * eta ^ 4 - 0.581e3 / 0.74e2 * eta ^ 3 - 0.2431e4 / 0.444e3 * eta ^ 2 + 0.2027e4 / 0.222e3 * eta + 0.7531e4 / 0.888e3) * ci2 ^ 2 - 0.8e1 / 0.111e3 * eta ^ 5 + 0.10e2 / 0.111e3 * eta ^ 4 + 0.433e3 / 0.444e3 * eta ^ 3 + 0.365e3 / 0.444e3 * eta ^ 2 - 0.497e3 / 0.444e3 * eta - 0.509e3 / 0.444e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + h + 2 * f)) - 0.51e2 / 0.7e1 * ((eta ^ 5 - 0.143e3 / 0.204e3 * eta ^ 4 - 0.814e3 / 0.51e2 * eta ^ 3 - 0.513e3 / 0.34e2 * eta ^ 2 + 0.70e2 / 0.3e1 * eta + 0.5201e4 / 0.204e3) * ci2 ^ 6 + (-0.65e2 / 0.51e2 * eta ^ 5 + 0.41e2 / 0.68e2 * eta ^ 4 + 0.655e3 / 0.34e2 * eta ^ 3 + 0.929e3 / 0.51e2 * eta ^ 2 - 0.2821e4 / 0.102e3 * eta - 0.6083e4 / 0.204e3) * ci2 ^ 4 + (0.23e2 / 0.51e2 * eta ^ 5 + 0.19e2 / 0.408e3 * eta ^ 4 - 0.898e3 / 0.153e3 * eta ^ 3 - 0.3497e4 / 0.612e3 * eta ^ 2 + 0.805e3 / 0.102e3 * eta + 0.10237e5 / 0.1224e4) * ci2 ^ 2 - 0.11e2 / 0.204e3 * (0.1e1 + eta) * (eta ^ 4 + 0.2e1 / 0.33e2 * eta ^ 3 - 0.323e3 / 0.33e2 * eta ^ 2 - 0.34e2 / 0.33e2 * eta + 0.398e3 / 0.33e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + h + 4 * f)) + 0.17e2 / 0.42e2 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((g + h + 6 * f)) - 0.11e2 / 0.28e2 * (0.1e1 + eta) * ((eta ^ 2 + 0.25e2 / 0.11e2 * eta + 0.2e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.20e2 / 0.3e1 * eta - 0.47e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.80e2 / 0.11e2 * eta + 0.26e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.37e2 / 0.11e2 * eta - 0.15e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.23e2 / 0.44e2 * eta + 0.31e2 / 0.132e3) * (eta - 0.1e1) ^ 2 * cos((-g - h + 4 * f)) + 0.19e2 / 0.7e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.63e2 / 0.76e2 * eta ^ 4 - 0.239e3 / 0.19e2 * eta ^ 3 - 0.397e3 / 0.38e2 * eta ^ 2 + 0.182e3 / 0.19e2 * eta + 0.489e3 / 0.76e2) * ci2 ^ 6 + (-0.23e2 / 0.19e2 * eta ^ 5 + 0.63e2 / 0.76e2 * eta ^ 4 + 0.264e3 / 0.19e2 * eta ^ 3 + 0.447e3 / 0.38e2 * eta ^ 2 - 0.175e3 / 0.19e2 * eta - 0.461e3 / 0.76e2) * ci2 ^ 4 + (eta ^ 5 / 0.3e1 - 0.59e2 / 0.456e3 * eta ^ 4 - 0.337e3 / 0.114e3 * eta ^ 3 - 0.31e2 / 0.12e2 * eta ^ 2 + 0.27e2 / 0.38e2 * eta + 0.37e2 / 0.456e3) * ci2 ^ 2 - eta ^ 5 / 0.114e3 - eta ^ 4 / 0.114e3 - 0.17e2 / 0.228e3 * eta ^ 3 - 0.7e1 / 0.76e2 * eta ^ 2 + 0.25e2 / 0.76e2 * eta + 0.29e2 / 0.76e2) * cos((g - h + 2 * f)) + 0.45e2 / 0.28e2 * (0.1e1 + eta) * ((eta ^ 3 + 0.2e1 / 0.3e1 * eta ^ 2 - 0.329e3 / 0.27e2 * eta - 0.2608e4 / 0.135e3) * ci2 ^ 8 + (-0.67e2 / 0.27e2 * eta ^ 3 - 0.49e2 / 0.27e2 * eta ^ 2 + 0.739e3 / 0.27e2 * eta + 0.5621e4 / 0.135e3) * ci2 ^ 6 + (0.104e3 / 0.45e2 * eta ^ 3 + 0.28e2 / 0.15e2 * eta ^ 2 - 0.3034e4 / 0.135e3 * eta - 0.4318e4 / 0.135e3) * ci2 ^ 4 + (-0.14e2 / 0.15e2 * eta ^ 3 - 0.37e2 / 0.45e2 * eta ^ 2 + 0.1064e4 / 0.135e3 * eta + 0.277e3 / 0.27e2) * ci2 ^ 2 + 0.7e1 / 0.54e2 * eta ^ 3 + 0.13e2 / 0.108e3 * eta ^ 2 - 0.257e3 / 0.270e3 * eta - 0.23e2 / 0.20e2) * (eta - 0.1e1) * cos((g + h + 4 * f)) - 0.11e2 / 0.14e2 * ((0.325e3 / 0.66e2 + 0.101e3 / 0.66e2 * eta + eta ^ 4 + 0.125e3 / 0.22e2 * eta ^ 3 + 0.229e3 / 0.66e2 * eta ^ 2) * ci2 ^ 8 + (-0.136e3 / 0.33e2 - 0.481e3 / 0.33e2 * eta ^ 3 - 0.37e2 / 0.11e2 * eta ^ 2 + 0.277e3 / 0.33e2 * eta - 0.101e3 / 0.33e2 * eta ^ 4) * ci2 ^ 6 + (-0.184e3 / 0.33e2 + 0.150e3 / 0.11e2 * eta ^ 3 - 0.734e3 / 0.33e2 * eta + 0.38e2 / 0.11e2 * eta ^ 4 - 0.118e3 / 0.33e2 * eta ^ 2) * ci2 ^ 4 + (-0.119e3 / 0.22e2 * eta ^ 3 + 0.91e2 / 0.6e1 * eta - 0.18e2 / 0.11e2 * eta ^ 4 + 0.409e3 / 0.66e2 + 0.295e3 / 0.66e2 * eta ^ 2) * ci2 ^ 2 + 0.65e2 / 0.88e2 * eta ^ 3 - 0.265e3 / 0.264e3 * eta ^ 2 + 0.17e2 / 0.66e2 * eta ^ 4 - 0.347e3 / 0.264e3 - 0.755e3 / 0.264e3 * eta) * (eta - 0.1e1) * cos((-g - h + 2 * f)) - 0.110e3 / 0.7e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((3 * g + h + 6 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * sin((-g + h + 2 * f)) / 0.7e1 - 0.10e2 / 0.7e1 * ((eta ^ 4 + 0.41e2 / 0.80e2 * eta ^ 3 - 0.1933e4 / 0.240e3 * eta ^ 2 - 0.535e3 / 0.48e2 * eta - 0.167e3 / 0.48e2) * ci2 ^ 6 + (-0.41e2 / 0.30e2 * eta ^ 4 - 0.227e3 / 0.240e3 * eta ^ 3 + 0.2609e4 / 0.240e3 * eta ^ 2 + 0.1353e4 / 0.80e2 * eta + 0.509e3 / 0.80e2) * ci2 ^ 4 + (0.17e2 / 0.30e2 * eta ^ 4 + 0.289e3 / 0.480e3 * eta ^ 3 - 0.2087e4 / 0.480e3 * eta ^ 2 - 0.3857e4 / 0.480e3 * eta - 0.349e3 / 0.96e2) * ci2 ^ 2 - 0.7e1 / 0.80e2 * (0.1e1 + eta) * (eta ^ 3 + 0.5e1 / 0.21e2 * eta ^ 2 - 0.61e2 / 0.7e1 * eta - 0.25e2 / 0.3e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + h)) + 0.240e3 / 0.7e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * ((eta ^ 2 - 0.2e1) * ci2 ^ 4 + (-0.9e1 / 0.8e1 * eta ^ 2 + 0.17e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.12e2) * sin((g + h + 2 * f)) + 0.87e2 / 0.28e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.1091e4 / 0.87e2 * eta ^ 2 + 0.4568e4 / 0.261e3) * ci2 ^ 4 + (-0.95e2 / 0.261e3 * eta ^ 4 + 0.1108e4 / 0.261e3 * eta ^ 2 - 0.1505e4 / 0.261e3) * ci2 ^ 2 + 0.4e1 / 0.87e2 * eta ^ 4 - 0.12e2 / 0.29e2 * eta ^ 2 + 0.40e2 / 0.87e2) * cos((5 * g + h + 4 * f)) + 0.200e3 / 0.7e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * ((eta ^ 3 + 0.3e1 / 0.2e1 * eta ^ 2 - 0.31e2 / 0.10e2) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * eta ^ 3 - 0.9e1 / 0.5e1 * eta ^ 2 + 0.18e2 / 0.5e1) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 3 + 0.9e1 / 0.20e2 * eta ^ 2 - 0.17e2 / 0.20e2) * sin((g + h)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.47e2 / 0.28e2 * eta ^ 3 - 0.267e3 / 0.28e2 * eta ^ 2 + 0.109e3 / 0.28e2 * eta - 0.1e1 / 0.28e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 4 - 0.83e2 / 0.28e2 * eta ^ 3 + 0.779e3 / 0.84e2 * eta ^ 2 - 0.109e3 / 0.28e2 * eta + 0.269e3 / 0.84e2) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.211e3 / 0.168e3 * eta ^ 3 - 0.271e3 / 0.168e3 * eta ^ 2 + 0.31e2 / 0.56e2 * eta - 0.389e3 / 0.168e3) * ci2 ^ 2 - eta ^ 4 / 0.84e2 - 0.2e1 / 0.21e2 * eta ^ 3 - 0.5e1 / 0.84e2 * eta ^ 2 + eta / 0.21e2 + 0.11e2 / 0.42e2) * cos((g - h)) + 0.46e2 / 0.21e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.2207e4 / 0.184e3 * eta ^ 2 + 0.2979e4 / 0.184e3) * ci2 ^ 4 + (-0.15e2 / 0.46e2 * eta ^ 4 + 0.687e3 / 0.184e3 * eta ^ 2 - 0.931e3 / 0.184e3) * ci2 ^ 2 + 0.3e1 / 0.92e2 * eta ^ 4 - 0.21e2 / 0.92e2 * eta ^ 2 + 0.9e1 / 0.46e2) * cos((5 * g + h + 6 * f)) + 0.20e2 / 0.7e1 * ((eta ^ 4 + 0.527e3 / 0.160e3 * eta ^ 3 - 0.753e3 / 0.160e3 * eta ^ 2 - 0.507e3 / 0.32e2 * eta - 0.1311e4 / 0.160e3) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 4 - 0.123e3 / 0.32e2 * eta ^ 3 + 0.829e3 / 0.160e3 * eta ^ 2 + 0.2799e4 / 0.160e3 * eta + 0.1443e4 / 0.160e3) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.317e3 / 0.320e3 * eta ^ 3 - 0.1033e4 / 0.960e3 * eta ^ 2 - 0.1117e4 / 0.320e3 * eta - 0.1583e4 / 0.960e3) * ci2 ^ 2 - (eta ^ 3 + eta ^ 2 / 0.5e1 + 0.13e2 / 0.5e1 * eta + 0.81e2 / 0.5e1) * (0.1e1 + eta) / 0.96e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - h + 4 * f)) - 0.120e3 / 0.7e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((-g - h + 2 * f)) + 0.2e1 / 0.7e1 * ((eta ^ 3 + 0.31e2 / 0.16e2 * eta ^ 2 - 0.77e2 / 0.8e1 * eta - 0.157e3 / 0.16e2) * ci2 ^ 6 + (-eta ^ 3 - 0.31e2 / 0.16e2 * eta ^ 2 + 0.69e2 / 0.8e1 * eta + 0.141e3 / 0.16e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.43e2 / 0.96e2 * eta ^ 2 - 0.133e3 / 0.48e2 * eta - 0.265e3 / 0.96e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 - eta / 0.2e1 - 0.19e2 / 0.2e1) / 0.24e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-g + h + 2 * f)) - 0.4e1 / 0.21e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.79e2 / 0.16e2 * eta ^ 2 - 0.267e3 / 0.16e2) * ci2 ^ 2 - eta ^ 4 / 0.2e1 - 0.29e2 / 0.16e2 * eta ^ 2 + 0.133e3 / 0.16e2) * cos((3 * g - h + 2 * f)) - 0.5e1 / 0.28e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.7e1 / 0.5e1 * eta ^ 2 - 0.8e1) * ci2 ^ 2 - 0.3e1 / 0.5e1 * eta ^ 4 + 0.4e1 / 0.5e1 * eta ^ 2 + 0.49e2 / 0.15e2) * cos((3 * g - h + 4 * f)) + 0.90e2 / 0.7e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 2 + 0.52e2 / 0.45e2) * ci2 ^ 4 + (0.7e1 / 0.20e2 * eta ^ 2 - 0.59e2 / 0.180e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.60e2) * sin((g - h)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 + 0.17e2 / 0.4e1) * ci2 ^ 2 - eta ^ 2 + 0.7e1 / 0.4e1) * cos((3 * g - h + 6 * f)) / 0.21e2 - 0.20e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 6 - 0.89e2 / 0.70e2 * ci2 ^ 4 + 0.127e3 / 0.280e3 * ci2 ^ 2 - 0.3e1 / 0.56e2) * sin((3 * g + h)) + 0.90e2 / 0.7e1 * (ci2 ^ 6 - 0.53e2 / 0.45e2 * ci2 ^ 4 + 0.61e2 / 0.180e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((g - h + 4 * f)) - 0.11e2 / 0.168e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 + 0.151e3 / 0.11e2) * ci2 ^ 2 - 0.5e1 / 0.11e2 * eta ^ 2 - 0.67e2 / 0.11e2) * cos((3 * g - h)) + 0.60e2 / 0.7e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((g + h + 4 * f)) - 0.390e3 / 0.7e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.95e2 / 0.39e2) * ci2 ^ 6 + (-0.159e3 / 0.130e3 * eta ^ 2 + 0.75e2 / 0.26e2) * ci2 ^ 4 + (0.103e3 / 0.260e3 * eta ^ 2 - 0.133e3 / 0.156e3) * ci2 ^ 2 - eta ^ 2 / 0.26e2 + 0.5e1 / 0.78e2) * sin((3 * g + h + 2 * f)) - 0.360e3 / 0.7e1 * ((eta ^ 2 - 0.22e2 / 0.9e1) * ci2 ^ 6 + (-0.7e1 / 0.6e1 * eta ^ 2 + 0.124e3 / 0.45e2) * ci2 ^ 4 + (0.79e2 / 0.240e3 * eta ^ 2 - 0.497e3 / 0.720e3) * ci2 ^ 2 - eta ^ 2 / 0.48e2 + 0.1e1 / 0.48e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + h + 4 * f)) + (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * cos((-g + h + 4 * f)) / 0.7e1 + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.191e3 / 0.56e2 * eta + 0.113e3 / 0.56e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.91e2 / 0.24e2 * eta - 0.53e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.37e2 / 0.48e2 * eta + 0.125e3 / 0.336e3) * ci2 ^ 2 - eta ^ 2 / 0.84e2 + eta / 0.24e2 + 0.3e1 / 0.56e2) * (eta - 0.1e1) ^ 2 * cos((g - h + 6 * f)) - 0.31e2 / 0.7e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.357e3 / 0.248e3 * eta ^ 2 - 0.3671e4 / 0.372e3 * eta - 0.10849e5 / 0.744e3) * ci2 ^ 6 + (-0.113e3 / 0.93e2 * eta ^ 3 - 0.1231e4 / 0.744e3 * eta ^ 2 + 0.1405e4 / 0.124e3 * eta + 0.3979e4 / 0.248e3) * ci2 ^ 4 + (0.35e2 / 0.93e2 * eta ^ 3 + 0.23e2 / 0.48e2 * eta ^ 2 - 0.2153e4 / 0.744e3 * eta - 0.5519e4 / 0.1488e4) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 + 0.11e2 / 0.24e2 * eta - 0.89e2 / 0.24e2) / 0.31e2) * (eta - 0.1e1) * cos((3 * g + h + 6 * f)) + 0.39e2 / 0.56e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.815e3 / 0.117e3) * ci2 ^ 4 + (-0.35e2 / 0.117e3 * eta ^ 2 + 0.259e3 / 0.117e3) * ci2 ^ 2 + 0.2e1 / 0.117e3 * eta ^ 2 - 0.2e1 / 0.117e3) * cos((5 * g + h + 8 * f)) + 0.180e3 / 0.7e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.5e1 / 0.3e1) * ci2 ^ 6 + (-0.71e2 / 0.60e2 * eta ^ 2 + 0.349e3 / 0.180e3) * ci2 ^ 4 + (0.41e2 / 0.120e3 * eta ^ 2 - 0.199e3 / 0.360e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 + 0.1e1 / 0.36e2) * Delta * sin((g - h + 2 * f)) - 0.5e1 / 0.56e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + 2 * f)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * cos((3 * g + h + 8 * f)) + 0.29e2 / 0.14e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.1435e4 / 0.174e3) * ci2 ^ 4 + (-0.35e2 / 0.87e2 * eta ^ 2 + 0.533e3 / 0.174e3) * ci2 ^ 2 + 0.5e1 / 0.87e2 * eta ^ 2 - 0.32e2 / 0.87e2) * (eta - 0.1e1) * cos((5 * g + h + 2 * f)) + ((0.275e3 / 0.3e1 + 0.2e1 * eta ^ 5 + 0.541e3 / 0.6e1 * eta - 0.29e2 / 0.2e1 * eta ^ 4 - 0.753e3 / 0.14e2 * eta ^ 3 - 0.471e3 / 0.14e2 * eta ^ 2) * ci2 ^ 8 + (-0.616e3 / 0.3e1 - 0.109e3 / 0.21e2 * eta ^ 5 + 0.374e3 / 0.3e1 * eta ^ 3 + 0.1718e4 / 0.21e2 * eta ^ 2 - 0.607e3 / 0.3e1 * eta + 0.638e3 / 0.21e2 * eta ^ 4) * ci2 ^ 6 + (0.6959e4 / 0.42e2 - 0.738e3 / 0.7e1 * eta ^ 3 + 0.6875e4 / 0.42e2 * eta + 0.71e2 / 0.14e2 * eta ^ 5 - 0.297e3 / 0.14e2 * eta ^ 4 - 0.520e3 / 0.7e1 * eta ^ 2) * ci2 ^ 4 + (0.38e2 * eta ^ 3 - 0.391e3 / 0.7e1 * eta - 0.15e2 / 0.7e1 * eta ^ 5 + 0.11e2 / 0.2e1 * eta ^ 4 - 0.789e3 / 0.14e2 + 0.204e3 / 0.7e1 * eta ^ 2) * ci2 ^ 2 - 0.19e2 / 0.4e1 * eta ^ 3 + 0.13e2 / 0.42e2 * eta ^ 5 - 0.82e2 / 0.21e2 * eta ^ 2 - 0.73e2 / 0.168e3 * eta ^ 4 + 0.557e3 / 0.84e2 * eta + 0.1121e4 / 0.168e3) * cos((g + h + 2 * f)) + ((0.817e3 / 0.14e2 - 0.223e3 / 0.42e2 * eta ^ 5 + 0.416e3 / 0.7e1 * eta - 0.68e2 / 0.3e1 * eta ^ 4 - 0.1621e4 / 0.42e2 * eta ^ 3 - 0.295e3 / 0.42e2 * eta ^ 2) * ci2 ^ 8 + (-0.1795e4 / 0.14e2 + 0.163e3 / 0.14e2 * eta ^ 5 + 0.599e3 / 0.7e1 * eta ^ 3 + 0.117e3 / 0.7e1 * eta ^ 2 - 0.1825e4 / 0.14e2 * eta + 0.697e3 / 0.14e2 * eta ^ 4) * ci2 ^ 6 + (0.295e3 / 0.3e1 - 0.2791e4 / 0.42e2 * eta ^ 3 + 0.2095e4 / 0.21e2 * eta - 0.367e3 / 0.42e2 * eta ^ 5 - 0.1579e4 / 0.42e2 * eta ^ 4 - 0.89e2 / 0.6e1 * eta ^ 2) * ci2 ^ 4 + (0.293e3 / 0.14e2 * eta ^ 3 - 0.185e3 / 0.6e1 * eta + 0.18e2 / 0.7e1 * eta ^ 5 + 0.157e3 / 0.14e2 * eta ^ 4 - 0.640e3 / 0.21e2 + 0.79e2 / 0.14e2 * eta ^ 2) * ci2 ^ 2 - 0.31e2 / 0.14e2 * eta ^ 3 - eta ^ 5 / 0.4e1 - 0.59e2 / 0.84e2 * eta ^ 2 - 0.187e3 / 0.168e3 * eta ^ 4 + 0.271e3 / 0.84e2 * eta + 0.179e3 / 0.56e2) * cos((g + h))) * sqrt(-eta ^ 2 + 0.1e1) + 0.25e2 / 0.168e3 * (0.758e3 / 0.25e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.609e3 / 0.1516e4 * ci2 ^ 2 + 0.21e2 / 0.379e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((5 * g + h + f)) + 0.72e2 / 0.5e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 6 - 0.37e2 / 0.30e2 * ci2 ^ 4 + 0.11e2 / 0.30e2 * ci2 ^ 2 - 0.1e1 / 0.60e2) * sin((-g + h + f)) - 0.216e3 / 0.5e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 4 - 0.6e1 * eta ^ 2 + 0.5e1) * ci2 ^ 6 + (-0.6e1 / 0.5e1 * eta ^ 4 + 0.106e3 / 0.15e2 * eta ^ 2 - 0.52e2 / 0.9e1) * ci2 ^ 4 + (0.7e1 / 0.20e2 * eta ^ 4 - 0.61e2 / 0.30e2 * eta ^ 2 + 0.59e2 / 0.36e2) * ci2 ^ 2 - eta ^ 4 / 0.60e2 + eta ^ 2 / 0.10e2 - 0.1e1 / 0.12e2) * sin((g - h + f)) - 0.192e3 / 0.5e1 * ((eta ^ 2 - 0.11e2 / 0.2e1) * ci2 ^ 4 + (-0.9e1 / 0.8e1 * eta ^ 2 + 0.45e2 / 0.8e1) * ci2 ^ 2 + eta ^ 2 / 0.4e1 - 0.1e1) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((g + h + 3 * f)) - 0.36e2 / 0.5e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sin((g + h + 5 * f)) + 0.312e3 / 0.5e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.97e2 / 0.13e2) * ci2 ^ 6 + (-0.167e3 / 0.130e3 * eta ^ 2 + 0.1187e4 / 0.130e3) * ci2 ^ 4 + (0.61e2 / 0.130e3 * eta ^ 2 - 0.77e2 / 0.26e2) * ci2 ^ 2 - 0.3e1 / 0.52e2 * eta ^ 2 + 0.15e2 / 0.52e2) * (eta - 0.1e1) * sin((3 * g + h + f)) + (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-3 * g + h + f)) - 0.9e1 / 0.10e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * cos((g + h + 7 * f)) + ((0.604e3 + 0.2796e4 / 0.25e2 * eta ^ 5 + 0.36e2 * eta + 0.60e2 * eta ^ 4 - 0.1632e4 / 0.5e1 * eta ^ 3 - 0.11304e5 / 0.25e2 * eta ^ 2) * ci2 ^ 8 + (-0.6796e4 / 0.5e1 - 0.6624e4 / 0.25e2 * eta ^ 5 + 0.18216e5 / 0.25e2 * eta ^ 3 + 0.26288e5 / 0.25e2 * eta ^ 2 - 0.72e2 * eta - 0.3732e4 / 0.25e2 * eta ^ 4) * ci2 ^ 6 + (0.27358e5 / 0.25e2 - 0.14136e5 / 0.25e2 * eta ^ 3 + 0.48e2 * eta + 0.5544e4 / 0.25e2 * eta ^ 5 + 0.3486e4 / 0.25e2 * eta ^ 4 - 0.22332e5 / 0.25e2 * eta ^ 2) * ci2 ^ 4 + (0.4428e4 / 0.25e2 * eta ^ 3 - 0.12e2 * eta - 0.384e3 / 0.5e1 * eta ^ 5 - 0.282e3 / 0.5e1 * eta ^ 4 - 0.9206e4 / 0.25e2 + 0.8088e4 / 0.25e2 * eta ^ 2) * ci2 ^ 2 - 0.96e2 / 0.5e1 * eta ^ 3 + 0.47e2 / 0.5e1 * eta ^ 5 - 0.1013e4 / 0.25e2 * eta ^ 2 + 0.389e3 / 0.50e2 * eta ^ 4 + 0.2149e4 / 0.50e2 + eta) * cos((g + h + f)) - 0.72e2 * ((eta ^ 4 - 0.42e2 / 0.5e1 * eta ^ 2 + 0.9e1) * ci2 ^ 4 + (-0.6e1 / 0.5e1 * eta ^ 4 + 0.48e2 / 0.5e1 * eta ^ 2 - 0.10e2) * ci2 ^ 2 + 0.3e1 / 0.10e2 * eta ^ 4 - 0.11e2 / 0.5e1 * eta ^ 2 + 0.13e2 / 0.6e1) * sin((g + h + f)) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2)) * (0.1e1 + eta) - 0.89e2 / 0.224e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.490e3 / 0.89e2 * eta ^ 3 - 0.488e3 / 0.89e2 * eta ^ 2 + 0.746e3 / 0.89e2 * eta + 0.639e3 / 0.89e2) * ci2 ^ 6 + (-0.137e3 / 0.89e2 * eta ^ 4 + 0.434e3 / 0.89e2 * eta ^ 3 + 0.480e3 / 0.89e2 * eta ^ 2 - 0.434e3 / 0.89e2 * eta - 0.327e3 / 0.89e2) * ci2 ^ 4 + (0.103e3 / 0.178e3 * eta ^ 4 - 0.269e3 / 0.267e3 * eta ^ 3 - 0.128e3 / 0.89e2 * eta ^ 2 + 0.47e2 / 0.89e2 * eta + 0.187e3 / 0.534e3) * ci2 ^ 2 - 0.11e2 / 0.267e3 * (0.1e1 + eta) * (eta ^ 3 - 0.27e2 / 0.11e2 * eta ^ 2 - 0.3e1 / 0.11e2 * eta + 0.51e2 / 0.11e2)) * (eta - 0.1e1) * cos((-g + h + f)) + 0.5e1 / 0.224e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 3 * f)) + 0.5e1 / 0.2e1 * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * sin((-g - h + 3 * f)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.117e3 / 0.8e1 * eta - 0.101e3 / 0.8e1) * ci2 ^ 6 + (-eta ^ 2 + 0.115e3 / 0.8e1 * eta + 0.99e2 / 0.8e1) * ci2 ^ 4 + (eta ^ 2 / 0.8e1 - 0.77e2 / 0.16e2 * eta - 0.71e2 / 0.16e2) * ci2 ^ 2 + (eta + 0.29e2) * (0.1e1 + eta) / 0.48e2) * cos((-g + h + 3 * f)) / 0.14e2 + 0.90e2 / 0.7e1 * (0.1e1 + eta) * ((eta ^ 4 - 0.32e2 / 0.3e1 * eta ^ 2 + 0.115e3 / 0.9e1) * ci2 ^ 6 + (-0.37e2 / 0.30e2 * eta ^ 4 + 0.188e3 / 0.15e2 * eta ^ 2 - 0.265e3 / 0.18e2) * ci2 ^ 4 + (0.49e2 / 0.120e3 * eta ^ 4 - 0.217e3 / 0.60e2 * eta ^ 2 + 0.287e3 / 0.72e2) * ci2 ^ 2 - eta ^ 4 / 0.24e2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.24e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + h + 3 * f)) - 0.465e3 / 0.224e3 * ((eta ^ 4 + 0.1574e4 / 0.93e2 * eta ^ 3 + 0.8864e4 / 0.465e3 * eta ^ 2 - 0.4870e4 / 0.93e2 * eta - 0.6125e4 / 0.93e2) * ci2 ^ 6 + (-0.171e3 / 0.155e3 * eta ^ 4 - 0.9478e4 / 0.465e3 * eta ^ 3 - 0.10424e5 / 0.465e3 * eta ^ 2 + 0.9442e4 / 0.155e3 * eta + 0.34601e5 / 0.465e3) * ci2 ^ 4 + (0.223e3 / 0.930e3 * eta ^ 4 + 0.8599e4 / 0.1395e4 * eta ^ 3 + 0.20e2 / 0.3e1 * eta ^ 2 - 0.22759e5 / 0.1395e4 * eta - 0.10481e5 / 0.558e3) * ci2 ^ 2 + (0.1e1 + eta) * (eta ^ 3 - 0.721e3 * eta ^ 2 - 0.153e3 * eta + 0.1385e4) / 0.1395e4) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + h + 5 * f)) + 0.575e3 / 0.42e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.318e3 / 0.115e3) * ci2 ^ 4 + (-0.841e3 / 0.2300e4 * eta ^ 2 + 0.2209e4 / 0.2300e4) * ci2 ^ 2 + 0.51e2 / 0.1150e4 * eta ^ 2 - 0.111e3 / 0.1150e4) * cos((5 * g + h + 3 * f)) - 0.4e1 / 0.7e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.709e3 / 0.64e2 * eta ^ 2 - 0.1021e4 / 0.32e2 * eta - 0.1125e4 / 0.64e2) * ci2 ^ 6 + (-0.9e1 / 0.8e1 * eta ^ 3 + 0.823e3 / 0.64e2 * eta ^ 2 + 0.1143e4 / 0.32e2 * eta + 0.1247e4 / 0.64e2) * ci2 ^ 4 + (0.17e2 / 0.64e2 * eta ^ 3 - 0.1265e4 / 0.384e3 * eta ^ 2 - 0.731e3 / 0.96e2 * eta - 0.471e3 / 0.128e3) * ci2 ^ 2 + (0.1e1 + eta) * (eta ^ 2 + 0.22e2 * eta - 0.131e3) / 0.384e3) * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) + 0.269e3 / 0.42e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.680e3 / 0.269e3) * ci2 ^ 4 + (-0.327e3 / 0.1076e4 * eta ^ 2 + 0.851e3 / 0.1076e4) * ci2 ^ 2 + 0.9e1 / 0.538e3 * eta ^ 2 - 0.9e1 / 0.538e3) * (eta - 0.1e1) * cos((5 * g + h + 7 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.22e2 / 0.3e1 * eta ^ 2 - 0.223e3 / 0.21e2) * ci2 ^ 2 - 0.6e1 / 0.7e1 * eta ^ 4 - 0.58e2 / 0.21e2 * eta ^ 2 + 0.16e2 / 0.3e1) * cos((3 * g - h + 3 * f)) / 0.4e1 + 0.55e2 / 0.7e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.83e2 / 0.11e2) * ci2 ^ 6 + (-0.129e3 / 0.110e3 * eta ^ 2 + 0.921e3 / 0.110e3) * ci2 ^ 4 + (0.37e2 / 0.110e3 * eta ^ 2 - 0.217e3 / 0.110e3) * ci2 ^ 2 - eta ^ 2 / 0.44e2 + 0.1e1 / 0.44e2) * Delta * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) - 0.5e1 / 0.42e2 * ((eta ^ 2 + 0.24e2 / 0.5e1) * ci2 ^ 2 - 0.33e2 / 0.20e2 * eta ^ 2 - 0.7e1 / 0.20e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((3 * g - h + 5 * f)) + 0.11e2 / 0.28e2 * ((eta ^ 3 - 0.140e3 / 0.33e2 * eta ^ 2 - 0.301e3 / 0.33e2 * eta - 0.20e2 / 0.33e2) * ci2 ^ 8 + (-0.26e2 / 0.11e2 * eta ^ 3 + 0.155e3 / 0.11e2 * eta ^ 2 + 0.332e3 / 0.11e2 * eta + 0.79e2 / 0.11e2) * ci2 ^ 6 + (0.64e2 / 0.33e2 * eta ^ 3 - 0.189e3 / 0.11e2 * eta ^ 2 - 0.1202e4 / 0.33e2 * eta - 0.427e3 / 0.33e2) * ci2 ^ 4 + (-0.7e1 / 0.11e2 * eta ^ 3 + 0.26e2 / 0.3e1 * eta ^ 2 + 0.599e3 / 0.33e2 * eta + 0.256e3 / 0.33e2) * ci2 ^ 2 + 0.3e1 / 0.44e2 * eta ^ 3 - 0.377e3 / 0.264e3 * eta ^ 2 - 0.65e2 / 0.22e2 * eta - 0.361e3 / 0.264e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-g - h + 3 * f)) + 0.109e3 / 0.14e2 * ((eta ^ 5 + 0.495e3 / 0.436e3 * eta ^ 4 - 0.85e2 / 0.109e3 * eta ^ 3 - 0.705e3 / 0.218e3 * eta ^ 2 + 0.120e3 / 0.109e3 * eta + 0.171e3 / 0.436e3) * ci2 ^ 6 + (-0.130e3 / 0.109e3 * eta ^ 5 - 0.559e3 / 0.436e3 * eta ^ 4 + 0.86e2 / 0.109e3 * eta ^ 3 + 0.703e3 / 0.218e3 * eta ^ 2 - 0.120e3 / 0.109e3 * eta + 0.25e2 / 0.436e3) * ci2 ^ 4 + (0.145e3 / 0.436e3 * eta ^ 5 + 0.787e3 / 0.2616e4 * eta ^ 4 - 0.83e2 / 0.654e3 * eta ^ 3 - 0.587e3 / 0.1308e4 * eta ^ 2 + 0.227e3 / 0.1308e4 * eta - 0.1109e4 / 0.2616e4) * ci2 ^ 2 - 0.31e2 / 0.2616e4 * eta ^ 5 + eta ^ 4 / 0.2616e4 - 0.11e2 / 0.1308e4 * eta ^ 3 - 0.29e2 / 0.436e3 * eta ^ 2 + 0.13e2 / 0.2616e4 * eta + 0.87e2 / 0.872e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - h + f)) + 0.63e2 / 0.32e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.85e2 / 0.9e1 * eta ^ 4 + 0.2810e4 / 0.147e3 * eta ^ 3 - 0.2186e4 / 0.441e3 * eta ^ 2 - 0.1937e4 / 0.63e2 * eta - 0.6443e4 / 0.441e3) * ci2 ^ 6 + (-0.1531e4 / 0.1323e4 * eta ^ 5 - 0.14471e5 / 0.1323e4 * eta ^ 4 - 0.29194e5 / 0.1323e4 * eta ^ 3 + 0.5710e4 / 0.1323e4 * eta ^ 2 + 0.6179e4 / 0.189e3 * eta + 0.20617e5 / 0.1323e4) * ci2 ^ 4 + (0.769e3 / 0.2646e4 * eta ^ 5 + 0.7229e4 / 0.2646e4 * eta ^ 4 + 0.1025e4 / 0.189e3 * eta ^ 3 + 0.155e3 / 0.1323e4 * eta ^ 2 - 0.13919e5 / 0.2646e4 * eta - 0.6115e4 / 0.2646e4) * ci2 ^ 2 - 0.2e1 / 0.441e3 * (eta ^ 4 + 0.16e2 / 0.3e1 * eta ^ 3 - 0.10e2 / 0.3e1 * eta ^ 2 + 0.160e3 / 0.3e1 * eta + 0.287e3 / 0.3e1) * (0.1e1 + eta)) * cos((g - h + 3 * f))) * J ^ 2 / a ^ 4 / eta ^ 11 / (0.1e1 + eta) -0.180e3 * sqrt(-ci2 ^ 2 + 0.1e1) * ci2 / (0.1e1 + eta) ^ 2 * R__e ^ 4 * ((-0.17e2 / 0.96e2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 4 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * g + 4 * f)) - 0.17e2 / 0.240e3 * ((eta + 0.53e2 / 0.17e2) * ci2 ^ 6 + (-0.117e3 / 0.68e2 * eta - 0.333e3 / 0.68e2) * ci2 ^ 4 + (0.33e2 / 0.34e2 * eta + 0.81e2 / 0.34e2) * ci2 ^ 2 - 0.3e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((g + 2 * h + 4 * f)) - 0.31e2 / 0.480e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 6 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 4 + (-0.23e2 / 0.372e3 * eta ^ 2 + 0.35e2 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * sin((5 * g + 2 * h + 6 * f)) - 0.17e2 / 0.96e2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 6 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 4 + (-0.23e2 / 0.340e3 * eta ^ 2 + 0.99e2 / 0.340e3) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 4 * f)) + 0.3e1 / 0.2e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * Delta * cos((g + 2 * h + 2 * f)) + 0.209e3 / 0.480e3 * ((eta ^ 3 + 0.167e3 / 0.209e3 * eta ^ 2 - 0.958e3 / 0.209e3 * eta - 0.1120e4 / 0.209e3) * ci2 ^ 6 + (-0.789e3 / 0.836e3 * eta ^ 3 - 0.663e3 / 0.836e3 * eta ^ 2 + 0.309e3 / 0.76e2 * eta + 0.3885e4 / 0.836e3) * ci2 ^ 4 + (0.181e3 / 0.836e3 * eta ^ 3 + 0.179e3 / 0.836e3 * eta ^ 2 - 0.631e3 / 0.836e3 * eta - 0.697e3 / 0.836e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 + 0.3e1 / 0.11e2 * eta - 0.24e2 / 0.11e2) / 0.76e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) + 0.3e1 * (ci2 ^ 8 - 0.121e3 / 0.80e2 * ci2 ^ 6 + 0.31e2 / 0.48e2 * ci2 ^ 4 - 0.31e2 / 0.480e3 * ci2 ^ 2 - 0.1e1 / 0.480e3) * (0.1e1 + eta) ^ 2 * Delta * cos((g + 2 * f)) - (ci2 + 0.1e1 / 0.2e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 - 0.1e1 / 0.2e1) * sin((8 * f + 5 * g)) / 0.160e3 - 0.3e1 / 0.2e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.5e1) * cos((4 * f + 3 * g)) + 0.11e2 / 0.480e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.51e2 / 0.11e2) * ci2 ^ 2 - 0.15e2 / 0.44e2 * eta ^ 2 - 0.75e2 / 0.44e2) * sin((-2 * h + 3 * g + 2 * f)) + ((eta ^ 2 + 0.4e1 / 0.5e1) * ci2 ^ 2 - 0.9e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.20e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-2 * h + 3 * g + 4 * f)) / 0.96e2 - 0.89e2 / 0.480e3 * (ci2 ^ 6 - 0.117e3 / 0.356e3 * ci2 ^ 4 - 0.27e2 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 2 * f)) - ((eta + 0.3e1 / 0.4e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.9e1 / 0.16e2) * ci2 ^ 4 + (eta / 0.6e1 + 0.7e1 / 0.48e2) * ci2 ^ 2 - eta / 0.96e2 - 0.1e1 / 0.96e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + 2 * h + 2 * f)) / 0.20e2 + (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * Delta * cos((g + 2 * h)) - 0.361e3 / 0.480e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 + 0.788e3 / 0.361e3 * eta + 0.445e3 / 0.361e3) * ci2 ^ 6 + (-0.1437e4 / 0.1444e4 * eta ^ 2 - 0.768e3 / 0.361e3 * eta - 0.1689e4 / 0.1444e4) * ci2 ^ 4 + (0.373e3 / 0.1444e4 * eta ^ 2 + 0.195e3 / 0.361e3 * eta + 0.413e3 / 0.1444e4) * ci2 ^ 2 - 0.73e2 / 0.4332e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * sin((3 * g)) + 0.167e3 / 0.1440e4 * (0.1e1 + eta) ^ 2 * ((eta + 0.365e3 / 0.167e3) * ci2 ^ 6 + (-0.579e3 / 0.668e3 * eta - 0.1173e4 / 0.668e3) * ci2 ^ 4 + (0.95e2 / 0.668e3 * eta + 0.161e3 / 0.668e3) * ci2 ^ 2 - eta / 0.668e3 - 0.1e1 / 0.668e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 6 * f)) + 0.3e1 / 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.7e1 / 0.8e1 * ci2 ^ 4 + ci2 ^ 2 / 0.6e1 - 0.1e1 / 0.240e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((g - 2 * h + 2 * f)) - 0.89e2 / 0.480e3 * (ci2 ^ 4 - 0.117e3 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((2 * f + 5 * g)) - 0.7e1 / 0.40e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.11e2 / 0.14e2) * (eta + 0.2e1) * ci2 ^ 6 + (-0.25e2 / 0.28e2 * eta ^ 2 - 0.19e2 / 0.8e1 * eta - 0.37e2 / 0.28e2) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 + 0.61e2 / 0.168e3 * eta + 0.5e1 / 0.28e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.336e3) * (eta - 0.1e1) * sin((g - 2 * h + 4 * f)) + ((0.37e2 / 0.16e2 * eta ^ 4 + 0.447e3 / 0.80e2 * eta ^ 3 + (-0.5e1 / 0.2e1 * Delta ^ 2 - 0.511e3 / 0.720e3) * eta ^ 2 + (-0.5e1 * Delta ^ 2 - 0.6701e4 / 0.720e3) * eta - 0.244e3 / 0.45e2 - 0.5e1 / 0.2e1 * Delta ^ 2) * ci2 ^ 8 + (-0.3691e4 / 0.960e3 * eta ^ 4 - 0.8681e4 / 0.960e3 * eta ^ 3 + (0.9e1 / 0.2e1 * Delta ^ 2 + 0.11e2 / 0.8e1) * eta ^ 2 + (0.9e1 * Delta ^ 2 + 0.2893e4 / 0.192e3) * eta + 0.8299e4 / 0.960e3 + 0.9e1 / 0.2e1 * Delta ^ 2) * ci2 ^ 6 + (0.113e3 / 0.60e2 * eta ^ 4 + 0.137e3 / 0.32e2 * eta ^ 3 + (-0.51e2 / 0.20e2 * Delta ^ 2 - 0.119e3 / 0.160e3) * eta ^ 2 + (-0.1129e4 / 0.160e3 - 0.51e2 / 0.10e2 * Delta ^ 2) * eta - 0.637e3 / 0.160e3 - 0.51e2 / 0.20e2 * Delta ^ 2) * ci2 ^ 4 + (-0.287e3 / 0.1152e4 * eta ^ 4 - 0.3149e4 / 0.5760e4 * eta ^ 3 + (0.9e1 / 0.20e2 * Delta ^ 2 + 0.443e3 / 0.5760e4) * eta ^ 2 + (0.319e3 / 0.384e3 + 0.9e1 / 0.10e2 * Delta ^ 2) * eta + 0.223e3 / 0.480e3 + 0.9e1 / 0.20e2 * Delta ^ 2) * ci2 ^ 2 - 0.3e1 / 0.640e3 * (0.1e1 + eta) ^ 2 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1)) * sin(g) + 0.7e1 / 0.80e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.15e2 / 0.7e1 * eta + 0.2e1 / 0.7e1) * ci2 ^ 8 + (-0.81e2 / 0.28e2 * eta ^ 2 - 0.167e3 / 0.28e2 * eta - 0.25e2 / 0.14e2) * ci2 ^ 6 + (0.52e2 / 0.21e2 * eta ^ 2 + 0.5e1 * eta + 0.41e2 / 0.21e2) * ci2 ^ 4 + (-0.107e3 / 0.168e3 * eta ^ 2 - 0.107e3 / 0.84e2 * eta - 0.95e2 / 0.168e3) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.168e3) * sin((-g + 2 * f)) + 0.7e1 / 0.60e2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((eta + 0.61e2 / 0.28e2) * ci2 ^ 8 + (-0.19e2 / 0.14e2 * eta - 0.317e3 / 0.112e3) * ci2 ^ 6 + (0.3e1 / 0.7e1 * eta + 0.23e2 / 0.28e2) * ci2 ^ 4 + (-eta / 0.672e3 - 0.1e1 / 0.672e3) * ci2 ^ 2 - eta / 0.672e3 - 0.1e1 / 0.672e3) * sin((3 * g + 2 * h + 6 * f)) - 0.67e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * ((eta ^ 3 - 0.41e2 / 0.67e2 * eta ^ 2 - 0.409e3 / 0.67e2 * eta - 0.409e3 / 0.67e2) * ci2 ^ 6 + (-0.537e3 / 0.268e3 * eta ^ 3 + 0.111e3 / 0.268e3 * eta ^ 2 + 0.2769e4 / 0.268e3 * eta + 0.2769e4 / 0.268e3) * ci2 ^ 4 + (0.90e2 / 0.67e2 * eta ^ 3 + 0.18e2 / 0.67e2 * eta ^ 2 - 0.385e3 / 0.67e2 * eta - 0.385e3 / 0.67e2) * ci2 ^ 2 - 0.39e2 / 0.134e3 * eta ^ 3 - 0.21e2 / 0.134e3 * eta ^ 2 + 0.139e3 / 0.134e3 * eta + 0.139e3 / 0.134e3) * sin((g + 2 * h + 2 * f)) - 0.59e2 / 0.240e3 * ((eta ^ 2 + 0.187e3 / 0.59e2 * eta + 0.119e3 / 0.59e2) * ci2 ^ 8 + (-0.351e3 / 0.236e3 * eta ^ 2 - 0.1083e4 / 0.236e3 * eta - 0.687e3 / 0.236e3) * ci2 ^ 6 + (0.36e2 / 0.59e2 * eta ^ 2 + 0.211e3 / 0.118e3 * eta + 0.133e3 / 0.118e3) * ci2 ^ 4 - 0.25e2 / 0.472e3 * (eta + 0.46e2 / 0.25e2) * (0.1e1 + eta) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.472e3) * (0.1e1 + eta) * (eta - 0.1e1) * sin((g + 4 * f)) - 0.7e1 / 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 8 - 0.79e2 / 0.56e2 * ci2 ^ 6 + 0.139e3 / 0.280e3 * ci2 ^ 4 - ci2 ^ 2 / 0.112e3 - 0.1e1 / 0.112e3) * Delta * cos((3 * g + 2 * h + 2 * f)) - 0.89e2 / 0.120e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.389e3 / 0.178e3 * eta + 0.110e3 / 0.89e2) * ci2 ^ 8 + (-0.535e3 / 0.356e3 * eta ^ 2 - 0.2305e4 / 0.712e3 * eta - 0.160e3 / 0.89e2) * ci2 ^ 6 + (0.213e3 / 0.356e3 * eta ^ 2 + 0.451e3 / 0.356e3 * eta + 0.61e2 / 0.89e2) * ci2 ^ 4 - 0.73e2 / 0.4272e4 * (eta + 0.82e2 / 0.73e2) * (0.1e1 + eta) * ci2 ^ 2 - 0.73e2 / 0.4272e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * (eta - 0.1e1) * sin((3 * g + 2 * h)) + 0.413e3 / 0.240e3 * ci2 ^ 2 * ((eta ^ 4 + 0.970e3 / 0.413e3 * eta ^ 3 + (-0.600e3 / 0.413e3 * Delta ^ 2 - 0.121e3 / 0.1239e4) * eta ^ 2 + (-0.1200e4 / 0.413e3 * Delta ^ 2 - 0.4304e4 / 0.1239e4) * eta - 0.2584e4 / 0.1239e4 - 0.600e3 / 0.413e3 * Delta ^ 2) * ci2 ^ 6 + (-0.2861e4 / 0.1652e4 * eta ^ 4 - 0.3293e4 / 0.826e3 * eta ^ 3 + (0.1080e4 / 0.413e3 * Delta ^ 2 + 0.136e3 / 0.413e3) * eta ^ 2 + (0.4989e4 / 0.826e3 + 0.2160e4 / 0.413e3 * Delta ^ 2) * eta + 0.5853e4 / 0.1652e4 + 0.1080e4 / 0.413e3 * Delta ^ 2) * ci2 ^ 4 + (0.751e3 / 0.826e3 * eta ^ 4 + 0.121e3 / 0.59e2 * eta ^ 3 + (-0.612e3 / 0.413e3 * Delta ^ 2 - 0.284e3 / 0.1239e4) * eta ^ 2 + (-0.3877e4 / 0.1239e4 - 0.1224e4 / 0.413e3 * Delta ^ 2) * eta - 0.612e3 / 0.413e3 * Delta ^ 2 - 0.4453e4 / 0.2478e4) * ci2 ^ 2 - 0.176e3 / 0.1239e4 * eta ^ 4 - 0.388e3 / 0.1239e4 * eta ^ 3 + (0.95e2 / 0.2478e4 + 0.108e3 / 0.413e3 * Delta ^ 2) * eta ^ 2 + (0.216e3 / 0.413e3 * Delta ^ 2 + 0.193e3 / 0.413e3) * eta + 0.108e3 / 0.413e3 * Delta ^ 2 + 0.31e2 / 0.118e3) * sin((g + 2 * h)) + 0.17e2 / 0.40e2 * (0.1e1 + eta) * ((eta ^ 3 + 0.27e2 / 0.34e2 * eta ^ 2 - 0.481e3 / 0.102e3 * eta - 0.281e3 / 0.51e2) * ci2 ^ 8 + (-0.99e2 / 0.68e2 * eta ^ 3 - 0.163e3 / 0.136e3 * eta ^ 2 + 0.2663e4 / 0.408e3 * eta + 0.767e3 / 0.102e3) * ci2 ^ 6 + (0.37e2 / 0.68e2 * eta ^ 3 + 0.25e2 / 0.51e2 * eta ^ 2 - 0.147e3 / 0.68e2 * eta - 0.83e2 / 0.34e2) * ci2 ^ 4 + (-0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * ci2 ^ 2 - 0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * sin((3 * g + 2 * h + 4 * f)) - 0.139e3 / 0.240e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.70e2 / 0.139e3 * eta ^ 2 - 0.409e3 / 0.139e3 * eta - 0.328e3 / 0.139e3) * ci2 ^ 8 + (-0.945e3 / 0.556e3 * eta ^ 3 - 0.132e3 / 0.139e3 * eta ^ 2 + 0.2655e4 / 0.556e3 * eta + 0.1125e4 / 0.278e3) * ci2 ^ 6 + (0.124e3 / 0.139e3 * eta ^ 3 + 0.75e2 / 0.139e3 * eta ^ 2 - 0.350e3 / 0.139e3 * eta - 0.323e3 / 0.139e3) * ci2 ^ 4 + (-0.157e3 / 0.1112e4 * eta ^ 3 - 0.89e2 / 0.1112e4 * eta ^ 2 + 0.535e3 / 0.1112e4 * eta + 0.535e3 / 0.1112e4) * ci2 ^ 2 - eta ^ 3 / 0.1112e4 - 0.5e1 / 0.1112e4 * eta ^ 2 - 0.21e2 / 0.1112e4 * eta - 0.21e2 / 0.1112e4) * sin((g + 2 * f)) + ((eta ^ 3 + 0.3e1 / 0.40e2 * eta ^ 2 - 0.7e1 / 0.6e1 * eta + 0.67e2 / 0.120e3) * ci2 ^ 8 + (-0.61e2 / 0.40e2 * eta ^ 3 - 0.47e2 / 0.160e3 * eta ^ 2 + 0.473e3 / 0.240e3 * eta - 0.89e2 / 0.480e3) * ci2 ^ 6 + (0.5e1 / 0.8e1 * eta ^ 3 + eta ^ 2 / 0.4e1 - 0.37e2 / 0.40e2 * eta - 0.7e1 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * ci2 ^ 2 - 0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * (0.1e1 + eta) * sin((3 * g + 2 * h + 2 * f)) / 0.2e1 - 0.3e1 / 0.2e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * Delta * cos((3 * g + 2 * h + 4 * f)) + cos(g) * ci2 ^ 2 * (0.1e1 + eta) * Delta * ((eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * ci2 ^ 6 + (-0.33e2 / 0.20e2 * eta ^ 2 - 0.321e3 / 0.80e2 * eta - 0.321e3 / 0.80e2) * ci2 ^ 4 + (0.5e1 / 0.6e1 * eta ^ 2 + 0.241e3 / 0.120e3 * eta + 0.241e3 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.8e1 - 0.5e1 / 0.16e2 * eta - 0.5e1 / 0.16e2) + 0.71e2 / 0.120e3 * ((eta ^ 3 + 0.229e3 / 0.142e3 * eta ^ 2 - 0.359e3 / 0.142e3 * eta - 0.220e3 / 0.71e2) * ci2 ^ 6 + (-0.273e3 / 0.284e3 * eta ^ 3 - 0.807e3 / 0.568e3 * eta ^ 2 + 0.1323e4 / 0.568e3 * eta + 0.783e3 / 0.284e3) * ci2 ^ 4 + (0.31e2 / 0.142e3 * eta ^ 3 + 0.147e3 / 0.568e3 * eta ^ 2 - 0.931e3 / 0.1704e4 * eta - 0.7e1 / 0.12e2) * ci2 ^ 2 - 0.9e1 / 0.1136e4 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h)) - 0.31e2 / 0.480e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 4 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((6 * f + 5 * g)) + 0.11e2 / 0.80e2 * ci2 ^ 2 * ((eta ^ 2 + 0.2e1 * eta + 0.5e1 / 0.11e2) * ci2 ^ 6 + (-0.101e3 / 0.44e2 * eta ^ 2 - 0.101e3 / 0.22e2 * eta - 0.65e2 / 0.44e2) * ci2 ^ 4 + (0.19e2 / 0.11e2 * eta ^ 2 + 0.38e2 / 0.11e2 * eta + 0.15e2 / 0.11e2) * ci2 ^ 2 - 0.9e1 / 0.22e2 * eta ^ 2 - 0.9e1 / 0.11e2 * eta - 0.4e1 / 0.11e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-g - 2 * h + 2 * f)) - 0.3e1 / 0.10e2 * ((eta ^ 3 + 0.37e2 / 0.24e2 * eta ^ 2 + 0.9e1 / 0.8e1) * ci2 ^ 6 + (-0.11e2 / 0.12e2 * eta ^ 3 - 0.139e3 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.48e2 * eta - 0.119e3 / 0.96e2) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 + 0.89e2 / 0.288e3 * eta ^ 2 + 0.17e2 / 0.48e2 * eta + 0.43e2 / 0.96e2) * ci2 ^ 2 - eta ^ 3 / 0.576e3 - 0.5e1 / 0.576e3 * eta ^ 2 - 0.7e1 / 0.192e3 * eta - 0.7e1 / 0.192e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 2 * f)) + 0.251e3 / 0.480e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.29e2 / 0.251e3 * eta ^ 2 - 0.229e3 / 0.251e3 * eta + 0.185e3 / 0.251e3) * ci2 ^ 6 + (-0.999e3 / 0.1004e4 * eta ^ 3 - 0.261e3 / 0.1004e4 * eta ^ 2 + 0.1257e4 / 0.1004e4 * eta + 0.15e2 / 0.1004e4) * ci2 ^ 4 + (0.267e3 / 0.1004e4 * eta ^ 3 + 0.153e3 / 0.1004e4 * eta ^ 2 - 0.469e3 / 0.1004e4 * eta - 0.331e3 / 0.1004e4) * ci2 ^ 2 - 0.21e2 / 0.1004e4 * eta ^ 3 - 0.17e2 / 0.1004e4 * eta ^ 2 + 0.51e2 / 0.1004e4 * eta + 0.51e2 / 0.1004e4) * sin((2 * f + 3 * g)) + 0.9e1 / 0.80e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((g - 2 * h)) - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 2 + 0.3e1 / 0.4e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-2 * h + 3 * g + 6 * f)) / 0.1440e4 - 0.7e1 / 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.2e1 / 0.7e1 * ci2 ^ 2 + 0.1e1 / 0.70e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * Delta * cos((2 * f + 3 * g)) - (ci2 ^ 2 - 0.9e1 / 0.20e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-2 * h + 3 * g)) / 0.96e2 - ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.12e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 8 * f)) / 0.160e3) * sqrt(-eta ^ 2 + 0.1e1) + 0.3e1 / 0.160e3 * (0.1e1 + eta) * (0.29e2 / 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.206e3 / 0.29e2 * eta ^ 2 - 0.529e3 / 0.29e2 * eta - 0.266e3 / 0.29e2) * ci2 ^ 6 + (-0.111e3 / 0.116e3 * eta ^ 3 + 0.165e3 / 0.29e2 * eta ^ 2 + 0.1719e4 / 0.116e3 * eta + 0.216e3 / 0.29e2) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.35e2 / 0.58e2 * eta ^ 2 - 0.599e3 / 0.348e3 * eta - 0.137e3 / 0.174e3) * ci2 ^ 2 - 0.3e1 / 0.232e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * (eta - 0.1e1) * sin((g - 2 * h + 3 * f)) + 0.280e3 / 0.3e1 * (ci2 ^ 8 - 0.419e3 / 0.280e3 * ci2 ^ 6 + 0.83e2 / 0.140e3 * ci2 ^ 4 - ci2 ^ 2 / 0.56e2 - 0.1e1 / 0.56e2) * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + f)) - 0.5e1 / 0.6e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * sin((3 * g + 2 * h + 7 * f)) - 0.14e2 / 0.3e1 * ((eta ^ 2 + 0.122e3 / 0.21e2 * eta + 0.29e2 / 0.3e1) * ci2 ^ 6 + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.137e3 / 0.14e2 * eta - 0.109e3 / 0.7e1) * ci2 ^ 4 + (0.2e1 / 0.3e1 * eta ^ 2 + 0.38e2 / 0.7e1 * eta + 0.8e1) * ci2 ^ 2 - eta ^ 2 / 0.12e2 - 0.41e2 / 0.42e2 * eta - 0.109e3 / 0.84e2) * ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) * sin((g + 2 * h + 3 * f)) - 0.400e3 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) * Delta * ((eta ^ 2 - 0.11e2 / 0.5e1) * ci2 ^ 6 + (-0.9e1 / 0.5e1 * eta ^ 2 + 0.189e3 / 0.50e2) * ci2 ^ 4 + (0.51e2 / 0.50e2 * eta ^ 2 - 0.101e3 / 0.50e2) * ci2 ^ 2 - 0.9e1 / 0.50e2 * eta ^ 2 + 0.33e2 / 0.100e3) * cos((g + 2 * h + f)) - ci2 ^ 2 * (0.1e1 + eta) * ((eta - 0.1e1 / 0.3e1) * ci2 ^ 6 + (-0.17e2 / 0.12e2 * eta + 0.7e1 / 0.12e2) * ci2 ^ 4 + (0.5e1 / 0.9e1 * eta - 0.1e1 / 0.3e1) * ci2 ^ 2 - eta / 0.18e2 + 0.1e1 / 0.18e2) * (eta - 0.1e1) ^ 2 * sin((-g + 3 * f)) / 0.2e1 - 0.184e3 / 0.9e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 6 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 4 + (-0.3e1 / 0.46e2 * eta ^ 2 + 0.19e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * sin((5 * g + 2 * h + 5 * f)) + 0.20e2 / 0.3e1 * (0.1e1 + eta) * ((eta ^ 3 + 0.133e3 / 0.12e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.871e3 / 0.60e2) * ci2 ^ 6 + (-0.17e2 / 0.20e2 * eta ^ 3 - 0.861e3 / 0.80e2 * eta ^ 2 + 0.81e2 / 0.40e2 * eta + 0.1151e4 / 0.80e2) * ci2 ^ 4 + (0.17e2 / 0.120e3 * eta ^ 3 + 0.207e3 / 0.80e2 * eta ^ 2 - 0.3e1 / 0.20e2 * eta - 0.859e3 / 0.240e3) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 3 * f)) + 0.8e1 * ((eta ^ 3 + 0.47e2 / 0.8e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta - 0.113e3 / 0.8e1) * ci2 ^ 6 + (-eta ^ 3 - 0.189e3 / 0.32e2 * eta ^ 2 - 0.45e2 / 0.16e2 * eta + 0.419e3 / 0.32e2) * ci2 ^ 4 + (0.5e1 / 0.16e2 * eta ^ 3 + 0.431e3 / 0.288e3 * eta ^ 2 + eta / 0.4e1 - 0.845e3 / 0.288e3) * ci2 ^ 2 - 0.13e2 / 0.576e3 * eta ^ 3 - 0.13e2 / 0.192e3 * eta ^ 2 + eta / 0.64e2 + 0.67e2 / 0.576e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + f)) - 0.184e3 / 0.9e1 * (0.1e1 + eta) * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 4 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * f + 5 * g)) + 0.25e2 / 0.3e1 * ((eta ^ 3 - 0.464e3 / 0.75e2 * eta ^ 2 - 0.1363e4 / 0.75e2 * eta - 0.836e3 / 0.75e2) * ci2 ^ 6 + (-0.99e2 / 0.100e3 * eta ^ 3 + 0.513e3 / 0.100e3 * eta ^ 2 + 0.1509e4 / 0.100e3 * eta + 0.909e3 / 0.100e3) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.91e2 / 0.100e3 * eta ^ 2 - 0.809e3 / 0.300e3 * eta - 0.31e2 / 0.20e2) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + f)) + 0.7e1 / 0.6e1 * (0.1e1 + eta) * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.15e2 / 0.28e2) * ci2 ^ 4 + (eta / 0.28e2 + 0.1e1 / 0.84e2) * ci2 ^ 2 + eta / 0.84e2 + 0.1e1 / 0.84e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - 2 * h + 5 * f)) + (0.1e1 + eta) * ((eta ^ 2 + 0.379e3 / 0.9e1 * eta + 0.568e3 / 0.9e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.109e3 / 0.3e1 * eta - 0.625e3 / 0.12e2) * ci2 ^ 4 + (eta ^ 2 / 0.36e2 + 0.6e1 * eta + 0.281e3 / 0.36e2) * ci2 ^ 2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 5 * f)) - 0.268e3 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 4 - 0.297e3 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * (eta - 0.1e1) * sin((3 * f + 5 * g)) - 0.80e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.9e1 / 0.10e2 * eta ^ 2 + 0.17e2 / 0.20e2) * ci2 ^ 4 + (0.7e1 / 0.40e2 * eta ^ 2 - 0.19e2 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.240e3 + 0.1e1 / 0.240e3) * Delta * cos((g - 2 * h + f)) - 0.4e1 / 0.9e1 * (0.9e1 / 0.4e1 + (eta ^ 2 - 0.5e1) * ci2 ^ 2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-2 * h + 3 * g + 3 * f)) + 0.40e2 / 0.3e1 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + 5 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((-g - 2 * h + 3 * f)) / 0.3e1 - 0.5e1 / 0.6e1 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta - 0.7e1 / 0.4e1) * ci2 ^ 6 + (0.2e1 / 0.5e1 * eta + 0.8e1 / 0.15e2) * ci2 ^ 4 + (-eta / 0.60e2 - 0.1e1 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * sin((-3 * g - 2 * h + f)) + 0.13e2 / 0.6e1 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta + 0.11e2 / 0.13e2) * ci2 ^ 8 + (-0.71e2 / 0.52e2 * eta - 0.61e2 / 0.52e2) * ci2 ^ 6 + (0.6e1 / 0.13e2 * eta + 0.16e2 / 0.39e2) * ci2 ^ 4 + (-0.5e1 / 0.156e3 * eta - 0.5e1 / 0.156e3) * ci2 ^ 2 + eta / 0.156e3 + 0.1e1 / 0.156e3) * sin((5 * f + g)) + 0.160e3 / 0.3e1 * (0.1e1 + eta) * Delta * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 8 + (-0.57e2 / 0.40e2 * eta ^ 2 + 0.271e3 / 0.60e2) * ci2 ^ 6 + (0.41e2 / 0.80e2 * eta ^ 2 - 0.347e3 / 0.240e3) * ci2 ^ 4 + (-eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * ci2 ^ 2 - eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * cos((3 * g + 2 * h + 3 * f)) + ((eta ^ 2 + 0.127e3 / 0.3e1 * eta + 0.190e3 / 0.3e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.689e3 / 0.12e2 * eta - 0.251e3 / 0.3e1) * ci2 ^ 6 + (0.5e1 / 0.18e2 * eta ^ 2 + 0.163e3 / 0.9e1 * eta + 0.151e3 / 0.6e1) * ci2 ^ 4 + (0.1e1 + eta) * (eta - 0.7e1) * ci2 ^ 2 / 0.72e2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + 2 * h + 5 * f)) - 0.92e2 / 0.3e1 * ci2 ^ 2 * ((0.109e3 / 0.138e3 + eta ^ 3 - 0.239e3 / 0.138e3 * eta ^ 2 - 0.36e2 / 0.23e2 * eta) * ci2 ^ 6 + (-0.75e2 / 0.46e2 * eta ^ 3 + 0.257e3 / 0.92e2 * eta ^ 2 + 0.54e2 / 0.23e2 * eta - 0.119e3 / 0.92e2) * ci2 ^ 4 + (0.56e2 / 0.69e2 * eta ^ 3 - 0.55e2 / 0.46e2 * eta ^ 2 - 0.24e2 / 0.23e2 * eta + 0.19e2 / 0.46e2) * ci2 ^ 2 - 0.11e2 / 0.92e2 * eta ^ 3 + 0.59e2 / 0.552e3 * eta ^ 2 + 0.3e1 / 0.23e2 * eta + 0.5e1 / 0.184e3) * (0.1e1 + eta) * sin((g + 2 * h + f)) - 0.38e2 / 0.3e1 * ci2 ^ 2 * (eta - 0.1e1) * ((eta ^ 3 + 0.413e3 / 0.57e2 * eta ^ 2 + 0.793e3 / 0.57e2 * eta + 0.473e3 / 0.57e2) * ci2 ^ 6 + (-0.69e2 / 0.38e2 * eta ^ 3 - 0.235e3 / 0.19e2 * eta ^ 2 - 0.883e3 / 0.38e2 * eta - 0.259e3 / 0.19e2) * ci2 ^ 4 + (0.58e2 / 0.57e2 * eta ^ 3 + 0.119e3 / 0.19e2 * eta ^ 2 + 0.652e3 / 0.57e2 * eta + 0.377e3 / 0.57e2) * ci2 ^ 2 - 0.13e2 / 0.76e2 * eta ^ 3 - 0.205e3 / 0.228e3 * eta ^ 2 - 0.359e3 / 0.228e3 * eta - 0.205e3 / 0.228e3) * sin((-g - 2 * h + f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-g + 2 * h + f)) - 0.28e2 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.3e1 / 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 + 0.3e1 / 0.16e2) * sin((5 * g + 2 * h + 7 * f)) + 0.280e3 / 0.3e1 * (0.1e1 + eta) * (-0.3e1 / 0.7e1 * (0.1e1 + eta) * (ci2 ^ 8 - 0.59e2 / 0.40e2 * ci2 ^ 6 + 0.53e2 / 0.90e2 * ci2 ^ 4 - 0.2e1 / 0.45e2 * ci2 ^ 2 - 0.1e1 / 0.360e3) * Delta * (eta - 0.1e1) * cos((g + 3 * f)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 4 - 0.13e2 / 0.35e2 * ci2 ^ 2 + 0.1e1 / 0.35e2) * Delta * (eta - 0.1e1) * cos((3 * g + f)) + (ci2 ^ 6 - 0.15e2 / 0.8e1 * ci2 ^ 4 + 0.31e2 / 0.28e2 * ci2 ^ 2 - 0.57e2 / 0.280e3) * ci2 ^ 2 * (0.1e1 + eta) * Delta * (eta - 0.1e1) * cos((f - g)) + ((-0.17e2 / 0.70e2 * eta ^ 3 + 0.901e3 / 0.840e3 * eta ^ 2 + 0.117e3 / 0.140e3 * eta - 0.247e3 / 0.168e3) * ci2 ^ 8 + (0.57e2 / 0.140e3 * eta ^ 3 - 0.1877e4 / 0.1120e4 * eta ^ 2 - 0.657e3 / 0.560e3 * eta + 0.2411e4 / 0.1120e4) * ci2 ^ 6 + (-0.71e2 / 0.336e3 * eta ^ 3 + 0.1159e4 / 0.1680e4 * eta ^ 2 + 0.249e3 / 0.560e3 * eta - 0.1279e4 / 0.1680e4) * ci2 ^ 4 + (0.251e3 / 0.6720e4 * eta ^ 3 - 0.55e2 / 0.1344e4 * eta ^ 2 - 0.93e2 / 0.2240e4 * eta + 0.1e1 / 0.960e3) * ci2 ^ 2 + 0.67e2 / 0.6720e4 - 0.13e2 / 0.2240e4 * eta ^ 2 - 0.13e2 / 0.6720e4 * eta ^ 3 + 0.3e1 / 0.2240e4 * eta) * sin((f + g)) - 0.16e2 / 0.7e1 * ((eta ^ 2 - 0.7e1 / 0.4e1) * ci2 ^ 8 + (-0.33e2 / 0.20e2 * eta ^ 2 + 0.459e3 / 0.160e3) * ci2 ^ 6 + (0.261e3 / 0.320e3 * eta ^ 2 - 0.457e3 / 0.320e3) * ci2 ^ 4 + (-0.73e2 / 0.640e3 * eta ^ 2 + 0.133e3 / 0.640e3) * ci2 ^ 2 - eta ^ 2 / 0.640e3 + 0.1e1 / 0.640e3) * Delta * cos((f + g))) + 0.20e2 / 0.3e1 * ((eta ^ 3 + 0.223e3 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.297e3 / 0.20e2) * ci2 ^ 8 + (-0.27e2 / 0.20e2 * eta ^ 3 - 0.1307e4 / 0.80e2 * eta ^ 2 + 0.27e2 / 0.8e1 * eta + 0.1757e4 / 0.80e2) * ci2 ^ 6 + (0.17e2 / 0.40e2 * eta ^ 3 + 0.247e3 / 0.40e2 * eta ^ 2 - 0.33e2 / 0.40e2 * eta - 0.67e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * (0.1e1 + eta) * sin((3 * g + 2 * h + 3 * f)) + 0.25e2 / 0.3e1 * ((eta ^ 3 - 0.138e3 / 0.25e2 * eta ^ 2 - 0.421e3 / 0.25e2 * eta - 0.262e3 / 0.25e2) * ci2 ^ 8 + (-0.149e3 / 0.100e3 * eta ^ 3 + 0.192e3 / 0.25e2 * eta ^ 2 + 0.2309e4 / 0.100e3 * eta + 0.353e3 / 0.25e2) * ci2 ^ 6 + (0.29e2 / 0.50e2 * eta ^ 3 - 0.131e3 / 0.50e2 * eta ^ 2 - 0.1159e4 / 0.150e3 * eta - 0.229e3 / 0.50e2) * ci2 ^ 4 + (-0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (eta - 0.1e1) * sin((3 * g + 2 * h + f)) + 0.40e2 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.5e1) * cos((3 * g + 5 * f)) + 0.160e3 / 0.3e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 4 + (-0.3e1 / 0.10e2 * eta ^ 2 + 0.23e2 / 0.30e2) * ci2 ^ 2 - 0.1e1 / 0.60e2 + eta ^ 2 / 0.60e2) * Delta * cos((3 * g + 3 * f)) - 0.2e1 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 + 0.3e1 / 0.8e1) * sin((-2 * h + 3 * g + 5 * f)) - 0.80e2 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.71e2 / 0.80e2 * ci2 ^ 4 + 0.41e2 / 0.240e3 * ci2 ^ 2 - 0.1e1 / 0.240e3) * Delta * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) - 0.28e2 / 0.9e1 * (ci2 ^ 2 - 0.27e2 / 0.112e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((7 * f + 5 * g)) - 0.50e2 / 0.9e1 * (ci2 ^ 2 - 0.63e2 / 0.200e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((-2 * h + 3 * g + f)) - (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-g + 2 * h + 3 * f)) / 0.6e1 - 0.5e1 / 0.6e1 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((3 * g + 7 * f)) + 0.11e2 / 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 - 0.53e2 / 0.11e2 * eta - 0.62e2 / 0.11e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta + 0.48e2 / 0.11e2) * ci2 ^ 4 + (0.3e1 / 0.44e2 * eta ^ 2 - 0.115e3 / 0.132e3 * eta - 0.61e2 / 0.66e2) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) / 0.264e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + 2 * h + f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((2 * h + g + 5 * f)) - 0.5e1 / 0.6e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.21e2 / 0.20e2) * ci2 ^ 4 + (0.3e1 / 0.20e2 * eta + 0.11e2 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * sin((-3 * g + f)) - 0.268e3 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.297e3 / 0.1072e4 * ci2 ^ 4 - 0.75e2 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * (eta - 0.1e1) * sin((5 * g + 2 * h + 3 * f)) + 0.280e3 / 0.3e1 * ci2 ^ 2 * (ci2 ^ 6 - 0.261e3 / 0.140e3 * ci2 ^ 4 + 0.11e2 / 0.10e2 * ci2 ^ 2 - 0.57e2 / 0.280e3) * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * cos((-g - 2 * h + f)) - 0.40e2 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * Delta * (eta - 0.1e1) * cos((g + 2 * h + 3 * f)) - 0.13e2 / 0.9e1 * (eta - 0.1e1) * ((eta ^ 3 + 0.492e3 / 0.13e2 * eta ^ 2 + 0.1179e4 / 0.13e2 * eta + 0.672e3 / 0.13e2) * ci2 ^ 8 + (-0.83e2 / 0.52e2 * eta ^ 3 - 0.742e3 / 0.13e2 * eta ^ 2 - 0.7037e4 / 0.52e2 * eta - 0.1003e4 / 0.13e2) * ci2 ^ 6 + (0.23e2 / 0.26e2 * eta ^ 3 + 0.657e3 / 0.26e2 * eta ^ 2 + 0.4543e4 / 0.78e2 * eta + 0.2585e4 / 0.78e2) * ci2 ^ 4 - 0.25e2 / 0.104e3 * (0.1e1 + eta) * (eta ^ 2 + 0.322e3 / 0.25e2 * eta + 0.421e3 / 0.25e2) * ci2 ^ 2 + 0.3e1 / 0.104e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * sin((g + 3 * f)) - 0.9e1 * ((eta ^ 3 + 0.952e3 / 0.81e2 * eta ^ 2 + 0.1931e4 / 0.81e2 * eta + 0.1132e4 / 0.81e2) * ci2 ^ 8 + (-0.221e3 / 0.108e3 * eta ^ 3 - 0.524e3 / 0.27e2 * eta ^ 2 - 0.1373e4 / 0.36e2 * eta - 0.199e3 / 0.9e1) * ci2 ^ 6 + (0.211e3 / 0.162e3 * eta ^ 3 + 0.1547e4 / 0.162e3 * eta ^ 2 + 0.2905e4 / 0.162e3 * eta + 0.185e3 / 0.18e2) * ci2 ^ 4 + (-0.157e3 / 0.648e3 * eta ^ 3 - 0.835e3 / 0.648e3 * eta ^ 2 - 0.1463e4 / 0.648e3 * eta - 0.833e3 / 0.648e3) * ci2 ^ 2 - (eta + 0.13e2) * (0.1e1 + eta) ^ 2 / 0.648e3) * (eta - 0.1e1) * sin((f - g)))) * J ^ 2 / eta ^ 8 / a ^ 4 -0.813e3 / 0.4e1 * sqrt(-ci2 ^ 2 + 0.1e1) * ci2 / (0.1e1 + eta) ^ 2 * R__e ^ 4 * J ^ 2 * ((-0.360e3 / 0.271e3 * ci2 ^ 4 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * sin((3 * g + 2 * h + 4 * f)) + 0.33e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.2e1 * eta + 0.5e1 / 0.11e2) * ci2 ^ 6 + (-0.101e3 / 0.44e2 * eta ^ 2 - 0.101e3 / 0.22e2 * eta - 0.65e2 / 0.44e2) * ci2 ^ 4 + (0.19e2 / 0.11e2 * eta ^ 2 + 0.38e2 / 0.11e2 * eta + 0.15e2 / 0.11e2) * ci2 ^ 2 - 0.9e1 / 0.22e2 * eta ^ 2 - 0.9e1 / 0.11e2 * eta - 0.4e1 / 0.11e2) * cos((-g - 2 * h + 2 * f)) + ((eta ^ 4 + 0.599e3 / 0.271e3 * eta ^ 3 + (-0.600e3 / 0.271e3 * Delta ^ 2 + 0.269e3 / 0.813e3) * eta ^ 2 + (-0.1200e4 / 0.271e3 * Delta ^ 2 - 0.1907e4 / 0.813e3) * eta - 0.1264e4 / 0.813e3 - 0.600e3 / 0.271e3 * Delta ^ 2) * ci2 ^ 8 + (-0.2031e4 / 0.1084e4 * eta ^ 4 - 0.4491e4 / 0.1084e4 * eta ^ 3 + (0.1080e4 / 0.271e3 * Delta ^ 2 - 0.58e2 / 0.271e3) * eta ^ 2 + (0.2160e4 / 0.271e3 * Delta ^ 2 + 0.5491e4 / 0.1084e4) * eta + 0.3407e4 / 0.1084e4 + 0.1080e4 / 0.271e3 * Delta ^ 2) * ci2 ^ 6 + (0.299e3 / 0.271e3 * eta ^ 4 + 0.1333e4 / 0.542e3 * eta ^ 3 + (-0.612e3 / 0.271e3 * Delta ^ 2 - 0.65e2 / 0.1626e4) * eta ^ 2 + (-0.5347e4 / 0.1626e4 - 0.1224e4 / 0.271e3 * Delta ^ 2) * eta - 0.3173e4 / 0.1626e4 - 0.612e3 / 0.271e3 * Delta ^ 2) * ci2 ^ 4 + (-0.1381e4 / 0.6504e4 * eta ^ 4 - 0.3059e4 / 0.6504e4 * eta ^ 3 + (0.108e3 / 0.271e3 * Delta ^ 2 + 0.317e3 / 0.6504e4) * eta ^ 2 + (0.1493e4 / 0.2168e4 + 0.216e3 / 0.271e3 * Delta ^ 2) * eta + 0.108e3 / 0.271e3 * Delta ^ 2 + 0.211e3 / 0.542e3) * ci2 ^ 2 + 0.9e1 / 0.2168e4 * (0.1e1 + eta) ^ 2 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1)) * cos(g) + 0.360e3 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 2 - 0.1e1 / 0.5e1) * sin((4 * f + 3 * g)) - 0.3e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 + 0.1e1 / 0.2e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * cos((8 * f + 5 * g)) - 0.360e3 / 0.271e3 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.7e1 / 0.8e1 * ci2 ^ 4 + ci2 ^ 2 / 0.6e1 - 0.1e1 / 0.240e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((g - 2 * h + 2 * f)) - 0.89e2 / 0.542e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 4 - 0.117e3 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * cos((2 * f + 5 * g)) + 0.169e3 / 0.1626e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.367e3 / 0.169e3) * ci2 ^ 6 + (-0.573e3 / 0.676e3 * eta - 0.1167e4 / 0.676e3) * ci2 ^ 4 + (0.97e2 / 0.676e3 * eta + 0.163e3 / 0.676e3) * ci2 ^ 2 - eta / 0.676e3 - 0.1e1 / 0.676e3) * (eta - 0.1e1) * cos((3 * g + 6 * f)) - 0.45e2 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.29e2 / 0.15e2 * eta + 0.8e1 / 0.15e2) * ci2 ^ 8 + (-0.121e3 / 0.60e2 * eta ^ 2 - 0.79e2 / 0.20e2 * eta - 0.4e1 / 0.3e1) * ci2 ^ 6 + (0.62e2 / 0.45e2 * eta ^ 2 + 0.41e2 / 0.15e2 * eta + 0.49e2 / 0.45e2) * ci2 ^ 4 + (-0.109e3 / 0.360e3 * eta ^ 2 - 0.109e3 / 0.180e3 * eta - 0.97e2 / 0.360e3) * ci2 ^ 2 - (0.1e1 + eta) ^ 2 / 0.360e3) * (eta - 0.1e1) * cos((-g + 2 * f)) - 0.840e3 / 0.271e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 8 - 0.79e2 / 0.56e2 * ci2 ^ 6 + 0.139e3 / 0.280e3 * ci2 ^ 4 - ci2 ^ 2 / 0.112e3 - 0.1e1 / 0.112e3) * sin((3 * g + 2 * h + 2 * f)) - 0.28e2 / 0.271e3 * (0.1e1 + eta) ^ 2 * ((eta + 0.61e2 / 0.28e2) * ci2 ^ 8 + (-0.19e2 / 0.14e2 * eta - 0.317e3 / 0.112e3) * ci2 ^ 6 + (0.3e1 / 0.7e1 * eta + 0.23e2 / 0.28e2) * ci2 ^ 4 + (-eta / 0.672e3 - 0.1e1 / 0.672e3) * ci2 ^ 2 - eta / 0.672e3 - 0.1e1 / 0.672e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + 6 * f)) + 0.25e2 / 0.271e3 * ((eta ^ 2 + 0.47e2 / 0.25e2 * eta + 0.13e2 / 0.25e2) * ci2 ^ 8 + (-0.117e3 / 0.100e3 * eta ^ 2 - 0.183e3 / 0.100e3 * eta - 0.21e2 / 0.100e3) * ci2 ^ 6 + (0.3e1 / 0.25e2 * eta ^ 2 - 0.17e2 / 0.50e2 * eta - 0.29e2 / 0.50e2) * ci2 ^ 4 + (0.23e2 / 0.200e3 * eta ^ 2 + 0.73e2 / 0.200e3 * eta + 0.1e1 / 0.4e1) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.200e3) * (0.1e1 + eta) * (eta - 0.1e1) * cos((g + 4 * f)) + 0.178e3 / 0.271e3 * ((eta ^ 2 + 0.389e3 / 0.178e3 * eta + 0.110e3 / 0.89e2) * ci2 ^ 8 + (-0.535e3 / 0.356e3 * eta ^ 2 - 0.2305e4 / 0.712e3 * eta - 0.160e3 / 0.89e2) * ci2 ^ 6 + (0.213e3 / 0.356e3 * eta ^ 2 + 0.451e3 / 0.356e3 * eta + 0.61e2 / 0.89e2) * ci2 ^ 4 - 0.73e2 / 0.4272e4 * (eta + 0.82e2 / 0.73e2) * (0.1e1 + eta) * ci2 ^ 2 - 0.73e2 / 0.4272e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * (0.1e1 + eta) * (eta - 0.1e1) * cos((3 * g + 2 * h)) + 0.67e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) * ((eta ^ 3 - 0.41e2 / 0.67e2 * eta ^ 2 - 0.409e3 / 0.67e2 * eta - 0.409e3 / 0.67e2) * ci2 ^ 6 + (-0.537e3 / 0.268e3 * eta ^ 3 + 0.111e3 / 0.268e3 * eta ^ 2 + 0.2769e4 / 0.268e3 * eta + 0.2769e4 / 0.268e3) * ci2 ^ 4 + (0.90e2 / 0.67e2 * eta ^ 3 + 0.18e2 / 0.67e2 * eta ^ 2 - 0.385e3 / 0.67e2 * eta - 0.385e3 / 0.67e2) * ci2 ^ 2 - 0.39e2 / 0.134e3 * eta ^ 3 - 0.21e2 / 0.134e3 * eta ^ 2 + 0.139e3 / 0.134e3 * eta + 0.139e3 / 0.134e3) * cos((g + 2 * h + 2 * f)) + 0.99e2 / 0.271e3 * (ci2 ^ 6 - 0.15e2 / 0.11e2 * ci2 ^ 4 + 0.29e2 / 0.66e2 * ci2 ^ 2 - 0.1e1 / 0.66e2) * (0.1e1 + eta) ^ 2 * Delta * sin((g + 2 * f)) - 0.85e2 / 0.542e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 4 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * cos((5 * g + 4 * f)) + 0.142e3 / 0.271e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.229e3 / 0.142e3 * eta ^ 2 - 0.359e3 / 0.142e3 * eta - 0.220e3 / 0.71e2) * ci2 ^ 6 + (-0.273e3 / 0.284e3 * eta ^ 3 - 0.807e3 / 0.568e3 * eta ^ 2 + 0.1323e4 / 0.568e3 * eta + 0.783e3 / 0.284e3) * ci2 ^ 4 + (0.31e2 / 0.142e3 * eta ^ 3 + 0.147e3 / 0.568e3 * eta ^ 2 - 0.931e3 / 0.1704e4 * eta - 0.7e1 / 0.12e2) * ci2 ^ 2 - 0.9e1 / 0.1136e4 * (eta ^ 2 - eta / 0.3e1 - 0.8e1 / 0.3e1) * (0.1e1 + eta)) * cos((g - 2 * h)) - 0.240e3 / 0.271e3 * sin(g) * ((eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * ci2 ^ 6 + (-0.33e2 / 0.20e2 * eta ^ 2 - 0.339e3 / 0.80e2 * eta - 0.339e3 / 0.80e2) * ci2 ^ 4 + (0.5e1 / 0.6e1 * eta ^ 2 + 0.259e3 / 0.120e3 * eta + 0.259e3 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.8e1 - 0.5e1 / 0.16e2 * eta - 0.5e1 / 0.16e2) * ci2 ^ 2 * (0.1e1 + eta) * Delta + 0.17e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * ((eta + 0.53e2 / 0.17e2) * ci2 ^ 6 + (-0.117e3 / 0.68e2 * eta - 0.333e3 / 0.68e2) * ci2 ^ 4 + (0.33e2 / 0.34e2 * eta + 0.81e2 / 0.34e2) * ci2 ^ 2 - 0.3e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * (eta - 0.1e1) * cos((g + 2 * h + 4 * f)) + 0.85e2 / 0.542e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.364e3 / 0.85e2) * ci2 ^ 6 + (-0.93e2 / 0.340e3 * eta ^ 2 + 0.21e2 / 0.20e2) * ci2 ^ 4 + (-0.23e2 / 0.340e3 * eta ^ 2 + 0.99e2 / 0.340e3) * ci2 ^ 2 + 0.2e1 / 0.85e2 * eta ^ 2 - 0.1e1 / 0.17e2) * cos((5 * g + 2 * h + 4 * f)) - 0.72e2 / 0.271e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.37e2 / 0.24e2 * eta ^ 2 + 0.9e1 / 0.8e1) * ci2 ^ 6 + (-0.11e2 / 0.12e2 * eta ^ 3 - 0.139e3 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.48e2 * eta - 0.119e3 / 0.96e2) * ci2 ^ 4 + (eta ^ 3 / 0.6e1 + 0.89e2 / 0.288e3 * eta ^ 2 + 0.17e2 / 0.48e2 * eta + 0.43e2 / 0.96e2) * ci2 ^ 2 - eta ^ 3 / 0.576e3 - 0.5e1 / 0.576e3 * eta ^ 2 - 0.7e1 / 0.192e3 * eta - 0.7e1 / 0.192e3) * cos((g - 2 * h + 2 * f)) + 0.360e3 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * sin((g + 2 * h + 2 * f)) + 0.31e2 / 0.542e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 6 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 4 + (-0.23e2 / 0.372e3 * eta ^ 2 + 0.35e2 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * cos((5 * g + 2 * h + 6 * f)) + 0.229e3 / 0.542e3 * ((eta ^ 3 + 0.7e1 / 0.229e3 * eta ^ 2 - 0.331e3 / 0.229e3 * eta + 0.83e2 / 0.229e3) * ci2 ^ 6 + (-0.969e3 / 0.916e3 * eta ^ 3 - 0.231e3 / 0.916e3 * eta ^ 2 + 0.1407e4 / 0.916e3 * eta + 0.165e3 / 0.916e3) * ci2 ^ 4 + (0.277e3 / 0.916e3 * eta ^ 3 + 0.163e3 / 0.916e3 * eta ^ 2 - 0.419e3 / 0.916e3 * eta - 0.281e3 / 0.916e3) * ci2 ^ 2 - 0.21e2 / 0.916e3 * eta ^ 3 - 0.17e2 / 0.916e3 * eta ^ 2 + 0.51e2 / 0.916e3 * eta + 0.51e2 / 0.916e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * f + 3 * g)) - 0.31e2 / 0.542e3 * ((eta ^ 2 - 0.117e3 / 0.31e2) * ci2 ^ 4 + (-0.27e2 / 0.124e3 * eta ^ 2 + 0.109e3 / 0.124e3) * ci2 ^ 2 + eta ^ 2 / 0.93e2 - 0.1e1 / 0.93e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((6 * f + 5 * g)) + 0.199e3 / 0.542e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.157e3 / 0.199e3 * eta ^ 2 - 0.966e3 / 0.199e3 * eta - 0.1128e4 / 0.199e3) * ci2 ^ 6 + (-0.771e3 / 0.796e3 * eta ^ 3 - 0.645e3 / 0.796e3 * eta ^ 2 + 0.3405e4 / 0.796e3 * eta + 0.3891e4 / 0.796e3) * ci2 ^ 4 + (0.187e3 / 0.796e3 * eta ^ 3 + 0.185e3 / 0.796e3 * eta ^ 2 - 0.629e3 / 0.796e3 * eta - 0.695e3 / 0.796e3) * ci2 ^ 2 - 0.11e2 / 0.796e3 * (0.1e1 + eta) * (eta ^ 2 + 0.3e1 / 0.11e2 * eta - 0.24e2 / 0.11e2)) * cos((4 * f + 3 * g)) + 0.5e1 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.152e3 / 0.5e1 * eta ^ 2 + 0.409e3 / 0.5e1 * eta + 0.98e2) * ci2 ^ 8 + (0.129e3 / 0.20e2 * eta ^ 3 - 0.75e2 / 0.2e1 * eta ^ 2 - 0.2883e4 / 0.20e2 * eta - 0.822e3 / 0.5e1) * ci2 ^ 6 + (-0.56e2 / 0.5e1 * eta ^ 3 + 0.39e2 / 0.5e1 * eta ^ 2 + 0.84e2 * eta + 0.447e3 / 0.5e1) * ci2 ^ 4 + (0.31e2 / 0.8e1 * eta ^ 3 + 0.79e2 / 0.40e2 * eta ^ 2 - 0.577e3 / 0.40e2 * eta - 0.577e3 / 0.40e2) * ci2 ^ 2 - eta ^ 3 / 0.40e2 - eta ^ 2 / 0.8e1 - 0.21e2 / 0.40e2 * eta - 0.21e2 / 0.40e2) * cos((g + 2 * f)) - 0.120e3 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.3e1 / 0.40e2 * eta ^ 2 - 0.7e1 / 0.6e1 * eta + 0.67e2 / 0.120e3) * ci2 ^ 8 + (-0.61e2 / 0.40e2 * eta ^ 3 - 0.47e2 / 0.160e3 * eta ^ 2 + 0.473e3 / 0.240e3 * eta - 0.89e2 / 0.480e3) * ci2 ^ 6 + (0.5e1 / 0.8e1 * eta ^ 3 + eta ^ 2 / 0.4e1 - 0.37e2 / 0.40e2 * eta - 0.7e1 / 0.20e2) * ci2 ^ 4 + (-0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * ci2 ^ 2 - 0.7e1 / 0.320e3 * eta ^ 3 - 0.17e2 / 0.960e3 * eta ^ 2 + 0.17e2 / 0.320e3 * eta + 0.17e2 / 0.320e3) * cos((3 * g + 2 * h + 2 * f)) - 0.102e3 / 0.271e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.27e2 / 0.34e2 * eta ^ 2 - 0.481e3 / 0.102e3 * eta - 0.281e3 / 0.51e2) * ci2 ^ 8 + (-0.99e2 / 0.68e2 * eta ^ 3 - 0.163e3 / 0.136e3 * eta ^ 2 + 0.2663e4 / 0.408e3 * eta + 0.767e3 / 0.102e3) * ci2 ^ 6 + (0.37e2 / 0.68e2 * eta ^ 3 + 0.25e2 / 0.51e2 * eta ^ 2 - 0.147e3 / 0.68e2 * eta - 0.83e2 / 0.34e2) * ci2 ^ 4 + (-0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * ci2 ^ 2 - 0.11e2 / 0.816e3 * eta ^ 3 - 0.7e1 / 0.408e3 * eta ^ 2 + 0.7e1 / 0.272e3 * eta + 0.1e1 / 0.34e2) * cos((3 * g + 2 * h + 4 * f)) - 0.413e3 / 0.271e3 * ((eta ^ 4 + 0.970e3 / 0.413e3 * eta ^ 3 + (-0.600e3 / 0.413e3 * Delta ^ 2 - 0.121e3 / 0.1239e4) * eta ^ 2 + (-0.1200e4 / 0.413e3 * Delta ^ 2 - 0.4304e4 / 0.1239e4) * eta - 0.2584e4 / 0.1239e4 - 0.600e3 / 0.413e3 * Delta ^ 2) * ci2 ^ 6 + (-0.2861e4 / 0.1652e4 * eta ^ 4 - 0.3293e4 / 0.826e3 * eta ^ 3 + (0.1080e4 / 0.413e3 * Delta ^ 2 + 0.136e3 / 0.413e3) * eta ^ 2 + (0.4989e4 / 0.826e3 + 0.2160e4 / 0.413e3 * Delta ^ 2) * eta + 0.5853e4 / 0.1652e4 + 0.1080e4 / 0.413e3 * Delta ^ 2) * ci2 ^ 4 + (0.751e3 / 0.826e3 * eta ^ 4 + 0.121e3 / 0.59e2 * eta ^ 3 + (-0.612e3 / 0.413e3 * Delta ^ 2 - 0.284e3 / 0.1239e4) * eta ^ 2 + (-0.3877e4 / 0.1239e4 - 0.1224e4 / 0.413e3 * Delta ^ 2) * eta - 0.612e3 / 0.413e3 * Delta ^ 2 - 0.4453e4 / 0.2478e4) * ci2 ^ 2 - 0.176e3 / 0.1239e4 * eta ^ 4 - 0.388e3 / 0.1239e4 * eta ^ 3 + (0.95e2 / 0.2478e4 + 0.108e3 / 0.413e3 * Delta ^ 2) * eta ^ 2 + (0.216e3 / 0.413e3 * Delta ^ 2 + 0.193e3 / 0.413e3) * eta + 0.108e3 / 0.413e3 * Delta ^ 2 + 0.31e2 / 0.118e3) * ci2 ^ 2 * cos((g + 2 * h)) + 0.240e3 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * Delta * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * sin((g + 2 * h)) - 0.351e3 / 0.542e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 + 0.256e3 / 0.117e3 * eta + 0.145e3 / 0.117e3) * ci2 ^ 6 + (-0.473e3 / 0.468e3 * eta ^ 2 - 0.253e3 / 0.117e3 * eta - 0.557e3 / 0.468e3) * ci2 ^ 4 + (0.379e3 / 0.1404e4 * eta ^ 2 + 0.22e2 / 0.39e2 * eta + 0.419e3 / 0.1404e4) * ci2 ^ 2 - 0.73e2 / 0.4212e4 * (0.1e1 + eta) * (eta + 0.82e2 / 0.73e2)) * cos((3 * g)) + 0.12e2 / 0.271e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta + 0.3e1 / 0.4e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.9e1 / 0.16e2) * ci2 ^ 4 + (eta / 0.6e1 + 0.7e1 / 0.48e2) * ci2 ^ 2 - eta / 0.96e2 - 0.1e1 / 0.96e2) * cos((-g + 2 * h + 2 * f)) + 0.89e2 / 0.542e3 * (ci2 ^ 6 - 0.117e3 / 0.356e3 * ci2 ^ 4 - 0.27e2 / 0.356e3 * ci2 ^ 2 + 0.3e1 / 0.89e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((5 * g + 2 * h + 2 * f)) + 0.11e2 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.51e2 / 0.11e2) * ci2 ^ 2 - 0.15e2 / 0.44e2 * eta ^ 2 - 0.75e2 / 0.44e2) * cos((-2 * h + 3 * g + 2 * f)) + 0.5e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.4e1 / 0.5e1) * ci2 ^ 2 - 0.9e1 / 0.20e2 * eta ^ 2 - 0.3e1 / 0.20e2) * cos((-2 * h + 3 * g + 4 * f)) - 0.42e2 / 0.271e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * ((eta + 0.11e2 / 0.14e2) * (eta + 0.2e1) * ci2 ^ 6 + (-0.25e2 / 0.28e2 * eta ^ 2 - 0.19e2 / 0.8e1 * eta - 0.37e2 / 0.28e2) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 + 0.61e2 / 0.168e3 * eta + 0.5e1 / 0.28e2) * ci2 ^ 2 - (0.1e1 + eta) * (eta - 0.2e1) / 0.336e3) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - 2 * h + 4 * f)) - 0.5e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.9e1 / 0.20e2) * cos((-2 * h + 3 * g)) + 0.840e3 / 0.271e3 * (ci2 ^ 4 - 0.2e1 / 0.7e1 * ci2 ^ 2 + 0.1e1 / 0.70e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 2 - 0.5e1 / 0.8e1) * sin((2 * f + 3 * g)) + 0.3e1 / 0.542e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.4e1 - 0.1e1 / 0.12e2) * (eta - 0.1e1) * cos((5 * g + 2 * h + 8 * f)) - 0.27e2 / 0.271e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * Delta * sin((g - 2 * h)) - (ci2 ^ 2 + 0.3e1 / 0.4e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((-2 * h + 3 * g + 6 * f)) / 0.1626e4) * sqrt(-eta ^ 2 + 0.1e1) + 0.60e2 / 0.271e3 * (0.1e1 + eta) * (0.23e2 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 6 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 4 + (-0.3e1 / 0.46e2 * eta ^ 2 + 0.19e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * cos((5 * g + 2 * h + 5 * f)) - 0.23e2 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * ((eta ^ 2 - 0.34e2 / 0.23e2) * ci2 ^ 4 + (-0.21e2 / 0.92e2 * eta ^ 2 + 0.63e2 / 0.184e3) * ci2 ^ 2 + eta ^ 2 / 0.92e2 - 0.1e1 / 0.92e2) * (ci2 + 0.1e1) ^ 2 * cos((5 * f + 5 * g)) - 0.10e2 * ci2 ^ 2 * (0.1e1 + eta) * Delta * ((eta ^ 2 - 0.11e2 / 0.5e1) * ci2 ^ 6 + (-0.9e1 / 0.5e1 * eta ^ 2 + 0.189e3 / 0.50e2) * ci2 ^ 4 + (0.51e2 / 0.50e2 * eta ^ 2 - 0.101e3 / 0.50e2) * ci2 ^ 2 - 0.9e1 / 0.50e2 * eta ^ 2 + 0.33e2 / 0.100e3) * sin((g + 2 * h + f)) + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * cos((3 * g + 2 * h + 7 * f)) / 0.16e2 + 0.5e1 / 0.8e1 * ((eta ^ 3 - 0.364e3 / 0.75e2 * eta ^ 2 - 0.1163e4 / 0.75e2 * eta - 0.736e3 / 0.75e2) * ci2 ^ 6 + (-0.99e2 / 0.100e3 * eta ^ 3 + 0.471e3 / 0.100e3 * eta ^ 2 + 0.57e2 / 0.4e1 * eta + 0.867e3 / 0.100e3) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.21e2 / 0.20e2 * eta ^ 2 - 0.893e3 / 0.300e3 * eta - 0.169e3 / 0.100e3) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + f)) + 0.29e2 / 0.120e3 * ((eta ^ 3 - 0.206e3 / 0.29e2 * eta ^ 2 - 0.529e3 / 0.29e2 * eta - 0.266e3 / 0.29e2) * ci2 ^ 6 + (-0.111e3 / 0.116e3 * eta ^ 3 + 0.165e3 / 0.29e2 * eta ^ 2 + 0.1719e4 / 0.116e3 * eta + 0.216e3 / 0.29e2) * ci2 ^ 4 + (eta ^ 3 / 0.4e1 - 0.35e2 / 0.58e2 * eta ^ 2 - 0.599e3 / 0.348e3 * eta - 0.137e3 / 0.174e3) * ci2 ^ 2 - 0.3e1 / 0.232e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) + 0.4e1 * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 8 + (-0.57e2 / 0.40e2 * eta ^ 2 + 0.271e3 / 0.60e2) * ci2 ^ 6 + (0.41e2 / 0.80e2 * eta ^ 2 - 0.347e3 / 0.240e3) * ci2 ^ 4 + (-eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * ci2 ^ 2 - eta ^ 2 / 0.96e2 + 0.1e1 / 0.96e2) * (0.1e1 + eta) * Delta * sin((3 * g + 2 * h + 3 * f)) - 0.3e1 / 0.40e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * Delta * (eta - 0.1e1) * sin((-g + 2 * h + f)) + 0.7e1 / 0.30e2 * (ci2 ^ 2 - 0.3e1 / 0.7e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 + 0.3e1 / 0.16e2) * cos((5 * g + 2 * h + 7 * f)) - 0.29e2 / 0.10e2 * (0.1e1 + eta) * ((eta - 0.1e1) ^ 2 * ((eta - 0.1e1) * ci2 ^ 8 + (eta / 0.4e1 + 0.11e2 / 0.4e1) * ci2 ^ 6 + (-0.2e1 * eta - 0.8e1 / 0.3e1) * ci2 ^ 4 + (0.7e1 / 0.12e2 * eta + 0.7e1 / 0.12e2) * ci2 ^ 2 + eta / 0.12e2 + 0.1e1 / 0.12e2) * cos((5 * f + g)) / 0.232e3 + 0.10e2 / 0.29e2 * (ci2 ^ 8 - 0.9e1 / 0.8e1 * ci2 ^ 6 + ci2 ^ 4 / 0.10e2 + 0.7e1 / 0.60e2 * ci2 ^ 2 - 0.1e1 / 0.120e3) * (0.1e1 + eta) * Delta * (eta - 0.1e1) * sin((g + 3 * f)) + 0.70e2 / 0.29e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 4 - 0.13e2 / 0.35e2 * ci2 ^ 2 + 0.1e1 / 0.35e2) * sin((3 * g + f)) - 0.70e2 / 0.29e2 * ci2 ^ 2 * (0.1e1 + eta) * Delta * (eta - 0.1e1) * (ci2 ^ 6 - 0.519e3 / 0.280e3 * ci2 ^ 4 + 0.153e3 / 0.140e3 * ci2 ^ 2 - 0.57e2 / 0.280e3) * sin((f - g)) + ((eta ^ 3 - 0.55e2 / 0.348e3 * eta ^ 2 - 0.27e2 / 0.58e2 * eta - 0.799e3 / 0.348e3) * ci2 ^ 8 + (-0.93e2 / 0.58e2 * eta ^ 3 + 0.179e3 / 0.464e3 * eta ^ 2 + 0.207e3 / 0.232e3 * eta + 0.1459e4 / 0.464e3) * ci2 ^ 6 + (-0.823e3 / 0.696e3 + 0.541e3 / 0.696e3 * eta ^ 3 - 0.135e3 / 0.232e3 * eta - 0.161e3 / 0.696e3 * eta ^ 2) * ci2 ^ 4 + (-0.277e3 / 0.2784e4 * eta ^ 3 + 0.127e3 / 0.2784e4 + 0.197e3 / 0.2784e4 * eta ^ 2 + 0.99e2 / 0.928e3 * eta) * ci2 ^ 2 - 0.13e2 / 0.928e3 * eta ^ 2 + 0.67e2 / 0.2784e4 - 0.13e2 / 0.2784e4 * eta ^ 3 + 0.3e1 / 0.928e3 * eta) * cos((f + g)) - 0.40e2 / 0.29e2 * ((eta ^ 2 - 0.4e1) * ci2 ^ 8 + (-0.12e2 / 0.5e1 * eta ^ 2 + 0.297e3 / 0.40e2) * ci2 ^ 6 + (0.147e3 / 0.80e2 * eta ^ 2 - 0.351e3 / 0.80e2) * ci2 ^ 4 + (-0.71e2 / 0.160e3 * eta ^ 2 + 0.131e3 / 0.160e3) * ci2 ^ 2 + eta ^ 2 / 0.160e3 - 0.1e1 / 0.160e3) * Delta * sin((f + g))) + 0.6e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.1e1) * ci2 ^ 6 + (-0.9e1 / 0.10e2 * eta ^ 2 + 0.17e2 / 0.20e2) * ci2 ^ 4 + (0.7e1 / 0.40e2 * eta ^ 2 - 0.19e2 / 0.120e3) * ci2 ^ 2 - eta ^ 2 / 0.240e3 + 0.1e1 / 0.240e3) * sin((g - 2 * h + f)) + 0.7e1 / 0.80e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.15e2 / 0.28e2) * ci2 ^ 4 + (eta / 0.28e2 + 0.1e1 / 0.84e2) * ci2 ^ 2 + eta / 0.84e2 + 0.1e1 / 0.84e2) * cos((g - 2 * h + 5 * f)) + 0.67e2 / 0.30e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 6 - 0.297e3 / 0.1072e4 * ci2 ^ 4 - 0.75e2 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * cos((5 * g + 2 * h + 3 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.9e1 / 0.4e1 + (eta ^ 2 - 0.5e1) * ci2 ^ 2) * cos((-2 * h + 3 * g + 3 * f)) / 0.30e2 + ci2 ^ 4 * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.53e2 / 0.40e2 * ci2 ^ 2 + 0.2e1 / 0.5e1) * sin((3 * g + 2 * h + 5 * f)) - 0.3e1 / 0.40e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * cos((2 * h + g + 5 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 3 * cos((-g - 2 * h + 3 * f)) / 0.40e2 - 0.11e2 / 0.40e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 - 0.53e2 / 0.11e2 * eta - 0.62e2 / 0.11e2) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta + 0.48e2 / 0.11e2) * ci2 ^ 4 + (0.3e1 / 0.44e2 * eta ^ 2 - 0.115e3 / 0.132e3 * eta - 0.61e2 / 0.66e2) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) / 0.264e3) * cos((-g + 2 * h + f)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta - 0.21e2 / 0.20e2) * ci2 ^ 4 + (0.3e1 / 0.20e2 * eta + 0.11e2 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * cos((-3 * g + f)) / 0.16e2 - 0.7e1 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.261e3 / 0.140e3 * ci2 ^ 4 + 0.11e2 / 0.10e2 * ci2 ^ 2 - 0.57e2 / 0.280e3) * Delta * (eta - 0.1e1) * sin((-g - 2 * h + f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 6 - 0.33e2 / 0.20e2 * ci2 ^ 4 + 0.5e1 / 0.6e1 * ci2 ^ 2 - 0.1e1 / 0.8e1) * (eta - 0.1e1) * sin((g + 2 * h + 3 * f)) + 0.3e1 / 0.40e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.383e3 / 0.9e1 * eta + 0.572e3 / 0.9e1) * ci2 ^ 6 + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.217e3 / 0.6e1 * eta - 0.623e3 / 0.12e2) * ci2 ^ 4 + (eta ^ 2 / 0.36e2 + 0.109e3 / 0.18e2 * eta + 0.283e3 / 0.36e2) * ci2 ^ 2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * (eta - 0.1e1) * cos((3 * g + 5 * f)) - 0.67e2 / 0.30e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 4 - 0.297e3 / 0.1072e4 * ci2 ^ 2 + 0.3e1 / 0.134e3) * (eta - 0.1e1) * cos((3 * f + 5 * g)) + 0.7e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 8 - 0.419e3 / 0.280e3 * ci2 ^ 6 + 0.83e2 / 0.140e3 * ci2 ^ 4 - ci2 ^ 2 / 0.56e2 - 0.1e1 / 0.56e2) * Delta * (eta - 0.1e1) * sin((3 * g + 2 * h + f)) + 0.3e1 / 0.5e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.47e2 / 0.8e1 * eta ^ 2 + 0.15e2 / 0.4e1 * eta - 0.113e3 / 0.8e1) * ci2 ^ 6 + (-eta ^ 3 - 0.189e3 / 0.32e2 * eta ^ 2 - 0.45e2 / 0.16e2 * eta + 0.419e3 / 0.32e2) * ci2 ^ 4 + (0.5e1 / 0.16e2 * eta ^ 3 + 0.431e3 / 0.288e3 * eta ^ 2 + eta / 0.4e1 - 0.845e3 / 0.288e3) * ci2 ^ 2 - 0.13e2 / 0.576e3 * eta ^ 3 - 0.13e2 / 0.192e3 * eta ^ 2 + eta / 0.64e2 + 0.67e2 / 0.576e3) * cos((g - 2 * h + f)) + (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.673e3 / 0.60e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.911e3 / 0.60e2) * ci2 ^ 6 + (-0.17e2 / 0.20e2 * eta ^ 3 - 0.861e3 / 0.80e2 * eta ^ 2 + 0.81e2 / 0.40e2 * eta + 0.235e3 / 0.16e2) * ci2 ^ 4 + (0.17e2 / 0.120e3 * eta ^ 3 + 0.207e3 / 0.80e2 * eta ^ 2 - 0.3e1 / 0.20e2 * eta - 0.167e3 / 0.48e2) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * cos((3 * g + 3 * f)) / 0.2e1 + 0.7e1 / 0.20e2 * ci2 ^ 2 * (0.1e1 + eta) * ((eta ^ 2 + 0.122e3 / 0.21e2 * eta + 0.29e2 / 0.3e1) * ci2 ^ 6 + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.137e3 / 0.14e2 * eta - 0.109e3 / 0.7e1) * ci2 ^ 4 + (0.2e1 / 0.3e1 * eta ^ 2 + 0.38e2 / 0.7e1 * eta + 0.8e1) * ci2 ^ 2 - eta ^ 2 / 0.12e2 - 0.41e2 / 0.42e2 * eta - 0.109e3 / 0.84e2) * (eta - 0.1e1) * cos((g + 2 * h + 3 * f)) + ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.3e1) * ci2 ^ 6 + (-0.7e1 / 0.4e1 * eta + 0.17e2 / 0.4e1) * ci2 ^ 4 + (eta - 0.5e1 / 0.3e1) * ci2 ^ 2 - eta / 0.6e1 + 0.1e1 / 0.6e1) * cos((-g + 3 * f)) / 0.80e2 - (0.1e1 + eta) * ((eta ^ 3 + 0.223e3 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.297e3 / 0.20e2) * ci2 ^ 8 + (-0.27e2 / 0.20e2 * eta ^ 3 - 0.1307e4 / 0.80e2 * eta ^ 2 + 0.27e2 / 0.8e1 * eta + 0.1757e4 / 0.80e2) * ci2 ^ 6 + (0.17e2 / 0.40e2 * eta ^ 3 + 0.247e3 / 0.40e2 * eta ^ 2 - 0.33e2 / 0.40e2 * eta - 0.67e2 / 0.8e1) * ci2 ^ 4 + (-eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * ci2 ^ 2 - eta ^ 3 / 0.160e3 - 0.27e2 / 0.160e3 * eta ^ 2 - 0.3e1 / 0.160e3 * eta + 0.39e2 / 0.160e3) * cos((3 * g + 2 * h + 3 * f)) / 0.2e1 - 0.5e1 / 0.8e1 * ((eta ^ 3 - 0.138e3 / 0.25e2 * eta ^ 2 - 0.421e3 / 0.25e2 * eta - 0.262e3 / 0.25e2) * ci2 ^ 8 + (-0.149e3 / 0.100e3 * eta ^ 3 + 0.192e3 / 0.25e2 * eta ^ 2 + 0.2309e4 / 0.100e3 * eta + 0.353e3 / 0.25e2) * ci2 ^ 6 + (0.29e2 / 0.50e2 * eta ^ 3 - 0.131e3 / 0.50e2 * eta ^ 2 - 0.1159e4 / 0.150e3 * eta - 0.229e3 / 0.50e2) * ci2 ^ 4 + (-0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * ci2 ^ 2 - 0.13e2 / 0.600e3 * eta ^ 3 + eta ^ 2 / 0.120e3 + 0.3e1 / 0.40e2 * eta + 0.9e1 / 0.200e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + f)) - 0.19e2 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * ((eta ^ 3 + 0.413e3 / 0.57e2 * eta ^ 2 + 0.793e3 / 0.57e2 * eta + 0.473e3 / 0.57e2) * ci2 ^ 6 + (-0.69e2 / 0.38e2 * eta ^ 3 - 0.235e3 / 0.19e2 * eta ^ 2 - 0.883e3 / 0.38e2 * eta - 0.259e3 / 0.19e2) * ci2 ^ 4 + (0.58e2 / 0.57e2 * eta ^ 3 + 0.119e3 / 0.19e2 * eta ^ 2 + 0.652e3 / 0.57e2 * eta + 0.377e3 / 0.57e2) * ci2 ^ 2 - 0.13e2 / 0.76e2 * eta ^ 3 - 0.205e3 / 0.228e3 * eta ^ 2 - 0.359e3 / 0.228e3 * eta - 0.205e3 / 0.228e3) * cos((-g - 2 * h + f)) + 0.23e2 / 0.10e2 * ci2 ^ 2 * (0.1e1 + eta) * ((0.109e3 / 0.138e3 + eta ^ 3 - 0.239e3 / 0.138e3 * eta ^ 2 - 0.36e2 / 0.23e2 * eta) * ci2 ^ 6 + (-0.75e2 / 0.46e2 * eta ^ 3 + 0.257e3 / 0.92e2 * eta ^ 2 + 0.54e2 / 0.23e2 * eta - 0.119e3 / 0.92e2) * ci2 ^ 4 + (0.56e2 / 0.69e2 * eta ^ 3 - 0.55e2 / 0.46e2 * eta ^ 2 - 0.24e2 / 0.23e2 * eta + 0.19e2 / 0.46e2) * ci2 ^ 2 - 0.11e2 / 0.92e2 * eta ^ 3 + 0.59e2 / 0.552e3 * eta ^ 2 + 0.3e1 / 0.23e2 * eta + 0.5e1 / 0.184e3) * cos((g + 2 * h + f)) - (0.1e1 + eta) * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta - 0.7e1 / 0.4e1) * ci2 ^ 6 + (0.2e1 / 0.5e1 * eta + 0.8e1 / 0.15e2) * ci2 ^ 4 + (-eta / 0.60e2 - 0.1e1 / 0.60e2) * ci2 ^ 2 - eta / 0.60e2 - 0.1e1 / 0.60e2) * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + f)) / 0.16e2 - 0.3e1 / 0.40e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.127e3 / 0.3e1 * eta + 0.190e3 / 0.3e1) * ci2 ^ 8 + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.689e3 / 0.12e2 * eta - 0.251e3 / 0.3e1) * ci2 ^ 6 + (0.5e1 / 0.18e2 * eta ^ 2 + 0.163e3 / 0.9e1 * eta + 0.151e3 / 0.6e1) * ci2 ^ 4 + (0.1e1 + eta) * (eta - 0.7e1) * ci2 ^ 2 / 0.72e2 + (0.1e1 + eta) * (eta - 0.7e1) / 0.72e2) * cos((3 * g + 2 * h + 5 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.5e1 / 0.8e1) * (ci2 ^ 2 - 0.1e1 / 0.5e1) * sin((3 * g + 5 * f)) + 0.49e2 / 0.40e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.100e3 / 0.21e2 * eta ^ 2 + 0.1241e4 / 0.147e3 * eta + 0.760e3 / 0.147e3) * ci2 ^ 8 + (-0.331e3 / 0.196e3 * eta ^ 3 - 0.416e3 / 0.49e2 * eta ^ 2 - 0.2945e4 / 0.196e3 * eta - 0.439e3 / 0.49e2) * ci2 ^ 6 + (0.253e3 / 0.294e3 * eta ^ 3 + 0.187e3 / 0.42e2 * eta ^ 2 + 0.2311e4 / 0.294e3 * eta + 0.193e3 / 0.42e2) * ci2 ^ 4 + (-0.155e3 / 0.1176e4 * eta ^ 3 - 0.115e3 / 0.168e3 * eta ^ 2 - 0.1409e4 / 0.1176e4 * eta - 0.269e3 / 0.392e3) * ci2 ^ 2 + (eta + 0.13e2) * (0.1e1 + eta) ^ 2 / 0.1176e4) * cos((f - g)) - 0.71e2 / 0.120e3 * (eta - 0.1e1) * ((eta ^ 3 + 0.80e2 / 0.71e2 * eta ^ 2 + 0.121e3 / 0.71e2 * eta + 0.140e3 / 0.71e2) * ci2 ^ 8 + (-0.421e3 / 0.284e3 * eta ^ 3 - 0.206e3 / 0.71e2 * eta ^ 2 - 0.1483e4 / 0.284e3 * eta - 0.305e3 / 0.71e2) * ci2 ^ 6 + (0.89e2 / 0.142e3 * eta ^ 3 + 0.367e3 / 0.142e3 * eta ^ 2 + 0.2225e4 / 0.426e3 * eta + 0.1447e4 / 0.426e3) * ci2 ^ 4 - 0.31e2 / 0.568e3 * (0.1e1 + eta) * (eta ^ 2 + 0.334e3 / 0.31e2 * eta + 0.451e3 / 0.31e2) * ci2 ^ 2 - 0.3e1 / 0.568e3 * (0.1e1 + eta) * (eta ^ 2 + 0.2e1 * eta + 0.5e1)) * cos((g + 3 * f)) - 0.4e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.10e2 / 0.3e1) * ci2 ^ 4 + (-0.3e1 / 0.10e2 * eta ^ 2 + 0.23e2 / 0.30e2) * ci2 ^ 2 - 0.1e1 / 0.60e2 + eta ^ 2 / 0.60e2) * Delta * (ci2 ^ 2 - 0.5e1 / 0.8e1) * sin((3 * g + 3 * f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 + 0.3e1 / 0.8e1) * (eta - 0.1e1) * cos((-2 * h + 3 * g + 5 * f)) / 0.60e2 - (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((3 * g + 7 * f)) / 0.16e2 - 0.7e1 / 0.30e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2 - 0.27e2 / 0.112e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((7 * f + 5 * g)) - 0.5e1 / 0.12e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.63e2 / 0.200e3) * cos((-2 * h + 3 * g + f)) + (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((-g + 2 * h + 3 * f)) / 0.80e2 + 0.2e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 6 - 0.71e2 / 0.80e2 * ci2 ^ 4 + 0.41e2 / 0.240e3 * ci2 ^ 2 - 0.1e1 / 0.240e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((g - 2 * h + 3 * f)))) / eta ^ 8 / a ^ 4 -0.1215e4 / 0.16e2 * R__e ^ 4 * J ^ 2 * (-0.119e3 / 0.810e3 * ((0.7375e4 / 0.238e3 + eta ^ 5 + 0.3597e4 / 0.119e3 * eta - 0.1405e4 / 0.238e3 * eta ^ 4 - 0.2776e4 / 0.119e3 * eta ^ 3 - 0.1973e4 / 0.119e3 * eta ^ 2) * ci2 ^ 8 + (-0.8488e4 / 0.119e3 - 0.39e2 / 0.17e2 * eta ^ 5 + 0.6194e4 / 0.119e3 * eta ^ 3 + 0.588e3 / 0.17e2 * eta ^ 2 - 0.8657e4 / 0.119e3 * eta + 0.1492e4 / 0.119e3 * eta ^ 4) * ci2 ^ 6 + (0.7143e4 / 0.119e3 - 0.718e3 / 0.17e2 * eta ^ 3 + 0.7683e4 / 0.119e3 * eta - 0.1083e4 / 0.119e3 * eta ^ 4 + 0.33e2 / 0.17e2 * eta ^ 5 - 0.3076e4 / 0.119e3 * eta ^ 2) * ci2 ^ 4 + (0.248e3 / 0.17e2 * eta ^ 3 - 0.2936e4 / 0.119e3 * eta + 0.621e3 / 0.238e3 * eta ^ 4 - 0.5143e4 / 0.238e3 - 0.12e2 / 0.17e2 * eta ^ 5 + 0.953e3 / 0.119e3 * eta ^ 2) * ci2 ^ 2 - 0.208e3 / 0.119e3 * eta ^ 3 - 0.377e3 / 0.476e3 * eta ^ 2 - 0.251e3 / 0.952e3 * eta ^ 4 + 0.787e3 / 0.238e3 * eta + 0.2589e4 / 0.952e3 + 0.3e1 / 0.34e2 * eta ^ 5) * (0.1e1 + eta) * (eta - 0.1e1) * sin((2 * f)) + 0.551e3 / 0.540e3 * (0.1e1 + eta) * ((-0.7550e4 / 0.1653e4 + eta ^ 5 - 0.4792e4 / 0.1653e4 * eta - 0.805e3 / 0.1653e4 * eta ^ 4 - 0.173e3 / 0.57e2 * eta ^ 3 - 0.2209e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 8 + (0.16990e5 / 0.1653e4 - 0.1202e4 / 0.551e3 * eta ^ 5 + 0.10004e5 / 0.1653e4 * eta ^ 3 + 0.3716e4 / 0.1653e4 * eta ^ 2 + 0.3574e4 / 0.551e3 * eta + 0.1598e4 / 0.1653e4 * eta ^ 4) * ci2 ^ 6 + (-0.13679e5 / 0.1653e4 - 0.5888e4 / 0.1653e4 * eta ^ 3 - 0.9536e4 / 0.1653e4 * eta - 0.5e1 / 0.19e2 * eta ^ 4 + 0.2704e4 / 0.1653e4 * eta ^ 5 - 0.2462e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 4 + (0.851e3 / 0.1653e4 * eta ^ 3 + 0.3874e4 / 0.1653e4 * eta - 0.388e3 / 0.1653e4 * eta ^ 4 + 0.4603e4 / 0.1653e4 - 0.267e3 / 0.551e3 * eta ^ 5 + 0.853e3 / 0.1653e4 * eta ^ 2) * ci2 ^ 2 + 0.7e1 / 0.551e3 * eta ^ 3 - 0.37e2 / 0.551e3 * eta ^ 2 + 0.401e3 / 0.6612e4 * eta ^ 4 - 0.2149e4 / 0.6612e4 - 0.2129e4 / 0.6612e4 * eta + 0.317e3 / 0.6612e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + f + 2 * g)) + 0.77e2 / 0.432e3 * (0.1e1 + eta) * ((-0.4339e4 / 0.231e3 - 0.5898e4 / 0.385e3 * eta + eta ^ 4 + 0.5774e4 / 0.1155e4 * eta ^ 3 + 0.5308e4 / 0.1155e4 * eta ^ 2) * ci2 ^ 8 + (0.16182e5 / 0.385e3 - 0.12976e5 / 0.1155e4 * eta ^ 3 - 0.10748e5 / 0.1155e4 * eta ^ 2 + 0.41744e5 / 0.1155e4 * eta - 0.802e3 / 0.385e3 * eta ^ 4) * ci2 ^ 6 + (-0.1876e4 / 0.55e2 + 0.976e3 / 0.105e3 * eta ^ 3 - 0.12112e5 / 0.385e3 * eta + 0.340e3 / 0.231e3 * eta ^ 4 + 0.512e3 / 0.77e2 * eta ^ 2) * ci2 ^ 4 + (-0.3814e4 / 0.1155e4 * eta ^ 3 + 0.1946e4 / 0.165e3 * eta - 0.31e2 / 0.77e2 * eta ^ 4 + 0.4531e4 / 0.385e3 - 0.2216e4 / 0.1155e4 * eta ^ 2) * ci2 ^ 2 + 0.2e1 / 0.5e1 * eta ^ 3 + 0.25e2 / 0.154e3 * eta ^ 2 + 0.57e2 / 0.1540e4 * eta ^ 4 - 0.6569e4 / 0.4620e4 - 0.54e2 / 0.35e2 * eta) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f)) + 0.31e2 / 0.1080e4 * (0.1e1 + eta) * ((eta ^ 3 - 0.298e3 / 0.93e2 * eta ^ 2 - 0.623e3 / 0.93e2 * eta - 0.40e2 / 0.93e2) * ci2 ^ 8 + (-0.70e2 / 0.31e2 * eta ^ 3 + 0.322e3 / 0.31e2 * eta ^ 2 + 0.678e3 / 0.31e2 * eta + 0.158e3 / 0.31e2) * ci2 ^ 6 + (0.164e3 / 0.93e2 * eta ^ 3 - 0.386e3 / 0.31e2 * eta ^ 2 - 0.2432e4 / 0.93e2 * eta - 0.854e3 / 0.93e2) * ci2 ^ 4 + (-0.17e2 / 0.31e2 * eta ^ 3 + 0.578e3 / 0.93e2 * eta ^ 2 + 0.1205e4 / 0.93e2 * eta + 0.512e3 / 0.93e2) * ci2 ^ 2 + 0.7e1 / 0.124e3 * eta ^ 3 - 0.379e3 / 0.372e3 * eta ^ 2 - 0.2347e4 / 0.1116e4 * eta - 0.361e3 / 0.372e3) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g - 2 * h + 3 * f)) - ((eta ^ 2 - 0.1378e4 / 0.9e1 * eta - 0.3295e4 / 0.9e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.1040e4 / 0.3e1 * eta + 0.2318e4 / 0.3e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 - 0.2600e4 / 0.9e1 * eta - 0.5156e4 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.310e3 / 0.3e1 * eta + 0.523e3 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.38e2 / 0.3e1 * eta - 0.223e3 / 0.12e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f)) / 0.720e3 - (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.734e3 / 0.45e2 * eta ^ 2 - 0.2359e4 / 0.45e2 * eta - 0.1652e4 / 0.45e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.110e3 / 0.3e1 * eta ^ 2 + 0.1694e4 / 0.15e2 * eta + 0.1162e4 / 0.15e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 - 0.272e3 / 0.9e1 * eta ^ 2 - 0.3908e4 / 0.45e2 * eta - 0.2584e4 / 0.45e2) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.32e2 / 0.3e1 * eta ^ 2 + 0.419e3 / 0.15e2 * eta + 0.262e3 / 0.15e2) * ci2 ^ 2 + eta ^ 3 / 0.36e2 - 0.233e3 / 0.180e3 * eta ^ 2 - 0.113e3 / 0.36e2 * eta - 0.67e2 / 0.36e2) * sin((2 * h + 5 * f + 2 * g)) / 0.72e2 - ci2 ^ 2 * (0.1e1 + eta) ^ 5 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((6 * g + 2 * h + 10 * f)) / 0.270e3 - ci2 ^ 2 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 ^ 2 + 0.1e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((2 * g - 2 * h + 8 * f)) / 0.3240e4 - 0.7e1 / 0.864e3 * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 7 * f)) + 0.283e3 / 0.1080e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 2 - 0.218e3 / 0.849e3 * eta - 0.2711e4 / 0.849e3) * ci2 ^ 4 + (-0.487e3 / 0.1698e4 * eta ^ 2 + 0.30e2 / 0.283e3 * eta + 0.1715e4 / 0.1698e4) * ci2 ^ 2 + 0.6e1 / 0.283e3 * eta ^ 2 - 0.6e1 / 0.283e3) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 7 * f)) - 0.103e3 / 0.27e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.91e2 / 0.103e3 * eta - 0.72e2 / 0.103e3) * ci2 ^ 4 + (-0.132e3 / 0.103e3 * eta ^ 2 - 0.117e3 / 0.103e3 * eta + 0.87e2 / 0.103e3) * ci2 ^ 2 + 0.73e2 / 0.206e3 * eta ^ 2 + 0.65e2 / 0.206e3 * eta - 0.22e2 / 0.103e3) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h - 2 * g + f)) - 0.143e3 / 0.1440e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.4564e4 / 0.429e3 * eta ^ 3 - 0.1618e4 / 0.429e3 * eta ^ 2 - 0.34388e5 / 0.429e3 * eta - 0.32875e5 / 0.429e3) * ci2 ^ 6 + (-0.461e3 / 0.429e3 * eta ^ 4 - 0.5696e4 / 0.429e3 * eta ^ 3 + 0.1238e4 / 0.429e3 * eta ^ 2 + 0.39328e5 / 0.429e3 * eta + 0.12365e5 / 0.143e3) * ci2 ^ 4 + (0.167e3 / 0.858e3 * eta ^ 4 + 0.640e3 / 0.143e3 * eta ^ 3 + 0.15e2 / 0.13e2 * eta ^ 2 - 0.3280e4 / 0.143e3 * eta - 0.5021e4 / 0.234e3) * ci2 ^ 2 + 0.14e2 / 0.1287e4 * (eta ^ 3 - 0.49e2 * eta ^ 2 - 0.123e3 / 0.7e1 * eta + 0.627e3 / 0.7e1) * (0.1e1 + eta)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f + 2 * g)) + 0.73e2 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((9 * f + 4 * g)) - 0.22e2 / 0.27e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) ^ 2 * cos((6 * f + 2 * g)) + 0.7e1 / 0.54e2 * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g - 2 * h + f)) - 0.40e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.133e3 / 0.120e3 * eta + 0.97e2 / 0.120e3) * ci2 ^ 6 + (-0.4e1 / 0.3e1 * eta ^ 2 - 0.589e3 / 0.400e3 * eta - 0.1187e4 / 0.1200e4) * ci2 ^ 4 + (0.253e3 / 0.480e3 * eta ^ 2 + 0.1387e4 / 0.2400e4 * eta + 0.77e2 / 0.240e3) * ci2 ^ 2 - 0.7e1 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.240e3 * eta - 0.1e1 / 0.32e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + f)) + 0.73e2 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 9 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f - 2 * g)) / 0.1440e4 + 0.7e1 / 0.864e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + 9 * f)) + (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 5 * f)) / 0.9e1 + 0.5e1 / 0.648e3 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h - 2 * g + f)) + (0.1e1 + eta) ^ 3 * ((eta + 0.13e2) * ci2 ^ 6 + (0.7e1 / 0.10e2 * eta - 0.167e3 / 0.10e2) * ci2 ^ 4 + (0.3e1 / 0.20e2 * eta + 0.117e3 / 0.20e2) * ci2 ^ 2 - 0.2e1 / 0.5e1 * eta - 0.3e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g + f)) / 0.54e2 + ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((2 * h + 2 * f)) / 0.135e3 + 0.7e1 / 0.864e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g + 9 * f)) - 0.13e2 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 + 0.3e1 / 0.13e2 * eta + 0.48e2 / 0.13e2) * ci2 ^ 2 - eta ^ 2 + 0.7e1 / 0.26e2 * eta - 0.7e1 / 0.26e2) * sin((-2 * h + 5 * f + 2 * g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f)) / 0.1440e4 - ((eta ^ 2 - 0.5e1 / 0.9e1 * eta - 0.86e2 / 0.9e1) * ci2 ^ 6 + (-0.209e3 / 0.180e3 * eta ^ 2 + 0.2e1 / 0.3e1 * eta + 0.1913e4 / 0.180e3) * ci2 ^ 4 + (0.13e2 / 0.40e2 * eta ^ 2 - eta / 0.5e1 - 0.101e3 / 0.40e2) * ci2 ^ 2 - eta ^ 2 / 0.45e2 + eta / 0.90e2 + 0.1e1 / 0.30e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f + 2 * g)) / 0.3e1 + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-2 * g + 2 * f)) / 0.135e3 + 0.23e2 / 0.27e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 6 + (-0.409e3 / 0.345e3 * eta ^ 2 - 0.497e3 / 0.690e3 * eta + 0.527e3 / 0.230e3) * ci2 ^ 4 + (0.473e3 / 0.1380e4 * eta ^ 2 + 0.287e3 / 0.1380e4 * eta - 0.151e3 / 0.230e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - 0.7e1 / 0.690e3 * eta + 0.3e1 / 0.92e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 3 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 + 0.13e2 / 0.18e2) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g - 2 * h + 7 * f)) / 0.360e3 + 0.5e1 / 0.648e3 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-4 * g + f)) - 0.403e3 / 0.4320e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 4 - 0.2544e4 / 0.403e3 * eta ^ 3 - 0.954e3 / 0.403e3 * eta ^ 2 + 0.3784e4 / 0.403e3 * eta + 0.639e3 / 0.403e3) * ci2 ^ 6 + (-0.419e3 / 0.403e3 * eta ^ 4 + 0.2576e4 / 0.403e3 * eta ^ 3 + 0.946e3 / 0.403e3 * eta ^ 2 - 0.3624e4 / 0.403e3 * eta - 0.327e3 / 0.403e3) * ci2 ^ 4 + (0.157e3 / 0.806e3 * eta ^ 4 - 0.2272e4 / 0.1209e4 * eta ^ 3 - 0.191e3 / 0.403e3 * eta ^ 2 + 0.3164e4 / 0.1209e4 * eta + 0.187e3 / 0.2418e4) * ci2 ^ 2 + eta ^ 4 / 0.403e3 + 0.218e3 / 0.1209e4 * eta ^ 3 + 0.8e1 / 0.1209e4 * eta ^ 2 - 0.118e3 / 0.403e3 * eta - 0.17e2 / 0.403e3) * sin((2 * h + f)) - 0.47e2 / 0.1620e4 * ((eta ^ 2 - 0.11e2 / 0.47e2 * eta - 0.407e3 / 0.47e2) * ci2 ^ 4 + (-0.13e2 / 0.47e2 * eta ^ 2 + 0.5e1 / 0.47e2 * eta + 0.130e3 / 0.47e2) * ci2 ^ 2 + eta ^ 2 / 0.47e2 - 0.1e1 / 0.47e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sin((8 * f + 4 * g)) + 0.7e1 / 0.135e3 * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((8 * f + 2 * g)) + ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((-4 * g - 2 * h + 2 * f)) / 0.216e3 + 0.233e3 / 0.162e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.1783e4 / 0.1165e4 * eta ^ 3 - 0.1143e4 / 0.1165e4 * eta ^ 2 - 0.753e3 / 0.233e3 * eta - 0.2224e4 / 0.1165e4) * ci2 ^ 4 + (-0.1489e4 / 0.4660e4 * eta ^ 4 - 0.461e3 / 0.932e3 * eta ^ 3 + 0.1441e4 / 0.4660e4 * eta ^ 2 + 0.961e3 / 0.932e3 * eta + 0.707e3 / 0.1165e4) * ci2 ^ 2 + 0.13e2 / 0.466e3 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2)) * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 5 * f)) - 0.8e1 / 0.135e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 3 + 0.21e2 / 0.64e2 * eta ^ 2 - 0.55e2 / 0.16e2 * eta - 0.157e3 / 0.64e2) * ci2 ^ 6 + (-eta ^ 3 - 0.21e2 / 0.64e2 * eta ^ 2 + 0.51e2 / 0.16e2 * eta + 0.141e3 / 0.64e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.11e2 / 0.128e3 * eta ^ 2 - 0.103e3 / 0.96e2 * eta - 0.265e3 / 0.384e3) * ci2 ^ 2 - eta ^ 3 / 0.24e2 - eta ^ 2 / 0.192e3 + 0.5e1 / 0.32e2 * eta + 0.19e2 / 0.192e3) * sin((2 * h + 2 * f)) - 0.41e2 / 0.135e3 * ((eta ^ 5 + 0.355e3 / 0.164e3 * eta ^ 4 + 0.203e3 / 0.82e2 * eta ^ 3 + 0.446e3 / 0.41e2 * eta ^ 2 + 0.1069e4 / 0.82e2 * eta + 0.489e3 / 0.164e3) * ci2 ^ 6 + (-0.151e3 / 0.123e3 * eta ^ 5 - 0.1361e4 / 0.492e3 * eta ^ 4 - 0.323e3 / 0.82e2 * eta ^ 3 - 0.1669e4 / 0.123e3 * eta ^ 2 - 0.3571e4 / 0.246e3 * eta - 0.461e3 / 0.164e3) * ci2 ^ 4 + (eta ^ 5 / 0.3e1 + 0.907e3 / 0.984e3 * eta ^ 4 + 0.1073e4 / 0.492e3 * eta ^ 3 + 0.1181e4 / 0.246e3 * eta ^ 2 + 0.555e3 / 0.164e3 * eta + 0.37e2 / 0.984e3) * ci2 ^ 2 - eta ^ 5 / 0.164e3 - 0.29e2 / 0.492e3 * eta ^ 4 - 0.77e2 / 0.246e3 * eta ^ 3 - 0.109e3 / 0.246e3 * eta ^ 2 - 0.7e1 / 0.492e3 * eta + 0.29e2 / 0.164e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-2 * h + 2 * f)) - 0.148e3 / 0.27e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.18e2 / 0.37e2 * eta ^ 2 - 0.45e2 / 0.37e2 * eta - 0.44e2 / 0.37e2) * ci2 ^ 6 + (-0.419e3 / 0.370e3 * eta ^ 3 - 0.21e2 / 0.37e2 * eta ^ 2 + 0.507e3 / 0.370e3 * eta + 0.248e3 / 0.185e3) * ci2 ^ 4 + (0.427e3 / 0.1480e4 * eta ^ 3 + 0.237e3 / 0.1480e4 * eta ^ 2 - 0.507e3 / 0.1480e4 * eta - 0.497e3 / 0.1480e4) * ci2 ^ 2 - 0.3e1 / 0.296e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((2 * h + 4 * f + 4 * g)) + 0.2e1 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.19e2 * eta ^ 2 + 0.25e2 / 0.3e1 * eta - 0.125e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 3 / 0.15e2 - 0.23e2 * eta ^ 2 - 0.187e3 / 0.15e2 * eta + 0.737e3 / 0.15e2) * ci2 ^ 4 + (-0.14e2 / 0.15e2 * eta ^ 3 + 0.36e2 / 0.5e1 * eta ^ 2 + 0.88e2 / 0.15e2 * eta - 0.72e2 / 0.5e1) * ci2 ^ 2 + 0.2e1 / 0.5e1 * eta ^ 3 - 0.3e1 / 0.5e1 * eta ^ 2 - 0.16e2 / 0.15e2 * eta + 0.1e1) * Delta * cos((2 * g + 2 * f)) - (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((2 * h + 4 * f)) / 0.135e3 + 0.142e3 / 0.27e2 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * ((eta ^ 4 + 0.157e3 / 0.142e3 * eta ^ 3 - 0.379e3 / 0.142e3 * eta ^ 2 - 0.505e3 / 0.142e3 * eta - 0.135e3 / 0.142e3) * ci2 ^ 4 + (-0.171e3 / 0.142e3 * eta ^ 4 - 0.189e3 / 0.142e3 * eta ^ 3 + 0.417e3 / 0.142e3 * eta ^ 2 + 0.561e3 / 0.142e3 * eta + 0.75e2 / 0.71e2) * ci2 ^ 2 + 0.43e2 / 0.142e3 * eta ^ 4 + 0.95e2 / 0.284e3 * eta ^ 3 - 0.177e3 / 0.284e3 * eta ^ 2 - 0.243e3 / 0.284e3 * eta - 0.65e2 / 0.284e3) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + f + 2 * g)) + 0.143e3 / 0.135e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.675e3 / 0.572e3 * eta ^ 4 - 0.43e2 / 0.858e3 * eta ^ 3 - 0.712e3 / 0.429e3 * eta ^ 2 - 0.5389e4 / 0.858e3 * eta - 0.2583e4 / 0.572e3) * ci2 ^ 6 + (-0.197e3 / 0.143e3 * eta ^ 5 - 0.1083e4 / 0.572e3 * eta ^ 4 + 0.85e2 / 0.286e3 * eta ^ 3 + 0.551e3 / 0.143e3 * eta ^ 2 + 0.241e3 / 0.26e2 * eta + 0.3395e4 / 0.572e3) * ci2 ^ 4 + (0.83e2 / 0.143e3 * eta ^ 5 + 0.313e3 / 0.312e3 * eta ^ 4 - 0.149e3 / 0.572e3 * eta ^ 3 - 0.745e3 / 0.286e3 * eta ^ 2 - 0.7099e4 / 0.1716e4 * eta - 0.7531e4 / 0.3432e4) * ci2 ^ 2 - 0.157e3 / 0.1716e4 * eta ^ 5 - 0.305e3 / 0.1716e4 * eta ^ 4 + 0.20e2 / 0.143e3 * eta ^ 3 + 0.283e3 / 0.429e3 * eta ^ 2 + 0.1241e4 / 0.1716e4 * eta + 0.509e3 / 0.1716e4) * sin((2 * h + 2 * f + 4 * g)) - 0.2e1 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.71e2 / 0.45e2 * eta ^ 3 - 0.6e1 / 0.5e1 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.52e2 / 0.45e2) * ci2 ^ 4 + (0.97e2 / 0.180e3 * eta ^ 3 + 0.7e1 / 0.20e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.59e2 / 0.180e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * cos((2 * h)) - 0.212e3 / 0.405e3 * ((eta ^ 4 + 0.1109e4 / 0.848e3 * eta ^ 3 - 0.220e3 / 0.53e2 * eta ^ 2 - 0.6793e4 / 0.848e3 * eta - 0.571e3 / 0.106e3) * ci2 ^ 4 + (-0.79e2 / 0.212e3 * eta ^ 4 - 0.411e3 / 0.848e3 * eta ^ 3 + 0.1191e4 / 0.848e3 * eta ^ 2 + 0.2299e4 / 0.848e3 * eta + 0.1505e4 / 0.848e3) * ci2 ^ 2 + 0.21e2 / 0.424e3 * eta ^ 4 + 0.27e2 / 0.424e3 * eta ^ 3 - 0.55e2 / 0.424e3 * eta ^ 2 - 0.109e3 / 0.424e3 * eta - 0.15e2 / 0.106e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((6 * g + 2 * h + 4 * f)) - 0.11e2 / 0.135e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.1415e4 / 0.88e2 * eta ^ 4 + 0.1465e4 / 0.33e2 * eta ^ 3 - 0.4441e4 / 0.132e3 * eta ^ 2 - 0.6344e4 / 0.33e2 * eta - 0.11713e5 / 0.88e2) * ci2 ^ 6 + (-0.25e2 / 0.33e2 * eta ^ 5 - 0.4693e4 / 0.264e3 * eta ^ 4 - 0.1883e4 / 0.33e2 * eta ^ 3 + 0.3805e4 / 0.132e3 * eta ^ 2 + 0.7250e4 / 0.33e2 * eta + 0.13609e5 / 0.88e2) * ci2 ^ 4 + (-0.3e1 / 0.11e2 * eta ^ 5 + 0.173e3 / 0.48e2 * eta ^ 4 + 0.1345e4 / 0.66e2 * eta ^ 3 + 0.725e3 / 0.264e3 * eta ^ 2 - 0.3623e4 / 0.66e2 * eta - 0.22057e5 / 0.528e3) * ci2 ^ 2 + 0.17e2 / 0.88e2 * (eta ^ 4 + 0.4e1 / 0.51e2 * eta ^ 3 - 0.230e3 / 0.17e2 * eta ^ 2 - 0.184e3 / 0.51e2 * eta + 0.715e3 / 0.51e2) * (0.1e1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((2 * g + 4 * f)) - 0.4e1 / 0.81e2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.1251e4 / 0.80e2 * eta ^ 3 + 0.2001e4 / 0.80e2 * eta ^ 2 - 0.435e3 / 0.16e2 * eta - 0.2957e4 / 0.80e2) * ci2 ^ 4 + (-0.17e2 / 0.160e3 * eta ^ 4 - 0.447e3 / 0.80e2 * eta ^ 3 - 0.57e2 / 0.5e1 * eta ^ 2 + 0.111e3 / 0.16e2 * eta + 0.397e3 / 0.32e2) * ci2 ^ 2 - 0.3e1 / 0.80e2 * (eta - 0.1e1) * (0.1e1 + eta) * (eta ^ 2 - 0.16e2 * eta - 0.37e2)) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f + 4 * g)) + 0.56e2 / 0.27e2 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * ((eta ^ 4 + 0.59e2 / 0.14e2 * eta ^ 3 + 0.109e3 / 0.14e2 * eta ^ 2 + 0.93e2 / 0.14e2 * eta + 0.31e2 / 0.14e2) * ci2 ^ 4 + (-eta ^ 4 - 0.61e2 / 0.14e2 * eta ^ 3 - 0.58e2 / 0.7e1 * eta ^ 2 - 0.103e3 / 0.14e2 * eta - 0.18e2 / 0.7e1) * ci2 ^ 2 + eta ^ 4 / 0.6e1 + 0.67e2 / 0.84e2 * eta ^ 3 + 0.137e3 / 0.84e2 * eta ^ 2 + 0.19e2 / 0.12e2 * eta + 0.17e2 / 0.28e2) * cos((2 * g + 2 * h)) + 0.35e2 / 0.81e2 * ((eta ^ 3 + 0.269e3 / 0.350e3 * eta ^ 2 - 0.621e3 / 0.350e3 * eta - 0.68e2 / 0.35e2) * ci2 ^ 4 + (-0.43e2 / 0.140e3 * eta ^ 3 - 0.327e3 / 0.1400e4 * eta ^ 2 + 0.387e3 / 0.700e3 * eta + 0.851e3 / 0.1400e4) * ci2 ^ 2 + 0.9e1 / 0.700e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 7 * f)) + 0.163e3 / 0.540e3 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 - 0.757e3 / 0.489e3 * eta ^ 3 - 0.1311e4 / 0.163e3 * eta ^ 2 + 0.1273e4 / 0.489e3 * eta + 0.4400e4 / 0.489e3) * ci2 ^ 4 + (-0.331e3 / 0.978e3 * eta ^ 4 + 0.259e3 / 0.489e3 * eta ^ 3 + 0.1280e4 / 0.489e3 * eta ^ 2 - 0.415e3 / 0.489e3 * eta - 0.2821e4 / 0.978e3) * ci2 ^ 2 + 0.25e2 / 0.489e3 * (0.1e1 + eta) * (eta ^ 3 - 0.39e2 / 0.25e2 * eta ^ 2 - 0.77e2 / 0.25e2 * eta + 0.83e2 / 0.25e2)) * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f + 4 * g)) - (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((4 * f - 2 * g)) / 0.135e3 + 0.89e2 / 0.3240e4 * (0.1e1 + eta) ^ 4 * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * sin((6 * g + 2 * h)) - 0.161e3 / 0.324e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.979e3 / 0.805e3 * eta + 0.41e2 / 0.23e2) * ci2 ^ 4 + (-0.359e3 / 0.805e3 * eta ^ 2 - 0.429e3 / 0.805e3 * eta - 0.533e3 / 0.805e3) * ci2 ^ 2 + 0.8e1 / 0.115e3 * eta ^ 2 + 0.66e2 / 0.805e3 * eta + 0.64e2 / 0.805e3) * sin((6 * g + 2 * h + 2 * f)) - 0.17e2 / 0.360e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 + 0.13e2 / 0.17e2 * eta ^ 2 - 0.791e3 / 0.153e3 * eta - 0.815e3 / 0.153e3) * ci2 ^ 4 + (-0.47e2 / 0.153e3 * eta ^ 3 - 0.35e2 / 0.153e3 * eta ^ 2 + 0.251e3 / 0.153e3 * eta + 0.259e3 / 0.153e3) * ci2 ^ 2 + 0.2e1 / 0.153e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * sin((6 * g + 2 * h + 8 * f)) + 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * cos((4 * f)) - 0.7e1 / 0.135e3 * ((eta ^ 2 + 0.191e3 / 0.56e2 * eta + 0.113e3 / 0.56e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.91e2 / 0.24e2 * eta - 0.53e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.37e2 / 0.48e2 * eta + 0.125e3 / 0.336e3) * ci2 ^ 2 - eta ^ 2 / 0.84e2 + eta / 0.24e2 + 0.3e1 / 0.56e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sin((-2 * h + 6 * f)) - 0.65e2 / 0.216e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.4231e4 / 0.325e3 * eta ^ 4 + 0.4626e4 / 0.325e3 * eta ^ 3 - 0.10754e5 / 0.975e3 * eta ^ 2 - 0.34277e5 / 0.975e3 * eta - 0.27587e5 / 0.975e3) * ci2 ^ 6 + (-0.223e3 / 0.195e3 * eta ^ 5 - 0.16387e5 / 0.975e3 * eta ^ 4 - 0.19088e5 / 0.975e3 * eta ^ 3 + 0.4668e4 / 0.325e3 * eta ^ 2 + 0.1787e4 / 0.39e2 * eta + 0.11277e5 / 0.325e3) * ci2 ^ 4 + (0.193e3 / 0.650e3 * eta ^ 5 + 0.2389e4 / 0.390e3 * eta ^ 4 + 0.2632e4 / 0.325e3 * eta ^ 3 - 0.1652e4 / 0.325e3 * eta ^ 2 - 0.32299e5 / 0.1950e4 * eta - 0.7171e4 / 0.650e3) * ci2 ^ 2 - 0.19e2 / 0.650e3 * eta ^ 5 - 0.1627e4 / 0.1950e4 * eta ^ 4 - 0.79e2 / 0.65e2 * eta ^ 3 + 0.763e3 / 0.975e3 * eta ^ 2 + 0.4307e4 / 0.1950e4 * eta + 0.2269e4 / 0.1950e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 3 * f + 4 * g)) - 0.347e3 / 0.4320e4 * ((eta ^ 5 + 0.12643e5 / 0.347e3 * eta ^ 4 + 0.22950e5 / 0.347e3 * eta ^ 3 - 0.14226e5 / 0.347e3 * eta ^ 2 - 0.51281e5 / 0.347e3 * eta - 0.30625e5 / 0.347e3) * ci2 ^ 6 + (-0.363e3 / 0.347e3 * eta ^ 5 - 0.14931e5 / 0.347e3 * eta ^ 4 - 0.26782e5 / 0.347e3 * eta ^ 3 + 0.16410e5 / 0.347e3 * eta ^ 2 + 0.59001e5 / 0.347e3 * eta + 0.34601e5 / 0.347e3) * ci2 ^ 4 + (0.101e3 / 0.694e3 * eta ^ 5 + 0.25351e5 / 0.2082e4 * eta ^ 4 + 0.22715e5 / 0.1041e4 * eta ^ 3 - 0.12257e5 / 0.1041e4 * eta ^ 2 - 0.93077e5 / 0.2082e4 * eta - 0.52405e5 / 0.2082e4) * ci2 ^ 2 + 0.23e2 / 0.1041e4 * (eta ^ 4 - 0.870e3 / 0.23e2 * eta ^ 3 - 0.872e3 / 0.23e2 * eta ^ 2 + 0.1214e4 / 0.23e2 * eta + 0.1385e4 / 0.23e2) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f + 4 * g)) - 0.967e3 / 0.12960e5 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.6411e4 / 0.967e3 * eta ^ 4 - 0.15834e5 / 0.967e3 * eta ^ 3 + 0.16698e5 / 0.967e3 * eta ^ 2 + 0.44707e5 / 0.967e3 * eta + 0.19329e5 / 0.967e3) * ci2 ^ 6 + (-0.1271e4 / 0.967e3 * eta ^ 5 + 0.6491e4 / 0.967e3 * eta ^ 4 + 0.16482e5 / 0.967e3 * eta ^ 3 - 0.18658e5 / 0.967e3 * eta ^ 2 - 0.48219e5 / 0.967e3 * eta - 0.20617e5 / 0.967e3) * ci2 ^ 4 + (0.1093e4 / 0.1934e4 * eta ^ 5 - 0.937e3 / 0.1934e4 * eta ^ 4 - 0.1875e4 / 0.967e3 * eta ^ 3 + 0.4635e4 / 0.967e3 * eta ^ 2 + 0.51539e5 / 0.5802e4 * eta + 0.6115e4 / 0.1934e4) * ci2 ^ 2 - 0.66e2 / 0.967e3 * (0.1e1 + eta) * (eta ^ 4 + 0.112e3 / 0.33e2 * eta ^ 3 + 0.62e2 / 0.11e2 * eta ^ 2 - 0.100e3 / 0.33e2 * eta - 0.287e3 / 0.33e2)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 3 * f)) + (0.1e1 + eta) * ((eta ^ 4 - 0.70e2 / 0.9e1 * eta ^ 2 + 0.23e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 4 + 0.2e1 / 0.9e1 * eta ^ 3 + 0.8e1 * eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.79e2 / 0.9e1) * ci2 ^ 2 + eta ^ 4 / 0.6e1 - 0.4e1 / 0.27e2 * eta ^ 3 - 0.13e2 / 0.9e1 * eta ^ 2 + 0.20e2 / 0.27e2 * eta + 0.109e3 / 0.54e2) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * cos(f) - 0.295e3 / 0.864e3 * ((eta ^ 5 - 0.9591e4 / 0.1475e4 * eta ^ 4 - 0.38322e5 / 0.1475e4 * eta ^ 3 - 0.33294e5 / 0.1475e4 * eta ^ 2 + 0.179e3 / 0.295e3 * eta + 0.6837e4 / 0.1475e4) * ci2 ^ 6 + (-0.1971e4 / 0.1475e4 * eta ^ 5 + 0.11271e5 / 0.1475e4 * eta ^ 4 + 0.44394e5 / 0.1475e4 * eta ^ 3 + 0.35446e5 / 0.1475e4 * eta ^ 2 - 0.5863e4 / 0.1475e4 * eta - 0.10061e5 / 0.1475e4) * ci2 ^ 4 + (0.1529e4 / 0.2950e4 * eta ^ 5 - 0.19559e5 / 0.8850e4 * eta ^ 4 - 0.38101e5 / 0.4425e4 * eta ^ 3 - 0.955e3 / 0.177e3 * eta ^ 2 + 0.31343e5 / 0.8850e4 * eta + 0.26941e5 / 0.8850e4) * ci2 ^ 2 - 0.406e3 / 0.4425e4 * (0.1e1 + eta) * (eta ^ 4 - 0.204e3 / 0.203e3 * eta ^ 3 - 0.498e3 / 0.203e3 * eta ^ 2 + 0.984e3 / 0.203e3 * eta + 0.1123e4 / 0.203e3)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + f)) + 0.163e3 / 0.405e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 4 + 0.2957e4 / 0.1304e4 * eta ^ 3 - 0.6291e4 / 0.1304e4 * eta ^ 2 - 0.17737e5 / 0.1304e4 * eta - 0.10849e5 / 0.1304e4) * ci2 ^ 6 + (-0.193e3 / 0.163e3 * eta ^ 4 - 0.3357e4 / 0.1304e4 * eta ^ 3 + 0.7203e4 / 0.1304e4 * eta ^ 2 + 0.19897e5 / 0.1304e4 * eta + 0.11937e5 / 0.1304e4) * ci2 ^ 4 + (0.55e2 / 0.163e3 * eta ^ 4 + 0.1787e4 / 0.2608e4 * eta ^ 3 - 0.3573e4 / 0.2608e4 * eta ^ 2 - 0.9647e4 / 0.2608e4 * eta - 0.5519e4 / 0.2608e4) * ci2 ^ 2 - 0.41e2 / 0.1956e4 * (eta ^ 3 + 0.105e3 / 0.82e2 * eta ^ 2 - 0.116e3 / 0.41e2 * eta - 0.267e3 / 0.82e2) * (0.1e1 + eta)) * sin((2 * h + 6 * f + 4 * g)) + 0.58e2 / 0.405e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 - 0.13e2 / 0.58e2 * eta ^ 2 - 0.2177e4 / 0.116e3 * eta - 0.2797e4 / 0.116e3) * ci2 ^ 6 + (-0.36e2 / 0.29e2 * eta ^ 3 + 0.9e1 / 0.58e2 * eta ^ 2 + 0.2477e4 / 0.116e3 * eta + 0.3077e4 / 0.116e3) * ci2 ^ 4 + (0.12e2 / 0.29e2 * eta ^ 3 + 0.9e1 / 0.58e2 * eta ^ 2 - 0.1217e4 / 0.232e3 * eta - 0.1411e4 / 0.232e3) * ci2 ^ 2 - 0.4e1 / 0.87e2 * eta ^ 3 - eta ^ 2 / 0.12e2 + 0.47e2 / 0.348e3 * eta + 0.5e1 / 0.29e2) * sin((6 * f + 2 * g)) - 0.61e2 / 0.360e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.787e3 / 0.61e2 * eta ^ 4 + 0.1278e4 / 0.61e2 * eta ^ 3 - 0.4030e4 / 0.183e3 * eta ^ 2 - 0.6481e4 / 0.183e3 * eta - 0.57e2 / 0.61e2) * ci2 ^ 6 + (-0.81e2 / 0.61e2 * eta ^ 5 - 0.1017e4 / 0.61e2 * eta ^ 4 - 0.4544e4 / 0.183e3 * eta ^ 3 + 0.5164e4 / 0.183e3 * eta ^ 2 + 0.2537e4 / 0.61e2 * eta - 0.25e2 / 0.183e3) * ci2 ^ 4 + (0.227e3 / 0.366e3 * eta ^ 5 + 0.6463e4 / 0.1098e4 * eta ^ 4 + 0.3790e4 / 0.549e3 * eta ^ 3 - 0.5582e4 / 0.549e3 * eta ^ 2 - 0.4367e4 / 0.366e3 * eta + 0.1109e4 / 0.1098e4) * ci2 ^ 2 - 0.11e2 / 0.122e3 * eta ^ 5 - 0.521e3 / 0.1098e4 * eta ^ 4 - 0.17e2 / 0.61e2 * eta ^ 3 + 0.161e3 / 0.183e3 * eta ^ 2 + 0.653e3 / 0.1098e4 * eta - 0.29e2 / 0.122e3) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + f)) + 0.7e1 / 0.135e3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * sin((4 * g + 2 * h + 8 * f)) - 0.4e1 / 0.45e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta - 0.1e1) * (eta ^ 2 + 0.11e2 / 0.4e1 * eta + 0.41e2 / 0.24e2) * ci2 ^ 6 + (-eta ^ 3 - 0.7e1 / 0.4e1 * eta ^ 2 + 0.7e1 / 0.8e1 * eta + 0.37e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.7e1 / 0.12e2 * eta ^ 2 - 0.35e2 / 0.144e3 * eta - 0.23e2 / 0.48e2) * ci2 ^ 2 - (eta + 0.5e1 / 0.3e1) * (0.1e1 + eta) * (eta - 0.1e1) / 0.24e2) * sin((-2 * g + 2 * f)) - 0.742e3 / 0.405e3 * (0.1e1 + eta) * ((eta ^ 4 + 0.18369e5 / 0.5936e4 * eta ^ 3 + 0.17687e5 / 0.5936e4 * eta ^ 2 + 0.4323e4 / 0.5936e4 * eta - 0.835e3 / 0.5936e4) * ci2 ^ 6 + (-0.993e3 / 0.742e3 * eta ^ 4 - 0.24233e5 / 0.5936e4 * eta ^ 3 - 0.3253e4 / 0.848e3 * eta ^ 2 - 0.4859e4 / 0.5936e4 * eta + 0.1527e4 / 0.5936e4) * ci2 ^ 4 + (0.393e3 / 0.742e3 * eta ^ 4 + 0.18931e5 / 0.11872e5 * eta ^ 3 + 0.17197e5 / 0.11872e5 * eta ^ 2 + 0.2777e4 / 0.11872e5 * eta - 0.1745e4 / 0.11872e5) * ci2 ^ 2 - 0.1231e4 / 0.17808e5 * eta ^ 4 - 0.89e2 / 0.424e3 * eta ^ 3 - 0.68e2 / 0.371e3 * eta ^ 2 - 0.29e2 / 0.2226e4 * eta + 0.25e2 / 0.848e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((4 * g + 2 * h)) + 0.17e2 / 0.1620e4 * ((eta ^ 5 - 0.16e2 / 0.17e2 * eta ^ 4 + 0.177e3 / 0.17e2 * eta ^ 3 - 0.79e2 / 0.17e2 * eta ^ 2 - 0.394e3 / 0.17e2 * eta + 0.267e3 / 0.17e2) * ci2 ^ 2 - 0.7e1 / 0.17e2 * eta ^ 5 + 0.8e1 / 0.17e2 * eta ^ 4 - 0.93e2 / 0.17e2 * eta ^ 3 + 0.29e2 / 0.17e2 * eta ^ 2 + 0.184e3 / 0.17e2 * eta - 0.133e3 / 0.17e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-2 * h + 2 * g + 2 * f)) + 0.8e1 / 0.3e1 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * ((eta ^ 2 - 0.5e1 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 + eta / 0.6e1 + 0.11e2 / 0.6e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - eta / 0.9e1 - 0.7e1 / 0.18e2) * cos((2 * f)) - 0.34e2 / 0.135e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.925e3 / 0.272e3 * eta ^ 3 - 0.365e3 / 0.272e3 * eta ^ 2 - 0.2409e4 / 0.272e3 * eta - 0.1311e4 / 0.272e3) * ci2 ^ 6 + (-0.61e2 / 0.51e2 * eta ^ 4 - 0.1077e4 / 0.272e3 * eta ^ 3 + 0.377e3 / 0.272e3 * eta ^ 2 + 0.7955e4 / 0.816e3 * eta + 0.1443e4 / 0.272e3) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.551e3 / 0.544e3 * eta ^ 3 - 0.349e3 / 0.1632e4 * eta ^ 2 - 0.3121e4 / 0.1632e4 * eta - 0.1583e4 / 0.1632e4) * ci2 ^ 2 - 0.3e1 / 0.272e3 * (eta ^ 3 + eta ^ 2 / 0.9e1 + 0.5e1 / 0.3e1 * eta + 0.9e1) * (0.1e1 + eta)) * (eta - 0.1e1) ^ 2 * sin((-2 * h + 4 * f)) - 0.23e2 / 0.486e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 4 - 0.167e3 / 0.115e3 * eta ^ 3 - 0.512e3 / 0.23e2 * eta ^ 2 + 0.731e3 / 0.115e3 * eta + 0.4443e4 / 0.115e3) * ci2 ^ 4 + (-0.7e1 / 0.23e2 * eta ^ 4 + 0.61e2 / 0.115e3 * eta ^ 3 + 0.777e3 / 0.115e3 * eta ^ 2 - 0.54e2 / 0.23e2 * eta - 0.1407e4 / 0.115e3) * ci2 ^ 2 + 0.6e1 / 0.115e3 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.2e1 * eta ^ 2 - 0.53e2 / 0.6e1 * eta + 0.9e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sin((6 * f + 4 * g)) + 0.14e2 / 0.135e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 4 + 0.179e3 / 0.84e2 * eta ^ 3 + 0.25e2 / 0.14e2 * eta ^ 2 - 0.205e3 / 0.28e2 * eta - 0.146e3 / 0.21e2) * ci2 ^ 4 + (-0.17e2 / 0.42e2 * eta ^ 4 - 0.73e2 / 0.84e2 * eta ^ 3 - 0.127e3 / 0.84e2 * eta ^ 2 + 0.40e2 / 0.21e2 * eta + 0.50e2 / 0.21e2) * ci2 ^ 2 + (0.1e1 + eta) * (eta ^ 3 + 0.5e1 / 0.2e1 * eta ^ 2 + eta / 0.2e1 - 0.16e2) / 0.42e2) * sin((2 * f + 4 * g)) - (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 - 0.49e2 * eta + 0.31e2) * ci2 ^ 4 + (-0.7e1 * eta ^ 2 + 0.15e2 * eta - 0.14e2) * ci2 ^ 2 - 0.3e1 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * sin((4 * g)) / 0.1620e4 + 0.233e3 / 0.405e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.5909e4 / 0.1864e4 * eta ^ 4 - 0.135e3 / 0.233e3 * eta ^ 3 - 0.4073e4 / 0.932e3 * eta ^ 2 - 0.268e3 / 0.233e3 * eta + 0.829e3 / 0.1864e4) * ci2 ^ 6 + (-0.286e3 / 0.233e3 * eta ^ 5 - 0.6781e4 / 0.1864e4 * eta ^ 4 + 0.107e3 / 0.233e3 * eta ^ 3 + 0.3965e4 / 0.932e3 * eta ^ 2 + 0.193e3 / 0.233e3 * eta - 0.989e3 / 0.1864e4) * ci2 ^ 4 + (0.80e2 / 0.233e3 * eta ^ 5 + 0.3135e4 / 0.3728e4 * eta ^ 4 - 0.133e3 / 0.1398e4 * eta ^ 3 - 0.2849e4 / 0.5592e4 * eta ^ 2 + 0.485e3 / 0.1398e4 * eta + 0.967e3 / 0.3728e4) * ci2 ^ 2 + 0.31e2 / 0.5592e4 * (0.1e1 + eta) * (eta ^ 4 + 0.172e3 / 0.31e2 * eta ^ 3 - 0.562e3 / 0.31e2 * eta ^ 2 - 0.1288e4 / 0.31e2 * eta - 0.393e3 / 0.31e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((2 * g)) + 0.19e2 / 0.27e2 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.8e1 / 0.19e2 * eta ^ 2 - 0.51e2 / 0.19e2 * eta - 0.44e2 / 0.19e2) * ci2 ^ 4 + (-0.20e2 / 0.19e2 * eta ^ 3 - 0.9e1 / 0.19e2 * eta ^ 2 + 0.52e2 / 0.19e2 * eta + 0.45e2 / 0.19e2) * ci2 ^ 2 + 0.23e2 / 0.114e3 * eta ^ 3 + 0.2e1 / 0.19e2 * eta ^ 2 - 0.55e2 / 0.114e3 * eta - 0.8e1 / 0.19e2) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 2 * g)) + ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f)) / 0.540e3 - 0.5e1 / 0.54e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 7 * f)) - 0.5e1 / 0.54e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + 7 * f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f - 2 * g)) / 0.540e3 - 0.379e3 / 0.1620e4 * (ci2 ^ 4 - 0.609e3 / 0.1516e4 * ci2 ^ 2 + 0.21e2 / 0.379e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + f)) + 0.169e3 / 0.1620e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.6e1 / 0.169e3 * eta ^ 2 - 0.283e3 / 0.169e3 * eta + 0.192e3 / 0.169e3) * ci2 ^ 2 - 0.73e2 / 0.169e3 * eta ^ 3 + eta ^ 2 / 0.338e3 + 0.109e3 / 0.169e3 * eta - 0.181e3 / 0.338e3) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + f + 2 * g)) + 0.11e2 / 0.432e3 * (0.1e1 + eta) * ((eta ^ 3 + 0.39e2 / 0.55e2 * eta ^ 2 - 0.63e2 / 0.55e2 * eta - 0.39e2 / 0.55e2) * ci2 ^ 6 + (-0.47e2 / 0.55e2 * eta ^ 3 + 0.27e2 / 0.55e2 * eta ^ 2 + 0.179e3 / 0.55e2 * eta + 0.97e2 / 0.55e2) * ci2 ^ 4 + (0.23e2 / 0.110e3 * eta ^ 3 - 0.19e2 / 0.22e2 * eta ^ 2 - 0.157e3 / 0.66e2 * eta - 0.141e3 / 0.110e3) * ci2 ^ 2 - 0.19e2 / 0.330e3 * (eta ^ 2 - 0.4e1 * eta - 0.99e2 / 0.19e2) * (0.1e1 + eta)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-4 * g - 2 * h + f)) - 0.5e1 / 0.864e3 * ((eta ^ 2 + 0.2356e4 / 0.25e2 * eta + 0.4167e4 / 0.25e2) * ci2 ^ 6 + (-eta ^ 2 - 0.2672e4 / 0.25e2 * eta - 0.4483e4 / 0.25e2) * ci2 ^ 4 + (-eta ^ 2 / 0.10e2 + 0.1948e4 / 0.75e2 * eta + 0.5747e4 / 0.150e3) * ci2 ^ 2 + 0.2e1 / 0.15e2 * eta ^ 2 - 0.12e2 / 0.25e2 * eta - 0.46e2 / 0.75e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g + 7 * f)) + 0.8e1 / 0.3e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 6 + (-0.421e3 / 0.360e3 * eta ^ 2 - 0.26e2 / 0.45e2 * eta + 0.349e3 / 0.360e3) * ci2 ^ 4 + (0.241e3 / 0.720e3 * eta ^ 2 + 0.59e2 / 0.360e3 * eta - 0.199e3 / 0.720e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - eta / 0.120e3 + 0.1e1 / 0.72e2) * cos((-2 * h + 2 * f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f)) / 0.18e2 + 0.10e2 / 0.27e2 * ((0.1e1 + eta) * (eta + 0.23e2 / 0.5e1) * ci2 ^ 6 + (-0.12e2 / 0.25e2 * eta ^ 2 - 0.31e2 / 0.5e1 * eta - 0.141e3 / 0.25e2) * ci2 ^ 4 + (0.9e1 / 0.50e2 * eta ^ 2 + 0.52e2 / 0.25e2 * eta + 0.93e2 / 0.50e2) * ci2 ^ 2 - 0.3e1 / 0.25e2 * eta ^ 2 - 0.3e1 / 0.10e2 * eta - 0.9e1 / 0.50e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((2 * g)) - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((10 * f + 4 * g)) / 0.270e3 + 0.2e1 / 0.9e1 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 4 + 0.11e2 / 0.2e1 * eta ^ 3 + 0.403e3 / 0.18e2 * eta ^ 2 - 0.335e3 / 0.18e2 * eta - 0.275e3 / 0.6e1) * ci2 ^ 6 + (-0.157e3 / 0.180e3 * eta ^ 4 - 0.286e3 / 0.45e2 * eta ^ 3 - 0.487e3 / 0.18e2 * eta ^ 2 + 0.190e3 / 0.9e1 * eta + 0.1059e4 / 0.20e2) * ci2 ^ 4 + (-0.23e2 / 0.360e3 * eta ^ 4 + 0.151e3 / 0.90e2 * eta ^ 3 + 0.305e3 / 0.36e2 * eta ^ 2 - 0.487e3 / 0.90e2 * eta - 0.579e3 / 0.40e2) * ci2 ^ 2 + 0.11e2 / 0.90e2 * eta ^ 4 - eta ^ 3 / 0.36e2 - 0.29e2 / 0.36e2 * eta ^ 2 + 0.17e2 / 0.180e3 * eta + 0.3e1 / 0.4e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f + 2 * g)) - 0.31e2 / 0.3240e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 + 0.11e2 / 0.31e2 * eta ^ 2 + 0.71e2 / 0.31e2 * eta + 0.151e3 / 0.31e2) * ci2 ^ 2 - 0.17e2 / 0.31e2 * eta ^ 3 - 0.5e1 / 0.31e2 * eta ^ 2 - 0.19e2 / 0.31e2 * eta - 0.67e2 / 0.31e2) * (eta - 0.1e1) * sin((2 * g - 2 * h)) - 0.17e2 / 0.810e3 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * sin((6 * f)) - 0.17e2 / 0.162e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.122e3 / 0.85e2 * eta ^ 2 - 0.802e3 / 0.85e2 * eta - 0.1307e4 / 0.85e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta ^ 3 - 0.244e3 / 0.85e2 * eta ^ 2 + 0.1849e4 / 0.85e2 * eta + 0.2834e4 / 0.85e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta ^ 3 + 0.33e2 / 0.17e2 * eta ^ 2 - 0.1574e4 / 0.85e2 * eta - 0.2198e4 / 0.85e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta ^ 3 - 0.42e2 / 0.85e2 * eta ^ 2 + 0.577e3 / 0.85e2 * eta + 0.143e3 / 0.17e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta ^ 3 + 0.3e1 / 0.85e2 * eta ^ 2 - 0.73e2 / 0.85e2 * eta - 0.163e3 / 0.170e3) * (eta - 0.1e1) ^ 2 * sin((4 * f)) + 0.433e3 / 0.432e3 * ((0.22573e5 / 0.6495e4 + eta ^ 6 + 0.6188e4 / 0.6495e4 * eta ^ 5 + 0.1604e4 / 0.433e3 * eta - 0.21361e5 / 0.6495e4 * eta ^ 4 - 0.43784e5 / 0.6495e4 * eta ^ 3 - 0.7273e4 / 0.2165e4 * eta ^ 2) * ci2 ^ 8 + (-0.52946e5 / 0.6495e4 - 0.4874e4 / 0.2165e4 * eta ^ 6 - 0.4352e4 / 0.2165e4 * eta ^ 5 + 0.33184e5 / 0.2165e4 * eta ^ 3 + 0.46918e5 / 0.6495e4 * eta ^ 2 - 0.11744e5 / 0.1299e4 * eta + 0.16526e5 / 0.2165e4 * eta ^ 4) * ci2 ^ 6 + (0.15188e5 / 0.2165e4 - 0.16240e5 / 0.1299e4 * eta ^ 3 + 0.17624e5 / 0.2165e4 * eta - 0.39916e5 / 0.6495e4 * eta ^ 4 + 0.3256e4 / 0.2165e4 * eta ^ 5 + 0.2276e4 / 0.1299e4 * eta ^ 6 - 0.36356e5 / 0.6495e4 * eta ^ 2) * ci2 ^ 4 + (0.9288e4 / 0.2165e4 * eta ^ 3 - 0.4100e4 / 0.1299e4 * eta + 0.877e3 / 0.433e3 * eta ^ 4 - 0.16807e5 / 0.6495e4 - 0.972e3 / 0.2165e4 * eta ^ 5 - 0.235e3 / 0.433e3 * eta ^ 6 + 0.3939e4 / 0.2165e4 * eta ^ 2) * ci2 ^ 2 - 0.3392e4 / 0.6495e4 * eta ^ 3 - 0.1721e4 / 0.8660e4 * eta ^ 2 - 0.6541e4 / 0.25980e5 * eta ^ 4 + 0.2788e4 / 0.6495e4 * eta + 0.1447e4 / 0.25980e5 * eta ^ 6 + 0.8657e4 / 0.25980e5 + 0.44e2 / 0.1299e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * sin(f) + 0.1264e4 / 0.405e3 * (eta - 0.1e1) * ((0.2451e4 / 0.2528e4 + eta ^ 6 + 0.1085e4 / 0.316e3 * eta ^ 5 + (-0.150e3 / 0.79e2 * Delta ^ 2 + 0.14767e5 / 0.7584e4) * eta ^ 4 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.5801e4 / 0.1264e4) * eta ^ 3 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.432e3 / 0.79e2) * eta ^ 2 + (-0.150e3 / 0.79e2 * Delta ^ 2 - 0.1429e4 / 0.3792e4) * eta) * ci2 ^ 8 + (-0.5385e4 / 0.2528e4 - 0.2931e4 / 0.1264e4 * eta ^ 6 - 0.19821e5 / 0.2528e4 * eta ^ 5 + (0.360e3 / 0.79e2 * Delta ^ 2 - 0.10279e5 / 0.2528e4) * eta ^ 4 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.7089e4 / 0.632e3) * eta ^ 3 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.16503e5 / 0.1264e4) * eta ^ 2 + (0.360e3 / 0.79e2 * Delta ^ 2 + 0.2849e4 / 0.2528e4) * eta) * ci2 ^ 6 + (0.2065e4 / 0.1264e4 + 0.4653e4 / 0.2528e4 * eta ^ 6 + 0.7745e4 / 0.1264e4 * eta ^ 5 + (-0.306e3 / 0.79e2 * Delta ^ 2 + 0.1369e4 / 0.474e3) * eta ^ 4 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.1467e4 / 0.158e3) * eta ^ 3 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.26615e5 / 0.2528e4) * eta ^ 2 + (-0.306e3 / 0.79e2 * Delta ^ 2 - 0.3727e4 / 0.3792e4) * eta) * ci2 ^ 4 + (-0.40e2 / 0.79e2 - 0.737e3 / 0.1264e4 * eta ^ 6 - 0.4821e4 / 0.2528e4 * eta ^ 5 + (0.108e3 / 0.79e2 * Delta ^ 2 - 0.1023e4 / 0.1264e4) * eta ^ 4 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.1913e4 / 0.632e3) * eta ^ 3 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.263e3 / 0.79e2) * eta ^ 2 + (0.108e3 / 0.79e2 * Delta ^ 2 + 0.769e3 / 0.2528e4) * eta) * ci2 ^ 2 + 0.537e3 / 0.10112e5 + 0.171e3 / 0.2528e4 * eta ^ 6 + 0.2191e4 / 0.10112e5 * eta ^ 5 + (-0.27e2 / 0.158e3 * Delta ^ 2 + 0.2671e4 / 0.30336e5) * eta ^ 4 + (-0.1721e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 3 + (-0.1869e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 2 + (-0.27e2 / 0.158e3 * Delta ^ 2 - 0.1111e4 / 0.30336e5) * eta) * sin((2 * g + 2 * h)) - 0.77e2 / 0.162e3 * (0.1e1 + eta) * ((0.10e2 + eta ^ 6 - 0.458e3 / 0.385e3 * eta ^ 5 + 0.7698e4 / 0.385e3 * eta - 0.4364e4 / 0.385e3 * eta ^ 4 - 0.4808e4 / 0.385e3 * eta ^ 3 + 0.2993e4 / 0.385e3 * eta ^ 2) * ci2 ^ 8 + (-0.112e3 / 0.5e1 - 0.207e3 / 0.77e2 * eta ^ 6 + 0.91e2 / 0.55e2 * eta ^ 5 + 0.11554e5 / 0.385e3 * eta ^ 3 - 0.929e3 / 0.55e2 * eta ^ 2 - 0.17447e5 / 0.385e3 * eta + 0.10042e5 / 0.385e3 * eta ^ 4) * ci2 ^ 6 + (0.6959e4 / 0.385e3 - 0.1482e4 / 0.55e2 * eta ^ 3 + 0.2058e4 / 0.55e2 * eta - 0.243e3 / 0.11e2 * eta ^ 4 - 0.36e2 / 0.385e3 * eta ^ 5 + 0.1047e4 / 0.385e3 * eta ^ 6 + 0.461e3 / 0.35e2 * eta ^ 2) * ci2 ^ 4 + (0.4034e4 / 0.385e3 * eta ^ 3 - 0.461e3 / 0.35e2 * eta + 0.443e3 / 0.55e2 * eta ^ 4 - 0.2367e4 / 0.385e3 - 0.207e3 / 0.385e3 * eta ^ 5 - 0.456e3 / 0.385e3 * eta ^ 6 - 0.238e3 / 0.55e2 * eta ^ 2) * ci2 ^ 2 - 0.1077e4 / 0.770e3 * eta ^ 3 + 0.193e3 / 0.385e3 * eta ^ 2 - 0.1579e4 / 0.1540e4 * eta ^ 4 + 0.2487e4 / 0.1540e4 * eta + 0.1121e4 / 0.1540e4 + 0.27e2 / 0.154e3 * eta ^ 6 + 0.29e2 / 0.220e3 * eta ^ 5) * sin((2 * h + 2 * g + 2 * f)) + ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((-4 * g - 2 * h + 3 * f)) / 0.864e3 + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 5 * f + 2 * g)) / 0.18e2 - 0.86e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.56e2 / 0.43e2 * eta + 0.95e2 / 0.129e3) * ci2 ^ 6 + (-0.1579e4 / 0.1290e4 * eta ^ 2 - 0.1028e4 / 0.645e3 * eta - 0.75e2 / 0.86e2) * ci2 ^ 4 + (0.205e3 / 0.516e3 * eta ^ 2 + 0.667e3 / 0.1290e4 * eta + 0.133e3 / 0.516e3) * ci2 ^ 2 - 0.5e1 / 0.129e3 * eta ^ 2 - 0.13e2 / 0.258e3 * eta - 0.5e1 / 0.258e3) * cos((2 * h + 2 * f + 4 * g)) - 0.73e2 / 0.27e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 4 + 0.91e2 / 0.73e2 * eta ^ 3 - 0.781e3 / 0.219e3 * eta ^ 2 - 0.1357e4 / 0.219e3 * eta - 0.230e3 / 0.73e2) * ci2 ^ 6 + (-0.907e3 / 0.730e3 * eta ^ 4 - 0.1129e4 / 0.730e3 * eta ^ 3 + 0.2997e4 / 0.730e3 * eta ^ 2 + 0.5253e4 / 0.730e3 * eta + 0.265e3 / 0.73e2) * ci2 ^ 4 + (0.153e3 / 0.365e3 * eta ^ 4 + 0.759e3 / 0.1460e4 * eta ^ 3 - 0.971e3 / 0.876e3 * eta ^ 2 - 0.8761e4 / 0.4380e4 * eta - 0.287e3 / 0.292e3) * ci2 ^ 2 - 0.13e2 / 0.292e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 4 * g)) - 0.7e1 / 0.54e2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * cos((-2 * g - 2 * h + 3 * f)) + 0.19e2 / 0.9e1 * ((eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (0.1e1 + eta) * ci2 ^ 6 + (-0.137e3 / 0.114e3 * eta ^ 4 - 0.577e3 / 0.570e3 * eta ^ 3 + 0.889e3 / 0.570e3 * eta ^ 2 + 0.253e3 / 0.570e3 * eta - 0.52e2 / 0.57e2) * ci2 ^ 4 + (0.20e2 / 0.57e2 * eta ^ 4 + 0.337e3 / 0.1140e4 * eta ^ 3 - 0.499e3 / 0.1140e4 * eta ^ 2 - 0.7e1 / 0.60e2 * eta + 0.59e2 / 0.228e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) / 0.60e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + f)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.23e2 / 0.15e2 * eta ^ 3 - 0.37e2 / 0.30e2 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.37e2 / 0.30e2) * ci2 ^ 4 + (0.31e2 / 0.60e2 * eta ^ 3 + 0.11e2 / 0.30e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.11e2 / 0.30e2) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + f)) / 0.9e1 - (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 2 - 0.110e3 / 0.3e1 * eta - 0.101e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 2 + 0.36e2 * eta + 0.33e2) * ci2 ^ 4 + (eta ^ 2 / 0.18e2 - 0.112e3 / 0.9e1 * eta - 0.71e2 / 0.6e1) * ci2 ^ 2 + (eta + 0.29e2) * (0.1e1 + eta) / 0.18e2) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 3 * f)) / 0.720e3 + 0.4e1 / 0.405e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + eta ^ 3 / 0.16e2 + eta ^ 2 / 0.2e1 - 0.13e2 / 0.16e2 * eta - 0.15e2 / 0.2e1) * ci2 ^ 2 - eta ^ 4 / 0.2e1 + eta ^ 3 / 0.16e2 - eta ^ 2 / 0.16e2 - 0.13e2 / 0.16e2 * eta + 0.49e2 / 0.16e2) * (eta - 0.1e1) * sin((-2 * h + 2 * g + 4 * f)) + 0.71e2 / 0.45e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.1853e4 / 0.1278e4 * eta + 0.265e3 / 0.213e3) * ci2 ^ 4 + (-0.973e3 / 0.2556e4 * eta ^ 2 - 0.929e3 / 0.1704e4 * eta - 0.2209e4 / 0.5112e4) * ci2 ^ 2 + 0.41e2 / 0.852e3 * eta ^ 2 + 0.29e2 / 0.426e3 * eta + 0.37e2 / 0.852e3) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((6 * g + 2 * h + 3 * f)) + 0.13e2 / 0.432e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.1113e4 / 0.65e2 * eta ^ 2 - 0.3169e4 / 0.65e2 * eta - 0.2071e4 / 0.65e2) * ci2 ^ 6 + (-eta ^ 3 + 0.1271e4 / 0.65e2 * eta ^ 2 + 0.697e3 / 0.13e2 * eta + 0.2229e4 / 0.65e2) * ci2 ^ 4 + (0.5e1 / 0.26e2 * eta ^ 3 - 0.631e3 / 0.130e3 * eta ^ 2 - 0.4759e4 / 0.390e3 * eta - 0.957e3 / 0.130e3) * ci2 ^ 2 - (0.1e1 + eta) ^ 2 * (eta - 0.51e2 / 0.5e1) / 0.78e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + 7 * f)) + 0.13e2 / 0.4860e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + eta / 0.13e2 + 0.51e2 / 0.13e2) * ci2 ^ 2 - 0.11e2 / 0.13e2 * eta ^ 2 + eta / 0.13e2 + 0.21e2 / 0.13e2) * sin((2 * g - 2 * h + 6 * f)) - 0.589e3 / 0.4320e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.2308e4 / 0.589e3 * eta ^ 3 - 0.5354e4 / 0.589e3 * eta ^ 2 - 0.1724e4 / 0.589e3 * eta + 0.717e3 / 0.589e3) * ci2 ^ 6 + (-0.621e3 / 0.589e3 * eta ^ 4 + 0.2288e4 / 0.589e3 * eta ^ 3 + 0.5286e4 / 0.589e3 * eta ^ 2 + 0.1840e4 / 0.589e3 * eta - 0.521e3 / 0.589e3) * ci2 ^ 4 + (0.231e3 / 0.1178e4 * eta ^ 4 - 0.780e3 / 0.589e3 * eta ^ 3 - 0.1533e4 / 0.589e3 * eta ^ 2 - 0.1388e4 / 0.1767e4 * eta + 0.1033e4 / 0.3534e4) * ci2 ^ 2 + 0.2e1 / 0.589e3 * (0.1e1 + eta) ^ 2 * (eta ^ 2 + 0.116e3 / 0.3e1 * eta - 0.25e2)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g + f)) + ((eta ^ 2 - 0.283e3 / 0.90e2 * eta - 0.187e3 / 0.90e2) * ci2 ^ 4 + (-0.187e3 / 0.360e3 * eta ^ 2 + 0.7e1 / 0.6e1 * eta + 0.247e3 / 0.360e3) * ci2 ^ 2 - 0.7e1 / 0.30e2 * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + f)) / 0.18e2 - 0.58e2 / 0.27e2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 - 0.16e2 / 0.29e2 * eta - 0.97e2 / 0.29e2) * ci2 ^ 6 + (-0.168e3 / 0.145e3 * eta ^ 2 + 0.19e2 / 0.29e2 * eta + 0.549e3 / 0.145e3) * ci2 ^ 4 + (0.93e2 / 0.290e3 * eta ^ 2 - 0.28e2 / 0.145e3 * eta - 0.279e3 / 0.290e3) * ci2 ^ 2 - 0.3e1 / 0.145e3 * eta ^ 2 + 0.3e1 / 0.290e3 * eta + 0.9e1 / 0.290e3) * (eta - 0.1e1) * cos((2 * g + 4 * f)) + 0.28e2 / 0.27e2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.89e2 / 0.70e2 * ci2 ^ 4 + 0.127e3 / 0.280e3 * ci2 ^ 2 - 0.3e1 / 0.56e2) * Delta * (eta - 0.1e1) ^ 2 * cos((4 * g + 2 * h)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 4 + 0.41e2 / 0.20e2 * eta ^ 3 - 0.187e3 / 0.20e2 * eta ^ 2 - 0.33e2 / 0.20e2 * eta + 0.223e3 / 0.20e2) * ci2 ^ 2 - 0.17e2 / 0.40e2 * eta ^ 4 - 0.53e2 / 0.40e2 * eta ^ 3 + 0.189e3 / 0.40e2 * eta ^ 2 + 0.73e2 / 0.40e2 * eta - 0.28e2 / 0.5e1) * sin((-2 * h + 3 * f + 2 * g)) / 0.81e2 + 0.5e1 / 0.3e1 * (0.1e1 + eta) * ((eta ^ 3 + 0.22e2 / 0.45e2 * eta ^ 2 - 0.11e2 / 0.15e2 * eta - 0.142e3 / 0.45e2) * (0.1e1 + eta) * ci2 ^ 6 + (-0.163e3 / 0.150e3 * eta ^ 4 - 0.382e3 / 0.225e3 * eta ^ 3 - eta ^ 2 / 0.5e1 + 0.38e2 / 0.9e1 * eta + 0.569e3 / 0.150e3) * ci2 ^ 4 + (0.179e3 / 0.900e3 * eta ^ 4 + 0.91e2 / 0.225e3 * eta ^ 3 + 0.191e3 / 0.450e3 * eta ^ 2 - 0.73e2 / 0.75e2 * eta - 0.71e2 / 0.60e2) * ci2 ^ 2 + 0.7e1 / 0.225e3 * (0.1e1 + eta) * (eta ^ 3 - 0.9e1 / 0.14e2 * eta ^ 2 - 0.23e2 / 0.7e1 * eta + 0.45e2 / 0.14e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * cos((f + 2 * g)) + 0.23e2 / 0.54e2 * ((eta ^ 2 - 0.95e2 / 0.23e2) * ci2 ^ 4 + (-eta ^ 2 + 0.4e1 / 0.23e2 * eta + 0.99e2 / 0.23e2) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.8e1 / 0.69e2 * eta - 0.37e2 / 0.46e2) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f)) + 0.2e1 / 0.3e1 * (ci2 ^ 6 - 0.53e2 / 0.45e2 * ci2 ^ 4 + 0.61e2 / 0.180e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * cos((-2 * h + 4 * f)) - 0.17e2 / 0.432e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.691e3 / 0.85e2 * eta ^ 2 - 0.2037e4 / 0.85e2 * eta - 0.225e3 / 0.17e2) * ci2 ^ 6 + (-0.93e2 / 0.85e2 * eta ^ 3 + 0.161e3 / 0.17e2 * eta ^ 2 + 0.2281e4 / 0.85e2 * eta + 0.1247e4 / 0.85e2) * ci2 ^ 4 + (0.37e2 / 0.170e3 * eta ^ 3 - 0.421e3 / 0.170e3 * eta ^ 2 - 0.2923e4 / 0.510e3 * eta - 0.471e3 / 0.170e3) * ci2 ^ 2 + 0.7e1 / 0.510e3 * (0.1e1 + eta) * (eta ^ 2 + 0.24e2 / 0.7e1 * eta - 0.131e3 / 0.7e1)) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 5 * f)) + 0.4e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * cos((2 * h + 2 * g + 4 * f)) - 0.8e1 / 0.9e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * cos((-2 * g - 2 * h + 2 * f)) - 0.22e2 / 0.27e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * (eta - 0.1e1) * cos((2 * h + 6 * f + 4 * g)) + 0.40e2 / 0.27e2 * ((eta ^ 3 + 0.3e1 / 0.2e1 * eta ^ 2 - 0.31e2 / 0.10e2) * ci2 ^ 4 + (-eta ^ 3 - 0.13e2 / 0.10e2 * eta ^ 2 + eta / 0.2e1 + 0.18e2 / 0.5e1) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.7e1 / 0.60e2 * eta ^ 2 - eta / 0.3e1 - 0.17e2 / 0.20e2) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) - 0.14e2 / 0.45e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.128e3 / 0.7e1 + eta ^ 6 + 0.30e2 / 0.7e1 * eta ^ 5 - 0.1685e4 / 0.63e2 * eta ^ 3 - 0.526e3 / 0.63e2 * eta ^ 2 + 0.1955e4 / 0.63e2 * eta - 0.59e2 / 0.9e1 * eta ^ 4) * ci2 ^ 6 + (-0.482e3 / 0.21e2 + 0.632e3 / 0.21e2 * eta ^ 3 - 0.2105e4 / 0.63e2 * eta + 0.110e3 / 0.21e2 * eta ^ 4 - 0.331e3 / 0.63e2 * eta ^ 5 - 0.10e2 / 0.9e1 * eta ^ 6 + 0.130e3 / 0.9e1 * eta ^ 2) * ci2 ^ 4 + (-0.131e3 / 0.18e2 * eta ^ 3 + 0.863e3 / 0.126e3 * eta + 0.13e2 / 0.14e2 * eta ^ 4 + 0.473e3 / 0.63e2 + 0.103e3 / 0.63e2 * eta ^ 5 + 0.10e2 / 0.63e2 * eta ^ 6 - 0.1027e4 / 0.126e3 * eta ^ 2) * ci2 ^ 2 + 0.13e2 / 0.252e3 * (0.1e1 + eta) * (eta ^ 5 - 0.42e2 / 0.13e2 * eta ^ 4 - 0.123e3 / 0.13e2 * eta ^ 3 + 0.193e3 / 0.13e2 * eta ^ 2 + 0.202e3 / 0.13e2 * eta - 0.211e3 / 0.13e2)) * sin((2 * g + 2 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * sin((7 * f)) / 0.144e3 - 0.1391e4 / 0.4320e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.7521e4 / 0.1391e4 + eta ^ 6 + 0.360e3 / 0.1391e4 * eta ^ 5 - 0.6608e4 / 0.1391e4 * eta ^ 3 + 0.9949e4 / 0.1391e4 * eta ^ 2 + 0.20776e5 / 0.1391e4 * eta - 0.4397e4 / 0.1391e4 * eta ^ 4) * ci2 ^ 6 + (-0.9961e4 / 0.1391e4 + 0.96e2 / 0.13e2 * eta ^ 3 - 0.25056e5 / 0.1391e4 * eta + 0.5381e4 / 0.1391e4 * eta ^ 4 - 0.1216e4 / 0.1391e4 * eta ^ 5 - 0.1871e4 / 0.1391e4 * eta ^ 6 - 0.9485e4 / 0.1391e4 * eta ^ 2) * ci2 ^ 4 + (-0.16096e5 / 0.4173e4 * eta ^ 3 + 0.8168e4 / 0.1391e4 * eta - 0.339e3 / 0.214e3 * eta ^ 4 + 0.22505e5 / 0.8346e4 + 0.3176e4 / 0.4173e4 * eta ^ 5 + 0.1717e4 / 0.2782e4 * eta ^ 6 + 0.8669e4 / 0.8346e4 * eta ^ 2) * ci2 ^ 2 - 0.132e3 / 0.1391e4 * (eta ^ 5 - 0.19e2 / 0.99e2 * eta ^ 4 - 0.48e2 / 0.11e2 * eta ^ 3 - 0.188e3 / 0.99e2 * eta ^ 2 + 0.55e2 / 0.9e1 * eta + 0.431e3 / 0.99e2) * (0.1e1 + eta)) * sqrt(-eta ^ 2 + 0.1e1) * sin((f + 2 * g)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * g + 2 * h + 7 * f)) / 0.144e3 + 0.139e3 / 0.135e3 * ((0.5201e4 / 0.556e3 + eta ^ 6 + 0.519e3 / 0.556e3 * eta ^ 5 - 0.10607e5 / 0.834e3 * eta ^ 3 + 0.917e3 / 0.834e3 * eta ^ 2 + 0.24745e5 / 0.1668e4 * eta - 0.12385e5 / 0.1668e4 * eta ^ 4) * ci2 ^ 6 + (-0.6083e4 / 0.556e3 + 0.4313e4 / 0.278e3 * eta ^ 3 - 0.9895e4 / 0.556e3 * eta + 0.5001e4 / 0.556e3 * eta ^ 4 - 0.723e3 / 0.556e3 * eta ^ 5 - 0.179e3 / 0.139e3 * eta ^ 6 - 0.369e3 / 0.278e3 * eta ^ 2) * ci2 ^ 4 + (-0.8189e4 / 0.1668e4 * eta ^ 3 + 0.17647e5 / 0.3336e4 * eta - 0.9143e4 / 0.3336e4 * eta ^ 4 + 0.10237e5 / 0.3336e4 + 0.1907e4 / 0.3336e4 * eta ^ 5 + 0.65e2 / 0.139e3 * eta ^ 6 + 0.533e3 / 0.1668e4 * eta ^ 2) * ci2 ^ 2 - 0.49e2 / 0.834e3 * (0.1e1 + eta) * (eta ^ 5 + 0.51e2 / 0.98e2 * eta ^ 4 - 0.34e2 / 0.7e1 * eta ^ 3 - 0.355e3 / 0.98e2 * eta ^ 2 + 0.188e3 / 0.49e2 * eta + 0.199e3 / 0.49e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * h + 4 * f + 4 * g)) - 0.299e3 / 0.405e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.45e2 / 0.52e2 * eta ^ 4 - 0.3645e4 / 0.598e3 * eta ^ 3 - 0.30e2 / 0.23e2 * eta ^ 2 + 0.3487e4 / 0.598e3 * eta - 0.3e1 / 0.1196e4) * ci2 ^ 6 + (-0.383e3 / 0.299e3 * eta ^ 5 - 0.1087e4 / 0.1196e4 * eta ^ 4 + 0.2168e4 / 0.299e3 * eta ^ 3 + 0.769e3 / 0.598e3 * eta ^ 2 - 0.2035e4 / 0.299e3 * eta + 0.269e3 / 0.1196e4) * ci2 ^ 4 + (0.129e3 / 0.299e3 * eta ^ 5 + 0.409e3 / 0.2392e4 * eta ^ 4 - 0.205e3 / 0.92e2 * eta ^ 3 - 0.5e1 / 0.26e2 * eta ^ 2 + 0.563e3 / 0.276e3 * eta - 0.389e3 / 0.2392e4) * ci2 ^ 2 - 0.9e1 / 0.299e3 * eta ^ 5 + 0.5e1 / 0.1196e4 * eta ^ 4 + 0.85e2 / 0.598e3 * eta ^ 3 - 0.21e2 / 0.1196e4 * eta ^ 2 - 0.38e2 / 0.299e3 * eta + 0.11e2 / 0.598e3) * sin((2 * h)) - 0.817e3 / 0.4320e4 * ((0.129677e6 / 0.2451e4 + eta ^ 6 - 0.2040e4 / 0.817e3 * eta ^ 5 - 0.32848e5 / 0.817e3 * eta ^ 3 + 0.91433e5 / 0.2451e4 * eta ^ 2 + 0.87304e5 / 0.817e3 * eta - 0.67657e5 / 0.2451e4 * eta ^ 4) * ci2 ^ 6 + (-0.155941e6 / 0.2451e4 + 0.128800e6 / 0.2451e4 * eta ^ 3 - 0.99392e5 / 0.817e3 * eta + 0.74257e5 / 0.2451e4 * eta ^ 4 + 0.3872e4 / 0.2451e4 * eta ^ 5 - 0.161e3 / 0.129e3 * eta ^ 6 - 0.79417e5 / 0.2451e4 * eta ^ 2) * ci2 ^ 4 + (-0.142544e6 / 0.7353e4 * eta ^ 3 + 0.221552e6 / 0.7353e4 * eta - 0.90881e5 / 0.14706e5 * eta ^ 4 + 0.92167e5 / 0.4902e4 + 0.2464e4 / 0.2451e4 * eta ^ 5 + 0.747e3 / 0.1634e4 * eta ^ 6 - 0.20887e5 / 0.14706e5 * eta ^ 2) * ci2 ^ 2 - 0.44e2 / 0.817e3 * (0.1e1 + eta) * (eta ^ 5 + 0.265e3 / 0.33e2 * eta ^ 4 - 0.104e3 / 0.33e2 * eta ^ 3 - 0.488e3 / 0.11e2 * eta ^ 2 - 0.265e3 / 0.33e2 * eta + 0.991e3 / 0.33e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f + 2 * g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g - 2 * h + 5 * f)) / 0.720e3 - 0.389e3 / 0.1620e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 + 0.184e3 / 0.389e3 * eta ^ 4 - 0.2751e4 / 0.389e3 * eta ^ 3 - 0.2207e4 / 0.389e3 * eta ^ 2 + 0.2458e4 / 0.389e3 * eta + 0.2979e4 / 0.389e3) * ci2 ^ 4 + (-0.119e3 / 0.389e3 * eta ^ 5 - 0.60e2 / 0.389e3 * eta ^ 4 + 0.853e3 / 0.389e3 * eta ^ 3 + 0.687e3 / 0.389e3 * eta ^ 2 - 0.2294e4 / 0.1167e4 * eta - 0.931e3 / 0.389e3) * ci2 ^ 2 + 0.32e2 / 0.1167e4 * (0.1e1 + eta) * (eta - 0.1e1) * (eta ^ 3 + 0.9e1 / 0.16e2 * eta ^ 2 - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1)) * sin((6 * g + 2 * h + 6 * f)) + 0.11e2 / 0.540e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * ((eta ^ 2 + 0.25e2 / 0.11e2 * eta + 0.2e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.20e2 / 0.3e1 * eta - 0.47e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.80e2 / 0.11e2 * eta + 0.26e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.37e2 / 0.11e2 * eta - 0.15e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.23e2 / 0.44e2 * eta + 0.31e2 / 0.132e3) * sin((-2 * g - 2 * h + 4 * f)) + 0.1001e4 / 0.2160e4 * (eta - 0.1e1) * ((-0.7627e4 / 0.3003e4 + eta ^ 5 + 0.5617e4 / 0.1001e4 * eta + 0.9959e4 / 0.1001e4 * eta ^ 4 + 0.78194e5 / 0.3003e4 * eta ^ 3 + 0.25362e5 / 0.1001e4 * eta ^ 2) * ci2 ^ 8 + (0.15014e5 / 0.3003e4 - 0.2402e4 / 0.1001e4 * eta ^ 5 - 0.60052e5 / 0.1001e4 * eta ^ 3 - 0.175876e6 / 0.3003e4 * eta ^ 2 - 0.42430e5 / 0.3003e4 * eta - 0.69506e5 / 0.3003e4 * eta ^ 4) * ci2 ^ 6 + (-0.64e2 / 0.21e2 + 0.141208e6 / 0.3003e4 * eta ^ 3 + 0.12508e5 / 0.1001e4 * eta + 0.4240e4 / 0.231e3 * eta ^ 4 + 0.6004e4 / 0.3003e4 * eta ^ 5 + 0.3568e4 / 0.77e2 * eta ^ 2) * ci2 ^ 4 + (-0.1114e4 / 0.77e2 * eta ^ 3 - 0.13753e5 / 0.3003e4 * eta - 0.17179e5 / 0.3003e4 * eta ^ 4 + 0.535e3 / 0.1001e4 - 0.667e3 / 0.1001e4 * eta ^ 5 - 0.2082e4 / 0.143e3 * eta ^ 2) * ci2 ^ 2 + 0.3057e4 / 0.2002e4 * eta ^ 3 + 0.9605e4 / 0.6006e4 * eta ^ 2 + 0.557e3 / 0.924e3 * eta ^ 4 + 0.661e3 / 0.1092e4 * eta + 0.289e3 / 0.4004e4 * eta ^ 5 + 0.61e2 / 0.12012e5) * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h - 2 * g + f)) + 0.11e2 / 0.45e2 * ((0.325e3 / 0.396e3 + 0.269e3 / 0.396e3 * eta + eta ^ 4 + 0.449e3 / 0.132e3 * eta ^ 3 + 0.967e3 / 0.396e3 * eta ^ 2) * ci2 ^ 8 + (-0.68e2 / 0.99e2 - 0.989e3 / 0.99e2 * eta ^ 3 - 0.229e3 / 0.33e2 * eta ^ 2 - eta / 0.3e1 - 0.101e3 / 0.33e2 * eta ^ 4) * ci2 ^ 6 + (-0.92e2 / 0.99e2 + 0.358e3 / 0.33e2 * eta ^ 3 - 0.136e3 / 0.99e2 * eta + 0.38e2 / 0.11e2 * eta ^ 4 + 0.712e3 / 0.99e2 * eta ^ 2) * ci2 ^ 4 + (-0.219e3 / 0.44e2 * eta ^ 3 + 0.515e3 / 0.396e3 * eta - 0.18e2 / 0.11e2 * eta ^ 4 + 0.409e3 / 0.396e3 - 0.1241e4 / 0.396e3 * eta ^ 2) * ci2 ^ 2 + 0.1213e4 / 0.1584e4 * eta ^ 3 + 0.727e3 / 0.1584e4 * eta ^ 2 + 0.17e2 / 0.66e2 * eta ^ 4 - 0.347e3 / 0.1584e4 - 0.433e3 / 0.1584e4 * eta) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-2 * g - 2 * h + 2 * f)) - 0.271e3 / 0.1620e4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((-0.2608e4 / 0.271e3 - 0.4375e4 / 0.271e3 * eta + eta ^ 4 + 0.631e3 / 0.271e3 * eta ^ 3 - 0.1695e4 / 0.271e3 * eta ^ 2) * ci2 ^ 8 + (0.5621e4 / 0.271e3 - 0.1432e4 / 0.271e3 * eta ^ 3 + 0.3750e4 / 0.271e3 * eta ^ 2 + 0.9580e4 / 0.271e3 * eta - 0.647e3 / 0.271e3 * eta ^ 4) * ci2 ^ 6 + (-0.4318e4 / 0.271e3 + 0.1188e4 / 0.271e3 * eta ^ 3 - 0.7556e4 / 0.271e3 * eta + 0.576e3 / 0.271e3 * eta ^ 4 - 0.3010e4 / 0.271e3 * eta ^ 2) * ci2 ^ 4 + (-0.423e3 / 0.271e3 * eta ^ 3 + 0.2515e4 / 0.271e3 * eta - 0.222e3 / 0.271e3 * eta ^ 4 + 0.1385e4 / 0.271e3 + 0.1025e4 / 0.271e3 * eta ^ 2) * ci2 ^ 2 + 0.213e3 / 0.1084e4 * eta ^ 3 - 0.481e3 / 0.1084e4 * eta ^ 2 + 0.59e2 / 0.542e3 * eta ^ 4 - 0.1165e4 / 0.1084e4 * eta - 0.621e3 / 0.1084e4) * sin((2 * h + 2 * g + 4 * f)) + 0.443e3 / 0.2160e4 * (0.1e1 + eta) * ((-0.7205e4 / 0.443e3 + eta ^ 5 - 0.13677e5 / 0.443e3 * eta + 0.3051e4 / 0.443e3 * eta ^ 4 + 0.13654e5 / 0.1329e4 * eta ^ 3 - 0.16850e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 8 + (0.15866e5 / 0.443e3 - 0.902e3 / 0.443e3 * eta ^ 5 - 0.31796e5 / 0.1329e4 * eta ^ 3 + 0.36748e5 / 0.1329e4 * eta ^ 2 + 0.91174e5 / 0.1329e4 * eta - 0.21146e5 / 0.1329e4 * eta ^ 4) * ci2 ^ 6 + (-0.37688e5 / 0.1329e4 + 0.27520e5 / 0.1329e4 * eta ^ 3 - 0.73372e5 / 0.1329e4 * eta + 0.18128e5 / 0.1329e4 * eta ^ 4 + 0.1852e4 / 0.1329e4 * eta ^ 5 - 0.28792e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 4 + (-0.3438e4 / 0.443e3 * eta ^ 3 + 0.25037e5 / 0.1329e4 * eta - 0.6719e4 / 0.1329e4 * eta ^ 4 + 0.12569e5 / 0.1329e4 - 0.161e3 / 0.443e3 * eta ^ 5 + 0.9478e4 / 0.1329e4 * eta ^ 2) * ci2 ^ 2 + 0.8011e4 / 0.7974e4 * eta ^ 3 - 0.6461e4 / 0.7974e4 * eta ^ 2 + 0.1143e4 / 0.1772e4 * eta ^ 4 - 0.35617e5 / 0.15948e5 * eta - 0.1949e4 / 0.1772e4 + 0.169e3 / 0.5316e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 3 * f + 2 * g)) - 0.17e2 / 0.810e3 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * sin((2 * g + 2 * h + 6 * f)) + 0.40e2 / 0.9e1 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * ((eta ^ 3 + 0.2e1 / 0.5e1 * eta ^ 2 - 0.6e1 / 0.5e1 * eta - 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.21e2 / 0.20e2 * eta ^ 3 - 0.9e1 / 0.20e2 * eta ^ 2 + 0.5e1 / 0.4e1 * eta + 0.17e2 / 0.20e2) * ci2 ^ 2 + eta ^ 3 / 0.5e1 + eta ^ 2 / 0.10e2 - 0.7e1 / 0.30e2 * eta - 0.1e1 / 0.6e1) * cos((2 * h + 2 * g + 2 * f)) + 0.4e1 / 0.135e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 + 0.23e2 / 0.4e1 * eta ^ 4 + 0.85e2 / 0.4e1 * eta ^ 3 - 0.271e3 / 0.4e1 * eta ^ 2 - 0.583e3 / 0.12e2 * eta + 0.278e3 / 0.3e1) * ci2 ^ 4 + (-0.5e1 / 0.12e2 * eta ^ 5 - 0.13e2 / 0.6e1 * eta ^ 4 - 0.35e2 / 0.4e1 * eta ^ 3 + 0.70e2 / 0.3e1 * eta ^ 2 + 0.107e3 / 0.6e1 * eta - 0.91e2 / 0.3e1) * ci2 ^ 2 - eta ^ 5 / 0.24e2 + eta ^ 4 / 0.4e1 + 0.4e1 / 0.3e1 * eta ^ 3 - 0.9e1 / 0.4e1 * eta ^ 2 - 0.49e2 / 0.24e2 * eta + 0.5e1 / 0.2e1) * sin((4 * f + 4 * g)) + 0.7e1 / 0.4320e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.260e3 / 0.7e1 * eta + 0.209e3 / 0.7e1) * ci2 ^ 6 + (-eta ^ 2 - 0.256e3 / 0.7e1 * eta - 0.205e3 / 0.7e1) * ci2 ^ 4 + (0.5e1 / 0.14e2 * eta ^ 2 + 0.248e3 / 0.21e2 * eta + 0.437e3 / 0.42e2) * ci2 ^ 2 - 0.2e1 / 0.21e2 * (eta + 0.15e2) * (0.1e1 + eta)) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f - 2 * g)) - 0.8e1 / 0.9e1 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 + 0.11e2 / 0.24e2 * eta ^ 2 - 0.7e1 / 0.2e1 * eta - 0.83e2 / 0.24e2) * ci2 ^ 6 + (-0.17e2 / 0.15e2 * eta ^ 3 - 0.43e2 / 0.80e2 * eta ^ 2 + 0.233e3 / 0.60e2 * eta + 0.307e3 / 0.80e2) * ci2 ^ 4 + (0.139e3 / 0.480e3 * eta ^ 3 + 0.37e2 / 0.240e3 * eta ^ 2 - 0.439e3 / 0.480e3 * eta - 0.217e3 / 0.240e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.96e2) * cos((2 * h + 5 * f + 4 * g))) / (0.1e1 + eta) ^ 2 / a ^ 4 / eta ^ 11 -0.6939e4 / 0.256e3 * (0.358e3 / 0.771e3 + 0.5770e4 / 0.6939e4 * eta ^ 6 - 0.480e3 / 0.257e3 * (ci2 ^ 6 - 0.53e2 / 0.45e2 * ci2 ^ 4 + 0.61e2 / 0.180e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sin((-2 * h + 4 * f)) + 0.640e3 / 0.257e3 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sin((-2 * g - 2 * h + 2 * f)) - 0.178e3 / 0.2313e4 * (ci2 ^ 4 - 0.39e2 / 0.89e2 * ci2 ^ 2 + 0.6e1 / 0.89e2) * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * cos((6 * g + 2 * h)) - 0.52e2 / 0.2313e4 * ((eta ^ 2 + 0.3e1 / 0.13e2 * eta + 0.48e2 / 0.13e2) * ci2 ^ 2 - eta ^ 2 + 0.7e1 / 0.26e2 * eta - 0.7e1 / 0.26e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 5 * f + 2 * g)) - 0.50e2 / 0.2313e4 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h - 2 * g + f)) - 0.292e3 / 0.2313e4 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + 9 * f)) - 0.1840e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * ci2 ^ 6 + (-0.409e3 / 0.345e3 * eta ^ 2 - 0.497e3 / 0.690e3 * eta + 0.527e3 / 0.230e3) * ci2 ^ 4 + (0.473e3 / 0.1380e4 * eta ^ 2 + 0.287e3 / 0.1380e4 * eta - 0.151e3 / 0.230e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - 0.7e1 / 0.690e3 * eta + 0.3e1 / 0.92e2) * sin((-2 * h + 3 * f)) + 0.2e1 / 0.257e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 + 0.13e2 / 0.18e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g - 2 * h + 7 * f)) + (0.6536e4 / 0.771e3 + 0.13616e5 / 0.2313e4 * eta ^ 7 + 0.30128e5 / 0.2313e4 * eta ^ 6 + (-0.3200e4 / 0.257e3 * Delta ^ 2 - 0.16072e5 / 0.771e3) * eta ^ 5 + (-0.6400e4 / 0.257e3 * Delta ^ 2 - 0.16712e5 / 0.257e3) * eta ^ 4 + (0.3200e4 / 0.771e3 * Delta ^ 2 - 0.103952e6 / 0.6939e4) * eta ^ 3 + (0.25600e5 / 0.771e3 * Delta ^ 2 + 0.414560e6 / 0.6939e4) * eta ^ 2 + (0.12800e5 / 0.771e3 * Delta ^ 2 + 0.319144e6 / 0.6939e4) * eta) * ci2 ^ 8 + (0.33040e5 / 0.2313e4 + 0.25208e5 / 0.2313e4 * eta ^ 7 + 0.53720e5 / 0.2313e4 * eta ^ 6 + (-0.6528e4 / 0.257e3 * Delta ^ 2 - 0.93616e5 / 0.2313e4) * eta ^ 5 + (-0.13056e5 / 0.257e3 * Delta ^ 2 - 0.30528e5 / 0.257e3) * eta ^ 4 + (0.2176e4 / 0.257e3 * Delta ^ 2 - 0.168056e6 / 0.6939e4) * eta ^ 3 + (0.17408e5 / 0.257e3 * Delta ^ 2 + 0.750344e6 / 0.6939e4) * eta ^ 2 + (0.8704e4 / 0.257e3 * Delta ^ 2 + 0.558112e6 / 0.6939e4) * eta) * ci2 ^ 4 + (-0.14360e5 / 0.771e3 - 0.94912e5 / 0.6939e4 * eta ^ 7 - 0.206168e6 / 0.6939e4 * eta ^ 6 + (0.7680e4 / 0.257e3 * Delta ^ 2 + 0.344144e6 / 0.6939e4) * eta ^ 5 + (0.15360e5 / 0.257e3 * Delta ^ 2 + 0.38536e5 / 0.257e3) * eta ^ 4 + (-0.2560e4 / 0.257e3 * Delta ^ 2 + 0.74720e5 / 0.2313e4) * eta ^ 3 + (-0.20480e5 / 0.257e3 * Delta ^ 2 - 0.317624e6 / 0.2313e4) * eta ^ 2 + (-0.10240e5 / 0.257e3 * Delta ^ 2 - 0.239632e6 / 0.2313e4) * eta) * ci2 ^ 6 + 0.50e2 / 0.2313e4 * (ci2 ^ 2 - 0.21e2 / 0.50e2) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g + f)) - 0.80e2 / 0.257e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 6 - 0.71e2 / 0.60e2 * ci2 ^ 4 + 0.41e2 / 0.120e3 * ci2 ^ 2 - 0.1e1 / 0.60e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + 5 * f)) + 0.292e3 / 0.2313e4 * (ci2 ^ 2 - 0.95e2 / 0.292e3) * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((9 * f + 4 * g)) + 0.520e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta + 0.1e1 / 0.13e2) * ci2 ^ 6 + (-0.193e3 / 0.130e3 * eta - 0.19e2 / 0.130e3) * ci2 ^ 4 + (0.11e2 / 0.20e2 * eta + 0.29e2 / 0.260e3) * ci2 ^ 2 - 0.3e1 / 0.65e2 * eta - 0.2e1 / 0.65e2) * sin((-2 * g + f)) + 0.400e3 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.7e1 / 0.15e2 * eta - 0.16e2 / 0.3e1) * ci2 ^ 6 + (-0.117e3 / 0.100e3 * eta ^ 2 - 0.41e2 / 0.75e2 * eta + 0.1771e4 / 0.300e3) * ci2 ^ 4 + (0.199e3 / 0.600e3 * eta ^ 2 + 0.23e2 / 0.150e3 * eta - 0.827e3 / 0.600e3) * ci2 ^ 2 - eta ^ 2 / 0.50e2 - eta / 0.150e3 + 0.1e1 / 0.75e2) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 5 * f)) / 0.514e3 + ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f - 2 * g)) / 0.514e3 - 0.3200e4 / 0.257e3 * ((eta ^ 2 + 0.133e3 / 0.120e3 * eta + 0.97e2 / 0.120e3) * ci2 ^ 6 + (-0.4e1 / 0.3e1 * eta ^ 2 - 0.589e3 / 0.400e3 * eta - 0.1187e4 / 0.1200e4) * ci2 ^ 4 + (0.253e3 / 0.480e3 * eta ^ 2 + 0.1387e4 / 0.2400e4 * eta + 0.77e2 / 0.240e3) * ci2 ^ 2 - 0.7e1 / 0.96e2 * eta ^ 2 - 0.19e2 / 0.240e3 * eta - 0.1e1 / 0.32e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((4 * g + 2 * h + f)) + 0.35e2 / 0.1542e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 9 * f)) - 0.280e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 6 - 0.93e2 / 0.70e2 * ci2 ^ 4 + 0.73e2 / 0.140e3 * ci2 ^ 2 - 0.1e1 / 0.14e2) * sin((-4 * g - 2 * h + f)) - 0.35e2 / 0.1542e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + 9 * f)) + 0.403e3 / 0.1542e4 * ((eta ^ 4 - 0.2544e4 / 0.403e3 * eta ^ 3 - 0.954e3 / 0.403e3 * eta ^ 2 + 0.3784e4 / 0.403e3 * eta + 0.639e3 / 0.403e3) * ci2 ^ 6 + (-0.419e3 / 0.403e3 * eta ^ 4 + 0.2576e4 / 0.403e3 * eta ^ 3 + 0.946e3 / 0.403e3 * eta ^ 2 - 0.3624e4 / 0.403e3 * eta - 0.327e3 / 0.403e3) * ci2 ^ 4 + (0.157e3 / 0.806e3 * eta ^ 4 - 0.2272e4 / 0.1209e4 * eta ^ 3 - 0.191e3 / 0.403e3 * eta ^ 2 + 0.3164e4 / 0.1209e4 * eta + 0.187e3 / 0.2418e4) * ci2 ^ 2 + eta ^ 4 / 0.403e3 + 0.218e3 / 0.1209e4 * eta ^ 3 + 0.8e1 / 0.1209e4 * eta ^ 2 - 0.118e3 / 0.403e3 * eta - 0.17e2 / 0.403e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + f)) + 0.347e3 / 0.1542e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 5 + 0.12643e5 / 0.347e3 * eta ^ 4 + 0.22950e5 / 0.347e3 * eta ^ 3 - 0.14226e5 / 0.347e3 * eta ^ 2 - 0.51281e5 / 0.347e3 * eta - 0.30625e5 / 0.347e3) * ci2 ^ 6 + (-0.363e3 / 0.347e3 * eta ^ 5 - 0.14931e5 / 0.347e3 * eta ^ 4 - 0.26782e5 / 0.347e3 * eta ^ 3 + 0.16410e5 / 0.347e3 * eta ^ 2 + 0.59001e5 / 0.347e3 * eta + 0.34601e5 / 0.347e3) * ci2 ^ 4 + (0.101e3 / 0.694e3 * eta ^ 5 + 0.25351e5 / 0.2082e4 * eta ^ 4 + 0.22715e5 / 0.1041e4 * eta ^ 3 - 0.12257e5 / 0.1041e4 * eta ^ 2 - 0.93077e5 / 0.2082e4 * eta - 0.52405e5 / 0.2082e4) * ci2 ^ 2 + 0.23e2 / 0.1041e4 * (eta ^ 4 - 0.870e3 / 0.23e2 * eta ^ 3 - 0.872e3 / 0.23e2 * eta ^ 2 + 0.1214e4 / 0.23e2 * eta + 0.1385e4 / 0.23e2) * (0.1e1 + eta)) * cos((2 * h + 5 * f + 4 * g)) - 0.224e3 / 0.771e3 * ((eta ^ 4 + 0.1297e4 / 0.168e3 * eta ^ 3 + 0.193e3 / 0.24e2 * eta ^ 2 - 0.3133e4 / 0.168e3 * eta - 0.3403e4 / 0.168e3) * ci2 ^ 4 + (-0.17e2 / 0.112e3 * eta ^ 4 - 0.107e3 / 0.42e2 * eta ^ 3 - 0.169e3 / 0.56e2 * eta ^ 2 + 0.269e3 / 0.42e2 * eta + 0.811e3 / 0.112e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) * (eta ^ 2 - 0.16e2 * eta - 0.37e2) / 0.56e2) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f + 4 * g)) + 0.8e1 / 0.2313e4 * ((eta ^ 4 + 0.80e2 * eta ^ 3 - 0.432e3 * eta ^ 2 - 0.1276e4 * eta - 0.851e3) * ci2 ^ 4 + (0.3e1 * eta ^ 4 - 0.28e2 * eta ^ 3 + 0.161e3 * eta ^ 2 + 0.477e3 * eta + 0.333e3) * ci2 ^ 2 + 0.2e1 * eta ^ 4 + 0.7e1 * eta ^ 3 + 0.6e1 * eta ^ 2 - 0.31e2 * eta - 0.32e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((2 * f + 4 * g)) + 0.1475e4 / 0.1542e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 - 0.9591e4 / 0.1475e4 * eta ^ 4 - 0.38322e5 / 0.1475e4 * eta ^ 3 - 0.33294e5 / 0.1475e4 * eta ^ 2 + 0.179e3 / 0.295e3 * eta + 0.6837e4 / 0.1475e4) * ci2 ^ 6 + (-0.1971e4 / 0.1475e4 * eta ^ 5 + 0.11271e5 / 0.1475e4 * eta ^ 4 + 0.44394e5 / 0.1475e4 * eta ^ 3 + 0.35446e5 / 0.1475e4 * eta ^ 2 - 0.5863e4 / 0.1475e4 * eta - 0.10061e5 / 0.1475e4) * ci2 ^ 4 + (0.1529e4 / 0.2950e4 * eta ^ 5 - 0.19559e5 / 0.8850e4 * eta ^ 4 - 0.38101e5 / 0.4425e4 * eta ^ 3 - 0.955e3 / 0.177e3 * eta ^ 2 + 0.31343e5 / 0.8850e4 * eta + 0.26941e5 / 0.8850e4) * ci2 ^ 2 - 0.406e3 / 0.4425e4 * (0.1e1 + eta) * (eta ^ 4 - 0.204e3 / 0.203e3 * eta ^ 3 - 0.498e3 / 0.203e3 * eta ^ 2 + 0.984e3 / 0.203e3 * eta + 0.1123e4 / 0.203e3)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + 2 * h + f)) - 0.976e3 / 0.6939e4 * (0.1e1 + eta) ^ 2 * ((eta ^ 4 - 0.74e2 / 0.61e2 * eta ^ 3 - 0.1249e4 / 0.61e2 * eta ^ 2 + 0.416e3 / 0.61e2 * eta + 0.2247e4 / 0.61e2) * ci2 ^ 4 + (-0.26e2 / 0.61e2 * eta ^ 4 + 0.16e2 / 0.61e2 * eta ^ 3 + 0.785e3 / 0.122e3 * eta ^ 2 - 0.229e3 / 0.122e3 * eta - 0.693e3 / 0.61e2) * ci2 ^ 2 + 0.3e1 / 0.61e2 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.2e1 * eta ^ 2 - 0.53e2 / 0.6e1 * eta + 0.9e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((6 * f + 4 * g)) + 0.10e2 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * cos((-4 * g - 2 * h + 2 * f)) - 0.64e2 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 + 0.89e2 / 0.48e2 * eta ^ 2 - 0.19e2 / 0.24e2 * eta - 0.25e2 / 0.16e2) * ci2 ^ 6 + (-eta ^ 3 - 0.89e2 / 0.48e2 * eta ^ 2 + 0.5e1 / 0.8e1 * eta + 0.67e2 / 0.48e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.59e2 / 0.96e2 * eta ^ 2 - 0.25e2 / 0.144e3 * eta - 0.127e3 / 0.288e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 2 + 0.5e1 / 0.6e1 * eta - 0.3e1 / 0.2e1) / 0.24e2) * cos((-2 * g + 2 * f)) - 0.184e3 / 0.2313e4 * ((eta ^ 2 - 0.13e2 / 0.46e2 * eta - 0.204e3 / 0.23e2) * ci2 ^ 4 + (-0.7e1 / 0.23e2 * eta ^ 2 + 0.3e1 / 0.46e2 * eta + 0.129e3 / 0.46e2) * ci2 ^ 2 + eta ^ 2 / 0.46e2 - 0.1e1 / 0.46e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((8 * f + 4 * g)) - 0.10384e5 / 0.2313e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.13063e5 / 0.5192e4 * eta ^ 4 - 0.1564e4 / 0.649e3 * eta ^ 3 - 0.21303e5 / 0.2596e4 * eta ^ 2 - 0.2895e4 / 0.649e3 * eta - 0.841e3 / 0.5192e4) * ci2 ^ 6 + (-0.844e3 / 0.649e3 * eta ^ 5 - 0.16239e5 / 0.5192e4 * eta ^ 4 + 0.2039e4 / 0.649e3 * eta ^ 3 + 0.27095e5 / 0.2596e4 * eta ^ 2 + 0.3819e4 / 0.649e3 * eta + 0.35e2 / 0.88e2) * ci2 ^ 4 + (0.302e3 / 0.649e3 * eta ^ 5 + 0.10645e5 / 0.10384e5 * eta ^ 4 - 0.2372e4 / 0.1947e4 * eta ^ 3 - 0.58631e5 / 0.15576e5 * eta ^ 2 - 0.4346e4 / 0.1947e4 * eta - 0.2523e4 / 0.10384e5) * ci2 ^ 2 - 0.679e3 / 0.15576e5 * (0.1e1 + eta) * (eta ^ 4 + 0.664e3 / 0.679e3 * eta ^ 3 - 0.2878e4 / 0.679e3 * eta ^ 2 - 0.496e3 / 0.97e2 * eta - 0.657e3 / 0.679e3)) * cos((2 * g)) - 0.4720e4 / 0.257e3 * ((eta ^ 4 + 0.58e2 / 0.59e2 * eta ^ 3 - 0.512e3 / 0.177e3 * eta ^ 2 - 0.470e3 / 0.177e3 * eta + 0.21e2 / 0.59e2) * ci2 ^ 4 + (-0.73e2 / 0.59e2 * eta ^ 4 - 0.72e2 / 0.59e2 * eta ^ 3 + 0.198e3 / 0.59e2 * eta ^ 2 + 0.184e3 / 0.59e2 * eta - 0.21e2 / 0.59e2) * ci2 ^ 2 + 0.115e3 / 0.354e3 * eta ^ 4 + 0.19e2 / 0.59e2 * eta ^ 3 - 0.140e3 / 0.177e3 * eta ^ 2 - 0.133e3 / 0.177e3 * eta + 0.7e1 / 0.118e3) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * sin(f) + 0.128e3 / 0.771e3 * ((eta ^ 3 + 0.21e2 / 0.64e2 * eta ^ 2 - 0.55e2 / 0.16e2 * eta - 0.157e3 / 0.64e2) * ci2 ^ 6 + (-eta ^ 3 - 0.21e2 / 0.64e2 * eta ^ 2 + 0.51e2 / 0.16e2 * eta + 0.141e3 / 0.64e2) * ci2 ^ 4 + (eta ^ 3 / 0.3e1 + 0.11e2 / 0.128e3 * eta ^ 2 - 0.103e3 / 0.96e2 * eta - 0.265e3 / 0.384e3) * ci2 ^ 2 - eta ^ 3 / 0.24e2 - eta ^ 2 / 0.192e3 + 0.5e1 / 0.32e2 * eta + 0.19e2 / 0.192e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((2 * h + 2 * f)) - 0.122e3 / 0.257e3 * ((eta ^ 5 + 0.787e3 / 0.61e2 * eta ^ 4 + 0.1278e4 / 0.61e2 * eta ^ 3 - 0.4030e4 / 0.183e3 * eta ^ 2 - 0.6481e4 / 0.183e3 * eta - 0.57e2 / 0.61e2) * ci2 ^ 6 + (-0.81e2 / 0.61e2 * eta ^ 5 - 0.1017e4 / 0.61e2 * eta ^ 4 - 0.4544e4 / 0.183e3 * eta ^ 3 + 0.5164e4 / 0.183e3 * eta ^ 2 + 0.2537e4 / 0.61e2 * eta - 0.25e2 / 0.183e3) * ci2 ^ 4 + (0.227e3 / 0.366e3 * eta ^ 5 + 0.6463e4 / 0.1098e4 * eta ^ 4 + 0.3790e4 / 0.549e3 * eta ^ 3 - 0.5582e4 / 0.549e3 * eta ^ 2 - 0.4367e4 / 0.366e3 * eta + 0.1109e4 / 0.1098e4) * ci2 ^ 2 - 0.11e2 / 0.122e3 * eta ^ 5 - 0.521e3 / 0.1098e4 * eta ^ 4 - 0.17e2 / 0.61e2 * eta ^ 3 + 0.161e3 / 0.183e3 * eta ^ 2 + 0.653e3 / 0.1098e4 * eta - 0.29e2 / 0.122e3) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + f)) - 0.320e3 / 0.257e3 * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sin((4 * f)) - 0.40e2 / 0.257e3 * (0.1e1 + eta) ^ 3 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((5 * f)) - 0.85e2 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.691e3 / 0.85e2 * eta ^ 2 - 0.2037e4 / 0.85e2 * eta - 0.225e3 / 0.17e2) * ci2 ^ 6 + (-0.93e2 / 0.85e2 * eta ^ 3 + 0.161e3 / 0.17e2 * eta ^ 2 + 0.2281e4 / 0.85e2 * eta + 0.1247e4 / 0.85e2) * ci2 ^ 4 + (0.37e2 / 0.170e3 * eta ^ 3 - 0.421e3 / 0.170e3 * eta ^ 2 - 0.2923e4 / 0.510e3 * eta - 0.471e3 / 0.170e3) * ci2 ^ 2 + 0.7e1 / 0.510e3 * (0.1e1 + eta) * (eta ^ 2 + 0.24e2 / 0.7e1 * eta - 0.131e3 / 0.7e1)) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 5 * f)) + 0.40e2 / 0.257e3 * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f + 2 * g)) - 0.640e3 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.11e2 / 0.24e2 * eta ^ 2 - 0.7e1 / 0.2e1 * eta - 0.83e2 / 0.24e2) * ci2 ^ 6 + (-0.17e2 / 0.15e2 * eta ^ 3 - 0.43e2 / 0.80e2 * eta ^ 2 + 0.233e3 / 0.60e2 * eta + 0.307e3 / 0.80e2) * ci2 ^ 4 + (0.139e3 / 0.480e3 * eta ^ 3 + 0.37e2 / 0.240e3 * eta ^ 2 - 0.439e3 / 0.480e3 * eta - 0.217e3 / 0.240e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.96e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + 5 * f + 4 * g)) - 0.35e2 / 0.1542e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.5e1 / 0.7e1) * ci2 ^ 6 + (-eta - 0.5e1 / 0.7e1) * ci2 ^ 4 + (eta / 0.14e2 + 0.1e1 / 0.42e2) * ci2 ^ 2 + eta / 0.21e2 + 0.1e1 / 0.21e2) * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 7 * f)) + (0.1e1 + eta) ^ 3 * ((eta ^ 2 - 0.110e3 / 0.3e1 * eta - 0.101e3 / 0.3e1) * ci2 ^ 6 + (-eta ^ 2 + 0.36e2 * eta + 0.33e2) * ci2 ^ 4 + (eta ^ 2 / 0.18e2 - 0.112e3 / 0.9e1 * eta - 0.71e2 / 0.6e1) * ci2 ^ 2 + (eta + 0.29e2) * (0.1e1 + eta) / 0.18e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f)) / 0.257e3 + 0.4480e4 / 0.771e3 * ((eta ^ 4 + 0.47e2 / 0.56e2 * eta ^ 3 - 0.703e3 / 0.168e3 * eta ^ 2 - 0.289e3 / 0.168e3 * eta + 0.185e3 / 0.56e2) * ci2 ^ 6 + (-0.2047e4 / 0.1680e4 * eta ^ 4 - 0.851e3 / 0.840e3 * eta ^ 3 + 0.524e3 / 0.105e3 * eta ^ 2 + 0.1759e4 / 0.840e3 * eta - 0.2123e4 / 0.560e3) * ci2 ^ 4 + (0.1297e4 / 0.3360e4 * eta ^ 4 + 0.521e3 / 0.1680e4 * eta ^ 3 - 0.211e3 / 0.140e3 * eta ^ 2 - 0.75e2 / 0.112e3 * eta + 0.1133e4 / 0.1120e4) * ci2 ^ 2 - 0.53e2 / 0.1680e4 * (0.1e1 + eta) * (eta ^ 3 - 0.18e2 / 0.53e2 * eta ^ 2 - 0.177e3 / 0.53e2 * eta + 0.90e2 / 0.53e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f + 2 * g)) + 0.15e2 / 0.514e3 * ((eta ^ 2 - 0.2236e4 / 0.45e2 * eta - 0.4117e4 / 0.45e2) * ci2 ^ 6 + (-eta ^ 2 + 0.2552e4 / 0.45e2 * eta + 0.4433e4 / 0.45e2) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 - 0.1928e4 / 0.135e3 * eta - 0.5737e4 / 0.270e3) * ci2 ^ 2 + 0.56e2 / 0.135e3 * eta + 0.56e2 / 0.135e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 7 * f)) - 0.3392e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + 0.1233e4 / 0.848e3 * eta + 0.571e3 / 0.848e3) * ci2 ^ 4 + (-0.1405e4 / 0.3392e4 * eta ^ 2 - 0.63e2 / 0.106e3 * eta - 0.971e3 / 0.3392e4) * ci2 ^ 2 + 0.21e2 / 0.848e3 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((4 * g + f)) - (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.236e3 / 0.3e1 * eta - 0.65e2) * ci2 ^ 6 + (-eta ^ 2 + 0.232e3 / 0.3e1 * eta + 0.191e3 / 0.3e1) * ci2 ^ 4 + (eta ^ 2 / 0.6e1 - 0.76e2 / 0.3e1 * eta - 0.415e3 / 0.18e2) * ci2 ^ 2 + 0.28e2 / 0.9e1 * eta + 0.28e2 / 0.9e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f - 2 * g)) / 0.514e3 + 0.3120e4 / 0.257e3 * (0.1e1 + eta) * ((0.1e1 + eta) * (eta ^ 3 - 0.4e1 / 0.117e3 * eta ^ 2 - 0.35e2 / 0.39e2 * eta + 0.4e1 / 0.9e1) * ci2 ^ 6 + (-0.1457e4 / 0.1170e4 * eta ^ 4 - 0.233e3 / 0.195e3 * eta ^ 3 + 0.6e1 / 0.5e1 * eta ^ 2 + 0.343e3 / 0.585e3 * eta - 0.667e3 / 0.1170e4) * ci2 ^ 4 + (0.319e3 / 0.780e3 * eta ^ 4 + 0.449e3 / 0.1170e4 * eta ^ 3 - 0.274e3 / 0.585e3 * eta ^ 2 - 0.19e2 / 0.78e2 * eta + 0.95e2 / 0.468e3) * ci2 ^ 2 - 0.41e2 / 0.1170e4 * eta ^ 4 - 0.7e1 / 0.234e3 * eta ^ 3 + 0.5e1 / 0.78e2 * eta ^ 2 + eta / 0.30e2 - 0.1e1 / 0.39e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((f + 2 * g)) - 0.1520e4 / 0.257e3 * ((eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (0.1e1 + eta) * ci2 ^ 6 + (-0.137e3 / 0.114e3 * eta ^ 4 - 0.577e3 / 0.570e3 * eta ^ 3 + 0.889e3 / 0.570e3 * eta ^ 2 + 0.253e3 / 0.570e3 * eta - 0.52e2 / 0.57e2) * ci2 ^ 4 + (0.20e2 / 0.57e2 * eta ^ 4 + 0.337e3 / 0.1140e4 * eta ^ 3 - 0.499e3 / 0.1140e4 * eta ^ 2 - 0.7e1 / 0.60e2 * eta + 0.59e2 / 0.228e3) * ci2 ^ 2 - (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) / 0.60e2) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * h + f)) - 0.80e2 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.23e2 / 0.15e2 * eta ^ 3 - 0.37e2 / 0.30e2 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.37e2 / 0.30e2) * ci2 ^ 4 + (0.31e2 / 0.60e2 * eta ^ 3 + 0.11e2 / 0.30e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.11e2 / 0.30e2) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * sin((2 * h + f)) + 0.55e2 / 0.771e3 * ((eta ^ 3 + 0.39e2 / 0.55e2 * eta ^ 2 - 0.63e2 / 0.55e2 * eta - 0.39e2 / 0.55e2) * ci2 ^ 6 + (-0.47e2 / 0.55e2 * eta ^ 3 + 0.27e2 / 0.55e2 * eta ^ 2 + 0.179e3 / 0.55e2 * eta + 0.97e2 / 0.55e2) * ci2 ^ 4 + (0.23e2 / 0.110e3 * eta ^ 3 - 0.19e2 / 0.22e2 * eta ^ 2 - 0.157e3 / 0.66e2 * eta - 0.141e3 / 0.110e3) * ci2 ^ 2 - 0.19e2 / 0.330e3 * (eta ^ 2 - 0.4e1 * eta - 0.99e2 / 0.19e2) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g - 2 * h + f)) + 0.1516e4 / 0.2313e4 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - 0.609e3 / 0.1516e4 * ci2 ^ 2 + 0.21e2 / 0.379e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + f)) + 0.676e3 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 3 - 0.6e1 / 0.169e3 * eta ^ 2 - 0.283e3 / 0.169e3 * eta + 0.192e3 / 0.169e3) * ci2 ^ 2 - 0.73e2 / 0.169e3 * eta ^ 3 + eta ^ 2 / 0.338e3 + 0.109e3 / 0.169e3 * eta - 0.181e3 / 0.338e3) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + f + 2 * g)) + 0.5e1 / 0.1542e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta + 0.7e1 / 0.5e1) * ci2 ^ 6 + (-eta - 0.7e1 / 0.5e1) * ci2 ^ 4 + (0.3e1 / 0.10e2 * eta + 0.11e2 / 0.30e2) * ci2 ^ 2 - eta / 0.15e2 - 0.1e1 / 0.15e2) * sqrt(-eta ^ 2 + 0.1e1) * cos((-4 * g - 2 * h + 3 * f)) + 0.23e2 / 0.1542e4 * ((eta ^ 4 - 0.7076e4 / 0.23e2 * eta ^ 3 - 0.9438e4 / 0.23e2 * eta ^ 2 + 0.21700e5 / 0.23e2 * eta + 0.28375e5 / 0.23e2) * ci2 ^ 6 + (-eta ^ 4 + 0.8632e4 / 0.23e2 * eta ^ 3 + 0.11250e5 / 0.23e2 * eta ^ 2 - 0.25176e5 / 0.23e2 * eta - 0.32107e5 / 0.23e2) * ci2 ^ 4 + (-0.3e1 / 0.46e2 * eta ^ 4 - 0.8092e4 / 0.69e2 * eta ^ 3 - 0.9865e4 / 0.69e2 * eta ^ 2 + 0.6948e4 / 0.23e2 * eta + 0.49579e5 / 0.138e3) * ci2 ^ 2 + 0.16e2 / 0.69e2 * (eta ^ 3 + 0.181e3 / 0.4e1 * eta ^ 2 + 0.3e1 / 0.2e1 * eta - 0.379e3 / 0.4e1) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f + 2 * g)) - 0.200e3 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((4 * g + 2 * h + 7 * f)) - 0.4e1 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((3 * f - 2 * g)) + 0.4e1 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((2 * h + 3 * f)) + 0.200e3 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((2 * g + 7 * f)) + 0.320e3 / 0.257e3 * (0.1e1 + eta) ^ 4 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((2 * h + 2 * g + 4 * f)) + (-0.5584e4 / 0.6939e4 + 0.96e2 / 0.257e3 * Delta ^ 2) * eta ^ 3 + (0.25294e5 / 0.6939e4 + 0.768e3 / 0.257e3 * Delta ^ 2) * eta ^ 2 + (-0.10240e5 / 0.2313e4 - 0.24112e5 / 0.6939e4 * eta ^ 7 - 0.50312e5 / 0.6939e4 * eta ^ 6 + (0.2304e4 / 0.257e3 * Delta ^ 2 + 0.91352e5 / 0.6939e4) * eta ^ 5 + (0.4608e4 / 0.257e3 * Delta ^ 2 + 0.9648e4 / 0.257e3) * eta ^ 4 + (-0.768e3 / 0.257e3 * Delta ^ 2 + 0.17024e5 / 0.2313e4) * eta ^ 3 + (-0.6144e4 / 0.257e3 * Delta ^ 2 - 0.78104e5 / 0.2313e4) * eta ^ 2 + (-0.3072e4 / 0.257e3 * Delta ^ 2 - 0.57592e5 / 0.2313e4) * eta) * ci2 ^ 2 - 0.16e2 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((-2 * g + 2 * f)) + 0.16e2 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((2 * h + 2 * f)) + 0.1760e4 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((6 * f + 2 * g)) - 0.1760e4 / 0.771e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (ci2 ^ 4 - 0.11e2 / 0.10e2 * ci2 ^ 2 + 0.1e1 / 0.4e1) * sin((2 * h + 6 * f + 4 * g)) + 0.2816e4 / 0.6939e4 * eta ^ 7 + 0.40e2 / 0.257e3 * (0.1e1 + eta) ^ 3 * ((eta ^ 2 + 0.43e2 / 0.30e2 * eta + 0.4e1 / 0.3e1) * ci2 ^ 4 + (-0.23e2 / 0.45e2 * eta ^ 2 - 0.7e1 / 0.10e2 * eta - 0.53e2 / 0.90e2) * ci2 ^ 2 + (0.1e1 + eta) ^ 2 / 0.30e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((4 * g)) - 0.112e3 / 0.771e3 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * (eta - 0.1e1) ^ 2 * cos((4 * g + 2 * h + 8 * f)) + 0.112e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta + 0.157e3 / 0.56e2) * ci2 ^ 6 + (-0.8e1 / 0.7e1 * eta - 0.165e3 / 0.56e2) * ci2 ^ 4 + (0.2e1 / 0.7e1 * eta + 0.197e3 / 0.336e3) * ci2 ^ 2 - eta / 0.168e3 - 0.1e1 / 0.168e3) * cos((8 * f + 2 * g)) - 0.544e3 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 4 + 0.925e3 / 0.272e3 * eta ^ 3 - 0.365e3 / 0.272e3 * eta ^ 2 - 0.2409e4 / 0.272e3 * eta - 0.1311e4 / 0.272e3) * ci2 ^ 6 + (-0.61e2 / 0.51e2 * eta ^ 4 - 0.1077e4 / 0.272e3 * eta ^ 3 + 0.377e3 / 0.272e3 * eta ^ 2 + 0.7955e4 / 0.816e3 * eta + 0.1443e4 / 0.272e3) * ci2 ^ 4 + (eta ^ 4 / 0.3e1 + 0.551e3 / 0.544e3 * eta ^ 3 - 0.349e3 / 0.1632e4 * eta ^ 2 - 0.3121e4 / 0.1632e4 * eta - 0.1583e4 / 0.1632e4) * ci2 ^ 2 - 0.3e1 / 0.272e3 * (eta ^ 3 + eta ^ 2 / 0.9e1 + 0.5e1 / 0.3e1 * eta + 0.9e1) * (0.1e1 + eta)) * cos((-2 * h + 4 * f)) - 0.112e3 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * ((eta ^ 2 + 0.191e3 / 0.56e2 * eta + 0.113e3 / 0.56e2) * ci2 ^ 6 + (-0.25e2 / 0.21e2 * eta ^ 2 - 0.91e2 / 0.24e2 * eta - 0.53e2 / 0.24e2) * ci2 ^ 4 + (eta ^ 2 / 0.3e1 + 0.37e2 / 0.48e2 * eta + 0.125e3 / 0.336e3) * ci2 ^ 2 - eta ^ 2 / 0.84e2 + eta / 0.24e2 + 0.3e1 / 0.56e2) * cos((-2 * h + 6 * f)) + 0.1964e4 / 0.2313e4 * ((eta ^ 4 - 0.735e3 / 0.491e3 * eta ^ 3 - 0.3823e4 / 0.491e3 * eta ^ 2 + 0.1459e4 / 0.491e3 * eta + 0.4496e4 / 0.491e3) * ci2 ^ 4 + (-0.407e3 / 0.982e3 * eta ^ 4 + 0.188e3 / 0.491e3 * eta ^ 3 + 0.1233e4 / 0.491e3 * eta ^ 2 - 0.436e3 / 0.491e3 * eta - 0.2835e4 / 0.982e3) * ci2 ^ 2 + 0.25e2 / 0.491e3 * (0.1e1 + eta) * (eta ^ 3 - 0.39e2 / 0.25e2 * eta ^ 2 - 0.77e2 / 0.25e2 * eta + 0.83e2 / 0.25e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f + 4 * g)) - 0.2800e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 + 0.269e3 / 0.350e3 * eta ^ 2 - 0.621e3 / 0.350e3 * eta - 0.68e2 / 0.35e2) * ci2 ^ 4 + (-0.43e2 / 0.140e3 * eta ^ 3 - 0.327e3 / 0.1400e4 * eta ^ 2 + 0.387e3 / 0.700e3 * eta + 0.851e3 / 0.1400e4) * ci2 ^ 2 + 0.9e1 / 0.700e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * cos((6 * g + 2 * h + 7 * f)) - 0.9320e4 / 0.2313e4 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 4 + 0.1783e4 / 0.1165e4 * eta ^ 3 - 0.1143e4 / 0.1165e4 * eta ^ 2 - 0.753e3 / 0.233e3 * eta - 0.2224e4 / 0.1165e4) * ci2 ^ 4 + (-0.1489e4 / 0.4660e4 * eta ^ 4 - 0.461e3 / 0.932e3 * eta ^ 3 + 0.1441e4 / 0.4660e4 * eta ^ 2 + 0.961e3 / 0.932e3 * eta + 0.707e3 / 0.1165e4) * ci2 ^ 2 + 0.13e2 / 0.466e3 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.65e2 * eta - 0.83e2 / 0.65e2)) * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + 5 * f)) - 0.2288e4 / 0.771e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.675e3 / 0.572e3 * eta ^ 4 - 0.43e2 / 0.858e3 * eta ^ 3 - 0.712e3 / 0.429e3 * eta ^ 2 - 0.5389e4 / 0.858e3 * eta - 0.2583e4 / 0.572e3) * ci2 ^ 6 + (-0.197e3 / 0.143e3 * eta ^ 5 - 0.1083e4 / 0.572e3 * eta ^ 4 + 0.85e2 / 0.286e3 * eta ^ 3 + 0.551e3 / 0.143e3 * eta ^ 2 + 0.241e3 / 0.26e2 * eta + 0.3395e4 / 0.572e3) * ci2 ^ 4 + (0.83e2 / 0.143e3 * eta ^ 5 + 0.313e3 / 0.312e3 * eta ^ 4 - 0.149e3 / 0.572e3 * eta ^ 3 - 0.745e3 / 0.286e3 * eta ^ 2 - 0.7099e4 / 0.1716e4 * eta - 0.7531e4 / 0.3432e4) * ci2 ^ 2 - 0.157e3 / 0.1716e4 * eta ^ 5 - 0.305e3 / 0.1716e4 * eta ^ 4 + 0.20e2 / 0.143e3 * eta ^ 3 + 0.283e3 / 0.429e3 * eta ^ 2 + 0.1241e4 / 0.1716e4 * eta + 0.509e3 / 0.1716e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((2 * h + 2 * f + 4 * g)) - 0.3200e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * ((eta ^ 2 + 0.4e1 / 0.5e1 * eta - 0.3e1 / 0.5e1) * ci2 ^ 4 + (-0.11e2 / 0.10e2 * eta ^ 2 - 0.9e1 / 0.10e2 * eta + 0.3e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 2 + eta / 0.5e1 - 0.1e1 / 0.10e2) * sin((2 * f)) + 0.1520e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 + 0.8e1 / 0.19e2 * eta ^ 2 - 0.51e2 / 0.19e2 * eta - 0.44e2 / 0.19e2) * ci2 ^ 4 + (-0.20e2 / 0.19e2 * eta ^ 3 - 0.9e1 / 0.19e2 * eta ^ 2 + 0.52e2 / 0.19e2 * eta + 0.45e2 / 0.19e2) * ci2 ^ 2 + 0.23e2 / 0.114e3 * eta ^ 3 + 0.2e1 / 0.19e2 * eta ^ 2 - 0.55e2 / 0.114e3 * eta - 0.8e1 / 0.19e2) * sin((2 * h + 3 * f + 2 * g)) + 0.4960e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 - 0.7e1 / 0.31e2 * eta ^ 2 - 0.121e3 / 0.93e2 * eta + 0.65e2 / 0.93e2) * ci2 ^ 6 + (-0.112e3 / 0.93e2 * eta ^ 3 + 0.44e2 / 0.155e3 * eta ^ 2 + 0.8e1 / 0.5e1 * eta - 0.388e3 / 0.465e3) * ci2 ^ 4 + (0.349e3 / 0.930e3 * eta ^ 3 - eta ^ 2 / 0.10e2 - 0.493e3 / 0.930e3 * eta + 0.233e3 / 0.930e3) * ci2 ^ 2 - 0.14e2 / 0.465e3 * eta ^ 3 + 0.2e1 / 0.155e3 * eta ^ 2 + 0.8e1 / 0.155e3 * eta - 0.2e1 / 0.93e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((2 * g + 2 * f)) - 0.2608e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.2957e4 / 0.1304e4 * eta ^ 3 - 0.6291e4 / 0.1304e4 * eta ^ 2 - 0.17737e5 / 0.1304e4 * eta - 0.10849e5 / 0.1304e4) * ci2 ^ 6 + (-0.193e3 / 0.163e3 * eta ^ 4 - 0.3357e4 / 0.1304e4 * eta ^ 3 + 0.7203e4 / 0.1304e4 * eta ^ 2 + 0.19897e5 / 0.1304e4 * eta + 0.11937e5 / 0.1304e4) * ci2 ^ 4 + (0.55e2 / 0.163e3 * eta ^ 4 + 0.1787e4 / 0.2608e4 * eta ^ 3 - 0.3573e4 / 0.2608e4 * eta ^ 2 - 0.9647e4 / 0.2608e4 * eta - 0.5519e4 / 0.2608e4) * ci2 ^ 2 - 0.41e2 / 0.1956e4 * (eta ^ 3 + 0.105e3 / 0.82e2 * eta ^ 2 - 0.116e3 / 0.41e2 * eta - 0.267e3 / 0.82e2) * (0.1e1 + eta)) * (eta - 0.1e1) * cos((2 * h + 6 * f + 4 * g)) + 0.34e2 / 0.257e3 * ((eta ^ 3 + 0.13e2 / 0.17e2 * eta ^ 2 - 0.791e3 / 0.153e3 * eta - 0.815e3 / 0.153e3) * ci2 ^ 4 + (-0.47e2 / 0.153e3 * eta ^ 3 - 0.35e2 / 0.153e3 * eta ^ 2 + 0.251e3 / 0.153e3 * eta + 0.259e3 / 0.153e3) * ci2 ^ 2 + 0.2e1 / 0.153e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((6 * g + 2 * h + 8 * f)) - 0.656e3 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta ^ 5 + 0.355e3 / 0.164e3 * eta ^ 4 + 0.203e3 / 0.82e2 * eta ^ 3 + 0.446e3 / 0.41e2 * eta ^ 2 + 0.1069e4 / 0.82e2 * eta + 0.489e3 / 0.164e3) * ci2 ^ 6 + (-0.151e3 / 0.123e3 * eta ^ 5 - 0.1361e4 / 0.492e3 * eta ^ 4 - 0.323e3 / 0.82e2 * eta ^ 3 - 0.1669e4 / 0.123e3 * eta ^ 2 - 0.3571e4 / 0.246e3 * eta - 0.461e3 / 0.164e3) * ci2 ^ 4 + (eta ^ 5 / 0.3e1 + 0.907e3 / 0.984e3 * eta ^ 4 + 0.1073e4 / 0.492e3 * eta ^ 3 + 0.1181e4 / 0.246e3 * eta ^ 2 + 0.555e3 / 0.164e3 * eta + 0.37e2 / 0.984e3) * ci2 ^ 2 - eta ^ 5 / 0.164e3 - 0.29e2 / 0.492e3 * eta ^ 4 - 0.77e2 / 0.246e3 * eta ^ 3 - 0.109e3 / 0.246e3 * eta ^ 2 - 0.7e1 / 0.492e3 * eta + 0.29e2 / 0.164e3) * cos((-2 * h + 2 * f)) + 0.11360e5 / 0.771e3 * ((eta ^ 4 + 0.157e3 / 0.142e3 * eta ^ 3 - 0.379e3 / 0.142e3 * eta ^ 2 - 0.505e3 / 0.142e3 * eta - 0.135e3 / 0.142e3) * ci2 ^ 4 + (-0.171e3 / 0.142e3 * eta ^ 4 - 0.189e3 / 0.142e3 * eta ^ 3 + 0.417e3 / 0.142e3 * eta ^ 2 + 0.561e3 / 0.142e3 * eta + 0.75e2 / 0.71e2) * ci2 ^ 2 + 0.43e2 / 0.142e3 * eta ^ 4 + 0.95e2 / 0.284e3 * eta ^ 3 - 0.177e3 / 0.284e3 * eta ^ 2 - 0.243e3 / 0.284e3 * eta - 0.65e2 / 0.284e3) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sqrt(-eta ^ 2 + 0.1e1) * sin((2 * h + f + 2 * g)) + 0.2240e4 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 6 - 0.89e2 / 0.70e2 * ci2 ^ 4 + 0.127e3 / 0.280e3 * ci2 ^ 2 - 0.3e1 / 0.56e2) * Delta * (eta - 0.1e1) ^ 2 * sin((4 * g + 2 * h)) + (-0.288e3 / 0.257e3 * Delta ^ 2 - 0.10312e5 / 0.6939e4) * eta ^ 5 + (-0.576e3 / 0.257e3 * Delta ^ 2 - 0.28942e5 / 0.6939e4) * eta ^ 4 + (0.384e3 / 0.257e3 * Delta ^ 2 + 0.18392e5 / 0.6939e4) * eta + 0.554e3 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 - 0.254e3 / 0.831e3 * eta - 0.2729e4 / 0.831e3) * ci2 ^ 4 + (-0.171e3 / 0.554e3 * eta ^ 2 + 0.64e2 / 0.831e3 * eta + 0.563e3 / 0.554e3) * ci2 ^ 2 + 0.6e1 / 0.277e3 * eta ^ 2 - 0.6e1 / 0.277e3) * cos((4 * g + 7 * f)) - 0.569e3 / 0.1542e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.2868e4 / 0.569e3 * eta ^ 3 - 0.6842e4 / 0.569e3 * eta ^ 2 - 0.2860e4 / 0.569e3 * eta + 0.561e3 / 0.569e3) * ci2 ^ 6 + (-eta ^ 4 + 0.3144e4 / 0.569e3 * eta ^ 3 + 0.7502e4 / 0.569e3 * eta ^ 2 + 0.3672e4 / 0.569e3 * eta - 0.133e3 / 0.569e3) * ci2 ^ 4 + (0.179e3 / 0.1138e4 * eta ^ 4 - 0.1192e4 / 0.569e3 * eta ^ 3 - 0.7883e4 / 0.1707e4 * eta ^ 2 - 0.4376e4 / 0.1707e4 * eta - 0.659e3 / 0.3414e4) * ci2 ^ 2 + 0.16e2 / 0.1707e4 * (0.1e1 + eta) * (eta ^ 3 + 0.59e2 / 0.2e1 * eta ^ 2 + 0.67e2 / 0.2e1 * eta + 0.3e1)) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g + f)) + 0.80e2 / 0.2313e4 * ((eta ^ 4 + 0.41e2 / 0.20e2 * eta ^ 3 - 0.187e3 / 0.20e2 * eta ^ 2 - 0.33e2 / 0.20e2 * eta + 0.223e3 / 0.20e2) * ci2 ^ 2 - 0.17e2 / 0.40e2 * eta ^ 4 - 0.53e2 / 0.40e2 * eta ^ 3 + 0.189e3 / 0.40e2 * eta ^ 2 + 0.73e2 / 0.40e2 * eta - 0.28e2 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 3 * f + 2 * g)) - 0.1136e4 / 0.257e3 * ((eta ^ 2 + 0.1853e4 / 0.1278e4 * eta + 0.265e3 / 0.213e3) * ci2 ^ 4 + (-0.973e3 / 0.2556e4 * eta ^ 2 - 0.929e3 / 0.1704e4 * eta - 0.2209e4 / 0.5112e4) * ci2 ^ 2 + 0.41e2 / 0.852e3 * eta ^ 2 + 0.29e2 / 0.426e3 * eta + 0.37e2 / 0.852e3) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((6 * g + 2 * h + 3 * f)) - 0.65e2 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.1113e4 / 0.65e2 * eta ^ 2 - 0.3169e4 / 0.65e2 * eta - 0.2071e4 / 0.65e2) * ci2 ^ 6 + (-eta ^ 3 + 0.1271e4 / 0.65e2 * eta ^ 2 + 0.697e3 / 0.13e2 * eta + 0.2229e4 / 0.65e2) * ci2 ^ 4 + (0.5e1 / 0.26e2 * eta ^ 3 - 0.631e3 / 0.130e3 * eta ^ 2 - 0.4759e4 / 0.390e3 * eta - 0.957e3 / 0.130e3) * ci2 ^ 2 - (0.1e1 + eta) ^ 2 * (eta - 0.51e2 / 0.5e1) / 0.78e2) * cos((4 * g + 2 * h + 7 * f)) + 0.7520e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.20e2 / 0.47e2 * eta - 0.79e2 / 0.47e2) * ci2 ^ 6 + (-0.274e3 / 0.235e3 * eta ^ 2 - 0.117e3 / 0.235e3 * eta + 0.443e3 / 0.235e3) * ci2 ^ 4 + (0.77e2 / 0.235e3 * eta ^ 2 + 0.33e2 / 0.235e3 * eta - 0.109e3 / 0.235e3) * ci2 ^ 2 - 0.9e1 / 0.470e3 * eta ^ 2 - 0.3e1 / 0.470e3 * eta + 0.3e1 / 0.235e3) * sin((2 * g + 4 * f)) - 0.1920e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * ((eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * ci2 ^ 6 + (-0.421e3 / 0.360e3 * eta ^ 2 - 0.26e2 / 0.45e2 * eta + 0.349e3 / 0.360e3) * ci2 ^ 4 + (0.241e3 / 0.720e3 * eta ^ 2 + 0.59e2 / 0.360e3 * eta - 0.199e3 / 0.720e3) * ci2 ^ 2 - eta ^ 2 / 0.60e2 - eta / 0.120e3 + 0.1e1 / 0.72e2) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((-2 * h + 2 * f)) - 0.62e2 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 3 + 0.11e2 / 0.31e2 * eta ^ 2 + 0.71e2 / 0.31e2 * eta + 0.151e3 / 0.31e2) * ci2 ^ 2 - 0.17e2 / 0.31e2 * eta ^ 3 - 0.5e1 / 0.31e2 * eta ^ 2 - 0.19e2 / 0.31e2 * eta - 0.67e2 / 0.31e2) * cos((2 * g - 2 * h)) - 0.3680e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.1e1 + eta) * (eta + 0.5e1 / 0.23e2) * ci2 ^ 6 + (-0.166e3 / 0.115e3 * eta ^ 2 - 0.201e3 / 0.115e3 * eta - 0.37e2 / 0.115e3) * ci2 ^ 4 + (0.59e2 / 0.115e3 * eta ^ 2 + 0.15e2 / 0.23e2 * eta + 0.17e2 / 0.115e3) * ci2 ^ 2 - 0.9e1 / 0.230e3 * eta ^ 2 - 0.3e1 / 0.46e2 * eta - 0.3e1 / 0.115e3) * Delta * (eta - 0.1e1) * sin((2 * g)) - 0.6880e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 + 0.56e2 / 0.43e2 * eta + 0.95e2 / 0.129e3) * ci2 ^ 6 + (-0.1579e4 / 0.1290e4 * eta ^ 2 - 0.1028e4 / 0.645e3 * eta - 0.75e2 / 0.86e2) * ci2 ^ 4 + (0.205e3 / 0.516e3 * eta ^ 2 + 0.667e3 / 0.1290e4 * eta + 0.133e3 / 0.516e3) * ci2 ^ 2 - 0.5e1 / 0.129e3 * eta ^ 2 - 0.13e2 / 0.258e3 * eta - 0.5e1 / 0.258e3) * (eta - 0.1e1) * sin((2 * h + 2 * f + 4 * g)) + 0.280e3 / 0.771e3 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - 0.9e1 / 0.7e1 * ci2 ^ 2 + 0.5e1 / 0.14e2) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * sin((-2 * g - 2 * h + 3 * f)) - 0.1480e4 / 0.771e3 * ((eta ^ 2 + 0.28e2 / 0.37e2 * eta - 0.81e2 / 0.37e2) * ci2 ^ 4 + (-0.41e2 / 0.37e2 * eta ^ 2 - 0.32e2 / 0.37e2 * eta + 0.81e2 / 0.37e2) * ci2 ^ 2 + 0.53e2 / 0.222e3 * eta ^ 2 + 0.22e2 / 0.111e3 * eta - 0.27e2 / 0.74e2) * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * sin((3 * f)) - 0.5840e4 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 4 + 0.91e2 / 0.73e2 * eta ^ 3 - 0.781e3 / 0.219e3 * eta ^ 2 - 0.1357e4 / 0.219e3 * eta - 0.230e3 / 0.73e2) * ci2 ^ 6 + (-0.907e3 / 0.730e3 * eta ^ 4 - 0.1129e4 / 0.730e3 * eta ^ 3 + 0.2997e4 / 0.730e3 * eta ^ 2 + 0.5253e4 / 0.730e3 * eta + 0.265e3 / 0.73e2) * ci2 ^ 4 + (0.153e3 / 0.365e3 * eta ^ 4 + 0.759e3 / 0.1460e4 * eta ^ 3 - 0.971e3 / 0.876e3 * eta ^ 2 - 0.8761e4 / 0.4380e4 * eta - 0.287e3 / 0.292e3) * ci2 ^ 2 - 0.13e2 / 0.292e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * sin((2 * h + 3 * f + 4 * g)) + 0.64e2 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 4 + eta ^ 3 / 0.16e2 + eta ^ 2 / 0.2e1 - 0.13e2 / 0.16e2 * eta - 0.15e2 / 0.2e1) * ci2 ^ 2 - eta ^ 4 / 0.2e1 + eta ^ 3 / 0.16e2 - eta ^ 2 / 0.16e2 - 0.13e2 / 0.16e2 * eta + 0.49e2 / 0.16e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * cos((-2 * h + 2 * g + 4 * f)) + 0.8240e4 / 0.771e3 * (0.1e1 + eta) ^ 2 * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 2 + 0.91e2 / 0.103e3 * eta - 0.72e2 / 0.103e3) * ci2 ^ 4 + (-0.132e3 / 0.103e3 * eta ^ 2 - 0.117e3 / 0.103e3 * eta + 0.87e2 / 0.103e3) * ci2 ^ 2 + 0.73e2 / 0.206e3 * eta ^ 2 + 0.65e2 / 0.206e3 * eta - 0.22e2 / 0.103e3) * sin((-2 * h - 2 * g + f)) + 0.52e2 / 0.6939e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 2 + eta / 0.13e2 + 0.51e2 / 0.13e2) * ci2 ^ 2 - 0.11e2 / 0.13e2 * eta ^ 2 + eta / 0.13e2 + 0.21e2 / 0.13e2) * (eta - 0.1e1) ^ 2 * cos((2 * g - 2 * h + 6 * f)) - 0.8e1 / 0.771e3 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 3 * cos((10 * f + 4 * g)) - 0.2e1 / 0.2313e4 * ci2 ^ 2 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 4 * (ci2 ^ 2 + 0.1e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((2 * g - 2 * h + 8 * f)) + 0.8e1 / 0.771e3 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 5 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((6 * g + 2 * h + 10 * f)) + 0.16e2 / 0.771e3 * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((2 * h + 4 * f)) + 0.650e3 / 0.771e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.4231e4 / 0.325e3 * eta ^ 4 + 0.4626e4 / 0.325e3 * eta ^ 3 - 0.10754e5 / 0.975e3 * eta ^ 2 - 0.34277e5 / 0.975e3 * eta - 0.27587e5 / 0.975e3) * ci2 ^ 6 + (-0.223e3 / 0.195e3 * eta ^ 5 - 0.16387e5 / 0.975e3 * eta ^ 4 - 0.19088e5 / 0.975e3 * eta ^ 3 + 0.4668e4 / 0.325e3 * eta ^ 2 + 0.1787e4 / 0.39e2 * eta + 0.11277e5 / 0.325e3) * ci2 ^ 4 + (0.193e3 / 0.650e3 * eta ^ 5 + 0.2389e4 / 0.390e3 * eta ^ 4 + 0.2632e4 / 0.325e3 * eta ^ 3 - 0.1652e4 / 0.325e3 * eta ^ 2 - 0.32299e5 / 0.1950e4 * eta - 0.7171e4 / 0.650e3) * ci2 ^ 2 - 0.19e2 / 0.650e3 * eta ^ 5 - 0.1627e4 / 0.1950e4 * eta ^ 4 - 0.79e2 / 0.65e2 * eta ^ 3 + 0.763e3 / 0.975e3 * eta ^ 2 + 0.4307e4 / 0.1950e4 * eta + 0.2269e4 / 0.1950e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 4 * g)) + 0.3220e4 / 0.2313e4 * ((eta ^ 2 + 0.979e3 / 0.805e3 * eta + 0.41e2 / 0.23e2) * ci2 ^ 4 + (-0.359e3 / 0.805e3 * eta ^ 2 - 0.429e3 / 0.805e3 * eta - 0.533e3 / 0.805e3) * ci2 ^ 2 + 0.8e1 / 0.115e3 * eta ^ 2 + 0.66e2 / 0.805e3 * eta + 0.64e2 / 0.805e3) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) ^ 2 * cos((6 * g + 2 * h + 2 * f)) - 0.480e3 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 6 + (-0.71e2 / 0.45e2 * eta ^ 3 - 0.6e1 / 0.5e1 * eta ^ 2 + 0.5e1 / 0.3e1 * eta + 0.52e2 / 0.45e2) * ci2 ^ 4 + (0.97e2 / 0.180e3 * eta ^ 3 + 0.7e1 / 0.20e2 * eta ^ 2 - 0.7e1 / 0.12e2 * eta - 0.59e2 / 0.180e3) * ci2 ^ 2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 / 0.60e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((2 * h)) + 0.3392e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * ((eta ^ 4 + 0.1109e4 / 0.848e3 * eta ^ 3 - 0.220e3 / 0.53e2 * eta ^ 2 - 0.6793e4 / 0.848e3 * eta - 0.571e3 / 0.106e3) * ci2 ^ 4 + (-0.79e2 / 0.212e3 * eta ^ 4 - 0.411e3 / 0.848e3 * eta ^ 3 + 0.1191e4 / 0.848e3 * eta ^ 2 + 0.2299e4 / 0.848e3 * eta + 0.1505e4 / 0.848e3) * ci2 ^ 2 + 0.21e2 / 0.424e3 * eta ^ 4 + 0.27e2 / 0.424e3 * eta ^ 3 - 0.55e2 / 0.424e3 * eta ^ 2 - 0.109e3 / 0.424e3 * eta - 0.15e2 / 0.106e3) * cos((6 * g + 2 * h + 4 * f)) + 0.11872e5 / 0.2313e4 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.18369e5 / 0.5936e4 * eta ^ 3 + 0.17687e5 / 0.5936e4 * eta ^ 2 + 0.4323e4 / 0.5936e4 * eta - 0.835e3 / 0.5936e4) * ci2 ^ 6 + (-0.993e3 / 0.742e3 * eta ^ 4 - 0.24233e5 / 0.5936e4 * eta ^ 3 - 0.3253e4 / 0.848e3 * eta ^ 2 - 0.4859e4 / 0.5936e4 * eta + 0.1527e4 / 0.5936e4) * ci2 ^ 4 + (0.393e3 / 0.742e3 * eta ^ 4 + 0.18931e5 / 0.11872e5 * eta ^ 3 + 0.17197e5 / 0.11872e5 * eta ^ 2 + 0.2777e4 / 0.11872e5 * eta - 0.1745e4 / 0.11872e5) * ci2 ^ 2 - 0.1231e4 / 0.17808e5 * eta ^ 4 - 0.89e2 / 0.424e3 * eta ^ 3 - 0.68e2 / 0.371e3 * eta ^ 2 - 0.29e2 / 0.2226e4 * eta + 0.25e2 / 0.848e3) * (eta - 0.1e1) ^ 2 * cos((4 * g + 2 * h)) + 0.4480e4 / 0.771e3 * ((eta ^ 4 + 0.59e2 / 0.14e2 * eta ^ 3 + 0.109e3 / 0.14e2 * eta ^ 2 + 0.93e2 / 0.14e2 * eta + 0.31e2 / 0.14e2) * ci2 ^ 4 + (-eta ^ 4 - 0.61e2 / 0.14e2 * eta ^ 3 - 0.58e2 / 0.7e1 * eta ^ 2 - 0.103e3 / 0.14e2 * eta - 0.18e2 / 0.7e1) * ci2 ^ 2 + eta ^ 4 / 0.6e1 + 0.67e2 / 0.84e2 * eta ^ 3 + 0.137e3 / 0.84e2 * eta ^ 2 + 0.19e2 / 0.12e2 * eta + 0.17e2 / 0.28e2) * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * (eta - 0.1e1) * sin((2 * g + 2 * h)) - 0.11840e5 / 0.771e3 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.18e2 / 0.37e2 * eta ^ 2 - 0.45e2 / 0.37e2 * eta - 0.44e2 / 0.37e2) * ci2 ^ 6 + (-0.419e3 / 0.370e3 * eta ^ 3 - 0.21e2 / 0.37e2 * eta ^ 2 + 0.507e3 / 0.370e3 * eta + 0.248e3 / 0.185e3) * ci2 ^ 4 + (0.427e3 / 0.1480e4 * eta ^ 3 + 0.237e3 / 0.1480e4 * eta ^ 2 - 0.507e3 / 0.1480e4 * eta - 0.497e3 / 0.1480e4) * ci2 ^ 2 - 0.3e1 / 0.296e3 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2) * Delta * sin((2 * h + 4 * f + 4 * g)) + 0.68e2 / 0.2313e4 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 - 0.16e2 / 0.17e2 * eta ^ 4 + 0.177e3 / 0.17e2 * eta ^ 3 - 0.79e2 / 0.17e2 * eta ^ 2 - 0.394e3 / 0.17e2 * eta + 0.267e3 / 0.17e2) * ci2 ^ 2 - 0.7e1 / 0.17e2 * eta ^ 5 + 0.8e1 / 0.17e2 * eta ^ 4 - 0.93e2 / 0.17e2 * eta ^ 3 + 0.29e2 / 0.17e2 * eta ^ 2 + 0.184e3 / 0.17e2 * eta - 0.133e3 / 0.17e2) * cos((-2 * h + 2 * g + 2 * f)) + 0.1360e4 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.231e3 / 0.136e3 * eta ^ 4 - 0.302e3 / 0.51e2 * eta ^ 3 - 0.6209e4 / 0.1020e4 * eta ^ 2 + 0.673e3 / 0.51e2 * eta + 0.9091e4 / 0.680e3) * ci2 ^ 6 + (-0.319e3 / 0.255e3 * eta ^ 5 - 0.4249e4 / 0.2040e4 * eta ^ 4 + 0.1903e4 / 0.255e3 * eta ^ 3 + 0.7993e4 / 0.1020e4 * eta ^ 2 - 0.3958e4 / 0.255e3 * eta - 0.10723e5 / 0.680e3) * ci2 ^ 4 + (0.7e1 / 0.17e2 * eta ^ 5 + 0.857e3 / 0.1360e4 * eta ^ 4 - 0.131e3 / 0.51e2 * eta ^ 3 - 0.5563e4 / 0.2040e4 * eta ^ 2 + 0.1166e4 / 0.255e3 * eta + 0.6297e4 / 0.1360e4) * ci2 ^ 2 - 0.77e2 / 0.2040e4 * (0.1e1 + eta) * (eta ^ 4 - 0.8e1 / 0.77e2 * eta ^ 3 - 0.94e2 / 0.11e2 * eta ^ 2 + 0.877e3 / 0.77e2)) * (eta - 0.1e1) * cos((2 * g + 4 * f)) + 0.1600e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 + 0.689e3 / 0.400e3 * eta ^ 2 - 0.1721e4 / 0.200e3 * eta - 0.1051e4 / 0.80e2) * ci2 ^ 6 + (-0.61e2 / 0.50e2 * eta ^ 3 - 0.801e3 / 0.400e3 * eta ^ 2 + 0.1973e4 / 0.200e3 * eta + 0.5783e4 / 0.400e3) * ci2 ^ 4 + (0.19e2 / 0.50e2 * eta ^ 3 + 0.443e3 / 0.800e3 * eta ^ 2 - 0.41e2 / 0.16e2 * eta - 0.2697e4 / 0.800e3) * ci2 ^ 2 - 0.19e2 / 0.600e3 * (0.1e1 + eta) * (eta ^ 2 + 0.5e1 / 0.38e2 * eta - 0.147e3 / 0.38e2)) * cos((6 * f + 2 * g)) - 0.16e2 / 0.771e3 * ((eta + 0.3e1 / 0.8e1) * ci2 ^ 6 + (-eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (eta / 0.3e1 + 0.11e2 / 0.48e2) * ci2 ^ 2 - eta / 0.24e2 - 0.1e1 / 0.24e2) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 3 * cos((4 * f - 2 * g)) - 0.967e3 / 0.4626e4 * ((eta ^ 5 - 0.6411e4 / 0.967e3 * eta ^ 4 - 0.15834e5 / 0.967e3 * eta ^ 3 + 0.16698e5 / 0.967e3 * eta ^ 2 + 0.44707e5 / 0.967e3 * eta + 0.19329e5 / 0.967e3) * ci2 ^ 6 + (-0.1271e4 / 0.967e3 * eta ^ 5 + 0.6491e4 / 0.967e3 * eta ^ 4 + 0.16482e5 / 0.967e3 * eta ^ 3 - 0.18658e5 / 0.967e3 * eta ^ 2 - 0.48219e5 / 0.967e3 * eta - 0.20617e5 / 0.967e3) * ci2 ^ 4 + (0.1093e4 / 0.1934e4 * eta ^ 5 - 0.937e3 / 0.1934e4 * eta ^ 4 - 0.1875e4 / 0.967e3 * eta ^ 3 + 0.4635e4 / 0.967e3 * eta ^ 2 + 0.51539e5 / 0.5802e4 * eta + 0.6115e4 / 0.1934e4) * ci2 ^ 2 - 0.66e2 / 0.967e3 * (0.1e1 + eta) * (eta ^ 4 + 0.112e3 / 0.33e2 * eta ^ 3 + 0.62e2 / 0.11e2 * eta ^ 2 - 0.100e3 / 0.33e2 * eta - 0.287e3 / 0.33e2)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * h + 3 * f)) + 0.3080e4 / 0.2313e4 * (0.1e1 + eta) * ((0.10e2 + eta ^ 6 - 0.458e3 / 0.385e3 * eta ^ 5 + 0.7698e4 / 0.385e3 * eta - 0.4364e4 / 0.385e3 * eta ^ 4 - 0.4808e4 / 0.385e3 * eta ^ 3 + 0.2993e4 / 0.385e3 * eta ^ 2) * ci2 ^ 8 + (-0.112e3 / 0.5e1 - 0.207e3 / 0.77e2 * eta ^ 6 + 0.91e2 / 0.55e2 * eta ^ 5 + 0.11554e5 / 0.385e3 * eta ^ 3 - 0.929e3 / 0.55e2 * eta ^ 2 - 0.17447e5 / 0.385e3 * eta + 0.10042e5 / 0.385e3 * eta ^ 4) * ci2 ^ 6 + (0.6959e4 / 0.385e3 - 0.1482e4 / 0.55e2 * eta ^ 3 + 0.2058e4 / 0.55e2 * eta - 0.243e3 / 0.11e2 * eta ^ 4 - 0.36e2 / 0.385e3 * eta ^ 5 + 0.1047e4 / 0.385e3 * eta ^ 6 + 0.461e3 / 0.35e2 * eta ^ 2) * ci2 ^ 4 + (0.4034e4 / 0.385e3 * eta ^ 3 - 0.461e3 / 0.35e2 * eta + 0.443e3 / 0.55e2 * eta ^ 4 - 0.2367e4 / 0.385e3 - 0.207e3 / 0.385e3 * eta ^ 5 - 0.456e3 / 0.385e3 * eta ^ 6 - 0.238e3 / 0.55e2 * eta ^ 2) * ci2 ^ 2 - 0.1077e4 / 0.770e3 * eta ^ 3 + 0.193e3 / 0.385e3 * eta ^ 2 - 0.1579e4 / 0.1540e4 * eta ^ 4 + 0.2487e4 / 0.1540e4 * eta + 0.1121e4 / 0.1540e4 + 0.27e2 / 0.154e3 * eta ^ 6 + 0.29e2 / 0.220e3 * eta ^ 5) * cos((2 * h + 2 * g + 2 * f)) + ((0.4203e4 / 0.257e3 + eta ^ 6 - 0.7652e4 / 0.771e3 * eta ^ 5 + 0.126004e6 / 0.2313e4 * eta - 0.68575e5 / 0.2313e4 * eta ^ 4 - 0.680e3 / 0.2313e4 * eta ^ 3 + 0.43793e5 / 0.771e3 * eta ^ 2) * ci2 ^ 8 + (-0.27658e5 / 0.771e3 - 0.2e1 * eta ^ 6 + 0.52736e5 / 0.2313e4 * eta ^ 5 - 0.1184e4 / 0.771e3 * eta ^ 3 - 0.293590e6 / 0.2313e4 * eta ^ 2 - 0.277664e6 / 0.2313e4 * eta + 0.151558e6 / 0.2313e4 * eta ^ 4) * ci2 ^ 6 + (0.63868e5 / 0.2313e4 + 0.4576e4 / 0.2313e4 * eta ^ 3 + 0.208736e6 / 0.2313e4 * eta - 0.111260e6 / 0.2313e4 * eta ^ 4 - 0.4416e4 / 0.257e3 * eta ^ 5 + 0.4e1 / 0.3e1 * eta ^ 6 + 0.218644e6 / 0.2313e4 * eta ^ 2) * ci2 ^ 4 + (-0.1016e4 / 0.2313e4 * eta ^ 3 - 0.6820e4 / 0.257e3 * eta + 0.10231e5 / 0.771e3 * eta ^ 4 - 0.20017e5 / 0.2313e4 + 0.3700e4 / 0.771e3 * eta ^ 5 - eta ^ 6 / 0.3e1 - 0.61393e5 / 0.2313e4 * eta ^ 2) * ci2 ^ 2 - 0.16e2 / 0.771e3 * eta ^ 3 + 0.22531e5 / 0.9252e4 * eta ^ 2 - 0.11419e5 / 0.9252e4 * eta ^ 4 + 0.672e3 / 0.257e3 * eta + 0.2845e4 / 0.3084e4 + eta ^ 6 / 0.36e2 - 0.1040e4 / 0.2313e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * cos(f) - 0.20224e5 / 0.2313e4 * (eta - 0.1e1) * ((0.2451e4 / 0.2528e4 + eta ^ 6 + 0.1085e4 / 0.316e3 * eta ^ 5 + (-0.150e3 / 0.79e2 * Delta ^ 2 + 0.14767e5 / 0.7584e4) * eta ^ 4 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.5801e4 / 0.1264e4) * eta ^ 3 + (-0.450e3 / 0.79e2 * Delta ^ 2 - 0.432e3 / 0.79e2) * eta ^ 2 + (-0.150e3 / 0.79e2 * Delta ^ 2 - 0.1429e4 / 0.3792e4) * eta) * ci2 ^ 8 + (-0.5385e4 / 0.2528e4 - 0.2931e4 / 0.1264e4 * eta ^ 6 - 0.19821e5 / 0.2528e4 * eta ^ 5 + (0.360e3 / 0.79e2 * Delta ^ 2 - 0.10279e5 / 0.2528e4) * eta ^ 4 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.7089e4 / 0.632e3) * eta ^ 3 + (0.1080e4 / 0.79e2 * Delta ^ 2 + 0.16503e5 / 0.1264e4) * eta ^ 2 + (0.360e3 / 0.79e2 * Delta ^ 2 + 0.2849e4 / 0.2528e4) * eta) * ci2 ^ 6 + (0.2065e4 / 0.1264e4 + 0.4653e4 / 0.2528e4 * eta ^ 6 + 0.7745e4 / 0.1264e4 * eta ^ 5 + (-0.306e3 / 0.79e2 * Delta ^ 2 + 0.1369e4 / 0.474e3) * eta ^ 4 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.1467e4 / 0.158e3) * eta ^ 3 + (-0.918e3 / 0.79e2 * Delta ^ 2 - 0.26615e5 / 0.2528e4) * eta ^ 2 + (-0.306e3 / 0.79e2 * Delta ^ 2 - 0.3727e4 / 0.3792e4) * eta) * ci2 ^ 4 + (-0.40e2 / 0.79e2 - 0.737e3 / 0.1264e4 * eta ^ 6 - 0.4821e4 / 0.2528e4 * eta ^ 5 + (0.108e3 / 0.79e2 * Delta ^ 2 - 0.1023e4 / 0.1264e4) * eta ^ 4 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.1913e4 / 0.632e3) * eta ^ 3 + (0.324e3 / 0.79e2 * Delta ^ 2 + 0.263e3 / 0.79e2) * eta ^ 2 + (0.108e3 / 0.79e2 * Delta ^ 2 + 0.769e3 / 0.2528e4) * eta) * ci2 ^ 2 + 0.537e3 / 0.10112e5 + 0.171e3 / 0.2528e4 * eta ^ 6 + 0.2191e4 / 0.10112e5 * eta ^ 5 + (-0.27e2 / 0.158e3 * Delta ^ 2 + 0.2671e4 / 0.30336e5) * eta ^ 4 + (-0.1721e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 3 + (-0.1869e4 / 0.5056e4 - 0.81e2 / 0.158e3 * Delta ^ 2) * eta ^ 2 + (-0.27e2 / 0.158e3 * Delta ^ 2 - 0.1111e4 / 0.30336e5) * eta) * cos((2 * g + 2 * h)) + 0.136e3 / 0.2313e4 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * cos((2 * g + 2 * h + 6 * f)) - 0.443e3 / 0.771e3 * (0.1e1 + eta) * ((-0.7205e4 / 0.443e3 + eta ^ 5 - 0.13677e5 / 0.443e3 * eta + 0.3051e4 / 0.443e3 * eta ^ 4 + 0.13654e5 / 0.1329e4 * eta ^ 3 - 0.16850e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 8 + (0.15866e5 / 0.443e3 - 0.902e3 / 0.443e3 * eta ^ 5 - 0.31796e5 / 0.1329e4 * eta ^ 3 + 0.36748e5 / 0.1329e4 * eta ^ 2 + 0.91174e5 / 0.1329e4 * eta - 0.21146e5 / 0.1329e4 * eta ^ 4) * ci2 ^ 6 + (-0.37688e5 / 0.1329e4 + 0.27520e5 / 0.1329e4 * eta ^ 3 - 0.73372e5 / 0.1329e4 * eta + 0.18128e5 / 0.1329e4 * eta ^ 4 + 0.1852e4 / 0.1329e4 * eta ^ 5 - 0.28792e5 / 0.1329e4 * eta ^ 2) * ci2 ^ 4 + (-0.3438e4 / 0.443e3 * eta ^ 3 + 0.25037e5 / 0.1329e4 * eta - 0.6719e4 / 0.1329e4 * eta ^ 4 + 0.12569e5 / 0.1329e4 - 0.161e3 / 0.443e3 * eta ^ 5 + 0.9478e4 / 0.1329e4 * eta ^ 2) * ci2 ^ 2 + 0.8011e4 / 0.7974e4 * eta ^ 3 - 0.6461e4 / 0.7974e4 * eta ^ 2 + 0.1143e4 / 0.1772e4 * eta ^ 4 - 0.35617e5 / 0.15948e5 * eta - 0.1949e4 / 0.1772e4 + 0.169e3 / 0.5316e4 * eta ^ 5) * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * h + 3 * f + 2 * g)) + 0.176e3 / 0.257e3 * (0.1e1 + eta) * ((0.325e3 / 0.396e3 + 0.269e3 / 0.396e3 * eta + eta ^ 4 + 0.449e3 / 0.132e3 * eta ^ 3 + 0.967e3 / 0.396e3 * eta ^ 2) * ci2 ^ 8 + (-0.68e2 / 0.99e2 - 0.989e3 / 0.99e2 * eta ^ 3 - 0.229e3 / 0.33e2 * eta ^ 2 - eta / 0.3e1 - 0.101e3 / 0.33e2 * eta ^ 4) * ci2 ^ 6 + (-0.92e2 / 0.99e2 + 0.358e3 / 0.33e2 * eta ^ 3 - 0.136e3 / 0.99e2 * eta + 0.38e2 / 0.11e2 * eta ^ 4 + 0.712e3 / 0.99e2 * eta ^ 2) * ci2 ^ 4 + (-0.219e3 / 0.44e2 * eta ^ 3 + 0.515e3 / 0.396e3 * eta - 0.18e2 / 0.11e2 * eta ^ 4 + 0.409e3 / 0.396e3 - 0.1241e4 / 0.396e3 * eta ^ 2) * ci2 ^ 2 + 0.1213e4 / 0.1584e4 * eta ^ 3 + 0.727e3 / 0.1584e4 * eta ^ 2 + 0.17e2 / 0.66e2 * eta ^ 4 - 0.347e3 / 0.1584e4 - 0.433e3 / 0.1584e4 * eta) * (eta - 0.1e1) ^ 2 * cos((-2 * g - 2 * h + 2 * f)) - 0.136e3 / 0.2313e4 * (0.1e1 + eta) ^ 3 * ((eta + 0.151e3 / 0.34e2) * ci2 ^ 8 + (-0.39e2 / 0.17e2 * eta - 0.156e3 / 0.17e2) * ci2 ^ 6 + (0.33e2 / 0.17e2 * eta + 0.111e3 / 0.17e2) * ci2 ^ 4 + (-0.12e2 / 0.17e2 * eta - 0.63e2 / 0.34e2) * ci2 ^ 2 + 0.3e1 / 0.34e2 * eta + 0.25e2 / 0.136e3) * (eta - 0.1e1) ^ 3 * cos((6 * f)) - 0.944e3 / 0.2313e4 * ((eta ^ 3 + 0.115e3 / 0.59e2 * eta ^ 2 - 0.721e3 / 0.118e3 * eta - 0.1301e4 / 0.118e3) * ci2 ^ 8 + (-0.148e3 / 0.59e2 * eta ^ 3 - 0.565e3 / 0.118e3 * eta ^ 2 + 0.791e3 / 0.59e2 * eta + 0.2787e4 / 0.118e3) * ci2 ^ 6 + (0.279e3 / 0.118e3 * eta ^ 3 + 0.519e3 / 0.118e3 * eta ^ 2 - 0.628e3 / 0.59e2 * eta - 0.1060e4 / 0.59e2) * ci2 ^ 4 + (-0.57e2 / 0.59e2 * eta ^ 3 - 0.207e3 / 0.118e3 * eta ^ 2 + 0.421e3 / 0.118e3 * eta + 0.335e3 / 0.59e2) * ci2 ^ 2 + 0.8e1 / 0.59e2 * eta ^ 3 + 0.115e3 / 0.472e3 * eta ^ 2 - 0.24e2 / 0.59e2 * eta - 0.5e1 / 0.8e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((4 * f)) - 0.3064e4 / 0.2313e4 * (0.1e1 + eta) * (eta - 0.1e1) * ((0.8025e4 / 0.766e3 + eta ^ 5 + 0.3855e4 / 0.383e3 * eta + 0.233e3 / 0.766e3 * eta ^ 4 - 0.2466e4 / 0.383e3 * eta ^ 3 - 0.2213e4 / 0.383e3 * eta ^ 2) * ci2 ^ 8 + (-0.8760e4 / 0.383e3 - 0.1081e4 / 0.383e3 * eta ^ 5 + 0.5738e4 / 0.383e3 * eta ^ 3 + 0.6288e4 / 0.383e3 * eta ^ 2 - 0.7689e4 / 0.383e3 * eta - 0.848e3 / 0.383e3 * eta ^ 4) * ci2 ^ 6 + (0.6775e4 / 0.383e3 - 0.5034e4 / 0.383e3 * eta ^ 3 + 0.4923e4 / 0.383e3 * eta + 0.1389e4 / 0.383e3 * eta ^ 4 + 0.1143e4 / 0.383e3 * eta ^ 5 - 0.6940e4 / 0.383e3 * eta ^ 2) * ci2 ^ 4 + (0.1944e4 / 0.383e3 * eta ^ 3 - 0.1040e4 / 0.383e3 * eta - 0.1593e4 / 0.766e3 * eta ^ 4 - 0.4325e4 / 0.766e3 - 0.516e3 / 0.383e3 * eta ^ 5 + 0.3299e4 / 0.383e3 * eta ^ 2) * ci2 ^ 2 - 0.264e3 / 0.383e3 * eta ^ 3 - 0.2067e4 / 0.1532e4 * eta ^ 2 + 0.1087e4 / 0.3064e4 * eta ^ 4 + 0.1895e4 / 0.3064e4 + 0.75e2 / 0.766e3 * eta + 0.157e3 / 0.766e3 * eta ^ 5) * cos((2 * f)) + 0.1084e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((-0.2608e4 / 0.271e3 - 0.4375e4 / 0.271e3 * eta + eta ^ 4 + 0.631e3 / 0.271e3 * eta ^ 3 - 0.1695e4 / 0.271e3 * eta ^ 2) * ci2 ^ 8 + (0.5621e4 / 0.271e3 - 0.1432e4 / 0.271e3 * eta ^ 3 + 0.3750e4 / 0.271e3 * eta ^ 2 + 0.9580e4 / 0.271e3 * eta - 0.647e3 / 0.271e3 * eta ^ 4) * ci2 ^ 6 + (-0.4318e4 / 0.271e3 + 0.1188e4 / 0.271e3 * eta ^ 3 - 0.7556e4 / 0.271e3 * eta + 0.576e3 / 0.271e3 * eta ^ 4 - 0.3010e4 / 0.271e3 * eta ^ 2) * ci2 ^ 4 + (-0.423e3 / 0.271e3 * eta ^ 3 + 0.2515e4 / 0.271e3 * eta - 0.222e3 / 0.271e3 * eta ^ 4 + 0.1385e4 / 0.271e3 + 0.1025e4 / 0.271e3 * eta ^ 2) * ci2 ^ 2 + 0.213e3 / 0.1084e4 * eta ^ 3 - 0.481e3 / 0.1084e4 * eta ^ 2 + 0.59e2 / 0.542e3 * eta ^ 4 - 0.1165e4 / 0.1084e4 * eta - 0.621e3 / 0.1084e4) * cos((2 * h + 2 * g + 4 * f)) + 0.44e2 / 0.771e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.25e2 / 0.11e2 * eta + 0.2e1 / 0.11e2) * ci2 ^ 8 + (-0.101e3 / 0.33e2 * eta ^ 2 - 0.20e2 / 0.3e1 * eta - 0.47e2 / 0.33e2) * ci2 ^ 6 + (0.38e2 / 0.11e2 * eta ^ 2 + 0.80e2 / 0.11e2 * eta + 0.26e2 / 0.11e2) * ci2 ^ 4 + (-0.18e2 / 0.11e2 * eta ^ 2 - 0.37e2 / 0.11e2 * eta - 0.15e2 / 0.11e2) * ci2 ^ 2 + 0.17e2 / 0.66e2 * eta ^ 2 + 0.23e2 / 0.44e2 * eta + 0.31e2 / 0.132e3) * (eta - 0.1e1) ^ 3 * cos((-2 * g - 2 * h + 4 * f)) - 0.2204e4 / 0.771e3 * (0.1e1 + eta) * sqrt(-eta ^ 2 + 0.1e1) * ((-0.7550e4 / 0.1653e4 + eta ^ 5 - 0.4792e4 / 0.1653e4 * eta - 0.805e3 / 0.1653e4 * eta ^ 4 - 0.173e3 / 0.57e2 * eta ^ 3 - 0.2209e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 8 + (0.16990e5 / 0.1653e4 - 0.1202e4 / 0.551e3 * eta ^ 5 + 0.10004e5 / 0.1653e4 * eta ^ 3 + 0.3716e4 / 0.1653e4 * eta ^ 2 + 0.3574e4 / 0.551e3 * eta + 0.1598e4 / 0.1653e4 * eta ^ 4) * ci2 ^ 6 + (-0.13679e5 / 0.1653e4 - 0.5888e4 / 0.1653e4 * eta ^ 3 - 0.9536e4 / 0.1653e4 * eta - 0.5e1 / 0.19e2 * eta ^ 4 + 0.2704e4 / 0.1653e4 * eta ^ 5 - 0.2462e4 / 0.1653e4 * eta ^ 2) * ci2 ^ 4 + (0.851e3 / 0.1653e4 * eta ^ 3 + 0.3874e4 / 0.1653e4 * eta - 0.388e3 / 0.1653e4 * eta ^ 4 + 0.4603e4 / 0.1653e4 - 0.267e3 / 0.551e3 * eta ^ 5 + 0.853e3 / 0.1653e4 * eta ^ 2) * ci2 ^ 2 + 0.7e1 / 0.551e3 * eta ^ 3 - 0.37e2 / 0.551e3 * eta ^ 2 + 0.401e3 / 0.6612e4 * eta ^ 4 - 0.2149e4 / 0.6612e4 - 0.2129e4 / 0.6612e4 * eta + 0.317e3 / 0.6612e4 * eta ^ 5) * cos((2 * h + f + 2 * g)) + 0.1001e4 / 0.771e3 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((-0.7627e4 / 0.3003e4 + eta ^ 5 + 0.5617e4 / 0.1001e4 * eta + 0.9959e4 / 0.1001e4 * eta ^ 4 + 0.78194e5 / 0.3003e4 * eta ^ 3 + 0.25362e5 / 0.1001e4 * eta ^ 2) * ci2 ^ 8 + (0.15014e5 / 0.3003e4 - 0.2402e4 / 0.1001e4 * eta ^ 5 - 0.60052e5 / 0.1001e4 * eta ^ 3 - 0.175876e6 / 0.3003e4 * eta ^ 2 - 0.42430e5 / 0.3003e4 * eta - 0.69506e5 / 0.3003e4 * eta ^ 4) * ci2 ^ 6 + (-0.64e2 / 0.21e2 + 0.141208e6 / 0.3003e4 * eta ^ 3 + 0.12508e5 / 0.1001e4 * eta + 0.4240e4 / 0.231e3 * eta ^ 4 + 0.6004e4 / 0.3003e4 * eta ^ 5 + 0.3568e4 / 0.77e2 * eta ^ 2) * ci2 ^ 4 + (-0.1114e4 / 0.77e2 * eta ^ 3 - 0.13753e5 / 0.3003e4 * eta - 0.17179e5 / 0.3003e4 * eta ^ 4 + 0.535e3 / 0.1001e4 - 0.667e3 / 0.1001e4 * eta ^ 5 - 0.2082e4 / 0.143e3 * eta ^ 2) * ci2 ^ 2 + 0.3057e4 / 0.2002e4 * eta ^ 3 + 0.9605e4 / 0.6006e4 * eta ^ 2 + 0.557e3 / 0.924e3 * eta ^ 4 + 0.661e3 / 0.1092e4 * eta + 0.289e3 / 0.4004e4 * eta ^ 5 + 0.61e2 / 0.12012e5) * cos((-2 * h - 2 * g + f)) - 0.176e3 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * ((eta ^ 5 - 0.123e3 / 0.22e2 * eta ^ 4 - 0.479e3 / 0.22e2 * eta ^ 3 + 0.1647e4 / 0.22e2 * eta ^ 2 + 0.1059e4 / 0.22e2 * eta - 0.1172e4 / 0.11e2) * ci2 ^ 4 + (-0.8e1 / 0.11e2 * eta ^ 5 + 0.43e2 / 0.22e2 * eta ^ 4 + 0.101e3 / 0.11e2 * eta ^ 3 - 0.274e3 / 0.11e2 * eta ^ 2 - 0.183e3 / 0.11e2 * eta + 0.777e3 / 0.22e2) * ci2 ^ 2 + eta ^ 5 / 0.22e2 - 0.3e1 / 0.11e2 * eta ^ 4 - 0.16e2 / 0.11e2 * eta ^ 3 + 0.27e2 / 0.11e2 * eta ^ 2 + 0.49e2 / 0.22e2 * eta - 0.30e2 / 0.11e2) * cos((4 * f + 4 * g)) + 0.1408e4 / 0.771e3 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((-0.1047e4 / 0.176e3 + eta ^ 6 + 0.131e3 / 0.176e3 * eta ^ 5 + 0.2731e4 / 0.264e3 * eta ^ 3 - 0.799e3 / 0.264e3 * eta ^ 2 - 0.8399e4 / 0.528e3 * eta + 0.1427e4 / 0.528e3 * eta ^ 4) * ci2 ^ 6 + (0.1467e4 / 0.176e3 - 0.1077e4 / 0.88e2 * eta ^ 3 + 0.9979e4 / 0.528e3 * eta - 0.557e3 / 0.176e3 * eta ^ 4 - 0.541e3 / 0.528e3 * eta ^ 5 - 0.169e3 / 0.132e3 * eta ^ 6 + 0.629e3 / 0.264e3 * eta ^ 2) * ci2 ^ 4 + (0.2033e4 / 0.528e3 * eta ^ 3 - 0.6097e4 / 0.1056e4 * eta + 0.1061e4 / 0.1056e4 * eta ^ 4 - 0.1249e4 / 0.352e3 + 0.415e3 / 0.1056e4 * eta ^ 5 + 0.5e1 / 0.12e2 * eta ^ 6 + 0.179e3 / 0.528e3 * eta ^ 2) * ci2 ^ 2 - 0.35e2 / 0.88e2 * eta ^ 3 + 0.149e3 / 0.264e3 - 0.113e3 / 0.264e3 * eta ^ 2 - eta ^ 4 / 0.88e2 + 0.23e2 / 0.48e2 * eta - 0.3e1 / 0.88e2 * eta ^ 6 - eta ^ 5 / 0.48e2) * cos((2 * g + 2 * f)) + 0.4784e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 5 + 0.45e2 / 0.52e2 * eta ^ 4 - 0.3645e4 / 0.598e3 * eta ^ 3 - 0.30e2 / 0.23e2 * eta ^ 2 + 0.3487e4 / 0.598e3 * eta - 0.3e1 / 0.1196e4) * ci2 ^ 6 + (-0.383e3 / 0.299e3 * eta ^ 5 - 0.1087e4 / 0.1196e4 * eta ^ 4 + 0.2168e4 / 0.299e3 * eta ^ 3 + 0.769e3 / 0.598e3 * eta ^ 2 - 0.2035e4 / 0.299e3 * eta + 0.269e3 / 0.1196e4) * ci2 ^ 4 + (0.129e3 / 0.299e3 * eta ^ 5 + 0.409e3 / 0.2392e4 * eta ^ 4 - 0.205e3 / 0.92e2 * eta ^ 3 - 0.5e1 / 0.26e2 * eta ^ 2 + 0.563e3 / 0.276e3 * eta - 0.389e3 / 0.2392e4) * ci2 ^ 2 - 0.9e1 / 0.299e3 * eta ^ 5 + 0.5e1 / 0.1196e4 * eta ^ 4 + 0.85e2 / 0.598e3 * eta ^ 3 - 0.21e2 / 0.1196e4 * eta ^ 2 - 0.38e2 / 0.299e3 * eta + 0.11e2 / 0.598e3) * cos((2 * h)) - 0.5e1 / 0.257e3 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (eta - 0.1e1) ^ 3 * sqrt(-eta ^ 2 + 0.1e1) * cos((7 * f)) - 0.3e1 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.1378e4 / 0.27e2 * eta - 0.3313e4 / 0.27e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.1040e4 / 0.9e1 * eta + 0.2330e4 / 0.9e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 - 0.2600e4 / 0.27e2 * eta - 0.5180e4 / 0.27e2) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.310e3 / 0.9e1 * eta + 0.175e3 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.38e2 / 0.9e1 * eta - 0.671e3 / 0.108e3) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((5 * f)) + 0.277e3 / 0.771e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((-0.21535e5 / 0.831e3 - 0.5070e4 / 0.277e3 * eta + eta ^ 4 + 0.2254e4 / 0.277e3 * eta ^ 3 + 0.8848e4 / 0.831e3 * eta ^ 2) * ci2 ^ 8 + (0.15550e5 / 0.277e3 - 0.16336e5 / 0.831e3 * eta ^ 3 - 0.22460e5 / 0.831e3 * eta ^ 2 + 0.32048e5 / 0.831e3 * eta - 0.2e1 * eta ^ 4) * ci2 ^ 6 + (-0.35980e5 / 0.831e3 + 0.14936e5 / 0.831e3 * eta ^ 3 - 0.23416e5 / 0.831e3 * eta + 0.4e1 / 0.3e1 * eta ^ 4 + 0.21848e5 / 0.831e3 * eta ^ 2) * ci2 ^ 4 + (-0.5978e4 / 0.831e3 * eta ^ 3 + 0.2270e4 / 0.277e3 * eta - eta ^ 4 / 0.3e1 + 0.11545e5 / 0.831e3 - 0.3100e4 / 0.277e3 * eta ^ 2) * ci2 ^ 2 + 0.2474e4 / 0.2493e4 * eta ^ 3 + 0.8069e4 / 0.4986e4 * eta ^ 2 + eta ^ 4 / 0.36e2 - 0.5125e4 / 0.3324e4 - 0.1930e4 / 0.2493e4 * eta) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f)) + 0.841e3 / 0.1542e4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((-0.6153e4 / 0.841e3 + eta ^ 6 + 0.19064e5 / 0.841e3 * eta ^ 5 - 0.13840e5 / 0.841e3 * eta ^ 3 - 0.95765e5 / 0.841e3 * eta ^ 2 - 0.60840e5 / 0.841e3 * eta + 0.45525e5 / 0.841e3 * eta ^ 4) * ci2 ^ 6 + (0.10161e5 / 0.841e3 + 0.17216e5 / 0.841e3 * eta ^ 3 + 0.78864e5 / 0.841e3 * eta - 0.57581e5 / 0.841e3 * eta ^ 4 - 0.24912e5 / 0.841e3 * eta ^ 5 - 0.1097e4 / 0.841e3 * eta ^ 6 + 0.119621e6 / 0.841e3 * eta ^ 2) * ci2 ^ 4 + (-0.16640e5 / 0.2523e4 * eta ^ 3 - 0.86584e5 / 0.2523e4 * eta + 0.120781e6 / 0.5046e4 * eta ^ 4 - 0.10459e5 / 0.1682e4 + 0.28216e5 / 0.2523e4 * eta ^ 5 + 0.1059e4 / 0.1682e4 * eta ^ 6 - 0.242533e6 / 0.5046e4 * eta ^ 2) * ci2 ^ 2 - 0.208e3 / 0.2523e4 * (0.1e1 + eta) * (eta ^ 5 + 0.343e3 / 0.26e2 * eta ^ 4 + 0.425e3 / 0.26e2 * eta ^ 3 - 0.489e3 / 0.26e2 * eta ^ 2 - 0.903e3 / 0.26e2 * eta - 0.173e3 / 0.13e2)) * cos((f + 2 * g)) + 0.137e3 / 0.1542e4 * ((-0.91019e5 / 0.411e3 + eta ^ 6 - 0.6840e4 / 0.137e3 * eta ^ 5 + 0.53936e5 / 0.411e3 * eta ^ 3 - 0.3061e4 / 0.137e3 * eta ^ 2 - 0.149960e6 / 0.411e3 * eta - 0.18097e5 / 0.411e3 * eta ^ 4) * ci2 ^ 6 + (0.114707e6 / 0.411e3 - 0.73088e5 / 0.411e3 * eta ^ 3 + 0.180368e6 / 0.411e3 * eta + 0.7315e4 / 0.137e3 * eta ^ 4 + 0.8272e4 / 0.137e3 * eta ^ 5 - 0.667e3 / 0.411e3 * eta ^ 6 - 0.2545e4 / 0.411e3 * eta ^ 2) * ci2 ^ 4 + (0.91120e5 / 0.1233e4 * eta ^ 3 - 0.171232e6 / 0.1233e4 * eta - 0.31913e5 / 0.2466e4 * eta ^ 4 - 0.79937e5 / 0.822e3 - 0.2384e4 / 0.137e3 * eta ^ 5 + 0.291e3 / 0.274e3 * eta ^ 6 + 0.64625e5 / 0.2466e4 * eta ^ 2) * ci2 ^ 2 - 0.16e2 / 0.137e3 * (0.1e1 + eta) * (eta ^ 5 - 0.14e2 * eta ^ 4 + 0.103e3 / 0.6e1 * eta ^ 3 + 0.599e3 / 0.6e1 * eta ^ 2 - 0.121e3 / 0.6e1 * eta - 0.213e3 / 0.2e1)) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * cos((3 * f + 2 * g)) + 0.62e2 / 0.771e3 * ((eta ^ 3 - 0.298e3 / 0.93e2 * eta ^ 2 - 0.623e3 / 0.93e2 * eta - 0.40e2 / 0.93e2) * ci2 ^ 8 + (-0.70e2 / 0.31e2 * eta ^ 3 + 0.322e3 / 0.31e2 * eta ^ 2 + 0.678e3 / 0.31e2 * eta + 0.158e3 / 0.31e2) * ci2 ^ 6 + (0.164e3 / 0.93e2 * eta ^ 3 - 0.386e3 / 0.31e2 * eta ^ 2 - 0.2432e4 / 0.93e2 * eta - 0.854e3 / 0.93e2) * ci2 ^ 4 + (-0.17e2 / 0.31e2 * eta ^ 3 + 0.578e3 / 0.93e2 * eta ^ 2 + 0.1205e4 / 0.93e2 * eta + 0.512e3 / 0.93e2) * ci2 ^ 2 + 0.7e1 / 0.124e3 * eta ^ 3 - 0.379e3 / 0.372e3 * eta ^ 2 - 0.2347e4 / 0.1116e4 * eta - 0.361e3 / 0.372e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g - 2 * h + 3 * f)) - 0.2224e4 / 0.771e3 * ((0.5201e4 / 0.556e3 + eta ^ 6 + 0.519e3 / 0.556e3 * eta ^ 5 - 0.10607e5 / 0.834e3 * eta ^ 3 + 0.917e3 / 0.834e3 * eta ^ 2 + 0.24745e5 / 0.1668e4 * eta - 0.12385e5 / 0.1668e4 * eta ^ 4) * ci2 ^ 6 + (-0.6083e4 / 0.556e3 + 0.4313e4 / 0.278e3 * eta ^ 3 - 0.9895e4 / 0.556e3 * eta + 0.5001e4 / 0.556e3 * eta ^ 4 - 0.723e3 / 0.556e3 * eta ^ 5 - 0.179e3 / 0.139e3 * eta ^ 6 - 0.369e3 / 0.278e3 * eta ^ 2) * ci2 ^ 4 + (-0.8189e4 / 0.1668e4 * eta ^ 3 + 0.17647e5 / 0.3336e4 * eta - 0.9143e4 / 0.3336e4 * eta ^ 4 + 0.10237e5 / 0.3336e4 + 0.1907e4 / 0.3336e4 * eta ^ 5 + 0.65e2 / 0.139e3 * eta ^ 6 + 0.533e3 / 0.1668e4 * eta ^ 2) * ci2 ^ 2 - 0.49e2 / 0.834e3 * (0.1e1 + eta) * (eta ^ 5 + 0.51e2 / 0.98e2 * eta ^ 4 - 0.34e2 / 0.7e1 * eta ^ 3 - 0.355e3 / 0.98e2 * eta ^ 2 + 0.188e3 / 0.49e2 * eta + 0.199e3 / 0.49e2)) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((2 * h + 4 * f + 4 * g)) + 0.1556e4 / 0.2313e4 * (0.1e1 + eta) ^ 2 * ((eta ^ 5 + 0.184e3 / 0.389e3 * eta ^ 4 - 0.2751e4 / 0.389e3 * eta ^ 3 - 0.2207e4 / 0.389e3 * eta ^ 2 + 0.2458e4 / 0.389e3 * eta + 0.2979e4 / 0.389e3) * ci2 ^ 4 + (-0.119e3 / 0.389e3 * eta ^ 5 - 0.60e2 / 0.389e3 * eta ^ 4 + 0.853e3 / 0.389e3 * eta ^ 3 + 0.687e3 / 0.389e3 * eta ^ 2 - 0.2294e4 / 0.1167e4 * eta - 0.931e3 / 0.389e3) * ci2 ^ 2 + 0.32e2 / 0.1167e4 * (0.1e1 + eta) * (eta - 0.1e1) * (eta ^ 3 + 0.9e1 / 0.16e2 * eta ^ 2 - 0.53e2 / 0.16e2 * eta - 0.27e2 / 0.8e1)) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((6 * g + 2 * h + 6 * f)) + 0.10e2 / 0.257e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sqrt(-eta ^ 2 + 0.1e1) * ((eta ^ 3 - 0.734e3 / 0.45e2 * eta ^ 2 - 0.2359e4 / 0.45e2 * eta - 0.1652e4 / 0.45e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.110e3 / 0.3e1 * eta ^ 2 + 0.1694e4 / 0.15e2 * eta + 0.1162e4 / 0.15e2) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 - 0.272e3 / 0.9e1 * eta ^ 2 - 0.3908e4 / 0.45e2 * eta - 0.2584e4 / 0.45e2) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.32e2 / 0.3e1 * eta ^ 2 + 0.419e3 / 0.15e2 * eta + 0.262e3 / 0.15e2) * ci2 ^ 2 + eta ^ 3 / 0.36e2 - 0.233e3 / 0.180e3 * eta ^ 2 - 0.113e3 / 0.36e2 * eta - 0.67e2 / 0.36e2) * cos((2 * h + 5 * f + 2 * g)) + (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (eta - 0.1e1) ^ 4 * sqrt(-eta ^ 2 + 0.1e1) * cos((-2 * g - 2 * h + 5 * f)) / 0.257e3 + 0.5e1 / 0.257e3 * (0.1e1 + eta) ^ 4 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (eta - 0.1e1) ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * cos((2 * g + 2 * h + 7 * f)) + 0.3200e4 / 0.257e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.2e1 / 0.5e1 * eta ^ 2 - 0.6e1 / 0.5e1 * eta - 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.21e2 / 0.20e2 * eta ^ 3 - 0.9e1 / 0.20e2 * eta ^ 2 + 0.5e1 / 0.4e1 * eta + 0.17e2 / 0.20e2) * ci2 ^ 2 + eta ^ 3 / 0.5e1 + eta ^ 2 / 0.10e2 - 0.7e1 / 0.30e2 * eta - 0.1e1 / 0.6e1) * Delta * (ci2 ^ 4 - 0.6e1 / 0.5e1 * ci2 ^ 2 + 0.3e1 / 0.10e2) * sin((2 * h + 2 * g + 2 * f))) * R__e ^ 4 * J ^ 2 / (0.1e1 + eta) ^ 2 / a ^ 4 / eta ^ 11];

Dsp2t1 = [D1; D2; D3; D4; D5; D6];

D1 = [0.45e2 / 0.4e1 * J ^ 2 * R__e ^ 4 * ((-0.83e2 / 0.20e2 * ((eta ^ 4 + 0.266e3 / 0.83e2 * eta ^ 3 + 0.396e3 / 0.83e2 * eta ^ 2 - 0.610e3 / 0.83e2 * eta - 0.991e3 / 0.83e2) * ci2 ^ 4 + (-eta ^ 4 - 0.266e3 / 0.83e2 * eta ^ 3 - 0.396e3 / 0.83e2 * eta ^ 2 + 0.610e3 / 0.83e2 * eta + 0.991e3 / 0.83e2) * ci2 ^ 2 + 0.33e2 / 0.166e3 * eta ^ 4 + 0.40e2 / 0.83e2 * eta ^ 3 + 0.59e2 / 0.83e2 * eta ^ 2 - 0.88e2 / 0.83e2 * eta - 0.303e3 / 0.166e3) * (ci2 - 0.1e1) * ci2 ^ 2 * (ci2 + 0.1e1) * cos((3 * f + 2 * g)) + 0.27e2 / 0.40e2 * (ci2 - 0.1e1) * ((eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.116e3 / 0.9e1 * eta + 0.269e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.64e2 / 0.27e2 * eta - 0.281e3 / 0.54e2) * (eta - 0.1e1) * (0.1e1 + eta) * ci2 ^ 2 * (ci2 + 0.1e1) * cos((5 * f + 2 * g)) + 0.9e1 * (ci2 - 0.1e1) * (0.1e1 + eta) * Delta * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.5e1) * sin((3 * f + 2 * g)) + 0.3e1 * (ci2 - 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * sin((5 * f + 2 * g)) + 0.3e1 / 0.40e2 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((3 * f - 2 * g)) + 0.3e1 / 0.4e1 * (ci2 - 0.1e1) ^ 2 * (eta ^ 2 - 0.11e2 / 0.15e2) * (0.1e1 + eta) * ci2 ^ 4 * (ci2 + 0.1e1) ^ 2 * cos((3 * f + 4 * g)) - 0.9e1 / 0.20e2 * ci2 ^ 4 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((5 * f + 4 * g)) + 0.3e1 / 0.8e1 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((2 * g + 7 * f)) - 0.11e2 / 0.20e2 * ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((4 * g + 7 * f)) - 0.9e1 / 0.40e2 * (ci2 - 0.1e1) * ((eta - 0.37e2) * ci2 ^ 4 + (-eta + 0.37e2) * ci2 ^ 2 + eta / 0.6e1 - 0.163e3 / 0.18e2) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 2 * (ci2 + 0.1e1) * cos((-2 * g + f)) - 0.51e2 / 0.4e1 * (ci2 - 0.1e1) * ci2 ^ 2 * (ci2 + 0.1e1) * ((eta ^ 4 + 0.6e1 / 0.17e2 * eta ^ 3 - 0.12e2 / 0.17e2 * eta ^ 2 + 0.58e2 / 0.85e2 * eta + 0.71e2 / 0.85e2) * ci2 ^ 4 + (-eta ^ 4 - 0.6e1 / 0.17e2 * eta ^ 3 + 0.12e2 / 0.17e2 * eta ^ 2 - 0.58e2 / 0.85e2 * eta - 0.71e2 / 0.85e2) * ci2 ^ 2 + 0.101e3 / 0.510e3 * eta ^ 4 - 0.53e2 / 0.255e3 * eta ^ 2 + 0.16e2 / 0.51e2 * eta + 0.173e3 / 0.510e3) * cos((f + 2 * g)) + 0.9e1 * (ci2 - 0.1e1) * (0.1e1 + eta) * Delta * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.5e1) * sin((f + 2 * g)) - 0.3e1 * (ci2 - 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * sin((-2 * g + f)) + 0.13e2 / 0.20e2 * ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((4 * g + f)) - 0.9e1 / 0.20e2 * (eta - 0.1e1) * (0.1e1 + eta) * ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 + 0.20e2 / 0.9e1 * eta + 0.470e3 / 0.9e1) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 - 0.40e2 / 0.9e1 * eta - 0.340e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.10e2 / 0.3e1 * eta + 0.35e2 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.5e1 / 0.9e1 * eta - 0.5e1 / 0.4e1) * cos((3 * f)) - 0.9e1 / 0.20e2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * cos((5 * f)) + 0.9e1 / 0.10e2 * cos(f) * ((0.5e1 / 0.3e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.3e1 * eta ^ 2 - 0.235e3 / 0.9e1 * eta - 0.406e3 / 0.9e1) * ci2 ^ 8 + (-0.70e2 / 0.3e1 * eta ^ 2 - 0.2e1 * eta ^ 4 - 0.10e2 / 0.3e1 * eta ^ 3 + 0.470e3 / 0.9e1 * eta + 0.812e3 / 0.9e1) * ci2 ^ 6 + (0.20e2 * eta ^ 2 + 0.20e2 / 0.3e1 * eta ^ 3 - 0.44e2 * eta + 0.4e1 / 0.3e1 * eta ^ 4 - 0.208e3 / 0.3e1) * ci2 ^ 4 + (0.218e3 / 0.9e1 - 0.25e2 / 0.3e1 * eta ^ 2 - 0.5e1 * eta ^ 3 - eta ^ 4 / 0.3e1 + 0.161e3 / 0.9e1 * eta) * ci2 ^ 2 + eta ^ 4 / 0.36e2 - 0.35e2 / 0.12e2 - 0.43e2 / 0.18e2 * eta + 0.10e2 / 0.9e1 * eta ^ 2 + 0.5e1 / 0.6e1 * eta ^ 3)) * sqrt(-eta ^ 2 + 0.1e1) + (0.13e2 / 0.10e2 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * ci2 ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.26e2 * eta + 0.8e1 / 0.13e2) * (ci2 + 0.1e1) * cos((6 * f + 2 * g)) - 0.3e1 / 0.2e1 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * ci2 ^ 2 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-eta - 0.4e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * cos((-2 * g + 2 * f)) - 0.3e1 / 0.5e1 * (ci2 - 0.1e1) * ((eta ^ 4 + 0.20e2 * eta ^ 3 + 0.12e2 * eta ^ 2 + 0.12e2 * eta - 0.37e2) * ci2 ^ 4 + (-eta ^ 4 - 0.20e2 * eta ^ 3 - 0.12e2 * eta ^ 2 - 0.12e2 * eta + 0.37e2) * ci2 ^ 2 + eta ^ 4 / 0.2e1 + 0.4e1 * eta ^ 3 - eta ^ 2 + 0.2e1 * eta - 0.17e2 / 0.6e1) * ci2 ^ 2 * (ci2 + 0.1e1) * cos((2 * g + 2 * f)) + 0.12e2 / 0.5e1 * (ci2 - 0.1e1) * ((eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 4 + (-eta ^ 3 - 0.3e1 * eta ^ 2 + 0.39e2 / 0.4e1 * eta + 0.73e2 / 0.4e1) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + eta ^ 2 / 0.2e1 - 0.5e1 / 0.3e1 * eta - 0.37e2 / 0.12e2) * (eta - 0.1e1) * ci2 ^ 2 * (ci2 + 0.1e1) * cos((2 * g + 4 * f)) - 0.3e1 / 0.10e2 * ci2 ^ 4 * (eta - 0.1e1) * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((2 * f + 4 * g)) - 0.3e1 / 0.20e2 * (ci2 - 0.1e1) ^ 2 * (eta ^ 4 + 0.2e1 * eta ^ 2 - 0.25e2 / 0.3e1) * ci2 ^ 4 * (ci2 + 0.1e1) ^ 2 * cos((4 * f + 4 * g)) + ci2 ^ 4 * (eta - 0.1e1) * (eta - 0.4e1) * (eta + 0.4e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((6 * f + 4 * g)) / 0.10e2 + 0.3e1 / 0.40e2 * ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((8 * f + 4 * g)) + 0.36e2 * (ci2 - 0.1e1) * Delta * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.5e1 / 0.3e1) * sin((2 * g + 2 * f)) + (0.18e2 * (ci2 - 0.1e1) * (0.1e1 + eta) * Delta * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * sin((2 * g + 4 * f)) + ((0.26e2 - 0.13e2 / 0.5e1 * eta ^ 2 + 0.8e1 * eta + eta ^ 3) * ci2 ^ 8 + (-0.52e2 - 0.2e1 * eta ^ 3 + 0.26e2 / 0.5e1 * eta ^ 2 - 0.16e2 * eta) * ci2 ^ 6 + (0.39e2 + 0.3e1 / 0.5e1 * eta ^ 3 + 0.15e2 * eta - 0.21e2 / 0.5e1 * eta ^ 2) * ci2 ^ 4 + (-0.13e2 + 0.2e1 / 0.5e1 * eta ^ 3 - 0.7e1 * eta + 0.8e1 / 0.5e1 * eta ^ 2) * ci2 ^ 2 - (eta - 0.3e1) * (eta ^ 2 + 0.5e1 * eta + 0.5e1) / 0.10e2) * cos((2 * f)) + ((eta - 0.67e2 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta + 0.134e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.93e2 / 0.5e1) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta + 0.26e2 / 0.5e1) * ci2 ^ 2 - eta / 0.10e2 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * (0.1e1 + eta) * cos((4 * f)) / 0.4e1 - 0.6e1 * (ci2 - 0.1e1) * ci2 ^ 2 * (ci2 + 0.1e1) * ((eta ^ 4 + 0.23e2 / 0.15e2 * eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.79e2 / 0.30e2 * eta - 0.91e2 / 0.30e2) * ci2 ^ 4 + (-eta ^ 4 - 0.23e2 / 0.15e2 * eta ^ 3 - 0.11e2 / 0.15e2 * eta ^ 2 + 0.79e2 / 0.30e2 * eta + 0.91e2 / 0.30e2) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 4 + 0.11e2 / 0.30e2 * eta ^ 3 + eta ^ 2 / 0.6e1 - 0.11e2 / 0.15e2 * eta - 0.4e1 / 0.5e1) * cos((2 * g)) - ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((4 * g)) / 0.8e1 + 0.18e2 * (ci2 - 0.1e1) * (0.1e1 + eta) * Delta * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 + 0.1e1) * sin((2 * g)) + (0.7e1 / 0.4e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.4e1 * eta ^ 2 + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * ci2 ^ 8 + (-0.35e2 / 0.2e1 * eta ^ 2 - 0.2e1 * eta ^ 4 - 0.7e1 / 0.2e1 * eta ^ 3 - 0.65e2 / 0.2e1 * eta - 0.469e3 / 0.10e2) * ci2 ^ 6 + (0.241e3 / 0.20e2 * eta ^ 2 + 0.21e2 / 0.20e2 * eta ^ 3 + 0.107e3 / 0.4e1 * eta + 0.3e1 / 0.5e1 * eta ^ 4 + 0.727e3 / 0.20e2) * ci2 ^ 4 + (-0.129e3 / 0.10e2 - 0.33e2 / 0.10e2 * eta ^ 2 + 0.7e1 / 0.10e2 * eta ^ 3 + 0.2e1 / 0.5e1 * eta ^ 4 - 0.21e2 / 0.2e1 * eta) * ci2 ^ 2 - eta ^ 4 / 0.10e2 + 0.11e2 / 0.8e1 * eta + 0.13e2 / 0.40e2 * eta ^ 2 + 0.63e2 / 0.40e2 - 0.7e1 / 0.40e2 * eta ^ 3) * (eta - 0.1e1)) * (0.1e1 + eta)) / a ^ 4 / eta ^ 10 / (0.1e1 + eta) 0.90e2 * J ^ 2 * R__e ^ 4 * ((-0.3e1 / 0.1280e4 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ci2 ^ 2 * (ci2 + 0.1e1) * ((eta ^ 2 + 0.308e3 / 0.3e1 * eta + 0.87e2) * ci2 ^ 4 + (-eta ^ 2 - 0.308e3 / 0.3e1 * eta - 0.87e2) * ci2 ^ 2 + eta ^ 2 / 0.6e1 + 0.24e2 * eta + 0.385e3 / 0.18e2) * sin((3 * f - 2 * g)) + 0.937e3 / 0.1280e4 * (ci2 - 0.1e1) * ((eta ^ 6 + 0.3032e4 / 0.937e3 * eta ^ 5 - 0.75e2 / 0.937e3 * eta ^ 4 - 0.22288e5 / 0.937e3 * eta ^ 3 - 0.29205e5 / 0.937e3 * eta ^ 2 + 0.22776e5 / 0.937e3 * eta + 0.33207e5 / 0.937e3) * ci2 ^ 4 + (-eta ^ 6 - 0.3032e4 / 0.937e3 * eta ^ 5 + 0.75e2 / 0.937e3 * eta ^ 4 + 0.22288e5 / 0.937e3 * eta ^ 3 + 0.29205e5 / 0.937e3 * eta ^ 2 - 0.22776e5 / 0.937e3 * eta - 0.33207e5 / 0.937e3) * ci2 ^ 2 + 0.1129e4 / 0.5622e4 * eta ^ 6 + 0.496e3 / 0.937e3 * eta ^ 5 - 0.1283e4 / 0.5622e4 * eta ^ 4 - 0.11168e5 / 0.2811e4 * eta ^ 3 - 0.9431e4 / 0.1874e4 * eta ^ 2 + 0.3696e4 / 0.937e3 * eta + 0.10869e5 / 0.1874e4) * ci2 ^ 2 * (ci2 + 0.1e1) * sin((3 * f + 2 * g)) + 0.201e3 / 0.1280e4 * (ci2 - 0.1e1) * ((eta ^ 4 + 0.2980e4 / 0.201e3 * eta ^ 3 + 0.7030e4 / 0.201e3 * eta ^ 2 - 0.11908e5 / 0.201e3 * eta - 0.22703e5 / 0.201e3) * ci2 ^ 4 + (-eta ^ 4 - 0.2980e4 / 0.201e3 * eta ^ 3 - 0.7030e4 / 0.201e3 * eta ^ 2 + 0.11908e5 / 0.201e3 * eta + 0.22703e5 / 0.201e3) * ci2 ^ 2 + 0.265e3 / 0.1206e4 * eta ^ 4 + 0.1592e4 / 0.603e3 * eta ^ 3 + 0.1195e4 / 0.201e3 * eta ^ 2 - 0.6328e4 / 0.603e3 * eta - 0.7817e4 / 0.402e3) * (eta - 0.1e1) * (0.1e1 + eta) * ci2 ^ 2 * (ci2 + 0.1e1) * sin((5 * f + 2 * g)) - 0.23e2 / 0.256e3 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.1036e4 / 0.115e3 * eta - 0.3067e4 / 0.115e3) * ci2 ^ 4 + (-eta ^ 2 + 0.1036e4 / 0.115e3 * eta + 0.3067e4 / 0.115e3) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.584e3 / 0.345e3 * eta - 0.3199e4 / 0.690e3) * ci2 ^ 2 * (ci2 + 0.1e1) * sin((2 * g + 7 * f)) - (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((3 * f - 2 * g)) / 0.32e2 + 0.13e2 / 0.16e2 * (ci2 - 0.1e1) * (0.1e1 + eta) * Delta * ci2 ^ 2 * (eta ^ 4 - 0.14e2 * eta ^ 2 + 0.21e2) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((3 * f + 2 * g)) + 0.19e2 / 0.32e2 * (ci2 - 0.1e1) * (eta - 0.3e1) * (eta + 0.3e1) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((5 * f + 2 * g)) + 0.5e1 / 0.32e2 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((2 * g + 7 * f)) - 0.77e2 / 0.960e3 * (ci2 - 0.1e1) ^ 2 * (0.1e1 + eta) * ci2 ^ 4 * (ci2 + 0.1e1) ^ 2 * (eta ^ 4 - 0.118e3 / 0.77e2 * eta ^ 2 - 0.111e3 / 0.77e2) * sin((3 * f + 4 * g)) + 0.61e2 / 0.960e3 * ci2 ^ 4 * (0.1e1 + eta) * (eta ^ 4 - 0.14e2 * eta ^ 2 + 0.21e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * f + 4 * g)) + 0.25e2 / 0.384e3 * ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((9 * f + 4 * g)) + 0.59e2 / 0.384e3 * (ci2 - 0.1e1) ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 4 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 - 0.1503e4 / 0.295e3) * sin((4 * g + 7 * f)) - 0.3e1 / 0.1280e4 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((5 * f - 2 * g)) - 0.7e1 / 0.256e3 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * sin((2 * g + 9 * f)) + 0.983e3 / 0.1280e4 * (ci2 - 0.1e1) * ci2 ^ 2 * ((eta ^ 6 + 0.1576e4 / 0.983e3 * eta ^ 5 - 0.3861e4 / 0.983e3 * eta ^ 4 - 0.12144e5 / 0.983e3 * eta ^ 3 - 0.9131e4 / 0.983e3 * eta ^ 2 + 0.10632e5 / 0.983e3 * eta + 0.12009e5 / 0.983e3) * ci2 ^ 4 + (-eta ^ 6 - 0.1576e4 / 0.983e3 * eta ^ 5 + 0.3861e4 / 0.983e3 * eta ^ 4 + 0.12144e5 / 0.983e3 * eta ^ 3 + 0.9131e4 / 0.983e3 * eta ^ 2 - 0.10632e5 / 0.983e3 * eta - 0.12009e5 / 0.983e3) * ci2 ^ 2 + 0.1175e4 / 0.5898e4 * eta ^ 6 + 0.752e3 / 0.2949e4 * eta ^ 5 - 0.1695e4 / 0.1966e4 * eta ^ 4 - 0.5984e4 / 0.2949e4 * eta ^ 3 - 0.2665e4 / 0.1966e4 * eta ^ 2 + 0.1616e4 / 0.983e3 * eta + 0.3691e4 / 0.1966e4) * (ci2 + 0.1e1) * sin((f + 2 * g)) - 0.327e3 / 0.1280e4 * (ci2 - 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) * ci2 ^ 2 * ((eta ^ 4 + 0.796e3 / 0.327e3 * eta ^ 3 + 0.442e3 / 0.327e3 * eta ^ 2 - 0.2492e4 / 0.327e3 * eta - 0.2449e4 / 0.327e3) * ci2 ^ 4 + (-eta ^ 4 - 0.796e3 / 0.327e3 * eta ^ 3 - 0.442e3 / 0.327e3 * eta ^ 2 + 0.2492e4 / 0.327e3 * eta + 0.2449e4 / 0.327e3) * ci2 ^ 2 + 0.391e3 / 0.1962e4 * eta ^ 4 + 0.488e3 / 0.981e3 * eta ^ 3 + 0.31e2 / 0.109e3 * eta ^ 2 - 0.168e3 / 0.109e3 * eta - 0.2981e4 / 0.1962e4) * (ci2 + 0.1e1) * sin((-2 * g + f)) + 0.7e1 / 0.16e2 * (ci2 - 0.1e1) * (0.1e1 + eta) * Delta * ci2 ^ 2 * (eta ^ 4 - 0.14e2 * eta ^ 2 + 0.21e2) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((f + 2 * g)) + (ci2 - 0.1e1) * (eta - 0.3e1) * (eta + 0.3e1) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((-2 * g + f)) / 0.32e2 + 0.13e2 / 0.1920e4 * ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-4 * g + f)) - 0.119e3 / 0.1920e4 * (ci2 - 0.1e1) ^ 2 * (eta ^ 2 - 0.303e3 / 0.119e3) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 4 * (ci2 + 0.1e1) ^ 2 * sin((4 * g + f)) + 0.27e2 / 0.640e3 * (eta - 0.1e1) * (0.1e1 + eta) * ((0.50e2 / 0.27e2 * eta ^ 3 + eta ^ 4 - 0.1120e4 / 0.27e2 * eta ^ 2 + 0.1850e4 / 0.81e2 * eta + 0.10319e5 / 0.81e2) * ci2 ^ 8 + (0.2240e4 / 0.27e2 * eta ^ 2 - 0.2e1 * eta ^ 4 - 0.100e3 / 0.27e2 * eta ^ 3 - 0.3700e4 / 0.81e2 * eta - 0.20638e5 / 0.81e2) * ci2 ^ 6 + (-0.544e3 / 0.9e1 * eta ^ 2 - 0.8e1 / 0.3e1 * eta ^ 3 + 0.1288e4 / 0.27e2 * eta + 0.4e1 / 0.3e1 * eta ^ 4 + 0.1684e4 / 0.9e1) * ci2 ^ 4 + (-0.4837e4 / 0.81e2 + 0.512e3 / 0.27e2 * eta ^ 2 + 0.122e3 / 0.27e2 * eta ^ 3 - eta ^ 4 / 0.3e1 - 0.2014e4 / 0.81e2 * eta) * ci2 ^ 2 + eta ^ 4 / 0.36e2 + 0.301e3 / 0.81e2 * eta - 0.37e2 / 0.18e2 * eta ^ 2 + 0.715e3 / 0.108e3 - 0.23e2 / 0.27e2 * eta ^ 3) * sin((3 * f)) + 0.39e2 / 0.640e3 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.50e2 / 0.117e3 * eta - 0.2047e4 / 0.117e3) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 - 0.100e3 / 0.117e3 * eta + 0.4094e4 / 0.117e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 - 0.8e1 / 0.13e2 * eta - 0.956e3 / 0.39e2) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.122e3 / 0.117e3 * eta + 0.821e3 / 0.117e3) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.23e2 / 0.117e3 * eta - 0.25e2 / 0.36e2) * sin((5 * f)) + 0.3e1 / 0.128e3 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * sin((7 * f)) + 0.3e1 / 0.640e3 * ((0.100e3 / 0.9e1 * eta ^ 5 + 0.200e3 * eta ^ 3 - 0.1295e4 / 0.9e1 * eta ^ 4 + 0.875e3 * eta ^ 2 - 0.1220e4 / 0.3e1 * eta + eta ^ 6 - 0.2975e4 / 0.3e1) * ci2 ^ 8 + (-0.1750e4 * eta ^ 2 - 0.2e1 * eta ^ 6 + 0.2590e4 / 0.9e1 * eta ^ 4 - 0.400e3 * eta ^ 3 + 0.2440e4 / 0.3e1 * eta - 0.200e3 / 0.9e1 * eta ^ 5 + 0.5950e4 / 0.3e1) * ci2 ^ 6 + (0.4012e4 / 0.3e1 * eta ^ 2 + 0.1312e4 / 0.3e1 * eta ^ 3 + 0.4e1 / 0.3e1 * eta ^ 6 - 0.16e2 * eta ^ 5 - 0.720e3 * eta - 0.668e3 / 0.3e1 * eta ^ 4 - 0.1500e4) * ci2 ^ 4 + (0.1525e4 / 0.3e1 - 0.1387e4 / 0.3e1 * eta ^ 2 - 0.712e3 / 0.3e1 * eta ^ 3 - eta ^ 6 / 0.3e1 + 0.244e3 / 0.9e1 * eta ^ 5 + 0.709e3 / 0.9e1 * eta ^ 4 + 0.940e3 / 0.3e1 * eta) * ci2 ^ 2 - 0.113e3 / 0.12e2 * eta ^ 4 - 0.715e3 / 0.12e2 + eta ^ 6 / 0.36e2 - 0.130e3 / 0.3e1 * eta + 0.219e3 / 0.4e1 * eta ^ 2 - 0.46e2 / 0.9e1 * eta ^ 5 + 0.36e2 * eta ^ 3) * sin(f)) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * ((ci2 - 0.1e1) * ((eta + 0.1e1 / 0.2e1) * ci2 ^ 4 + (-eta - 0.1e1 / 0.2e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 2 * ci2 ^ 2 * (ci2 + 0.1e1) * sin((4 * f - 2 * g)) / 0.32e2 - 0.21e2 / 0.80e2 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * ci2 ^ 2 * ((eta ^ 3 + 0.30e2 / 0.7e1 * eta ^ 2 - 0.41e2 / 0.3e1 * eta - 0.218e3 / 0.7e1) * ci2 ^ 4 + (-eta ^ 3 - 0.30e2 / 0.7e1 * eta ^ 2 + 0.41e2 / 0.3e1 * eta + 0.218e3 / 0.7e1) * ci2 ^ 2 + 0.23e2 / 0.126e3 * eta ^ 3 + 0.46e2 / 0.63e2 * eta ^ 2 - 0.5e1 / 0.2e1 * eta - 0.341e3 / 0.63e2) * (ci2 + 0.1e1) * sin((6 * f + 2 * g)) - 0.13e2 / 0.160e3 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 2 * ((eta + 0.127e3 / 0.26e2) * ci2 ^ 4 + (-eta - 0.127e3 / 0.26e2) * ci2 ^ 2 + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * ci2 ^ 2 * (ci2 + 0.1e1) * sin((8 * f + 2 * g)) + (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * ci2 ^ 2 * ((eta ^ 3 + 0.4e1 / 0.5e1 * eta ^ 2 - 0.67e2 / 0.5e1 * eta - 0.64e2 / 0.5e1) * ci2 ^ 4 + (-eta ^ 3 - 0.4e1 / 0.5e1 * eta ^ 2 + 0.67e2 / 0.5e1 * eta + 0.64e2 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 3 + eta ^ 2 / 0.5e1 - 0.91e2 / 0.30e2 * eta - 0.44e2 / 0.15e2) * (ci2 + 0.1e1) * sin((-2 * g + 2 * f)) / 0.16e2 - 0.3e1 / 0.40e2 * (ci2 - 0.1e1) * ((eta ^ 6 - 0.38e2 * eta ^ 5 - 0.57e2 * eta ^ 4 + 0.32e2 * eta ^ 3 + 0.769e3 / 0.3e1 * eta ^ 2 + 0.54e2 * eta - 0.243e3) * ci2 ^ 4 + (-eta ^ 6 + 0.38e2 * eta ^ 5 + 0.57e2 * eta ^ 4 - 0.32e2 * eta ^ 3 - 0.769e3 / 0.3e1 * eta ^ 2 - 0.54e2 * eta + 0.243e3) * ci2 ^ 2 + eta ^ 6 / 0.18e2 - 0.23e2 / 0.3e1 * eta ^ 5 - 0.47e2 / 0.6e1 * eta ^ 4 + 0.68e2 / 0.9e1 * eta ^ 3 + 0.233e3 / 0.6e1 * eta ^ 2 + 0.9e1 * eta - 0.229e3 / 0.6e1) * ci2 ^ 2 * (ci2 + 0.1e1) * sin((2 * g + 2 * f)) - 0.43e2 / 0.160e3 * (ci2 - 0.1e1) * (eta - 0.1e1) * ci2 ^ 2 * ((eta ^ 5 - 0.161e3 / 0.86e2 * eta ^ 4 - 0.1374e4 / 0.43e2 * eta ^ 3 - 0.2303e4 / 0.43e2 * eta ^ 2 + 0.2499e4 / 0.43e2 * eta + 0.8271e4 / 0.86e2) * ci2 ^ 4 + (-eta ^ 5 + 0.161e3 / 0.86e2 * eta ^ 4 + 0.1374e4 / 0.43e2 * eta ^ 3 + 0.2303e4 / 0.43e2 * eta ^ 2 - 0.2499e4 / 0.43e2 * eta - 0.8271e4 / 0.86e2) * ci2 ^ 2 + 0.41e2 / 0.258e3 * eta ^ 5 - 0.87e2 / 0.172e3 * eta ^ 4 - 0.713e3 / 0.129e3 * eta ^ 3 - 0.769e3 / 0.86e2 * eta ^ 2 + 0.851e3 / 0.86e2 * eta + 0.2793e4 / 0.172e3) * (ci2 + 0.1e1) * sin((2 * g + 4 * f)) - ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((10 * f + 4 * g)) / 0.160e3 + 0.11e2 / 0.8e1 * (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((6 * f + 2 * g)) - (ci2 - 0.1e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((-2 * g + 2 * f)) / 0.8e1 + 0.15e2 / 0.4e1 * (ci2 - 0.1e1) * (eta ^ 4 - 0.14e2 / 0.3e1 * eta ^ 2 + 0.21e2 / 0.5e1) * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((2 * g + 2 * f)) + 0.4e1 * (ci2 - 0.1e1) * (eta - 0.1e1) * (0.1e1 + eta) * Delta * ci2 ^ 2 * (ci2 + 0.1e1) * (eta ^ 2 - 0.3e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((2 * g + 4 * f)) + 0.3e1 / 0.160e3 * (ci2 - 0.1e1) ^ 2 * (eta ^ 4 - 0.94e2 / 0.9e1 * eta ^ 2 + 0.31e2 / 0.3e1) * (eta - 0.1e1) * (0.1e1 + eta) * ci2 ^ 4 * (ci2 + 0.1e1) ^ 2 * sin((2 * f + 4 * g)) + (ci2 - 0.1e1) ^ 2 * (eta ^ 6 + 0.5e1 * eta ^ 4 - 0.175e3 / 0.3e1 * eta ^ 2 + 0.63e2) * ci2 ^ 4 * (ci2 + 0.1e1) ^ 2 * sin((4 * f + 4 * g)) / 0.80e2 + (eta - 0.1e1) * (-(ci2 - 0.1e1) ^ 2 * (0.1e1 + eta) * ci2 ^ 4 * (eta ^ 4 - 0.124e3 / 0.3e1 * eta ^ 2 + 0.103e3) * (ci2 + 0.1e1) ^ 2 * sin((6 * f + 4 * g)) / 0.80e2 - 0.3e1 / 0.160e3 * (ci2 - 0.1e1) ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ci2 ^ 4 * (eta ^ 2 - 0.143e3 / 0.9e1) * (ci2 + 0.1e1) ^ 2 * sin((8 * f + 4 * g)) + ((-0.5e1 / 0.96e2 * eta ^ 5 - 0.5e1 / 0.16e2 * eta ^ 3 + 0.4e1 / 0.15e2 * eta ^ 4 - 0.73e2 / 0.20e2 * eta ^ 2 + 0.65e2 / 0.32e2 * eta + 0.131e3 / 0.20e2) * ci2 ^ 8 + (0.73e2 / 0.10e2 * eta ^ 2 - 0.8e1 / 0.15e2 * eta ^ 4 + 0.5e1 / 0.8e1 * eta ^ 3 - 0.65e2 / 0.16e2 * eta + 0.5e1 / 0.48e2 * eta ^ 5 - 0.131e3 / 0.10e2) * ci2 ^ 6 + (-0.439e3 / 0.80e2 * eta ^ 2 - 0.83e2 / 0.80e2 * eta ^ 3 - eta ^ 5 / 0.32e2 + 0.603e3 / 0.160e3 * eta + 0.63e2 / 0.160e3 * eta ^ 4 + 0.1567e4 / 0.160e3) * ci2 ^ 4 + (-0.519e3 / 0.160e3 + 0.147e3 / 0.80e2 * eta ^ 2 + 0.29e2 / 0.40e2 * eta ^ 3 - eta ^ 5 / 0.48e2 - 0.61e2 / 0.480e3 * eta ^ 4 - 0.139e3 / 0.80e2 * eta) * ci2 ^ 2 + 0.9e1 / 0.640e3 * eta ^ 4 + 0.143e3 / 0.384e3 + 0.79e2 / 0.320e3 * eta - 0.203e3 / 0.960e3 * eta ^ 2 + eta ^ 5 / 0.192e3 - 0.19e2 / 0.160e3 * eta ^ 3) * sin((2 * f)) - ((eta ^ 3 - 0.58e2 / 0.5e1 * eta ^ 2 + 0.4e1 * eta + 0.353e3 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.116e3 / 0.5e1 * eta ^ 2 - 0.8e1 * eta - 0.706e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta ^ 3 - 0.81e2 / 0.5e1 * eta ^ 2 + 0.63e2 / 0.5e1 * eta + 0.507e3 / 0.5e1) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta ^ 3 + 0.23e2 / 0.5e1 * eta ^ 2 - 0.43e2 / 0.5e1 * eta - 0.154e3 / 0.5e1) * ci2 ^ 2 - eta ^ 3 / 0.10e2 - 0.9e1 / 0.20e2 * eta ^ 2 + 0.7e1 / 0.5e1 * eta + 0.13e2 / 0.4e1) * (eta - 0.1e1) * (0.1e1 + eta) * sin((4 * f)) / 0.24e2 - (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((eta - 0.112e3 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta + 0.224e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * ci2 ^ 2 - eta / 0.10e2 - 0.3e1 / 0.4e1) * sin((6 * f)) / 0.96e2 + (ci2 - 0.1e1) * ci2 ^ 2 * (((-0.265e3 / 0.64e2 - 0.3e1 / 0.160e3 * eta ^ 5 + 0.253e3 / 0.160e3 * eta ^ 2 - 0.651e3 / 0.160e3 * eta + 0.483e3 / 0.320e3 * eta ^ 4 + 0.239e3 / 0.80e2 * eta ^ 3) * ci2 ^ 4 + (0.3e1 / 0.160e3 * eta ^ 5 - 0.239e3 / 0.80e2 * eta ^ 3 - 0.483e3 / 0.320e3 * eta ^ 4 + 0.651e3 / 0.160e3 * eta + 0.265e3 / 0.64e2 - 0.253e3 / 0.160e3 * eta ^ 2) * ci2 ^ 2 + 0.583e3 / 0.1920e4 * eta ^ 4 + 0.241e3 / 0.960e3 * eta ^ 2 - eta ^ 5 / 0.960e3 + 0.257e3 / 0.480e3 * eta ^ 3 - 0.219e3 / 0.320e3 * eta - 0.1337e4 / 0.1920e4) * sin((2 * g)) + (Delta * (eta ^ 2 - 0.3e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((2 * g)) + (ci2 - 0.1e1) * (eta ^ 2 - 0.25e2 / 0.3e1) * (eta - 0.1e1) * (0.1e1 + eta) * ci2 ^ 2 * (ci2 + 0.1e1) * sin((4 * g)) / 0.160e3) * (0.1e1 + eta)) * (ci2 + 0.1e1)))) / a ^ 3 / eta ^ 13 / (0.1e1 + eta) 0.30e2 * J ^ 2 * ci2 ^ 3 * R__e ^ 4 * sqrt(-ci2 ^ 2 + 0.1e1) * ((-0.83e2 / 0.40e2 * ci2 ^ 2 * ((eta ^ 4 + 0.266e3 / 0.83e2 * eta ^ 3 + 0.396e3 / 0.83e2 * eta ^ 2 - 0.610e3 / 0.83e2 * eta - 0.991e3 / 0.83e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.665e3 / 0.166e3 * eta ^ 3 - 0.495e3 / 0.83e2 * eta ^ 2 + 0.1525e4 / 0.166e3 * eta + 0.4955e4 / 0.332e3) * ci2 ^ 2 + 0.29e2 / 0.83e2 * eta ^ 4 + 0.173e3 / 0.166e3 * eta ^ 3 + 0.257e3 / 0.166e3 * eta ^ 2 - 0.393e3 / 0.166e3 * eta - 0.647e3 / 0.166e3) * cos((h + 3 * f + 2 * g)) - 0.51e2 / 0.8e1 * ((eta ^ 4 + 0.6e1 / 0.17e2 * eta ^ 3 - 0.12e2 / 0.17e2 * eta ^ 2 + 0.58e2 / 0.85e2 * eta + 0.71e2 / 0.85e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.15e2 / 0.34e2 * eta ^ 3 + 0.15e2 / 0.17e2 * eta ^ 2 - 0.29e2 / 0.34e2 * eta - 0.71e2 / 0.68e2) * ci2 ^ 2 + 0.89e2 / 0.255e3 * eta ^ 4 + 0.3e1 / 0.34e2 * eta ^ 3 - 0.143e3 / 0.510e3 * eta ^ 2 + 0.167e3 / 0.510e3 * eta + 0.193e3 / 0.510e3) * ci2 ^ 2 * cos((h + f + 2 * g)) - 0.83e2 / 0.40e2 * ((eta ^ 4 + 0.266e3 / 0.83e2 * eta ^ 3 + 0.396e3 / 0.83e2 * eta ^ 2 - 0.610e3 / 0.83e2 * eta - 0.991e3 / 0.83e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.399e3 / 0.166e3 * eta ^ 3 - 0.297e3 / 0.83e2 * eta ^ 2 + 0.915e3 / 0.166e3 * eta + 0.2973e4 / 0.332e3) * ci2 ^ 2 + 0.33e2 / 0.332e3 * eta ^ 4 + 0.20e2 / 0.83e2 * eta ^ 3 + 0.59e2 / 0.166e3 * eta ^ 2 - 0.44e2 / 0.83e2 * eta - 0.303e3 / 0.332e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 3 * f + 2 * g)) - 0.51e2 / 0.8e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.6e1 / 0.17e2 * eta ^ 3 - 0.12e2 / 0.17e2 * eta ^ 2 + 0.58e2 / 0.85e2 * eta + 0.71e2 / 0.85e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.9e1 / 0.34e2 * eta ^ 3 + 0.9e1 / 0.17e2 * eta ^ 2 - 0.87e2 / 0.170e3 * eta - 0.213e3 / 0.340e3) * ci2 ^ 2 + 0.101e3 / 0.1020e4 * eta ^ 4 - 0.53e2 / 0.510e3 * eta ^ 2 + 0.8e1 / 0.51e2 * eta + 0.173e3 / 0.1020e4) * cos((-h + f + 2 * g)) + 0.9e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.5e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * sin((-h + f + 2 * g)) - 0.3e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((h - 2 * g + f)) + 0.9e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.5e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * sin((-h + 3 * f + 2 * g)) + 0.3e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((-h + 5 * f + 2 * g)) - 0.9e1 / 0.40e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * cos((-h + 3 * f)) + 0.9e1 / 0.20e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (((0.5e1 / 0.3e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.3e1 * eta ^ 2 - 0.235e3 / 0.9e1 * eta - 0.406e3 / 0.9e1) * ci2 ^ 4 + (-0.35e2 / 0.3e1 * eta ^ 2 - eta ^ 4 - 0.5e1 / 0.3e1 * eta ^ 3 + 0.235e3 / 0.9e1 * eta + 0.406e3 / 0.9e1) * ci2 ^ 2 + 0.25e2 / 0.6e1 * eta ^ 2 + eta ^ 4 / 0.6e1 + 0.5e1 / 0.2e1 * eta ^ 3 - 0.161e3 / 0.18e2 * eta - 0.109e3 / 0.9e1) * cos((-h + f)) - ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 3 * f)) / 0.2e1 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((h + 5 * f)) / 0.2e1 + ((0.5e1 / 0.3e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.3e1 * eta ^ 2 - 0.235e3 / 0.9e1 * eta - 0.406e3 / 0.9e1) * ci2 ^ 4 + (-0.35e2 / 0.3e1 * eta ^ 2 - eta ^ 4 - 0.5e1 / 0.3e1 * eta ^ 3 + 0.235e3 / 0.9e1 * eta + 0.406e3 / 0.9e1) * ci2 ^ 2 + 0.25e2 / 0.6e1 * eta ^ 2 + eta ^ 4 / 0.6e1 + 0.5e1 / 0.2e1 * eta ^ 3 - 0.161e3 / 0.18e2 * eta - 0.109e3 / 0.9e1) * cos((h + f))) + 0.27e2 / 0.80e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.29e2 / 0.3e1 * eta + 0.269e3 / 0.12e2) * ci2 ^ 2 + eta ^ 2 / 0.12e2 - 0.32e2 / 0.27e2 * eta - 0.281e3 / 0.108e3) * (0.1e1 + eta) * (eta - 0.1e1) * cos((-h + 5 * f + 2 * g)) - 0.9e1 / 0.80e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta - 0.37e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta + 0.111e3 / 0.4e1) * ci2 ^ 2 + eta / 0.12e2 - 0.163e3 / 0.36e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((h - 2 * g + f)) + 0.13e2 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 4 * g + f)) + 0.3e1 / 0.80e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((h + 3 * f - 2 * g)) - 0.3e1 / 0.2e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * ci2 ^ 2 * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((-h - 2 * g + f)) + 0.3e1 / 0.8e1 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 - 0.11e2 / 0.15e2) * (0.1e1 + eta) * cos((-h + 3 * f + 4 * g)) - 0.9e1 / 0.40e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 5 * f + 4 * g)) + 0.3e1 / 0.16e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-h + 2 * g + 7 * f)) - 0.11e2 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 4 * g + 7 * f)) - 0.9e1 / 0.40e2 * ci2 ^ 4 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 5 * f + 4 * g)) - 0.11e2 / 0.40e2 * ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g + 7 * f)) + 0.9e1 / 0.2e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * ci2 ^ 2 * (eta ^ 2 - 0.5e1) * Delta * (0.1e1 + eta) * sin((h + 3 * f + 2 * g)) + 0.3e1 / 0.2e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * ci2 ^ 2 * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((h + 5 * f + 2 * g)) + 0.3e1 / 0.8e1 * ci2 ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.11e2 / 0.15e2) * (0.1e1 + eta) * cos((h + 3 * f + 4 * g)) + 0.9e1 / 0.2e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * ci2 ^ 2 * (eta ^ 2 - 0.5e1) * Delta * (0.1e1 + eta) * sin((h + f + 2 * g)) + 0.13e2 / 0.40e2 * ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g + f)) + 0.3e1 / 0.80e2 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-h + 3 * f - 2 * g)) + 0.3e1 / 0.16e2 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((h + 2 * g + 7 * f)) - 0.9e1 / 0.80e2 * ci2 ^ 2 * ((eta - 0.37e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta + 0.185e3 / 0.4e1) * ci2 ^ 2 + eta / 0.3e1 - 0.124e3 / 0.9e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((-h - 2 * g + f)) - 0.9e1 / 0.40e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-h + 5 * f)) + 0.27e2 / 0.80e2 * ci2 ^ 2 * ((eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 + 0.145e3 / 0.9e1 * eta + 0.1345e4 / 0.36e2) * ci2 ^ 2 + eta ^ 2 / 0.3e1 - 0.119e3 / 0.27e2 * eta - 0.272e3 / 0.27e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 5 * f + 2 * g))) * sqrt(-eta ^ 2 + 0.1e1) + (0.13e2 / 0.20e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta - 0.69e2 / 0.26e2) * ci2 ^ 2 + 0.5e1 / 0.52e2 * eta + 0.4e1 / 0.13e2) * cos((-h + 6 * f + 2 * g)) - 0.3e1 / 0.10e2 * ((eta ^ 4 + 0.20e2 * eta ^ 3 + 0.12e2 * eta ^ 2 + 0.12e2 * eta - 0.37e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.15e2 * eta ^ 3 - 0.9e1 * eta ^ 2 - 0.9e1 * eta + 0.111e3 / 0.4e1) * ci2 ^ 2 + eta ^ 4 / 0.4e1 + 0.2e1 * eta ^ 3 - eta ^ 2 / 0.2e1 + eta - 0.17e2 / 0.12e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g + 2 * f)) + 0.6e1 / 0.5e1 * ((eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.9e1 / 0.4e1 * eta ^ 2 + 0.117e3 / 0.16e2 * eta + 0.219e3 / 0.16e2) * ci2 ^ 2 + eta ^ 3 / 0.12e2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.6e1 * eta - 0.37e2 / 0.24e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-h + 2 * g + 4 * f)) - 0.3e1 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 2 * f + 4 * g)) - 0.3e1 / 0.40e2 * ci2 ^ 2 * (eta ^ 4 + 0.2e1 * eta ^ 2 - 0.25e2 / 0.3e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 4 * f + 4 * g)) + ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.4e1) * (eta + 0.4e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 6 * f + 4 * g)) / 0.20e2 + 0.3e1 / 0.80e2 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 8 * f + 4 * g)) - 0.3e1 / 0.4e1 * ci2 ^ 2 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta - 0.1e1) * ci2 ^ 2 + 0.11e2 / 0.30e2 * eta + 0.3e1 / 0.10e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-h - 2 * g + 2 * f)) + 0.18e2 * (eta ^ 2 - 0.5e1 / 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * sin((-h + 2 * g + 2 * f)) + 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h + 2 * g + 4 * f)) - 0.3e1 / 0.4e1 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((h - 2 * g + 2 * f)) + 0.13e2 / 0.20e2 * ci2 ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * ci2 ^ 2 + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((h + 6 * f + 2 * g)) - 0.3e1 / 0.10e2 * ((eta ^ 4 + 0.20e2 * eta ^ 3 + 0.12e2 * eta ^ 2 + 0.12e2 * eta - 0.37e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.25e2 * eta ^ 3 - 0.15e2 * eta ^ 2 - 0.15e2 * eta + 0.185e3 / 0.4e1) * ci2 ^ 2 + eta ^ 4 / 0.2e1 + 0.7e1 * eta ^ 3 + 0.5e1 / 0.2e1 * eta ^ 2 + 0.4e1 * eta - 0.32e2 / 0.3e1) * ci2 ^ 2 * cos((h + 2 * g + 2 * f)) + 0.6e1 / 0.5e1 * ((eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.15e2 / 0.4e1 * eta ^ 2 + 0.195e3 / 0.16e2 * eta + 0.365e3 / 0.16e2) * ci2 ^ 2 + eta ^ 3 / 0.3e1 + eta ^ 2 - 0.157e3 / 0.48e2 * eta - 0.293e3 / 0.48e2) * ci2 ^ 2 * (eta - 0.1e1) * cos((h + 2 * g + 4 * f)) - 0.3e1 / 0.20e2 * ci2 ^ 4 * (eta - 0.1e1) * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 2 * f + 4 * g)) - 0.3e1 / 0.40e2 * ci2 ^ 4 * (eta ^ 4 + 0.2e1 * eta ^ 2 - 0.25e2 / 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * f + 4 * g)) + ci2 ^ 4 * (eta - 0.1e1) * (eta - 0.4e1) * (eta + 0.4e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 6 * f + 4 * g)) / 0.20e2 + 0.3e1 / 0.80e2 * ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 8 * f + 4 * g)) + 0.18e2 * (eta ^ 2 - 0.5e1 / 0.3e1) * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * ci2 ^ 2 * Delta * sin((h + 2 * g + 2 * f)) + (0.9e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * ci2 ^ 2 * Delta * (0.1e1 + eta) * sin((h + 2 * g + 4 * f)) - 0.3e1 * ((eta ^ 4 + 0.23e2 / 0.15e2 * eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.79e2 / 0.30e2 * eta - 0.91e2 / 0.30e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.23e2 / 0.20e2 * eta ^ 3 - 0.11e2 / 0.20e2 * eta ^ 2 + 0.79e2 / 0.40e2 * eta + 0.91e2 / 0.40e2) * ci2 ^ 2 + 0.7e1 / 0.60e2 * eta ^ 4 + 0.11e2 / 0.60e2 * eta ^ 3 + eta ^ 2 / 0.12e2 - 0.11e2 / 0.30e2 * eta - 0.2e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g)) + ((0.26e2 - 0.13e2 / 0.5e1 * eta ^ 2 + 0.8e1 * eta + eta ^ 3) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.5e1 * eta ^ 2 - 0.8e1 * eta - 0.26e2) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.4e1 / 0.5e1 * eta ^ 2 + 0.7e1 / 0.2e1 * eta + 0.13e2 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((-h + 2 * f)) / 0.2e1 + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (0.1e1 + eta) * (eta - 0.1e1) * cos((-h + 4 * f)) / 0.8e1 - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-h + 4 * g)) / 0.16e2 + 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * sin((-h + 2 * g)) + ((0.26e2 - 0.13e2 / 0.5e1 * eta ^ 2 + 0.8e1 * eta + eta ^ 3) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.5e1 * eta ^ 2 - 0.8e1 * eta - 0.26e2) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.4e1 / 0.5e1 * eta ^ 2 + 0.7e1 / 0.2e1 * eta + 0.13e2 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * cos((h + 2 * f)) / 0.2e1 + (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 4 * f)) / 0.8e1 - 0.3e1 * ((eta ^ 4 + 0.23e2 / 0.15e2 * eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.79e2 / 0.30e2 * eta - 0.91e2 / 0.30e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.23e2 / 0.12e2 * eta ^ 3 - 0.11e2 / 0.12e2 * eta ^ 2 + 0.79e2 / 0.24e2 * eta + 0.91e2 / 0.24e2) * ci2 ^ 2 + 0.11e2 / 0.30e2 * eta ^ 4 + 0.17e2 / 0.30e2 * eta ^ 3 + 0.4e1 / 0.15e2 * eta ^ 2 - 0.41e2 / 0.40e2 * eta - 0.139e3 / 0.120e3) * ci2 ^ 2 * cos((h + 2 * g)) - ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g)) / 0.16e2 + 0.9e1 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * ci2 ^ 2 * Delta * (0.1e1 + eta) * sin((h + 2 * g)) + cos(h) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((0.7e1 / 0.4e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.4e1 * eta ^ 2 + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * ci2 ^ 4 + (-eta ^ 4 - 0.7e1 / 0.4e1 * eta ^ 3 - 0.35e2 / 0.4e1 * eta ^ 2 - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * ci2 ^ 2 - eta ^ 4 / 0.5e1 - 0.7e1 / 0.20e2 * eta ^ 3 + 0.33e2 / 0.20e2 * eta ^ 2 + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2)) * (eta - 0.1e1)) * (0.1e1 + eta)) / eta ^ 10 / a ^ 3 / (0.1e1 + eta) 0.30e2 * ci2 ^ 3 * R__e ^ 4 * ((-0.83e2 / 0.40e2 * ci2 ^ 2 * ((eta ^ 4 + 0.266e3 / 0.83e2 * eta ^ 3 + 0.396e3 / 0.83e2 * eta ^ 2 - 0.610e3 / 0.83e2 * eta - 0.991e3 / 0.83e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.665e3 / 0.166e3 * eta ^ 3 - 0.495e3 / 0.83e2 * eta ^ 2 + 0.1525e4 / 0.166e3 * eta + 0.4955e4 / 0.332e3) * ci2 ^ 2 + 0.29e2 / 0.83e2 * eta ^ 4 + 0.173e3 / 0.166e3 * eta ^ 3 + 0.257e3 / 0.166e3 * eta ^ 2 - 0.393e3 / 0.166e3 * eta - 0.647e3 / 0.166e3) * sin((h + 3 * f + 2 * g)) - 0.51e2 / 0.8e1 * ((eta ^ 4 + 0.6e1 / 0.17e2 * eta ^ 3 - 0.12e2 / 0.17e2 * eta ^ 2 + 0.58e2 / 0.85e2 * eta + 0.71e2 / 0.85e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.15e2 / 0.34e2 * eta ^ 3 + 0.15e2 / 0.17e2 * eta ^ 2 - 0.29e2 / 0.34e2 * eta - 0.71e2 / 0.68e2) * ci2 ^ 2 + 0.89e2 / 0.255e3 * eta ^ 4 + 0.3e1 / 0.34e2 * eta ^ 3 - 0.143e3 / 0.510e3 * eta ^ 2 + 0.167e3 / 0.510e3 * eta + 0.193e3 / 0.510e3) * ci2 ^ 2 * sin((h + f + 2 * g)) - 0.9e1 / 0.20e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (((0.5e1 / 0.3e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.3e1 * eta ^ 2 - 0.235e3 / 0.9e1 * eta - 0.406e3 / 0.9e1) * ci2 ^ 4 + (-0.35e2 / 0.3e1 * eta ^ 2 - eta ^ 4 - 0.5e1 / 0.3e1 * eta ^ 3 + 0.235e3 / 0.9e1 * eta + 0.406e3 / 0.9e1) * ci2 ^ 2 + 0.25e2 / 0.6e1 * eta ^ 2 + eta ^ 4 / 0.6e1 + 0.5e1 / 0.2e1 * eta ^ 3 - 0.161e3 / 0.18e2 * eta - 0.109e3 / 0.9e1) * sin((-h + f)) + ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 3 * f)) / 0.2e1 + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((h + 5 * f)) / 0.2e1 - sin((h + f)) * ((0.5e1 / 0.3e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.3e1 * eta ^ 2 - 0.235e3 / 0.9e1 * eta - 0.406e3 / 0.9e1) * ci2 ^ 4 + (-0.35e2 / 0.3e1 * eta ^ 2 - eta ^ 4 - 0.5e1 / 0.3e1 * eta ^ 3 + 0.235e3 / 0.9e1 * eta + 0.406e3 / 0.9e1) * ci2 ^ 2 + 0.25e2 / 0.6e1 * eta ^ 2 + eta ^ 4 / 0.6e1 + 0.5e1 / 0.2e1 * eta ^ 3 - 0.161e3 / 0.18e2 * eta - 0.109e3 / 0.9e1)) + 0.9e1 / 0.40e2 * ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h + 3 * f)) + 0.9e1 / 0.40e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-h + 5 * f)) + 0.3e1 / 0.16e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * sin((h + 2 * g + 7 * f)) - 0.3e1 / 0.80e2 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.3e1) * sin((-h + 3 * f - 2 * g)) + 0.27e2 / 0.80e2 * ci2 ^ 2 * (0.1e1 + eta) * ((eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 2 + 0.145e3 / 0.9e1 * eta + 0.1345e4 / 0.36e2) * ci2 ^ 2 + eta ^ 2 / 0.3e1 - 0.119e3 / 0.27e2 * eta - 0.272e3 / 0.27e2) * (eta - 0.1e1) * sin((h + 5 * f + 2 * g)) + 0.9e1 / 0.80e2 * ci2 ^ 2 * ((eta - 0.37e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta + 0.185e3 / 0.4e1) * ci2 ^ 2 + eta / 0.3e1 - 0.124e3 / 0.9e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((-h - 2 * g + f)) + 0.83e2 / 0.40e2 * ((eta ^ 4 + 0.266e3 / 0.83e2 * eta ^ 3 + 0.396e3 / 0.83e2 * eta ^ 2 - 0.610e3 / 0.83e2 * eta - 0.991e3 / 0.83e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.399e3 / 0.166e3 * eta ^ 3 - 0.297e3 / 0.83e2 * eta ^ 2 + 0.915e3 / 0.166e3 * eta + 0.2973e4 / 0.332e3) * ci2 ^ 2 + 0.33e2 / 0.332e3 * eta ^ 4 + 0.20e2 / 0.83e2 * eta ^ 3 + 0.59e2 / 0.166e3 * eta ^ 2 - 0.44e2 / 0.83e2 * eta - 0.303e3 / 0.332e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 3 * f + 2 * g)) + 0.51e2 / 0.8e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.6e1 / 0.17e2 * eta ^ 3 - 0.12e2 / 0.17e2 * eta ^ 2 + 0.58e2 / 0.85e2 * eta + 0.71e2 / 0.85e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.9e1 / 0.34e2 * eta ^ 3 + 0.9e1 / 0.17e2 * eta ^ 2 - 0.87e2 / 0.170e3 * eta - 0.213e3 / 0.340e3) * ci2 ^ 2 + 0.101e3 / 0.1020e4 * eta ^ 4 - 0.53e2 / 0.510e3 * eta ^ 2 + 0.8e1 / 0.51e2 * eta + 0.173e3 / 0.1020e4) * sin((-h + f + 2 * g)) + 0.9e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.5e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * cos((-h + 3 * f + 2 * g)) + 0.3e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((h - 2 * g + f)) + 0.3e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((-h + 5 * f + 2 * g)) + 0.9e1 / 0.2e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.5e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * cos((-h + f + 2 * g)) - 0.3e1 / 0.2e1 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((-h - 2 * g + f)) - 0.9e1 / 0.2e1 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * (eta ^ 2 - 0.5e1) * Delta * (0.1e1 + eta) * cos((h + 3 * f + 2 * g)) - 0.3e1 / 0.2e1 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((h + 5 * f + 2 * g)) - 0.13e2 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 4 * g + f)) + 0.3e1 / 0.80e2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((h + 3 * f - 2 * g)) + 0.3e1 / 0.8e1 * ci2 ^ 4 * (eta ^ 2 - 0.11e2 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * sin((h + 3 * f + 4 * g)) - 0.9e1 / 0.40e2 * ci2 ^ 4 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 5 * f + 4 * g)) - 0.3e1 / 0.8e1 * ci2 ^ 2 * (eta ^ 2 - 0.11e2 / 0.15e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) * sin((-h + 3 * f + 4 * g)) + 0.9e1 / 0.40e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 5 * f + 4 * g)) - 0.3e1 / 0.16e2 * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.12e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-h + 2 * g + 7 * f)) + 0.11e2 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 4 * g + 7 * f)) - 0.9e1 / 0.80e2 * ((eta - 0.37e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta + 0.111e3 / 0.4e1) * ci2 ^ 2 + eta / 0.12e2 - 0.163e3 / 0.36e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((h - 2 * g + f)) - 0.9e1 / 0.2e1 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * (eta ^ 2 - 0.5e1) * Delta * (0.1e1 + eta) * cos((h + f + 2 * g)) + 0.13e2 / 0.40e2 * ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g + f)) - 0.11e2 / 0.40e2 * ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g + 7 * f)) - 0.27e2 / 0.80e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 2 + 0.29e2 / 0.3e1 * eta + 0.269e3 / 0.12e2) * ci2 ^ 2 + eta ^ 2 / 0.12e2 - 0.32e2 / 0.27e2 * eta - 0.281e3 / 0.108e3) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h + 5 * f + 2 * g))) * sqrt(-eta ^ 2 + 0.1e1) + (-0.13e2 / 0.20e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta - 0.69e2 / 0.26e2) * ci2 ^ 2 + 0.5e1 / 0.52e2 * eta + 0.4e1 / 0.13e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-h + 6 * f + 2 * g)) + 0.3e1 / 0.10e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.20e2 * eta ^ 3 + 0.12e2 * eta ^ 2 + 0.12e2 * eta - 0.37e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.15e2 * eta ^ 3 - 0.9e1 * eta ^ 2 - 0.9e1 * eta + 0.111e3 / 0.4e1) * ci2 ^ 2 + eta ^ 4 / 0.4e1 + 0.2e1 * eta ^ 3 - eta ^ 2 / 0.2e1 + eta - 0.17e2 / 0.12e2) * sin((-h + 2 * g + 2 * f)) - 0.6e1 / 0.5e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.9e1 / 0.4e1 * eta ^ 2 + 0.117e3 / 0.16e2 * eta + 0.219e3 / 0.16e2) * ci2 ^ 2 + eta ^ 3 / 0.12e2 + eta ^ 2 / 0.4e1 - 0.5e1 / 0.6e1 * eta - 0.37e2 / 0.24e2) * (eta - 0.1e1) * sin((-h + 2 * g + 4 * f)) + 0.3e1 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 2 * f + 4 * g)) + 0.3e1 / 0.40e2 * (eta ^ 4 + 0.2e1 * eta ^ 2 - 0.25e2 / 0.3e1) * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 4 * f + 4 * g)) - ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.4e1) * (eta + 0.4e1) * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 6 * f + 4 * g)) / 0.20e2 - 0.3e1 / 0.80e2 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 8 * f + 4 * g)) + 0.3e1 / 0.4e1 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta - 0.1e1) * ci2 ^ 2 + 0.11e2 / 0.30e2 * eta + 0.3e1 / 0.10e2) * ci2 ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-h - 2 * g + 2 * f)) + 0.18e2 * (eta ^ 2 - 0.5e1 / 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * cos((-h + 2 * g + 2 * f)) + 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((-h + 2 * g + 4 * f)) - 0.3e1 / 0.4e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((h - 2 * g + 2 * f)) + 0.13e2 / 0.20e2 * ci2 ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * ci2 ^ 2 + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((h + 6 * f + 2 * g)) - 0.3e1 / 0.10e2 * ci2 ^ 2 * ((eta ^ 4 + 0.20e2 * eta ^ 3 + 0.12e2 * eta ^ 2 + 0.12e2 * eta - 0.37e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.25e2 * eta ^ 3 - 0.15e2 * eta ^ 2 - 0.15e2 * eta + 0.185e3 / 0.4e1) * ci2 ^ 2 + eta ^ 4 / 0.2e1 + 0.7e1 * eta ^ 3 + 0.5e1 / 0.2e1 * eta ^ 2 + 0.4e1 * eta - 0.32e2 / 0.3e1) * sin((h + 2 * g + 2 * f)) + 0.6e1 / 0.5e1 * ci2 ^ 2 * ((eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.15e2 / 0.4e1 * eta ^ 2 + 0.195e3 / 0.16e2 * eta + 0.365e3 / 0.16e2) * ci2 ^ 2 + eta ^ 3 / 0.3e1 + eta ^ 2 - 0.157e3 / 0.48e2 * eta - 0.293e3 / 0.48e2) * (eta - 0.1e1) * sin((h + 2 * g + 4 * f)) - 0.18e2 * (eta ^ 2 - 0.5e1 / 0.3e1) * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * cos((h + 2 * g + 2 * f)) - 0.9e1 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 2 * g + 4 * f)) - 0.3e1 / 0.20e2 * ci2 ^ 4 * (eta - 0.1e1) * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 2 * f + 4 * g)) - 0.3e1 / 0.40e2 * (eta ^ 4 + 0.2e1 * eta ^ 2 - 0.25e2 / 0.3e1) * ci2 ^ 4 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * f + 4 * g)) + (ci2 ^ 4 * (eta - 0.4e1) * (eta + 0.4e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 6 * f + 4 * g)) / 0.20e2 + 0.3e1 / 0.80e2 * ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 8 * f + 4 * g)) + 0.3e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.23e2 / 0.15e2 * eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.79e2 / 0.30e2 * eta - 0.91e2 / 0.30e2) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.23e2 / 0.20e2 * eta ^ 3 - 0.11e2 / 0.20e2 * eta ^ 2 + 0.79e2 / 0.40e2 * eta + 0.91e2 / 0.40e2) * ci2 ^ 2 + 0.7e1 / 0.60e2 * eta ^ 4 + 0.11e2 / 0.60e2 * eta ^ 3 + eta ^ 2 / 0.12e2 - 0.11e2 / 0.30e2 * eta - 0.2e1 / 0.5e1) * sin((-h + 2 * g)) - ((0.26e2 - 0.13e2 / 0.5e1 * eta ^ 2 + 0.8e1 * eta + eta ^ 3) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.5e1 * eta ^ 2 - 0.8e1 * eta - 0.26e2) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.4e1 / 0.5e1 * eta ^ 2 + 0.7e1 / 0.2e1 * eta + 0.13e2 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((-h + 2 * f)) / 0.2e1 - ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h + 4 * f)) / 0.8e1 + ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-h + 4 * g)) / 0.16e2 + 0.9e1 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.3e1 / 0.4e1 * ci2 ^ 2 + 0.1e1 / 0.10e2) * (0.1e1 + eta) * cos((-h + 2 * g)) + ((0.26e2 - 0.13e2 / 0.5e1 * eta ^ 2 + 0.8e1 * eta + eta ^ 3) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.5e1 * eta ^ 2 - 0.8e1 * eta - 0.26e2) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.4e1 / 0.5e1 * eta ^ 2 + 0.7e1 / 0.2e1 * eta + 0.13e2 / 0.2e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sin((h + 2 * f)) / 0.2e1 + ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 4 * f)) / 0.8e1 - 0.3e1 * ci2 ^ 2 * ((eta ^ 4 + 0.23e2 / 0.15e2 * eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.79e2 / 0.30e2 * eta - 0.91e2 / 0.30e2) * ci2 ^ 4 + (-0.5e1 / 0.4e1 * eta ^ 4 - 0.23e2 / 0.12e2 * eta ^ 3 - 0.11e2 / 0.12e2 * eta ^ 2 + 0.79e2 / 0.24e2 * eta + 0.91e2 / 0.24e2) * ci2 ^ 2 + 0.11e2 / 0.30e2 * eta ^ 4 + 0.17e2 / 0.30e2 * eta ^ 3 + 0.4e1 / 0.15e2 * eta ^ 2 - 0.41e2 / 0.40e2 * eta - 0.139e3 / 0.120e3) * sin((h + 2 * g)) - 0.9e1 * ci2 ^ 2 * (ci2 ^ 4 - 0.5e1 / 0.4e1 * ci2 ^ 2 + 0.7e1 / 0.20e2) * Delta * (0.1e1 + eta) * cos((h + 2 * g)) - ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g)) / 0.16e2 + ((0.7e1 / 0.4e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.4e1 * eta ^ 2 + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * ci2 ^ 4 + (-eta ^ 4 - 0.7e1 / 0.4e1 * eta ^ 3 - 0.35e2 / 0.4e1 * eta ^ 2 - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * ci2 ^ 2 - eta ^ 4 / 0.5e1 - 0.7e1 / 0.20e2 * eta ^ 3 + 0.33e2 / 0.20e2 * eta ^ 2 + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2) * sin(h) * (ci2 ^ 2 - 0.1e1 / 0.2e1)) * (eta - 0.1e1)) * (0.1e1 + eta)) * J ^ 2 * sqrt(-ci2 ^ 2 + 0.1e1) / eta ^ 10 / a ^ 3 / (0.1e1 + eta) 0.135e3 / 0.4e1 * R__e ^ 4 * J ^ 2 * (-0.3301e4 / 0.2880e4 * ci2 ^ 2 * ((eta ^ 6 + 0.7418e4 / 0.3301e4 * eta ^ 5 - 0.2357e4 / 0.3301e4 * eta ^ 4 - 0.45140e5 / 0.3301e4 * eta ^ 3 - 0.29941e5 / 0.3301e4 * eta ^ 2 + 0.105658e6 / 0.3301e4 * eta + 0.99621e5 / 0.3301e4) * ci2 ^ 4 + (-eta ^ 6 - 0.7418e4 / 0.3301e4 * eta ^ 5 + 0.2357e4 / 0.3301e4 * eta ^ 4 + 0.45140e5 / 0.3301e4 * eta ^ 3 + 0.29941e5 / 0.3301e4 * eta ^ 2 - 0.105658e6 / 0.3301e4 * eta - 0.99621e5 / 0.3301e4) * ci2 ^ 2 + 0.1303e4 / 0.6602e4 * eta ^ 6 + 0.931e3 / 0.3301e4 * eta ^ 5 - 0.2751e4 / 0.6602e4 * eta ^ 4 - 0.6294e4 / 0.3301e4 * eta ^ 3 - 0.3671e4 / 0.6602e4 * eta ^ 2 + 0.18659e5 / 0.3301e4 * eta + 0.32607e5 / 0.6602e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - h + 3 * f)) - 0.1757e4 / 0.320e3 * ((eta ^ 6 + 0.1042e4 / 0.753e3 * eta ^ 5 + 0.505e3 / 0.5271e4 * eta ^ 4 + 0.5732e4 / 0.5271e4 * eta ^ 3 + 0.3155e4 / 0.1757e4 * eta ^ 2 - 0.9922e4 / 0.5271e4 * eta - 0.4003e4 / 0.1757e4) * ci2 ^ 4 + (-eta ^ 6 - 0.1042e4 / 0.753e3 * eta ^ 5 - 0.505e3 / 0.5271e4 * eta ^ 4 - 0.5732e4 / 0.5271e4 * eta ^ 3 - 0.3155e4 / 0.1757e4 * eta ^ 2 + 0.9922e4 / 0.5271e4 * eta + 0.4003e4 / 0.1757e4) * ci2 ^ 2 + 0.6263e4 / 0.31626e5 * eta ^ 6 + 0.3203e4 / 0.15813e5 * eta ^ 5 - 0.4127e4 / 0.31626e5 * eta ^ 4 + 0.5002e4 / 0.15813e5 * eta ^ 3 + 0.24649e5 / 0.31626e5 * eta ^ 2 - 0.59e2 / 0.2259e4 * eta - 0.3691e4 / 0.10542e5) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + h + f)) - 0.25e2 / 0.288e3 * ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((5 * g + h + 9 * f)) - 0.13e2 / 0.1440e4 * ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-5 * g - h + f)) - 0.25e2 / 0.288e3 * ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((3 * g - h + 9 * f)) - 0.13e2 / 0.1440e4 * ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((-3 * g + h + f)) + 0.49e2 / 0.160e3 * ((0.425e3 / 0.21e2 + 0.10513e5 / 0.441e3 * eta ^ 2 + 0.30463e5 / 0.441e3 * eta + eta ^ 7 + 0.859e3 / 0.441e3 * eta ^ 6 + 0.1567e4 / 0.147e3 * eta ^ 5 - 0.15625e5 / 0.441e3 * eta ^ 4 - 0.3565e4 / 0.49e2 * eta ^ 3) * ci2 ^ 8 + (-0.2e1 * eta ^ 7 - 0.850e3 / 0.21e2 - 0.1718e4 / 0.441e3 * eta ^ 6 - 0.3134e4 / 0.147e3 * eta ^ 5 + 0.31250e5 / 0.441e3 * eta ^ 4 + 0.7130e4 / 0.49e2 * eta ^ 3 - 0.21026e5 / 0.441e3 * eta ^ 2 - 0.60926e5 / 0.441e3 * eta) * ci2 ^ 6 + (0.1500e4 / 0.49e2 + 0.4e1 / 0.3e1 * eta ^ 7 + 0.148e3 / 0.21e2 * eta ^ 6 + 0.2836e4 / 0.147e3 * eta ^ 5 - 0.17204e5 / 0.147e3 * eta ^ 3 + 0.6052e4 / 0.147e3 * eta ^ 2 + 0.15964e5 / 0.147e3 * eta - 0.9284e4 / 0.147e3 * eta ^ 4) * ci2 ^ 4 + (-eta ^ 7 / 0.3e1 - 0.7643e4 / 0.441e3 * eta ^ 2 - 0.1525e4 / 0.147e3 - 0.423e3 / 0.49e2 * eta ^ 5 + 0.12227e5 / 0.441e3 * eta ^ 4 + 0.6509e4 / 0.147e3 * eta ^ 3 - 0.17429e5 / 0.441e3 * eta - 0.2249e4 / 0.441e3 * eta ^ 6) * ci2 ^ 2 + 0.4189e4 / 0.1764e4 * eta ^ 2 + eta ^ 7 / 0.36e2 + 0.715e3 / 0.588e3 + 0.2885e4 / 0.588e3 * eta - 0.971e3 / 0.252e3 * eta ^ 4 + 0.1487e4 / 0.1764e4 * eta ^ 6 - 0.9917e4 / 0.1764e4 * eta ^ 3 + 0.703e3 / 0.588e3 * eta ^ 5) * cos((g + h + f)) + (-0.49e2 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * ((eta ^ 4 - 0.221e3 / 0.98e2 * eta ^ 3 - 0.1523e4 / 0.98e2 * eta ^ 2 + 0.1073e4 / 0.98e2 * eta + 0.2757e4 / 0.98e2) * (eta + 0.3e1) * ci2 ^ 4 - (eta ^ 4 - 0.221e3 / 0.98e2 * eta ^ 3 - 0.1523e4 / 0.98e2 * eta ^ 2 + 0.1073e4 / 0.98e2 * eta + 0.2757e4 / 0.98e2) * (eta + 0.3e1) * ci2 ^ 2 + 0.43e2 / 0.294e3 * eta ^ 5 + 0.5e1 / 0.588e3 * eta ^ 4 - 0.1033e4 / 0.294e3 * eta ^ 3 - 0.16e2 / 0.3e1 * eta ^ 2 + 0.1567e4 / 0.147e3 * eta + 0.57e2 / 0.4e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - h + 4 * f)) + ci2 ^ 4 * (eta ^ 5 - eta ^ 4 - 0.118e3 / 0.9e1 * eta ^ 3 + 0.94e2 / 0.9e1 * eta ^ 2 + 0.245e3 / 0.9e1 * eta - 0.31e2 / 0.3e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) * cos((3 * g - h + 2 * f)) / 0.40e2 - ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((3 * g - h + 10 * f)) / 0.120e3 - 0.7e1 / 0.180e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 5 + 0.3e1 / 0.7e1 * eta ^ 4 - 0.184e3 / 0.7e1 * eta ^ 3 - 0.124e3 / 0.7e1 * eta ^ 2 + 0.35e2 * eta + 0.309e3 / 0.7e1) * (0.1e1 + eta) * cos((5 * g + h + 6 * f)) + ((0.131e3 / 0.15e2 + 0.653e3 / 0.360e3 * eta ^ 2 + 0.1243e4 / 0.72e2 * eta - 0.23e2 / 0.72e2 * eta ^ 6 + 0.247e3 / 0.360e3 * eta ^ 5 - 0.179e3 / 0.60e2 * eta ^ 4 - 0.443e3 / 0.36e2 * eta ^ 3) * ci2 ^ 8 + (-0.262e3 / 0.15e2 + 0.23e2 / 0.36e2 * eta ^ 6 - 0.247e3 / 0.180e3 * eta ^ 5 + 0.179e3 / 0.30e2 * eta ^ 4 + 0.443e3 / 0.18e2 * eta ^ 3 - 0.653e3 / 0.180e3 * eta ^ 2 - 0.1243e4 / 0.36e2 * eta) * ci2 ^ 6 + (0.1567e4 / 0.120e3 - 0.23e2 / 0.120e3 * eta ^ 6 + 0.6e1 / 0.5e1 * eta ^ 5 - 0.292e3 / 0.15e2 * eta ^ 3 + 0.169e3 / 0.40e2 * eta ^ 2 + 0.406e3 / 0.15e2 * eta - 0.739e3 / 0.120e3 * eta ^ 4) * ci2 ^ 4 + (-0.217e3 / 0.90e2 * eta ^ 2 - 0.173e3 / 0.40e2 - 0.37e2 / 0.72e2 * eta ^ 5 + 0.127e3 / 0.40e2 * eta ^ 4 + 0.1289e4 / 0.180e3 * eta ^ 3 - 0.3529e4 / 0.360e3 * eta - 0.23e2 / 0.180e3 * eta ^ 6) * ci2 ^ 2 + 0.17e2 / 0.45e2 * eta ^ 2 + 0.143e3 / 0.288e3 + 0.1739e4 / 0.1440e4 * eta - 0.227e3 / 0.480e3 * eta ^ 4 + 0.23e2 / 0.720e3 * eta ^ 6 - 0.71e2 / 0.80e2 * eta ^ 3 + 0.11e2 / 0.160e3 * eta ^ 5) * cos((g + h + 2 * f)) - 0.11e2 / 0.6e1 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * sin((3 * g + h + 6 * f)) - 0.11e2 / 0.6e1 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((g - h + 6 * f)) - 0.13e2 / 0.3e1 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) * (eta ^ 3 - 0.4e1 / 0.13e2 * eta ^ 2 - 0.17e2 / 0.13e2 * eta + 0.12e2 / 0.13e2) * sin((g - h)) + ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + 2 * f)) / 0.6e1 - 0.10e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 3 + 0.3e1 / 0.2e1 * eta ^ 2 - 0.22e2 / 0.15e2 * eta - 0.21e2 / 0.10e2) * (eta - 0.1e1) * sin((g - h + 2 * f)) - 0.35e2 / 0.3e1 * ci2 ^ 2 * (eta ^ 3 + 0.16e2 / 0.35e2 * eta ^ 2 - 0.11e2 / 0.7e1 * eta - 0.48e2 / 0.35e2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) * sin((3 * g + h + 4 * f)) + ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * sin((-g + h + 2 * f)) / 0.6e1 - 0.5e1 / 0.9e1 * cos((g + h)) * ((-0.1809e4 / 0.50e2 + 0.20e2 * eta ^ 2 - 0.711e3 / 0.25e2 * eta + eta ^ 6 + 0.9e1 / 0.5e1 * eta ^ 5 + 0.539e3 / 0.50e2 * eta ^ 4 + 0.104e3 / 0.5e1 * eta ^ 3) * ci2 ^ 8 + (0.1809e4 / 0.25e2 - 0.2e1 * eta ^ 6 - 0.18e2 / 0.5e1 * eta ^ 5 - 0.539e3 / 0.25e2 * eta ^ 4 - 0.208e3 / 0.5e1 * eta ^ 3 - 0.40e2 * eta ^ 2 + 0.1422e4 / 0.25e2 * eta) * ci2 ^ 6 + (-0.1408e4 / 0.25e2 + 0.3e1 / 0.5e1 * eta ^ 6 + 0.27e2 / 0.25e2 * eta ^ 5 + 0.907e3 / 0.25e2 * eta ^ 3 + 0.822e3 / 0.25e2 * eta ^ 2 - 0.46e2 * eta + 0.403e3 / 0.25e2 * eta ^ 4) * ci2 ^ 4 + (-0.322e3 / 0.25e2 * eta ^ 2 + 0.1007e4 / 0.50e2 + 0.18e2 / 0.25e2 * eta ^ 5 - 0.267e3 / 0.50e2 * eta ^ 4 - 0.387e3 / 0.25e2 * eta ^ 3 + 0.439e3 / 0.25e2 * eta + 0.2e1 / 0.5e1 * eta ^ 6) * ci2 ^ 2 + 0.167e3 / 0.100e3 * eta ^ 2 - 0.99e2 / 0.40e2 - 0.113e3 / 0.50e2 * eta + 0.5e1 / 0.8e1 * eta ^ 4 - eta ^ 6 / 0.10e2 + 0.53e2 / 0.25e2 * eta ^ 3 - 0.9e1 / 0.50e2 * eta ^ 5) * eta - 0.23e2 / 0.72e2 * ((-0.3144e4 / 0.115e3 + 0.5278e4 / 0.115e3 * eta ^ 2 + 0.1121e4 / 0.115e3 * eta + eta ^ 5 - 0.182e3 / 0.115e3 * eta ^ 4 + 0.1148e4 / 0.115e3 * eta ^ 3) * ci2 ^ 8 + (0.6288e4 / 0.115e3 - 0.2e1 * eta ^ 5 + 0.364e3 / 0.115e3 * eta ^ 4 - 0.2296e4 / 0.115e3 * eta ^ 3 - 0.10556e5 / 0.115e3 * eta ^ 2 - 0.2242e4 / 0.115e3 * eta) * ci2 ^ 6 + (-0.4701e4 / 0.115e3 + 0.3e1 / 0.5e1 * eta ^ 5 + 0.2202e4 / 0.115e3 * eta ^ 3 + 0.8214e4 / 0.115e3 * eta ^ 2 + 0.285e3 / 0.23e2 * eta - 0.393e3 / 0.115e3 * eta ^ 4) * ci2 ^ 4 + (-0.2936e4 / 0.115e3 * eta ^ 2 + 0.1557e4 / 0.115e3 + 0.2e1 / 0.5e1 * eta ^ 5 + 0.211e3 / 0.115e3 * eta ^ 4 - 0.1054e4 / 0.115e3 * eta ^ 3 - 0.304e3 / 0.115e3 * eta) * ci2 ^ 2 + 0.358e3 / 0.115e3 * eta ^ 2 + 0.19e2 / 0.115e3 * eta - 0.25e2 / 0.92e2 * eta ^ 4 + 0.61e2 / 0.46e2 * eta ^ 3 - 0.143e3 / 0.92e2 - eta ^ 5 / 0.10e2) * (eta - 0.1e1) * cos((-g - h + 2 * f)) - (0.1e1 + eta) ^ 3 * ((eta - 0.112e3 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta + 0.224e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * ci2 ^ 2 - eta / 0.10e2 - 0.3e1 / 0.4e1) * (eta - 0.1e1) ^ 2 * cos((g + h + 6 * f)) / 0.72e2 - (0.1e1 + eta) ^ 2 * ((eta - 0.112e3 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta + 0.224e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * ci2 ^ 2 - eta / 0.10e2 - 0.3e1 / 0.4e1) * (eta - 0.1e1) ^ 3 * cos((-g - h + 6 * f)) / 0.72e2 - (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 - 0.231e3 / 0.20e2 * eta ^ 2 - 0.49e2 / 0.20e2 * eta + 0.353e3 / 0.10e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.231e3 / 0.10e2 * eta ^ 2 + 0.49e2 / 0.10e2 * eta - 0.353e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta ^ 3 - 0.33e2 / 0.2e1 * eta ^ 2 + 0.507e3 / 0.10e2) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta ^ 3 + 0.99e2 / 0.20e2 * eta ^ 2 - 0.49e2 / 0.20e2 * eta - 0.77e2 / 0.5e1) * ci2 ^ 2 - eta ^ 3 / 0.10e2 - 0.41e2 / 0.80e2 * eta ^ 2 + 0.41e2 / 0.80e2 * eta + 0.13e2 / 0.8e1) * cos((-g - h + 4 * f)) / 0.9e1 - ((0.353e3 / 0.10e2 - 0.5e1 / 0.2e1 * eta ^ 2 + 0.167e3 / 0.4e1 * eta + eta ^ 4 - 0.231e3 / 0.20e2 * eta ^ 3) * ci2 ^ 8 + (-0.353e3 / 0.5e1 - 0.2e1 * eta ^ 4 + 0.231e3 / 0.10e2 * eta ^ 3 + 0.5e1 * eta ^ 2 - 0.167e3 / 0.2e1 * eta) * ci2 ^ 6 + (0.507e3 / 0.10e2 - 0.33e2 / 0.2e1 * eta ^ 3 + 0.3e1 / 0.10e2 * eta ^ 2 + 0.633e3 / 0.10e2 * eta + 0.3e1 / 0.5e1 * eta ^ 4) * ci2 ^ 4 + (-0.14e2 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.5e1 + 0.2e1 / 0.5e1 * eta ^ 4 + 0.99e2 / 0.20e2 * eta ^ 3 - 0.431e3 / 0.20e2 * eta) * ci2 ^ 2 + 0.23e2 / 0.40e2 * eta ^ 2 + 0.13e2 / 0.8e1 + 0.201e3 / 0.80e2 * eta - eta ^ 4 / 0.10e2 - 0.41e2 / 0.80e2 * eta ^ 3) * (0.1e1 + eta) * (eta - 0.1e1) * cos((g + h + 4 * f)) / 0.9e1 - 0.23e2 / 0.3e1 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + 0.7e1 / 0.23e2 * eta - 0.48e2 / 0.23e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((g - h + 4 * f)) - 0.25e2 / 0.3e1 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.29e2 / 0.25e2 * eta + 0.12e2 / 0.25e2) * Delta * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + h)) + ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 6 + eta ^ 5 / 0.2e1 - 0.25e2 / 0.2e1 * eta ^ 4 - 0.15e2 * eta ^ 3 + 0.8e1 * eta ^ 2 + 0.223e3 / 0.6e1 * eta + 0.63e2 / 0.2e1) * cos((3 * g - h + 4 * f)) / 0.30e2 + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.265e3 / 0.48e2 + 0.847e3 / 0.90e2 * eta ^ 2 + 0.13127e5 / 0.720e3 * eta + eta ^ 7 + 0.119e3 / 0.72e2 * eta ^ 6 - 0.341e3 / 0.144e3 * eta ^ 5 - 0.8773e4 / 0.720e3 * eta ^ 4 - 0.4439e4 / 0.360e3 * eta ^ 3) * ci2 ^ 4 + (-eta ^ 7 - 0.119e3 / 0.72e2 * eta ^ 6 + 0.341e3 / 0.144e3 * eta ^ 5 + 0.8773e4 / 0.720e3 * eta ^ 4 + 0.4439e4 / 0.360e3 * eta ^ 3 - 0.847e3 / 0.90e2 * eta ^ 2 - 0.13127e5 / 0.720e3 * eta - 0.265e3 / 0.48e2) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 7 + 0.283e3 / 0.720e3 * eta ^ 6 - 0.257e3 / 0.480e3 * eta ^ 5 - 0.459e3 / 0.160e3 * eta ^ 4 - 0.1933e4 / 0.720e3 * eta ^ 3 + 0.877e3 / 0.360e3 * eta ^ 2 + 0.1871e4 / 0.480e3 * eta + 0.1337e4 / 0.1440e4) * cos((g - h)) - 0.113e3 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.531e3 / 0.226e3 * eta ^ 5 - 0.3829e4 / 0.226e3 * eta ^ 4 - 0.4571e4 / 0.113e3 * eta ^ 3 + 0.130e3 / 0.113e3 * eta ^ 2 + 0.12291e5 / 0.226e3 * eta + 0.8271e4 / 0.226e3) * ci2 ^ 4 + (-eta ^ 6 - 0.531e3 / 0.226e3 * eta ^ 5 + 0.3829e4 / 0.226e3 * eta ^ 4 + 0.4571e4 / 0.113e3 * eta ^ 3 - 0.130e3 / 0.113e3 * eta ^ 2 - 0.12291e5 / 0.226e3 * eta - 0.8271e4 / 0.226e3) * ci2 ^ 2 + 0.107e3 / 0.678e3 * eta ^ 6 + 0.467e3 / 0.1356e4 * eta ^ 5 - 0.1291e4 / 0.452e3 * eta ^ 4 - 0.4571e4 / 0.678e3 * eta ^ 3 + 0.44e2 / 0.339e3 * eta ^ 2 + 0.12323e5 / 0.1356e4 * eta + 0.2793e4 / 0.452e3) * cos((3 * g + h + 4 * f)) + (eta ^ 6 + 0.7e1 / 0.6e1 * eta ^ 5 - 0.11e2 / 0.6e1 * eta ^ 4 - eta ^ 3 + 0.10e2 / 0.9e1 * eta ^ 2 - 0.155e3 / 0.18e2 * eta - 0.21e2 / 0.2e1) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((5 * g + h + 4 * f)) / 0.10e2 + 0.2e1 / 0.5e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.395e3 / 0.24e2 * eta ^ 5 + 0.311e3 / 0.12e2 * eta ^ 4 + 0.377e3 / 0.12e2 * eta ^ 3 + 0.73e2 / 0.6e1 * eta ^ 2 - 0.399e3 / 0.8e1 * eta - 0.243e3 / 0.4e1) * ci2 ^ 4 + (-eta ^ 6 - 0.395e3 / 0.24e2 * eta ^ 5 - 0.311e3 / 0.12e2 * eta ^ 4 - 0.377e3 / 0.12e2 * eta ^ 3 - 0.73e2 / 0.6e1 * eta ^ 2 + 0.399e3 / 0.8e1 * eta + 0.243e3 / 0.4e1) * ci2 ^ 2 + 0.7e1 / 0.18e2 * eta ^ 6 + 0.503e3 / 0.144e3 * eta ^ 5 + 0.65e2 / 0.24e2 * eta ^ 4 + 0.203e3 / 0.72e2 * eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 - 0.701e3 / 0.144e3 * eta - 0.229e3 / 0.24e2) * cos((3 * g + h + 2 * f)) + 0.4e1 / 0.15e2 * ci2 ^ 2 * ((eta ^ 6 + 0.239e3 / 0.16e2 * eta ^ 5 - 0.43e2 / 0.8e1 * eta ^ 4 - 0.367e3 / 0.8e1 * eta ^ 3 - 0.129e3 / 0.4e1 * eta ^ 2 + 0.1071e4 / 0.16e2 * eta + 0.729e3 / 0.8e1) * ci2 ^ 4 + (-eta ^ 6 - 0.239e3 / 0.16e2 * eta ^ 5 + 0.43e2 / 0.8e1 * eta ^ 4 + 0.367e3 / 0.8e1 * eta ^ 3 + 0.129e3 / 0.4e1 * eta ^ 2 - 0.1071e4 / 0.16e2 * eta - 0.729e3 / 0.8e1) * ci2 ^ 2 + eta ^ 6 / 0.3e1 + 0.97e2 / 0.32e2 * eta ^ 5 - 0.163e3 / 0.48e2 * eta ^ 4 - 0.485e3 / 0.48e2 * eta ^ 3 - eta ^ 2 / 0.2e1 + 0.1399e4 / 0.96e2 * eta + 0.229e3 / 0.16e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - h + 2 * f)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.43e2 / 0.40e2 * eta ^ 3 - 0.97e2 / 0.20e2 * eta ^ 2 - 0.321e3 / 0.40e2 * eta - 0.16e2 / 0.5e1) * ci2 ^ 4 + (-eta ^ 4 - 0.43e2 / 0.40e2 * eta ^ 3 + 0.97e2 / 0.20e2 * eta ^ 2 + 0.321e3 / 0.40e2 * eta + 0.16e2 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 4 + 0.21e2 / 0.80e2 * eta ^ 3 - 0.133e3 / 0.120e3 * eta ^ 2 - 0.89e2 / 0.48e2 * eta - 0.11e2 / 0.15e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((-g + h + 2 * f)) / 0.3e1 + 0.11e2 / 0.180e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.25e2 / 0.22e2 * eta + 0.25e2 / 0.22e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((5 * g + h)) - 0.13e2 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.127e3 / 0.26e2) * ci2 ^ 4 + (-eta - 0.127e3 / 0.26e2) * ci2 ^ 2 + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 8 * f)) + 0.2e1 / 0.3e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 + 0.27e2 / 0.16e2 * eta ^ 2 - 0.15e2 / 0.16e2 * eta - 0.8e1 / 0.5e1) * ci2 ^ 4 + (-eta ^ 3 - 0.27e2 / 0.16e2 * eta ^ 2 + 0.15e2 / 0.16e2 * eta + 0.8e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 3 + 0.13e2 / 0.32e2 * eta ^ 2 - 0.19e2 / 0.96e2 * eta - 0.11e2 / 0.30e2) * cos((-3 * g - h + 2 * f)) + ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) * (eta ^ 4 + 0.4e1 * eta ^ 3 + 0.60e2 * eta ^ 2 - 0.64e2 * eta - 0.309e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((3 * g - h + 6 * f)) / 0.180e3 - 0.18e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 4 + 0.23e2 / 0.18e2 * eta ^ 3 - 0.25e2 / 0.18e2 * eta ^ 2 - 0.145e3 / 0.54e2 * eta - 0.7e1 / 0.6e1) * sin((3 * g + h + 2 * f)) - ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 - eta / 0.2e1 - 0.143e3 / 0.6e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((3 * g - h + 8 * f)) / 0.60e2 + 0.19e2 / 0.120e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 4 + 0.22e2 / 0.19e2 * eta ^ 3 - 0.244e3 / 0.57e2 * eta ^ 2 - 0.338e3 / 0.57e2 * eta - 0.31e2 / 0.19e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((5 * g + h + 2 * f)) + 0.7e1 / 0.3e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.2171e4 / 0.840e3 * eta ^ 5 + 0.661e3 / 0.336e3 * eta ^ 4 - 0.2549e4 / 0.840e3 * eta ^ 3 - 0.697e3 / 0.105e3 * eta ^ 2 - 0.67e2 / 0.84e2 * eta + 0.265e3 / 0.112e3) * ci2 ^ 4 + (-eta ^ 6 - 0.2171e4 / 0.840e3 * eta ^ 5 - 0.661e3 / 0.336e3 * eta ^ 4 + 0.2549e4 / 0.840e3 * eta ^ 3 + 0.697e3 / 0.105e3 * eta ^ 2 + 0.67e2 / 0.84e2 * eta - 0.265e3 / 0.112e3) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 6 + 0.1027e4 / 0.1680e4 * eta ^ 5 + 0.533e3 / 0.1120e4 * eta ^ 4 - 0.1387e4 / 0.1680e4 * eta ^ 3 - 0.51e2 / 0.28e2 * eta ^ 2 - 0.103e3 / 0.210e3 * eta + 0.191e3 / 0.480e3) * (eta - 0.1e1) * cos((3 * g + h)) - ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * cos((5 * g + h + 10 * f)) / 0.120e3 + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * ((eta + 0.1e1 / 0.2e1) * ci2 ^ 4 + (-eta - 0.1e1 / 0.2e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 4 * f)) / 0.24e2 + ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 3 - 0.3e1 / 0.2e1 * eta ^ 2 + 0.25e2 / 0.2e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((3 * g - h)) / 0.180e3 - ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 3 + eta ^ 2 / 0.2e1 - 0.70e2 / 0.9e1 * eta - 0.143e3 / 0.18e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((5 * g + h + 8 * f)) / 0.20e2 - 0.19e2 / 0.45e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.619e3 / 0.152e3 * eta ^ 2 - 0.1735e4 / 0.152e3 * eta - 0.981e3 / 0.38e2) * ci2 ^ 4 + (-eta ^ 3 - 0.619e3 / 0.152e3 * eta ^ 2 + 0.1735e4 / 0.152e3 * eta + 0.981e3 / 0.38e2) * ci2 ^ 2 + 0.7e1 / 0.38e2 * eta ^ 3 + 0.213e3 / 0.304e3 * eta ^ 2 - 0.633e3 / 0.304e3 * eta - 0.341e3 / 0.76e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((g - h + 6 * f)) - 0.32e2 / 0.45e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.1087e4 / 0.256e3 * eta ^ 3 - 0.637e3 / 0.128e3 * eta ^ 2 - 0.5633e4 / 0.256e3 * eta - 0.981e3 / 0.64e2) * ci2 ^ 4 + (-eta ^ 4 - 0.1087e4 / 0.256e3 * eta ^ 3 + 0.637e3 / 0.128e3 * eta ^ 2 + 0.5633e4 / 0.256e3 * eta + 0.981e3 / 0.64e2) * ci2 ^ 2 + 0.3e1 / 0.16e2 * eta ^ 4 + 0.377e3 / 0.512e3 * eta ^ 3 - 0.239e3 / 0.256e3 * eta ^ 2 - 0.1991e4 / 0.512e3 * eta - 0.341e3 / 0.128e3) * (0.1e1 + eta) * (eta - 0.1e1) * cos((3 * g + h + 6 * f)) - 0.13e2 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.127e3 / 0.26e2) * ci2 ^ 4 + (-eta - 0.127e3 / 0.26e2) * ci2 ^ 2 + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * cos((g - h + 8 * f)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 3 * ((eta + 0.1e1 / 0.2e1) * ci2 ^ 4 + (-eta - 0.1e1 / 0.2e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (eta - 0.1e1) ^ 2 * cos((-g + h + 4 * f)) / 0.24e2) * sqrt(-eta ^ 2 + 0.1e1) - ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 3 * f)) / 0.24e2 + 0.25e2 / 0.12e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 5 - 0.7e1 / 0.25e2 * eta ^ 4 - 0.182e3 / 0.25e2 * eta ^ 3 + 0.98e2 / 0.25e2 * eta ^ 2 + 0.197e3 / 0.25e2 * eta - 0.147e3 / 0.25e2) * Delta * (0.1e1 + eta) * sin((g - h + f)) + 0.5e1 / 0.24e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * sin((g - h + 7 * f)) + 0.5e1 / 0.24e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 7 * f)) + 0.53e2 / 0.12e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 5 + 0.13e2 / 0.53e2 * eta ^ 4 - 0.382e3 / 0.53e2 * eta ^ 3 - 0.182e3 / 0.53e2 * eta ^ 2 + 0.337e3 / 0.53e2 * eta + 0.273e3 / 0.53e2) * Delta * (0.1e1 + eta) * sin((3 * g + h + 3 * f)) - ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * sin((-g + h + 3 * f)) / 0.24e2 - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * cos((g + h + 7 * f)) / 0.32e2 - 0.27e2 / 0.160e3 * ((eta ^ 2 + 0.140e3 / 0.243e3 * eta - 0.2047e4 / 0.243e3) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 - 0.280e3 / 0.243e3 * eta + 0.4094e4 / 0.243e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 + 0.16e2 / 0.81e2 * eta - 0.956e3 / 0.81e2) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.92e2 / 0.243e3 * eta + 0.821e3 / 0.243e3) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.41e2 / 0.486e3 * eta - 0.325e3 / 0.972e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * cos((-g - h + 5 * f)) + 0.49e2 / 0.160e3 * ((0.425e3 / 0.21e2 - 0.17338e5 / 0.441e3 * eta ^ 2 - 0.23143e5 / 0.441e3 * eta + eta ^ 5 + 0.877e3 / 0.441e3 * eta ^ 4 + 0.5342e4 / 0.441e3 * eta ^ 3) * ci2 ^ 8 + (-0.850e3 / 0.21e2 - 0.2e1 * eta ^ 5 - 0.1754e4 / 0.441e3 * eta ^ 4 - 0.10684e5 / 0.441e3 * eta ^ 3 + 0.34676e5 / 0.441e3 * eta ^ 2 + 0.46286e5 / 0.441e3 * eta) * ci2 ^ 6 + (0.1500e4 / 0.49e2 + 0.4e1 / 0.3e1 * eta ^ 5 + 0.2936e4 / 0.147e3 * eta ^ 3 - 0.456e3 / 0.7e1 * eta ^ 2 - 0.11644e5 / 0.147e3 * eta + 0.348e3 / 0.49e2 * eta ^ 4) * ci2 ^ 4 + (0.11390e5 / 0.441e3 * eta ^ 2 - 0.1525e4 / 0.147e3 - eta ^ 5 / 0.3e1 - 0.2255e4 / 0.441e3 * eta ^ 4 - 0.3466e4 / 0.441e3 * eta ^ 3 + 0.11789e5 / 0.441e3 * eta) * ci2 ^ 2 - 0.2993e4 / 0.882e3 * eta ^ 2 + 0.715e3 / 0.588e3 - 0.615e3 / 0.196e3 * eta + 0.1489e4 / 0.1764e4 * eta ^ 4 + 0.895e3 / 0.882e3 * eta ^ 3 + eta ^ 5 / 0.36e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((-g - h + f)) - 0.17e2 / 0.160e3 * ((0.607e3 / 0.9e1 - 0.7576e4 / 0.153e3 * eta ^ 2 - 0.362e3 / 0.51e2 * eta + eta ^ 4 - 0.194e3 / 0.153e3 * eta ^ 3) * ci2 ^ 8 + (-0.1214e4 / 0.9e1 - 0.2e1 * eta ^ 4 + 0.388e3 / 0.153e3 * eta ^ 3 + 0.15152e5 / 0.153e3 * eta ^ 2 + 0.724e3 / 0.51e2 * eta) * ci2 ^ 6 + (0.1684e4 / 0.17e2 - 0.1144e4 / 0.153e3 * eta ^ 3 - 0.11456e5 / 0.153e3 * eta ^ 2 - 0.520e3 / 0.153e3 * eta + 0.4e1 / 0.3e1 * eta ^ 4) * ci2 ^ 4 + (0.3880e4 / 0.153e3 * eta ^ 2 - 0.4837e4 / 0.153e3 - eta ^ 4 / 0.3e1 + 0.950e3 / 0.153e3 * eta ^ 3 - 0.566e3 / 0.153e3 * eta) * ci2 ^ 2 - 0.53e2 / 0.18e2 * eta ^ 2 + 0.715e3 / 0.204e3 + 0.8e1 / 0.9e1 * eta + eta ^ 4 / 0.36e2 - 0.18e2 / 0.17e2 * eta ^ 3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-g - h + 3 * f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * cos((-g - h + 7 * f)) / 0.32e2 - 0.27e2 / 0.160e3 * ((eta ^ 3 + 0.131e3 / 0.243e3 * eta ^ 2 - 0.2087e4 / 0.243e3 * eta - 0.2047e4 / 0.243e3) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 - 0.262e3 / 0.243e3 * eta ^ 2 + 0.4174e4 / 0.243e3 * eta + 0.4094e4 / 0.243e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 + 0.4e1 / 0.27e2 * eta ^ 2 - 0.340e3 / 0.27e2 * eta - 0.956e3 / 0.81e2) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.95e2 / 0.243e3 * eta ^ 2 + 0.973e3 / 0.243e3 * eta + 0.821e3 / 0.243e3) * ci2 ^ 2 + eta ^ 3 / 0.36e2 - 0.83e2 / 0.972e3 * eta ^ 2 - 0.427e3 / 0.972e3 * eta - 0.325e3 / 0.972e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((g + h + 5 * f)) - 0.17e2 / 0.160e3 * ((0.607e3 / 0.9e1 - 0.230e3 / 0.153e3 * eta ^ 2 + 0.5035e4 / 0.51e2 * eta + eta ^ 5 - 0.185e3 / 0.153e3 * eta ^ 4 - 0.7082e4 / 0.153e3 * eta ^ 3) * ci2 ^ 8 + (-0.1214e4 / 0.9e1 - 0.2e1 * eta ^ 5 + 0.370e3 / 0.153e3 * eta ^ 4 + 0.14164e5 / 0.153e3 * eta ^ 3 + 0.460e3 / 0.153e3 * eta ^ 2 - 0.10070e5 / 0.51e2 * eta) * ci2 ^ 6 + (0.1684e4 / 0.17e2 + 0.4e1 / 0.3e1 * eta ^ 5 - 0.632e3 / 0.9e1 * eta ^ 3 + 0.1144e4 / 0.153e3 * eta ^ 2 + 0.23404e5 / 0.153e3 * eta - 0.1132e4 / 0.153e3 * eta ^ 4) * ci2 ^ 4 + (-0.458e3 / 0.51e2 * eta ^ 2 - 0.4837e4 / 0.153e3 - eta ^ 5 / 0.3e1 + 0.947e3 / 0.153e3 * eta ^ 4 + 0.3662e4 / 0.153e3 * eta ^ 3 - 0.8299e4 / 0.153e3 * eta) * ci2 ^ 2 + 0.169e3 / 0.102e3 * eta ^ 2 + 0.715e3 / 0.204e3 + 0.4009e4 / 0.612e3 * eta - 0.647e3 / 0.612e3 * eta ^ 4 - 0.853e3 / 0.306e3 * eta ^ 3 + eta ^ 5 / 0.36e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((g + h + 3 * f)) + 0.29e2 / 0.12e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.16e2 / 0.29e2 * eta ^ 3 - 0.246e3 / 0.29e2 * eta ^ 2 - 0.64e2 / 0.29e2 * eta + 0.273e3 / 0.29e2) * Delta * (0.1e1 + eta) * (eta - 0.1e1) * sin((g - h + 3 * f)) + 0.49e2 / 0.12e2 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 4 + 0.8e1 / 0.7e1 * eta ^ 3 - 0.246e3 / 0.49e2 * eta ^ 2 - 0.344e3 / 0.49e2 * eta - 0.3e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + h + f)) - 0.17e2 / 0.24e2 * ci2 ^ 2 * (eta ^ 2 + 0.16e2 / 0.17e2 * eta - 0.9e1 / 0.17e2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-g + h + f)) - 0.11e2 / 0.8e1 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + 0.34e2 / 0.33e2 * eta + 0.3e1 / 0.11e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + f)) + 0.29e2 / 0.24e2 * (eta ^ 2 + 0.10e2 / 0.29e2 * eta - 0.171e3 / 0.29e2) * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((g - h + 5 * f)) + 0.15e2 / 0.8e1 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 3 + 0.19e2 / 0.45e2 * eta ^ 2 - 0.181e3 / 0.45e2 * eta - 0.19e2 / 0.5e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) - 0.2551e4 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 7 - 0.903e3 / 0.2551e4 * eta ^ 6 - 0.8021e4 / 0.2551e4 * eta ^ 5 + 0.11093e5 / 0.2551e4 * eta ^ 4 + 0.25749e5 / 0.2551e4 * eta ^ 3 - 0.1125e4 / 0.2551e4 * eta ^ 2 - 0.23351e5 / 0.2551e4 * eta - 0.12009e5 / 0.2551e4) * ci2 ^ 4 + (-eta ^ 7 + 0.903e3 / 0.2551e4 * eta ^ 6 + 0.8021e4 / 0.2551e4 * eta ^ 5 - 0.11093e5 / 0.2551e4 * eta ^ 4 - 0.25749e5 / 0.2551e4 * eta ^ 3 + 0.1125e4 / 0.2551e4 * eta ^ 2 + 0.23351e5 / 0.2551e4 * eta + 0.12009e5 / 0.2551e4) * ci2 ^ 2 + 0.3031e4 / 0.15306e5 * eta ^ 7 - 0.2207e4 / 0.15306e5 * eta ^ 6 - 0.3383e4 / 0.5102e4 * eta ^ 5 + 0.19181e5 / 0.15306e5 * eta ^ 4 + 0.11015e5 / 0.5102e4 * eta ^ 3 - 0.9485e4 / 0.15306e5 * eta ^ 2 - 0.29639e5 / 0.15306e5 * eta - 0.3691e4 / 0.5102e4) * cos((g - h + f)) - 0.5957e4 / 0.2880e4 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 7 + 0.18251e5 / 0.5957e4 * eta ^ 6 + 0.21089e5 / 0.5957e4 * eta ^ 5 - 0.62753e5 / 0.5957e4 * eta ^ 4 - 0.21463e5 / 0.851e3 * eta ^ 3 - 0.39631e5 / 0.5957e4 * eta ^ 2 + 0.130619e6 / 0.5957e4 * eta + 0.99621e5 / 0.5957e4) * ci2 ^ 4 + (-eta ^ 7 - 0.18251e5 / 0.5957e4 * eta ^ 6 - 0.21089e5 / 0.5957e4 * eta ^ 5 + 0.62753e5 / 0.5957e4 * eta ^ 4 + 0.21463e5 / 0.851e3 * eta ^ 3 + 0.39631e5 / 0.5957e4 * eta ^ 2 - 0.130619e6 / 0.5957e4 * eta - 0.99621e5 / 0.5957e4) * ci2 ^ 2 + 0.337e3 / 0.1702e4 * eta ^ 7 + 0.5377e4 / 0.11914e5 * eta ^ 6 + 0.5115e4 / 0.11914e5 * eta ^ 5 - 0.18035e5 / 0.11914e5 * eta ^ 4 - 0.6493e4 / 0.1702e4 * eta ^ 3 - 0.15597e5 / 0.11914e5 * eta ^ 2 + 0.5663e4 / 0.1702e4 * eta + 0.32607e5 / 0.11914e5) * cos((3 * g + h + 3 * f)) - 0.529e3 / 0.1440e4 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 3 + 0.295e3 / 0.529e3 * eta ^ 2 - 0.1385e4 / 0.529e3 * eta - 0.1503e4 / 0.529e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((5 * g + h + 7 * f)) + 0.7e1 / 0.160e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 3 - 0.17e2 / 0.9e1 * eta ^ 2 - 0.295e3 / 0.63e2 * eta + 0.101e3 / 0.21e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((3 * g - h + f)) + 0.29e2 / 0.320e3 * ((eta ^ 5 - 0.5161e4 / 0.87e2 * eta ^ 4 - 0.14470e5 / 0.87e2 * eta ^ 3 + 0.5578e4 / 0.87e2 * eta ^ 2 + 0.11349e5 / 0.29e2 * eta + 0.22703e5 / 0.87e2) * ci2 ^ 4 + (-eta ^ 5 + 0.5161e4 / 0.87e2 * eta ^ 4 + 0.14470e5 / 0.87e2 * eta ^ 3 - 0.5578e4 / 0.87e2 * eta ^ 2 - 0.11349e5 / 0.29e2 * eta - 0.22703e5 / 0.87e2) * ci2 ^ 2 + 0.55e2 / 0.522e3 * eta ^ 5 - 0.1855e4 / 0.174e3 * eta ^ 4 - 0.2497e4 / 0.87e2 * eta ^ 3 + 0.3065e4 / 0.261e3 * eta ^ 2 + 0.3943e4 / 0.58e2 * eta + 0.7817e4 / 0.174e3) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * (eta - 0.1e1) * cos((3 * g + h + 5 * f)) + 0.13e2 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.307e3 / 0.13e2 * eta ^ 2 + 0.547e3 / 0.13e2 * eta + 0.261e3 / 0.13e2) * ci2 ^ 4 + (-eta ^ 3 - 0.307e3 / 0.13e2 * eta ^ 2 - 0.547e3 / 0.13e2 * eta - 0.261e3 / 0.13e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.431e3 / 0.78e2 * eta ^ 2 + 0.265e3 / 0.26e2 * eta + 0.385e3 / 0.78e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-g + h + 3 * f)) + 0.119e3 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.2400e4 / 0.119e3 * eta ^ 3 + 0.86e2 / 0.17e2 * eta ^ 2 - 0.5776e4 / 0.119e3 * eta - 0.2449e4 / 0.119e3) * ci2 ^ 4 + (-eta ^ 4 - 0.2400e4 / 0.119e3 * eta ^ 3 - 0.86e2 / 0.17e2 * eta ^ 2 + 0.5776e4 / 0.119e3 * eta + 0.2449e4 / 0.119e3) * ci2 ^ 2 + 0.151e3 / 0.714e3 * eta ^ 4 + 0.562e3 / 0.119e3 * eta ^ 3 + 0.359e3 / 0.357e3 * eta ^ 2 - 0.3950e4 / 0.357e3 * eta - 0.2981e4 / 0.714e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((-g + h + f)) + 0.119e3 / 0.720e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 5 - 0.11e2 / 0.17e2 * eta ^ 4 - 0.666e3 / 0.119e3 * eta ^ 3 + 0.118e3 / 0.119e3 * eta ^ 2 + 0.635e3 / 0.119e3 * eta + 0.111e3 / 0.119e3) * (0.1e1 + eta) * cos((3 * g - h + 3 * f)) - 0.89e2 / 0.720e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) * (eta ^ 5 + 0.61e2 / 0.89e2 * eta ^ 4 - 0.838e3 / 0.89e2 * eta ^ 3 - 0.854e3 / 0.89e2 * eta ^ 2 + 0.661e3 / 0.89e2 * eta + 0.1281e4 / 0.89e2) * cos((5 * g + h + 5 * f)) + 0.71e2 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.3664e4 / 0.71e2 * eta ^ 3 + 0.6850e4 / 0.71e2 * eta ^ 2 + 0.792e3 / 0.71e2 * eta - 0.2449e4 / 0.71e2) * ci2 ^ 4 + (-eta ^ 4 - 0.3664e4 / 0.71e2 * eta ^ 3 - 0.6850e4 / 0.71e2 * eta ^ 2 - 0.792e3 / 0.71e2 * eta + 0.2449e4 / 0.71e2) * ci2 ^ 2 + 0.103e3 / 0.426e3 * eta ^ 4 + 0.2702e4 / 0.213e3 * eta ^ 3 + 0.5075e4 / 0.213e3 * eta ^ 2 + 0.926e3 / 0.213e3 * eta - 0.2981e4 / 0.426e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + f)) + 0.25e2 / 0.192e3 * ci2 ^ 2 * ((eta ^ 2 - 0.1046e4 / 0.125e3 * eta - 0.3067e4 / 0.125e3) * ci2 ^ 4 + (-eta ^ 2 + 0.1046e4 / 0.125e3 * eta + 0.3067e4 / 0.125e3) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.589e3 / 0.375e3 * eta - 0.3199e4 / 0.750e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * cos((g - h + 7 * f)) + 0.29e2 / 0.960e3 * ((eta ^ 2 + 0.330e3 / 0.29e2 * eta + 0.9e1) * ci2 ^ 4 + (-eta ^ 2 - 0.330e3 / 0.29e2 * eta - 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 + 0.227e3 / 0.87e2 * eta + 0.385e3 / 0.174e3) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 3 * f)) + 0.479e3 / 0.1440e4 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.598e3 / 0.479e3 * eta + 0.303e3 / 0.479e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((5 * g + h + f)) + 0.7e1 / 0.192e3 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * cos((g - h + 9 * f)) + 0.41e2 / 0.192e3 * ci2 ^ 2 * ((eta ^ 3 - 0.941e3 / 0.205e3 * eta ^ 2 - 0.4093e4 / 0.205e3 * eta - 0.3067e4 / 0.205e3) * ci2 ^ 4 + (-eta ^ 3 + 0.941e3 / 0.205e3 * eta ^ 2 + 0.4093e4 / 0.205e3 * eta + 0.3067e4 / 0.205e3) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.1073e4 / 0.1230e4 * eta ^ 2 - 0.4357e4 / 0.1230e4 * eta - 0.3199e4 / 0.1230e4) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 7 * f)) - 0.59e2 / 0.480e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 - 0.2e1 / 0.3e1 * eta - 0.501e3 / 0.59e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((3 * g - h + 7 * f)) + 0.359e3 / 0.720e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 4 + 0.436e3 / 0.359e3 * eta ^ 3 - 0.406e3 / 0.359e3 * eta ^ 2 - 0.524e3 / 0.359e3 * eta + 0.111e3 / 0.359e3) * (0.1e1 + eta) * (eta - 0.1e1) * cos((5 * g + h + 3 * f)) + 0.11e2 / 0.144e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 4 + 0.116e3 / 0.55e2 * eta ^ 3 + 0.234e3 / 0.55e2 * eta ^ 2 - 0.124e3 / 0.11e2 * eta - 0.1281e4 / 0.55e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((3 * g - h + 5 * f)) + 0.7e1 / 0.192e3 * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * cos((3 * g + h + 9 * f)) + ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * cos((-3 * g - h + 5 * f)) / 0.320e3 - 0.19e2 / 0.320e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.2960e4 / 0.57e2 * eta ^ 3 + 0.7166e4 / 0.57e2 * eta ^ 2 - 0.12472e5 / 0.57e2 * eta - 0.22703e5 / 0.57e2) * ci2 ^ 4 + (-eta ^ 4 - 0.2960e4 / 0.57e2 * eta ^ 3 - 0.7166e4 / 0.57e2 * eta ^ 2 + 0.12472e5 / 0.57e2 * eta + 0.22703e5 / 0.57e2) * ci2 ^ 2 + 0.89e2 / 0.342e3 * eta ^ 4 + 0.1538e4 / 0.171e3 * eta ^ 3 + 0.1199e4 / 0.57e2 * eta ^ 2 - 0.6638e4 / 0.171e3 * eta - 0.7817e4 / 0.114e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) + ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * cos((-g + h + 5 * f)) / 0.320e3) / eta ^ 13 / a ^ 3 / (0.1e1 + eta) -0.585e3 / 0.4e1 * (0.45e2 / 0.104e3 * ci2 ^ 2 * (eta ^ 3 + 0.19e2 / 0.45e2 * eta ^ 2 - 0.181e3 / 0.45e2 * eta - 0.19e2 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((3 * g + h + 5 * f)) - 0.29e2 / 0.52e2 * (eta ^ 4 + 0.16e2 / 0.29e2 * eta ^ 3 - 0.246e3 / 0.29e2 * eta ^ 2 - 0.64e2 / 0.29e2 * eta + 0.273e3 / 0.29e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) * (eta - 0.1e1) * cos((g - h + 3 * f)) + 0.49e2 / 0.52e2 * ci2 ^ 2 * (eta ^ 4 + 0.8e1 / 0.7e1 * eta ^ 3 - 0.246e3 / 0.49e2 * eta ^ 2 - 0.344e3 / 0.49e2 * eta - 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) * (eta - 0.1e1) * cos((3 * g + h + f)) - 0.17e2 / 0.104e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (eta ^ 2 + 0.16e2 / 0.17e2 * eta - 0.9e1 / 0.17e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-g + h + f)) + 0.33e2 / 0.104e3 * (eta ^ 2 + 0.34e2 / 0.33e2 * eta + 0.3e1 / 0.11e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + f)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * cos((-g + h + 3 * f)) / 0.104e3 + 0.53e2 / 0.52e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta ^ 5 + 0.13e2 / 0.53e2 * eta ^ 4 - 0.382e3 / 0.53e2 * eta ^ 3 - 0.182e3 / 0.53e2 * eta ^ 2 + 0.337e3 / 0.53e2 * eta + 0.273e3 / 0.53e2) * Delta * (0.1e1 + eta) * cos((3 * g + h + 3 * f)) - 0.147e3 / 0.2080e4 * sin((g + h + f)) * ((0.425e3 / 0.21e2 + 0.10513e5 / 0.441e3 * eta ^ 2 + 0.30463e5 / 0.441e3 * eta + eta ^ 7 + 0.859e3 / 0.441e3 * eta ^ 6 + 0.1567e4 / 0.147e3 * eta ^ 5 - 0.15625e5 / 0.441e3 * eta ^ 4 - 0.3565e4 / 0.49e2 * eta ^ 3) * ci2 ^ 8 + (-0.2e1 * eta ^ 7 - 0.850e3 / 0.21e2 - 0.1718e4 / 0.441e3 * eta ^ 6 - 0.3134e4 / 0.147e3 * eta ^ 5 + 0.31250e5 / 0.441e3 * eta ^ 4 + 0.7130e4 / 0.49e2 * eta ^ 3 - 0.21026e5 / 0.441e3 * eta ^ 2 - 0.60926e5 / 0.441e3 * eta) * ci2 ^ 6 + (0.1500e4 / 0.49e2 + 0.4e1 / 0.3e1 * eta ^ 7 + 0.148e3 / 0.21e2 * eta ^ 6 + 0.2836e4 / 0.147e3 * eta ^ 5 - 0.17204e5 / 0.147e3 * eta ^ 3 + 0.6052e4 / 0.147e3 * eta ^ 2 + 0.15964e5 / 0.147e3 * eta - 0.9284e4 / 0.147e3 * eta ^ 4) * ci2 ^ 4 + (-eta ^ 7 / 0.3e1 - 0.7643e4 / 0.441e3 * eta ^ 2 - 0.1525e4 / 0.147e3 - 0.423e3 / 0.49e2 * eta ^ 5 + 0.12227e5 / 0.441e3 * eta ^ 4 + 0.6509e4 / 0.147e3 * eta ^ 3 - 0.17429e5 / 0.441e3 * eta - 0.2249e4 / 0.441e3 * eta ^ 6) * ci2 ^ 2 + 0.4189e4 / 0.1764e4 * eta ^ 2 + eta ^ 7 / 0.36e2 + 0.715e3 / 0.588e3 + 0.2885e4 / 0.588e3 * eta - 0.971e3 / 0.252e3 * eta ^ 4 + 0.1487e4 / 0.1764e4 * eta ^ 6 - 0.9917e4 / 0.1764e4 * eta ^ 3 + 0.703e3 / 0.588e3 * eta ^ 5) + 0.147e3 / 0.2080e4 * ((0.425e3 / 0.21e2 - 0.17338e5 / 0.441e3 * eta ^ 2 - 0.23143e5 / 0.441e3 * eta + eta ^ 5 + 0.877e3 / 0.441e3 * eta ^ 4 + 0.5342e4 / 0.441e3 * eta ^ 3) * ci2 ^ 8 + (-0.850e3 / 0.21e2 - 0.2e1 * eta ^ 5 - 0.1754e4 / 0.441e3 * eta ^ 4 - 0.10684e5 / 0.441e3 * eta ^ 3 + 0.34676e5 / 0.441e3 * eta ^ 2 + 0.46286e5 / 0.441e3 * eta) * ci2 ^ 6 + (0.1500e4 / 0.49e2 + 0.4e1 / 0.3e1 * eta ^ 5 + 0.2936e4 / 0.147e3 * eta ^ 3 - 0.456e3 / 0.7e1 * eta ^ 2 - 0.11644e5 / 0.147e3 * eta + 0.348e3 / 0.49e2 * eta ^ 4) * ci2 ^ 4 + (0.11390e5 / 0.441e3 * eta ^ 2 - 0.1525e4 / 0.147e3 - eta ^ 5 / 0.3e1 - 0.2255e4 / 0.441e3 * eta ^ 4 - 0.3466e4 / 0.441e3 * eta ^ 3 + 0.11789e5 / 0.441e3 * eta) * ci2 ^ 2 - 0.2993e4 / 0.882e3 * eta ^ 2 + 0.715e3 / 0.588e3 - 0.615e3 / 0.196e3 * eta + 0.1489e4 / 0.1764e4 * eta ^ 4 + 0.895e3 / 0.882e3 * eta ^ 3 + eta ^ 5 / 0.36e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-g - h + f)) - 0.81e2 / 0.2080e4 * ((eta ^ 2 + 0.140e3 / 0.243e3 * eta - 0.2047e4 / 0.243e3) * ci2 ^ 8 + (-0.2e1 * eta ^ 2 - 0.280e3 / 0.243e3 * eta + 0.4094e4 / 0.243e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 2 + 0.16e2 / 0.81e2 * eta - 0.956e3 / 0.81e2) * ci2 ^ 4 + (-eta ^ 2 / 0.3e1 + 0.92e2 / 0.243e3 * eta + 0.821e3 / 0.243e3) * ci2 ^ 2 + eta ^ 2 / 0.36e2 - 0.41e2 / 0.486e3 * eta - 0.325e3 / 0.972e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-g - h + 5 * f)) + 0.51e2 / 0.2080e4 * (0.1e1 + eta) * (eta - 0.1e1) * ((0.607e3 / 0.9e1 - 0.230e3 / 0.153e3 * eta ^ 2 + 0.5035e4 / 0.51e2 * eta + eta ^ 5 - 0.185e3 / 0.153e3 * eta ^ 4 - 0.7082e4 / 0.153e3 * eta ^ 3) * ci2 ^ 8 + (-0.1214e4 / 0.9e1 - 0.2e1 * eta ^ 5 + 0.370e3 / 0.153e3 * eta ^ 4 + 0.14164e5 / 0.153e3 * eta ^ 3 + 0.460e3 / 0.153e3 * eta ^ 2 - 0.10070e5 / 0.51e2 * eta) * ci2 ^ 6 + (0.1684e4 / 0.17e2 + 0.4e1 / 0.3e1 * eta ^ 5 - 0.632e3 / 0.9e1 * eta ^ 3 + 0.1144e4 / 0.153e3 * eta ^ 2 + 0.23404e5 / 0.153e3 * eta - 0.1132e4 / 0.153e3 * eta ^ 4) * ci2 ^ 4 + (-0.458e3 / 0.51e2 * eta ^ 2 - 0.4837e4 / 0.153e3 - eta ^ 5 / 0.3e1 + 0.947e3 / 0.153e3 * eta ^ 4 + 0.3662e4 / 0.153e3 * eta ^ 3 - 0.8299e4 / 0.153e3 * eta) * ci2 ^ 2 + 0.169e3 / 0.102e3 * eta ^ 2 + 0.715e3 / 0.204e3 + 0.4009e4 / 0.612e3 * eta - 0.647e3 / 0.612e3 * eta ^ 4 - 0.853e3 / 0.306e3 * eta ^ 3 + eta ^ 5 / 0.36e2) * sin((g + h + 3 * f)) - 0.51e2 / 0.2080e4 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((0.607e3 / 0.9e1 - 0.7576e4 / 0.153e3 * eta ^ 2 - 0.362e3 / 0.51e2 * eta + eta ^ 4 - 0.194e3 / 0.153e3 * eta ^ 3) * ci2 ^ 8 + (-0.1214e4 / 0.9e1 - 0.2e1 * eta ^ 4 + 0.388e3 / 0.153e3 * eta ^ 3 + 0.15152e5 / 0.153e3 * eta ^ 2 + 0.724e3 / 0.51e2 * eta) * ci2 ^ 6 + (0.1684e4 / 0.17e2 - 0.1144e4 / 0.153e3 * eta ^ 3 - 0.11456e5 / 0.153e3 * eta ^ 2 - 0.520e3 / 0.153e3 * eta + 0.4e1 / 0.3e1 * eta ^ 4) * ci2 ^ 4 + (0.3880e4 / 0.153e3 * eta ^ 2 - 0.4837e4 / 0.153e3 - eta ^ 4 / 0.3e1 + 0.950e3 / 0.153e3 * eta ^ 3 - 0.566e3 / 0.153e3 * eta) * ci2 ^ 2 - 0.53e2 / 0.18e2 * eta ^ 2 + 0.715e3 / 0.204e3 + 0.8e1 / 0.9e1 * eta + eta ^ 4 / 0.36e2 - 0.18e2 / 0.17e2 * eta ^ 3) * sin((-g - h + 3 * f)) - 0.3e1 / 0.416e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * sin((-g - h + 7 * f)) + 0.81e2 / 0.2080e4 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 + 0.131e3 / 0.243e3 * eta ^ 2 - 0.2087e4 / 0.243e3 * eta - 0.2047e4 / 0.243e3) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 - 0.262e3 / 0.243e3 * eta ^ 2 + 0.4174e4 / 0.243e3 * eta + 0.4094e4 / 0.243e3) * ci2 ^ 6 + (0.4e1 / 0.3e1 * eta ^ 3 + 0.4e1 / 0.27e2 * eta ^ 2 - 0.340e3 / 0.27e2 * eta - 0.956e3 / 0.81e2) * ci2 ^ 4 + (-eta ^ 3 / 0.3e1 + 0.95e2 / 0.243e3 * eta ^ 2 + 0.973e3 / 0.243e3 * eta + 0.821e3 / 0.243e3) * ci2 ^ 2 + eta ^ 3 / 0.36e2 - 0.83e2 / 0.972e3 * eta ^ 2 - 0.427e3 / 0.972e3 * eta - 0.325e3 / 0.972e3) * (eta - 0.1e1) ^ 2 * sin((g + h + 5 * f)) + 0.3e1 / 0.416e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * sin((g + h + 7 * f)) + 0.5957e4 / 0.12480e5 * ((eta ^ 7 + 0.18251e5 / 0.5957e4 * eta ^ 6 + 0.21089e5 / 0.5957e4 * eta ^ 5 - 0.62753e5 / 0.5957e4 * eta ^ 4 - 0.21463e5 / 0.851e3 * eta ^ 3 - 0.39631e5 / 0.5957e4 * eta ^ 2 + 0.130619e6 / 0.5957e4 * eta + 0.99621e5 / 0.5957e4) * ci2 ^ 4 + (-eta ^ 7 - 0.18251e5 / 0.5957e4 * eta ^ 6 - 0.21089e5 / 0.5957e4 * eta ^ 5 + 0.62753e5 / 0.5957e4 * eta ^ 4 + 0.21463e5 / 0.851e3 * eta ^ 3 + 0.39631e5 / 0.5957e4 * eta ^ 2 - 0.130619e6 / 0.5957e4 * eta - 0.99621e5 / 0.5957e4) * ci2 ^ 2 + 0.337e3 / 0.1702e4 * eta ^ 7 + 0.5377e4 / 0.11914e5 * eta ^ 6 + 0.5115e4 / 0.11914e5 * eta ^ 5 - 0.18035e5 / 0.11914e5 * eta ^ 4 - 0.6493e4 / 0.1702e4 * eta ^ 3 - 0.15597e5 / 0.11914e5 * eta ^ 2 + 0.5663e4 / 0.1702e4 * eta + 0.32607e5 / 0.11914e5) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + h + 3 * f)) - 0.2551e4 / 0.4160e4 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 7 - 0.903e3 / 0.2551e4 * eta ^ 6 - 0.8021e4 / 0.2551e4 * eta ^ 5 + 0.11093e5 / 0.2551e4 * eta ^ 4 + 0.25749e5 / 0.2551e4 * eta ^ 3 - 0.1125e4 / 0.2551e4 * eta ^ 2 - 0.23351e5 / 0.2551e4 * eta - 0.12009e5 / 0.2551e4) * ci2 ^ 4 + (-eta ^ 7 + 0.903e3 / 0.2551e4 * eta ^ 6 + 0.8021e4 / 0.2551e4 * eta ^ 5 - 0.11093e5 / 0.2551e4 * eta ^ 4 - 0.25749e5 / 0.2551e4 * eta ^ 3 + 0.1125e4 / 0.2551e4 * eta ^ 2 + 0.23351e5 / 0.2551e4 * eta + 0.12009e5 / 0.2551e4) * ci2 ^ 2 + 0.3031e4 / 0.15306e5 * eta ^ 7 - 0.2207e4 / 0.15306e5 * eta ^ 6 - 0.3383e4 / 0.5102e4 * eta ^ 5 + 0.19181e5 / 0.15306e5 * eta ^ 4 + 0.11015e5 / 0.5102e4 * eta ^ 3 - 0.9485e4 / 0.15306e5 * eta ^ 2 - 0.29639e5 / 0.15306e5 * eta - 0.3691e4 / 0.5102e4) * sin((g - h + f)) - 0.3301e4 / 0.12480e5 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.7418e4 / 0.3301e4 * eta ^ 5 - 0.2357e4 / 0.3301e4 * eta ^ 4 - 0.45140e5 / 0.3301e4 * eta ^ 3 - 0.29941e5 / 0.3301e4 * eta ^ 2 + 0.105658e6 / 0.3301e4 * eta + 0.99621e5 / 0.3301e4) * ci2 ^ 4 + (-eta ^ 6 - 0.7418e4 / 0.3301e4 * eta ^ 5 + 0.2357e4 / 0.3301e4 * eta ^ 4 + 0.45140e5 / 0.3301e4 * eta ^ 3 + 0.29941e5 / 0.3301e4 * eta ^ 2 - 0.105658e6 / 0.3301e4 * eta - 0.99621e5 / 0.3301e4) * ci2 ^ 2 + 0.1303e4 / 0.6602e4 * eta ^ 6 + 0.931e3 / 0.3301e4 * eta ^ 5 - 0.2751e4 / 0.6602e4 * eta ^ 4 - 0.6294e4 / 0.3301e4 * eta ^ 3 - 0.3671e4 / 0.6602e4 * eta ^ 2 + 0.18659e5 / 0.3301e4 * eta + 0.32607e5 / 0.6602e4) * (eta - 0.1e1) * sin((g - h + 3 * f)) - 0.25e2 / 0.1248e4 * ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((3 * g - h + 9 * f)) + 0.119e3 / 0.3120e4 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 5 - 0.11e2 / 0.17e2 * eta ^ 4 - 0.666e3 / 0.119e3 * eta ^ 3 + 0.118e3 / 0.119e3 * eta ^ 2 + 0.635e3 / 0.119e3 * eta + 0.111e3 / 0.119e3) * (0.1e1 + eta) * sin((3 * g - h + 3 * f)) + ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-3 * g + h + f)) / 0.480e3 + 0.5271e4 / 0.4160e4 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.1042e4 / 0.753e3 * eta ^ 5 + 0.505e3 / 0.5271e4 * eta ^ 4 + 0.5732e4 / 0.5271e4 * eta ^ 3 + 0.3155e4 / 0.1757e4 * eta ^ 2 - 0.9922e4 / 0.5271e4 * eta - 0.4003e4 / 0.1757e4) * ci2 ^ 4 + (-eta ^ 6 - 0.1042e4 / 0.753e3 * eta ^ 5 - 0.505e3 / 0.5271e4 * eta ^ 4 - 0.5732e4 / 0.5271e4 * eta ^ 3 - 0.3155e4 / 0.1757e4 * eta ^ 2 + 0.9922e4 / 0.5271e4 * eta + 0.4003e4 / 0.1757e4) * ci2 ^ 2 + 0.6263e4 / 0.31626e5 * eta ^ 6 + 0.3203e4 / 0.15813e5 * eta ^ 5 - 0.4127e4 / 0.31626e5 * eta ^ 4 + 0.5002e4 / 0.15813e5 * eta ^ 3 + 0.24649e5 / 0.31626e5 * eta ^ 2 - 0.59e2 / 0.2259e4 * eta - 0.3691e4 / 0.10542e5) * (eta - 0.1e1) * sin((3 * g + h + f)) + 0.25e2 / 0.1248e4 * ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * g + h + 9 * f)) - ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((-5 * g - h + f)) / 0.480e3 + 0.89e2 / 0.3120e4 * ci2 ^ 4 * (eta ^ 5 + 0.61e2 / 0.89e2 * eta ^ 4 - 0.838e3 / 0.89e2 * eta ^ 3 - 0.854e3 / 0.89e2 * eta ^ 2 + 0.661e3 / 0.89e2 * eta + 0.1281e4 / 0.89e2) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) * sin((5 * g + h + 5 * f)) - 0.29e2 / 0.104e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta ^ 2 + 0.10e2 / 0.29e2 * eta - 0.171e3 / 0.29e2) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) + (0.11e2 / 0.26e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((g - h + 6 * f)) + 0.30e2 / 0.13e2 * ci2 ^ 2 * (eta ^ 3 + 0.3e1 / 0.2e1 * eta ^ 2 - 0.22e2 / 0.15e2 * eta - 0.21e2 / 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (eta - 0.1e1) * cos((g - h + 2 * f)) - ((eta ^ 3 - 0.231e3 / 0.20e2 * eta ^ 2 - 0.49e2 / 0.20e2 * eta + 0.353e3 / 0.10e2) * ci2 ^ 8 + (-0.2e1 * eta ^ 3 + 0.231e3 / 0.10e2 * eta ^ 2 + 0.49e2 / 0.10e2 * eta - 0.353e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta ^ 3 - 0.33e2 / 0.2e1 * eta ^ 2 + 0.507e3 / 0.10e2) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta ^ 3 + 0.99e2 / 0.20e2 * eta ^ 2 - 0.49e2 / 0.20e2 * eta - 0.77e2 / 0.5e1) * ci2 ^ 2 - eta ^ 3 / 0.10e2 - 0.41e2 / 0.80e2 * eta ^ 2 + 0.41e2 / 0.80e2 * eta + 0.13e2 / 0.8e1) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-g - h + 4 * f)) / 0.39e2 - ((eta - 0.112e3 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta + 0.224e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * ci2 ^ 2 - eta / 0.10e2 - 0.3e1 / 0.4e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-g - h + 6 * f)) / 0.312e3 + ((eta - 0.112e3 / 0.5e1) * ci2 ^ 8 + (-0.2e1 * eta + 0.224e3 / 0.5e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * ci2 ^ 4 + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * ci2 ^ 2 - eta / 0.10e2 - 0.3e1 / 0.4e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * sin((g + h + 6 * f)) / 0.312e3 + ((0.353e3 / 0.10e2 - 0.5e1 / 0.2e1 * eta ^ 2 + 0.167e3 / 0.4e1 * eta + eta ^ 4 - 0.231e3 / 0.20e2 * eta ^ 3) * ci2 ^ 8 + (-0.353e3 / 0.5e1 - 0.2e1 * eta ^ 4 + 0.231e3 / 0.10e2 * eta ^ 3 + 0.5e1 * eta ^ 2 - 0.167e3 / 0.2e1 * eta) * ci2 ^ 6 + (0.507e3 / 0.10e2 - 0.33e2 / 0.2e1 * eta ^ 3 + 0.3e1 / 0.10e2 * eta ^ 2 + 0.633e3 / 0.10e2 * eta + 0.3e1 / 0.5e1 * eta ^ 4) * ci2 ^ 4 + (-0.14e2 / 0.5e1 * eta ^ 2 - 0.77e2 / 0.5e1 + 0.2e1 / 0.5e1 * eta ^ 4 + 0.99e2 / 0.20e2 * eta ^ 3 - 0.431e3 / 0.20e2 * eta) * ci2 ^ 2 + 0.23e2 / 0.40e2 * eta ^ 2 + 0.13e2 / 0.8e1 + 0.201e3 / 0.80e2 * eta - eta ^ 4 / 0.10e2 - 0.41e2 / 0.80e2 * eta ^ 3) * (0.1e1 + eta) * (eta - 0.1e1) * sin((g + h + 4 * f)) / 0.39e2 - 0.6e1 / 0.65e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.395e3 / 0.24e2 * eta ^ 5 + 0.311e3 / 0.12e2 * eta ^ 4 + 0.377e3 / 0.12e2 * eta ^ 3 + 0.73e2 / 0.6e1 * eta ^ 2 - 0.399e3 / 0.8e1 * eta - 0.243e3 / 0.4e1) * ci2 ^ 4 + (-eta ^ 6 - 0.395e3 / 0.24e2 * eta ^ 5 - 0.311e3 / 0.12e2 * eta ^ 4 - 0.377e3 / 0.12e2 * eta ^ 3 - 0.73e2 / 0.6e1 * eta ^ 2 + 0.399e3 / 0.8e1 * eta + 0.243e3 / 0.4e1) * ci2 ^ 2 + 0.7e1 / 0.18e2 * eta ^ 6 + 0.503e3 / 0.144e3 * eta ^ 5 + 0.65e2 / 0.24e2 * eta ^ 4 + 0.203e3 / 0.72e2 * eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 - 0.701e3 / 0.144e3 * eta - 0.229e3 / 0.24e2) * sin((3 * g + h + 2 * f)) + 0.113e3 / 0.520e3 * ((eta ^ 6 + 0.531e3 / 0.226e3 * eta ^ 5 - 0.3829e4 / 0.226e3 * eta ^ 4 - 0.4571e4 / 0.113e3 * eta ^ 3 + 0.130e3 / 0.113e3 * eta ^ 2 + 0.12291e5 / 0.226e3 * eta + 0.8271e4 / 0.226e3) * ci2 ^ 4 + (-eta ^ 6 - 0.531e3 / 0.226e3 * eta ^ 5 + 0.3829e4 / 0.226e3 * eta ^ 4 + 0.4571e4 / 0.113e3 * eta ^ 3 - 0.130e3 / 0.113e3 * eta ^ 2 - 0.12291e5 / 0.226e3 * eta - 0.8271e4 / 0.226e3) * ci2 ^ 2 + 0.107e3 / 0.678e3 * eta ^ 6 + 0.467e3 / 0.1356e4 * eta ^ 5 - 0.1291e4 / 0.452e3 * eta ^ 4 - 0.4571e4 / 0.678e3 * eta ^ 3 + 0.44e2 / 0.339e3 * eta ^ 2 + 0.12323e5 / 0.1356e4 * eta + 0.2793e4 / 0.452e3) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + h + 4 * f)) + 0.4e1 / 0.65e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.239e3 / 0.16e2 * eta ^ 5 - 0.43e2 / 0.8e1 * eta ^ 4 - 0.367e3 / 0.8e1 * eta ^ 3 - 0.129e3 / 0.4e1 * eta ^ 2 + 0.1071e4 / 0.16e2 * eta + 0.729e3 / 0.8e1) * ci2 ^ 4 + (-eta ^ 6 - 0.239e3 / 0.16e2 * eta ^ 5 + 0.43e2 / 0.8e1 * eta ^ 4 + 0.367e3 / 0.8e1 * eta ^ 3 + 0.129e3 / 0.4e1 * eta ^ 2 - 0.1071e4 / 0.16e2 * eta - 0.729e3 / 0.8e1) * ci2 ^ 2 + eta ^ 6 / 0.3e1 + 0.97e2 / 0.32e2 * eta ^ 5 - 0.163e3 / 0.48e2 * eta ^ 4 - 0.485e3 / 0.48e2 * eta ^ 3 - eta ^ 2 / 0.2e1 + 0.1399e4 / 0.96e2 * eta + 0.229e3 / 0.16e2) * sin((g - h + 2 * f)) + ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 6 + eta ^ 5 / 0.2e1 - 0.25e2 / 0.2e1 * eta ^ 4 - 0.15e2 * eta ^ 3 + 0.8e1 * eta ^ 2 + 0.223e3 / 0.6e1 * eta + 0.63e2 / 0.2e1) * sin((3 * g - h + 4 * f)) / 0.130e3 + 0.3e1 / 0.13e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.265e3 / 0.48e2 + 0.847e3 / 0.90e2 * eta ^ 2 + 0.13127e5 / 0.720e3 * eta + eta ^ 7 + 0.119e3 / 0.72e2 * eta ^ 6 - 0.341e3 / 0.144e3 * eta ^ 5 - 0.8773e4 / 0.720e3 * eta ^ 4 - 0.4439e4 / 0.360e3 * eta ^ 3) * ci2 ^ 4 + (-eta ^ 7 - 0.119e3 / 0.72e2 * eta ^ 6 + 0.341e3 / 0.144e3 * eta ^ 5 + 0.8773e4 / 0.720e3 * eta ^ 4 + 0.4439e4 / 0.360e3 * eta ^ 3 - 0.847e3 / 0.90e2 * eta ^ 2 - 0.13127e5 / 0.720e3 * eta - 0.265e3 / 0.48e2) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 7 + 0.283e3 / 0.720e3 * eta ^ 6 - 0.257e3 / 0.480e3 * eta ^ 5 - 0.459e3 / 0.160e3 * eta ^ 4 - 0.1933e4 / 0.720e3 * eta ^ 3 + 0.877e3 / 0.360e3 * eta ^ 2 + 0.1871e4 / 0.480e3 * eta + 0.1337e4 / 0.1440e4) * sin((g - h)) - 0.3e1 / 0.130e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 6 + 0.7e1 / 0.6e1 * eta ^ 5 - 0.11e2 / 0.6e1 * eta ^ 4 - eta ^ 3 + 0.10e2 / 0.9e1 * eta ^ 2 - 0.155e3 / 0.18e2 * eta - 0.21e2 / 0.2e1) * sin((5 * g + h + 4 * f)) + 0.3e1 / 0.520e3 * (eta ^ 5 - eta ^ 4 - 0.118e3 / 0.9e1 * eta ^ 3 + 0.94e2 / 0.9e1 * eta ^ 2 + 0.245e3 / 0.9e1 * eta - 0.31e2 / 0.3e1) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) * sin((3 * g - h + 2 * f)) - ci2 ^ 4 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((3 * g - h + 10 * f)) / 0.520e3 - 0.7e1 / 0.13e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 6 + 0.2171e4 / 0.840e3 * eta ^ 5 + 0.661e3 / 0.336e3 * eta ^ 4 - 0.2549e4 / 0.840e3 * eta ^ 3 - 0.697e3 / 0.105e3 * eta ^ 2 - 0.67e2 / 0.84e2 * eta + 0.265e3 / 0.112e3) * ci2 ^ 4 + (-eta ^ 6 - 0.2171e4 / 0.840e3 * eta ^ 5 - 0.661e3 / 0.336e3 * eta ^ 4 + 0.2549e4 / 0.840e3 * eta ^ 3 + 0.697e3 / 0.105e3 * eta ^ 2 + 0.67e2 / 0.84e2 * eta - 0.265e3 / 0.112e3) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 6 + 0.1027e4 / 0.1680e4 * eta ^ 5 + 0.533e3 / 0.1120e4 * eta ^ 4 - 0.1387e4 / 0.1680e4 * eta ^ 3 - 0.51e2 / 0.28e2 * eta ^ 2 - 0.103e3 / 0.210e3 * eta + 0.191e3 / 0.480e3) * (eta - 0.1e1) * sin((3 * g + h)) + 0.7e1 / 0.780e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 5 + 0.3e1 / 0.7e1 * eta ^ 4 - 0.184e3 / 0.7e1 * eta ^ 3 - 0.124e3 / 0.7e1 * eta ^ 2 + 0.35e2 * eta + 0.309e3 / 0.7e1) * (0.1e1 + eta) * sin((5 * g + h + 6 * f)) + ci2 ^ 4 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((5 * g + h + 10 * f)) / 0.520e3 - 0.49e2 / 0.520e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 - 0.221e3 / 0.98e2 * eta ^ 3 - 0.1523e4 / 0.98e2 * eta ^ 2 + 0.1073e4 / 0.98e2 * eta + 0.2757e4 / 0.98e2) * (eta + 0.3e1) * ci2 ^ 4 - (eta ^ 4 - 0.221e3 / 0.98e2 * eta ^ 3 - 0.1523e4 / 0.98e2 * eta ^ 2 + 0.1073e4 / 0.98e2 * eta + 0.2757e4 / 0.98e2) * (eta + 0.3e1) * ci2 ^ 2 + 0.43e2 / 0.294e3 * eta ^ 5 + 0.5e1 / 0.588e3 * eta ^ 4 - 0.1033e4 / 0.294e3 * eta ^ 3 - 0.16e2 / 0.3e1 * eta ^ 2 + 0.1567e4 / 0.147e3 * eta + 0.57e2 / 0.4e1) * (eta - 0.1e1) * sin((g - h + 4 * f)) + 0.23e2 / 0.13e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 2 + 0.7e1 / 0.23e2 * eta - 0.48e2 / 0.23e2) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) * (eta - 0.1e1) * cos((g - h + 4 * f)) - 0.25e2 / 0.13e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta ^ 2 + 0.29e2 / 0.25e2 * eta + 0.12e2 / 0.25e2) * Delta * (0.1e1 + eta) * (eta - 0.1e1) * cos((3 * g + h)) + ((-0.131e3 / 0.65e2 - 0.653e3 / 0.1560e4 * eta ^ 2 - 0.1243e4 / 0.312e3 * eta + 0.23e2 / 0.312e3 * eta ^ 6 - 0.19e2 / 0.120e3 * eta ^ 5 + 0.179e3 / 0.260e3 * eta ^ 4 + 0.443e3 / 0.156e3 * eta ^ 3) * ci2 ^ 8 + (0.262e3 / 0.65e2 - 0.23e2 / 0.156e3 * eta ^ 6 + 0.19e2 / 0.60e2 * eta ^ 5 - 0.179e3 / 0.130e3 * eta ^ 4 - 0.443e3 / 0.78e2 * eta ^ 3 + 0.653e3 / 0.780e3 * eta ^ 2 + 0.1243e4 / 0.156e3 * eta) * ci2 ^ 6 + (-0.1567e4 / 0.520e3 + 0.23e2 / 0.520e3 * eta ^ 6 - 0.18e2 / 0.65e2 * eta ^ 5 + 0.292e3 / 0.65e2 * eta ^ 3 - 0.39e2 / 0.40e2 * eta ^ 2 - 0.406e3 / 0.65e2 * eta + 0.739e3 / 0.520e3 * eta ^ 4) * ci2 ^ 4 + (0.217e3 / 0.390e3 * eta ^ 2 + 0.519e3 / 0.520e3 + 0.37e2 / 0.312e3 * eta ^ 5 - 0.381e3 / 0.520e3 * eta ^ 4 - 0.1289e4 / 0.780e3 * eta ^ 3 + 0.3529e4 / 0.1560e4 * eta + 0.23e2 / 0.780e3 * eta ^ 6) * ci2 ^ 2 - 0.17e2 / 0.195e3 * eta ^ 2 - 0.11e2 / 0.96e2 - 0.1739e4 / 0.6240e4 * eta + 0.227e3 / 0.2080e4 * eta ^ 4 - 0.23e2 / 0.3120e4 * eta ^ 6 + 0.213e3 / 0.1040e4 * eta ^ 3 - 0.33e2 / 0.2080e4 * eta ^ 5) * sin((g + h + 2 * f)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * cos((-g + h + 2 * f)) / 0.26e2 - 0.11e2 / 0.26e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * cos((3 * g + h + 6 * f)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + 2 * f)) / 0.26e2 + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 - 0.4e1 / 0.13e2 * eta ^ 2 - 0.17e2 / 0.13e2 * eta + 0.12e2 / 0.13e2) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) * cos((g - h)) - 0.35e2 / 0.13e2 * ci2 ^ 2 * (eta ^ 3 + 0.16e2 / 0.35e2 * eta ^ 2 - 0.11e2 / 0.7e1 * eta - 0.48e2 / 0.35e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) * cos((3 * g + h + 4 * f)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * ((eta + 0.127e3 / 0.26e2) * ci2 ^ 4 + (-eta - 0.127e3 / 0.26e2) * ci2 ^ 2 + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * sin((g - h + 8 * f)) / 0.40e2 - 0.11e2 / 0.780e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.25e2 / 0.22e2 * eta + 0.25e2 / 0.22e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((5 * g + h)) - ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 - eta / 0.2e1 - 0.143e3 / 0.6e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((3 * g - h + 8 * f)) / 0.260e3 + ci2 ^ 4 * (eta ^ 3 - 0.3e1 / 0.2e1 * eta ^ 2 + 0.25e2 / 0.2e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((3 * g - h)) / 0.780e3 - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * ((eta + 0.1e1 / 0.2e1) * ci2 ^ 4 + (-eta - 0.1e1 / 0.2e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * sin((-g + h + 4 * f)) / 0.104e3 - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.43e2 / 0.40e2 * eta ^ 3 - 0.97e2 / 0.20e2 * eta ^ 2 - 0.321e3 / 0.40e2 * eta - 0.16e2 / 0.5e1) * ci2 ^ 4 + (-eta ^ 4 - 0.43e2 / 0.40e2 * eta ^ 3 + 0.97e2 / 0.20e2 * eta ^ 2 + 0.321e3 / 0.40e2 * eta + 0.16e2 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 4 + 0.21e2 / 0.80e2 * eta ^ 3 - 0.133e3 / 0.120e3 * eta ^ 2 - 0.89e2 / 0.48e2 * eta - 0.11e2 / 0.15e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-g + h + 2 * f)) / 0.13e2 + 0.32e2 / 0.195e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.1087e4 / 0.256e3 * eta ^ 3 - 0.637e3 / 0.128e3 * eta ^ 2 - 0.5633e4 / 0.256e3 * eta - 0.981e3 / 0.64e2) * ci2 ^ 4 + (-eta ^ 4 - 0.1087e4 / 0.256e3 * eta ^ 3 + 0.637e3 / 0.128e3 * eta ^ 2 + 0.5633e4 / 0.256e3 * eta + 0.981e3 / 0.64e2) * ci2 ^ 2 + 0.3e1 / 0.16e2 * eta ^ 4 + 0.377e3 / 0.512e3 * eta ^ 3 - 0.239e3 / 0.256e3 * eta ^ 2 - 0.1991e4 / 0.512e3 * eta - 0.341e3 / 0.128e3) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + h + 6 * f)) - 0.54e2 / 0.13e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (eta ^ 4 + 0.23e2 / 0.18e2 * eta ^ 3 - 0.25e2 / 0.18e2 * eta ^ 2 - 0.145e3 / 0.54e2 * eta - 0.7e1 / 0.6e1) * cos((3 * g + h + 2 * f)) + 0.2e1 / 0.13e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.27e2 / 0.16e2 * eta ^ 2 - 0.15e2 / 0.16e2 * eta - 0.8e1 / 0.5e1) * ci2 ^ 4 + (-eta ^ 3 - 0.27e2 / 0.16e2 * eta ^ 2 + 0.15e2 / 0.16e2 * eta + 0.8e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta ^ 3 + 0.13e2 / 0.32e2 * eta ^ 2 - 0.19e2 / 0.96e2 * eta - 0.11e2 / 0.30e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + 2 * f)) - 0.19e2 / 0.520e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) * (eta ^ 4 + 0.22e2 / 0.19e2 * eta ^ 3 - 0.244e3 / 0.57e2 * eta ^ 2 - 0.338e3 / 0.57e2 * eta - 0.31e2 / 0.19e2) * (eta - 0.1e1) * sin((5 * g + h + 2 * f)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta + 0.1e1 / 0.2e1) * ci2 ^ 4 + (-eta - 0.1e1 / 0.2e1) * ci2 ^ 2 + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 4 * f)) / 0.104e3 + ci2 ^ 4 * (eta - 0.1e1) * (0.1e1 + eta) * (eta ^ 4 + 0.4e1 * eta ^ 3 + 0.60e2 * eta ^ 2 - 0.64e2 * eta - 0.309e3) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * sin((3 * g - h + 6 * f)) / 0.780e3 + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * ((eta + 0.127e3 / 0.26e2) * ci2 ^ 4 + (-eta - 0.127e3 / 0.26e2) * ci2 ^ 2 + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * sin((3 * g + h + 8 * f)) / 0.40e2 - 0.19e2 / 0.195e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.619e3 / 0.152e3 * eta ^ 2 - 0.1735e4 / 0.152e3 * eta - 0.981e3 / 0.38e2) * ci2 ^ 4 + (-eta ^ 3 - 0.619e3 / 0.152e3 * eta ^ 2 + 0.1735e4 / 0.152e3 * eta + 0.981e3 / 0.38e2) * ci2 ^ 2 + 0.7e1 / 0.38e2 * eta ^ 3 + 0.213e3 / 0.304e3 * eta ^ 2 - 0.633e3 / 0.304e3 * eta - 0.341e3 / 0.76e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((g - h + 6 * f)) + 0.3e1 / 0.260e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * (eta ^ 3 + eta ^ 2 / 0.2e1 - 0.70e2 / 0.9e1 * eta - 0.143e3 / 0.18e2) * sin((5 * g + h + 8 * f)) - 0.23e2 / 0.312e3 * ((-0.3144e4 / 0.115e3 + 0.5278e4 / 0.115e3 * eta ^ 2 + 0.1121e4 / 0.115e3 * eta + eta ^ 5 - 0.182e3 / 0.115e3 * eta ^ 4 + 0.1148e4 / 0.115e3 * eta ^ 3) * ci2 ^ 8 + (0.6288e4 / 0.115e3 - 0.2e1 * eta ^ 5 + 0.364e3 / 0.115e3 * eta ^ 4 - 0.2296e4 / 0.115e3 * eta ^ 3 - 0.10556e5 / 0.115e3 * eta ^ 2 - 0.2242e4 / 0.115e3 * eta) * ci2 ^ 6 + (-0.4701e4 / 0.115e3 + 0.3e1 / 0.5e1 * eta ^ 5 + 0.2202e4 / 0.115e3 * eta ^ 3 + 0.8214e4 / 0.115e3 * eta ^ 2 + 0.285e3 / 0.23e2 * eta - 0.393e3 / 0.115e3 * eta ^ 4) * ci2 ^ 4 + (-0.2936e4 / 0.115e3 * eta ^ 2 + 0.1557e4 / 0.115e3 + 0.2e1 / 0.5e1 * eta ^ 5 + 0.211e3 / 0.115e3 * eta ^ 4 - 0.1054e4 / 0.115e3 * eta ^ 3 - 0.304e3 / 0.115e3 * eta) * ci2 ^ 2 + 0.358e3 / 0.115e3 * eta ^ 2 + 0.19e2 / 0.115e3 * eta - 0.25e2 / 0.92e2 * eta ^ 4 + 0.61e2 / 0.46e2 * eta ^ 3 - 0.143e3 / 0.92e2 - eta ^ 5 / 0.10e2) * (eta - 0.1e1) * sin((-g - h + 2 * f)) + 0.5e1 / 0.39e2 * eta * sin((g + h)) * ((-0.1809e4 / 0.50e2 + 0.20e2 * eta ^ 2 - 0.711e3 / 0.25e2 * eta + eta ^ 6 + 0.9e1 / 0.5e1 * eta ^ 5 + 0.539e3 / 0.50e2 * eta ^ 4 + 0.104e3 / 0.5e1 * eta ^ 3) * ci2 ^ 8 + (0.1809e4 / 0.25e2 - 0.2e1 * eta ^ 6 - 0.18e2 / 0.5e1 * eta ^ 5 - 0.539e3 / 0.25e2 * eta ^ 4 - 0.208e3 / 0.5e1 * eta ^ 3 - 0.40e2 * eta ^ 2 + 0.1422e4 / 0.25e2 * eta) * ci2 ^ 6 + (-0.1408e4 / 0.25e2 + 0.3e1 / 0.5e1 * eta ^ 6 + 0.27e2 / 0.25e2 * eta ^ 5 + 0.907e3 / 0.25e2 * eta ^ 3 + 0.822e3 / 0.25e2 * eta ^ 2 - 0.46e2 * eta + 0.403e3 / 0.25e2 * eta ^ 4) * ci2 ^ 4 + (-0.322e3 / 0.25e2 * eta ^ 2 + 0.1007e4 / 0.50e2 + 0.18e2 / 0.25e2 * eta ^ 5 - 0.267e3 / 0.50e2 * eta ^ 4 - 0.387e3 / 0.25e2 * eta ^ 3 + 0.439e3 / 0.25e2 * eta + 0.2e1 / 0.5e1 * eta ^ 6) * ci2 ^ 2 + 0.167e3 / 0.100e3 * eta ^ 2 - 0.99e2 / 0.40e2 - 0.113e3 / 0.50e2 * eta + 0.5e1 / 0.8e1 * eta ^ 4 - eta ^ 6 / 0.10e2 + 0.53e2 / 0.25e2 * eta ^ 3 - 0.9e1 / 0.50e2 * eta ^ 5)) * sqrt(-eta ^ 2 + 0.1e1) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 3 * f)) / 0.104e3 + 0.5e1 / 0.104e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 7 * f)) - 0.25e2 / 0.52e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (eta ^ 5 - 0.7e1 / 0.25e2 * eta ^ 4 - 0.182e3 / 0.25e2 * eta ^ 3 + 0.98e2 / 0.25e2 * eta ^ 2 + 0.197e3 / 0.25e2 * eta - 0.147e3 / 0.25e2) * (0.1e1 + eta) * cos((g - h + f)) - 0.5e1 / 0.104e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * cos((g - h + 7 * f)) + 0.11e2 / 0.624e3 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 4 + 0.116e3 / 0.55e2 * eta ^ 3 + 0.234e3 / 0.55e2 * eta ^ 2 - 0.124e3 / 0.11e2 * eta - 0.1281e4 / 0.55e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g - h + 5 * f)) + 0.25e2 / 0.832e3 * ((eta ^ 2 - 0.1046e4 / 0.125e3 * eta - 0.3067e4 / 0.125e3) * ci2 ^ 4 + (-eta ^ 2 + 0.1046e4 / 0.125e3 * eta + 0.3067e4 / 0.125e3) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.589e3 / 0.375e3 * eta - 0.3199e4 / 0.750e3) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((g - h + 7 * f)) + 0.3e1 / 0.4160e4 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * sin((-3 * g - h + 5 * f)) - 0.7e1 / 0.832e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * sin((3 * g + h + 9 * f)) - 0.3e1 / 0.4160e4 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * sin((-g + h + 5 * f)) + 0.7e1 / 0.832e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * sin((g - h + 9 * f)) - 0.359e3 / 0.3120e4 * (eta ^ 4 + 0.436e3 / 0.359e3 * eta ^ 3 - 0.406e3 / 0.359e3 * eta ^ 2 - 0.524e3 / 0.359e3 * eta + 0.111e3 / 0.359e3) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) * (eta - 0.1e1) * sin((5 * g + h + 3 * f)) - 0.87e2 / 0.4160e4 * ci2 ^ 2 * ((eta ^ 5 - 0.5161e4 / 0.87e2 * eta ^ 4 - 0.14470e5 / 0.87e2 * eta ^ 3 + 0.5578e4 / 0.87e2 * eta ^ 2 + 0.11349e5 / 0.29e2 * eta + 0.22703e5 / 0.87e2) * ci2 ^ 4 + (-eta ^ 5 + 0.5161e4 / 0.87e2 * eta ^ 4 + 0.14470e5 / 0.87e2 * eta ^ 3 - 0.5578e4 / 0.87e2 * eta ^ 2 - 0.11349e5 / 0.29e2 * eta - 0.22703e5 / 0.87e2) * ci2 ^ 2 + 0.55e2 / 0.522e3 * eta ^ 5 - 0.1855e4 / 0.174e3 * eta ^ 4 - 0.2497e4 / 0.87e2 * eta ^ 3 + 0.3065e4 / 0.261e3 * eta ^ 2 + 0.3943e4 / 0.58e2 * eta + 0.7817e4 / 0.174e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) - 0.57e2 / 0.4160e4 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 4 + 0.2960e4 / 0.57e2 * eta ^ 3 + 0.7166e4 / 0.57e2 * eta ^ 2 - 0.12472e5 / 0.57e2 * eta - 0.22703e5 / 0.57e2) * ci2 ^ 4 + (-eta ^ 4 - 0.2960e4 / 0.57e2 * eta ^ 3 - 0.7166e4 / 0.57e2 * eta ^ 2 + 0.12472e5 / 0.57e2 * eta + 0.22703e5 / 0.57e2) * ci2 ^ 2 + 0.89e2 / 0.342e3 * eta ^ 4 + 0.1538e4 / 0.171e3 * eta ^ 3 + 0.1199e4 / 0.57e2 * eta ^ 2 - 0.6638e4 / 0.171e3 * eta - 0.7817e4 / 0.114e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((g - h + 5 * f)) - 0.59e2 / 0.2080e4 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 - 0.2e1 / 0.3e1 * eta - 0.501e3 / 0.59e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((3 * g - h + 7 * f)) + 0.21e2 / 0.2080e4 * (eta ^ 3 - 0.17e2 / 0.9e1 * eta ^ 2 - 0.295e3 / 0.63e2 * eta + 0.101e3 / 0.21e2) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((3 * g - h + f)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 + 0.307e3 / 0.13e2 * eta ^ 2 + 0.547e3 / 0.13e2 * eta + 0.261e3 / 0.13e2) * ci2 ^ 4 + (-eta ^ 3 - 0.307e3 / 0.13e2 * eta ^ 2 - 0.547e3 / 0.13e2 * eta - 0.261e3 / 0.13e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.431e3 / 0.78e2 * eta ^ 2 + 0.265e3 / 0.26e2 * eta + 0.385e3 / 0.78e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-g + h + 3 * f)) / 0.320e3 + 0.29e2 / 0.4160e4 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.330e3 / 0.29e2 * eta + 0.9e1) * ci2 ^ 4 + (-eta ^ 2 - 0.330e3 / 0.29e2 * eta - 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 + 0.227e3 / 0.87e2 * eta + 0.385e3 / 0.174e3) * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 3 * f)) - 0.479e3 / 0.6240e4 * (eta ^ 2 + 0.598e3 / 0.479e3 * eta + 0.303e3 / 0.479e3) * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((5 * g + h + f)) + 0.529e3 / 0.6240e4 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 3 + 0.295e3 / 0.529e3 * eta ^ 2 - 0.1385e4 / 0.529e3 * eta - 0.1503e4 / 0.529e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((5 * g + h + 7 * f)) - 0.119e3 / 0.4160e4 * ci2 ^ 2 * ((eta ^ 4 + 0.2400e4 / 0.119e3 * eta ^ 3 + 0.86e2 / 0.17e2 * eta ^ 2 - 0.5776e4 / 0.119e3 * eta - 0.2449e4 / 0.119e3) * ci2 ^ 4 + (-eta ^ 4 - 0.2400e4 / 0.119e3 * eta ^ 3 - 0.86e2 / 0.17e2 * eta ^ 2 + 0.5776e4 / 0.119e3 * eta + 0.2449e4 / 0.119e3) * ci2 ^ 2 + 0.151e3 / 0.714e3 * eta ^ 4 + 0.562e3 / 0.119e3 * eta ^ 3 + 0.359e3 / 0.357e3 * eta ^ 2 - 0.3950e4 / 0.357e3 * eta - 0.2981e4 / 0.714e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((-g + h + f)) - 0.41e2 / 0.832e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 3 - 0.941e3 / 0.205e3 * eta ^ 2 - 0.4093e4 / 0.205e3 * eta - 0.3067e4 / 0.205e3) * ci2 ^ 4 + (-eta ^ 3 + 0.941e3 / 0.205e3 * eta ^ 2 + 0.4093e4 / 0.205e3 * eta + 0.3067e4 / 0.205e3) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.1073e4 / 0.1230e4 * eta ^ 2 - 0.4357e4 / 0.1230e4 * eta - 0.3199e4 / 0.1230e4) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 7 * f)) + 0.71e2 / 0.4160e4 * ci2 ^ 2 * ((eta ^ 4 + 0.3664e4 / 0.71e2 * eta ^ 3 + 0.6850e4 / 0.71e2 * eta ^ 2 + 0.792e3 / 0.71e2 * eta - 0.2449e4 / 0.71e2) * ci2 ^ 4 + (-eta ^ 4 - 0.3664e4 / 0.71e2 * eta ^ 3 - 0.6850e4 / 0.71e2 * eta ^ 2 - 0.792e3 / 0.71e2 * eta + 0.2449e4 / 0.71e2) * ci2 ^ 2 + 0.103e3 / 0.426e3 * eta ^ 4 + 0.2702e4 / 0.213e3 * eta ^ 3 + 0.5075e4 / 0.213e3 * eta ^ 2 + 0.926e3 / 0.213e3 * eta - 0.2981e4 / 0.426e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + f))) * R__e ^ 4 * J ^ 2 / eta ^ 13 / a ^ 3 / (0.1e1 + eta)];
D2 = [0.90e2 * R__e ^ 4 * J ^ 2 * ((-0.11e2 / 0.240e3 * (ci2 + 1) * ((eta ^ 4 - 0.758e3 / 0.33e2 * eta ^ 3 - 0.1160e4 / 0.11e2 * eta ^ 2 - 0.6290e4 / 0.33e2 * eta - 0.3433e4 / 0.33e2) * (ci2 ^ 6) + (-eta ^ 4 + 0.70e2 / 0.3e1 * eta ^ 3 + 0.3892e4 / 0.33e2 * eta ^ 2 + 0.674e3 / 0.3e1 * eta + 0.4157e4 / 0.33e2) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 - 0.58e2 / 0.11e2 * eta ^ 3 - 0.949e3 / 0.33e2 * eta ^ 2 - 0.1898e4 / 0.33e2 * eta - 0.2201e4 / 0.66e2) * (ci2 ^ 2) + (0.1e1 + eta) * (eta ^ 2 + 0.32e2 * eta + 0.59e2) / 0.33e2) * (ci2 - 1) * sin((3 * f + 2 * g)) - 0.9e1 / 0.160e3 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 1) * ((eta ^ 2 + 0.164e3 / 0.9e1 * eta + 0.283e3 / 0.9e1) * (ci2 ^ 6) + (-eta ^ 2 - 0.172e3 / 0.9e1 * eta - 0.97e2 / 0.3e1) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 + 0.4e1 * eta + 0.335e3 / 0.54e2) * (ci2 ^ 2) - 0.2e1 / 0.27e2 * eta - 0.2e1 / 0.27e2) * (ci2 - 1) * sin((5 * f + 2 * g)) + ((eta ^ 2 + 0.44e2 * eta + 0.71e2) * (ci2 ^ 6) + (-eta ^ 2 - 0.52e2 * eta - 0.79e2) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 + 0.76e2 / 0.5e1 * eta + 0.103e3 / 0.5e1) * (ci2 ^ 2) - 0.4e1 / 0.5e1 * eta - 0.4e1 / 0.5e1) * (0.1e1 + eta) * Delta * (ci2 + 1) * (ci2 - 1) * cos((3 * f + 2 * g)) / 0.12e2 - (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 ^ 2) * (ci2 - 1) * cos((5 * f + 2 * g)) / 0.4e1 + 0.7e1 / 0.240e3 * ((eta ^ 2 - 0.44e2 / 0.7e1 * eta - 0.71e2 / 0.7e1) * (ci2 ^ 2) + 0.8e1 / 0.7e1 * eta + 0.8e1 / 0.7e1) * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * sin((3 * f + 4 * g)) + 0.17e2 / 0.240e3 * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((eta ^ 2 + 0.44e2 / 0.17e2 * eta + 0.47e2 / 0.17e2) * (ci2 ^ 2) - 0.8e1 / 0.17e2 * eta - 0.8e1 / 0.17e2) * ((ci2 - 1) ^ 2) * sin((5 * f + 4 * g)) + (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * sin((3 * f - 2 * g)) / 0.160e3 + (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * sin((2 * g + 7 * f)) / 0.32e2 - 0.11e2 / 0.240e3 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((4 * g + 7 * f)) + 0.21e2 / 0.80e2 * (ci2 + 1) * ((eta ^ 4 + 0.2e1 * eta ^ 3 - 0.1472e4 / 0.21e2 * eta ^ 2 - 0.3314e4 / 0.21e2 * eta - 0.259e3 / 0.3e1) * (ci2 ^ 6) + (-eta ^ 4 - 0.62e2 / 0.21e2 * eta ^ 3 + 0.1724e4 / 0.21e2 * eta ^ 2 + 0.1298e4 / 0.7e1 * eta + 0.101e3) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 + 0.46e2 / 0.63e2 * eta ^ 3 - 0.1643e4 / 0.63e2 * eta ^ 2 - 0.1202e4 / 0.21e2 * eta - 0.3847e4 / 0.126e3) * (ci2 ^ 2) - 0.5e1 / 0.63e2 * (0.1e1 + eta) * (eta ^ 2 - 0.96e2 / 0.5e1 * eta - 0.21e2)) * (ci2 - 1) * sin((f + 2 * g)) - 0.13e2 / 0.160e3 * (-0.2e1 / 0.39e2 + (eta - 0.73e2 / 0.13e2) * (ci2 ^ 6) + (-eta + 0.5e1) * (ci2 ^ 4) + (eta / 0.6e1 - 0.85e2 / 0.78e2) * (ci2 ^ 2)) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 + 1) * (ci2 - 1) * sin((-2 * g + f)) + 0.5e1 / 0.4e1 * (0.1e1 + eta) * Delta * (ci2 + 1) * ((eta ^ 2 + 0.44e2 / 0.5e1 * eta + 0.7e1) * (ci2 ^ 6) + (-eta ^ 2 - 0.52e2 / 0.5e1 * eta - 0.43e2 / 0.5e1) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 + 0.76e2 / 0.25e2 * eta + 0.67e2 / 0.25e2) * (ci2 ^ 2) - 0.4e1 / 0.25e2 * eta - 0.4e1 / 0.25e2) * (ci2 - 1) * cos((f + 2 * g)) + (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 ^ 2) * (ci2 - 1) * cos((-2 * g + f)) / 0.4e1 - 0.13e2 / 0.240e3 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((4 * g + f)) + 0.11e2 / 0.80e2 * ((eta ^ 2 + 0.14e2 / 0.3e1 * eta + 0.313e3 / 0.33e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 2 - 0.332e3 / 0.33e2 * eta - 0.650e3 / 0.33e2) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 2 + 0.272e3 / 0.33e2 * eta + 0.44e2 / 0.3e1) * (ci2 ^ 4) + (-eta ^ 2 / 0.3e1 - 0.98e2 / 0.33e2 * eta - 0.151e3 / 0.33e2) * (ci2 ^ 2) + eta ^ 2 / 0.36e2 + 0.35e2 / 0.99e2 * eta + 0.193e3 / 0.396e3) * (eta - 0.1e1) * (0.1e1 + eta) * sin((3 * f)) - 0.3e1 / 0.80e2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * sin((5 * f)) - 0.9e1 / 0.40e2 * sin(f) * ((eta ^ 4 + 0.271e3 / 0.27e2 * eta ^ 3 + 0.949e3 / 0.27e2 * eta ^ 2 + 0.79e2 * eta + 0.452e3 / 0.9e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 4 - 0.578e3 / 0.27e2 * eta ^ 3 - 0.2054e4 / 0.27e2 * eta ^ 2 - 0.1538e4 / 0.9e1 * eta - 0.980e3 / 0.9e1) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 4 + 0.16e2 * eta ^ 3 + 0.584e3 / 0.9e1 * eta ^ 2 + 0.144e3 * eta + 0.812e3 / 0.9e1) * (ci2 ^ 4) + (-eta ^ 4 / 0.3e1 - 0.131e3 / 0.27e2 * eta ^ 3 - 0.914e3 / 0.27e2 - 0.697e3 / 0.27e2 * eta ^ 2 - 0.1513e4 / 0.27e2 * eta) * (ci2 ^ 2) + eta ^ 4 / 0.36e2 + eta ^ 3 / 0.2e1 + 0.425e3 / 0.54e2 * eta + 0.100e3 / 0.27e2 * eta ^ 2 + 0.493e3 / 0.108e3)) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * (-(ci2 + 1) * (ci2 - 1) * ((eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.49e2 / 0.10e2) * (eta ^ 2 + 0.2e1 * eta - 0.7e1) * (ci2 ^ 6) + (-eta ^ 4 + 0.11e2 / 0.10e2 * eta ^ 3 + 0.177e3 / 0.10e2 * eta ^ 2 - 0.119e3 / 0.10e2 * eta - 0.371e3 / 0.10e2) * (ci2 ^ 4) + (eta ^ 4 / 0.10e2 - 0.21e2 / 0.20e2 * eta ^ 3 - 0.87e2 / 0.20e2 * eta ^ 2 + 0.25e2 / 0.4e1 * eta + 0.221e3 / 0.20e2) * (ci2 ^ 2) + (0.1e1 + eta) * (eta ^ 2 - 0.5e1) / 0.10e2) * sin((2 * g + 2 * f)) / 0.6e1 - 0.7e1 / 0.30e2 * (eta - 0.1e1) * (ci2 + 1) * ((eta ^ 3 + 0.207e3 / 0.28e2 * eta ^ 2 + 0.47e2 / 0.2e1 * eta + 0.563e3 / 0.28e2) * (ci2 ^ 6) + (-eta ^ 3 - 0.233e3 / 0.28e2 * eta ^ 2 - 0.373e3 / 0.14e2 * eta - 0.625e3 / 0.28e2) * (ci2 ^ 4) + (0.3e1 / 0.14e2 * eta ^ 3 + 0.121e3 / 0.56e2 * eta ^ 2 + 0.47e2 / 0.7e1 * eta + 0.295e3 / 0.56e2) * (ci2 ^ 2) - 0.5e1 / 0.56e2 * eta ^ 2 - 0.2e1 / 0.7e1 * eta - 0.11e2 / 0.56e2) * (ci2 - 1) * sin((2 * g + 4 * f)) + 0.13e2 / 0.120e3 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * (ci2 + 1) * (ci2 ^ 2) * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-eta - 0.46e2 / 0.13e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.8e1 / 0.13e2) * (ci2 - 1) * sin((6 * f + 2 * g)) - (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * (ci2 + 1) * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-eta - 0.4e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.1e1 / 0.5e1) * (ci2 ^ 2) * (ci2 - 1) * sin((-2 * g + 2 * f)) / 0.8e1 + 0.11e2 / 0.240e3 * (eta - 0.1e1) * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((eta ^ 2 + 0.5e1 * eta + 0.46e2 / 0.11e2) * (ci2 ^ 2) - 0.10e2 / 0.11e2 * eta - 0.10e2 / 0.11e2) * sin((2 * f + 4 * g)) - ((eta ^ 3 - 0.13e2 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.3e1 / 0.2e1) * (ci2 ^ 2) + eta ^ 2 + 0.3e1) * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * sin((4 * f + 4 * g)) / 0.120e3 - (eta - 0.1e1) * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((eta ^ 2 + 0.11e2 / 0.3e1 * eta + 0.34e2 / 0.3e1) * (ci2 ^ 2) - 0.2e1 / 0.3e1 * eta - 0.2e1 / 0.3e1) * ((ci2 - 1) ^ 2) * sin((6 * f + 4 * g)) / 0.80e2 + (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((8 * f + 4 * g)) / 0.160e3 - 0.3e1 / 0.2e1 * (eta - 0.1e1) * (0.1e1 + eta) * Delta * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 ^ 2) * (ci2 - 1) * cos((2 * g + 4 * f)) + 0.11e2 * ((ci2 ^ 6) - 0.13e2 / 0.11e2 * (ci2 ^ 4) + 0.19e2 / 0.55e2 * (ci2 ^ 2) - 0.1e1 / 0.55e2) * (0.1e1 + eta) * Delta * (ci2 + 1) * (ci2 - 1) * cos((2 * g + 2 * f)) - ((eta ^ 3 - 0.12e2 / 0.5e1 * eta ^ 2 - 0.417e3 / 0.5e1 * eta - 0.472e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 + 0.14e2 / 0.5e1 * eta ^ 2 + 0.886e3 / 0.5e1 * eta + 0.1006e4 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 3 - 0.36e2 / 0.5e1 * eta ^ 2 - 0.741e3 / 0.5e1 * eta - 0.798e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 3 + 0.36e2 / 0.5e1 * eta ^ 2 + 0.288e3 / 0.5e1 * eta + 0.278e3 / 0.5e1) * (ci2 ^ 2) - eta ^ 3 / 0.10e2 - 0.8e1 / 0.5e1 * eta ^ 2 - 0.79e2 / 0.10e2 * eta - 0.34e2 / 0.5e1) * (eta - 0.1e1) * sin((2 * f)) / 0.24e2 + (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta + 0.134e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.93e2 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.26e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.1e1 / 0.2e1) * sin((4 * f)) / 0.48e2 + ((eta ^ 2 + 0.11e2 / 0.2e1 * eta + 0.7e1) * (ci2 ^ 6) + (-eta ^ 2 - 0.13e2 / 0.2e1 * eta - 0.8e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 2 + 0.41e2 / 0.20e2 * eta + 0.47e2 / 0.20e2) * (ci2 ^ 2) - 0.7e1 / 0.60e2 * eta - 0.7e1 / 0.60e2) * (eta - 0.1e1) * (0.1e1 + eta) * Delta * (ci2 + 1) * (ci2 - 1) * cos((2 * g)) + (eta - 0.1e1) * (ci2 + 1) * ((eta ^ 3 + 0.10e2 * eta ^ 2 - 0.34e2 * eta - 0.49e2) * (ci2 ^ 4) + (-eta ^ 3 - 0.10e2 * eta ^ 2 + 0.34e2 * eta + 0.49e2) * (ci2 ^ 2) + eta ^ 3 / 0.2e1 + 0.2e1 * eta ^ 2 - 0.23e2 / 0.2e1 * eta - 0.14e2) * (ci2 ^ 2) * (ci2 - 1) * sin((2 * g)) / 0.60e2 + ((0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (ci2 ^ 4) * sin((4 * g)) - 0.16e2 * ((eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 + 0.77e2 / 0.2e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 - 0.10e2 * eta ^ 2 - 0.84e2) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 3 + 0.51e2 / 0.10e2 * eta ^ 2 + 0.141e3 / 0.2e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 3 + 0.3e1 / 0.5e1 * eta ^ 2 - 0.27e2) * (ci2 ^ 2) - eta ^ 3 / 0.10e2 - 0.9e1 / 0.20e2 * eta ^ 2 + 0.15e2 / 0.4e1) * Delta) * (0.1e1 + eta) / 0.96e2)) / a ^ 5 / eta ^ 8 / (0.1e1 + eta) ^ 2 -0.75e2 / 0.32e2 * R__e ^ 4 * J ^ 2 * ((0.21e2 / 0.200e3 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.260e3 / 0.7e1 * eta - 0.223e3 / 0.7e1) * (ci2 ^ 6) + (-eta ^ 2 + 0.36e2 * eta + 0.215e3 / 0.7e1) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 - 0.172e3 / 0.21e2 * eta - 0.307e3 / 0.42e2) * (ci2 ^ 2) - 0.2e1 / 0.21e2 * eta - 0.2e1 / 0.21e2) * (ci2 + 1) * (ci2 - 1) * cos((3 * f - 2 * g)) - 0.19e2 / 0.200e3 * (ci2 + 1) * ((0.11016e5 / 0.19e2 * eta ^ 5 + 0.42583e5 / 0.19e2 * eta ^ 4 + 0.61968e5 / 0.19e2 * eta ^ 3 - 0.28983e5 / 0.19e2 * eta ^ 2 - 0.154712e6 / 0.19e2 * eta - 0.94003e5 / 0.19e2 + eta ^ 6) * (ci2 ^ 6) + (-0.12344e5 / 0.19e2 * eta ^ 5 - 0.48167e5 / 0.19e2 * eta ^ 4 - 0.72560e5 / 0.19e2 * eta ^ 3 - eta ^ 6 + 0.32407e5 / 0.19e2 * eta ^ 2 + 0.180328e6 / 0.19e2 * eta + 0.109859e6 / 0.19e2) * (ci2 ^ 4) + (0.3272e4 / 0.19e2 * eta ^ 5 + 0.23813e5 / 0.38e2 * eta ^ 4 + 0.17520e5 / 0.19e2 * eta ^ 3 + 0.17e2 / 0.38e2 * eta ^ 6 - 0.54025e5 / 0.38e2 - 0.16333e5 / 0.38e2 * eta ^ 2 - 0.44280e5 / 0.19e2 * eta) * (ci2 ^ 2) - 0.132e3 / 0.19e2 * (0.1e1 + eta) * (eta ^ 4 + 0.80e2 / 0.33e2 * eta ^ 3 + 0.118e3 / 0.33e2 * eta ^ 2 - 0.16e2 / 0.3e1 * eta - 0.101e3 / 0.11e2)) * (ci2 - 1) * cos((3 * f + 2 * g)) + 0.711e3 / 0.200e3 * ((eta ^ 4 + 0.1180e4 / 0.237e3 * eta ^ 3 - 0.3154e4 / 0.237e3 * eta ^ 2 - 0.26300e5 / 0.237e3 * eta - 0.26443e5 / 0.237e3) * (ci2 ^ 6) + (-eta ^ 4 - 0.1252e4 / 0.237e3 * eta ^ 3 + 0.4010e4 / 0.237e3 * eta ^ 2 + 0.29380e5 / 0.237e3 * eta + 0.28595e5 / 0.237e3) * (ci2 ^ 4) + (0.269e3 / 0.1422e4 * eta ^ 4 + 0.724e3 / 0.711e3 * eta ^ 3 - 0.3995e4 / 0.711e3 * eta ^ 2 - 0.21460e5 / 0.711e3 * eta - 0.37991e5 / 0.1422e4) * (ci2 ^ 2) - 0.2e1 / 0.79e2 * (0.1e1 + eta) * (eta ^ 2 - 0.128e3 / 0.9e1 * eta - 0.281e3 / 0.9e1)) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 1) * (ci2 - 1) * cos((5 * f + 2 * g)) - 0.3e1 / 0.8e1 * ((eta ^ 2 - 0.1276e4 / 0.25e2 * eta - 0.3137e4 / 0.25e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.1316e4 / 0.25e2 * eta + 0.3177e4 / 0.25e2) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 - 0.268e3 / 0.25e2 * eta - 0.3469e4 / 0.150e3) * (ci2 ^ 2) + 0.2e1 / 0.15e2 * eta + 0.2e1 / 0.15e2) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 + 1) * (ci2 - 1) * cos((2 * g + 7 * f)) + 0.6e1 / 0.5e1 * (0.1e1 + eta) * Delta * (ci2 + 1) * ((eta ^ 4 + 0.66e2 * eta ^ 3 + 0.136e3 * eta ^ 2 - 0.330e3 * eta - 0.457e3) * (ci2 ^ 6) + (-eta ^ 4 - 0.78e2 * eta ^ 3 - 0.148e3 * eta ^ 2 + 0.390e3 * eta + 0.517e3) * (ci2 ^ 4) + (eta ^ 4 / 0.5e1 + 0.114e3 / 0.5e1 * eta ^ 3 + 0.184e3 / 0.5e1 * eta ^ 2 - 0.114e3 * eta - 0.697e3 / 0.5e1) * (ci2 ^ 2) - 0.6e1 / 0.5e1 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1)) * (ci2 - 1) * sin((3 * f + 2 * g)) - 0.27e2 / 0.5e1 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.44e2 / 0.9e1 * eta - 0.197e3 / 0.9e1) * (ci2 ^ 6) + (-eta ^ 2 + 0.52e2 / 0.9e1 * eta + 0.205e3 / 0.9e1) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.76e2 / 0.45e2 * eta - 0.229e3 / 0.45e2) * (ci2 ^ 2) + 0.4e1 / 0.45e2 * eta + 0.4e1 / 0.45e2) * Delta * (ci2 + 1) * (ci2 - 1) * sin((5 * f + 2 * g)) + 0.3e1 / 0.5e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * sin((3 * f - 2 * g)) - 0.3e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * sin((2 * g + 7 * f)) - 0.29e2 / 0.50e2 * ((eta ^ 4 - 0.330e3 / 0.29e2 * eta ^ 3 - 0.720e3 / 0.29e2 * eta ^ 2 + 0.242e3 / 0.29e2 * eta + 0.723e3 / 0.29e2) * (ci2 ^ 2) + 0.60e2 / 0.29e2 * (0.1e1 + eta) * (eta ^ 2 - 0.11e2 / 0.15e2)) * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((3 * f + 4 * g)) - 0.109e3 / 0.50e2 * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * ((eta ^ 4 + 0.198e3 / 0.109e3 * eta ^ 3 - 0.80e2 / 0.109e3 * eta ^ 2 - 0.990e3 / 0.109e3 * eta - 0.1021e4 / 0.109e3) * (ci2 ^ 2) - 0.36e2 / 0.109e3 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1)) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((5 * f + 4 * g)) + 0.9e1 / 0.20e2 * ((eta ^ 2 - 0.484e3 / 0.45e2 * eta - 0.1561e4 / 0.45e2) * (ci2 ^ 2) + 0.88e2 / 0.45e2 * eta + 0.88e2 / 0.45e2) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((4 * g + 7 * f)) + 0.5e1 / 0.4e1 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((9 * f + 4 * g)) - 0.9e1 / 0.200e3 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * cos((5 * f - 2 * g)) - 0.21e2 / 0.40e2 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * cos((2 * g + 9 * f)) - 0.2547e4 / 0.200e3 * (ci2 + 1) * ((0.8600e4 / 0.849e3 * eta ^ 5 + 0.3135e4 / 0.283e3 * eta ^ 4 - 0.9232e4 / 0.849e3 * eta ^ 3 - 0.2527e4 / 0.283e3 * eta ^ 2 + 0.6120e4 / 0.283e3 * eta + 0.4997e4 / 0.283e3 + eta ^ 6) * (ci2 ^ 6) + (-0.3320e4 / 0.283e3 * eta ^ 5 - 0.11245e5 / 0.849e3 * eta ^ 4 + 0.9712e4 / 0.849e3 * eta ^ 3 - eta ^ 6 + 0.7613e4 / 0.849e3 * eta ^ 2 - 0.6808e4 / 0.283e3 * eta - 0.16127e5 / 0.849e3) * (ci2 ^ 4) + (0.2744e4 / 0.849e3 * eta ^ 5 + 0.5687e4 / 0.1698e4 * eta ^ 4 - 0.9104e4 / 0.2547e4 * eta ^ 3 + 0.1009e4 / 0.5094e4 * eta ^ 6 + 0.29527e5 / 0.5094e4 - 0.4525e4 / 0.5094e4 * eta ^ 2 + 0.7480e4 / 0.849e3 * eta) * (ci2 ^ 2) - 0.404e3 / 0.2547e4 * (0.1e1 + eta) * (eta ^ 4 - 0.106e3 / 0.101e3 * eta ^ 2 + 0.160e3 / 0.101e3 * eta + 0.173e3 / 0.101e3)) * (ci2 - 1) * cos((f + 2 * g)) - 0.537e3 / 0.200e3 * ((eta ^ 4 + 0.164e3 / 0.179e3 * eta ^ 3 - 0.4718e4 / 0.179e3 * eta ^ 2 - 0.12228e5 / 0.179e3 * eta - 0.7509e4 / 0.179e3) * (ci2 ^ 6) + (-eta ^ 4 - 0.188e3 / 0.179e3 * eta ^ 3 + 0.5558e4 / 0.179e3 * eta ^ 2 + 0.13980e5 / 0.179e3 * eta + 0.8397e4 / 0.179e3) * (ci2 ^ 4) + (0.211e3 / 0.1074e4 * eta ^ 4 + 0.92e2 / 0.537e3 * eta ^ 3 - 0.5461e4 / 0.537e3 * eta ^ 2 - 0.12700e5 / 0.537e3 * eta - 0.14489e5 / 0.1074e4) * (ci2 ^ 2) - 0.2e1 / 0.179e3 * (0.1e1 + eta) ^ 2 * (eta - 0.163e3 / 0.3e1)) * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 + 1) * (ci2 - 1) * cos((-2 * g + f)) + 0.6e1 * (0.1e1 + eta) * Delta * (ci2 + 1) * ((eta ^ 4 + 0.66e2 / 0.5e1 * eta ^ 3 + 0.56e2 / 0.5e1 * eta ^ 2 - 0.66e2 * eta - 0.317e3 / 0.5e1) * (ci2 ^ 6) + (-eta ^ 4 - 0.78e2 / 0.5e1 * eta ^ 3 - 0.68e2 / 0.5e1 * eta ^ 2 + 0.78e2 * eta + 0.377e3 / 0.5e1) * (ci2 ^ 4) + (eta ^ 4 / 0.5e1 + 0.114e3 / 0.25e2 * eta ^ 3 + 0.104e3 / 0.25e2 * eta ^ 2 - 0.114e3 / 0.5e1 * eta - 0.557e3 / 0.25e2) * (ci2 ^ 2) - 0.6e1 / 0.25e2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1)) * (ci2 - 1) * sin((f + 2 * g)) - 0.9e1 / 0.5e1 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * Delta * (ci2 + 1) * (-0.4e1 / 0.15e2 + (eta + 0.41e2 / 0.3e1) * (ci2 ^ 6) + (-eta - 0.49e2 / 0.3e1) * (ci2 ^ 4) + (eta / 0.5e1 + 0.73e2 / 0.15e2) * (ci2 ^ 2)) * (ci2 - 1) * sin((-2 * g + f)) + 0.93e2 / 0.100e3 * ((eta ^ 2 + 0.572e3 / 0.93e2 * eta + 0.503e3 / 0.93e2) * (ci2 ^ 2) - 0.104e3 / 0.93e2 * eta - 0.104e3 / 0.93e2) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((4 * g + f)) + 0.13e2 / 0.100e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-4 * g + f)) - 0.99e2 / 0.100e3 * (eta - 0.1e1) * (0.1e1 + eta) * ((eta ^ 4 + 0.382e3 / 0.99e2 * eta ^ 3 + 0.356e3 / 0.99e2 * eta ^ 2 - 0.13630e5 / 0.99e2 * eta - 0.17015e5 / 0.99e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 4 - 0.76e2 / 0.9e1 * eta ^ 3 - 0.64e2 / 0.9e1 * eta ^ 2 + 0.9740e4 / 0.33e2 * eta + 0.3990e4 / 0.11e2) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 4 + 0.256e3 / 0.33e2 * eta ^ 3 - 0.40e2 / 0.11e2 * eta ^ 2 - 0.2720e4 / 0.11e2 * eta - 0.3100e4 / 0.11e2) * (ci2 ^ 4) + (-eta ^ 4 / 0.3e1 - 0.326e3 / 0.99e2 * eta ^ 3 + 0.9425e4 / 0.99e2 + 0.272e3 / 0.33e2 * eta ^ 2 + 0.9430e4 / 0.99e2 * eta) * (ci2 ^ 2) + eta ^ 4 / 0.36e2 + 0.43e2 / 0.99e2 * eta ^ 3 - 0.1495e4 / 0.132e3 - 0.425e3 / 0.33e2 * eta - 0.137e3 / 0.66e2 * eta ^ 2) * cos((3 * f)) - 0.9e1 / 0.100e3 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.382e3 / 0.9e1 * eta + 0.2281e4 / 0.9e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 2 - 0.836e3 / 0.9e1 * eta - 0.4634e4 / 0.9e1) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 2 + 0.256e3 / 0.3e1 * eta + 0.1100e4 / 0.3e1) * (ci2 ^ 4) + (-eta ^ 2 / 0.3e1 - 0.326e3 / 0.9e1 * eta - 0.959e3 / 0.9e1) * (ci2 ^ 2) + eta ^ 2 / 0.36e2 + 0.43e2 / 0.9e1 * eta + 0.383e3 / 0.36e2) * cos((5 * f)) + 0.9e1 / 0.20e2 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * cos((7 * f)) + 0.63e2 / 0.100e3 * ((0.764e3 / 0.63e2 * eta ^ 5 + 0.2687e4 / 0.63e2 * eta ^ 4 + 0.13480e5 / 0.63e2 * eta ^ 3 - 0.3257e4 / 0.21e2 * eta ^ 2 - 0.61636e5 / 0.63e2 * eta + eta ^ 6 - 0.1895e4 / 0.3e1) * (ci2 ^ 8) + (-0.1672e4 / 0.63e2 * eta ^ 5 - 0.5758e4 / 0.63e2 * eta ^ 4 - 0.28880e5 / 0.63e2 * eta ^ 3 + 0.21622e5 / 0.63e2 * eta ^ 2 + 0.133528e6 / 0.63e2 * eta + 0.12298e5 / 0.9e1 - 0.2e1 * eta ^ 6) * (ci2 ^ 6) + (0.512e3 / 0.21e2 * eta ^ 5 + 0.820e3 / 0.7e1 * eta ^ 4 + 0.3040e4 / 0.7e1 * eta ^ 3 + 0.4e1 / 0.3e1 * eta ^ 6 - 0.6380e4 / 0.21e2 * eta ^ 2 - 0.5344e4 / 0.3e1 * eta - 0.7876e4 / 0.7e1) * (ci2 ^ 4) + (-0.652e3 / 0.63e2 * eta ^ 5 - 0.4693e4 / 0.63e2 * eta ^ 4 - 0.12920e5 / 0.63e2 * eta ^ 3 - eta ^ 6 / 0.3e1 + 0.8779e4 / 0.21e2 + 0.2659e4 / 0.21e2 * eta ^ 2 + 0.43364e5 / 0.63e2 * eta) * (ci2 ^ 2) + 0.1177e4 / 0.84e2 * eta ^ 4 + 0.100e3 / 0.3e1 * eta ^ 3 + eta ^ 6 / 0.36e2 + 0.86e2 / 0.63e2 * eta ^ 5 - 0.14071e5 / 0.252e3 - 0.2014e4 / 0.21e2 * eta - 0.1609e4 / 0.84e2 * eta ^ 2) * cos(f)) * sqrt(-eta ^ 2 + 0.1e1) + (-0.22e2 / 0.25e2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * ((eta ^ 3 - 0.153e3 / 0.22e2 * eta ^ 2 - 0.1465e4 / 0.11e2 * eta - 0.389e3 / 0.2e1) * (ci2 ^ 6) + (-eta ^ 3 + 0.205e3 / 0.22e2 * eta ^ 2 + 0.1583e4 / 0.11e2 * eta + 0.4463e4 / 0.22e2) * (ci2 ^ 4) + (0.3e1 / 0.22e2 * eta ^ 3 - 0.151e3 / 0.44e2 * eta ^ 2 - 0.721e3 / 0.22e2 * eta - 0.163e3 / 0.4e1) * (ci2 ^ 2) + 0.5e1 / 0.22e2 * eta ^ 2 + 0.21e2 / 0.22e2 * eta + 0.8e1 / 0.11e2) * (ci2 + 1) * (ci2 - 1) * cos((6 * f + 2 * g)) - 0.6e1 / 0.5e1 * ((eta ^ 3 + 0.117e3 / 0.10e2 * eta ^ 2 + 0.33e2 * eta + 0.219e3 / 0.10e2) * (ci2 ^ 6) + (-eta ^ 3 - 0.137e3 / 0.10e2 * eta ^ 2 - 0.183e3 / 0.5e1 * eta - 0.47e2 / 0.2e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 3 + 0.257e3 / 0.60e2 * eta ^ 2 + 0.21e2 / 0.2e1 * eta + 0.383e3 / 0.60e2) * (ci2 ^ 2) - 0.7e1 / 0.30e2 * eta ^ 2 - 0.13e2 / 0.30e2 * eta - 0.1e1 / 0.5e1) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) * (ci2 + 1) * (ci2 - 1) * cos((-2 * g + 2 * f)) + 0.36e2 / 0.25e2 * (ci2 + 1) * ((-0.5e1 / 0.6e1 * eta ^ 5 - 0.665e3 / 0.6e1 * eta ^ 4 - 0.425e3 / 0.3e1 * eta ^ 3 + 0.6e1 * eta ^ 2 + 0.767e3 / 0.6e1 * eta + 0.359e3 / 0.6e1 + eta ^ 6) * (ci2 ^ 6) + (0.3e1 / 0.2e1 * eta ^ 5 + 0.749e3 / 0.6e1 * eta ^ 4 + 0.163e3 * eta ^ 3 - eta ^ 6 + 0.10e2 * eta ^ 2 - 0.289e3 / 0.2e1 * eta - 0.169e3 / 0.2e1) * (ci2 ^ 4) + (-0.61e2 / 0.36e2 * eta ^ 5 - 0.1229e4 / 0.36e2 * eta ^ 4 - 0.619e3 / 0.18e2 * eta ^ 3 + eta ^ 6 / 0.18e2 + 0.607e3 / 0.36e2 + 0.13e2 / 0.9e1 * eta ^ 2 + 0.907e3 / 0.36e2 * eta) * (ci2 ^ 2) + (0.1e1 + eta) * (eta ^ 4 + 0.8e1 * eta ^ 3 - 0.2e1 * eta ^ 2 + 0.4e1 * eta - 0.17e2 / 0.3e1) / 0.6e1) * (ci2 - 1) * cos((2 * g + 2 * f)) + 0.93e2 / 0.25e2 * ((eta ^ 5 + 0.771e3 / 0.62e2 * eta ^ 4 + 0.1022e4 / 0.31e2 * eta ^ 3 - 0.955e3 / 0.31e2 * eta ^ 2 - 0.6269e4 / 0.31e2 * eta - 0.9629e4 / 0.62e2) * (ci2 ^ 6) + (-eta ^ 5 - 0.835e3 / 0.62e2 * eta ^ 4 - 0.1150e4 / 0.31e2 * eta ^ 3 + 0.1171e4 / 0.31e2 * eta ^ 2 + 0.7165e4 / 0.31e2 * eta + 0.10797e5 / 0.62e2) * (ci2 ^ 4) + (0.37e2 / 0.186e3 * eta ^ 5 + 0.1151e4 / 0.372e3 * eta ^ 4 + 0.799e3 / 0.93e2 * eta ^ 3 - 0.2159e4 / 0.186e3 * eta ^ 2 - 0.3585e4 / 0.62e2 * eta - 0.15409e5 / 0.372e3) * (ci2 ^ 2) - 0.8e1 / 0.93e2 * (eta ^ 3 + 0.3e1 * eta ^ 2 - 0.10e2 * eta - 0.37e2 / 0.2e1) * (0.1e1 + eta)) * (eta - 0.1e1) * (ci2 + 1) * (ci2 - 1) * cos((2 * g + 4 * f)) + 0.3e1 / 0.5e1 * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 2 * (ci2 + 1) * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 ^ 2) * (ci2 - 1) * cos((4 * f - 2 * g)) - 0.39e2 / 0.25e2 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 2 * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * cos((8 * f + 2 * g)) - 0.9e1 / 0.25e2 * (eta - 0.1e1) * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * ((eta ^ 4 + 0.22e2 / 0.3e1 * eta ^ 3 + 0.70e2 / 0.9e1 * eta ^ 2 - 0.88e2 / 0.3e1 * eta - 0.341e3 / 0.9e1) * (ci2 ^ 2) - 0.4e1 / 0.3e1 * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta)) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((2 * f + 4 * g)) + 0.3e1 / 0.25e2 * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * ((eta ^ 5 - 0.12e2 * eta ^ 4 - 0.50e2 * eta ^ 3 + 0.28e2 * eta ^ 2 + 0.81e2 * eta + 0.32e2 / 0.3e1) * (ci2 ^ 2) + 0.2e1 * eta ^ 4 + 0.4e1 * eta ^ 2 - 0.50e2 / 0.3e1) * cos((4 * f + 4 * g)) + 0.8e1 / 0.25e2 * ((eta ^ 4 + 0.11e2 / 0.4e1 * eta ^ 3 + 0.3e1 * eta ^ 2 - 0.44e2 * eta - 0.309e3 / 0.4e1) * (ci2 ^ 2) - eta ^ 3 / 0.2e1 - eta ^ 2 / 0.2e1 + 0.8e1 * eta + 0.8e1) * (eta - 0.1e1) * (0.1e1 + eta) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((6 * f + 4 * g)) - 0.3e1 / 0.50e2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((ci2 + 1) ^ 2) * ((eta ^ 2 - 0.11e2 * eta - 0.292e3 / 0.3e1) * (ci2 ^ 2) + 0.2e1 * eta + 0.2e1) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((8 * f + 4 * g)) - 0.192e3 / 0.5e1 * ((eta ^ 2 - 0.33e2 / 0.8e1 * eta - 0.67e2 / 0.8e1) * (ci2 ^ 6) + (-eta ^ 2 + 0.39e2 / 0.8e1 * eta + 0.73e2 / 0.8e1) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.57e2 / 0.40e2 * eta - 0.91e2 / 0.40e2) * (ci2 ^ 2) + 0.3e1 / 0.40e2 * eta + 0.3e1 / 0.40e2) * (eta - 0.1e1) * (0.1e1 + eta) * Delta * (ci2 + 1) * (ci2 - 1) * sin((2 * g + 4 * f)) + 0.1584e4 / 0.5e1 * (0.1e1 + eta) * Delta * (ci2 + 1) * ((eta ^ 2 + 0.2e1 / 0.11e2 * eta - 0.61e2 / 0.33e2) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * eta ^ 2 - 0.2e1 / 0.11e2 * eta + 0.71e2 / 0.33e2) * (ci2 ^ 4) + (0.19e2 / 0.55e2 * eta ^ 2 + 0.2e1 / 0.55e2 * eta - 0.101e3 / 0.165e3) * (ci2 ^ 2) - eta ^ 2 / 0.55e2 + 0.1e1 / 0.33e2) * (ci2 - 1) * sin((2 * g + 2 * f)) + (eta - 0.1e1) * (-0.3e1 / 0.25e2 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((10 * f + 4 * g)) - 0.132e3 / 0.5e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * sin((6 * f + 2 * g)) + 0.12e2 / 0.5e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * Delta * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * sin((-2 * g + 2 * f)) - 0.48e2 / 0.5e1 * ((0.329e3 / 0.48e2 * eta ^ 5 + 0.2537e4 / 0.160e3 * eta ^ 4 + 0.631e3 / 0.40e2 * eta ^ 3 - 0.1939e4 / 0.240e3 * eta ^ 2 - 0.1883e4 / 0.48e2 * eta - 0.12133e5 / 0.480e3 + eta ^ 6) * (ci2 ^ 6) + (-0.377e3 / 0.48e2 * eta ^ 5 - 0.8827e4 / 0.480e3 * eta ^ 4 - 0.433e3 / 0.24e2 * eta ^ 3 - eta ^ 6 + 0.479e3 / 0.48e2 * eta ^ 2 + 0.2155e4 / 0.48e2 * eta + 0.13589e5 / 0.480e3) * (ci2 ^ 4) + (0.1141e4 / 0.480e3 * eta ^ 5 + 0.5413e4 / 0.960e3 * eta ^ 4 + 0.1259e4 / 0.240e3 * eta ^ 3 + 0.7e1 / 0.30e2 * eta ^ 6 - 0.7979e4 / 0.960e3 - 0.1957e4 / 0.480e3 * eta ^ 2 - 0.453e3 / 0.32e2 * eta) * (ci2 ^ 2) - 0.7e1 / 0.60e2 * (0.1e1 + eta) * (eta ^ 4 + 0.11e2 / 0.7e1 * eta ^ 3 + 0.5e1 / 0.7e1 * eta ^ 2 - 0.22e2 / 0.7e1 * eta - 0.24e2 / 0.7e1)) * (ci2 + 1) * (ci2 - 1) * cos((2 * g)) + ((eta ^ 5 + 0.128e3 / 0.25e2 * eta ^ 4 - 0.574e3 / 0.25e2 * eta ^ 3 + 0.912e3 / 0.25e2 * eta ^ 2 + 0.1753e4 / 0.5e1 * eta + 0.1464e4 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 5 - 0.296e3 / 0.25e2 * eta ^ 4 + 0.1212e4 / 0.25e2 * eta ^ 3 - 0.408e3 / 0.5e1 * eta ^ 2 - 0.3778e4 / 0.5e1 * eta - 0.3136e4 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 5 + 0.87e2 / 0.25e2 * eta ^ 4 - 0.246e3 / 0.5e1 * eta ^ 3 + 0.426e3 / 0.5e1 * eta ^ 2 + 0.3171e4 / 0.5e1 * eta + 0.2523e4 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 5 + 0.89e2 / 0.25e2 * eta ^ 4 + 0.632e3 / 0.25e2 * eta ^ 3 - 0.903e3 / 0.5e1 - 0.222e3 / 0.5e1 * eta ^ 2 - 0.1226e4 / 0.5e1 * eta) * (ci2 ^ 2) - 0.111e3 / 0.100e3 * eta ^ 4 + 0.461e3 / 0.20e2 - 0.21e2 / 0.5e1 * eta ^ 3 - eta ^ 5 / 0.10e2 + 0.339e3 / 0.10e2 * eta + 0.391e3 / 0.50e2 * eta ^ 2) * cos((2 * f)) - ((eta ^ 3 - 0.68e2 / 0.5e1 * eta ^ 2 + 0.849e3 / 0.5e1 * eta + 0.1858e4 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 + 0.146e3 / 0.5e1 * eta ^ 2 - 0.1822e4 / 0.5e1 * eta - 0.770e3) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 3 - 0.78e2 / 0.5e1 * eta ^ 2 + 0.1539e4 / 0.5e1 * eta + 0.2868e4 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 3 - 0.2e1 / 0.5e1 * eta ^ 2 - 0.594e3 / 0.5e1 * eta - 0.902e3 / 0.5e1) * (ci2 ^ 2) - eta ^ 3 / 0.10e2 + 0.9e1 / 0.10e2 * eta ^ 2 + 0.31e2 / 0.2e1 * eta + 0.197e3 / 0.10e2) * (eta - 0.1e1) * (0.1e1 + eta) * cos((4 * f)) / 0.5e1 - (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * cos((6 * f)) / 0.5e1 - 0.11e2 / 0.50e2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 + 1) ^ 2) * ((eta ^ 2 + 0.5e1 * eta + 0.20e2 / 0.11e2) * (ci2 ^ 2) - 0.10e2 / 0.11e2 * eta - 0.10e2 / 0.11e2) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * cos((4 * g)) + 0.48e2 / 0.5e1 * ((eta ^ 2 + 0.33e2 / 0.2e1 * eta + 0.29e2 / 0.2e1) * (ci2 ^ 6) + (-eta ^ 2 - 0.39e2 / 0.2e1 * eta - 0.35e2 / 0.2e1) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 + 0.57e2 / 0.10e2 * eta + 0.53e2 / 0.10e2) * (ci2 ^ 2) - 0.3e1 / 0.10e2 * eta - 0.3e1 / 0.10e2) * (0.1e1 + eta) * Delta * (ci2 + 1) * (ci2 - 1) * sin((2 * g)) + (0.57e2 / 0.5e1 * eta ^ 5 + 0.612e3 / 0.25e2 * eta ^ 4 + 0.452e3 / 0.5e1 * eta ^ 3 + 0.5558e4 / 0.25e2 * eta ^ 2 + 0.9303e4 / 0.25e2 * eta + 0.8e1 / 0.5e1 * eta ^ 6 + 0.5494e4 / 0.25e2) * (ci2 ^ 8) + (-0.122e3 / 0.5e1 * eta ^ 5 - 0.1334e4 / 0.25e2 * eta ^ 4 - 0.988e3 / 0.5e1 * eta ^ 3 - 0.12116e5 / 0.25e2 * eta ^ 2 - 0.20194e5 / 0.25e2 * eta - 0.11926e5 / 0.25e2 - 0.16e2 / 0.5e1 * eta ^ 6) * (ci2 ^ 6) + (0.267e3 / 0.25e2 * eta ^ 5 + 0.618e3 / 0.25e2 * eta ^ 4 + 0.3588e4 / 0.25e2 * eta ^ 3 + 0.24e2 / 0.25e2 * eta ^ 6 + 0.10098e5 / 0.25e2 * eta ^ 2 + 0.16977e5 / 0.25e2 * eta + 0.396e3) * (ci2 ^ 4) + (0.66e2 / 0.25e2 * eta ^ 5 + 0.126e3 / 0.25e2 * eta ^ 4 - 0.192e3 / 0.5e1 * eta ^ 3 + 0.16e2 / 0.25e2 * eta ^ 6 - 0.3726e4 / 0.25e2 - 0.3816e4 / 0.25e2 * eta ^ 2 - 0.6554e4 / 0.25e2 * eta) * (ci2 ^ 2) - 0.127e3 / 0.50e2 * eta ^ 4 + 0.78e2 / 0.25e2 * eta ^ 3 - 0.4e1 / 0.25e2 * eta ^ 6 - 0.57e2 / 0.50e2 * eta ^ 5 + 0.1011e4 / 0.50e2 + 0.1829e4 / 0.50e2 * eta + 0.522e3 / 0.25e2 * eta ^ 2)) * (0.1e1 + eta)) / a ^ 4 / eta ^ 11 / (0.1e1 + eta) ^ 2 -0.30e2 * sqrt((-ci2 ^ 2 + 1)) * ci2 * ((-0.33e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.14e2 / 0.3e1 * eta + 0.313e3 / 0.33e2) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.83e2 / 0.11e2 * eta - 0.325e3 / 0.22e2) * (ci2 ^ 4) + (0.2e1 / 0.3e1 * eta ^ 2 + 0.136e3 / 0.33e2 * eta + 0.22e2 / 0.3e1) * (ci2 ^ 2) - eta ^ 2 / 0.12e2 - 0.49e2 / 0.66e2 * eta - 0.151e3 / 0.132e3) * sin((-h + 3 * f)) - 0.3e1 / 0.160e3 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-h + 3 * f - 2 * g)) - 0.3e1 / 0.32e2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((h + 2 * g + 7 * f)) + ((-0.63e2 / 0.80e2 * eta ^ 4 - 0.63e2 / 0.40e2 * eta ^ 3 + 0.276e3 / 0.5e1 * eta ^ 2 + 0.4971e4 / 0.40e2 * eta + 0.5439e4 / 0.80e2) * (ci2 ^ 8) + (0.63e2 / 0.64e2 * eta ^ 4 + 0.81e2 / 0.32e2 * eta ^ 3 - 0.6087e4 / 0.80e2 * eta ^ 2 - 0.5493e4 / 0.32e2 * eta - 0.29967e5 / 0.320e3) * (ci2 ^ 6) + (-0.21e2 / 0.80e2 * eta ^ 4 - 0.139e3 / 0.160e3 * eta ^ 3 + 0.4229e4 / 0.160e3 * eta ^ 2 + 0.9447e4 / 0.160e3 * eta + 0.1021e4 / 0.32e2) * (ci2 ^ 4) + (0.1e1 + eta) * (eta ^ 2 - 0.96e2 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 2) / 0.64e2 + (0.1e1 + eta) * (eta ^ 2 - 0.96e2 / 0.5e1 * eta - 0.21e2) / 0.64e2) * sin((h + f + 2 * g)) + ((0.11e2 / 0.80e2 * eta ^ 4 - 0.379e3 / 0.120e3 * eta ^ 3 - 0.29e2 / 0.2e1 * eta ^ 2 - 0.629e3 / 0.24e2 * eta - 0.3433e4 / 0.240e3) * (ci2 ^ 8) + (0.19337e5 / 0.960e3 - 0.11e2 / 0.64e2 * eta ^ 4 + 0.1913e4 / 0.480e3 * eta ^ 3 + 0.1553e4 / 0.80e2 * eta ^ 2 + 0.17411e5 / 0.480e3 * eta) * (ci2 ^ 6) + (-0.1121e4 / 0.96e2 * eta - 0.193e3 / 0.32e2 * eta ^ 2 - 0.3179e4 / 0.480e3 + 0.11e2 / 0.240e3 * eta ^ 4 - 0.559e3 / 0.480e3 * eta ^ 3) * (ci2 ^ 4) + (0.1e1 + eta) * (eta ^ 2 + 0.32e2 * eta + 0.59e2) * (ci2 ^ 2) / 0.960e3 + (0.1e1 + eta) * (eta ^ 2 + 0.32e2 * eta + 0.59e2) / 0.960e3) * sin((h + 3 * f + 2 * g)) + 0.27e2 / 0.40e2 * (-0.10e2 / 0.9e1 * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * cos((h - 2 * g + f)) + 0.13e2 / 0.54e2 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * sin((h + 4 * g + f)) + ((eta ^ 4 + 0.271e3 / 0.27e2 * eta ^ 3 + 0.949e3 / 0.27e2 * eta ^ 2 + 0.79e2 * eta + 0.452e3 / 0.9e1) * (ci2 ^ 6) + (-0.245e3 / 0.3e1 - 0.3e1 / 0.2e1 * eta ^ 4 - 0.289e3 / 0.18e2 * eta ^ 3 - 0.769e3 / 0.6e1 * eta - 0.1027e4 / 0.18e2 * eta ^ 2) * (ci2 ^ 4) + (0.406e3 / 0.9e1 + 0.2e1 / 0.3e1 * eta ^ 4 + 0.8e1 * eta ^ 3 + 0.72e2 * eta + 0.292e3 / 0.9e1 * eta ^ 2) * (ci2 ^ 2) - 0.697e3 / 0.108e3 * eta ^ 2 - eta ^ 4 / 0.12e2 - 0.131e3 / 0.108e3 * eta ^ 3 - 0.1513e4 / 0.108e3 * eta - 0.457e3 / 0.54e2) * sin((-h + f)) - 0.11e2 / 0.18e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 2 + 0.14e2 / 0.3e1 * eta + 0.313e3 / 0.33e2) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.83e2 / 0.11e2 * eta - 0.325e3 / 0.22e2) * (ci2 ^ 4) + (0.2e1 / 0.3e1 * eta ^ 2 + 0.136e3 / 0.33e2 * eta + 0.22e2 / 0.3e1) * (ci2 ^ 2) - eta ^ 2 / 0.12e2 - 0.49e2 / 0.66e2 * eta - 0.151e3 / 0.132e3) * sin((h + 3 * f)) + (0.1e1 + eta) ^ 2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin((h + 5 * f)) / 0.6e1 + sin((h + f)) * ((eta ^ 4 + 0.271e3 / 0.27e2 * eta ^ 3 + 0.949e3 / 0.27e2 * eta ^ 2 + 0.79e2 * eta + 0.452e3 / 0.9e1) * (ci2 ^ 6) + (-0.245e3 / 0.3e1 - 0.3e1 / 0.2e1 * eta ^ 4 - 0.289e3 / 0.18e2 * eta ^ 3 - 0.769e3 / 0.6e1 * eta - 0.1027e4 / 0.18e2 * eta ^ 2) * (ci2 ^ 4) + (0.406e3 / 0.9e1 + 0.2e1 / 0.3e1 * eta ^ 4 + 0.8e1 * eta ^ 3 + 0.72e2 * eta + 0.292e3 / 0.9e1 * eta ^ 2) * (ci2 ^ 2) - 0.697e3 / 0.108e3 * eta ^ 2 - eta ^ 4 / 0.12e2 - 0.131e3 / 0.108e3 * eta ^ 3 - 0.1513e4 / 0.108e3 * eta - 0.457e3 / 0.54e2)) * (ci2 ^ 2) - ((eta ^ 2 + 0.44e2 * eta + 0.71e2) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.61e2 * eta - 0.379e3 / 0.4e1) * (ci2 ^ 6) + (0.7e1 / 0.20e2 * eta ^ 2 + 0.103e3 / 0.5e1 * eta + 0.601e3 / 0.20e2) * (ci2 ^ 4) + (-eta / 0.5e1 - 0.1e1 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.1e1 / 0.5e1) * (0.1e1 + eta) * Delta * cos((h + 3 * f + 2 * g)) / 0.4e1 + 0.39e2 / 0.160e3 * (0.1e1 + eta) ^ 2 * (-0.1e1 / 0.78e2 + (eta - 0.73e2 / 0.13e2) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta + 0.341e3 / 0.52e2) * (ci2 ^ 6) + (eta / 0.3e1 - 0.70e2 / 0.39e2) * (ci2 ^ 4) - (ci2 ^ 2) / 0.78e2) * (eta - 0.1e1) * sin((-h - 2 * g + f)) + 0.27e2 / 0.160e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.164e3 / 0.9e1 * eta + 0.283e3 / 0.9e1) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.211e3 / 0.9e1 * eta - 0.1439e4 / 0.36e2) * (ci2 ^ 6) + (eta ^ 2 / 0.3e1 + 0.61e2 / 0.9e1 * eta + 0.302e3 / 0.27e2) * (ci2 ^ 4) + (-eta / 0.54e2 - 0.1e1 / 0.54e2) * (ci2 ^ 2) - eta / 0.54e2 - 0.1e1 / 0.54e2) * (eta - 0.1e1) * sin((h + 5 * f + 2 * g)) - 0.15e2 / 0.4e1 * (0.1e1 + eta) * Delta * ((eta ^ 2 + 0.44e2 / 0.5e1 * eta + 0.7e1) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.199e3 / 0.20e2) * (ci2 ^ 6) + (0.7e1 / 0.20e2 * eta ^ 2 + 0.103e3 / 0.25e2 * eta + 0.349e3 / 0.100e3) * (ci2 ^ 4) + (-eta / 0.25e2 - 0.1e1 / 0.25e2) * (ci2 ^ 2) - eta / 0.25e2 - 0.1e1 / 0.25e2) * cos((h + f + 2 * g)) - 0.63e2 / 0.80e2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4 + 0.2e1 * eta ^ 3 - 0.1472e4 / 0.21e2 * eta ^ 2 - 0.3314e4 / 0.21e2 * eta - 0.259e3 / 0.3e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.31e2 / 0.14e2 * eta ^ 3 + 0.431e3 / 0.7e1 * eta ^ 2 + 0.1947e4 / 0.14e2 * eta + 0.303e3 / 0.4e1) * (ci2 ^ 4) + (eta ^ 4 / 0.12e2 + 0.23e2 / 0.63e2 * eta ^ 3 - 0.1643e4 / 0.126e3 * eta ^ 2 - 0.601e3 / 0.21e2 * eta - 0.3847e4 / 0.252e3) * (ci2 ^ 2) - 0.5e1 / 0.252e3 * (0.1e1 + eta) * (eta ^ 2 - 0.96e2 / 0.5e1 * eta - 0.21e2)) * sin((-h + f + 2 * g)) + 0.11e2 / 0.80e2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4 - 0.758e3 / 0.33e2 * eta ^ 3 - 0.1160e4 / 0.11e2 * eta ^ 2 - 0.6290e4 / 0.33e2 * eta - 0.3433e4 / 0.33e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 4 + 0.35e2 / 0.2e1 * eta ^ 3 + 0.973e3 / 0.11e2 * eta ^ 2 + 0.337e3 / 0.2e1 * eta + 0.4157e4 / 0.44e2) * (ci2 ^ 4) + (eta ^ 4 / 0.12e2 - 0.29e2 / 0.11e2 * eta ^ 3 - 0.949e3 / 0.66e2 * eta ^ 2 - 0.949e3 / 0.33e2 * eta - 0.2201e4 / 0.132e3) * (ci2 ^ 2) + (0.1e1 + eta) * (eta ^ 2 + 0.32e2 * eta + 0.59e2) / 0.132e3) * sin((-h + 3 * f + 2 * g)) - 0.7e1 / 0.80e2 * ((eta ^ 2 - 0.44e2 / 0.7e1 * eta - 0.71e2 / 0.7e1) * (ci2 ^ 2) + 0.6e1 / 0.7e1 * eta + 0.6e1 / 0.7e1) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 3 * f + 4 * g)) - 0.17e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * ((eta ^ 2 + 0.44e2 / 0.17e2 * eta + 0.47e2 / 0.17e2) * (ci2 ^ 2) - 0.6e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 5 * f + 4 * g)) + 0.11e2 / 0.80e2 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 4 * g + 7 * f)) - 0.15e2 / 0.4e1 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta ^ 2 + 0.44e2 / 0.5e1 * eta + 0.7e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.39e2 / 0.5e1 * eta - 0.129e3 / 0.20e2) * (ci2 ^ 4) + (eta ^ 2 / 0.10e2 + 0.38e2 / 0.25e2 * eta + 0.67e2 / 0.50e2) * (ci2 ^ 2) - eta / 0.25e2 - 0.1e1 / 0.25e2) * cos((-h + f + 2 * g)) - 0.7e1 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2 - 0.44e2 / 0.7e1 * eta - 0.71e2 / 0.7e1) * (ci2 ^ 4) + (0.6e1 / 0.7e1 * eta + 0.6e1 / 0.7e1) * (ci2 ^ 2) + 0.2e1 / 0.7e1 * eta + 0.2e1 / 0.7e1) * sin((h + 3 * f + 4 * g)) + 0.27e2 / 0.160e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 2 + 0.164e3 / 0.9e1 * eta + 0.283e3 / 0.9e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.43e2 / 0.3e1 * eta - 0.97e2 / 0.4e1) * (ci2 ^ 4) + (eta ^ 2 / 0.12e2 + 0.2e1 * eta + 0.335e3 / 0.108e3) * (ci2 ^ 2) - eta / 0.54e2 - 0.1e1 / 0.54e2) * sin((-h + 5 * f + 2 * g)) - (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta ^ 2 + 0.44e2 * eta + 0.71e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.39e2 * eta - 0.237e3 / 0.4e1) * (ci2 ^ 4) + (eta ^ 2 / 0.10e2 + 0.38e2 / 0.5e1 * eta + 0.103e3 / 0.10e2) * (ci2 ^ 2) - eta / 0.5e1 - 0.1e1 / 0.5e1) * cos((-h + 3 * f + 2 * g)) / 0.4e1 - 0.17e2 / 0.80e2 * ((eta ^ 2 + 0.44e2 / 0.17e2 * eta + 0.47e2 / 0.17e2) * (ci2 ^ 4) + (-0.6e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * (ci2 ^ 2) - 0.2e1 / 0.17e2 * eta - 0.2e1 / 0.17e2) * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * sin((h + 5 * f + 4 * g)) - 0.3e1 / 0.4e1 * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * cos((-h - 2 * g + f)) + 0.3e1 / 0.4e1 * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * Delta * (eta - 0.1e1) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * cos((h + 5 * f + 2 * g)) + 0.13e2 / 0.80e2 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 4 * g + f)) + 0.11e2 / 0.80e2 * (ci2 ^ 6) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * sin((h + 4 * g + 7 * f)) + 0.9e1 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin((-h + 5 * f)) + 0.39e2 / 0.160e3 * (-0.1e1 / 0.78e2 + (eta - 0.73e2 / 0.13e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta + 0.15e2 / 0.4e1) * (ci2 ^ 4) + (eta / 0.12e2 - 0.85e2 / 0.156e3) * (ci2 ^ 2)) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * sin((h - 2 * g + f)) + 0.3e1 / 0.4e1 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * cos((-h + 5 * f + 2 * g)) - 0.3e1 / 0.32e2 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * sin((-h + 2 * g + 7 * f)) - 0.3e1 / 0.160e3 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * sin((h + 3 * f - 2 * g))) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * (0.7e1 / 0.10e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.207e3 / 0.28e2 * eta ^ 2 + 0.47e2 / 0.2e1 * eta + 0.563e3 / 0.28e2) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.159e3 / 0.16e2 * eta ^ 2 - 0.1777e4 / 0.56e2 * eta - 0.3001e4 / 0.112e3) * (ci2 ^ 6) + (0.5e1 / 0.14e2 * eta ^ 3 + 0.177e3 / 0.56e2 * eta ^ 2 + 0.561e3 / 0.56e2 * eta + 0.115e3 / 0.14e2) * (ci2 ^ 4) + (-0.5e1 / 0.224e3 * eta ^ 2 - eta / 0.14e2 - 0.11e2 / 0.224e3) * (ci2 ^ 2) - 0.5e1 / 0.224e3 * eta ^ 2 - eta / 0.14e2 - 0.11e2 / 0.224e3) * sin((h + 2 * g + 4 * f)) - 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 + 0.11e2 / 0.2e1 * eta + 0.7e1) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.61e2 / 0.8e1 * eta - 0.19e2 / 0.2e1) * (ci2 ^ 6) + (0.11e2 / 0.30e2 * eta ^ 2 + 0.53e2 / 0.20e2 * eta + 0.127e3 / 0.40e2) * (ci2 ^ 4) + (-0.7e1 / 0.240e3 * eta - 0.7e1 / 0.240e3) * (ci2 ^ 2) - 0.7e1 / 0.240e3 * eta - 0.7e1 / 0.240e3) * Delta * (eta - 0.1e1) * cos((h + 2 * g)) + 0.7e1 / 0.10e2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 3 + 0.207e3 / 0.28e2 * eta ^ 2 + 0.47e2 / 0.2e1 * eta + 0.563e3 / 0.28e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.699e3 / 0.112e3 * eta ^ 2 - 0.1119e4 / 0.56e2 * eta - 0.1875e4 / 0.112e3) * (ci2 ^ 4) + (0.3e1 / 0.28e2 * eta ^ 3 + 0.121e3 / 0.112e3 * eta ^ 2 + 0.47e2 / 0.14e2 * eta + 0.295e3 / 0.112e3) * (ci2 ^ 2) - 0.5e1 / 0.224e3 * eta ^ 2 - eta / 0.14e2 - 0.11e2 / 0.224e3) * sin((-h + 2 * g + 4 * f)) - 0.13e2 / 0.40e2 * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * (ci2 ^ 2) + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (ci2 ^ 4) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((h + 6 * f + 2 * g)) + 0.3e1 / 0.8e1 * (ci2 ^ 4) * (0.1e1 + eta) * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.1e1) * (ci2 ^ 2) + 0.11e2 / 0.30e2 * eta + 0.3e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * sin((-h - 2 * g + 2 * f)) + ((eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.49e2 / 0.10e2) * (eta ^ 2 + 0.2e1 * eta - 0.7e1) * (ci2 ^ 8) / 0.2e1 + (-0.1799e4 / 0.80e2 - 0.5e1 / 0.8e1 * eta ^ 4 + 0.47e2 / 0.80e2 * eta ^ 3 + 0.877e3 / 0.80e2 * eta ^ 2 - 0.539e3 / 0.80e2 * eta) * (ci2 ^ 6) + (0.37e2 / 0.5e1 - 0.2e1 / 0.5e1 * eta ^ 3 - 0.33e2 / 0.10e2 * eta ^ 2 + 0.61e2 / 0.20e2 * eta + 0.3e1 / 0.20e2 * eta ^ 4) * (ci2 ^ 4) + (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 ^ 2) / 0.80e2 + (0.1e1 + eta) * (eta ^ 2 - 0.5e1) / 0.80e2) * sin((h + 2 * g + 2 * f)) + (ci2 ^ 2) * (((eta ^ 3 - 0.12e2 / 0.5e1 * eta ^ 2 - 0.417e3 / 0.5e1 * eta - 0.472e3 / 0.5e1) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 3 + 0.21e2 / 0.10e2 * eta ^ 2 + 0.1329e4 / 0.10e2 * eta + 0.1509e4 / 0.10e2) * (ci2 ^ 4) + (0.3e1 / 0.10e2 * eta ^ 3 - 0.18e2 / 0.5e1 * eta ^ 2 - 0.741e3 / 0.10e2 * eta - 0.399e3 / 0.5e1) * (ci2 ^ 2) + eta ^ 3 / 0.10e2 + 0.9e1 / 0.5e1 * eta ^ 2 + 0.72e2 / 0.5e1 * eta + 0.139e3 / 0.10e2) * (eta - 0.1e1) * sin((h + 2 * f)) / 0.8e1 - (0.1e1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((h + 4 * f)) / 0.16e2 - (ci2 ^ 2) * ((eta ^ 3 + 0.10e2 * eta ^ 2 - 0.34e2 * eta - 0.49e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.25e2 / 0.2e1 * eta ^ 2 + 0.85e2 / 0.2e1 * eta + 0.245e3 / 0.4e1) * (ci2 ^ 2) + eta ^ 3 / 0.2e1 + 0.7e1 / 0.2e1 * eta ^ 2 - 0.57e2 / 0.4e1 * eta - 0.77e2 / 0.4e1) * (eta - 0.1e1) * sin((h + 2 * g)) / 0.20e2 + (0.1e1 + eta) * (-(ci2 ^ 4) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * (ci2 - 1) * (ci2 + 1) * sin((h + 4 * g)) / 0.32e2 + cos(h) * ((eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 + 0.77e2 / 0.2e1) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 3 - 0.15e2 / 0.2e1 * eta ^ 2 - 0.63e2) * (ci2 ^ 4) + (0.3e1 / 0.10e2 * eta ^ 3 + 0.51e2 / 0.20e2 * eta ^ 2 + 0.141e3 / 0.4e1) * (ci2 ^ 2) + eta ^ 3 / 0.10e2 + 0.3e1 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.4e1) * Delta)) - 0.33e2 * ((ci2 ^ 8) - 0.61e2 / 0.44e2 * (ci2 ^ 6) + 0.103e3 / 0.220e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.220e3 - 0.1e1 / 0.220e3) * (0.1e1 + eta) * Delta * cos((h + 2 * g + 2 * f)) + (ci2 ^ 2) * ((eta ^ 3 - 0.12e2 / 0.5e1 * eta ^ 2 - 0.417e3 / 0.5e1 * eta - 0.472e3 / 0.5e1) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 3 + 0.21e2 / 0.10e2 * eta ^ 2 + 0.1329e4 / 0.10e2 * eta + 0.1509e4 / 0.10e2) * (ci2 ^ 4) + (0.3e1 / 0.10e2 * eta ^ 3 - 0.18e2 / 0.5e1 * eta ^ 2 - 0.741e3 / 0.10e2 * eta - 0.399e3 / 0.5e1) * (ci2 ^ 2) + eta ^ 3 / 0.10e2 + 0.9e1 / 0.5e1 * eta ^ 2 + 0.72e2 / 0.5e1 * eta + 0.139e3 / 0.10e2) * (eta - 0.1e1) * sin((-h + 2 * f)) / 0.8e1 + ((eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.49e2 / 0.10e2) * (eta ^ 2 + 0.2e1 * eta - 0.7e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 4 + 0.33e2 / 0.40e2 * eta ^ 3 + 0.531e3 / 0.40e2 * eta ^ 2 - 0.357e3 / 0.40e2 * eta - 0.1113e4 / 0.40e2) * (ci2 ^ 4) + (eta ^ 4 / 0.20e2 - 0.21e2 / 0.40e2 * eta ^ 3 - 0.87e2 / 0.40e2 * eta ^ 2 + 0.25e2 / 0.8e1 * eta + 0.221e3 / 0.40e2) * (ci2 ^ 2) + (0.1e1 + eta) * (eta ^ 2 - 0.5e1) / 0.40e2) * (ci2 - 1) * (ci2 + 1) * sin((-h + 2 * g + 2 * f)) / 0.2e1 + 0.9e1 / 0.2e1 * (ci2 ^ 4) * (0.1e1 + eta) * Delta * (eta - 0.1e1) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * cos((h + 2 * g + 4 * f)) + (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 3 - 0.13e2 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.3e1 / 0.2e1) * (ci2 ^ 4) + (0.3e1 / 0.4e1 * eta ^ 2 + 0.9e1 / 0.4e1) * (ci2 ^ 2) + eta ^ 2 / 0.4e1 + 0.3e1 / 0.4e1) * sin((h + 4 * f + 4 * g)) / 0.40e2 - (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((-h + 4 * f)) / 0.16e2 - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 3 + 0.10e2 * eta ^ 2 - 0.34e2 * eta - 0.49e2) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.15e2 / 0.2e1 * eta ^ 2 + 0.51e2 / 0.2e1 * eta + 0.147e3 / 0.4e1) * (ci2 ^ 2) + eta ^ 3 / 0.4e1 + eta ^ 2 - 0.23e2 / 0.4e1 * eta - 0.7e1) * sin((-h + 2 * g)) / 0.20e2 - 0.33e2 * (0.1e1 + eta) * ((ci2 ^ 6) - 0.39e2 / 0.44e2 * (ci2 ^ 4) + 0.19e2 / 0.110e3 * (ci2 ^ 2) - 0.1e1 / 0.220e3) * (ci2 - 1) * (ci2 + 1) * Delta * cos((-h + 2 * g + 2 * f)) - 0.3e1 / 0.160e3 * (ci2 ^ 6) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * sin((h + 8 * f + 4 * g)) - (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 4 * g)) / 0.32e2 + ((eta ^ 3 - 0.13e2 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.3e1 / 0.2e1) * (ci2 ^ 2) + 0.3e1 / 0.4e1 * eta ^ 2 + 0.9e1 / 0.4e1) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 4 * f + 4 * g)) / 0.40e2 - 0.3e1 / 0.160e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-h + 8 * f + 4 * g)) + 0.9e1 / 0.2e1 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * cos((-h + 2 * g + 4 * f)) + 0.3e1 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2 + 0.11e2 / 0.3e1 * eta + 0.34e2 / 0.3e1) * (ci2 ^ 4) + (-eta / 0.2e1 - 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.6e1 - 0.1e1 / 0.6e1) * (eta - 0.1e1) * sin((h + 6 * f + 4 * g)) - 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 + 0.11e2 / 0.2e1 * eta + 0.7e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.39e2 / 0.8e1 * eta - 0.6e1) * (ci2 ^ 4) + (0.7e1 / 0.60e2 * eta ^ 2 + 0.41e2 / 0.40e2 * eta + 0.47e2 / 0.40e2) * (ci2 ^ 2) - 0.7e1 / 0.240e3 * eta - 0.7e1 / 0.240e3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * cos((-h + 2 * g)) + 0.3e1 / 0.8e1 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * sin((h - 2 * g + 2 * f)) - 0.11e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 2 + 0.5e1 * eta + 0.46e2 / 0.11e2) * (ci2 ^ 4) + (-0.15e2 / 0.22e2 * eta - 0.15e2 / 0.22e2) * (ci2 ^ 2) - 0.5e1 / 0.22e2 * eta - 0.5e1 / 0.22e2) * sin((h + 2 * f + 4 * g)) - 0.13e2 / 0.40e2 * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.69e2 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.52e2 * eta + 0.4e1 / 0.13e2) * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * sin((-h + 6 * f + 2 * g)) - 0.11e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 2 + 0.5e1 * eta + 0.46e2 / 0.11e2) * (ci2 ^ 2) - 0.15e2 / 0.22e2 * eta - 0.15e2 / 0.22e2) * sin((-h + 2 * f + 4 * g)) + 0.3e1 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2 + 0.11e2 / 0.3e1 * eta + 0.34e2 / 0.3e1) * (ci2 ^ 2) - eta / 0.2e1 - 0.1e1 / 0.2e1) * (eta - 0.1e1) * sin((-h + 6 * f + 4 * g)))) * R__e ^ 4 * J ^ 2 / eta ^ 8 / a ^ 4 / (0.1e1 + eta) ^ 2 -0.30e2 * sqrt((-ci2 ^ 2 + 1)) * ci2 * R__e ^ 4 * J ^ 2 * ((0.27e2 / 0.40e2 * (-0.10e2 / 0.9e1 * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * sin((h - 2 * g + f)) - 0.13e2 / 0.54e2 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * cos((h + 4 * g + f)) + ((eta ^ 4 + 0.271e3 / 0.27e2 * eta ^ 3 + 0.949e3 / 0.27e2 * eta ^ 2 + 0.79e2 * eta + 0.452e3 / 0.9e1) * (ci2 ^ 6) + (-0.245e3 / 0.3e1 - 0.3e1 / 0.2e1 * eta ^ 4 - 0.289e3 / 0.18e2 * eta ^ 3 - 0.769e3 / 0.6e1 * eta - 0.1027e4 / 0.18e2 * eta ^ 2) * (ci2 ^ 4) + (0.406e3 / 0.9e1 + 0.2e1 / 0.3e1 * eta ^ 4 + 0.8e1 * eta ^ 3 + 0.72e2 * eta + 0.292e3 / 0.9e1 * eta ^ 2) * (ci2 ^ 2) - 0.697e3 / 0.108e3 * eta ^ 2 - eta ^ 4 / 0.12e2 - 0.131e3 / 0.108e3 * eta ^ 3 - 0.1513e4 / 0.108e3 * eta - 0.457e3 / 0.54e2) * cos((-h + f)) + 0.11e2 / 0.18e2 * ((eta ^ 2 + 0.14e2 / 0.3e1 * eta + 0.313e3 / 0.33e2) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.83e2 / 0.11e2 * eta - 0.325e3 / 0.22e2) * (ci2 ^ 4) + (0.2e1 / 0.3e1 * eta ^ 2 + 0.136e3 / 0.33e2 * eta + 0.22e2 / 0.3e1) * (ci2 ^ 2) - eta ^ 2 / 0.12e2 - 0.49e2 / 0.66e2 * eta - 0.151e3 / 0.132e3) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 3 * f)) - (0.1e1 + eta) ^ 2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos((h + 5 * f)) / 0.6e1 - ((eta ^ 4 + 0.271e3 / 0.27e2 * eta ^ 3 + 0.949e3 / 0.27e2 * eta ^ 2 + 0.79e2 * eta + 0.452e3 / 0.9e1) * (ci2 ^ 6) + (-0.245e3 / 0.3e1 - 0.3e1 / 0.2e1 * eta ^ 4 - 0.289e3 / 0.18e2 * eta ^ 3 - 0.769e3 / 0.6e1 * eta - 0.1027e4 / 0.18e2 * eta ^ 2) * (ci2 ^ 4) + (0.406e3 / 0.9e1 + 0.2e1 / 0.3e1 * eta ^ 4 + 0.8e1 * eta ^ 3 + 0.72e2 * eta + 0.292e3 / 0.9e1 * eta ^ 2) * (ci2 ^ 2) - 0.697e3 / 0.108e3 * eta ^ 2 - eta ^ 4 / 0.12e2 - 0.131e3 / 0.108e3 * eta ^ 3 - 0.1513e4 / 0.108e3 * eta - 0.457e3 / 0.54e2) * cos((h + f))) * (ci2 ^ 2) + ((0.63e2 / 0.80e2 * eta ^ 4 + 0.63e2 / 0.40e2 * eta ^ 3 - 0.276e3 / 0.5e1 * eta ^ 2 - 0.4971e4 / 0.40e2 * eta - 0.5439e4 / 0.80e2) * (ci2 ^ 8) + (-0.63e2 / 0.64e2 * eta ^ 4 - 0.81e2 / 0.32e2 * eta ^ 3 + 0.6087e4 / 0.80e2 * eta ^ 2 + 0.5493e4 / 0.32e2 * eta + 0.29967e5 / 0.320e3) * (ci2 ^ 6) + (-0.9447e4 / 0.160e3 * eta - 0.4229e4 / 0.160e3 * eta ^ 2 + 0.21e2 / 0.80e2 * eta ^ 4 + 0.139e3 / 0.160e3 * eta ^ 3 - 0.1021e4 / 0.32e2) * (ci2 ^ 4) - (0.1e1 + eta) * (eta ^ 2 - 0.96e2 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 2) / 0.64e2 - (0.1e1 + eta) * (eta ^ 2 - 0.96e2 / 0.5e1 * eta - 0.21e2) / 0.64e2) * cos((h + f + 2 * g)) + ((0.3433e4 / 0.240e3 - 0.11e2 / 0.80e2 * eta ^ 4 + 0.379e3 / 0.120e3 * eta ^ 3 + 0.29e2 / 0.2e1 * eta ^ 2 + 0.629e3 / 0.24e2 * eta) * (ci2 ^ 8) + (-0.19337e5 / 0.960e3 - 0.17411e5 / 0.480e3 * eta + 0.11e2 / 0.64e2 * eta ^ 4 - 0.1913e4 / 0.480e3 * eta ^ 3 - 0.1553e4 / 0.80e2 * eta ^ 2) * (ci2 ^ 6) + (0.3179e4 / 0.480e3 + 0.559e3 / 0.480e3 * eta ^ 3 + 0.193e3 / 0.32e2 * eta ^ 2 + 0.1121e4 / 0.96e2 * eta - 0.11e2 / 0.240e3 * eta ^ 4) * (ci2 ^ 4) - (0.1e1 + eta) * (eta ^ 2 + 0.32e2 * eta + 0.59e2) * (ci2 ^ 2) / 0.960e3 - (0.1e1 + eta) * (eta ^ 2 + 0.32e2 * eta + 0.59e2) / 0.960e3) * cos((h + 3 * f + 2 * g)) - 0.33e2 / 0.80e2 * ((eta ^ 2 + 0.14e2 / 0.3e1 * eta + 0.313e3 / 0.33e2) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 2 - 0.83e2 / 0.11e2 * eta - 0.325e3 / 0.22e2) * (ci2 ^ 4) + (0.2e1 / 0.3e1 * eta ^ 2 + 0.136e3 / 0.33e2 * eta + 0.22e2 / 0.3e1) * (ci2 ^ 2) - eta ^ 2 / 0.12e2 - 0.49e2 / 0.66e2 * eta - 0.151e3 / 0.132e3) * (ci2 ^ 2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((-h + 3 * f)) + 0.3e1 / 0.32e2 * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta - 0.1e1) ^ 2 * cos((h + 2 * g + 7 * f)) - 0.3e1 / 0.160e3 * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * (eta - 0.1e1) ^ 2 * cos((-h + 3 * f - 2 * g)) - (0.1e1 + eta) * Delta * ((eta ^ 2 + 0.44e2 * eta + 0.71e2) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.61e2 * eta - 0.379e3 / 0.4e1) * (ci2 ^ 6) + (0.7e1 / 0.20e2 * eta ^ 2 + 0.103e3 / 0.5e1 * eta + 0.601e3 / 0.20e2) * (ci2 ^ 4) + (-eta / 0.5e1 - 0.1e1 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.1e1 / 0.5e1) * sin((h + 3 * f + 2 * g)) / 0.4e1 + 0.39e2 / 0.160e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * (-0.1e1 / 0.78e2 + (eta - 0.73e2 / 0.13e2) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta + 0.341e3 / 0.52e2) * (ci2 ^ 6) + (eta / 0.3e1 - 0.70e2 / 0.39e2) * (ci2 ^ 4) - (ci2 ^ 2) / 0.78e2) * cos((-h - 2 * g + f)) - 0.15e2 / 0.4e1 * ((eta ^ 2 + 0.44e2 / 0.5e1 * eta + 0.7e1) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.61e2 / 0.5e1 * eta - 0.199e3 / 0.20e2) * (ci2 ^ 6) + (0.7e1 / 0.20e2 * eta ^ 2 + 0.103e3 / 0.25e2 * eta + 0.349e3 / 0.100e3) * (ci2 ^ 4) + (-eta / 0.25e2 - 0.1e1 / 0.25e2) * (ci2 ^ 2) - eta / 0.25e2 - 0.1e1 / 0.25e2) * (0.1e1 + eta) * Delta * sin((h + f + 2 * g)) - 0.27e2 / 0.160e3 * ((eta ^ 2 + 0.164e3 / 0.9e1 * eta + 0.283e3 / 0.9e1) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.211e3 / 0.9e1 * eta - 0.1439e4 / 0.36e2) * (ci2 ^ 6) + (eta ^ 2 / 0.3e1 + 0.61e2 / 0.9e1 * eta + 0.302e3 / 0.27e2) * (ci2 ^ 4) + (-eta / 0.54e2 - 0.1e1 / 0.54e2) * (ci2 ^ 2) - eta / 0.54e2 - 0.1e1 / 0.54e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 5 * f + 2 * g)) - 0.63e2 / 0.80e2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4 + 0.2e1 * eta ^ 3 - 0.1472e4 / 0.21e2 * eta ^ 2 - 0.3314e4 / 0.21e2 * eta - 0.259e3 / 0.3e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 4 - 0.31e2 / 0.14e2 * eta ^ 3 + 0.431e3 / 0.7e1 * eta ^ 2 + 0.1947e4 / 0.14e2 * eta + 0.303e3 / 0.4e1) * (ci2 ^ 4) + (eta ^ 4 / 0.12e2 + 0.23e2 / 0.63e2 * eta ^ 3 - 0.1643e4 / 0.126e3 * eta ^ 2 - 0.601e3 / 0.21e2 * eta - 0.3847e4 / 0.252e3) * (ci2 ^ 2) - 0.5e1 / 0.252e3 * (0.1e1 + eta) * (eta ^ 2 - 0.96e2 / 0.5e1 * eta - 0.21e2)) * cos((-h + f + 2 * g)) + 0.11e2 / 0.80e2 * ((eta ^ 4 - 0.758e3 / 0.33e2 * eta ^ 3 - 0.1160e4 / 0.11e2 * eta ^ 2 - 0.6290e4 / 0.33e2 * eta - 0.3433e4 / 0.33e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 4 + 0.35e2 / 0.2e1 * eta ^ 3 + 0.973e3 / 0.11e2 * eta ^ 2 + 0.337e3 / 0.2e1 * eta + 0.4157e4 / 0.44e2) * (ci2 ^ 4) + (eta ^ 4 / 0.12e2 - 0.29e2 / 0.11e2 * eta ^ 3 - 0.949e3 / 0.66e2 * eta ^ 2 - 0.949e3 / 0.33e2 * eta - 0.2201e4 / 0.132e3) * (ci2 ^ 2) + (0.1e1 + eta) * (eta ^ 2 + 0.32e2 * eta + 0.59e2) / 0.132e3) * (ci2 - 1) * (ci2 + 1) * cos((-h + 3 * f + 2 * g)) - 0.3e1 / 0.32e2 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * cos((-h + 2 * g + 7 * f)) + 0.3e1 / 0.160e3 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * cos((h + 3 * f - 2 * g)) + 0.15e2 / 0.4e1 * ((eta ^ 2 + 0.44e2 / 0.5e1 * eta + 0.7e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.39e2 / 0.5e1 * eta - 0.129e3 / 0.20e2) * (ci2 ^ 4) + (eta ^ 2 / 0.10e2 + 0.38e2 / 0.25e2 * eta + 0.67e2 / 0.50e2) * (ci2 ^ 2) - eta / 0.25e2 - 0.1e1 / 0.25e2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sin((-h + f + 2 * g)) + 0.7e1 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2 - 0.44e2 / 0.7e1 * eta - 0.71e2 / 0.7e1) * (ci2 ^ 4) + (0.6e1 / 0.7e1 * eta + 0.6e1 / 0.7e1) * (ci2 ^ 2) + 0.2e1 / 0.7e1 * eta + 0.2e1 / 0.7e1) * cos((h + 3 * f + 4 * g)) + 0.17e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * ((eta ^ 2 + 0.44e2 / 0.17e2 * eta + 0.47e2 / 0.17e2) * (ci2 ^ 4) + (-0.6e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * (ci2 ^ 2) - 0.2e1 / 0.17e2 * eta - 0.2e1 / 0.17e2) * (ci2 + 1) * cos((h + 5 * f + 4 * g)) - 0.17e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2 + 0.44e2 / 0.17e2 * eta + 0.47e2 / 0.17e2) * (ci2 ^ 2) - 0.6e1 / 0.17e2 * eta - 0.6e1 / 0.17e2) * cos((-h + 5 * f + 4 * g)) + 0.11e2 / 0.80e2 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 4 * g + 7 * f)) + 0.13e2 / 0.80e2 * (ci2 ^ 4) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 4 * g + f)) + 0.3e1 / 0.4e1 * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 0.1e1) * sin((-h - 2 * g + f)) + 0.3e1 / 0.4e1 * (ci2 ^ 4) * (0.1e1 + eta) ^ 2 * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 0.1e1) * sin((h + 5 * f + 2 * g)) - 0.11e2 / 0.80e2 * (ci2 ^ 6) * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * cos((h + 4 * g + 7 * f)) - 0.3e1 / 0.4e1 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * sin((-h + 5 * f + 2 * g)) + 0.9e1 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos((-h + 5 * f)) - 0.39e2 / 0.160e3 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * (-0.1e1 / 0.78e2 + (eta - 0.73e2 / 0.13e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta + 0.15e2 / 0.4e1) * (ci2 ^ 4) + (eta / 0.12e2 - 0.85e2 / 0.156e3) * (ci2 ^ 2)) * cos((h - 2 * g + f)) + 0.27e2 / 0.160e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2 + 0.164e3 / 0.9e1 * eta + 0.283e3 / 0.9e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.43e2 / 0.3e1 * eta - 0.97e2 / 0.4e1) * (ci2 ^ 4) + (eta ^ 2 / 0.12e2 + 0.2e1 * eta + 0.335e3 / 0.108e3) * (ci2 ^ 2) - eta / 0.54e2 - 0.1e1 / 0.54e2) * (eta - 0.1e1) * cos((-h + 5 * f + 2 * g)) + ((eta ^ 2 + 0.44e2 * eta + 0.71e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.39e2 * eta - 0.237e3 / 0.4e1) * (ci2 ^ 4) + (eta ^ 2 / 0.10e2 + 0.38e2 / 0.5e1 * eta + 0.103e3 / 0.10e2) * (ci2 ^ 2) - eta / 0.5e1 - 0.1e1 / 0.5e1) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sin((-h + 3 * f + 2 * g)) / 0.4e1 - 0.7e1 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2 - 0.44e2 / 0.7e1 * eta - 0.71e2 / 0.7e1) * (ci2 ^ 2) + 0.6e1 / 0.7e1 * eta + 0.6e1 / 0.7e1) * cos((-h + 3 * f + 4 * g))) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * (-0.7e1 / 0.10e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.207e3 / 0.28e2 * eta ^ 2 + 0.47e2 / 0.2e1 * eta + 0.563e3 / 0.28e2) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.159e3 / 0.16e2 * eta ^ 2 - 0.1777e4 / 0.56e2 * eta - 0.3001e4 / 0.112e3) * (ci2 ^ 6) + (0.5e1 / 0.14e2 * eta ^ 3 + 0.177e3 / 0.56e2 * eta ^ 2 + 0.561e3 / 0.56e2 * eta + 0.115e3 / 0.14e2) * (ci2 ^ 4) + (-0.5e1 / 0.224e3 * eta ^ 2 - eta / 0.14e2 - 0.11e2 / 0.224e3) * (ci2 ^ 2) - 0.5e1 / 0.224e3 * eta ^ 2 - eta / 0.14e2 - 0.11e2 / 0.224e3) * cos((h + 2 * g + 4 * f)) + ((eta ^ 3 - 0.12e2 / 0.5e1 * eta ^ 2 - 0.417e3 / 0.5e1 * eta - 0.472e3 / 0.5e1) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 3 + 0.21e2 / 0.10e2 * eta ^ 2 + 0.1329e4 / 0.10e2 * eta + 0.1509e4 / 0.10e2) * (ci2 ^ 4) + (0.3e1 / 0.10e2 * eta ^ 3 - 0.18e2 / 0.5e1 * eta ^ 2 - 0.741e3 / 0.10e2 * eta - 0.399e3 / 0.5e1) * (ci2 ^ 2) + eta ^ 3 / 0.10e2 + 0.9e1 / 0.5e1 * eta ^ 2 + 0.72e2 / 0.5e1 * eta + 0.139e3 / 0.10e2) * (ci2 ^ 2) * (eta - 0.1e1) * cos((-h + 2 * f)) / 0.8e1 + 0.3e1 / 0.8e1 * (ci2 ^ 4) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.1e1) * (ci2 ^ 2) + 0.11e2 / 0.30e2 * eta + 0.3e1 / 0.10e2) * cos((-h - 2 * g + 2 * f)) + 0.7e1 / 0.10e2 * ((eta ^ 3 + 0.207e3 / 0.28e2 * eta ^ 2 + 0.47e2 / 0.2e1 * eta + 0.563e3 / 0.28e2) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.699e3 / 0.112e3 * eta ^ 2 - 0.1119e4 / 0.56e2 * eta - 0.1875e4 / 0.112e3) * (ci2 ^ 4) + (0.3e1 / 0.28e2 * eta ^ 3 + 0.121e3 / 0.112e3 * eta ^ 2 + 0.47e2 / 0.14e2 * eta + 0.295e3 / 0.112e3) * (ci2 ^ 2) - 0.5e1 / 0.224e3 * eta ^ 2 - eta / 0.14e2 - 0.11e2 / 0.224e3) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * cos((-h + 2 * g + 4 * f)) + 0.13e2 / 0.40e2 * (ci2 ^ 4) * (0.1e1 + eta) * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * (ci2 ^ 2) + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (eta - 0.1e1) ^ 2 * cos((h + 6 * f + 2 * g)) + ((eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.49e2 / 0.10e2) * (eta ^ 2 + 0.2e1 * eta - 0.7e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 4 + 0.33e2 / 0.40e2 * eta ^ 3 + 0.531e3 / 0.40e2 * eta ^ 2 - 0.357e3 / 0.40e2 * eta - 0.1113e4 / 0.40e2) * (ci2 ^ 4) + (eta ^ 4 / 0.20e2 - 0.21e2 / 0.40e2 * eta ^ 3 - 0.87e2 / 0.40e2 * eta ^ 2 + 0.25e2 / 0.8e1 * eta + 0.221e3 / 0.40e2) * (ci2 ^ 2) + (0.1e1 + eta) * (eta ^ 2 - 0.5e1) / 0.40e2) * (ci2 - 1) * (ci2 + 1) * cos((-h + 2 * g + 2 * f)) / 0.2e1 - 0.33e2 * (0.1e1 + eta) * Delta * ((ci2 ^ 8) - 0.61e2 / 0.44e2 * (ci2 ^ 6) + 0.103e3 / 0.220e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.220e3 - 0.1e1 / 0.220e3) * sin((h + 2 * g + 2 * f)) - 0.3e1 / 0.8e1 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * (eta - 0.1e1) ^ 2 * cos((h - 2 * g + 2 * f)) + 0.11e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 2 + 0.5e1 * eta + 0.46e2 / 0.11e2) * (ci2 ^ 4) + (-0.15e2 / 0.22e2 * eta - 0.15e2 / 0.22e2) * (ci2 ^ 2) - 0.5e1 / 0.22e2 * eta - 0.5e1 / 0.22e2) * cos((h + 2 * f + 4 * g)) - 0.3e1 / 0.80e2 * ((eta ^ 2 + 0.11e2 / 0.3e1 * eta + 0.34e2 / 0.3e1) * (ci2 ^ 4) + (-eta / 0.2e1 - 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.6e1 - 0.1e1 / 0.6e1) * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * cos((h + 6 * f + 4 * g)) + 0.3e1 / 0.80e2 * (ci2 ^ 2) * ((eta ^ 2 + 0.11e2 / 0.3e1 * eta + 0.34e2 / 0.3e1) * (ci2 ^ 2) - eta / 0.2e1 - 0.1e1 / 0.2e1) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * cos((-h + 6 * f + 4 * g)) + 0.3e1 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * ((eta ^ 2 + 0.11e2 / 0.2e1 * eta + 0.7e1) * (ci2 ^ 6) + (-0.3e1 / 0.4e1 * eta ^ 2 - 0.39e2 / 0.8e1 * eta - 0.6e1) * (ci2 ^ 4) + (0.7e1 / 0.60e2 * eta ^ 2 + 0.41e2 / 0.40e2 * eta + 0.47e2 / 0.40e2) * (ci2 ^ 2) - 0.7e1 / 0.240e3 * eta - 0.7e1 / 0.240e3) * sin((-h + 2 * g)) - 0.13e2 / 0.40e2 * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.69e2 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.52e2 * eta + 0.4e1 / 0.13e2) * (eta - 0.1e1) ^ 2 * cos((-h + 6 * f + 2 * g)) - 0.11e2 / 0.80e2 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 2 + 0.5e1 * eta + 0.46e2 / 0.11e2) * (ci2 ^ 2) - 0.15e2 / 0.22e2 * eta - 0.15e2 / 0.22e2) * cos((-h + 2 * f + 4 * g)) - 0.3e1 / 0.160e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 8 * f + 4 * g)) + 0.33e2 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.39e2 / 0.44e2 * (ci2 ^ 4) + 0.19e2 / 0.110e3 * (ci2 ^ 2) - 0.1e1 / 0.220e3) * sin((-h + 2 * g + 2 * f)) + ((eta ^ 3 - 0.13e2 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.3e1 / 0.2e1) * (ci2 ^ 2) + 0.3e1 / 0.4e1 * eta ^ 2 + 0.9e1 / 0.4e1) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 4 * f + 4 * g)) / 0.40e2 - ((eta ^ 3 - 0.13e2 / 0.2e1 * eta ^ 2 - 0.18e2 * eta + 0.3e1 / 0.2e1) * (ci2 ^ 4) + (0.3e1 / 0.4e1 * eta ^ 2 + 0.9e1 / 0.4e1) * (ci2 ^ 2) + eta ^ 2 / 0.4e1 + 0.3e1 / 0.4e1) * (ci2 ^ 2) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * cos((h + 4 * f + 4 * g)) / 0.40e2 + 0.3e1 / 0.160e3 * (ci2 ^ 6) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * cos((h + 8 * f + 4 * g)) + 0.9e1 / 0.2e1 * (ci2 ^ 4) * (0.1e1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 0.1e1) * sin((h + 2 * g + 4 * f)) - ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * cos((-h + 4 * f)) / 0.16e2 - (ci2 ^ 2) * ((eta ^ 3 + 0.10e2 * eta ^ 2 - 0.34e2 * eta - 0.49e2) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.15e2 / 0.2e1 * eta ^ 2 + 0.51e2 / 0.2e1 * eta + 0.147e3 / 0.4e1) * (ci2 ^ 2) + eta ^ 3 / 0.4e1 + eta ^ 2 - 0.23e2 / 0.4e1 * eta - 0.7e1) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * cos((-h + 2 * g)) / 0.20e2 - (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 4 * g)) / 0.32e2 - 0.9e1 / 0.2e1 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * sin((-h + 2 * g + 4 * f)) + (-(eta ^ 2 - 0.27e2 / 0.10e2 * eta - 0.49e2 / 0.10e2) * (eta ^ 2 + 0.2e1 * eta - 0.7e1) * (ci2 ^ 8) / 0.2e1 + (0.1799e4 / 0.80e2 + 0.5e1 / 0.8e1 * eta ^ 4 - 0.47e2 / 0.80e2 * eta ^ 3 - 0.877e3 / 0.80e2 * eta ^ 2 + 0.539e3 / 0.80e2 * eta) * (ci2 ^ 6) + (-0.37e2 / 0.5e1 - 0.61e2 / 0.20e2 * eta - 0.3e1 / 0.20e2 * eta ^ 4 + 0.2e1 / 0.5e1 * eta ^ 3 + 0.33e2 / 0.10e2 * eta ^ 2) * (ci2 ^ 4) - (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 ^ 2) / 0.80e2 - (0.1e1 + eta) * (eta ^ 2 - 0.5e1) / 0.80e2) * cos((h + 2 * g + 2 * f)) + (-((eta ^ 3 - 0.12e2 / 0.5e1 * eta ^ 2 - 0.417e3 / 0.5e1 * eta - 0.472e3 / 0.5e1) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 3 + 0.21e2 / 0.10e2 * eta ^ 2 + 0.1329e4 / 0.10e2 * eta + 0.1509e4 / 0.10e2) * (ci2 ^ 4) + (0.3e1 / 0.10e2 * eta ^ 3 - 0.18e2 / 0.5e1 * eta ^ 2 - 0.741e3 / 0.10e2 * eta - 0.399e3 / 0.5e1) * (ci2 ^ 2) + eta ^ 3 / 0.10e2 + 0.9e1 / 0.5e1 * eta ^ 2 + 0.72e2 / 0.5e1 * eta + 0.139e3 / 0.10e2) * (eta - 0.1e1) * cos((h + 2 * f)) / 0.8e1 + ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * (0.1e1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 0.1e1) ^ 2 * cos((h + 4 * f)) / 0.16e2 + (ci2 ^ 2) * ((eta ^ 3 + 0.10e2 * eta ^ 2 - 0.34e2 * eta - 0.49e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta ^ 3 - 0.25e2 / 0.2e1 * eta ^ 2 + 0.85e2 / 0.2e1 * eta + 0.245e3 / 0.4e1) * (ci2 ^ 2) + eta ^ 3 / 0.2e1 + 0.7e1 / 0.2e1 * eta ^ 2 - 0.57e2 / 0.4e1 * eta - 0.77e2 / 0.4e1) * (eta - 0.1e1) * cos((h + 2 * g)) / 0.20e2 + ((0.1e1 + eta) * (eta - 0.1e1) ^ 2 * (ci2 - 1) * (ci2 + 1) * (ci2 ^ 4) * cos((h + 4 * g)) / 0.32e2 + sin(h) * Delta * ((eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 + 0.77e2 / 0.2e1) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * eta ^ 3 - 0.15e2 / 0.2e1 * eta ^ 2 - 0.63e2) * (ci2 ^ 4) + (0.3e1 / 0.10e2 * eta ^ 3 + 0.51e2 / 0.20e2 * eta ^ 2 + 0.141e3 / 0.4e1) * (ci2 ^ 2) + eta ^ 3 / 0.10e2 + 0.3e1 / 0.20e2 * eta ^ 2 - 0.27e2 / 0.4e1)) * (0.1e1 + eta)) * (ci2 ^ 2) - 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 + 0.11e2 / 0.2e1 * eta + 0.7e1) * (ci2 ^ 8) + (-0.5e1 / 0.4e1 * eta ^ 2 - 0.61e2 / 0.8e1 * eta - 0.19e2 / 0.2e1) * (ci2 ^ 6) + (0.11e2 / 0.30e2 * eta ^ 2 + 0.53e2 / 0.20e2 * eta + 0.127e3 / 0.40e2) * (ci2 ^ 4) + (-0.7e1 / 0.240e3 * eta - 0.7e1 / 0.240e3) * (ci2 ^ 2) - 0.7e1 / 0.240e3 * eta - 0.7e1 / 0.240e3) * Delta * (eta - 0.1e1) * sin((h + 2 * g)))) / eta ^ 8 / a ^ 4 / (0.1e1 + eta) ^ 2 -0.135e3 / 0.4e1 * R__e ^ 4 * (-0.79e2 / 0.128e3 * ((-0.345412e6 / 0.1185e4 * eta ^ 3 - 0.127531e6 / 0.395e3 * eta ^ 2 - 0.156934e6 / 0.1185e4 * eta + 0.1038e4 / 0.395e3 * eta ^ 5 - 0.102641e6 / 0.1185e4 * eta ^ 4 + eta ^ 6 - 0.4997e4 / 0.395e3) * (ci2 ^ 6) + (0.16127e5 / 0.1185e4 - 0.4378e4 / 0.1185e4 * eta ^ 5 + 0.23885e5 / 0.237e3 * eta ^ 4 + 0.405572e6 / 0.1185e4 * eta ^ 3 - eta ^ 6 + 0.36350e5 / 0.237e3 * eta + 0.89677e5 / 0.237e3 * eta ^ 2) * (ci2 ^ 4) + (0.613e3 / 0.711e3 * eta ^ 5 - 0.15239e5 / 0.474e3 * eta ^ 4 - 0.75866e5 / 0.711e3 * eta ^ 3 - 0.11209e5 / 0.237e3 * eta - 0.29527e5 / 0.7110e4 - 0.92409e5 / 0.790e3 * eta ^ 2 + eta ^ 6 / 0.6e1) * (ci2 ^ 2) - 0.4e1 / 0.45e2 * (eta ^ 4 - 0.1622e4 / 0.79e2 * eta ^ 3 - 0.3666e4 / 0.79e2 * eta ^ 2 - 0.2122e4 / 0.79e2 * eta - 0.173e3 / 0.79e2) * (0.1e1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * sin((3 * g + h + f)) + (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((0.11572e5 / 0.3e1 * eta ^ 3 + 0.163037e6 / 0.3e1 * eta ^ 2 + 0.678794e6 / 0.9e1 * eta - 0.31558e5 / 0.9e1 * eta ^ 5 - 0.90521e5 / 0.9e1 * eta ^ 4 + eta ^ 6 + 0.94003e5 / 0.3e1) * (ci2 ^ 6) + (-0.109859e6 / 0.3e1 + 0.32662e5 / 0.9e1 * eta ^ 5 + 0.32291e5 / 0.3e1 * eta ^ 4 - 0.2492e4 * eta ^ 3 - eta ^ 6 - 0.765658e6 / 0.9e1 * eta - 0.173789e6 / 0.3e1 * eta ^ 2) * (ci2 ^ 4) + (-0.6997e4 / 0.9e1 * eta ^ 5 - 0.34907e5 / 0.18e2 * eta ^ 4 + 0.3902e4 / 0.3e1 * eta ^ 3 + 0.182123e6 / 0.9e1 * eta + 0.54025e5 / 0.6e1 + 0.82015e5 / 0.6e1 * eta ^ 2 + eta ^ 6 / 0.6e1) * (ci2 ^ 2) - 0.404e3 - 0.32e2 / 0.3e1 * eta ^ 3 - 0.368e3 * eta ^ 2 + 0.92e2 / 0.9e1 * eta ^ 5 + 0.100e3 / 0.9e1 * eta ^ 4 - 0.6844e4 / 0.9e1 * eta) * sin((g - h + 3 * f)) / 0.1920e4 - 0.171e3 / 0.640e3 * (0.1e1 + eta) * ((-0.81308e5 / 0.513e3 * eta ^ 3 + 0.120607e6 / 0.513e3 * eta ^ 2 + 0.120214e6 / 0.513e3 * eta - 0.542e3 / 0.171e3 * eta ^ 5 - 0.74225e5 / 0.513e3 * eta ^ 4 + eta ^ 6 - 0.263e3 / 0.9e1) * (ci2 ^ 6) + (0.16127e5 / 0.513e3 + 0.334e3 / 0.171e3 * eta ^ 5 + 0.87553e5 / 0.513e3 * eta ^ 4 + 0.96476e5 / 0.513e3 * eta ^ 3 - eta ^ 6 - 0.140902e6 / 0.513e3 * eta - 0.140959e6 / 0.513e3 * eta ^ 2) * (ci2 ^ 4) + (-0.265e3 / 0.1539e4 * eta ^ 5 - 0.53987e5 / 0.1026e4 * eta ^ 4 - 0.85726e5 / 0.1539e4 * eta ^ 3 + 0.4565e4 / 0.57e2 * eta - 0.29527e5 / 0.3078e4 + 0.257951e6 / 0.3078e4 * eta ^ 2 + eta ^ 6 / 0.6e1) * (ci2 ^ 2) + 0.4816e4 / 0.1539e4 * eta ^ 3 + 0.692e3 / 0.1539e4 - 0.7024e4 / 0.1539e4 * eta ^ 2 - 0.52e2 / 0.513e3 * eta ^ 5 + 0.4540e4 / 0.1539e4 * eta ^ 4 - 0.724e3 / 0.171e3 * eta) * (ci2 - 1) * (ci2 + 1) * sin((g - h + f)) + (0.91e2 / 0.240e3 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 5 + 0.4283e4 / 0.546e3 * eta ^ 4 + 0.103e3 / 0.7e1 * eta ^ 3 + 0.6740e4 / 0.273e3 * eta ^ 2 + 0.10730e5 / 0.273e3 * eta + 0.12133e5 / 0.546e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.4747e4 / 0.546e3 * eta ^ 4 - 0.4769e4 / 0.273e3 * eta ^ 3 - 0.8228e4 / 0.273e3 * eta ^ 2 - 0.4142e4 / 0.91e2 * eta - 0.13589e5 / 0.546e3) * (ci2 ^ 4) + (0.137e3 / 0.546e3 * eta ^ 5 + 0.379e3 / 0.156e3 * eta ^ 4 + 0.933e3 / 0.182e3 * eta ^ 3 + 0.2666e4 / 0.273e3 * eta ^ 2 + 0.3868e4 / 0.273e3 * eta + 0.7979e4 / 0.1092e4) * (ci2 ^ 2) - 0.2e1 / 0.21e2 * (eta ^ 3 + 0.31e2 / 0.13e2 * eta ^ 2 + 0.64e2 / 0.13e2 * eta + 0.48e2 / 0.13e2) * (0.1e1 + eta)) * (eta - 0.1e1) * sin((3 * g + h)) - 0.223e3 / 0.720e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.2717e4 / 0.446e3 * eta ^ 4 + 0.3833e4 / 0.223e3 * eta ^ 3 + 0.232e3 / 0.223e3 * eta ^ 2 - 0.8100e4 / 0.223e3 * eta - 0.12133e5 / 0.446e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.3213e4 / 0.446e3 * eta ^ 4 - 0.4281e4 / 0.223e3 * eta ^ 3 - 0.136e3 / 0.223e3 * eta ^ 2 + 0.9124e4 / 0.223e3 * eta + 0.13589e5 / 0.446e3) * (ci2 ^ 4) + (0.103e3 / 0.446e3 * eta ^ 5 + 0.2107e4 / 0.892e3 * eta ^ 4 + 0.2519e4 / 0.446e3 * eta ^ 3 - 0.232e3 / 0.223e3 * eta ^ 2 - 0.2927e4 / 0.223e3 * eta - 0.7979e4 / 0.892e3) * (ci2 ^ 2) - 0.30e2 / 0.223e3 * (0.1e1 + eta) * (eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.16e2 / 0.5e1)) * (ci2 - 1) * (ci2 + 1) * sin((g - h)) - 0.5e1 / 0.9e1 * cos((g + h)) * (0.1e1 + eta) ^ 2 * eta * Delta * ((eta ^ 3 + 0.27e2 / 0.5e1 * eta ^ 2 + 0.308e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 - 0.12e2 * eta ^ 2 - 0.672e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 3 + 0.153e3 / 0.25e2 * eta ^ 2 + 0.564e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 3 + 0.18e2 / 0.25e2 * eta ^ 2 - 0.216e3 / 0.5e1) * (ci2 ^ 2) - eta ^ 3 / 0.10e2 - 0.27e2 / 0.50e2 * eta ^ 2 + 0.6e1) - 0.227e3 / 0.720e3 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 5 + 0.3575e4 / 0.454e3 * eta ^ 4 + 0.3597e4 / 0.227e3 * eta ^ 3 - 0.5424e4 / 0.227e3 * eta ^ 2 - 0.21736e5 / 0.227e3 * eta - 0.28887e5 / 0.454e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.3975e4 / 0.454e3 * eta ^ 4 - 0.4389e4 / 0.227e3 * eta ^ 3 + 0.5640e4 / 0.227e3 * eta ^ 2 + 0.24296e5 / 0.227e3 * eta + 0.32391e5 / 0.454e3) * (ci2 ^ 4) + (0.91e2 / 0.454e3 * eta ^ 5 + 0.1945e4 / 0.908e3 * eta ^ 4 + 0.2387e4 / 0.454e3 * eta ^ 3 - 0.1228e4 / 0.227e3 * eta ^ 2 - 0.5805e4 / 0.227e3 * eta - 0.15409e5 / 0.908e3) * (ci2 ^ 2) - 0.18e2 / 0.227e3 * (0.1e1 + eta) * (eta ^ 3 + 0.26e2 / 0.9e1 * eta ^ 2 - 0.34e2 / 0.9e1 * eta - 0.74e2 / 0.9e1)) * sin((g - h + 4 * f)) + ((-0.61e2 / 0.6e1 - 0.18793e5 / 0.720e3 * eta - 0.77e2 / 0.720e3 * eta ^ 5 + 0.251e3 / 0.40e2 * eta ^ 4 + 0.1291e4 / 0.360e3 * eta ^ 3 - 0.13987e5 / 0.720e3 * eta ^ 2 - 0.5e1 / 0.48e2 * eta ^ 6) * (ci2 ^ 8) + (-0.1397e4 / 0.180e3 * eta ^ 3 + 0.3007e4 / 0.72e2 * eta ^ 2 + 0.20231e5 / 0.360e3 * eta + 0.49e2 / 0.120e3 * eta ^ 5 - 0.479e3 / 0.36e2 * eta ^ 4 + 0.5e1 / 0.24e2 * eta ^ 6 + 0.196e3 / 0.9e1) * (ci2 ^ 6) + (-0.841e3 / 0.48e2 + 0.4e1 / 0.15e2 * eta ^ 5 + 0.2761e4 / 0.240e3 * eta ^ 4 + 0.17e2 / 0.3e1 * eta ^ 3 - eta ^ 6 / 0.16e2 - 0.139e3 / 0.3e1 * eta - 0.2831e4 / 0.80e2 * eta ^ 2) * (ci2 ^ 4) + (-0.437e3 / 0.720e3 * eta ^ 5 - 0.381e3 / 0.80e2 * eta ^ 4 - 0.551e3 / 0.360e3 * eta ^ 3 + 0.12467e5 / 0.720e3 * eta + 0.301e3 / 0.48e2 + 0.629e3 / 0.45e2 * eta ^ 2 - eta ^ 6 / 0.24e2) * (ci2 ^ 2) + 0.157e3 / 0.1440e4 * eta ^ 3 - 0.89e2 / 0.45e2 * eta ^ 2 + 0.431e3 / 0.2880e4 * eta ^ 5 - 0.461e3 / 0.576e3 + 0.2003e4 / 0.2880e4 * eta ^ 4 - 0.6649e4 / 0.2880e4 * eta + eta ^ 6 / 0.96e2) * sin((g + h + 2 * f)) - 0.11e2 / 0.12e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((g - h + 6 * f)) + ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-g - h + 6 * f)) / 0.144e3 + ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * sin((g + h + 6 * f)) / 0.144e3 + (ci2 ^ 4) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + 10 * f)) / 0.240e3 + (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 10 * f)) / 0.240e3 + ((eta ^ 5 + 0.7e1 * eta ^ 4 + 0.22e2 / 0.3e1 * eta ^ 3 - 0.21e2 * eta ^ 2 - 0.173e3 / 0.6e1 * eta - 0.29e2 / 0.6e1) * (ci2 ^ 6) + (-eta ^ 5 - 0.25e2 / 0.3e1 * eta ^ 4 - 0.26e2 / 0.3e1 * eta ^ 3 + 0.74e2 / 0.3e1 * eta ^ 2 + 0.67e2 / 0.2e1 * eta + 0.35e2 / 0.6e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 5 + 0.239e3 / 0.90e2 * eta ^ 4 + 0.8e1 / 0.3e1 * eta ^ 3 - 0.113e3 / 0.15e2 * eta ^ 2 - 0.99e2 / 0.10e2 * eta - 0.53e2 / 0.30e2) * (ci2 ^ 2) - 0.7e1 / 0.45e2 * (0.1e1 + eta) * (eta ^ 3 - 0.37e2 / 0.14e2 * eta - 0.9e1 / 0.14e2)) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * cos((g - h)) - (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5 - 0.153e3 / 0.8e1 * eta ^ 4 - 0.551e3 / 0.8e1 * eta ^ 3 - 0.191e3 / 0.8e1 * eta ^ 2 + 0.271e3 / 0.8e1 * eta - 0.4e1) * (ci2 ^ 2) + 0.7e1 / 0.2e1 * eta ^ 4 + 0.17e2 / 0.4e1 * eta ^ 3 + 0.7e1 / 0.4e1 * eta ^ 2 + 0.13e2 / 0.4e1 * eta + 0.25e2 / 0.4e1) * sin((5 * g + h + 4 * f)) / 0.90e2 + 0.5e1 / 0.6e1 * (0.1e1 + eta) * ((eta ^ 3 + 0.132e3 / 0.5e1 * eta ^ 2 + 0.9e1 * eta - 0.122e3 / 0.5e1) * (ci2 ^ 6) + (-eta ^ 3 - 0.156e3 / 0.5e1 * eta ^ 2 - 0.57e2 / 0.5e1 * eta + 0.142e3 / 0.5e1) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 + 0.228e3 / 0.25e2 * eta ^ 2 + 0.93e2 / 0.25e2 * eta - 0.202e3 / 0.25e2) * (ci2 ^ 2) - 0.12e2 / 0.25e2 * eta ^ 2 - 0.6e1 / 0.25e2 * eta + 0.2e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * cos((g - h + 2 * f)) + 0.5e1 / 0.6e1 * (0.1e1 + eta) * ((eta ^ 3 + 0.44e2 * eta ^ 2 + 0.53e2 * eta + 0.122e3 / 0.5e1) * (ci2 ^ 6) + (-eta ^ 3 - 0.52e2 * eta ^ 2 - 0.317e3 / 0.5e1 * eta - 0.142e3 / 0.5e1) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 + 0.76e2 / 0.5e1 * eta ^ 2 + 0.473e3 / 0.25e2 * eta + 0.202e3 / 0.25e2) * (ci2 ^ 2) - 0.4e1 / 0.5e1 * eta ^ 2 - 0.26e2 / 0.25e2 * eta - 0.2e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * cos((3 * g + h + 2 * f)) - 0.2e1 / 0.45e2 * ((eta ^ 5 + 0.13e2 / 0.4e1 * eta ^ 4 + 0.75e2 / 0.16e2 * eta ^ 3 - 0.85e2 / 0.8e1 * eta ^ 2 - 0.97e2 / 0.4e1 * eta - 0.309e3 / 0.16e2) * (ci2 ^ 2) - 0.9e1 / 0.16e2 * eta ^ 4 - 0.11e2 / 0.16e2 * eta ^ 3 + 0.29e2 / 0.16e2 * eta ^ 2 + 0.63e2 / 0.16e2 * eta + 0.2e1) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 6 * f)) + ((eta ^ 5 + 0.71e2 / 0.8e1 * eta ^ 4 + 0.109e3 / 0.8e1 * eta ^ 3 - 0.527e3 / 0.8e1 * eta ^ 2 - 0.821e3 / 0.8e1 * eta - 0.4e1) * (ci2 ^ 2) - 0.3e1 / 0.2e1 * eta ^ 4 - 0.3e1 / 0.4e1 * eta ^ 3 + 0.31e2 / 0.4e1 * eta ^ 2 + 0.37e2 / 0.4e1 * eta + 0.25e2 / 0.4e1) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + 4 * f)) / 0.90e2 + 0.11e2 / 0.360e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 3 - 0.109e3 / 0.11e2 * eta ^ 2 - 0.3127e4 / 0.22e2 * eta - 0.389e3 / 0.2e1) * (ci2 ^ 6) + (-eta ^ 3 + 0.135e3 / 0.11e2 * eta ^ 2 + 0.3363e4 / 0.22e2 * eta + 0.4463e4 / 0.22e2) * (ci2 ^ 4) + (0.3e1 / 0.22e2 * eta ^ 3 - 0.87e2 / 0.22e2 * eta ^ 2 - 0.1509e4 / 0.44e2 * eta - 0.163e3 / 0.4e1) * (ci2 ^ 2) + 0.5e1 / 0.22e2 * eta ^ 2 + 0.21e2 / 0.22e2 * eta + 0.8e1 / 0.11e2) * (eta - 0.1e1) ^ 2 * sin((g - h + 6 * f)) + 0.7e1 / 0.40e2 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 4 + 0.86e2 / 0.63e2 * eta ^ 3 - 0.3215e4 / 0.126e3 * eta ^ 2 - 0.3506e4 / 0.63e2 * eta - 0.4279e4 / 0.126e3) * (ci2 ^ 6) + (-eta ^ 4 - 0.20e2 / 0.21e2 * eta ^ 3 + 0.3503e4 / 0.126e3 * eta ^ 2 + 0.3716e4 / 0.63e2 * eta + 0.4463e4 / 0.126e3) * (ci2 ^ 4) + (0.23e2 / 0.126e3 * eta ^ 4 - 0.10e2 / 0.63e2 * eta ^ 3 - 0.1637e4 / 0.252e3 * eta ^ 2 - 0.88e2 / 0.7e1 * eta - 0.1793e4 / 0.252e3) * (ci2 ^ 2) + 0.5e1 / 0.126e3 * (0.1e1 + eta) ^ 2 * (eta + 0.16e2 / 0.5e1)) * sin((3 * g + h + 6 * f)) - 0.5e1 / 0.24e2 * ((eta ^ 2 - 0.34e2 / 0.25e2 * eta - 0.219e3 / 0.50e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.44e2 / 0.25e2 * eta + 0.47e2 / 0.10e2) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 2 - 0.46e2 / 0.75e2 * eta - 0.383e3 / 0.300e3) * (ci2 ^ 2) + 0.7e1 / 0.150e3 * eta + 0.1e1 / 0.25e2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + 2 * f)) - 0.4e1 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta ^ 3 - 0.7e1 / 0.6e1 * eta ^ 2 - 0.101e3 / 0.24e2 * eta - 0.67e2 / 0.24e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.17e2 / 0.12e2 * eta ^ 2 + 0.113e3 / 0.24e2 * eta + 0.73e2 / 0.24e2) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 - 0.13e2 / 0.30e2 * eta ^ 2 - 0.149e3 / 0.120e3 * eta - 0.91e2 / 0.120e3) * (ci2 ^ 2) + (0.1e1 + eta) ^ 2 / 0.40e2) * cos((3 * g + h + 4 * f)) - (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 3 - 0.13e2 * eta ^ 2 - 0.373e3 / 0.10e2 * eta - 0.219e3 / 0.10e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.15e2 * eta ^ 2 + 0.409e3 / 0.10e2 * eta + 0.47e2 / 0.2e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 3 - 0.137e3 / 0.30e2 * eta ^ 2 - 0.231e3 / 0.20e2 * eta - 0.383e3 / 0.60e2) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta ^ 2 + 0.13e2 / 0.30e2 * eta + 0.1e1 / 0.5e1) * (eta - 0.1e1) * sin((-g + h + 2 * f)) / 0.24e2 + 0.13e2 / 0.720e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5 + 0.79e2 / 0.13e2 * eta ^ 4 - 0.132e3 / 0.13e2 * eta ^ 3 - 0.402e3 / 0.13e2 * eta ^ 2 + 0.125e3 / 0.13e2 * eta + 0.341e3 / 0.13e2) * (ci2 ^ 2) - 0.18e2 / 0.13e2 * (0.1e1 + eta) * (eta ^ 3 - 0.2e1 / 0.3e1 * eta ^ 2 - 0.31e2 / 0.9e1 * eta + 0.8e1 / 0.3e1)) * sin((3 * g - h + 2 * f)) + (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta ^ 3 - 0.241e3 / 0.20e2 * eta ^ 2 + 0.161e3 / 0.4e1 * eta + 0.929e3 / 0.10e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 + 0.123e3 / 0.5e1 * eta ^ 2 - 0.867e3 / 0.10e2 * eta - 0.385e3 / 0.2e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 3 - 0.327e3 / 0.20e2 * eta ^ 2 + 0.1473e4 / 0.20e2 * eta + 0.717e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 3 + 0.37e2 / 0.10e2 * eta ^ 2 - 0.143e3 / 0.5e1 * eta - 0.451e3 / 0.10e2) * (ci2 ^ 2) - eta ^ 3 / 0.10e2 - 0.7e1 / 0.40e2 * eta ^ 2 + 0.15e2 / 0.4e1 * eta + 0.197e3 / 0.40e2) * sin((-g - h + 4 * f)) / 0.36e2 - 0.41e2 / 0.180e3 * ((-0.208e3 / 0.41e2 * eta ^ 3 + 0.5968e4 / 0.41e2 * eta ^ 2 + 0.3512e4 / 0.41e2 * eta - 0.212e3 / 0.41e2 * eta ^ 5 - 0.4013e4 / 0.82e2 * eta ^ 4 + eta ^ 6 - 0.1077e4 / 0.82e2) * (ci2 ^ 6) + (0.1521e4 / 0.82e2 + 0.272e3 / 0.41e2 * eta ^ 5 + 0.4325e4 / 0.82e2 * eta ^ 4 - 0.94e2 / 0.41e2 * eta ^ 3 - eta ^ 6 - 0.3742e4 / 0.41e2 * eta - 0.6818e4 / 0.41e2 * eta ^ 2) * (ci2 ^ 4) + (-0.146e3 / 0.41e2 * eta ^ 5 - 0.2471e4 / 0.164e3 * eta ^ 4 + 0.9e1 * eta ^ 3 + 0.1277e4 / 0.41e2 * eta - 0.607e3 / 0.164e3 + 0.2331e4 / 0.41e2 * eta ^ 2 + eta ^ 6 / 0.82e2) * (ci2 ^ 2) + 0.11e2 / 0.41e2 * (eta ^ 4 + 0.15e2 / 0.11e2 * eta ^ 3 - 0.123e3 / 0.22e2 * eta ^ 2 - 0.75e2 / 0.11e2 * eta + 0.17e2 / 0.22e2) * (0.1e1 + eta)) * (ci2 - 1) * (ci2 + 1) * sin((3 * g + h + 2 * f)) + (0.1e1 + eta) * ((0.929e3 / 0.10e2 + 0.2751e4 / 0.20e2 * eta + eta ^ 4 - 0.251e3 / 0.20e2 * eta ^ 3 + 0.91e2 / 0.2e1 * eta ^ 2) * (ci2 ^ 8) + (0.128e3 / 0.5e1 * eta ^ 3 - 0.967e3 / 0.10e2 * eta ^ 2 - 0.288e3 * eta - 0.2e1 * eta ^ 4 - 0.385e3 / 0.2e1) * (ci2 ^ 6) + (0.717e3 / 0.5e1 + 0.3e1 / 0.5e1 * eta ^ 4 - 0.333e3 / 0.20e2 * eta ^ 3 + 0.4473e4 / 0.20e2 * eta + 0.411e3 / 0.5e1 * eta ^ 2) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 4 + 0.7e1 / 0.2e1 * eta ^ 3 - 0.759e3 / 0.10e2 * eta - 0.451e3 / 0.10e2 - 0.65e2 / 0.2e1 * eta ^ 2) * (ci2 ^ 2) - eta ^ 3 / 0.8e1 + 0.197e3 / 0.40e2 + 0.35e2 / 0.8e1 * eta ^ 2 - eta ^ 4 / 0.10e2 + 0.357e3 / 0.40e2 * eta) * (eta - 0.1e1) * sin((g + h + 4 * f)) / 0.36e2 - (ci2 - 1) * (ci2 + 1) * ((0.2100e4 * eta ^ 3 + 0.9454e4 * eta ^ 2 + 0.6890e4 * eta - 0.242e3 * eta ^ 5 - 0.2659e4 / 0.2e1 * eta ^ 4 + eta ^ 6 + 0.1077e4 / 0.2e1) * (ci2 ^ 6) + (-0.1521e4 / 0.2e1 + 0.286e3 * eta ^ 5 + 0.2883e4 / 0.2e1 * eta ^ 4 - 0.2586e4 * eta ^ 3 - eta ^ 6 - 0.7864e4 * eta - 0.10760e5 * eta ^ 2) * (ci2 ^ 4) + (-0.109e3 * eta ^ 5 - 0.1505e4 / 0.4e1 * eta ^ 4 + 0.975e3 * eta ^ 3 + 0.2034e4 * eta + 0.607e3 / 0.4e1 + 0.3114e4 * eta ^ 2 - 0.7e1 / 0.2e1 * eta ^ 6) * (ci2 ^ 2) - 0.129e3 / 0.2e1 * eta ^ 3 - 0.305e3 / 0.2e1 * eta ^ 2 + 0.7e1 * eta ^ 5 + 0.15e2 * eta ^ 4 - 0.177e3 / 0.2e1 * eta - 0.17e2 / 0.2e1) * sin((g - h + 2 * f)) / 0.180e3 - 0.451e3 / 0.720e3 * ((0.1615e4 / 0.451e3 * eta ^ 3 - 0.22042e5 / 0.451e3 * eta ^ 2 - 0.5513e4 / 0.82e2 * eta + 0.6805e4 / 0.902e3 * eta ^ 5 + 0.18773e5 / 0.902e3 * eta ^ 4 + eta ^ 6 - 0.28887e5 / 0.902e3) * (ci2 ^ 6) + (0.32391e5 / 0.902e3 - 0.7621e4 / 0.902e3 * eta ^ 5 - 0.21749e5 / 0.902e3 * eta ^ 4 - 0.1871e4 / 0.451e3 * eta ^ 3 - eta ^ 6 + 0.69779e5 / 0.902e3 * eta + 0.25682e5 / 0.451e3 * eta ^ 2) * (ci2 ^ 4) + (0.3847e4 / 0.1804e4 * eta ^ 5 + 0.11147e5 / 0.1804e4 * eta ^ 4 + 0.713e3 / 0.902e3 * eta ^ 3 - 0.35209e5 / 0.1804e4 * eta - 0.15409e5 / 0.1804e4 - 0.6736e4 / 0.451e3 * eta ^ 2 + 0.17e2 / 0.82e2 * eta ^ 6) * (ci2 ^ 2) - 0.38e2 / 0.451e3 * (0.1e1 + eta) * (eta ^ 4 + 0.47e2 / 0.19e2 * eta ^ 3 - 0.36e2 / 0.19e2 * eta ^ 2 - 0.120e3 / 0.19e2 * eta - 0.74e2 / 0.19e2)) * (ci2 - 1) * (ci2 + 1) * sin((3 * g + h + 4 * f)) + (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * cos((-g + h + 2 * f)) / 0.12e2 - 0.11e2 / 0.12e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * cos((3 * g + h + 6 * f)) + (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + 2 * f)) / 0.12e2 - (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 2 + 0.15e2 / 0.2e1 * eta + 0.146e3 / 0.3e1) * (ci2 ^ 2) - eta - 0.1e1) * (eta - 0.1e1) ^ 2 * sin((3 * g - h + 8 * f)) / 0.240e3 - ((eta ^ 4 + eta ^ 3 - 0.79e2 / 0.4e1 * eta ^ 2 - 0.273e3 / 0.4e1 * eta - 0.309e3 / 0.4e1) * (ci2 ^ 2) - eta ^ 3 / 0.4e1 + 0.33e2 / 0.4e1 * eta + 0.8e1) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * sin((3 * g - h + 6 * f)) / 0.90e2 - (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3 + 0.71e2 / 0.6e1 * eta ^ 2 + 0.115e3 / 0.6e1 * eta + 0.10e2 / 0.3e1) * (ci2 ^ 2) - 0.5e1 / 0.3e1 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * sin((3 * g - h)) / 0.240e3 + 0.17e2 / 0.720e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.15e2 / 0.34e2 * eta - 0.10e2 / 0.17e2) * (ci2 ^ 2) + 0.5e1 / 0.17e2 * eta + 0.5e1 / 0.17e2) * sin((5 * g + h)) - 0.2e1 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta ^ 2 - 0.8e1 / 0.3e1 * eta - 0.67e2 / 0.12e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.19e2 / 0.6e1 * eta + 0.73e2 / 0.12e2) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.14e2 / 0.15e2 * eta - 0.91e2 / 0.60e2) * (ci2 ^ 2) + eta / 0.20e2 + 0.1e1 / 0.20e2) * (eta - 0.1e1) * cos((g - h + 4 * f)) + (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((eta ^ 3 - 0.11e2 / 0.6e1 * eta ^ 2 - 0.313e3 / 0.18e2 * eta - 0.146e3 / 0.9e1) * (ci2 ^ 2) + (0.1e1 + eta) ^ 2 / 0.3e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * sin((5 * g + h + 8 * f)) / 0.80e2 + 0.7e1 / 0.3e1 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4 + 0.50e2 / 0.7e1 * eta ^ 3 + 0.100e3 / 0.7e1 * eta ^ 2 + 0.39e2 / 0.7e1 * eta - 0.29e2 / 0.14e2) * (ci2 ^ 6) + (-eta ^ 4 - 0.58e2 / 0.7e1 * eta ^ 3 - 0.116e3 / 0.7e1 * eta ^ 2 - 0.44e2 / 0.7e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 4 + 0.89e2 / 0.35e2 * eta ^ 3 + 0.176e3 / 0.35e2 * eta ^ 2 + 0.13e2 / 0.7e1 * eta - 0.53e2 / 0.70e2) * (ci2 ^ 2) - 0.2e1 / 0.15e2 * (eta ^ 2 + eta - 0.9e1 / 0.28e2) * (0.1e1 + eta)) * Delta * (eta - 0.1e1) * cos((3 * g + h)) + 0.13e2 / 0.240e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * sin((g - h + 8 * f)) - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * sin((-g + h + 4 * f)) / 0.48e2 + 0.101e3 / 0.720e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4 + 0.638e3 / 0.101e3 * eta ^ 3 + 0.1006e4 / 0.101e3 * eta ^ 2 + 0.744e3 / 0.101e3 * eta + 0.341e3 / 0.101e3) * (ci2 ^ 2) - 0.98e2 / 0.101e3 * (0.1e1 + eta) * (eta ^ 2 + 0.55e2 / 0.49e2 * eta + 0.24e2 / 0.49e2)) * (eta - 0.1e1) * sin((5 * g + h + 2 * f)) - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 4 * f)) / 0.48e2 + 0.13e2 / 0.240e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * sin((3 * g + h + 8 * f)) + ((-0.2747e4 / 0.180e3 - 0.3101e4 / 0.120e3 * eta - 0.19e2 / 0.24e2 * eta ^ 5 - 0.17e2 / 0.10e2 * eta ^ 4 - 0.113e3 / 0.18e2 * eta ^ 3 - 0.2779e4 / 0.180e3 * eta ^ 2 - eta ^ 6 / 0.9e1) * (ci2 ^ 8) + (0.247e3 / 0.18e2 * eta ^ 3 + 0.3029e4 / 0.90e2 * eta ^ 2 + 0.10097e5 / 0.180e3 * eta + 0.61e2 / 0.36e2 * eta ^ 5 + 0.667e3 / 0.180e3 * eta ^ 4 + 0.2e1 / 0.9e1 * eta ^ 6 + 0.5963e4 / 0.180e3) * (ci2 ^ 6) + (-0.55e2 / 0.2e1 - 0.89e2 / 0.120e3 * eta ^ 5 - 0.103e3 / 0.60e2 * eta ^ 4 - 0.299e3 / 0.30e2 * eta ^ 3 - eta ^ 6 / 0.15e2 - 0.5659e4 / 0.120e3 * eta - 0.561e3 / 0.20e2 * eta ^ 2) * (ci2 ^ 4) + (-0.11e2 / 0.60e2 * eta ^ 5 - 0.7e1 / 0.20e2 * eta ^ 4 + 0.8e1 / 0.3e1 * eta ^ 3 + 0.3277e4 / 0.180e3 * eta + 0.207e3 / 0.20e2 + 0.53e2 / 0.5e1 * eta ^ 2 - 0.2e1 / 0.45e2 * eta ^ 6) * (ci2 ^ 2) - 0.13e2 / 0.60e2 * eta ^ 3 - 0.29e2 / 0.20e2 * eta ^ 2 + 0.19e2 / 0.240e3 * eta ^ 5 - 0.337e3 / 0.240e3 + 0.127e3 / 0.720e3 * eta ^ 4 - 0.1829e4 / 0.720e3 * eta + eta ^ 6 / 0.90e2) * sin((g + h)) - 0.5e1 / 0.48e2 * ((0.488e3 / 0.5e1 + 0.2019e4 / 0.25e2 * eta + eta ^ 5 + 0.34e2 / 0.25e2 * eta ^ 4 - 0.4672e4 / 0.75e2 * eta ^ 3 - 0.6106e4 / 0.75e2 * eta ^ 2) * (ci2 ^ 8) + (0.3276e4 / 0.25e2 * eta ^ 3 + 0.12992e5 / 0.75e2 * eta ^ 2 - 0.12998e5 / 0.75e2 * eta - 0.2e1 * eta ^ 5 - 0.344e3 / 0.75e2 * eta ^ 4 - 0.3136e4 / 0.15e2) * (ci2 ^ 6) + (0.841e3 / 0.5e1 + 0.3e1 / 0.5e1 * eta ^ 5 - 0.59e2 / 0.25e2 * eta ^ 4 - 0.2878e4 / 0.25e2 * eta ^ 3 + 0.731e3 / 0.5e1 * eta - 0.3418e4 / 0.25e2 * eta ^ 2) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 5 + 0.149e3 / 0.25e2 * eta ^ 4 + 0.3698e4 / 0.75e2 * eta ^ 3 - 0.1436e4 / 0.25e2 * eta - 0.301e3 / 0.5e1 + 0.3536e4 / 0.75e2 * eta ^ 2) * (ci2 ^ 2) - 0.1111e4 / 0.150e3 * eta ^ 3 - 0.424e3 / 0.75e2 * eta ^ 2 - eta ^ 5 / 0.10e2 - 0.147e3 / 0.100e3 * eta ^ 4 + 0.203e3 / 0.25e2 * eta + 0.461e3 / 0.60e2) * (eta - 0.1e1) * sin((-g - h + 2 * f))) * sqrt(-eta ^ 2 + 0.1e1) + 0.137e3 / 0.320e3 * sin((g + h + f)) * ((-0.13265e5 / 0.411e3 - 0.154961e6 / 0.1233e4 * eta + 0.49021e5 / 0.1233e4 * eta ^ 5 + 0.35341e5 / 0.411e3 * eta ^ 4 + 0.9347e4 / 0.1233e4 * eta ^ 3 - 0.172687e6 / 0.1233e4 * eta ^ 2 + 0.13403e5 / 0.1233e4 * eta ^ 6 + eta ^ 7) * (ci2 ^ 8) + (-0.6754e4 / 0.411e3 * eta ^ 3 + 0.124954e6 / 0.411e3 * eta ^ 2 + 0.37378e5 / 0.137e3 * eta - 0.106570e6 / 0.1233e4 * eta ^ 5 - 0.229774e6 / 0.1233e4 * eta ^ 4 - 0.28678e5 / 0.1233e4 * eta ^ 6 + 0.86086e5 / 0.1233e4 - 0.2e1 * eta ^ 7) * (ci2 ^ 6) + (-0.7876e4 / 0.137e3 + 0.31204e5 / 0.411e3 * eta ^ 5 + 0.66940e5 / 0.411e3 * eta ^ 4 + 0.6220e4 / 0.411e3 * eta ^ 3 + 0.2420e4 / 0.137e3 * eta ^ 6 - 0.31260e5 / 0.137e3 * eta - 0.105356e6 / 0.411e3 * eta ^ 2 + 0.4e1 / 0.3e1 * eta ^ 7) * (ci2 ^ 4) + (-0.38935e5 / 0.1233e4 * eta ^ 5 - 0.83245e5 / 0.1233e4 * eta ^ 4 - 0.8305e4 / 0.1233e4 * eta ^ 3 + 0.35809e5 / 0.411e3 * eta + 0.8779e4 / 0.411e3 + 0.13637e5 / 0.137e3 * eta ^ 2 - eta ^ 7 / 0.3e1 - 0.6817e4 / 0.1233e4 * eta ^ 6) * (ci2 ^ 2) + 0.1673e4 / 0.1644e4 * eta ^ 3 - 0.68947e5 / 0.4932e4 * eta ^ 2 + 0.23069e5 / 0.4932e4 * eta ^ 5 + eta ^ 7 / 0.36e2 + 0.16489e5 / 0.1644e4 * eta ^ 4 - 0.59137e5 / 0.4932e4 * eta - 0.14071e5 / 0.4932e4 + 0.965e3 / 0.1644e4 * eta ^ 6) - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * cos((-g + h + 3 * f)) / 0.48e2 + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * sin((-g - h + 7 * f)) / 0.64e2 + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * sin((g + h + 7 * f)) / 0.64e2 + 0.25e2 / 0.576e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + 9 * f)) + 0.13e2 / 0.2880e4 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-3 * g + h + f)) + 0.25e2 / 0.576e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 9 * f)) + 0.13e2 / 0.2880e4 * (ci2 ^ 4) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-5 * g - h + f)) + 0.11e2 / 0.128e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * ((eta ^ 4 + 0.316e3 / 0.55e2 * eta ^ 3 - 0.4978e4 / 0.165e3 * eta ^ 2 - 0.28988e5 / 0.165e3 * eta - 0.26443e5 / 0.165e3) * (ci2 ^ 6) + (-eta ^ 4 - 0.356e3 / 0.55e2 * eta ^ 3 + 0.1154e4 / 0.33e2 * eta ^ 2 + 0.10684e5 / 0.55e2 * eta + 0.5719e4 / 0.33e2) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 + 0.4e1 / 0.3e1 * eta ^ 3 - 0.325e3 / 0.33e2 * eta ^ 2 - 0.4568e4 / 0.99e2 * eta - 0.37991e5 / 0.990e3) * (ci2 ^ 2) - 0.2e1 / 0.33e2 * (eta ^ 2 - 0.42e2 / 0.5e1 * eta - 0.281e3 / 0.15e2) * (0.1e1 + eta)) * sin((g - h + 5 * f)) + 0.103e3 / 0.640e3 * ((eta ^ 5 + 0.3881e4 / 0.309e3 * eta ^ 4 + 0.962e3 / 0.309e3 * eta ^ 3 - 0.10106e5 / 0.103e3 * eta ^ 2 - 0.16685e5 / 0.103e3 * eta - 0.26443e5 / 0.309e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.4129e4 / 0.309e3 * eta ^ 4 - 0.322e3 / 0.309e3 * eta ^ 3 + 0.11434e5 / 0.103e3 * eta ^ 2 + 0.55303e5 / 0.309e3 * eta + 0.28595e5 / 0.309e3) * (ci2 ^ 4) + (eta ^ 5 / 0.6e1 + 0.5149e4 / 0.1854e4 * eta ^ 4 - 0.469e3 / 0.309e3 * eta ^ 3 - 0.25955e5 / 0.927e3 * eta ^ 2 - 0.78151e5 / 0.1854e4 * eta - 0.37991e5 / 0.1854e4) * (ci2 ^ 2) - 0.62e2 / 0.927e3 * (0.1e1 + eta) * (eta ^ 3 - 0.123e3 / 0.31e2 * eta ^ 2 - 0.411e3 / 0.31e2 * eta - 0.281e3 / 0.31e2)) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) - 0.19e2 / 0.384e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 - 0.1291e4 / 0.95e2 * eta ^ 2 - 0.4363e4 / 0.95e2 * eta - 0.3137e4 / 0.95e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.1331e4 / 0.95e2 * eta ^ 2 + 0.4443e4 / 0.95e2 * eta + 0.3177e4 / 0.95e2) * (ci2 ^ 4) + (eta ^ 3 / 0.6e1 - 0.541e3 / 0.190e3 * eta ^ 2 - 0.5027e4 / 0.570e3 * eta - 0.3469e4 / 0.570e3) * (ci2 ^ 2) + 0.2e1 / 0.57e2 * (0.1e1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 7 * f)) + 0.65e2 / 0.384e3 * (0.1e1 + eta) * ((eta ^ 4 - 0.1004e4 / 0.325e3 * eta ^ 3 + 0.1966e4 / 0.325e3 * eta ^ 2 + 0.2164e4 / 0.65e2 * eta + 0.7509e4 / 0.325e3) * (ci2 ^ 6) + (-eta ^ 4 + 0.788e3 / 0.325e3 * eta ^ 3 - 0.3254e4 / 0.325e3 * eta ^ 2 - 0.2556e4 / 0.65e2 * eta - 0.8397e4 / 0.325e3) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 - 0.196e3 / 0.325e3 * eta ^ 3 + 0.157e3 / 0.39e2 * eta ^ 2 + 0.3976e4 / 0.325e3 * eta + 0.14489e5 / 0.1950e4) * (ci2 ^ 2) - 0.18e2 / 0.325e3 * (0.1e1 + eta) * (eta ^ 2 + 0.62e2 / 0.9e1 * eta + 0.163e3 / 0.27e2)) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + f)) + (0.1e1 + eta) ^ 3 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.246e3 * eta - 0.223e3) * (ci2 ^ 6) + (-eta ^ 2 + 0.238e3 * eta + 0.215e3) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 - 0.55e2 * eta - 0.307e3 / 0.6e1) * (ci2 ^ 2) - 0.2e1 / 0.3e1 * eta - 0.2e1 / 0.3e1) * sin((-g + h + 3 * f)) / 0.1920e4 - (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 3 * ((eta ^ 2 - 0.442e3 / 0.5e1 * eta - 0.3137e4 / 0.15e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.1366e4 / 0.15e2 * eta + 0.1059e4 / 0.5e1) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 - 0.829e3 / 0.45e2 * eta - 0.3469e4 / 0.90e2) * (ci2 ^ 2) + 0.2e1 / 0.9e1 * eta + 0.2e1 / 0.9e1) * sin((g - h + 7 * f)) / 0.128e3 - 0.31e2 / 0.72e2 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta ^ 5 + 0.859e3 / 0.31e2 * eta ^ 4 + 0.1404e4 / 0.31e2 * eta ^ 3 - 0.944e3 / 0.31e2 * eta ^ 2 - 0.2555e4 / 0.31e2 * eta - 0.1371e4 / 0.31e2) * (ci2 ^ 6) + (-eta ^ 5 - 0.1015e4 / 0.31e2 * eta ^ 4 - 0.1596e4 / 0.31e2 * eta ^ 3 + 0.1144e4 / 0.31e2 * eta ^ 2 + 0.2971e4 / 0.31e2 * eta + 0.1551e4 / 0.31e2) * (ci2 ^ 4) + (eta ^ 5 / 0.5e1 + 0.1483e4 / 0.155e3 * eta ^ 4 + 0.2172e4 / 0.155e3 * eta ^ 3 - 0.1744e4 / 0.155e3 * eta ^ 2 - 0.4219e4 / 0.155e3 * eta - 0.2091e4 / 0.155e3) * (ci2 ^ 2) - 0.78e2 / 0.155e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * cos((3 * g + h + 3 * f)) + 0.9e1 / 0.160e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5 + 0.61e2 / 0.9e1 * eta ^ 4 + 0.44e2 / 0.81e2 * eta ^ 3 - 0.2072e4 / 0.81e2 * eta ^ 2 - 0.1165e4 / 0.81e2 * eta + 0.241e3 / 0.27e2) * (ci2 ^ 2) - 0.92e2 / 0.81e2 * (0.1e1 + eta) * (eta ^ 3 - 0.15e2 / 0.23e2 * eta ^ 2 - 0.59e2 / 0.23e2 * eta + 0.11e2 / 0.23e2)) * sin((3 * g - h + 3 * f)) - ((eta ^ 2 + 0.274e3 / 0.15e2 * eta + 0.223e3 / 0.15e2) * (ci2 ^ 6) + (-eta ^ 2 - 0.266e3 / 0.15e2 * eta - 0.43e2 / 0.3e1) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 + 0.179e3 / 0.45e2 * eta + 0.307e3 / 0.90e2) * (ci2 ^ 2) + 0.2e1 / 0.45e2 * eta + 0.2e1 / 0.45e2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 3 * f)) / 0.128e3 - 0.13e2 / 0.8e1 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta ^ 5 + 0.31e2 / 0.3e1 * eta ^ 4 + 0.172e3 / 0.39e2 * eta ^ 3 - 0.544e3 / 0.39e2 * eta ^ 2 - 0.19e2 / 0.39e2 * eta + 0.317e3 / 0.39e2) * (ci2 ^ 6) + (-eta ^ 5 - 0.479e3 / 0.39e2 * eta ^ 4 - 0.236e3 / 0.39e2 * eta ^ 3 + 0.216e3 / 0.13e2 * eta ^ 2 + 0.17e2 / 0.13e2 * eta - 0.29e2 / 0.3e1) * (ci2 ^ 4) + (eta ^ 5 / 0.5e1 + 0.707e3 / 0.195e3 * eta ^ 4 + 0.428e3 / 0.195e3 * eta ^ 3 - 0.64e2 / 0.13e2 * eta ^ 2 - 0.49e2 / 0.65e2 * eta + 0.557e3 / 0.195e3) * (ci2 ^ 2) - 0.38e2 / 0.195e3 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * cos((g - h + f)) + 0.39e2 / 0.640e3 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 4 - 0.844e3 / 0.117e3 * eta ^ 3 + 0.358e3 / 0.9e1 * eta ^ 2 + 0.13636e5 / 0.117e3 * eta + 0.2503e4 / 0.39e2) * (ci2 ^ 6) + (-eta ^ 4 + 0.84e2 / 0.13e2 * eta ^ 3 - 0.5462e4 / 0.117e3 * eta ^ 2 - 0.5060e4 / 0.39e2 * eta - 0.933e3 / 0.13e2) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 - 0.148e3 / 0.117e3 * eta ^ 3 + 0.5453e4 / 0.351e3 * eta ^ 2 + 0.13472e5 / 0.351e3 * eta + 0.14489e5 / 0.702e3) * (ci2 ^ 2) - 0.22e2 / 0.351e3 * eta ^ 3 - 0.34e2 / 0.39e2 * eta ^ 2 - 0.22e2 / 0.13e2 * eta - 0.326e3 / 0.351e3) * sin((-g + h + f)) - 0.41e2 / 0.160e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((eta ^ 5 + 0.757e3 / 0.369e3 * eta ^ 4 + 0.76e2 / 0.369e3 * eta ^ 3 - 0.856e3 / 0.369e3 * eta ^ 2 - 0.1165e4 / 0.369e3 * eta - 0.1021e4 / 0.369e3) * (ci2 ^ 2) - 0.124e3 / 0.369e3 * (0.1e1 + eta) * (eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2)) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 5 * f)) + 0.9e1 / 0.320e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 - 0.463e3 / 0.81e2 * eta ^ 2 - 0.2681e4 / 0.81e2 * eta - 0.2281e4 / 0.81e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 + 0.998e3 / 0.81e2 * eta ^ 2 + 0.5506e4 / 0.81e2 * eta + 0.4634e4 / 0.81e2) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 3 - 0.292e3 / 0.27e2 * eta ^ 2 - 0.1364e4 / 0.27e2 * eta - 0.1100e4 / 0.27e2) * (ci2 ^ 4) + (-eta ^ 3 / 0.3e1 + 0.353e3 / 0.81e2 * eta ^ 2 + 0.1291e4 / 0.81e2 * eta + 0.959e3 / 0.81e2) * (ci2 ^ 2) + eta ^ 3 / 0.36e2 - 0.181e3 / 0.324e3 * eta ^ 2 - 0.557e3 / 0.324e3 * eta - 0.383e3 / 0.324e3) * (eta - 0.1e1) ^ 2 * sin((g + h + 5 * f)) - 0.217e3 / 0.960e3 * ((-0.17015e5 / 0.651e3 - 0.11482e5 / 0.651e3 * eta + eta ^ 4 + 0.3602e4 / 0.651e3 * eta ^ 3 + 0.2236e4 / 0.217e3 * eta ^ 2) * (ci2 ^ 8) + (-0.7708e4 / 0.651e3 * eta ^ 3 - 0.14176e5 / 0.651e3 * eta ^ 2 + 0.8196e4 / 0.217e3 * eta - 0.2e1 * eta ^ 4 + 0.1710e4 / 0.31e2) * (ci2 ^ 6) + (-0.300e3 / 0.7e1 + 0.4e1 / 0.3e1 * eta ^ 4 + 0.2048e4 / 0.217e3 * eta ^ 3 - 0.20800e5 / 0.651e3 * eta + 0.3336e4 / 0.217e3 * eta ^ 2) * (ci2 ^ 4) + (-eta ^ 4 / 0.3e1 - 0.2122e4 / 0.651e3 * eta ^ 3 + 0.2726e4 / 0.217e3 * eta + 0.9425e4 / 0.651e3 - 0.2560e4 / 0.651e3 * eta ^ 2) * (ci2 ^ 2) + 0.35e2 / 0.93e2 * eta ^ 3 + 0.111e3 / 0.434e3 * eta ^ 2 + eta ^ 4 / 0.36e2 - 0.3397e4 / 0.1953e4 * eta - 0.1495e4 / 0.868e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-g - h + 3 * f)) + 0.71e2 / 0.1152e4 * ((-0.27269e5 / 0.1065e4 * eta ^ 3 + 0.363581e6 / 0.1065e4 * eta ^ 2 + 0.531487e6 / 0.1065e4 * eta - 0.236419e6 / 0.1065e4 * eta ^ 5 - 0.331541e6 / 0.1065e4 * eta ^ 4 - 0.55937e5 / 0.1065e4 * eta ^ 6 + 0.94003e5 / 0.355e3 + eta ^ 7) * (ci2 ^ 6) + (-0.109859e6 / 0.355e3 + 0.262819e6 / 0.1065e4 * eta ^ 5 + 0.406949e6 / 0.1065e4 * eta ^ 4 + 0.13889e5 / 0.213e3 * eta ^ 3 + 0.11485e5 / 0.213e3 * eta ^ 6 - 0.9097e4 / 0.15e2 * eta - 0.438733e6 / 0.1065e4 * eta ^ 2 - eta ^ 7) * (ci2 ^ 4) + (-0.1703e4 / 0.30e2 * eta ^ 5 - 0.68677e5 / 0.710e3 * eta ^ 4 - 0.58039e5 / 0.2130e4 * eta ^ 3 + 0.329189e6 / 0.2130e4 * eta + 0.10805e5 / 0.142e3 + 0.216199e6 / 0.2130e4 * eta ^ 2 + eta ^ 7 / 0.6e1 - 0.5047e4 / 0.426e3 * eta ^ 6) * (ci2 ^ 2) + 0.124e3 / 0.1065e4 * (eta ^ 5 + 0.433e3 / 0.31e2 * eta ^ 4 + 0.924e3 / 0.31e2 * eta ^ 3 - 0.68e2 / 0.31e2 * eta ^ 2 - 0.1163e4 / 0.31e2 * eta - 0.909e3 / 0.31e2) * (0.1e1 + eta)) * (ci2 - 1) * (ci2 + 1) * sin((3 * g + h + 3 * f)) + 0.9e1 / 0.320e3 * ((eta ^ 2 - 0.364e3 / 0.81e2 * eta - 0.2281e4 / 0.81e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 2 + 0.800e3 / 0.81e2 * eta + 0.4634e4 / 0.81e2) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 2 - 0.248e3 / 0.27e2 * eta - 0.1100e4 / 0.27e2) * (ci2 ^ 4) + (-eta ^ 2 / 0.3e1 + 0.320e3 / 0.81e2 * eta + 0.959e3 / 0.81e2) * (ci2 ^ 2) + eta ^ 2 / 0.36e2 - 0.85e2 / 0.162e3 * eta - 0.383e3 / 0.324e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-g - h + 5 * f)) - 0.217e3 / 0.960e3 * (0.1e1 + eta) * ((-0.17015e5 / 0.651e3 - 0.10931e5 / 0.217e3 * eta + eta ^ 5 + 0.3149e4 / 0.651e3 * eta ^ 4 + 0.1290e4 / 0.217e3 * eta ^ 3 - 0.5826e4 / 0.217e3 * eta ^ 2) * (ci2 ^ 8) + (-0.8140e4 / 0.651e3 * eta ^ 3 + 0.12452e5 / 0.217e3 * eta ^ 2 + 0.3322e4 / 0.31e2 * eta - 0.2e1 * eta ^ 5 - 0.6802e4 / 0.651e3 * eta ^ 4 + 0.1710e4 / 0.31e2) * (ci2 ^ 6) + (-0.300e3 / 0.7e1 + 0.4e1 / 0.3e1 * eta ^ 5 + 0.5540e4 / 0.651e3 * eta ^ 4 + 0.1800e4 / 0.217e3 * eta ^ 3 - 0.56060e5 / 0.651e3 * eta - 0.4504e4 / 0.93e2 * eta ^ 2) * (ci2 ^ 4) + (-eta ^ 5 / 0.3e1 - 0.657e3 / 0.217e3 * eta ^ 4 - 0.1090e4 / 0.651e3 * eta ^ 3 + 0.20107e5 / 0.651e3 * eta + 0.9425e4 / 0.651e3 + 0.12370e5 / 0.651e3 * eta ^ 2) * (ci2 ^ 2) + 0.5e1 / 0.434e3 * eta ^ 3 - 0.10259e5 / 0.3906e4 * eta ^ 2 + eta ^ 5 / 0.36e2 + 0.2789e4 / 0.7812e4 * eta ^ 4 - 0.30467e5 / 0.7812e4 * eta - 0.1495e4 / 0.868e3) * (eta - 0.1e1) * sin((g + h + 3 * f)) - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 3 * f)) / 0.48e2 + 0.5e1 / 0.48e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 7 * f)) + 0.5e1 / 0.48e2 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * cos((g - h + 7 * f)) - 0.11e2 / 0.48e2 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 3 - 0.51e2 / 0.11e2 * eta ^ 2 - 0.111e3 / 0.11e2 * eta - 0.41e2 / 0.11e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.59e2 / 0.11e2 * eta ^ 2 + 0.127e3 / 0.11e2 * eta + 0.49e2 / 0.11e2) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 - 0.83e2 / 0.55e2 * eta ^ 2 - 0.35e2 / 0.11e2 * eta - 0.73e2 / 0.55e2) * (ci2 ^ 2) + 0.4e1 / 0.55e2 * (0.1e1 + eta) ^ 2) * Delta * (eta - 0.1e1) * cos((-g + h + f)) + 0.47e2 / 0.576e3 * ((eta ^ 3 - 0.483e3 / 0.235e3 * eta ^ 2 - 0.1839e4 / 0.235e3 * eta - 0.1561e4 / 0.235e3) * (ci2 ^ 2) + 0.88e2 / 0.235e3 * (0.1e1 + eta) ^ 2) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * sin((5 * g + h + 7 * f)) - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * sin((-3 * g - h + 5 * f)) / 0.640e3 - 0.7e1 / 0.384e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * sin((3 * g + h + 9 * f)) - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * sin((-g + h + 5 * f)) / 0.640e3 - 0.7e1 / 0.384e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * sin((g - h + 9 * f)) - 0.13e2 / 0.320e3 * ((eta ^ 2 + 0.230e3 / 0.39e2 * eta + 0.1561e4 / 0.117e3) * (ci2 ^ 2) - 0.88e2 / 0.117e3 * eta - 0.88e2 / 0.117e3) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) ^ 2 * sin((3 * g - h + 7 * f)) - 0.79e2 / 0.24e2 * ((eta ^ 4 + 0.844e3 / 0.79e2 * eta ^ 3 + 0.1428e4 / 0.79e2 * eta ^ 2 + 0.996e3 / 0.79e2 * eta + 0.317e3 / 0.79e2) * (ci2 ^ 6) + (-eta ^ 4 - 0.984e3 / 0.79e2 * eta ^ 3 - 0.1720e4 / 0.79e2 * eta ^ 2 - 0.1208e4 / 0.79e2 * eta - 0.377e3 / 0.79e2) * (ci2 ^ 4) + (eta ^ 4 / 0.5e1 + 0.1404e4 / 0.395e3 * eta ^ 3 + 0.2596e4 / 0.395e3 * eta ^ 2 + 0.1844e4 / 0.395e3 * eta + 0.557e3 / 0.395e3) * (ci2 ^ 2) - 0.14e2 / 0.79e2 * (0.1e1 + eta) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1)) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * cos((3 * g + h + f)) + 0.151e3 / 0.960e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.26e2 / 0.151e3 * eta - 0.503e3 / 0.453e3) * (ci2 ^ 2) + 0.104e3 / 0.453e3 * eta + 0.104e3 / 0.453e3) * sin((5 * g + h + f)) - 0.9e1 / 0.16e2 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.2e1 / 0.3e1 * eta - 0.41e2 / 0.27e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.26e2 / 0.27e2 * eta + 0.49e2 / 0.27e2) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.10e2 / 0.27e2 * eta - 0.73e2 / 0.135e3) * (ci2 ^ 2) + 0.4e1 / 0.135e3 * eta + 0.4e1 / 0.135e3) * cos((-3 * g - h + f)) - 0.97e2 / 0.1440e4 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 4 - 0.68e2 / 0.97e2 * eta ^ 3 - 0.1140e4 / 0.97e2 * eta ^ 2 - 0.1836e4 / 0.97e2 * eta - 0.1021e4 / 0.97e2) * (ci2 ^ 2) + 0.4e1 / 0.97e2 * (0.1e1 + eta) * (eta ^ 2 + 0.10e2 * eta + 0.45e2)) * sin((3 * g - h + 5 * f)) - 0.23e2 / 0.72e2 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * ((eta ^ 4 + 0.524e3 / 0.23e2 * eta ^ 3 + 0.964e3 / 0.23e2 * eta ^ 2 - 0.796e3 / 0.23e2 * eta - 0.1371e4 / 0.23e2) * (ci2 ^ 6) + (-eta ^ 4 - 0.616e3 / 0.23e2 * eta ^ 3 - 0.1112e4 / 0.23e2 * eta ^ 2 + 0.40e2 * eta + 0.1551e4 / 0.23e2) * (ci2 ^ 4) + (eta ^ 4 / 0.5e1 + 0.892e3 / 0.115e3 * eta ^ 3 + 0.1556e4 / 0.115e3 * eta ^ 2 - 0.1292e4 / 0.115e3 * eta - 0.2091e4 / 0.115e3) * (ci2 ^ 2) - 0.2e1 / 0.5e1 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2)) * cos((g - h + 3 * f)) + 0.5e1 / 0.16e2 * ((eta ^ 2 - 0.14e2 / 0.5e1 * eta - 0.197e3 / 0.15e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.10e2 / 0.3e1 * eta + 0.41e2 / 0.3e1) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.74e2 / 0.75e2 * eta - 0.229e3 / 0.75e2) * (ci2 ^ 2) + 0.4e1 / 0.75e2 * eta + 0.4e1 / 0.75e2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) + 0.31e2 / 0.48e2 * ((eta ^ 3 - 0.39e2 / 0.31e2 * eta ^ 2 - 0.243e3 / 0.31e2 * eta - 0.197e3 / 0.31e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.47e2 / 0.31e2 * eta ^ 2 + 0.259e3 / 0.31e2 * eta + 0.205e3 / 0.31e2) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 - 0.71e2 / 0.155e3 * eta ^ 2 - 0.307e3 / 0.155e3 * eta - 0.229e3 / 0.155e3) * (ci2 ^ 2) + 0.4e1 / 0.155e3 * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * cos((3 * g + h + 5 * f)) - 0.31e2 / 0.1440e4 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 4 - 0.1164e4 / 0.31e2 * eta ^ 3 - 0.3004e4 / 0.31e2 * eta ^ 2 - 0.2372e4 / 0.31e2 * eta - 0.723e3 / 0.31e2) * (ci2 ^ 2) + 0.220e3 / 0.31e2 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.11e2 * eta + 0.1e1 / 0.5e1)) * sin((5 * g + h + 3 * f)) + 0.37e2 / 0.2880e4 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 3 - 0.717e3 / 0.37e2 * eta ^ 2 - 0.1569e4 / 0.37e2 * eta - 0.503e3 / 0.37e2) * (ci2 ^ 2) + 0.104e3 / 0.37e2 * (0.1e1 + eta) ^ 2) * sin((3 * g - h + f)) + 0.137e3 / 0.320e3 * (eta - 0.1e1) * ((-0.13265e5 / 0.411e3 - 0.2702e4 / 0.411e3 * eta + 0.14510e5 / 0.1233e4 * eta ^ 5 + 0.62003e5 / 0.1233e4 * eta ^ 4 + 0.162652e6 / 0.1233e4 * eta ^ 3 + 0.145039e6 / 0.1233e4 * eta ^ 2 + eta ^ 6) * (ci2 ^ 8) + (-0.352376e6 / 0.1233e4 * eta ^ 3 - 0.314878e6 / 0.1233e4 * eta ^ 2 + 0.1860e4 / 0.137e3 * eta - 0.30892e5 / 0.1233e4 * eta ^ 5 - 0.14902e5 / 0.137e3 * eta ^ 4 - 0.2e1 * eta ^ 6 + 0.86086e5 / 0.1233e4) * (ci2 ^ 6) + (-0.7876e4 / 0.137e3 + 0.2584e4 / 0.137e3 * eta ^ 5 + 0.12644e5 / 0.137e3 * eta ^ 4 + 0.99952e5 / 0.411e3 * eta ^ 3 + 0.4e1 / 0.3e1 * eta ^ 6 - 0.4664e4 / 0.411e3 * eta + 0.87932e5 / 0.411e3 * eta ^ 2) * (ci2 ^ 4) + (-0.7186e4 / 0.1233e4 * eta ^ 5 - 0.14939e5 / 0.411e3 * eta ^ 4 - 0.118676e6 / 0.1233e4 * eta ^ 3 + 0.5638e4 / 0.1233e4 * eta + 0.8779e4 / 0.411e3 - 0.101141e6 / 0.1233e4 * eta ^ 2 - eta ^ 6 / 0.3e1) * (ci2 ^ 2) + 0.16951e5 / 0.1233e4 * eta ^ 3 + 0.56023e5 / 0.4932e4 * eta ^ 2 + 0.503e3 / 0.822e3 * eta ^ 5 + 0.25399e5 / 0.4932e4 * eta ^ 4 - 0.545e3 / 0.822e3 * eta - 0.14071e5 / 0.4932e4 + eta ^ 6 / 0.36e2) * sin((-g - h + f))) * J ^ 2 / (0.1e1 + eta) ^ 2 / a ^ 4 / eta ^ 11 0.669e3 / 0.64e2 / (0.1e1 + eta) ^ 2 * R__e ^ 4 * J ^ 2 * (0.453e3 / 0.892e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.26e2 / 0.151e3 * eta - 0.503e3 / 0.453e3) * (ci2 ^ 2) + 0.104e3 / 0.453e3 * eta + 0.104e3 / 0.453e3) * cos((5 * g + h + f)) + 0.235e3 / 0.892e3 * ((eta ^ 3 - 0.483e3 / 0.235e3 * eta ^ 2 - 0.1839e4 / 0.235e3 * eta - 0.1561e4 / 0.235e3) * (ci2 ^ 2) + 0.88e2 / 0.235e3 * (0.1e1 + eta) ^ 2) * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * cos((5 * g + h + 7 * f)) - 0.405e3 / 0.223e3 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.2e1 / 0.3e1 * eta - 0.41e2 / 0.27e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.26e2 / 0.27e2 * eta + 0.49e2 / 0.27e2) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.10e2 / 0.27e2 * eta - 0.73e2 / 0.135e3) * (ci2 ^ 2) + 0.4e1 / 0.135e3 * eta + 0.4e1 / 0.135e3) * sin((-3 * g - h + f)) + 0.125e3 / 0.892e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((5 * g + h + 9 * f)) - 0.13e2 / 0.892e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-5 * g - h + f)) - 0.125e3 / 0.892e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 9 * f)) + 0.13e2 / 0.892e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-3 * g + h + f)) - 0.1233e4 / 0.892e3 * ((-0.13265e5 / 0.411e3 - 0.2702e4 / 0.411e3 * eta + 0.14510e5 / 0.1233e4 * eta ^ 5 + 0.62003e5 / 0.1233e4 * eta ^ 4 + 0.162652e6 / 0.1233e4 * eta ^ 3 + 0.145039e6 / 0.1233e4 * eta ^ 2 + eta ^ 6) * (ci2 ^ 8) + (-0.352376e6 / 0.1233e4 * eta ^ 3 - 0.314878e6 / 0.1233e4 * eta ^ 2 + 0.1860e4 / 0.137e3 * eta - 0.30892e5 / 0.1233e4 * eta ^ 5 - 0.14902e5 / 0.137e3 * eta ^ 4 - 0.2e1 * eta ^ 6 + 0.86086e5 / 0.1233e4) * (ci2 ^ 6) + (-0.7876e4 / 0.137e3 + 0.2584e4 / 0.137e3 * eta ^ 5 + 0.12644e5 / 0.137e3 * eta ^ 4 + 0.99952e5 / 0.411e3 * eta ^ 3 + 0.4e1 / 0.3e1 * eta ^ 6 - 0.4664e4 / 0.411e3 * eta + 0.87932e5 / 0.411e3 * eta ^ 2) * (ci2 ^ 4) + (-0.7186e4 / 0.1233e4 * eta ^ 5 - 0.14939e5 / 0.411e3 * eta ^ 4 - 0.118676e6 / 0.1233e4 * eta ^ 3 + 0.5638e4 / 0.1233e4 * eta + 0.8779e4 / 0.411e3 - 0.101141e6 / 0.1233e4 * eta ^ 2 - eta ^ 6 / 0.3e1) * (ci2 ^ 2) + 0.16951e5 / 0.1233e4 * eta ^ 3 + 0.56023e5 / 0.4932e4 * eta ^ 2 + 0.503e3 / 0.822e3 * eta ^ 5 + 0.25399e5 / 0.4932e4 * eta ^ 4 - 0.545e3 / 0.822e3 * eta - 0.14071e5 / 0.4932e4 + eta ^ 6 / 0.36e2) * (eta - 0.1e1) * cos((-g - h + f)) - 0.15e2 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * sin((-3 * g - h + 3 * f)) + 0.75e2 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 3 * sin((g - h + 7 * f)) - 0.75e2 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * sin((3 * g + h + 7 * f)) + 0.15e2 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 2 * sin((-g + h + 3 * f)) - 0.3e1 / 0.1784e4 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((0.11572e5 / 0.3e1 * eta ^ 3 + 0.163037e6 / 0.3e1 * eta ^ 2 + 0.678794e6 / 0.9e1 * eta - 0.31558e5 / 0.9e1 * eta ^ 5 - 0.90521e5 / 0.9e1 * eta ^ 4 + eta ^ 6 + 0.94003e5 / 0.3e1) * (ci2 ^ 6) + (-0.109859e6 / 0.3e1 + 0.32662e5 / 0.9e1 * eta ^ 5 + 0.32291e5 / 0.3e1 * eta ^ 4 - 0.2492e4 * eta ^ 3 - eta ^ 6 - 0.765658e6 / 0.9e1 * eta - 0.173789e6 / 0.3e1 * eta ^ 2) * (ci2 ^ 4) + (-0.6997e4 / 0.9e1 * eta ^ 5 - 0.34907e5 / 0.18e2 * eta ^ 4 + 0.3902e4 / 0.3e1 * eta ^ 3 + 0.182123e6 / 0.9e1 * eta + 0.54025e5 / 0.6e1 + 0.82015e5 / 0.6e1 * eta ^ 2 + eta ^ 6 / 0.6e1) * (ci2 ^ 2) - 0.404e3 - 0.32e2 / 0.3e1 * eta ^ 3 - 0.368e3 * eta ^ 2 + 0.92e2 / 0.9e1 * eta ^ 5 + 0.100e3 / 0.9e1 * eta ^ 4 - 0.6844e4 / 0.9e1 * eta) * cos((g - h + 3 * f)) + 0.45e2 / 0.892e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * cos((g + h + 7 * f)) - 0.45e2 / 0.892e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * cos((-g - h + 7 * f)) + 0.1539e4 / 0.1784e4 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((-0.81308e5 / 0.513e3 * eta ^ 3 + 0.120607e6 / 0.513e3 * eta ^ 2 + 0.120214e6 / 0.513e3 * eta - 0.542e3 / 0.171e3 * eta ^ 5 - 0.74225e5 / 0.513e3 * eta ^ 4 + eta ^ 6 - 0.263e3 / 0.9e1) * (ci2 ^ 6) + (0.16127e5 / 0.513e3 + 0.334e3 / 0.171e3 * eta ^ 5 + 0.87553e5 / 0.513e3 * eta ^ 4 + 0.96476e5 / 0.513e3 * eta ^ 3 - eta ^ 6 - 0.140902e6 / 0.513e3 * eta - 0.140959e6 / 0.513e3 * eta ^ 2) * (ci2 ^ 4) + (-0.265e3 / 0.1539e4 * eta ^ 5 - 0.53987e5 / 0.1026e4 * eta ^ 4 - 0.85726e5 / 0.1539e4 * eta ^ 3 + 0.4565e4 / 0.57e2 * eta - 0.29527e5 / 0.3078e4 + 0.257951e6 / 0.3078e4 * eta ^ 2 + eta ^ 6 / 0.6e1) * (ci2 ^ 2) + 0.4816e4 / 0.1539e4 * eta ^ 3 + 0.692e3 / 0.1539e4 - 0.7024e4 / 0.1539e4 * eta ^ 2 - 0.52e2 / 0.513e3 * eta ^ 5 + 0.4540e4 / 0.1539e4 * eta ^ 4 - 0.724e3 / 0.171e3 * eta) * cos((g - h + f)) - 0.3555e4 / 0.1784e4 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((-0.345412e6 / 0.1185e4 * eta ^ 3 - 0.127531e6 / 0.395e3 * eta ^ 2 - 0.156934e6 / 0.1185e4 * eta + 0.1038e4 / 0.395e3 * eta ^ 5 - 0.102641e6 / 0.1185e4 * eta ^ 4 + eta ^ 6 - 0.4997e4 / 0.395e3) * (ci2 ^ 6) + (0.16127e5 / 0.1185e4 - 0.4378e4 / 0.1185e4 * eta ^ 5 + 0.23885e5 / 0.237e3 * eta ^ 4 + 0.405572e6 / 0.1185e4 * eta ^ 3 - eta ^ 6 + 0.36350e5 / 0.237e3 * eta + 0.89677e5 / 0.237e3 * eta ^ 2) * (ci2 ^ 4) + (0.613e3 / 0.711e3 * eta ^ 5 - 0.15239e5 / 0.474e3 * eta ^ 4 - 0.75866e5 / 0.711e3 * eta ^ 3 - 0.11209e5 / 0.237e3 * eta - 0.29527e5 / 0.7110e4 - 0.92409e5 / 0.790e3 * eta ^ 2 + eta ^ 6 / 0.6e1) * (ci2 ^ 2) - 0.4e1 / 0.45e2 * (eta ^ 4 - 0.1622e4 / 0.79e2 * eta ^ 3 - 0.3666e4 / 0.79e2 * eta ^ 2 - 0.2122e4 / 0.79e2 * eta - 0.173e3 / 0.79e2) * (0.1e1 + eta)) * cos((3 * g + h + f)) + 0.651e3 / 0.892e3 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((-0.17015e5 / 0.651e3 - 0.11482e5 / 0.651e3 * eta + eta ^ 4 + 0.3602e4 / 0.651e3 * eta ^ 3 + 0.2236e4 / 0.217e3 * eta ^ 2) * (ci2 ^ 8) + (-0.7708e4 / 0.651e3 * eta ^ 3 - 0.14176e5 / 0.651e3 * eta ^ 2 + 0.8196e4 / 0.217e3 * eta - 0.2e1 * eta ^ 4 + 0.1710e4 / 0.31e2) * (ci2 ^ 6) + (-0.300e3 / 0.7e1 + 0.4e1 / 0.3e1 * eta ^ 4 + 0.2048e4 / 0.217e3 * eta ^ 3 - 0.20800e5 / 0.651e3 * eta + 0.3336e4 / 0.217e3 * eta ^ 2) * (ci2 ^ 4) + (-eta ^ 4 / 0.3e1 - 0.2122e4 / 0.651e3 * eta ^ 3 + 0.2726e4 / 0.217e3 * eta + 0.9425e4 / 0.651e3 - 0.2560e4 / 0.651e3 * eta ^ 2) * (ci2 ^ 2) + 0.35e2 / 0.93e2 * eta ^ 3 + 0.111e3 / 0.434e3 * eta ^ 2 + eta ^ 4 / 0.36e2 - 0.3397e4 / 0.1953e4 * eta - 0.1495e4 / 0.868e3) * cos((-g - h + 3 * f)) + 0.351e3 / 0.1784e4 * ((eta ^ 4 - 0.844e3 / 0.117e3 * eta ^ 3 + 0.358e3 / 0.9e1 * eta ^ 2 + 0.13636e5 / 0.117e3 * eta + 0.2503e4 / 0.39e2) * (ci2 ^ 6) + (-eta ^ 4 + 0.84e2 / 0.13e2 * eta ^ 3 - 0.5462e4 / 0.117e3 * eta ^ 2 - 0.5060e4 / 0.39e2 * eta - 0.933e3 / 0.13e2) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 - 0.148e3 / 0.117e3 * eta ^ 3 + 0.5453e4 / 0.351e3 * eta ^ 2 + 0.13472e5 / 0.351e3 * eta + 0.14489e5 / 0.702e3) * (ci2 ^ 2) - 0.22e2 / 0.351e3 * eta ^ 3 - 0.34e2 / 0.39e2 * eta ^ 2 - 0.22e2 / 0.13e2 * eta - 0.326e3 / 0.351e3) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * cos((-g + h + f)) - 0.369e3 / 0.446e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5 + 0.757e3 / 0.369e3 * eta ^ 4 + 0.76e2 / 0.369e3 * eta ^ 3 - 0.856e3 / 0.369e3 * eta ^ 2 - 0.1165e4 / 0.369e3 * eta - 0.1021e4 / 0.369e3) * (ci2 ^ 2) - 0.124e3 / 0.369e3 * (0.1e1 + eta) * (eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2)) * cos((5 * g + h + 5 * f)) + 0.310e3 / 0.223e3 * ((eta ^ 5 + 0.859e3 / 0.31e2 * eta ^ 4 + 0.1404e4 / 0.31e2 * eta ^ 3 - 0.944e3 / 0.31e2 * eta ^ 2 - 0.2555e4 / 0.31e2 * eta - 0.1371e4 / 0.31e2) * (ci2 ^ 6) + (-eta ^ 5 - 0.1015e4 / 0.31e2 * eta ^ 4 - 0.1596e4 / 0.31e2 * eta ^ 3 + 0.1144e4 / 0.31e2 * eta ^ 2 + 0.2971e4 / 0.31e2 * eta + 0.1551e4 / 0.31e2) * (ci2 ^ 4) + (eta ^ 5 / 0.5e1 + 0.1483e4 / 0.155e3 * eta ^ 4 + 0.2172e4 / 0.155e3 * eta ^ 3 - 0.1744e4 / 0.155e3 * eta ^ 2 - 0.4219e4 / 0.155e3 * eta - 0.2091e4 / 0.155e3) * (ci2 ^ 2) - 0.78e2 / 0.155e3 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta)) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sin((3 * g + h + 3 * f)) + 0.927e3 / 0.1784e4 * (0.1e1 + eta) * ((eta ^ 5 + 0.3881e4 / 0.309e3 * eta ^ 4 + 0.962e3 / 0.309e3 * eta ^ 3 - 0.10106e5 / 0.103e3 * eta ^ 2 - 0.16685e5 / 0.103e3 * eta - 0.26443e5 / 0.309e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.4129e4 / 0.309e3 * eta ^ 4 - 0.322e3 / 0.309e3 * eta ^ 3 + 0.11434e5 / 0.103e3 * eta ^ 2 + 0.55303e5 / 0.309e3 * eta + 0.28595e5 / 0.309e3) * (ci2 ^ 4) + (eta ^ 5 / 0.6e1 + 0.5149e4 / 0.1854e4 * eta ^ 4 - 0.469e3 / 0.309e3 * eta ^ 3 - 0.25955e5 / 0.927e3 * eta ^ 2 - 0.78151e5 / 0.1854e4 * eta - 0.37991e5 / 0.1854e4) * (ci2 ^ 2) - 0.62e2 / 0.927e3 * (0.1e1 + eta) * (eta ^ 3 - 0.123e3 / 0.31e2 * eta ^ 2 - 0.411e3 / 0.31e2 * eta - 0.281e3 / 0.31e2)) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * cos((3 * g + h + 5 * f)) - 0.285e3 / 0.1784e4 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 3 - 0.1291e4 / 0.95e2 * eta ^ 2 - 0.4363e4 / 0.95e2 * eta - 0.3137e4 / 0.95e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.1331e4 / 0.95e2 * eta ^ 2 + 0.4443e4 / 0.95e2 * eta + 0.3177e4 / 0.95e2) * (ci2 ^ 4) + (eta ^ 3 / 0.6e1 - 0.541e3 / 0.190e3 * eta ^ 2 - 0.5027e4 / 0.570e3 * eta - 0.3469e4 / 0.570e3) * (ci2 ^ 2) + 0.2e1 / 0.57e2 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 7 * f)) + 0.45e2 / 0.1784e4 * ((eta ^ 2 - 0.442e3 / 0.5e1 * eta - 0.3137e4 / 0.15e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.1366e4 / 0.15e2 * eta + 0.1059e4 / 0.5e1) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 - 0.829e3 / 0.45e2 * eta - 0.3469e4 / 0.90e2) * (ci2 ^ 2) + 0.2e1 / 0.9e1 * eta + 0.2e1 / 0.9e1) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 3 * cos((g - h + 7 * f)) + 0.1233e4 / 0.892e3 * cos((g + h + f)) * ((-0.13265e5 / 0.411e3 - 0.154961e6 / 0.1233e4 * eta + 0.49021e5 / 0.1233e4 * eta ^ 5 + 0.35341e5 / 0.411e3 * eta ^ 4 + 0.9347e4 / 0.1233e4 * eta ^ 3 - 0.172687e6 / 0.1233e4 * eta ^ 2 + 0.13403e5 / 0.1233e4 * eta ^ 6 + eta ^ 7) * (ci2 ^ 8) + (-0.6754e4 / 0.411e3 * eta ^ 3 + 0.124954e6 / 0.411e3 * eta ^ 2 + 0.37378e5 / 0.137e3 * eta - 0.106570e6 / 0.1233e4 * eta ^ 5 - 0.229774e6 / 0.1233e4 * eta ^ 4 - 0.28678e5 / 0.1233e4 * eta ^ 6 + 0.86086e5 / 0.1233e4 - 0.2e1 * eta ^ 7) * (ci2 ^ 6) + (-0.7876e4 / 0.137e3 + 0.31204e5 / 0.411e3 * eta ^ 5 + 0.66940e5 / 0.411e3 * eta ^ 4 + 0.6220e4 / 0.411e3 * eta ^ 3 + 0.2420e4 / 0.137e3 * eta ^ 6 - 0.31260e5 / 0.137e3 * eta - 0.105356e6 / 0.411e3 * eta ^ 2 + 0.4e1 / 0.3e1 * eta ^ 7) * (ci2 ^ 4) + (-0.38935e5 / 0.1233e4 * eta ^ 5 - 0.83245e5 / 0.1233e4 * eta ^ 4 - 0.8305e4 / 0.1233e4 * eta ^ 3 + 0.35809e5 / 0.411e3 * eta + 0.8779e4 / 0.411e3 + 0.13637e5 / 0.137e3 * eta ^ 2 - eta ^ 7 / 0.3e1 - 0.6817e4 / 0.1233e4 * eta ^ 6) * (ci2 ^ 2) + 0.1673e4 / 0.1644e4 * eta ^ 3 - 0.68947e5 / 0.4932e4 * eta ^ 2 + 0.23069e5 / 0.4932e4 * eta ^ 5 + eta ^ 7 / 0.36e2 + 0.16489e5 / 0.1644e4 * eta ^ 4 - 0.59137e5 / 0.4932e4 * eta - 0.14071e5 / 0.4932e4 + 0.965e3 / 0.1644e4 * eta ^ 6) - 0.37e2 / 0.892e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3 - 0.717e3 / 0.37e2 * eta ^ 2 - 0.1569e4 / 0.37e2 * eta - 0.503e3 / 0.37e2) * (ci2 ^ 2) + 0.104e3 / 0.37e2 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * cos((3 * g - h + f)) + 0.165e3 / 0.223e3 * ((eta ^ 3 - 0.51e2 / 0.11e2 * eta ^ 2 - 0.111e3 / 0.11e2 * eta - 0.41e2 / 0.11e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.59e2 / 0.11e2 * eta ^ 2 + 0.127e3 / 0.11e2 * eta + 0.49e2 / 0.11e2) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 - 0.83e2 / 0.55e2 * eta ^ 2 - 0.35e2 / 0.11e2 * eta - 0.73e2 / 0.55e2) * (ci2 ^ 2) + 0.4e1 / 0.55e2 * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * sin((-g + h + f)) - 0.31e2 / 0.446e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 4 - 0.1164e4 / 0.31e2 * eta ^ 3 - 0.3004e4 / 0.31e2 * eta ^ 2 - 0.2372e4 / 0.31e2 * eta - 0.723e3 / 0.31e2) * (ci2 ^ 2) + 0.220e3 / 0.31e2 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.11e2 * eta + 0.1e1 / 0.5e1)) * cos((5 * g + h + 3 * f)) - 0.230e3 / 0.223e3 * (0.1e1 + eta) * (ci2 - 1) * ((eta ^ 4 + 0.524e3 / 0.23e2 * eta ^ 3 + 0.964e3 / 0.23e2 * eta ^ 2 - 0.796e3 / 0.23e2 * eta - 0.1371e4 / 0.23e2) * (ci2 ^ 6) + (-eta ^ 4 - 0.616e3 / 0.23e2 * eta ^ 3 - 0.1112e4 / 0.23e2 * eta ^ 2 + 0.40e2 * eta + 0.1551e4 / 0.23e2) * (ci2 ^ 4) + (eta ^ 4 / 0.5e1 + 0.892e3 / 0.115e3 * eta ^ 3 + 0.1556e4 / 0.115e3 * eta ^ 2 - 0.1292e4 / 0.115e3 * eta - 0.2091e4 / 0.115e3) * (ci2 ^ 2) - 0.2e1 / 0.5e1 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2)) * (ci2 + 1) * Delta * (eta - 0.1e1) * sin((g - h + 3 * f)) - 0.81e2 / 0.892e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 2 - 0.364e3 / 0.81e2 * eta - 0.2281e4 / 0.81e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 2 + 0.800e3 / 0.81e2 * eta + 0.4634e4 / 0.81e2) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 2 - 0.248e3 / 0.27e2 * eta - 0.1100e4 / 0.27e2) * (ci2 ^ 4) + (-eta ^ 2 / 0.3e1 + 0.320e3 / 0.81e2 * eta + 0.959e3 / 0.81e2) * (ci2 ^ 2) + eta ^ 2 / 0.36e2 - 0.85e2 / 0.162e3 * eta - 0.383e3 / 0.324e3) * (eta - 0.1e1) ^ 3 * cos((-g - h + 5 * f)) + 0.355e3 / 0.1784e4 * (ci2 - 1) * (ci2 + 1) * ((-0.27269e5 / 0.1065e4 * eta ^ 3 + 0.363581e6 / 0.1065e4 * eta ^ 2 + 0.531487e6 / 0.1065e4 * eta - 0.236419e6 / 0.1065e4 * eta ^ 5 - 0.331541e6 / 0.1065e4 * eta ^ 4 - 0.55937e5 / 0.1065e4 * eta ^ 6 + 0.94003e5 / 0.355e3 + eta ^ 7) * (ci2 ^ 6) + (-0.109859e6 / 0.355e3 + 0.262819e6 / 0.1065e4 * eta ^ 5 + 0.406949e6 / 0.1065e4 * eta ^ 4 + 0.13889e5 / 0.213e3 * eta ^ 3 + 0.11485e5 / 0.213e3 * eta ^ 6 - 0.9097e4 / 0.15e2 * eta - 0.438733e6 / 0.1065e4 * eta ^ 2 - eta ^ 7) * (ci2 ^ 4) + (-0.1703e4 / 0.30e2 * eta ^ 5 - 0.68677e5 / 0.710e3 * eta ^ 4 - 0.58039e5 / 0.2130e4 * eta ^ 3 + 0.329189e6 / 0.2130e4 * eta + 0.10805e5 / 0.142e3 + 0.216199e6 / 0.2130e4 * eta ^ 2 + eta ^ 7 / 0.6e1 - 0.5047e4 / 0.426e3 * eta ^ 6) * (ci2 ^ 2) + 0.124e3 / 0.1065e4 * (eta ^ 5 + 0.433e3 / 0.31e2 * eta ^ 4 + 0.924e3 / 0.31e2 * eta ^ 3 - 0.68e2 / 0.31e2 * eta ^ 2 - 0.1163e4 / 0.31e2 * eta - 0.909e3 / 0.31e2) * (0.1e1 + eta)) * cos((3 * g + h + 3 * f)) + 0.81e2 / 0.892e3 * (0.1e1 + eta) ^ 2 * ((eta ^ 3 - 0.463e3 / 0.81e2 * eta ^ 2 - 0.2681e4 / 0.81e2 * eta - 0.2281e4 / 0.81e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 + 0.998e3 / 0.81e2 * eta ^ 2 + 0.5506e4 / 0.81e2 * eta + 0.4634e4 / 0.81e2) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * eta ^ 3 - 0.292e3 / 0.27e2 * eta ^ 2 - 0.1364e4 / 0.27e2 * eta - 0.1100e4 / 0.27e2) * (ci2 ^ 4) + (-eta ^ 3 / 0.3e1 + 0.353e3 / 0.81e2 * eta ^ 2 + 0.1291e4 / 0.81e2 * eta + 0.959e3 / 0.81e2) * (ci2 ^ 2) + eta ^ 3 / 0.36e2 - 0.181e3 / 0.324e3 * eta ^ 2 - 0.557e3 / 0.324e3 * eta - 0.383e3 / 0.324e3) * (eta - 0.1e1) ^ 2 * cos((g + h + 5 * f)) - 0.651e3 / 0.892e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((-0.17015e5 / 0.651e3 - 0.10931e5 / 0.217e3 * eta + eta ^ 5 + 0.3149e4 / 0.651e3 * eta ^ 4 + 0.1290e4 / 0.217e3 * eta ^ 3 - 0.5826e4 / 0.217e3 * eta ^ 2) * (ci2 ^ 8) + (-0.8140e4 / 0.651e3 * eta ^ 3 + 0.12452e5 / 0.217e3 * eta ^ 2 + 0.3322e4 / 0.31e2 * eta - 0.2e1 * eta ^ 5 - 0.6802e4 / 0.651e3 * eta ^ 4 + 0.1710e4 / 0.31e2) * (ci2 ^ 6) + (-0.300e3 / 0.7e1 + 0.4e1 / 0.3e1 * eta ^ 5 + 0.5540e4 / 0.651e3 * eta ^ 4 + 0.1800e4 / 0.217e3 * eta ^ 3 - 0.56060e5 / 0.651e3 * eta - 0.4504e4 / 0.93e2 * eta ^ 2) * (ci2 ^ 4) + (-eta ^ 5 / 0.3e1 - 0.657e3 / 0.217e3 * eta ^ 4 - 0.1090e4 / 0.651e3 * eta ^ 3 + 0.20107e5 / 0.651e3 * eta + 0.9425e4 / 0.651e3 + 0.12370e5 / 0.651e3 * eta ^ 2) * (ci2 ^ 2) + 0.5e1 / 0.434e3 * eta ^ 3 - 0.10259e5 / 0.3906e4 * eta ^ 2 + eta ^ 5 / 0.36e2 + 0.2789e4 / 0.7812e4 * eta ^ 4 - 0.30467e5 / 0.7812e4 * eta - 0.1495e4 / 0.868e3) * cos((g + h + 3 * f)) + 0.2370e4 / 0.223e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * ((eta ^ 4 + 0.844e3 / 0.79e2 * eta ^ 3 + 0.1428e4 / 0.79e2 * eta ^ 2 + 0.996e3 / 0.79e2 * eta + 0.317e3 / 0.79e2) * (ci2 ^ 6) + (-eta ^ 4 - 0.984e3 / 0.79e2 * eta ^ 3 - 0.1720e4 / 0.79e2 * eta ^ 2 - 0.1208e4 / 0.79e2 * eta - 0.377e3 / 0.79e2) * (ci2 ^ 4) + (eta ^ 4 / 0.5e1 + 0.1404e4 / 0.395e3 * eta ^ 3 + 0.2596e4 / 0.395e3 * eta ^ 2 + 0.1844e4 / 0.395e3 * eta + 0.557e3 / 0.395e3) * (ci2 ^ 2) - 0.14e2 / 0.79e2 * (0.1e1 + eta) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1)) * sin((3 * g + h + f)) + 0.97e2 / 0.446e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 4 - 0.68e2 / 0.97e2 * eta ^ 3 - 0.1140e4 / 0.97e2 * eta ^ 2 - 0.1836e4 / 0.97e2 * eta - 0.1021e4 / 0.97e2) * (ci2 ^ 2) + 0.4e1 / 0.97e2 * (0.1e1 + eta) * (eta ^ 2 + 0.10e2 * eta + 0.45e2)) * (eta - 0.1e1) * cos((3 * g - h + 5 * f)) - 0.465e3 / 0.223e3 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 3 - 0.39e2 / 0.31e2 * eta ^ 2 - 0.243e3 / 0.31e2 * eta - 0.197e3 / 0.31e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.47e2 / 0.31e2 * eta ^ 2 + 0.259e3 / 0.31e2 * eta + 0.205e3 / 0.31e2) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 - 0.71e2 / 0.155e3 * eta ^ 2 - 0.307e3 / 0.155e3 * eta - 0.229e3 / 0.155e3) * (ci2 ^ 2) + 0.4e1 / 0.155e3 * (0.1e1 + eta) ^ 2) * Delta * (eta - 0.1e1) * sin((3 * g + h + 5 * f)) + 0.225e3 / 0.223e3 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2 - 0.14e2 / 0.5e1 * eta - 0.197e3 / 0.15e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.10e2 / 0.3e1 * eta + 0.41e2 / 0.3e1) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.74e2 / 0.75e2 * eta - 0.229e3 / 0.75e2) * (ci2 ^ 2) + 0.4e1 / 0.75e2 * eta + 0.4e1 / 0.75e2) * Delta * (eta - 0.1e1) ^ 2 * sin((g - h + 5 * f)) + 0.117e3 / 0.892e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((eta ^ 2 + 0.230e3 / 0.39e2 * eta + 0.1561e4 / 0.117e3) * (ci2 ^ 2) - 0.88e2 / 0.117e3 * eta - 0.88e2 / 0.117e3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) ^ 2 * cos((3 * g - h + 7 * f)) - 0.495e3 / 0.1784e4 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4 + 0.316e3 / 0.55e2 * eta ^ 3 - 0.4978e4 / 0.165e3 * eta ^ 2 - 0.28988e5 / 0.165e3 * eta - 0.26443e5 / 0.165e3) * (ci2 ^ 6) + (-eta ^ 4 - 0.356e3 / 0.55e2 * eta ^ 3 + 0.1154e4 / 0.33e2 * eta ^ 2 + 0.10684e5 / 0.55e2 * eta + 0.5719e4 / 0.33e2) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 + 0.4e1 / 0.3e1 * eta ^ 3 - 0.325e3 / 0.33e2 * eta ^ 2 - 0.4568e4 / 0.99e2 * eta - 0.37991e5 / 0.990e3) * (ci2 ^ 2) - 0.2e1 / 0.33e2 * (eta ^ 2 - 0.42e2 / 0.5e1 * eta - 0.281e3 / 0.15e2) * (0.1e1 + eta)) * (eta - 0.1e1) ^ 2 * cos((g - h + 5 * f)) + 0.3e1 / 0.1784e4 * (0.1e1 + eta) ^ 3 * ((eta ^ 2 - 0.246e3 * eta - 0.223e3) * (ci2 ^ 6) + (-eta ^ 2 + 0.238e3 * eta + 0.215e3) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 - 0.55e2 * eta - 0.307e3 / 0.6e1) * (ci2 ^ 2) - 0.2e1 / 0.3e1 * eta - 0.2e1 / 0.3e1) * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * cos((-g + h + 3 * f)) - 0.975e3 / 0.1784e4 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4 - 0.1004e4 / 0.325e3 * eta ^ 3 + 0.1966e4 / 0.325e3 * eta ^ 2 + 0.2164e4 / 0.65e2 * eta + 0.7509e4 / 0.325e3) * (ci2 ^ 6) + (-eta ^ 4 + 0.788e3 / 0.325e3 * eta ^ 3 - 0.3254e4 / 0.325e3 * eta ^ 2 - 0.2556e4 / 0.65e2 * eta - 0.8397e4 / 0.325e3) * (ci2 ^ 4) + (eta ^ 4 / 0.6e1 - 0.196e3 / 0.325e3 * eta ^ 3 + 0.157e3 / 0.39e2 * eta ^ 2 + 0.3976e4 / 0.325e3 * eta + 0.14489e5 / 0.1950e4) * (ci2 ^ 2) - 0.18e2 / 0.325e3 * (0.1e1 + eta) * (eta ^ 2 + 0.62e2 / 0.9e1 * eta + 0.163e3 / 0.27e2)) * (eta - 0.1e1) ^ 2 * cos((-3 * g - h + f)) - 0.81e2 / 0.446e3 * ((eta ^ 5 + 0.61e2 / 0.9e1 * eta ^ 4 + 0.44e2 / 0.81e2 * eta ^ 3 - 0.2072e4 / 0.81e2 * eta ^ 2 - 0.1165e4 / 0.81e2 * eta + 0.241e3 / 0.27e2) * (ci2 ^ 2) - 0.92e2 / 0.81e2 * (0.1e1 + eta) * (eta ^ 3 - 0.15e2 / 0.23e2 * eta ^ 2 - 0.59e2 / 0.23e2 * eta + 0.11e2 / 0.23e2)) * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 3 * f)) + 0.45e2 / 0.1784e4 * ((eta ^ 2 + 0.274e3 / 0.15e2 * eta + 0.223e3 / 0.15e2) * (ci2 ^ 6) + (-eta ^ 2 - 0.266e3 / 0.15e2 * eta - 0.43e2 / 0.3e1) * (ci2 ^ 4) + (eta ^ 2 / 0.6e1 + 0.179e3 / 0.45e2 * eta + 0.307e3 / 0.90e2) * (ci2 ^ 2) + 0.2e1 / 0.45e2 * eta + 0.2e1 / 0.45e2) * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 3 * f)) - 0.1170e4 / 0.223e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.31e2 / 0.3e1 * eta ^ 4 + 0.172e3 / 0.39e2 * eta ^ 3 - 0.544e3 / 0.39e2 * eta ^ 2 - 0.19e2 / 0.39e2 * eta + 0.317e3 / 0.39e2) * (ci2 ^ 6) + (-eta ^ 5 - 0.479e3 / 0.39e2 * eta ^ 4 - 0.236e3 / 0.39e2 * eta ^ 3 + 0.216e3 / 0.13e2 * eta ^ 2 + 0.17e2 / 0.13e2 * eta - 0.29e2 / 0.3e1) * (ci2 ^ 4) + (eta ^ 5 / 0.5e1 + 0.707e3 / 0.195e3 * eta ^ 4 + 0.428e3 / 0.195e3 * eta ^ 3 - 0.64e2 / 0.13e2 * eta ^ 2 - 0.49e2 / 0.65e2 * eta + 0.557e3 / 0.195e3) * (ci2 ^ 2) - 0.38e2 / 0.195e3 * (0.1e1 + eta) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * (ci2 - 1) * (ci2 + 1) * Delta * sin((g - h + f)) + (0.3e1 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.15e2 / 0.2e1 * eta + 0.146e3 / 0.3e1) * (ci2 ^ 2) - eta - 0.1e1) * cos((3 * g - h + 8 * f)) + 0.101e3 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 4 + 0.638e3 / 0.101e3 * eta ^ 3 + 0.1006e4 / 0.101e3 * eta ^ 2 + 0.744e3 / 0.101e3 * eta + 0.341e3 / 0.101e3) * (ci2 ^ 2) - 0.98e2 / 0.101e3 * (0.1e1 + eta) * (eta ^ 2 + 0.55e2 / 0.49e2 * eta + 0.24e2 / 0.49e2)) * cos((5 * g + h + 2 * f)) + 0.9e1 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 3 - 0.11e2 / 0.6e1 * eta ^ 2 - 0.313e3 / 0.18e2 * eta - 0.146e3 / 0.9e1) * (ci2 ^ 2) + (0.1e1 + eta) ^ 2 / 0.3e1) * cos((5 * g + h + 8 * f)) + 0.3e1 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 3 + 0.71e2 / 0.6e1 * eta ^ 2 + 0.115e3 / 0.6e1 * eta + 0.10e2 / 0.3e1) * (ci2 ^ 2) - 0.5e1 / 0.3e1 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * cos((3 * g - h)) - 0.1440e4 / 0.223e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 2 - 0.8e1 / 0.3e1 * eta - 0.67e2 / 0.12e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.19e2 / 0.6e1 * eta + 0.73e2 / 0.12e2) * (ci2 ^ 4) + (eta ^ 2 / 0.5e1 - 0.14e2 / 0.15e2 * eta - 0.91e2 / 0.60e2) * (ci2 ^ 2) + eta / 0.20e2 + 0.1e1 / 0.20e2) * Delta * (eta - 0.1e1) * sin((g - h + 4 * f)) + 0.8e1 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) * ((eta ^ 4 + eta ^ 3 - 0.79e2 / 0.4e1 * eta ^ 2 - 0.273e3 / 0.4e1 * eta - 0.309e3 / 0.4e1) * (ci2 ^ 2) - eta ^ 3 / 0.4e1 + 0.33e2 / 0.4e1 * eta + 0.8e1) * cos((3 * g - h + 6 * f)) - 0.1680e4 / 0.223e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 0.1e1) * ((eta ^ 4 + 0.50e2 / 0.7e1 * eta ^ 3 + 0.100e3 / 0.7e1 * eta ^ 2 + 0.39e2 / 0.7e1 * eta - 0.29e2 / 0.14e2) * (ci2 ^ 6) + (-eta ^ 4 - 0.58e2 / 0.7e1 * eta ^ 3 - 0.116e3 / 0.7e1 * eta ^ 2 - 0.44e2 / 0.7e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 4 + 0.89e2 / 0.35e2 * eta ^ 3 + 0.176e3 / 0.35e2 * eta ^ 2 + 0.13e2 / 0.7e1 * eta - 0.53e2 / 0.70e2) * (ci2 ^ 2) - 0.2e1 / 0.15e2 * (eta ^ 2 + eta - 0.9e1 / 0.28e2) * (0.1e1 + eta)) * sin((3 * g + h)) - 0.3e1 / 0.223e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 3 * (0.1e1 + eta) ^ 3 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 10 * f)) + 0.150e3 / 0.223e3 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.34e2 / 0.25e2 * eta - 0.219e3 / 0.50e2) * (ci2 ^ 6) + (-eta ^ 2 + 0.44e2 / 0.25e2 * eta + 0.47e2 / 0.10e2) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 2 - 0.46e2 / 0.75e2 * eta - 0.383e3 / 0.300e3) * (ci2 ^ 2) + 0.7e1 / 0.150e3 * eta + 0.1e1 / 0.25e2) * cos((-3 * g - h + 2 * f)) - 0.13e2 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((eta ^ 5 + 0.79e2 / 0.13e2 * eta ^ 4 - 0.132e3 / 0.13e2 * eta ^ 3 - 0.402e3 / 0.13e2 * eta ^ 2 + 0.125e3 / 0.13e2 * eta + 0.341e3 / 0.13e2) * (ci2 ^ 2) - 0.18e2 / 0.13e2 * (0.1e1 + eta) * (eta ^ 3 - 0.2e1 / 0.3e1 * eta ^ 2 - 0.31e2 / 0.9e1 * eta + 0.8e1 / 0.3e1)) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 2 * f)) + 0.720e3 / 0.223e3 * (0.1e1 + eta) * ((eta ^ 5 + 0.7e1 * eta ^ 4 + 0.22e2 / 0.3e1 * eta ^ 3 - 0.21e2 * eta ^ 2 - 0.173e3 / 0.6e1 * eta - 0.29e2 / 0.6e1) * (ci2 ^ 6) + (-eta ^ 5 - 0.25e2 / 0.3e1 * eta ^ 4 - 0.26e2 / 0.3e1 * eta ^ 3 + 0.74e2 / 0.3e1 * eta ^ 2 + 0.67e2 / 0.2e1 * eta + 0.35e2 / 0.6e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 5 + 0.239e3 / 0.90e2 * eta ^ 4 + 0.8e1 / 0.3e1 * eta ^ 3 - 0.113e3 / 0.15e2 * eta ^ 2 - 0.99e2 / 0.10e2 * eta - 0.53e2 / 0.30e2) * (ci2 ^ 2) - 0.7e1 / 0.45e2 * (0.1e1 + eta) * (eta ^ 3 - 0.37e2 / 0.14e2 * eta - 0.9e1 / 0.14e2)) * (ci2 - 1) * (ci2 + 1) * Delta * sin((g - h)) + 0.2880e4 / 0.223e3 * (0.1e1 + eta) * ((eta ^ 3 - 0.7e1 / 0.6e1 * eta ^ 2 - 0.101e3 / 0.24e2 * eta - 0.67e2 / 0.24e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.17e2 / 0.12e2 * eta ^ 2 + 0.113e3 / 0.24e2 * eta + 0.73e2 / 0.24e2) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 - 0.13e2 / 0.30e2 * eta ^ 2 - 0.149e3 / 0.120e3 * eta - 0.91e2 / 0.120e3) * (ci2 ^ 2) + (0.1e1 + eta) ^ 2 / 0.40e2) * (ci2 - 1) * (ci2 + 1) * Delta * sin((3 * g + h + 4 * f)) - 0.8e1 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5 - 0.153e3 / 0.8e1 * eta ^ 4 - 0.551e3 / 0.8e1 * eta ^ 3 - 0.191e3 / 0.8e1 * eta ^ 2 + 0.271e3 / 0.8e1 * eta - 0.4e1) * (ci2 ^ 2) + 0.7e1 / 0.2e1 * eta ^ 4 + 0.17e2 / 0.4e1 * eta ^ 3 + 0.7e1 / 0.4e1 * eta ^ 2 + 0.13e2 / 0.4e1 * eta + 0.25e2 / 0.4e1) * cos((5 * g + h + 4 * f)) - 0.32e2 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta ^ 5 + 0.13e2 / 0.4e1 * eta ^ 4 + 0.75e2 / 0.16e2 * eta ^ 3 - 0.85e2 / 0.8e1 * eta ^ 2 - 0.97e2 / 0.4e1 * eta - 0.309e3 / 0.16e2) * (ci2 ^ 2) - 0.9e1 / 0.16e2 * eta ^ 4 - 0.11e2 / 0.16e2 * eta ^ 3 + 0.29e2 / 0.16e2 * eta ^ 2 + 0.63e2 / 0.16e2 * eta + 0.2e1) * cos((5 * g + h + 6 * f)) + 0.126e3 / 0.223e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 4 + 0.86e2 / 0.63e2 * eta ^ 3 - 0.3215e4 / 0.126e3 * eta ^ 2 - 0.3506e4 / 0.63e2 * eta - 0.4279e4 / 0.126e3) * (ci2 ^ 6) + (-eta ^ 4 - 0.20e2 / 0.21e2 * eta ^ 3 + 0.3503e4 / 0.126e3 * eta ^ 2 + 0.3716e4 / 0.63e2 * eta + 0.4463e4 / 0.126e3) * (ci2 ^ 4) + (0.23e2 / 0.126e3 * eta ^ 4 - 0.10e2 / 0.63e2 * eta ^ 3 - 0.1637e4 / 0.252e3 * eta ^ 2 - 0.88e2 / 0.7e1 * eta - 0.1793e4 / 0.252e3) * (ci2 ^ 2) + 0.5e1 / 0.126e3 * (0.1e1 + eta) ^ 2 * (eta + 0.16e2 / 0.5e1)) * (eta - 0.1e1) * cos((3 * g + h + 6 * f)) - 0.8e1 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) * ((eta ^ 5 + 0.71e2 / 0.8e1 * eta ^ 4 + 0.109e3 / 0.8e1 * eta ^ 3 - 0.527e3 / 0.8e1 * eta ^ 2 - 0.821e3 / 0.8e1 * eta - 0.4e1) * (ci2 ^ 2) - 0.3e1 / 0.2e1 * eta ^ 4 - 0.3e1 / 0.4e1 * eta ^ 3 + 0.31e2 / 0.4e1 * eta ^ 2 + 0.37e2 / 0.4e1 * eta + 0.25e2 / 0.4e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 4 * f)) - 0.30e2 / 0.223e3 * (0.1e1 + eta) ^ 2 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 3 - 0.13e2 * eta ^ 2 - 0.373e3 / 0.10e2 * eta - 0.219e3 / 0.10e2) * (ci2 ^ 6) + (-eta ^ 3 + 0.15e2 * eta ^ 2 + 0.409e3 / 0.10e2 * eta + 0.47e2 / 0.2e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * eta ^ 3 - 0.137e3 / 0.30e2 * eta ^ 2 - 0.231e3 / 0.20e2 * eta - 0.383e3 / 0.60e2) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta ^ 2 + 0.13e2 / 0.30e2 * eta + 0.1e1 / 0.5e1) * cos((-g + h + 2 * f)) - 0.22e2 / 0.223e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 3 - 0.109e3 / 0.11e2 * eta ^ 2 - 0.3127e4 / 0.22e2 * eta - 0.389e3 / 0.2e1) * (ci2 ^ 6) + (-eta ^ 3 + 0.135e3 / 0.11e2 * eta ^ 2 + 0.3363e4 / 0.22e2 * eta + 0.4463e4 / 0.22e2) * (ci2 ^ 4) + (0.3e1 / 0.22e2 * eta ^ 3 - 0.87e2 / 0.22e2 * eta ^ 2 - 0.1509e4 / 0.44e2 * eta - 0.163e3 / 0.4e1) * (ci2 ^ 2) + 0.5e1 / 0.22e2 * eta ^ 2 + 0.21e2 / 0.22e2 * eta + 0.8e1 / 0.11e2) * (eta - 0.1e1) ^ 2 * cos((g - h + 6 * f)) + 0.660e3 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * sin((3 * g + h + 6 * f)) - 0.660e3 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((g - h + 6 * f)) + 0.60e2 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 2 * sin((-3 * g - h + 2 * f)) - 0.60e2 / 0.223e3 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 - 1) * (ci2 + 1) * Delta * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) * sin((-g + h + 2 * f)) + 0.5e1 / 0.223e3 * (0.1e1 + eta) ^ 3 * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * (eta - 0.1e1) ^ 2 * cos((g + h + 6 * f)) - 0.5e1 / 0.223e3 * (0.1e1 + eta) ^ 2 * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * (eta - 0.1e1) ^ 3 * cos((-g - h + 6 * f)) + 0.227e3 / 0.223e3 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 5 + 0.3575e4 / 0.454e3 * eta ^ 4 + 0.3597e4 / 0.227e3 * eta ^ 3 - 0.5424e4 / 0.227e3 * eta ^ 2 - 0.21736e5 / 0.227e3 * eta - 0.28887e5 / 0.454e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.3975e4 / 0.454e3 * eta ^ 4 - 0.4389e4 / 0.227e3 * eta ^ 3 + 0.5640e4 / 0.227e3 * eta ^ 2 + 0.24296e5 / 0.227e3 * eta + 0.32391e5 / 0.454e3) * (ci2 ^ 4) + (0.91e2 / 0.454e3 * eta ^ 5 + 0.1945e4 / 0.908e3 * eta ^ 4 + 0.2387e4 / 0.454e3 * eta ^ 3 - 0.1228e4 / 0.227e3 * eta ^ 2 - 0.5805e4 / 0.227e3 * eta - 0.15409e5 / 0.908e3) * (ci2 ^ 2) - 0.18e2 / 0.227e3 * (0.1e1 + eta) * (eta ^ 3 + 0.26e2 / 0.9e1 * eta ^ 2 - 0.34e2 / 0.9e1 * eta - 0.74e2 / 0.9e1)) * cos((g - h + 4 * f)) + (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta ^ 5 + 0.2717e4 / 0.446e3 * eta ^ 4 + 0.3833e4 / 0.223e3 * eta ^ 3 + 0.232e3 / 0.223e3 * eta ^ 2 - 0.8100e4 / 0.223e3 * eta - 0.12133e5 / 0.446e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.3213e4 / 0.446e3 * eta ^ 4 - 0.4281e4 / 0.223e3 * eta ^ 3 - 0.136e3 / 0.223e3 * eta ^ 2 + 0.9124e4 / 0.223e3 * eta + 0.13589e5 / 0.446e3) * (ci2 ^ 4) + (0.103e3 / 0.446e3 * eta ^ 5 + 0.2107e4 / 0.892e3 * eta ^ 4 + 0.2519e4 / 0.446e3 * eta ^ 3 - 0.232e3 / 0.223e3 * eta ^ 2 - 0.2927e4 / 0.223e3 * eta - 0.7979e4 / 0.892e3) * (ci2 ^ 2) - 0.30e2 / 0.223e3 * (0.1e1 + eta) * (eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.8e1 / 0.5e1 * eta - 0.16e2 / 0.5e1)) * cos((g - h)) + 0.273e3 / 0.223e3 * (ci2 - 1) * (ci2 + 1) * (eta - 0.1e1) * ((eta ^ 5 + 0.4283e4 / 0.546e3 * eta ^ 4 + 0.103e3 / 0.7e1 * eta ^ 3 + 0.6740e4 / 0.273e3 * eta ^ 2 + 0.10730e5 / 0.273e3 * eta + 0.12133e5 / 0.546e3) * (ci2 ^ 6) + (-eta ^ 5 - 0.4747e4 / 0.546e3 * eta ^ 4 - 0.4769e4 / 0.273e3 * eta ^ 3 - 0.8228e4 / 0.273e3 * eta ^ 2 - 0.4142e4 / 0.91e2 * eta - 0.13589e5 / 0.546e3) * (ci2 ^ 4) + (0.137e3 / 0.546e3 * eta ^ 5 + 0.379e3 / 0.156e3 * eta ^ 4 + 0.933e3 / 0.182e3 * eta ^ 3 + 0.2666e4 / 0.273e3 * eta ^ 2 + 0.3868e4 / 0.273e3 * eta + 0.7979e4 / 0.1092e4) * (ci2 ^ 2) - 0.2e1 / 0.21e2 * (eta ^ 3 + 0.31e2 / 0.13e2 * eta ^ 2 + 0.64e2 / 0.13e2 * eta + 0.48e2 / 0.13e2) * (0.1e1 + eta)) * cos((3 * g + h)) + 0.400e3 / 0.223e3 * ((eta ^ 3 + 0.27e2 / 0.5e1 * eta ^ 2 + 0.308e3 / 0.5e1) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 - 0.12e2 * eta ^ 2 - 0.672e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 3 + 0.153e3 / 0.25e2 * eta ^ 2 + 0.564e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 3 + 0.18e2 / 0.25e2 * eta ^ 2 - 0.216e3 / 0.5e1) * (ci2 ^ 2) - eta ^ 3 / 0.10e2 - 0.27e2 / 0.50e2 * eta ^ 2 + 0.6e1) * (0.1e1 + eta) ^ 2 * eta * Delta * sin((g + h)) + 0.4e1 / 0.223e3 * ((0.2100e4 * eta ^ 3 + 0.9454e4 * eta ^ 2 + 0.6890e4 * eta - 0.242e3 * eta ^ 5 - 0.2659e4 / 0.2e1 * eta ^ 4 + eta ^ 6 + 0.1077e4 / 0.2e1) * (ci2 ^ 6) + (-0.1521e4 / 0.2e1 + 0.286e3 * eta ^ 5 + 0.2883e4 / 0.2e1 * eta ^ 4 - 0.2586e4 * eta ^ 3 - eta ^ 6 - 0.7864e4 * eta - 0.10760e5 * eta ^ 2) * (ci2 ^ 4) + (-0.109e3 * eta ^ 5 - 0.1505e4 / 0.4e1 * eta ^ 4 + 0.975e3 * eta ^ 3 + 0.2034e4 * eta + 0.607e3 / 0.4e1 + 0.3114e4 * eta ^ 2 - 0.7e1 / 0.2e1 * eta ^ 6) * (ci2 ^ 2) - 0.129e3 / 0.2e1 * eta ^ 3 - 0.305e3 / 0.2e1 * eta ^ 2 + 0.7e1 * eta ^ 5 + 0.15e2 * eta ^ 4 - 0.177e3 / 0.2e1 * eta - 0.17e2 / 0.2e1) * (ci2 - 1) * (ci2 + 1) * cos((g - h + 2 * f)) - 0.164e3 / 0.223e3 * ((-0.208e3 / 0.41e2 * eta ^ 3 + 0.5968e4 / 0.41e2 * eta ^ 2 + 0.3512e4 / 0.41e2 * eta - 0.212e3 / 0.41e2 * eta ^ 5 - 0.4013e4 / 0.82e2 * eta ^ 4 + eta ^ 6 - 0.1077e4 / 0.82e2) * (ci2 ^ 6) + (0.1521e4 / 0.82e2 + 0.272e3 / 0.41e2 * eta ^ 5 + 0.4325e4 / 0.82e2 * eta ^ 4 - 0.94e2 / 0.41e2 * eta ^ 3 - eta ^ 6 - 0.3742e4 / 0.41e2 * eta - 0.6818e4 / 0.41e2 * eta ^ 2) * (ci2 ^ 4) + (-0.146e3 / 0.41e2 * eta ^ 5 - 0.2471e4 / 0.164e3 * eta ^ 4 + 0.9e1 * eta ^ 3 + 0.1277e4 / 0.41e2 * eta - 0.607e3 / 0.164e3 + 0.2331e4 / 0.41e2 * eta ^ 2 + eta ^ 6 / 0.82e2) * (ci2 ^ 2) + 0.11e2 / 0.41e2 * (eta ^ 4 + 0.15e2 / 0.11e2 * eta ^ 3 - 0.123e3 / 0.22e2 * eta ^ 2 - 0.75e2 / 0.11e2 * eta + 0.17e2 / 0.22e2) * (0.1e1 + eta)) * (ci2 - 1) * (ci2 + 1) * cos((3 * g + h + 2 * f)) - 0.451e3 / 0.223e3 * (ci2 - 1) * (ci2 + 1) * ((0.1615e4 / 0.451e3 * eta ^ 3 - 0.22042e5 / 0.451e3 * eta ^ 2 - 0.5513e4 / 0.82e2 * eta + 0.6805e4 / 0.902e3 * eta ^ 5 + 0.18773e5 / 0.902e3 * eta ^ 4 + eta ^ 6 - 0.28887e5 / 0.902e3) * (ci2 ^ 6) + (0.32391e5 / 0.902e3 - 0.7621e4 / 0.902e3 * eta ^ 5 - 0.21749e5 / 0.902e3 * eta ^ 4 - 0.1871e4 / 0.451e3 * eta ^ 3 - eta ^ 6 + 0.69779e5 / 0.902e3 * eta + 0.25682e5 / 0.451e3 * eta ^ 2) * (ci2 ^ 4) + (0.3847e4 / 0.1804e4 * eta ^ 5 + 0.11147e5 / 0.1804e4 * eta ^ 4 + 0.713e3 / 0.902e3 * eta ^ 3 - 0.35209e5 / 0.1804e4 * eta - 0.15409e5 / 0.1804e4 - 0.6736e4 / 0.451e3 * eta ^ 2 + 0.17e2 / 0.82e2 * eta ^ 6) * (ci2 ^ 2) - 0.38e2 / 0.451e3 * (0.1e1 + eta) * (eta ^ 4 + 0.47e2 / 0.19e2 * eta ^ 3 - 0.36e2 / 0.19e2 * eta ^ 2 - 0.120e3 / 0.19e2 * eta - 0.74e2 / 0.19e2)) * cos((3 * g + h + 4 * f)) + 0.20e2 / 0.223e3 * (0.1e1 + eta) * ((0.929e3 / 0.10e2 + 0.2751e4 / 0.20e2 * eta + eta ^ 4 - 0.251e3 / 0.20e2 * eta ^ 3 + 0.91e2 / 0.2e1 * eta ^ 2) * (ci2 ^ 8) + (0.128e3 / 0.5e1 * eta ^ 3 - 0.967e3 / 0.10e2 * eta ^ 2 - 0.288e3 * eta - 0.2e1 * eta ^ 4 - 0.385e3 / 0.2e1) * (ci2 ^ 6) + (0.717e3 / 0.5e1 + 0.3e1 / 0.5e1 * eta ^ 4 - 0.333e3 / 0.20e2 * eta ^ 3 + 0.4473e4 / 0.20e2 * eta + 0.411e3 / 0.5e1 * eta ^ 2) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 4 + 0.7e1 / 0.2e1 * eta ^ 3 - 0.759e3 / 0.10e2 * eta - 0.451e3 / 0.10e2 - 0.65e2 / 0.2e1 * eta ^ 2) * (ci2 ^ 2) - eta ^ 3 / 0.8e1 + 0.197e3 / 0.40e2 + 0.35e2 / 0.8e1 * eta ^ 2 - eta ^ 4 / 0.10e2 + 0.357e3 / 0.40e2 * eta) * (eta - 0.1e1) * cos((g + h + 4 * f)) - 0.20e2 / 0.223e3 * ((eta ^ 3 - 0.241e3 / 0.20e2 * eta ^ 2 + 0.161e3 / 0.4e1 * eta + 0.929e3 / 0.10e2) * (ci2 ^ 8) + (-0.2e1 * eta ^ 3 + 0.123e3 / 0.5e1 * eta ^ 2 - 0.867e3 / 0.10e2 * eta - 0.385e3 / 0.2e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta ^ 3 - 0.327e3 / 0.20e2 * eta ^ 2 + 0.1473e4 / 0.20e2 * eta + 0.717e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 3 + 0.37e2 / 0.10e2 * eta ^ 2 - 0.143e3 / 0.5e1 * eta - 0.451e3 / 0.10e2) * (ci2 ^ 2) - eta ^ 3 / 0.10e2 - 0.7e1 / 0.40e2 * eta ^ 2 + 0.15e2 / 0.4e1 * eta + 0.197e3 / 0.40e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-g - h + 4 * f)) + 0.17e2 / 0.223e3 * (ci2 ^ 2) * (0.1e1 + eta) ^ 2 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 - 0.15e2 / 0.34e2 * eta - 0.10e2 / 0.17e2) * (ci2 ^ 2) + 0.5e1 / 0.17e2 * eta + 0.5e1 / 0.17e2) * cos((5 * g + h)) + 0.75e2 / 0.223e3 * ((0.488e3 / 0.5e1 + 0.2019e4 / 0.25e2 * eta + eta ^ 5 + 0.34e2 / 0.25e2 * eta ^ 4 - 0.4672e4 / 0.75e2 * eta ^ 3 - 0.6106e4 / 0.75e2 * eta ^ 2) * (ci2 ^ 8) + (0.3276e4 / 0.25e2 * eta ^ 3 + 0.12992e5 / 0.75e2 * eta ^ 2 - 0.12998e5 / 0.75e2 * eta - 0.2e1 * eta ^ 5 - 0.344e3 / 0.75e2 * eta ^ 4 - 0.3136e4 / 0.15e2) * (ci2 ^ 6) + (0.841e3 / 0.5e1 + 0.3e1 / 0.5e1 * eta ^ 5 - 0.59e2 / 0.25e2 * eta ^ 4 - 0.2878e4 / 0.25e2 * eta ^ 3 + 0.731e3 / 0.5e1 * eta - 0.3418e4 / 0.25e2 * eta ^ 2) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta ^ 5 + 0.149e3 / 0.25e2 * eta ^ 4 + 0.3698e4 / 0.75e2 * eta ^ 3 - 0.1436e4 / 0.25e2 * eta - 0.301e3 / 0.5e1 + 0.3536e4 / 0.75e2 * eta ^ 2) * (ci2 ^ 2) - 0.1111e4 / 0.150e3 * eta ^ 3 - 0.424e3 / 0.75e2 * eta ^ 2 - eta ^ 5 / 0.10e2 - 0.147e3 / 0.100e3 * eta ^ 4 + 0.203e3 / 0.25e2 * eta + 0.461e3 / 0.60e2) * (eta - 0.1e1) * cos((-g - h + 2 * f)) + 0.39e2 / 0.223e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * cos((3 * g + h + 8 * f)) + 0.600e3 / 0.223e3 * ((eta ^ 3 + 0.132e3 / 0.5e1 * eta ^ 2 + 0.9e1 * eta - 0.122e3 / 0.5e1) * (ci2 ^ 6) + (-eta ^ 3 - 0.156e3 / 0.5e1 * eta ^ 2 - 0.57e2 / 0.5e1 * eta + 0.142e3 / 0.5e1) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 + 0.228e3 / 0.25e2 * eta ^ 2 + 0.93e2 / 0.25e2 * eta - 0.202e3 / 0.25e2) * (ci2 ^ 2) - 0.12e2 / 0.25e2 * eta ^ 2 - 0.6e1 / 0.25e2 * eta + 0.2e1 / 0.5e1) * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sin((g - h + 2 * f)) - 0.600e3 / 0.223e3 * (0.1e1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta ^ 3 + 0.44e2 * eta ^ 2 + 0.53e2 * eta + 0.122e3 / 0.5e1) * (ci2 ^ 6) + (-eta ^ 3 - 0.52e2 * eta ^ 2 - 0.317e3 / 0.5e1 * eta - 0.142e3 / 0.5e1) * (ci2 ^ 4) + (eta ^ 3 / 0.5e1 + 0.76e2 / 0.5e1 * eta ^ 2 + 0.473e3 / 0.25e2 * eta + 0.202e3 / 0.25e2) * (ci2 ^ 2) - 0.4e1 / 0.5e1 * eta ^ 2 - 0.26e2 / 0.25e2 * eta - 0.2e1 / 0.5e1) * sin((3 * g + h + 2 * f)) + 0.3e1 / 0.223e3 * (ci2 ^ 4) * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 4 * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((5 * g + h + 10 * f)) + ((-0.10988e5 / 0.223e3 - 0.18606e5 / 0.223e3 * eta - 0.570e3 / 0.223e3 * eta ^ 5 - 0.1224e4 / 0.223e3 * eta ^ 4 - 0.4520e4 / 0.223e3 * eta ^ 3 - 0.11116e5 / 0.223e3 * eta ^ 2 - 0.80e2 / 0.223e3 * eta ^ 6) * (ci2 ^ 8) + (0.9880e4 / 0.223e3 * eta ^ 3 + 0.24232e5 / 0.223e3 * eta ^ 2 + 0.40388e5 / 0.223e3 * eta + 0.1220e4 / 0.223e3 * eta ^ 5 + 0.2668e4 / 0.223e3 * eta ^ 4 + 0.160e3 / 0.223e3 * eta ^ 6 + 0.23852e5 / 0.223e3) * (ci2 ^ 6) + (-0.19800e5 / 0.223e3 - 0.534e3 / 0.223e3 * eta ^ 5 - 0.1236e4 / 0.223e3 * eta ^ 4 - 0.7176e4 / 0.223e3 * eta ^ 3 - 0.48e2 / 0.223e3 * eta ^ 6 - 0.33954e5 / 0.223e3 * eta - 0.20196e5 / 0.223e3 * eta ^ 2) * (ci2 ^ 4) + (-0.132e3 / 0.223e3 * eta ^ 5 - 0.252e3 / 0.223e3 * eta ^ 4 + 0.1920e4 / 0.223e3 * eta ^ 3 + 0.13108e5 / 0.223e3 * eta + 0.7452e4 / 0.223e3 + 0.7632e4 / 0.223e3 * eta ^ 2 - 0.32e2 / 0.223e3 * eta ^ 6) * (ci2 ^ 2) - 0.156e3 / 0.223e3 * eta ^ 3 - 0.1044e4 / 0.223e3 * eta ^ 2 + 0.57e2 / 0.223e3 * eta ^ 5 + 0.127e3 / 0.223e3 * eta ^ 4 - 0.1829e4 / 0.223e3 * eta - 0.1011e4 / 0.223e3 + 0.8e1 / 0.223e3 * eta ^ 6) * cos((g + h)) + ((-0.7320e4 / 0.223e3 - 0.18793e5 / 0.223e3 * eta - 0.77e2 / 0.223e3 * eta ^ 5 + 0.4518e4 / 0.223e3 * eta ^ 4 + 0.2582e4 / 0.223e3 * eta ^ 3 - 0.13987e5 / 0.223e3 * eta ^ 2 - 0.75e2 / 0.223e3 * eta ^ 6) * (ci2 ^ 8) + (-0.5588e4 / 0.223e3 * eta ^ 3 + 0.30070e5 / 0.223e3 * eta ^ 2 + 0.40462e5 / 0.223e3 * eta + 0.294e3 / 0.223e3 * eta ^ 5 - 0.9580e4 / 0.223e3 * eta ^ 4 + 0.150e3 / 0.223e3 * eta ^ 6 + 0.15680e5 / 0.223e3) * (ci2 ^ 6) + (-0.12615e5 / 0.223e3 + 0.192e3 / 0.223e3 * eta ^ 5 + 0.8283e4 / 0.223e3 * eta ^ 4 + 0.4080e4 / 0.223e3 * eta ^ 3 - 0.45e2 / 0.223e3 * eta ^ 6 - 0.33360e5 / 0.223e3 * eta - 0.25479e5 / 0.223e3 * eta ^ 2) * (ci2 ^ 4) + (-0.437e3 / 0.223e3 * eta ^ 5 - 0.3429e4 / 0.223e3 * eta ^ 4 - 0.1102e4 / 0.223e3 * eta ^ 3 + 0.12467e5 / 0.223e3 * eta + 0.4515e4 / 0.223e3 + 0.10064e5 / 0.223e3 * eta ^ 2 - 0.30e2 / 0.223e3 * eta ^ 6) * (ci2 ^ 2) + 0.157e3 / 0.446e3 * eta ^ 3 - 0.1424e4 / 0.223e3 * eta ^ 2 + 0.431e3 / 0.892e3 * eta ^ 5 + 0.2003e4 / 0.892e3 * eta ^ 4 - 0.6649e4 / 0.892e3 * eta - 0.2305e4 / 0.892e3 + 0.15e2 / 0.446e3 * eta ^ 6) * cos((g + h + 2 * f)) + 0.15e2 / 0.223e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 2 * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (eta - 0.1e1) ^ 3 * cos((-3 * g - h + 4 * f)) - 0.39e2 / 0.223e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * cos((g - h + 8 * f)) - 0.15e2 / 0.223e3 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 3 * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (eta - 0.1e1) ^ 2 * cos((-g + h + 4 * f))) * sqrt(-eta ^ 2 + 0.1e1) + 0.105e3 / 0.1784e4 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * cos((g - h + 9 * f)) - 0.105e3 / 0.1784e4 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * cos((3 * g + h + 9 * f)) + 0.9e1 / 0.1784e4 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 4 * cos((-3 * g - h + 5 * f)) - 0.9e1 / 0.1784e4 * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 - 1) * (ci2 + 1) * (0.1e1 + eta) ^ 4 * (eta - 0.1e1) ^ 3 * cos((-g + h + 5 * f))) / a ^ 4 / eta ^ 11];
D3 = [-0.15e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * J ^ 2 * ((-ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * cos((-h + 3 * f + 2 * g)) / 0.40e2 + 0.3e1 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 5 * f + 2 * g)) + Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * sin((-h + 3 * f + 2 * g)) + ((0.181e3 / 0.40e2 + 0.3e1 / 0.40e2 * eta ^ 2 + 0.5e1 / 0.2e1 * eta) * ci2 ^ 4 + (-0.181e3 / 0.40e2 - 0.3e1 / 0.40e2 * eta ^ 2 - 0.5e1 / 0.2e1 * eta) * ci2 ^ 2 + eta ^ 2 / 0.120e3 + 0.4e1 / 0.15e2 * eta + 0.59e2 / 0.120e3) * cos((h + 3 * f + 2 * g)) - 0.3e1 / 0.8e1 * ci2 ^ 2 * (eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + f + 2 * g)) + 0.9e1 / 0.40e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) * cos((-h - 2 * g + f)) - 0.9e1 / 0.40e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) * cos((h + 5 * f + 2 * g)) - 0.3e1 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((h + 3 * f + 2 * g)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * cos((h + 3 * f + 4 * g)) / 0.5e1 + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * cos((h + 5 * f + 4 * g)) / 0.5e1 + 0.3e1 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * sin((-h + f + 2 * g)) - 0.3e1 / 0.10e2 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-h + 3 * f)) + ((-0.153e3 / 0.10e2 * eta - 0.693e3 / 0.40e2 + 0.9e1 / 0.8e1 * eta ^ 2) * ci2 ^ 4 + (0.693e3 / 0.40e2 - 0.9e1 / 0.8e1 * eta ^ 2 + 0.153e3 / 0.10e2 * eta) * ci2 ^ 2 + eta ^ 2 / 0.8e1 - 0.12e2 / 0.5e1 * eta - 0.21e2 / 0.8e1) * cos((h + f + 2 * g)) - 0.9e1 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((h + f + 2 * g)) - 0.3e1 / 0.40e2 * cos((h - 2 * g + f)) * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) + ((0.57e2 / 0.10e2 + 0.9e1 / 0.10e2 * eta ^ 2 + 0.3e1 * eta) * ci2 ^ 4 + (-0.57e2 / 0.10e2 - 0.9e1 / 0.10e2 * eta ^ 2 - 0.3e1 * eta) * ci2 ^ 2 + 0.3e1 / 0.20e2 * eta ^ 2 + 0.11e2 / 0.10e2 * eta + 0.31e2 / 0.20e2) * cos((-h + f)) + 0.3e1 / 0.10e2 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((h + 3 * f)) - 0.9e1 / 0.10e2 * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 4 + (-0.19e2 / 0.3e1 - eta ^ 2 - 0.10e2 / 0.3e1 * eta) * ci2 ^ 2 + eta ^ 2 / 0.6e1 + 0.11e2 / 0.9e1 * eta + 0.31e2 / 0.18e2) * cos((h + f))) * sqrt(-eta ^ 2 + 0.1e1) + (-ci2 ^ 2 * (eta ^ 2 - 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g + 2 * f)) / 0.10e2 + 0.13e2 / 0.40e2 * ci2 ^ 2 * (eta + 0.31e2 / 0.13e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-h + 2 * g + 4 * f)) + (0.3e1 * Delta * ci2 ^ 4 - 0.3e1 * Delta * ci2 ^ 2) * sin((-h + 2 * g + 2 * f)) + ((-0.21e2 / 0.10e2 + 0.3e1 / 0.10e2 * eta ^ 2) * ci2 ^ 4 + (0.21e2 / 0.10e2 - 0.3e1 / 0.10e2 * eta ^ 2) * ci2 ^ 2 + eta ^ 2 / 0.10e2 - 0.1e1 / 0.2e1) * cos((h + 2 * g + 2 * f)) - 0.39e2 / 0.40e2 * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.31e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.11e2 / 0.39e2) * (eta - 0.1e1) * cos((h + 2 * g + 4 * f)) + ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 2 * f + 4 * g)) / 0.4e1 + ci2 ^ 2 * (eta ^ 2 + 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * f + 4 * g)) / 0.20e2 - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 6 * f + 4 * g)) / 0.20e2 - 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((h + 2 * g + 2 * f)) + (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.7e1 / 0.5e1) * cos((-h + 2 * f)) / 0.4e1 + 0.3e1 / 0.2e1 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * g)) - (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.7e1 / 0.5e1) * cos((h + 2 * f)) / 0.4e1 + (-0.9e1 / 0.2e1 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.7e1 / 0.45e2) * sin((h + 2 * g)) + sin(h) * ((eta ^ 2 + 0.7e1) * ci2 ^ 4 + (-eta ^ 2 - 0.7e1) * ci2 ^ 2 - eta ^ 2 / 0.5e1 + 0.2e1)) * Delta) * (0.1e1 + eta)) / a ^ 5 / ci2 / eta ^ 8 / (0.1e1 + eta) -0.15e2 / 0.4e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * J ^ 2 * (-0.9e1 / 0.40e2 * (0.1e1 + eta) * (-(ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) * sin((-h + 3 * f - 2 * g)) / 0.4e1 + (0.10e2 / 0.3e1 * Delta * ci2 ^ 4 - 0.10e2 / 0.3e1 * Delta * ci2 ^ 2) * cos((-h + 5 * f + 2 * g)) - 0.5e1 / 0.12e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ci2 ^ 2 * sin((-h + 2 * g + 7 * f)) - 0.10e2 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((-h - 2 * g + f)) - 0.10e2 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + 5 * f + 2 * g)) + 0.5e1 / 0.4e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (eta - 0.1e1) * sin((h + 2 * g + 7 * f)) + (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ci2 ^ 2 * sin((h + 3 * f - 2 * g)) / 0.12e2 + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) * sin((-h + 5 * f)) + (0.10e2 / 0.3e1 * Delta * ci2 ^ 4 - 0.10e2 / 0.3e1 * Delta * ci2 ^ 2) * cos((h - 2 * g + f)) - (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) * sin((h + 5 * f))) * (-eta ^ 2 + 0.1e1) ^ (0.3e1 / 0.2e1) + (0.83e2 / 0.80e2 * ci2 ^ 2 * (eta ^ 4 + 0.266e3 / 0.83e2 * eta ^ 3 + 0.396e3 / 0.83e2 * eta ^ 2 - 0.610e3 / 0.83e2 * eta - 0.991e3 / 0.83e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 3 * f + 2 * g)) - 0.27e2 / 0.160e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-h + 5 * f + 2 * g)) + 0.9e1 / 0.4e1 * Delta * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 3 * f + 2 * g)) + 0.27e2 / 0.160e3 * (0.1e1 + eta) ^ 2 * ((eta - 0.37e2) * ci2 ^ 4 + (-eta + 0.37e2) * ci2 ^ 2 + eta / 0.9e1 - 0.163e3 / 0.27e2) * (eta - 0.1e1) * sin((-h - 2 * g + f)) + ((-0.297e3 / 0.20e2 * eta ^ 2 + 0.183e3 / 0.8e1 * eta - 0.249e3 / 0.80e2 * eta ^ 4 - 0.399e3 / 0.40e2 * eta ^ 3 + 0.2973e4 / 0.80e2) * ci2 ^ 4 + (0.297e3 / 0.20e2 * eta ^ 2 - 0.183e3 / 0.8e1 * eta + 0.249e3 / 0.80e2 * eta ^ 4 + 0.399e3 / 0.40e2 * eta ^ 3 - 0.2973e4 / 0.80e2) * ci2 ^ 2 + 0.303e3 / 0.80e2 - 0.33e2 / 0.80e2 * eta ^ 4 - eta ^ 3 + 0.11e2 / 0.5e1 * eta - 0.59e2 / 0.40e2 * eta ^ 2) * sin((h + 3 * f + 2 * g)) + 0.81e2 / 0.160e3 * ((eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.116e3 / 0.9e1 * eta + 0.269e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 - 0.128e3 / 0.81e2 * eta - 0.281e3 / 0.81e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 5 * f + 2 * g)) - 0.27e2 / 0.4e1 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + 3 * f + 2 * g)) + 0.51e2 / 0.16e2 * ci2 ^ 2 * (eta ^ 4 + 0.6e1 / 0.17e2 * eta ^ 3 - 0.12e2 / 0.17e2 * eta ^ 2 + 0.58e2 / 0.85e2 * eta + 0.71e2 / 0.85e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + f + 2 * g)) + 0.9e1 / 0.4e1 * Delta * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + f + 2 * g)) + 0.3e1 / 0.4e1 * (eta ^ 2 - 0.11e2 / 0.15e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 3 * f + 4 * g)) - 0.9e1 / 0.20e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 5 * f + 4 * g)) - 0.11e2 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g + 7 * f)) + 0.9e1 / 0.40e2 * ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h + 3 * f)) + ((-0.639e3 / 0.80e2 - 0.153e3 / 0.16e2 * eta ^ 4 - 0.27e2 / 0.8e1 * eta ^ 3 + 0.27e2 / 0.4e1 * eta ^ 2 - 0.261e3 / 0.40e2 * eta) * ci2 ^ 4 + (0.639e3 / 0.80e2 + 0.153e3 / 0.16e2 * eta ^ 4 + 0.27e2 / 0.8e1 * eta ^ 3 - 0.27e2 / 0.4e1 * eta ^ 2 + 0.261e3 / 0.40e2 * eta) * ci2 ^ 2 - 0.173e3 / 0.80e2 - 0.101e3 / 0.80e2 * eta ^ 4 + 0.53e2 / 0.40e2 * eta ^ 2 - 0.2e1 * eta) * sin((h + f + 2 * g)) - 0.27e2 / 0.4e1 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + f + 2 * g)) - 0.9e1 / 0.160e3 * ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.37e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h - 2 * g + f)) + 0.13e2 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g + f)) + ((-0.3e1 / 0.4e1 * eta ^ 3 - 0.21e2 / 0.4e1 * eta ^ 2 + 0.47e2 / 0.4e1 * eta + 0.203e3 / 0.10e2 - 0.9e1 / 0.20e2 * eta ^ 4) * ci2 ^ 4 + (0.3e1 / 0.4e1 * eta ^ 3 + 0.21e2 / 0.4e1 * eta ^ 2 - 0.47e2 / 0.4e1 * eta - 0.203e3 / 0.10e2 + 0.9e1 / 0.20e2 * eta ^ 4) * ci2 ^ 2 - 0.3e1 / 0.40e2 * eta ^ 4 - 0.9e1 / 0.8e1 * eta ^ 3 + 0.161e3 / 0.40e2 * eta + 0.109e3 / 0.20e2 - 0.15e2 / 0.8e1 * eta ^ 2) * sin((-h + f)) - 0.9e1 / 0.40e2 * ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 3 * f)) + 0.9e1 / 0.20e2 * sin((h + f)) * ((0.5e1 / 0.3e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.3e1 * eta ^ 2 - 0.235e3 / 0.9e1 * eta - 0.406e3 / 0.9e1) * ci2 ^ 4 + (-0.35e2 / 0.3e1 * eta ^ 2 - eta ^ 4 - 0.5e1 / 0.3e1 * eta ^ 3 + 0.235e3 / 0.9e1 * eta + 0.406e3 / 0.9e1) * ci2 ^ 2 + 0.25e2 / 0.6e1 * eta ^ 2 + eta ^ 4 / 0.6e1 + 0.5e1 / 0.2e1 * eta ^ 3 - 0.161e3 / 0.18e2 * eta - 0.109e3 / 0.9e1)) * sqrt(-eta ^ 2 + 0.1e1) + (0.9e1 / 0.8e1 * (0.1e1 + eta) * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-eta - 0.4e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta + 0.2e1 / 0.15e2) * (eta - 0.1e1) ^ 2 * sin((-h - 2 * g + 2 * f)) - 0.13e2 / 0.40e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.46e2 / 0.13e2) * sin((-h + 6 * f + 2 * g)) + 0.3e1 / 0.20e2 * ci2 ^ 2 * (eta ^ 4 + 0.20e2 * eta ^ 3 + 0.12e2 * eta ^ 2 + 0.12e2 * eta - 0.37e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * g + 2 * f)) - 0.3e1 / 0.5e1 * (eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-h + 2 * g + 4 * f)) + 0.9e1 * (eta ^ 2 - 0.5e1 / 0.3e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((-h + 2 * g + 2 * f)) + 0.9e1 / 0.2e1 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g + 4 * f)) + 0.39e2 / 0.40e2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((h + 6 * f + 2 * g)) + ((0.333e3 / 0.20e2 - 0.9e1 / 0.20e2 * eta ^ 4 - 0.9e1 * eta ^ 3 - 0.27e2 / 0.5e1 * eta ^ 2 - 0.27e2 / 0.5e1 * eta) * ci2 ^ 4 + (0.27e2 / 0.5e1 * eta - 0.333e3 / 0.20e2 + 0.9e1 / 0.20e2 * eta ^ 4 + 0.9e1 * eta ^ 3 + 0.27e2 / 0.5e1 * eta ^ 2) * ci2 ^ 2 - 0.3e1 / 0.20e2 * eta ^ 4 - 0.6e1 / 0.5e1 * eta ^ 3 + 0.3e1 / 0.10e2 * eta ^ 2 - 0.3e1 / 0.5e1 * eta + 0.17e2 / 0.20e2) * sin((h + 2 * g + 2 * f)) + 0.9e1 / 0.5e1 * ((eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 4 + (-eta ^ 3 - 0.3e1 * eta ^ 2 + 0.39e2 / 0.4e1 * eta + 0.73e2 / 0.4e1) * ci2 ^ 2 + eta ^ 3 / 0.9e1 + eta ^ 2 / 0.3e1 - 0.10e2 / 0.9e1 * eta - 0.37e2 / 0.18e2) * (eta - 0.1e1) * sin((h + 2 * g + 4 * f)) - 0.3e1 / 0.10e2 * ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 2 * f + 4 * g)) - 0.3e1 / 0.20e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.2e1 * eta ^ 2 - 0.25e2 / 0.3e1) * sin((h + 4 * f + 4 * g)) + ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.4e1) * (eta + 0.4e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 6 * f + 4 * g)) / 0.10e2 + 0.3e1 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 8 * f + 4 * g)) - 0.3e1 / 0.8e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.4e1 / 0.5e1) * sin((h - 2 * g + 2 * f)) - 0.27e2 * Delta * (eta ^ 2 - 0.5e1 / 0.3e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + 2 * g + 2 * f)) + (-0.27e2 / 0.2e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + 2 * g + 4 * f)) + ((0.13e2 / 0.10e2 * eta ^ 2 - 0.4e1 * eta - 0.13e2 - eta ^ 3 / 0.2e1) * ci2 ^ 4 + (-0.13e2 / 0.10e2 * eta ^ 2 + 0.4e1 * eta + 0.13e2 + eta ^ 3 / 0.2e1) * ci2 ^ 2 - 0.7e1 / 0.4e1 * eta + 0.2e1 / 0.5e1 * eta ^ 2 - 0.13e2 / 0.4e1 + eta ^ 3 / 0.10e2) * sin((-h + 2 * f)) - ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h + 4 * f)) / 0.8e1 + 0.3e1 / 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.23e2 / 0.15e2 * eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.79e2 / 0.30e2 * eta - 0.91e2 / 0.30e2) * sin((-h + 2 * g)) + 0.9e1 / 0.2e1 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * cos((-h + 2 * g)) + ((0.273e3 / 0.20e2 - 0.9e1 / 0.2e1 * eta ^ 4 - 0.69e2 / 0.10e2 * eta ^ 3 - 0.33e2 / 0.10e2 * eta ^ 2 + 0.237e3 / 0.20e2 * eta) * ci2 ^ 4 + (0.9e1 / 0.2e1 * eta ^ 4 - 0.273e3 / 0.20e2 + 0.69e2 / 0.10e2 * eta ^ 3 + 0.33e2 / 0.10e2 * eta ^ 2 - 0.237e3 / 0.20e2 * eta) * ci2 ^ 2 - eta ^ 2 / 0.2e1 + 0.12e2 / 0.5e1 - 0.7e1 / 0.10e2 * eta ^ 4 - 0.11e2 / 0.10e2 * eta ^ 3 + 0.11e2 / 0.5e1 * eta) * sin((h + 2 * g)) + ((-0.13e2 / 0.10e2 * eta ^ 2 + 0.4e1 * eta + 0.13e2 + eta ^ 3 / 0.2e1) * ci2 ^ 4 + (0.13e2 / 0.10e2 * eta ^ 2 - 0.4e1 * eta - 0.13e2 - eta ^ 3 / 0.2e1) * ci2 ^ 2 - 0.2e1 / 0.5e1 * eta ^ 2 - eta ^ 3 / 0.10e2 + 0.7e1 / 0.4e1 * eta + 0.13e2 / 0.4e1) * sin((h + 2 * f)) + ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 4 * f)) / 0.8e1 - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * g)) / 0.8e1 - 0.27e2 / 0.2e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + 2 * g)) + sin(h) * ((0.7e1 / 0.4e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.4e1 * eta ^ 2 + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * ci2 ^ 4 + (-eta ^ 4 - 0.7e1 / 0.4e1 * eta ^ 3 - 0.35e2 / 0.4e1 * eta ^ 2 - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * ci2 ^ 2 - eta ^ 4 / 0.5e1 - 0.7e1 / 0.20e2 * eta ^ 3 + 0.33e2 / 0.20e2 * eta ^ 2 + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2)) * (eta - 0.1e1)) * (0.1e1 + eta)) / a ^ 4 / ci2 / eta ^ 11 / (0.1e1 + eta) -0.135e3 / 0.4e1 * R__e ^ 4 * ((ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) / 0.120e3 + ((-eta ^ 2 / 0.40e2 - 0.5e1 / 0.6e1 * eta - 0.181e3 / 0.120e3) * ci2 ^ 8 + (eta ^ 2 / 0.24e2 + 0.25e2 / 0.18e2 * eta + 0.181e3 / 0.72e2) * ci2 ^ 6 + (-0.19e2 / 0.1080e4 * eta ^ 2 - 0.79e2 / 0.135e3 * eta - 0.229e3 / 0.216e3) * ci2 ^ 4 + 0.59e2 / 0.2160e4 + eta ^ 2 / 0.2160e4 + 0.2e1 / 0.135e3 * eta) * cos((2 * h + 3 * f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((-2 * h + 5 * f + 2 * g)) / 0.40e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 3 * f + 4 * g)) / 0.15e2 + 0.3e1 / 0.40e2 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * cos((2 * h + 5 * f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 5 * f + 4 * g)) / 0.15e2 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) / 0.3e1 + (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * sin((2 * h + 3 * f + 2 * g)) + ci2 ^ 2 * (eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + f + 2 * g)) / 0.8e1 + ((-0.3e1 / 0.8e1 * eta ^ 2 + 0.231e3 / 0.40e2 + 0.51e2 / 0.10e2 * eta) * ci2 ^ 8 + (0.5e1 / 0.8e1 * eta ^ 2 - 0.77e2 / 0.8e1 - 0.17e2 / 0.2e1 * eta) * ci2 ^ 6 + (0.497e3 / 0.120e3 - 0.19e2 / 0.72e2 * eta ^ 2 + 0.11e2 / 0.3e1 * eta) * ci2 ^ 4 - 0.7e1 / 0.48e2 - 0.2e1 / 0.15e2 * eta + eta ^ 2 / 0.144e3) * cos((2 * h + f + 2 * g)) - 0.3e1 / 0.40e2 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * cos((-2 * h - 2 * g + f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((2 * h - 2 * g + f)) / 0.40e2 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) + 0.3e1 * (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * sin((2 * h + f + 2 * g)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (((eta ^ 2 / 0.15e2 + 0.20e2 / 0.9e1 * eta + 0.181e3 / 0.45e2) * ci2 ^ 4 + (-0.4e1 / 0.45e2 * eta ^ 2 - 0.80e2 / 0.27e2 * eta - 0.724e3 / 0.135e3) * ci2 ^ 2 + 0.116e3 / 0.135e3 * eta + 0.7e1 / 0.270e3 * eta ^ 2 + 0.421e3 / 0.270e3) * cos((3 * f + 2 * g)) - 0.4e1 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((3 * f + 4 * g)) - (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.7e1 / 0.18e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((5 * f + 2 * g)) / 0.5e1 + 0.4e1 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((5 * f + 4 * g)) - 0.2e1 / 0.5e1 * (0.1e1 + eta) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((-2 * h + 3 * f)) + 0.2e1 / 0.5e1 * (0.1e1 + eta) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((2 * h + 3 * f)) - 0.8e1 / 0.3e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.2e1 / 0.5e1) * sin((3 * f + 2 * g)) + ((eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * ci2 ^ 4 + (0.308e3 / 0.15e2 - 0.4e1 / 0.3e1 * eta ^ 2 + 0.272e3 / 0.15e2 * eta) * ci2 ^ 2 + 0.7e1 / 0.18e2 * eta ^ 2 - 0.28e2 / 0.5e1 * eta - 0.63e2 / 0.10e2) * cos((f + 2 * g)) + ((0.6e1 / 0.5e1 * eta ^ 2 + 0.4e1 * eta + 0.38e2 / 0.5e1) * ci2 ^ 4 + (-0.38e2 / 0.5e1 - 0.6e1 / 0.5e1 * eta ^ 2 - 0.4e1 * eta) * ci2 ^ 2 + 0.52e2 / 0.45e2 * eta + 0.88e2 / 0.45e2 + 0.4e1 / 0.15e2 * eta ^ 2) * cos((-2 * h + f)) + ((-0.38e2 / 0.5e1 - 0.6e1 / 0.5e1 * eta ^ 2 - 0.4e1 * eta) * ci2 ^ 4 + (0.6e1 / 0.5e1 * eta ^ 2 + 0.4e1 * eta + 0.38e2 / 0.5e1) * ci2 ^ 2 - 0.4e1 / 0.15e2 * eta ^ 2 - 0.52e2 / 0.45e2 * eta - 0.88e2 / 0.45e2) * cos((2 * h + f)) + (0.1e1 + eta) * ((ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.7e1 / 0.18e2) * (eta - 0.1e1) * cos((-2 * g + f)) - 0.40e2 * Delta * sin((f + 2 * g)) * (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.2e1 / 0.5e1)) / 0.5e1) / 0.4e1) * sqrt(-eta ^ 2 + 0.1e1) + (ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta ^ 2 - 0.7e1) * cos((-2 * h + 2 * g + 2 * f)) / 0.30e2 - 0.13e2 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * (eta + 0.31e2 / 0.13e2) * cos((-2 * h + 2 * g + 4 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 2 * f + 4 * g)) / 0.12e2 - ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 4 * f + 4 * g)) / 0.60e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 6 * f + 4 * g)) / 0.60e2 + ((-eta ^ 2 / 0.10e2 + 0.7e1 / 0.10e2) * ci2 ^ 8 + (eta ^ 2 / 0.6e1 - 0.7e1 / 0.6e1) * ci2 ^ 6 + (-0.7e1 / 0.90e2 * eta ^ 2 + 0.47e2 / 0.90e2) * ci2 ^ 4 - 0.1e1 / 0.36e2 + eta ^ 2 / 0.180e3) * cos((2 * h + 2 * g + 2 * f)) + 0.13e2 / 0.40e2 * (eta - 0.1e1) * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta - 0.155e3 / 0.39e2) * ci2 ^ 6 + (0.83e2 / 0.117e3 * eta + 0.197e3 / 0.117e3) * ci2 ^ 4 - 0.5e1 / 0.234e3 * eta - 0.11e2 / 0.234e3) * cos((2 * h + 2 * g + 4 * f)) - ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 2 * f)) + 0.3e1 * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * sin((2 * h + 2 * g + 2 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((2 * f + 4 * g)) / 0.12e2 - ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((4 * f + 4 * g)) / 0.60e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((6 * f + 4 * g)) / 0.60e2 - ci2 ^ 2 * (ci2 - 0.1e1) * ((eta ^ 2 - 0.7e1) * ci2 ^ 4 + (-0.4e1 / 0.3e1 * eta ^ 2 + 0.28e2 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.2e1 - 0.19e2 / 0.6e1) * (ci2 + 0.1e1) * cos((2 * g + 2 * f)) / 0.15e2 + 0.13e2 / 0.60e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 4 + (-0.4e1 / 0.3e1 * eta - 0.124e3 / 0.39e2) * ci2 ^ 2 + 0.31e2 / 0.78e2 * eta + 0.73e2 / 0.78e2) * cos((2 * g + 4 * f)) - ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-2 * h + 2 * f)) / 0.12e2 + ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((2 * h + 2 * f)) / 0.12e2 + Delta * (-ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * sin((2 * g - 2 * h)) / 0.2e1 + 0.3e1 / 0.2e1 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.97e2 / 0.135e3 * ci2 ^ 4 - 0.7e1 / 0.270e3) * sin((2 * g + 2 * h)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.2e1 * ci2 ^ 4 - 0.8e1 / 0.3e1 * ci2 ^ 2 + 0.4e1 / 0.5e1) * sin((2 * g + 2 * f)) + (0.1e1 + eta) * (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.37e2 / 0.90e2) * (eta - 0.1e1) * sin((2 * g)) - sin((2 * h)) * ((eta ^ 2 + 0.7e1) * ci2 ^ 4 + (-eta ^ 2 - 0.7e1) * ci2 ^ 2 + eta ^ 2 / 0.10e2 + 0.11e2 / 0.6e1) / 0.3e1))) * (0.1e1 + eta)) * J ^ 2 / eta ^ 8 / a ^ 4 / (0.1e1 + eta) 0.81e2 / 0.4e1 * ((-0.20e2 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.7e1 / 0.60e2) * Delta * cos((3 * f + 2 * g)) - 0.20e2 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.7e1 / 0.60e2) * Delta * cos((f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * h - 2 * g + f)) / 0.24e2 - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 4 + (-0.19e2 / 0.3e1 - eta ^ 2 - 0.10e2 / 0.3e1 * eta) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.26e2 / 0.27e2 * eta + 0.44e2 / 0.27e2) * sin((-2 * h + f)) / 0.2e1 - 0.5e1 / 0.6e1 * ((eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta ^ 2 + 0.34e2 / 0.3e1 * eta + 0.77e2 / 0.6e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 - 0.5e1 / 0.3e1 * eta - 0.28e2 / 0.15e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((f + 2 * g)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 4 + (-0.19e2 / 0.3e1 - eta ^ 2 - 0.10e2 / 0.3e1 * eta) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.26e2 / 0.27e2 * eta + 0.44e2 / 0.27e2) * sin((2 * h + f)) / 0.2e1 - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta ^ 2 - 0.250e3 / 0.9e1 * eta - 0.905e3 / 0.18e2) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.11e2 / 0.3e1 * eta + 0.20e2 / 0.3e1) * sin((3 * f + 2 * g)) / 0.18e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * h + 3 * f)) / 0.6e1 + (ci2 ^ 2 - 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((-2 * g + f)) / 0.6e1 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f)) / 0.6e1 + (ci2 ^ 2 - 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((5 * f + 2 * g)) / 0.6e1 - (0.1e1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * (eta - 0.1e1) * sin((2 * h + 5 * f + 2 * g)) / 0.8e1 - (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.13e2 / 0.18e2 * ci2 ^ 4 - 0.1e1 / 0.36e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * f)) / 0.3e1 + 0.5e1 * (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * cos((2 * h + f + 2 * g)) - (0.1e1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * (eta - 0.1e1) * sin((-2 * h - 2 * g + f)) / 0.8e1 + 0.5e1 / 0.3e1 * (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * cos((2 * h + 3 * f + 2 * g)) + 0.5e1 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 5 * f + 2 * g)) / 0.24e2 + 0.5e1 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + f + 2 * g)) + sin(f) * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 8 + (-0.50e2 / 0.9e1 * eta - 0.5e1 / 0.3e1 * eta ^ 2 - 0.95e2 / 0.9e1) * ci2 ^ 6 + (0.259e3 / 0.54e2 + 0.13e2 / 0.18e2 * eta ^ 2 + 0.71e2 / 0.27e2 * eta) * ci2 ^ 4 - 0.31e2 / 0.108e3 - eta ^ 2 / 0.36e2 - 0.11e2 / 0.54e2 * eta) + ((eta ^ 2 / 0.24e2 + 0.25e2 / 0.18e2 * eta + 0.181e3 / 0.72e2) * ci2 ^ 8 + (-0.5e1 / 0.72e2 * eta ^ 2 - 0.125e3 / 0.54e2 * eta - 0.905e3 / 0.216e3) * ci2 ^ 6 + (0.19e2 / 0.648e3 * eta ^ 2 + 0.79e2 / 0.81e2 * eta + 0.1145e4 / 0.648e3) * ci2 ^ 4 - 0.59e2 / 0.1296e4 - 0.2e1 / 0.81e2 * eta - eta ^ 2 / 0.1296e4) * sin((2 * h + 3 * f + 2 * g)) + ((0.5e1 / 0.8e1 * eta ^ 2 - 0.77e2 / 0.8e1 - 0.17e2 / 0.2e1 * eta) * ci2 ^ 8 + (-0.25e2 / 0.24e2 * eta ^ 2 + 0.85e2 / 0.6e1 * eta + 0.385e3 / 0.24e2) * ci2 ^ 6 + (0.95e2 / 0.216e3 * eta ^ 2 - 0.55e2 / 0.9e1 * eta - 0.497e3 / 0.72e2) * ci2 ^ 4 + 0.35e2 / 0.144e3 - 0.5e1 / 0.432e3 * eta ^ 2 + 0.2e1 / 0.9e1 * eta) * sin((2 * h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) / 0.72e2 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 3 * f + 4 * g)) / 0.9e1 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 5 * f + 4 * g)) / 0.9e1 + 0.5e1 / 0.24e2 * ci2 ^ 2 * (eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((5 * f + 4 * g)) / 0.9e1 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((3 * f + 4 * g)) / 0.9e1) * sqrt(-eta ^ 2 + 0.1e1) - 0.10e2 / 0.3e1 * (0.1e1 + eta) * (-ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta ^ 2 - 0.7e1) * sin((-2 * h + 2 * g + 2 * f)) / 0.60e2 + 0.13e2 / 0.240e3 * (eta + 0.31e2 / 0.13e2) * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 4 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 2 * f + 4 * g)) / 0.24e2 - ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 4 * f + 4 * g)) / 0.120e3 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 6 * f + 4 * g)) / 0.120e3 + ((0.7e1 / 0.20e2 - eta ^ 2 / 0.20e2) * ci2 ^ 8 + (-0.7e1 / 0.12e2 + eta ^ 2 / 0.12e2) * ci2 ^ 6 + (0.47e2 / 0.180e3 - 0.7e1 / 0.180e3 * eta ^ 2) * ci2 ^ 4 + eta ^ 2 / 0.360e3 - 0.1e1 / 0.72e2) * sin((2 * h + 2 * g + 2 * f)) + 0.13e2 / 0.80e2 * (eta - 0.1e1) * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta - 0.155e3 / 0.39e2) * ci2 ^ 6 + (0.83e2 / 0.117e3 * eta + 0.197e3 / 0.117e3) * ci2 ^ 4 - 0.5e1 / 0.234e3 * eta - 0.11e2 / 0.234e3) * sin((2 * h + 2 * g + 4 * f)) - ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 2 * g + 2 * f)) / 0.2e1 - 0.3e1 / 0.2e1 * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * cos((2 * h + 2 * g + 2 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((2 * g - 2 * h)) / 0.4e1 - 0.3e1 / 0.4e1 * (0.1e1 + eta) * Delta * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.97e2 / 0.135e3 * ci2 ^ 4 - 0.7e1 / 0.270e3) * cos((2 * g + 2 * h)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * f + 4 * g)) / 0.24e2 + ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((4 * f + 4 * g)) / 0.120e3 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((6 * f + 4 * g)) / 0.120e3 + ci2 ^ 2 * ((eta ^ 2 - 0.7e1) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta ^ 2 + 0.35e2 / 0.6e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.1e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * g + 2 * f)) / 0.15e2 - 0.13e2 / 0.60e2 * ci2 ^ 2 * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta - 0.155e3 / 0.78e2) * ci2 ^ 2 + 0.3e1 / 0.26e2 * eta + 0.7e1 / 0.26e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((2 * g + 4 * f)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * sin((-2 * h + 2 * f)) / 0.24e2 + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * sin((2 * h + 2 * f)) / 0.24e2 + 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.7e1 / 0.60e2) * Delta * cos((2 * g + 2 * f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.11e2 / 0.90e2) * (eta - 0.1e1) * cos((2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 + 0.7e1) * ci2 ^ 4 + (-eta ^ 2 - 0.7e1) * ci2 ^ 2 + eta ^ 2 / 0.10e2 + 0.11e2 / 0.6e1) * cos((2 * h)) / 0.6e1 - (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta + 0.31e2 / 0.3e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.23e2 / 0.5e1) * ci2 ^ 4 + eta / 0.30e2 + 0.7e1 / 0.30e2) * sin((2 * f)) / 0.12e2 - Delta * ((eta ^ 2 + 0.7e1) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta ^ 2 - 0.35e2 / 0.3e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta ^ 2 + 0.16e2 / 0.3e1) * ci2 ^ 4 + eta ^ 2 / 0.30e2 - 0.1e1 / 0.3e1) / 0.6e1)) * R__e ^ 4 * J ^ 2 / eta ^ 8 / a ^ 4 / (0.1e1 + eta) -0.219e3 / 0.32e2 * R__e ^ 4 * J ^ 2 * sqrt(-ci2 ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * (0.525e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 0.1e1) * sin((3 * g + f)) + 0.115e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((g - 2 * h + 3 * f)) + 0.63e2 / 0.146e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 3 - 0.13e2 / 0.63e2 * eta ^ 2 - 0.41e2 / 0.9e1 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.63e2 * eta ^ 2 + 0.41e2 / 0.9e1 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.31e2 / 0.126e3 * eta ^ 2 - 0.149e3 / 0.126e3 * eta - 0.5e1 / 0.6e1) * cos((g + 2 * h + 3 * f)) - 0.45e2 / 0.584e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((g + 7 * f)) - 0.837e3 / 0.584e3 * ((eta ^ 3 + 0.2275e4 / 0.837e3 * eta ^ 2 + 0.145e3 / 0.27e2 * eta - 0.137e3 / 0.27e2) * ci2 ^ 4 + (-eta ^ 3 - 0.2275e4 / 0.837e3 * eta ^ 2 - 0.145e3 / 0.27e2 * eta + 0.137e3 / 0.27e2) * ci2 ^ 2 + 0.145e3 / 0.837e3 * eta ^ 3 + 0.1103e4 / 0.837e3 * eta ^ 2 + 0.1307e4 / 0.837e3 * eta - 0.115e3 / 0.93e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((f - g)) + 0.261e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.146e3 / 0.261e3 * eta - 0.931e3 / 0.261e3) * ci2 ^ 4 + (-eta ^ 2 - 0.146e3 / 0.261e3 * eta + 0.931e3 / 0.261e3) * ci2 ^ 2 + 0.43e2 / 0.261e3 * eta ^ 2 - 0.10e2 / 0.87e2 * eta - 0.209e3 / 0.261e3) * (eta - 0.1e1) ^ 2 * cos((-g + 3 * f)) + 0.9e1 / 0.146e3 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((2 * h + g + 5 * f)) + 0.117e3 / 0.73e2 * (0.1e1 + eta) * ((eta ^ 3 + 0.398e3 / 0.117e3 * eta ^ 2 + 0.779e3 / 0.117e3 * eta - 0.406e3 / 0.117e3) * ci2 ^ 4 + (-eta ^ 3 - 0.398e3 / 0.117e3 * eta ^ 2 - 0.779e3 / 0.117e3 * eta + 0.406e3 / 0.117e3) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.157e3 / 0.117e3 * eta ^ 2 + 0.401e3 / 0.234e3 * eta - 0.109e3 / 0.117e3) * (eta - 0.1e1) * cos((-g - 2 * h + f)) + 0.9e1 / 0.584e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((-3 * g - 2 * h + 3 * f)) - 0.63e2 / 0.146e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.32e2 / 0.63e2 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 2 - 0.32e2 / 0.63e2 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.8e1 / 0.63e2 * eta - 0.5e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * cos((-g - 2 * h + 3 * f)) + ((-0.31e2 / 0.4e1 + 0.819e3 / 0.292e3 * eta ^ 5 - 0.5833e4 / 0.292e3 * eta ^ 4 - 0.1441e4 / 0.73e2 * eta ^ 3 + 0.2268e4 / 0.73e2 * eta ^ 2 + 0.6641e4 / 0.292e3 * eta) * ci2 ^ 4 + (0.31e2 / 0.4e1 + 0.5833e4 / 0.292e3 * eta ^ 4 - 0.2268e4 / 0.73e2 * eta ^ 2 + 0.1441e4 / 0.73e2 * eta ^ 3 - 0.6641e4 / 0.292e3 * eta - 0.819e3 / 0.292e3 * eta ^ 5) * ci2 ^ 2 - 0.495e3 / 0.292e3 * eta ^ 4 + 0.248e3 / 0.73e2 * eta ^ 2 - 0.75e2 / 0.73e2 * eta ^ 3 + 0.183e3 / 0.292e3 * eta - 0.609e3 / 0.292e3 + 0.117e3 / 0.292e3 * eta ^ 5) * cos((f + g)) + 0.13e2 / 0.73e2 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + f)) - 0.23e2 / 0.292e3 * (eta ^ 4 + 0.328e3 / 0.69e2 * eta ^ 3 + 0.440e3 / 0.69e2 * eta ^ 2 - 0.2456e4 / 0.69e2 * eta - 0.991e3 / 0.23e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) - 0.1575e4 / 0.73e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 0.1e1) * sin((3 * g + 2 * h + f)) + 0.31e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2) * cos((5 * g + 2 * h + 5 * f)) + 0.11e2 / 0.73e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 7 * f)) - 0.237e3 / 0.292e3 * ci2 ^ 2 * (eta ^ 4 - 0.3436e4 / 0.237e3 * eta ^ 3 - 0.2684e4 / 0.79e2 * eta ^ 2 - 0.1532e4 / 0.79e2 * eta - 0.265e3 / 0.237e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + f)) - 0.171e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 2 - 0.106e3 / 0.19e2 * eta - 0.265e3 / 0.19e2) * ci2 ^ 4 + (-eta ^ 2 + 0.106e3 / 0.19e2 * eta + 0.265e3 / 0.19e2) * ci2 ^ 2 + 0.7e1 / 0.57e2 * eta ^ 2 - 0.2e1 / 0.3e1 * eta - 0.275e3 / 0.171e3) * (eta - 0.1e1) ^ 2 * cos((5 * f + g)) - 0.9e1 / 0.146e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g - 2 * h + 5 * f)) - 0.45e2 / 0.584e3 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((3 * g + 2 * h + 7 * f)) - 0.279e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 3 - 0.111e3 / 0.31e2 * eta ^ 2 - 0.387e3 / 0.31e2 * eta - 0.269e3 / 0.31e2) * ci2 ^ 4 + (-eta ^ 3 + 0.111e3 / 0.31e2 * eta ^ 2 + 0.387e3 / 0.31e2 * eta + 0.269e3 / 0.31e2) * ci2 ^ 2 + eta ^ 3 / 0.9e1 - 0.41e2 / 0.93e2 * eta ^ 2 - 0.137e3 / 0.93e2 * eta - 0.281e3 / 0.279e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + 5 * f)) + 0.243e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 - 0.134e3 / 0.27e2 * eta - 0.37e2 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.62e2 / 0.81e2 * eta + 0.163e3 / 0.243e3) * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + f)) + 0.9e1 / 0.146e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g + 5 * f)) - 0.81e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * cos((-3 * g + f)) - 0.117e3 / 0.292e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 5 - 0.833e3 / 0.39e2 * eta ^ 4 - 0.316e3 / 0.13e2 * eta ^ 3 + 0.424e3 / 0.13e2 * eta ^ 2 + 0.431e3 / 0.13e2 * eta - 0.71e2 / 0.39e2) * cos((g - 2 * h + f)) - 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * sin((-3 * g - 2 * h + f)) - 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((f - g)) - 0.33e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 3 + 0.101e3 / 0.11e2 * eta ^ 2 + 0.193e3 / 0.11e2 * eta + 0.111e3 / 0.11e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-g + 2 * h + f)) + 0.15e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.103e3 / 0.15e2) * cos((3 * g + 7 * f)) - 0.55e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 2 + 0.14e2 / 0.11e2 * eta + 0.1e1 / 0.5e1) * cos((5 * g + 2 * h + 3 * f)) + 0.93e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 3 - 0.11e2 / 0.3e1 * eta ^ 2 - 0.1241e4 / 0.93e2 * eta - 0.389e3 / 0.31e2) * cos((3 * g + 5 * f)) + 0.45e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta ^ 2 - 0.38e2 / 0.5e1 * eta - 0.269e3 / 0.15e2) * cos((g - 2 * h + 5 * f)) + 0.285e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * sin((g - 2 * h + f)) + 0.195e3 / 0.73e2 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + 3 * f)) + 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 5 * f)) - 0.3e1 / 0.584e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + 3 * f)) - 0.3e1 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + 3 * f)) + 0.15e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 7 * f)) - 0.345e3 / 0.73e2 * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((g + 3 * f)) - 0.855e3 / 0.73e2 * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (0.1e1 + eta) * sin((f + g)) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta - 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((3 * g + 2 * h + 5 * f)) - 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * sin((5 * f + g)) - 0.31e2 / 0.292e3 * (eta ^ 5 + 0.611e3 / 0.31e2 * eta ^ 4 + 0.1084e4 / 0.31e2 * eta ^ 3 - 0.1408e4 / 0.93e2 * eta ^ 2 - 0.4753e4 / 0.93e2 * eta - 0.947e3 / 0.31e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 3 * f)) - 0.585e3 / 0.73e2 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((3 * g + 2 * h + 3 * f)) + 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + f)) + 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + f)) + 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 5 * f)) + (0.5e1 / 0.146e3 * (0.1e1 + eta) ^ 2 * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (eta - 0.1e1) * cos((g + 2 * h + 4 * f)) + ((0.260e3 / 0.73e2 + 0.35e2 / 0.73e2 * eta ^ 4 - 0.171e3 / 0.73e2 * eta ^ 3 + 0.65e2 / 0.73e2 * eta ^ 2 + 0.459e3 / 0.73e2 * eta) * ci2 ^ 4 + (0.171e3 / 0.73e2 * eta ^ 3 - 0.459e3 / 0.73e2 * eta - 0.260e3 / 0.73e2 - 0.35e2 / 0.73e2 * eta ^ 4 - 0.65e2 / 0.73e2 * eta ^ 2) * ci2 ^ 2 + 0.65e2 / 0.73e2 - 0.7e1 / 0.73e2 * eta ^ 4 - 0.45e2 / 0.73e2 * eta ^ 3 + 0.38e2 / 0.73e2 * eta ^ 2 + 0.129e3 / 0.73e2 * eta) * cos((g + 2 * h + 2 * f)) + ((-0.9e1 + 0.153e3 / 0.73e2 * eta ^ 4 + 0.405e3 / 0.73e2 * eta ^ 3 - 0.309e3 / 0.73e2 * eta ^ 2 - 0.1056e4 / 0.73e2 * eta) * ci2 ^ 4 + (0.9e1 + 0.309e3 / 0.73e2 * eta ^ 2 + 0.1056e4 / 0.73e2 * eta - 0.153e3 / 0.73e2 * eta ^ 4 - 0.405e3 / 0.73e2 * eta ^ 3) * ci2 ^ 2 - 0.74e2 / 0.73e2 - 0.36e2 / 0.73e2 * eta ^ 2 - 0.120e3 / 0.73e2 * eta + 0.19e2 / 0.73e2 * eta ^ 4 + 0.47e2 / 0.73e2 * eta ^ 3) * cos((3 * g + 2 * h + 4 * f)) + ((-0.333e3 / 0.73e2 + 0.678e3 / 0.73e2 * eta - 0.90e2 / 0.73e2 * eta ^ 4 - 0.144e3 / 0.73e2 * eta ^ 3 + 0.597e3 / 0.73e2 * eta ^ 2) * ci2 ^ 4 + (0.333e3 / 0.73e2 - 0.597e3 / 0.73e2 * eta ^ 2 - 0.678e3 / 0.73e2 * eta + 0.90e2 / 0.73e2 * eta ^ 4 + 0.144e3 / 0.73e2 * eta ^ 3) * ci2 ^ 2 - 0.17e2 / 0.73e2 + 0.123e3 / 0.73e2 * eta ^ 2 + 0.150e3 / 0.73e2 * eta - 0.22e2 / 0.73e2 * eta ^ 4 - 0.30e2 / 0.73e2 * eta ^ 3) * cos((3 * g + 2 * h + 2 * f)) + ((-0.742e3 / 0.73e2 + eta ^ 4 + 0.133e3 / 0.73e2 * eta ^ 3 - 0.211e3 / 0.73e2 * eta ^ 2 - 0.709e3 / 0.73e2 * eta) * ci2 ^ 4 + (-0.133e3 / 0.73e2 * eta ^ 3 + 0.211e3 / 0.73e2 * eta ^ 2 + 0.709e3 / 0.73e2 * eta - eta ^ 4 + 0.742e3 / 0.73e2) * ci2 ^ 2 + 0.33e2 / 0.73e2 * eta ^ 3 + 0.19e2 / 0.73e2 * eta ^ 4 - 0.177e3 / 0.73e2 - 0.46e2 / 0.73e2 * eta ^ 2 - 0.177e3 / 0.73e2 * eta) * cos(g) + 0.63e2 / 0.146e3 * (eta ^ 3 + 0.145e3 / 0.63e2 * eta ^ 2 + 0.257e3 / 0.63e2 * eta + 0.187e3 / 0.63e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g)) + 0.5e1 / 0.146e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h)) + 0.9e1 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.2e1 / 0.9e1 * eta ^ 2 - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * cos((5 * g + 2 * h + 6 * f)) + 0.3e1 / 0.146e3 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 8 * f)) - 0.25e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 3 + 0.74e2 / 0.25e2 * eta ^ 2 - 0.101e3 / 0.25e2 * eta - 0.219e3 / 0.25e2) * cos((g - 2 * h + 4 * f)) - 0.31e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.25e2 / 0.31e2 * eta ^ 2 - 0.37e2 / 0.31e2 * eta - 0.91e2 / 0.31e2) * cos((g - 2 * h)) + 0.3e1 / 0.146e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 8 * f)) - 0.5e1 / 0.146e3 * (0.1e1 + eta) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (eta - 0.1e1) ^ 2 * cos((-g - 2 * h + 4 * f)) + 0.480e3 / 0.73e2 * sin(g) * (0.1e1 + eta) * ((eta ^ 3 + 0.13e2 / 0.48e2 * eta - 0.9e1 / 0.16e2) * ci2 ^ 4 + (-eta ^ 3 - 0.13e2 / 0.48e2 * eta + 0.9e1 / 0.16e2) * ci2 ^ 2 + eta ^ 3 / 0.15e2 + 0.43e2 / 0.120e3 * eta - 0.3e1 / 0.40e2) * Delta + 0.1080e4 / 0.73e2 * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((g + 2 * f)) + 0.45e2 / 0.146e3 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-eta - 0.4e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta + 0.2e1 / 0.15e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + 2 * f)) + 0.39e2 / 0.146e3 * (0.1e1 + eta) * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) ^ 2 * cos((g + 6 * f)) + 0.1800e4 / 0.73e2 * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((3 * g + 2 * h + 2 * f)) + 0.39e2 / 0.146e3 * (0.1e1 + eta) ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) * cos((3 * g + 2 * h + 6 * f)) + 0.5e1 / 0.146e3 * (0.1e1 + eta) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (eta - 0.1e1) ^ 2 * cos((-g + 4 * f)) + 0.270e3 / 0.73e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((3 * g + 2 * h + 4 * f)) - 0.15e2 / 0.146e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.4e1 / 0.5e1) * cos((-3 * g + 2 * f)) - 0.11e2 / 0.146e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.61e2 / 0.11e2 * eta + 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + 6 * f)) - 0.15e2 / 0.146e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta + 0.4e1 / 0.5e1) * cos((-g + 2 * h + 2 * f)) - 0.49e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.55e2 / 0.49e2 * eta + 0.24e2 / 0.49e2) * (eta - 0.1e1) * cos((5 * g + 2 * h + 2 * f)) - 0.13e2 / 0.146e3 * (eta + 0.46e2 / 0.13e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((g - 2 * h + 6 * f)) - 0.240e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (eta ^ 2 + eta - 0.3e1 / 0.8e1) * sin((3 * g)) - 0.120e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.3e1 / 0.2e1 * eta - 0.1e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta + 0.3e1 / 0.2e1) * sin((g - 2 * h)) - 0.600e3 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * sin((2 * f + 3 * g)) - 0.90e2 / 0.73e2 * Delta * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) - 0.360e3 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * sin((g - 2 * h + 2 * f)) + 0.21e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 4 + 0.15e2 / 0.7e1 * eta ^ 3 - 0.54e2 / 0.7e1 * eta ^ 2 - 0.73e2 / 0.7e1 * eta + 0.29e2 / 0.7e1) * (ci2 + 0.1e1) * cos((2 * f + 3 * g)) - 0.57e2 / 0.73e2 * (eta ^ 4 + 0.46e2 / 0.19e2 * eta ^ 3 - 0.134e3 / 0.57e2 * eta ^ 2 - 0.389e3 / 0.57e2 * eta - 0.244e3 / 0.57e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((4 * f + 3 * g)) - 0.120e3 / 0.73e2 * (0.1e1 + eta) * eta * Delta * ((eta ^ 2 + 0.28e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 - 0.28e2 / 0.3e1) * ci2 ^ 2 - eta ^ 2 / 0.5e1 + 0.8e1 / 0.3e1) * sin((g + 2 * h)) + 0.270e3 / 0.73e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((g + 4 * f)) + 0.720e3 / 0.73e2 * ((eta ^ 2 + eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 - eta + 0.3e1 / 0.8e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta ^ 2 + 0.7e1 / 0.45e2 * eta - 0.1e1 / 0.20e2) * (0.1e1 + eta) * Delta * (eta - 0.1e1) * sin((3 * g + 2 * h)) + 0.22e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.11e2 * eta ^ 3 - 0.277e3 / 0.22e2 * eta ^ 2 - 0.188e3 / 0.11e2 * eta - 0.111e3 / 0.22e2) * cos((g - 2 * h + 2 * f)) - 0.14e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.14e2 * eta ^ 3 + eta ^ 2 / 0.2e1 + 0.13e2 / 0.14e2 * eta + 0.25e2 / 0.14e2) * cos((5 * g + 2 * h + 4 * f)) - 0.90e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 4 * f)) + ((0.1e1 + 0.69e2 / 0.73e2 * eta ^ 3 + 0.766e3 / 0.73e2 * eta ^ 2 + 0.669e3 / 0.73e2 * eta - 0.101e3 / 0.73e2 * eta ^ 4) * ci2 ^ 4 + (-0.1e1 - 0.69e2 / 0.73e2 * eta ^ 3 - 0.766e3 / 0.73e2 * eta ^ 2 - 0.669e3 / 0.73e2 * eta + 0.101e3 / 0.73e2 * eta ^ 4) * ci2 ^ 2 - 0.48e2 / 0.73e2 + 0.107e3 / 0.73e2 * eta ^ 2 - 0.7e1 / 0.73e2 * eta ^ 4 + 0.29e2 / 0.73e2 * eta ^ 3 + 0.31e2 / 0.73e2 * eta) * cos((g + 2 * f)) + ((0.469e3 / 0.73e2 + 0.35e2 / 0.73e2 * eta ^ 3 + 0.175e3 / 0.73e2 * eta ^ 2 + 0.20e2 / 0.73e2 * eta ^ 4 + 0.325e3 / 0.73e2 * eta) * ci2 ^ 4 + (-0.469e3 / 0.73e2 - 0.35e2 / 0.73e2 * eta ^ 3 - 0.175e3 / 0.73e2 * eta ^ 2 - 0.20e2 / 0.73e2 * eta ^ 4 - 0.325e3 / 0.73e2 * eta) * ci2 ^ 2 + 0.33e2 / 0.73e2 * eta ^ 2 - 0.4e1 / 0.73e2 * eta ^ 4 - 0.7e1 / 0.73e2 * eta ^ 3 + 0.105e3 / 0.73e2 * eta + 0.129e3 / 0.73e2) * cos((g + 2 * h)) + 0.145e3 / 0.146e3 * ((eta ^ 3 + 0.501e3 / 0.145e3 * eta ^ 2 - 0.477e3 / 0.145e3 * eta - 0.43e2 / 0.5e1) * ci2 ^ 4 + (-eta ^ 3 - 0.501e3 / 0.145e3 * eta ^ 2 + 0.477e3 / 0.145e3 * eta + 0.43e2 / 0.5e1) * ci2 ^ 2 + 0.19e2 / 0.145e3 * eta ^ 3 + 0.67e2 / 0.145e3 * eta ^ 2 - 0.41e2 / 0.145e3 * eta - 0.27e2 / 0.29e2) * (eta - 0.1e1) * cos((g + 4 * f)) - 0.87e2 / 0.73e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.65e2 / 0.29e2 * eta ^ 2 + 0.121e3 / 0.29e2 * eta + 0.91e2 / 0.29e2) * ci2 ^ 4 + (-eta ^ 3 - 0.65e2 / 0.29e2 * eta ^ 2 - 0.121e3 / 0.29e2 * eta - 0.91e2 / 0.29e2) * ci2 ^ 2 + 0.13e2 / 0.87e2 * eta ^ 3 + 0.31e2 / 0.87e2 * eta ^ 2 + 0.64e2 / 0.87e2 * eta + 0.16e2 / 0.29e2) * cos((3 * g + 2 * h)) - 0.35e2 / 0.73e2 * ((eta ^ 3 - 0.156e3 / 0.35e2 * eta ^ 2 - 0.39e2 / 0.35e2 * eta + 0.52e2 / 0.7e1) * ci2 ^ 4 + (-eta ^ 3 + 0.156e3 / 0.35e2 * eta ^ 2 + 0.39e2 / 0.35e2 * eta - 0.52e2 / 0.7e1) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.48e2 / 0.35e2 * eta ^ 2 + 0.6e1 / 0.35e2 * eta + 0.13e2 / 0.7e1) * (eta - 0.1e1) * cos((-g - 2 * h + 2 * f)) + 0.115e3 / 0.146e3 * ((eta ^ 3 - 0.186e3 / 0.115e3 * eta ^ 2 + 0.39e2 / 0.115e3 * eta + 0.556e3 / 0.115e3) * ci2 ^ 4 + (-eta ^ 3 + 0.186e3 / 0.115e3 * eta ^ 2 - 0.39e2 / 0.115e3 * eta - 0.556e3 / 0.115e3) * ci2 ^ 2 - 0.7e1 / 0.115e3 * eta ^ 3 - 0.76e2 / 0.115e3 * eta ^ 2 + 0.31e2 / 0.115e3 * eta + 0.136e3 / 0.115e3) * (eta - 0.1e1) * cos((-g + 2 * f))) * sqrt(-eta ^ 2 + 0.1e1) + ((-0.2973e4 / 0.292e3 + 0.93e2 / 0.292e3 * eta ^ 5 + 0.1557e4 / 0.292e3 * eta ^ 4 + 0.789e3 / 0.73e2 * eta ^ 3 - 0.130e3 / 0.73e2 * eta ^ 2 - 0.4177e4 / 0.292e3 * eta) * ci2 ^ 4 + (0.2973e4 / 0.292e3 - 0.1557e4 / 0.292e3 * eta ^ 4 - 0.789e3 / 0.73e2 * eta ^ 3 + 0.130e3 / 0.73e2 * eta ^ 2 + 0.4177e4 / 0.292e3 * eta - 0.93e2 / 0.292e3 * eta ^ 5) * ci2 ^ 2 - 0.303e3 / 0.292e3 + 0.31e2 / 0.876e3 * eta ^ 5 + 0.433e3 / 0.876e3 * eta ^ 4 + 0.77e2 / 0.73e2 * eta ^ 3 - 0.17e2 / 0.219e3 * eta ^ 2 - 0.1163e4 / 0.876e3 * eta) * cos((3 * g + 2 * h + 3 * f)) + ((0.406e3 / 0.73e2 - 0.416e3 / 0.73e2 * eta ^ 4 - 0.692e3 / 0.73e2 * eta ^ 3 + 0.594e3 / 0.73e2 * eta ^ 2 + 0.1249e4 / 0.73e2 * eta - 0.117e3 / 0.73e2 * eta ^ 5) * ci2 ^ 4 + (0.416e3 / 0.73e2 * eta ^ 4 + 0.692e3 / 0.73e2 * eta ^ 3 - 0.594e3 / 0.73e2 * eta ^ 2 - 0.1249e4 / 0.73e2 * eta + 0.117e3 / 0.73e2 * eta ^ 5 - 0.406e3 / 0.73e2) * ci2 ^ 2 - 0.39e2 / 0.146e3 * eta ^ 5 + 0.109e3 / 0.73e2 - 0.160e3 / 0.73e2 * eta ^ 4 - 0.226e3 / 0.73e2 * eta ^ 3 + 0.191e3 / 0.73e2 * eta ^ 2 + 0.723e3 / 0.146e3 * eta) * cos((g + 2 * h + f)) - 0.57e2 / 0.292e3 * ((eta ^ 4 - 0.4e1 * eta ^ 3 - 0.1040e4 / 0.57e2 * eta ^ 2 + 0.1412e4 / 0.57e2 * eta + 0.2503e4 / 0.57e2) * ci2 ^ 4 + (-eta ^ 4 + 0.4e1 * eta ^ 3 + 0.1040e4 / 0.57e2 * eta ^ 2 - 0.1412e4 / 0.57e2 * eta - 0.2503e4 / 0.57e2) * ci2 ^ 2 + 0.40e2 / 0.171e3 * eta ^ 4 - 0.32e2 / 0.171e3 * eta ^ 3 - 0.514e3 / 0.171e3 * eta ^ 2 + 0.40e2 / 0.171e3 * eta + 0.66e2 / 0.19e2) * (eta - 0.1e1) * cos((g + 3 * f)) + 0.711e3 / 0.292e3 * ((eta ^ 4 - 0.1128e4 / 0.79e2 * eta ^ 3 - 0.2632e4 / 0.79e2 * eta ^ 2 - 0.1480e4 / 0.79e2 * eta - 0.71e2 / 0.79e2) * ci2 ^ 4 + (-eta ^ 4 + 0.1128e4 / 0.79e2 * eta ^ 3 + 0.2632e4 / 0.79e2 * eta ^ 2 + 0.1480e4 / 0.79e2 * eta + 0.71e2 / 0.79e2) * ci2 ^ 2 + eta ^ 4 / 0.9e1 - 0.1622e4 / 0.711e3 * eta ^ 3 - 0.1222e4 / 0.237e3 * eta ^ 2 - 0.2122e4 / 0.711e3 * eta - 0.173e3 / 0.711e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + f))) / a ^ 4 / ci2 / eta ^ 11 / (0.1e1 + eta) -0.45e2 / 0.2e1 * R__e ^ 4 * (-0.39e2 / 0.80e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 3 + 0.398e3 / 0.117e3 * eta ^ 2 + 0.779e3 / 0.117e3 * eta - 0.406e3 / 0.117e3) * ci2 ^ 4 + (-eta ^ 3 - 0.398e3 / 0.117e3 * eta ^ 2 - 0.779e3 / 0.117e3 * eta + 0.406e3 / 0.117e3) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.157e3 / 0.117e3 * eta ^ 2 + 0.401e3 / 0.234e3 * eta - 0.109e3 / 0.117e3) * sin((-g - 2 * h + f)) + 0.21e2 / 0.160e3 * (0.1e1 + eta) * ((eta ^ 3 - 0.13e2 / 0.63e2 * eta ^ 2 - 0.41e2 / 0.9e1 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.63e2 * eta ^ 2 + 0.41e2 / 0.9e1 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.31e2 / 0.126e3 * eta ^ 2 - 0.149e3 / 0.126e3 * eta - 0.5e1 / 0.6e1) * (eta - 0.1e1) * sin((g + 2 * h + 3 * f)) + 0.21e2 / 0.160e3 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.32e2 / 0.63e2 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 2 - 0.32e2 / 0.63e2 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.8e1 / 0.63e2 * eta - 0.5e1 / 0.6e1) * sin((-g - 2 * h + 3 * f)) + 0.3e1 / 0.160e3 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sin((-g - 2 * h + 5 * f)) + 0.3e1 / 0.128e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((g + 7 * f)) - 0.3e1 / 0.640e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-3 * g - 2 * h + 3 * f)) - 0.81e2 / 0.640e3 * ((eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 - 0.134e3 / 0.27e2 * eta - 0.37e2 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.62e2 / 0.81e2 * eta + 0.163e3 / 0.243e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-3 * g - 2 * h + f)) + 0.33e2 / 0.640e3 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.13e2) * (eta + 0.21e2 / 0.11e2) * ci2 ^ 4 + (-eta ^ 2 + 0.122e3 / 0.11e2 * eta + 0.273e3 / 0.11e2) * ci2 ^ 2 + eta ^ 2 / 0.11e2 - 0.46e2 / 0.33e2 * eta - 0.287e3 / 0.99e2) * sin((5 * f + g)) - 0.93e2 / 0.640e3 * ((eta ^ 3 - 0.111e3 / 0.31e2 * eta ^ 2 - 0.387e3 / 0.31e2 * eta - 0.269e3 / 0.31e2) * ci2 ^ 4 + (-eta ^ 3 + 0.111e3 / 0.31e2 * eta ^ 2 + 0.387e3 / 0.31e2 * eta + 0.269e3 / 0.31e2) * ci2 ^ 2 + eta ^ 3 / 0.9e1 - 0.41e2 / 0.93e2 * eta ^ 2 - 0.137e3 / 0.93e2 * eta - 0.281e3 / 0.279e3) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + 2 * h + 5 * f)) - 0.81e2 / 0.640e3 * ((eta ^ 2 + 0.110e3 / 0.243e3 * eta - 0.949e3 / 0.243e3) * ci2 ^ 4 + (-eta ^ 2 - 0.110e3 / 0.243e3 * eta + 0.949e3 / 0.243e3) * ci2 ^ 2 + 0.41e2 / 0.243e3 * eta ^ 2 - 0.34e2 / 0.243e3 * eta - 0.211e3 / 0.243e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-g + 3 * f)) - 0.3e1 / 0.160e3 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sin((-g + 5 * f)) - 0.3e1 / 0.128e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * sin((3 * g + 2 * h + 7 * f)) + 0.3e1 / 0.160e3 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * sin((2 * h + g + 5 * f)) + (-0.15e2 / 0.2e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * cos((3 * g + 2 * h + 2 * f)) - 0.9e1 / 0.8e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * cos((3 * g + 2 * h + 4 * f)) + (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((g + 2 * h + 4 * f)) / 0.96e2 + 0.13e2 / 0.160e3 * (0.1e1 + eta) ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) * sin((3 * g + 2 * h + 6 * f)) + 0.9e1 / 0.2e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * cos((g + 2 * f)) + (0.1e1 + eta) * ((eta ^ 3 - 0.211e3 / 0.24e2 * eta - 0.9e1 / 0.8e1) * ci2 ^ 4 + (-eta ^ 3 + 0.211e3 / 0.24e2 * eta + 0.9e1 / 0.8e1) * ci2 ^ 2 + eta ^ 3 / 0.3e1 - 0.39e2 / 0.20e2 * eta - 0.3e1 / 0.20e2) * Delta * cos(g) - 0.3e1 / 0.32e2 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-eta - 0.4e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta + 0.2e1 / 0.15e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-3 * g - 2 * h + 2 * f)) - 0.13e2 / 0.160e3 * (0.1e1 + eta) * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) ^ 2 * sin((g + 6 * f)) - (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((-g + 4 * f)) / 0.96e2 + (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((-g - 2 * h + 4 * f)) / 0.96e2 + ((-0.219e3 / 0.80e2 + 0.51e2 / 0.80e2 * eta ^ 4 + 0.27e2 / 0.16e2 * eta ^ 3 - 0.103e3 / 0.80e2 * eta ^ 2 - 0.22e2 / 0.5e1 * eta) * ci2 ^ 4 + (0.219e3 / 0.80e2 - 0.51e2 / 0.80e2 * eta ^ 4 - 0.27e2 / 0.16e2 * eta ^ 3 + 0.103e3 / 0.80e2 * eta ^ 2 + 0.22e2 / 0.5e1 * eta) * ci2 ^ 2 + 0.19e2 / 0.240e3 * eta ^ 4 + 0.47e2 / 0.240e3 * eta ^ 3 - 0.3e1 / 0.20e2 * eta ^ 2 - eta / 0.2e1 - 0.37e2 / 0.120e3) * sin((3 * g + 2 * h + 4 * f)) + ((0.31e2 / 0.240e3 * eta ^ 4 - 0.56e2 / 0.15e2 * eta ^ 2 + 0.91e2 / 0.80e2 * eta ^ 3 - 0.529e3 / 0.80e2 * eta - 0.593e3 / 0.240e3) * ci2 ^ 4 + (-0.31e2 / 0.240e3 * eta ^ 4 + 0.56e2 / 0.15e2 * eta ^ 2 - 0.91e2 / 0.80e2 * eta ^ 3 + 0.529e3 / 0.80e2 * eta + 0.593e3 / 0.240e3) * ci2 ^ 2 - 0.41e2 / 0.120e3 + 0.61e2 / 0.240e3 * eta ^ 3 - 0.289e3 / 0.240e3 * eta + 0.7e1 / 0.80e2 * eta ^ 4 - 0.61e2 / 0.80e2 * eta ^ 2) * sin((g + 2 * f)) - 0.113e3 / 0.240e3 * sin(g) * ((eta ^ 4 + 0.203e3 / 0.113e3 * eta ^ 3 + 0.139e3 / 0.113e3 * eta ^ 2 - 0.59e2 / 0.113e3 * eta + 0.196e3 / 0.113e3) * ci2 ^ 4 + (-eta ^ 4 - 0.203e3 / 0.113e3 * eta ^ 3 - 0.139e3 / 0.113e3 * eta ^ 2 + 0.59e2 / 0.113e3 * eta - 0.196e3 / 0.113e3) * ci2 ^ 2 + 0.11e2 / 0.113e3 * eta ^ 4 + 0.19e2 / 0.113e3 * eta ^ 3 + 0.20e2 / 0.113e3 * eta ^ 2 + 0.33e2 / 0.113e3 * eta + 0.81e2 / 0.113e3) + ((-0.3e1 / 0.8e1 * eta ^ 4 - 0.3e1 / 0.5e1 * eta ^ 3 + 0.113e3 / 0.40e2 * eta + 0.199e3 / 0.80e2 * eta ^ 2 - 0.111e3 / 0.80e2) * ci2 ^ 4 + (0.3e1 / 0.8e1 * eta ^ 4 + 0.3e1 / 0.5e1 * eta ^ 3 - 0.113e3 / 0.40e2 * eta - 0.199e3 / 0.80e2 * eta ^ 2 + 0.111e3 / 0.80e2) * ci2 ^ 2 - 0.17e2 / 0.240e3 - 0.11e2 / 0.120e3 * eta ^ 4 - eta ^ 3 / 0.8e1 + 0.41e2 / 0.80e2 * eta ^ 2 + 0.5e1 / 0.8e1 * eta) * sin((3 * g + 2 * h + 2 * f)) - 0.29e2 / 0.80e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.65e2 / 0.29e2 * eta ^ 2 + 0.121e3 / 0.29e2 * eta + 0.91e2 / 0.29e2) * ci2 ^ 4 + (-eta ^ 3 - 0.65e2 / 0.29e2 * eta ^ 2 - 0.121e3 / 0.29e2 * eta - 0.91e2 / 0.29e2) * ci2 ^ 2 + 0.13e2 / 0.87e2 * eta ^ 3 + 0.31e2 / 0.87e2 * eta ^ 2 + 0.64e2 / 0.87e2 * eta + 0.16e2 / 0.29e2) * sin((3 * g + 2 * h)) + 0.7e1 / 0.48e2 * ((eta ^ 3 - 0.156e3 / 0.35e2 * eta ^ 2 - 0.39e2 / 0.35e2 * eta + 0.52e2 / 0.7e1) * ci2 ^ 4 + (-eta ^ 3 + 0.156e3 / 0.35e2 * eta ^ 2 + 0.39e2 / 0.35e2 * eta - 0.52e2 / 0.7e1) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.48e2 / 0.35e2 * eta ^ 2 + 0.6e1 / 0.35e2 * eta + 0.13e2 / 0.7e1) * (eta - 0.1e1) * sin((-g - 2 * h + 2 * f)) - 0.5e1 / 0.96e2 * ((eta ^ 3 - 0.438e3 / 0.25e2 * eta ^ 2 - 0.39e2 / 0.5e1 * eta + 0.484e3 / 0.25e2) * ci2 ^ 4 + (-eta ^ 3 + 0.438e3 / 0.25e2 * eta ^ 2 + 0.39e2 / 0.5e1 * eta - 0.484e3 / 0.25e2) * ci2 ^ 2 - 0.21e2 / 0.25e2 * eta ^ 3 - 0.116e3 / 0.25e2 * eta ^ 2 - 0.7e1 / 0.25e2 * eta + 0.124e3 / 0.25e2) * (eta - 0.1e1) * sin((-g + 2 * f)) - 0.31e2 / 0.96e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.387e3 / 0.155e3 * eta ^ 2 - 0.147e3 / 0.31e2 * eta - 0.1381e4 / 0.155e3) * ci2 ^ 4 + (-eta ^ 3 - 0.387e3 / 0.155e3 * eta ^ 2 + 0.147e3 / 0.31e2 * eta + 0.1381e4 / 0.155e3) * ci2 ^ 2 + 0.17e2 / 0.155e3 * eta ^ 3 + 0.37e2 / 0.155e3 * eta ^ 2 - 0.19e2 / 0.31e2 * eta - 0.161e3 / 0.155e3) * sin((g + 4 * f)) - (eta ^ 2 + 0.19e2 / 0.5e1 * eta - 0.6e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 6 * f)) / 0.32e2 + (eta + 0.4e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g + 2 * f)) / 0.32e2 - (eta + 0.4e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + 2 * h + 2 * f)) / 0.32e2 - 0.49e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.55e2 / 0.49e2 * eta + 0.24e2 / 0.49e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 2 * f)) + 0.13e2 / 0.480e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.46e2 / 0.13e2) * sin((g - 2 * h + 6 * f)) - 0.3e1 / 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * cos((g - 2 * h + 2 * f)) + 0.5e1 / 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * cos((2 * f + 3 * g)) + 0.3e1 / 0.8e1 * Delta * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((4 * f + 3 * g)) - (eta ^ 2 - 0.3e1 / 0.2e1 * eta - 0.1e1 / 0.2e1) * ci2 ^ 2 * (0.1e1 + eta) * (eta + 0.3e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((g - 2 * h)) / 0.2e1 + ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + eta - 0.3e1 / 0.8e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((3 * g)) - ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 8 * f)) / 0.160e3 + ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h)) / 0.96e2 + 0.53e2 / 0.480e3 * (eta ^ 3 + 0.115e3 / 0.53e2 * eta ^ 2 + 0.227e3 / 0.53e2 * eta + 0.177e3 / 0.53e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g)) + 0.31e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.25e2 / 0.31e2 * eta ^ 2 - 0.37e2 / 0.31e2 * eta - 0.91e2 / 0.31e2) * sin((g - 2 * h)) + ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 8 * f)) / 0.160e3 + 0.3e1 / 0.80e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.2e1 / 0.9e1 * eta ^ 2 - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * sin((5 * g + 2 * h + 6 * f)) + 0.5e1 / 0.48e2 * (eta ^ 3 + 0.74e2 / 0.25e2 * eta ^ 2 - 0.101e3 / 0.25e2 * eta - 0.219e3 / 0.25e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((g - 2 * h + 4 * f)) + ((0.13e2 / 0.12e2 + 0.7e1 / 0.48e2 * eta ^ 4 - 0.57e2 / 0.80e2 * eta ^ 3 + 0.13e2 / 0.48e2 * eta ^ 2 + 0.153e3 / 0.80e2 * eta) * ci2 ^ 4 + (-0.13e2 / 0.12e2 - 0.7e1 / 0.48e2 * eta ^ 4 + 0.57e2 / 0.80e2 * eta ^ 3 - 0.13e2 / 0.48e2 * eta ^ 2 - 0.153e3 / 0.80e2 * eta) * ci2 ^ 2 + 0.13e2 / 0.48e2 + 0.19e2 / 0.120e3 * eta ^ 2 + 0.43e2 / 0.80e2 * eta - 0.7e1 / 0.240e3 * eta ^ 4 - 0.3e1 / 0.16e2 * eta ^ 3) * sin((g + 2 * h + 2 * f)) + ((0.7e1 / 0.48e2 * eta ^ 3 + 0.35e2 / 0.48e2 * eta ^ 2 + 0.65e2 / 0.48e2 * eta + eta ^ 4 / 0.12e2 + 0.469e3 / 0.240e3) * ci2 ^ 4 + (-eta ^ 4 / 0.12e2 - 0.65e2 / 0.48e2 * eta - 0.7e1 / 0.48e2 * eta ^ 3 - 0.35e2 / 0.48e2 * eta ^ 2 - 0.469e3 / 0.240e3) * ci2 ^ 2 + 0.43e2 / 0.80e2 - eta ^ 4 / 0.60e2 - 0.7e1 / 0.240e3 * eta ^ 3 + 0.11e2 / 0.80e2 * eta ^ 2 + 0.7e1 / 0.16e2 * eta) * sin((g + 2 * h)) - 0.11e2 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.11e2 * eta ^ 3 - 0.277e3 / 0.22e2 * eta ^ 2 - 0.188e3 / 0.11e2 * eta - 0.111e3 / 0.22e2) * sin((g - 2 * h + 2 * f)) + 0.13e2 / 0.80e2 * ci2 ^ 2 * (eta ^ 4 + 0.17e2 / 0.13e2 * eta ^ 3 - 0.236e3 / 0.39e2 * eta ^ 2 - 0.233e3 / 0.39e2 * eta + 0.45e2 / 0.13e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * f + 3 * g)) - 0.7e1 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.14e2 * eta ^ 3 + eta ^ 2 / 0.2e1 + 0.13e2 / 0.14e2 * eta + 0.25e2 / 0.14e2) * sin((5 * g + 2 * h + 4 * f)) - 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 + eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 - eta + 0.3e1 / 0.8e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta ^ 2 + 0.7e1 / 0.45e2 * eta - 0.1e1 / 0.20e2) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h)) - 0.3e1 / 0.16e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.44e2 / 0.15e2 * eta ^ 3 - 0.8e1 / 0.5e1 * eta ^ 2 - 0.7e1 * eta - 0.194e3 / 0.45e2) * sin((4 * f + 3 * g)) + ((eta ^ 2 + 0.28e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 - 0.28e2 / 0.3e1) * ci2 ^ 2 - eta ^ 2 / 0.5e1 + 0.8e1 / 0.3e1) * (0.1e1 + eta) * eta * Delta * cos((g + 2 * h)) / 0.2e1 + 0.9e1 / 0.8e1 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * cos((g + 4 * f)) - 0.3e1 / 0.8e1 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 4 * f))) * sqrt(-eta ^ 2 + 0.1e1) + ((-0.39e2 / 0.80e2 * eta ^ 5 - 0.26e2 / 0.15e2 * eta ^ 4 - 0.173e3 / 0.60e2 * eta ^ 3 + 0.99e2 / 0.40e2 * eta ^ 2 + 0.1249e4 / 0.240e3 * eta + 0.203e3 / 0.120e3) * ci2 ^ 4 + (0.39e2 / 0.80e2 * eta ^ 5 + 0.26e2 / 0.15e2 * eta ^ 4 + 0.173e3 / 0.60e2 * eta ^ 3 - 0.99e2 / 0.40e2 * eta ^ 2 - 0.1249e4 / 0.240e3 * eta - 0.203e3 / 0.120e3) * ci2 ^ 2 + 0.191e3 / 0.240e3 * eta ^ 2 + 0.241e3 / 0.160e3 * eta - 0.2e1 / 0.3e1 * eta ^ 4 - 0.113e3 / 0.120e3 * eta ^ 3 + 0.109e3 / 0.240e3 - 0.13e2 / 0.160e3 * eta ^ 5) * sin((g + 2 * h + f)) + ((-0.16633e5 / 0.960e3 * eta + 0.39e2 / 0.320e3 * eta ^ 5 + 0.9161e4 / 0.960e3 * eta ^ 4 + 0.565e3 / 0.48e2 * eta ^ 3 - 0.72e2 / 0.5e1 * eta ^ 2 - 0.197e3 / 0.192e3) * ci2 ^ 4 + (0.16633e5 / 0.960e3 * eta - 0.565e3 / 0.48e2 * eta ^ 3 + 0.72e2 / 0.5e1 * eta ^ 2 - 0.39e2 / 0.320e3 * eta ^ 5 - 0.9161e4 / 0.960e3 * eta ^ 4 + 0.197e3 / 0.192e3) * ci2 ^ 2 - 0.263e3 / 0.960e3 + 0.13e2 / 0.320e3 * eta ^ 5 + 0.355e3 / 0.192e3 * eta ^ 4 + 0.527e3 / 0.240e3 * eta ^ 3 - 0.21e2 / 0.8e1 * eta ^ 2 - 0.205e3 / 0.64e2 * eta) * sin((f + g)) - 0.13e2 / 0.64e2 * (eta - 0.1e1) * ((eta ^ 4 + 0.428e3 / 0.195e3 * eta ^ 3 - 0.32e2 / 0.39e2 * eta ^ 2 - 0.700e3 / 0.39e2 * eta - 0.3443e4 / 0.195e3) * ci2 ^ 4 + (-eta ^ 4 - 0.428e3 / 0.195e3 * eta ^ 3 + 0.32e2 / 0.39e2 * eta ^ 2 + 0.700e3 / 0.39e2 * eta + 0.3443e4 / 0.195e3) * ci2 ^ 2 + 0.86e2 / 0.585e3 * eta ^ 4 - 0.28e2 / 0.585e3 * eta ^ 3 - 0.566e3 / 0.585e3 * eta ^ 2 - 0.1564e4 / 0.585e3 * eta - 0.136e3 / 0.65e2) * sin((g + 3 * f)) + 0.237e3 / 0.320e3 * (eta - 0.1e1) * ((eta ^ 4 - 0.1128e4 / 0.79e2 * eta ^ 3 - 0.2632e4 / 0.79e2 * eta ^ 2 - 0.1480e4 / 0.79e2 * eta - 0.71e2 / 0.79e2) * ci2 ^ 4 + (-eta ^ 4 + 0.1128e4 / 0.79e2 * eta ^ 3 + 0.2632e4 / 0.79e2 * eta ^ 2 + 0.1480e4 / 0.79e2 * eta + 0.71e2 / 0.79e2) * ci2 ^ 2 + eta ^ 4 / 0.9e1 - 0.1622e4 / 0.711e3 * eta ^ 3 - 0.1222e4 / 0.237e3 * eta ^ 2 - 0.2122e4 / 0.711e3 * eta - 0.173e3 / 0.711e3) * sin((3 * g + 2 * h + f)) + 0.69e2 / 0.128e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 3 + 0.4093e4 / 0.1035e4 * eta ^ 2 + 0.7969e4 / 0.1035e4 * eta - 0.2249e4 / 0.1035e4) * ci2 ^ 4 + (-eta ^ 3 - 0.4093e4 / 0.1035e4 * eta ^ 2 - 0.7969e4 / 0.1035e4 * eta + 0.2249e4 / 0.1035e4) * ci2 ^ 2 + 0.167e3 / 0.1035e4 * eta ^ 3 + 0.1409e4 / 0.1035e4 * eta ^ 2 + 0.1901e4 / 0.1035e4 * eta - 0.709e3 / 0.1035e4) * sin((f - g)) + 0.27e2 / 0.640e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g + f)) - 0.11e2 / 0.48e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.11e2 * eta + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 3 * f)) - 0.11e2 / 0.640e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.101e3 / 0.11e2 * eta ^ 2 + 0.193e3 / 0.11e2 * eta + 0.111e3 / 0.11e2) * (eta - 0.1e1) * sin((-g + 2 * h + f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.73e2 / 0.15e2) * (eta - 0.1e1) ^ 2 * sin((3 * g + 7 * f)) / 0.128e3 + 0.31e2 / 0.640e3 * (eta ^ 3 - 0.325e3 / 0.93e2 * eta ^ 2 - 0.1081e4 / 0.93e2 * eta - 0.149e3 / 0.31e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 5 * f)) + 0.11e2 / 0.240e3 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 7 * f)) - 0.79e2 / 0.320e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 - 0.3332e4 / 0.237e3 * eta ^ 3 - 0.2580e4 / 0.79e2 * eta ^ 2 - 0.1428e4 / 0.79e2 * eta - 0.161e3 / 0.237e3) * (eta - 0.1e1) * sin((3 * g + f)) - ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 7 * f)) / 0.128e3 + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + 3 * f)) / 0.640e3 - ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + 3 * f)) / 0.640e3 + 0.39e2 / 0.320e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 5 - 0.833e3 / 0.39e2 * eta ^ 4 - 0.316e3 / 0.13e2 * eta ^ 3 + 0.424e3 / 0.13e2 * eta ^ 2 + 0.431e3 / 0.13e2 * eta - 0.71e2 / 0.39e2) * sin((g - 2 * h + f)) + 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * cos((f - g)) - 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + f)) + 0.105e3 / 0.16e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + f)) + 0.23e2 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 4 + 0.328e3 / 0.69e2 * eta ^ 3 + 0.440e3 / 0.69e2 * eta ^ 2 - 0.2456e4 / 0.69e2 * eta - 0.991e3 / 0.23e2) * sin((g - 2 * h + 3 * f)) - 0.23e2 / 0.16e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (eta - 0.1e1) * cos((g + 3 * f)) + 0.13e2 / 0.240e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + f)) + 0.31e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2) * sin((5 * g + 2 * h + 5 * f)) + ((0.31e2 / 0.320e3 * eta ^ 5 - 0.4177e4 / 0.960e3 * eta - 0.991e3 / 0.320e3 + 0.519e3 / 0.320e3 * eta ^ 4 + 0.263e3 / 0.80e2 * eta ^ 3 - 0.13e2 / 0.24e2 * eta ^ 2) * ci2 ^ 4 + (-0.519e3 / 0.320e3 * eta ^ 4 - 0.263e3 / 0.80e2 * eta ^ 3 - 0.31e2 / 0.320e3 * eta ^ 5 + 0.13e2 / 0.24e2 * eta ^ 2 + 0.4177e4 / 0.960e3 * eta + 0.991e3 / 0.320e3) * ci2 ^ 2 - 0.101e3 / 0.320e3 + 0.31e2 / 0.2880e4 * eta ^ 5 + 0.433e3 / 0.2880e4 * eta ^ 4 + 0.77e2 / 0.240e3 * eta ^ 3 - 0.17e2 / 0.720e3 * eta ^ 2 - 0.1163e4 / 0.2880e4 * eta) * sin((3 * g + 2 * h + 3 * f)) - 0.35e2 / 0.16e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 0.1e1) * cos((3 * g + f)) + 0.23e2 / 0.48e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * Delta * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) - 0.3e1 / 0.128e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.38e2 / 0.5e1 * eta - 0.269e3 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - 2 * h + 5 * f)) + 0.39e2 / 0.16e2 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * cos((3 * g + 2 * h + 3 * f)) - 0.57e2 / 0.16e2 * (0.1e1 + eta) * cos((f + g)) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * Delta - 0.31e2 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 5 + 0.427e3 / 0.31e2 * eta ^ 4 + 0.1020e4 / 0.31e2 * eta ^ 3 + 0.368e3 / 0.93e2 * eta ^ 2 - 0.3601e4 / 0.93e2 * eta - 0.1035e4 / 0.31e2) * (ci2 + 0.1e1) * sin((3 * g + 3 * f)) - 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * cos((5 * f + g)) + 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + 5 * f)) + Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + f)) / 0.16e2 - Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 5 * f)) / 0.16e2 - 0.13e2 / 0.16e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((3 * g + 3 * f)) - Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + f)) / 0.16e2 + Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 5 * f)) / 0.16e2 + 0.19e2 / 0.16e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * Delta * cos((g - 2 * h + f))) * J ^ 2 * sqrt(-ci2 ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) / a ^ 4 / ci2 / eta ^ 11 / (0.1e1 + eta)];
D4 = [0.15e2 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * J ^ 2 * ((-ci2 ^ 2 * (eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 3 * f + 2 * g)) / 0.40e2 - Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * cos((-h + 3 * f + 2 * g)) + 0.3e1 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 5 * f + 2 * g)) + ((-0.181e3 / 0.40e2 - 0.3e1 / 0.40e2 * eta ^ 2 - 0.5e1 / 0.2e1 * eta) * ci2 ^ 4 + (0.181e3 / 0.40e2 + 0.3e1 / 0.40e2 * eta ^ 2 + 0.5e1 / 0.2e1 * eta) * ci2 ^ 2 - eta ^ 2 / 0.120e3 - 0.4e1 / 0.15e2 * eta - 0.59e2 / 0.120e3) * sin((h + 3 * f + 2 * g)) - 0.3e1 / 0.8e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * sin((-h + f + 2 * g)) - 0.3e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + 3 * f + 2 * g)) + 0.9e1 / 0.40e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h - 2 * g + f)) + 0.9e1 / 0.40e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 5 * f + 2 * g)) - 0.3e1 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * cos((-h + f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * sin((h + 3 * f + 4 * g)) / 0.5e1 - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * sin((h + 5 * f + 4 * g)) / 0.5e1 - 0.3e1 / 0.10e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((-h + 3 * f)) + ((0.693e3 / 0.40e2 - 0.9e1 / 0.8e1 * eta ^ 2 + 0.153e3 / 0.10e2 * eta) * ci2 ^ 4 + (-0.153e3 / 0.10e2 * eta - 0.693e3 / 0.40e2 + 0.9e1 / 0.8e1 * eta ^ 2) * ci2 ^ 2 + 0.21e2 / 0.8e1 - eta ^ 2 / 0.8e1 + 0.12e2 / 0.5e1 * eta) * sin((h + f + 2 * g)) - 0.9e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + f + 2 * g)) + 0.3e1 / 0.40e2 * sin((h - 2 * g + f)) * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) + ((0.57e2 / 0.10e2 + 0.9e1 / 0.10e2 * eta ^ 2 + 0.3e1 * eta) * ci2 ^ 4 + (-0.57e2 / 0.10e2 - 0.9e1 / 0.10e2 * eta ^ 2 - 0.3e1 * eta) * ci2 ^ 2 + 0.3e1 / 0.20e2 * eta ^ 2 + 0.11e2 / 0.10e2 * eta + 0.31e2 / 0.20e2) * sin((-h + f)) - 0.3e1 / 0.10e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * sin((h + 3 * f)) + 0.9e1 / 0.10e2 * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 4 + (-0.19e2 / 0.3e1 - eta ^ 2 - 0.10e2 / 0.3e1 * eta) * ci2 ^ 2 + eta ^ 2 / 0.6e1 + 0.11e2 / 0.9e1 * eta + 0.31e2 / 0.18e2) * sin((h + f))) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * (-ci2 ^ 2 * (eta ^ 2 - 0.7e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * g + 2 * f)) / 0.10e2 + 0.13e2 / 0.40e2 * (eta + 0.31e2 / 0.13e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-h + 2 * g + 4 * f)) + (-0.3e1 * Delta * ci2 ^ 4 + 0.3e1 * Delta * ci2 ^ 2) * cos((-h + 2 * g + 2 * f)) + ((0.21e2 / 0.10e2 - 0.3e1 / 0.10e2 * eta ^ 2) * ci2 ^ 4 + (-0.21e2 / 0.10e2 + 0.3e1 / 0.10e2 * eta ^ 2) * ci2 ^ 2 + 0.1e1 / 0.2e1 - eta ^ 2 / 0.10e2) * sin((h + 2 * g + 2 * f)) + 0.39e2 / 0.40e2 * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.31e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.11e2 / 0.39e2) * (eta - 0.1e1) * sin((h + 2 * g + 4 * f)) - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 2 * f + 4 * g)) / 0.4e1 - ci2 ^ 2 * (eta ^ 2 + 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 4 * f + 4 * g)) / 0.20e2 + ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((h + 6 * f + 4 * g)) / 0.20e2 - 0.9e1 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * cos((h + 2 * g + 2 * f)) + (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.7e1 / 0.5e1) * sin((-h + 2 * f)) / 0.4e1 - 0.3e1 / 0.2e1 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g)) - 0.9e1 / 0.2e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.7e1 / 0.45e2) * (eta - 0.1e1) * cos((h + 2 * g)) + (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.7e1 / 0.5e1) * sin((h + 2 * f)) / 0.4e1 + cos(h) * ((eta ^ 2 + 0.7e1) * ci2 ^ 4 + (-eta ^ 2 - 0.7e1) * ci2 ^ 2 - eta ^ 2 / 0.5e1 + 0.2e1) * Delta)) / a ^ 5 / ci2 / eta ^ 8 / (0.1e1 + eta) 0.15e2 / 0.4e1 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * (0.9e1 / 0.40e2 * (-(eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((-h + 3 * f - 2 * g)) / 0.4e1 - 0.5e1 / 0.12e2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ci2 ^ 2 * cos((-h + 2 * g + 7 * f)) + (-0.10e2 / 0.3e1 * Delta * ci2 ^ 4 + 0.10e2 / 0.3e1 * Delta * ci2 ^ 2) * sin((-h + 5 * f + 2 * g)) - 0.5e1 / 0.4e1 * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((h + 2 * g + 7 * f)) + 0.10e2 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((-h - 2 * g + f)) - 0.10e2 * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((h + 5 * f + 2 * g)) - (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ci2 ^ 2 * cos((h + 3 * f - 2 * g)) / 0.12e2 + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) * cos((-h + 5 * f)) + (0.10e2 / 0.3e1 * Delta * ci2 ^ 4 - 0.10e2 / 0.3e1 * Delta * ci2 ^ 2) * sin((h - 2 * g + f)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) * cos((h + 5 * f))) * (0.1e1 + eta) * (-eta ^ 2 + 0.1e1) ^ (0.3e1 / 0.2e1) + (-0.83e2 / 0.80e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.266e3 / 0.83e2 * eta ^ 3 + 0.396e3 / 0.83e2 * eta ^ 2 - 0.610e3 / 0.83e2 * eta - 0.991e3 / 0.83e2) * cos((-h + 3 * f + 2 * g)) + 0.27e2 / 0.160e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * cos((-h + 5 * f + 2 * g)) + 0.9e1 / 0.4e1 * Delta * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 3 * f + 2 * g)) - 0.27e2 / 0.160e3 * (0.1e1 + eta) ^ 2 * ((eta - 0.37e2) * ci2 ^ 4 + (-eta + 0.37e2) * ci2 ^ 2 + eta / 0.9e1 - 0.163e3 / 0.27e2) * (eta - 0.1e1) * cos((-h - 2 * g + f)) + ((-0.297e3 / 0.20e2 * eta ^ 2 + 0.183e3 / 0.8e1 * eta - 0.249e3 / 0.80e2 * eta ^ 4 - 0.399e3 / 0.40e2 * eta ^ 3 + 0.2973e4 / 0.80e2) * ci2 ^ 4 + (0.297e3 / 0.20e2 * eta ^ 2 - 0.183e3 / 0.8e1 * eta + 0.249e3 / 0.80e2 * eta ^ 4 + 0.399e3 / 0.40e2 * eta ^ 3 - 0.2973e4 / 0.80e2) * ci2 ^ 2 + 0.303e3 / 0.80e2 - 0.33e2 / 0.80e2 * eta ^ 4 - eta ^ 3 + 0.11e2 / 0.5e1 * eta - 0.59e2 / 0.40e2 * eta ^ 2) * cos((h + 3 * f + 2 * g)) + 0.81e2 / 0.160e3 * (0.1e1 + eta) * ((eta ^ 2 - 0.116e3 / 0.9e1 * eta - 0.269e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.116e3 / 0.9e1 * eta + 0.269e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 - 0.128e3 / 0.81e2 * eta - 0.281e3 / 0.81e2) * (eta - 0.1e1) * cos((h + 5 * f + 2 * g)) + 0.27e2 / 0.4e1 * (0.1e1 + eta) * Delta * (eta ^ 2 - 0.5e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((h + 3 * f + 2 * g)) - 0.51e2 / 0.16e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.6e1 / 0.17e2 * eta ^ 3 - 0.12e2 / 0.17e2 * eta ^ 2 + 0.58e2 / 0.85e2 * eta + 0.71e2 / 0.85e2) * cos((-h + f + 2 * g)) + 0.3e1 / 0.4e1 * (eta ^ 2 - 0.11e2 / 0.15e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 3 * f + 4 * g)) - 0.9e1 / 0.20e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 5 * f + 4 * g)) - 0.11e2 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g + 7 * f)) + 0.9e1 / 0.4e1 * Delta * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + f + 2 * g)) - 0.9e1 / 0.40e2 * (0.1e1 + eta) * ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (eta - 0.1e1) * cos((-h + 3 * f)) + ((-0.639e3 / 0.80e2 - 0.153e3 / 0.16e2 * eta ^ 4 - 0.27e2 / 0.8e1 * eta ^ 3 + 0.27e2 / 0.4e1 * eta ^ 2 - 0.261e3 / 0.40e2 * eta) * ci2 ^ 4 + (0.639e3 / 0.80e2 + 0.153e3 / 0.16e2 * eta ^ 4 + 0.27e2 / 0.8e1 * eta ^ 3 - 0.27e2 / 0.4e1 * eta ^ 2 + 0.261e3 / 0.40e2 * eta) * ci2 ^ 2 - 0.173e3 / 0.80e2 - 0.101e3 / 0.80e2 * eta ^ 4 + 0.53e2 / 0.40e2 * eta ^ 2 - 0.2e1 * eta) * cos((h + f + 2 * g)) + 0.27e2 / 0.4e1 * (0.1e1 + eta) * Delta * (eta ^ 2 - 0.5e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((h + f + 2 * g)) - 0.9e1 / 0.160e3 * ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.37e2) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h - 2 * g + f)) + 0.13e2 / 0.20e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g + f)) + ((0.3e1 / 0.4e1 * eta ^ 3 + 0.21e2 / 0.4e1 * eta ^ 2 - 0.47e2 / 0.4e1 * eta - 0.203e3 / 0.10e2 + 0.9e1 / 0.20e2 * eta ^ 4) * ci2 ^ 4 + (-0.3e1 / 0.4e1 * eta ^ 3 - 0.21e2 / 0.4e1 * eta ^ 2 + 0.47e2 / 0.4e1 * eta + 0.203e3 / 0.10e2 - 0.9e1 / 0.20e2 * eta ^ 4) * ci2 ^ 2 + 0.15e2 / 0.8e1 * eta ^ 2 - 0.161e3 / 0.40e2 * eta + 0.3e1 / 0.40e2 * eta ^ 4 - 0.109e3 / 0.20e2 + 0.9e1 / 0.8e1 * eta ^ 3) * cos((-h + f)) - 0.9e1 / 0.40e2 * ((eta ^ 2 - 0.10e2 / 0.9e1 * eta - 0.235e3 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 + 0.10e2 / 0.9e1 * eta + 0.235e3 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.5e1 / 0.3e1 * eta - 0.35e2 / 0.6e1) * (0.1e1 + eta) * (eta - 0.1e1) * cos((h + 3 * f)) + 0.9e1 / 0.20e2 * ((0.5e1 / 0.3e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.3e1 * eta ^ 2 - 0.235e3 / 0.9e1 * eta - 0.406e3 / 0.9e1) * ci2 ^ 4 + (-0.35e2 / 0.3e1 * eta ^ 2 - eta ^ 4 - 0.5e1 / 0.3e1 * eta ^ 3 + 0.235e3 / 0.9e1 * eta + 0.406e3 / 0.9e1) * ci2 ^ 2 + 0.25e2 / 0.6e1 * eta ^ 2 + eta ^ 4 / 0.6e1 + 0.5e1 / 0.2e1 * eta ^ 3 - 0.161e3 / 0.18e2 * eta - 0.109e3 / 0.9e1) * cos((h + f))) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * (-0.9e1 / 0.8e1 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-eta - 0.4e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta + 0.2e1 / 0.15e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-h - 2 * g + 2 * f)) + 0.13e2 / 0.40e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.46e2 / 0.13e2) * cos((-h + 6 * f + 2 * g)) - 0.3e1 / 0.20e2 * ci2 ^ 2 * (eta ^ 4 + 0.20e2 * eta ^ 3 + 0.12e2 * eta ^ 2 + 0.12e2 * eta - 0.37e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g + 2 * f)) + 0.3e1 / 0.5e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * (eta - 0.1e1) * cos((-h + 2 * g + 4 * f)) + 0.9e1 * (eta ^ 2 - 0.5e1 / 0.3e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((-h + 2 * g + 2 * f)) + 0.9e1 / 0.2e1 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-h + 2 * g + 4 * f)) + 0.39e2 / 0.40e2 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * cos((h + 6 * f + 2 * g)) + ((0.333e3 / 0.20e2 - 0.9e1 / 0.20e2 * eta ^ 4 - 0.9e1 * eta ^ 3 - 0.27e2 / 0.5e1 * eta ^ 2 - 0.27e2 / 0.5e1 * eta) * ci2 ^ 4 + (0.27e2 / 0.5e1 * eta - 0.333e3 / 0.20e2 + 0.9e1 / 0.20e2 * eta ^ 4 + 0.9e1 * eta ^ 3 + 0.27e2 / 0.5e1 * eta ^ 2) * ci2 ^ 2 - 0.3e1 / 0.20e2 * eta ^ 4 - 0.6e1 / 0.5e1 * eta ^ 3 + 0.3e1 / 0.10e2 * eta ^ 2 - 0.3e1 / 0.5e1 * eta + 0.17e2 / 0.20e2) * cos((h + 2 * g + 2 * f)) + 0.9e1 / 0.5e1 * ((eta ^ 3 + 0.3e1 * eta ^ 2 - 0.39e2 / 0.4e1 * eta - 0.73e2 / 0.4e1) * ci2 ^ 4 + (-eta ^ 3 - 0.3e1 * eta ^ 2 + 0.39e2 / 0.4e1 * eta + 0.73e2 / 0.4e1) * ci2 ^ 2 + eta ^ 3 / 0.9e1 + eta ^ 2 / 0.3e1 - 0.10e2 / 0.9e1 * eta - 0.37e2 / 0.18e2) * (eta - 0.1e1) * cos((h + 2 * g + 4 * f)) - 0.3e1 / 0.10e2 * ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.2e1) * (eta + 0.2e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 2 * f + 4 * g)) - 0.3e1 / 0.20e2 * ci2 ^ 2 * (eta ^ 4 + 0.2e1 * eta ^ 2 - 0.25e2 / 0.3e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * f + 4 * g)) + ci2 ^ 2 * (eta - 0.1e1) * (eta - 0.4e1) * (eta + 0.4e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 6 * f + 4 * g)) / 0.10e2 + 0.3e1 / 0.40e2 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 8 * f + 4 * g)) - 0.3e1 / 0.8e1 * (eta + 0.4e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((h - 2 * g + 2 * f)) + 0.27e2 * (eta ^ 2 - 0.5e1 / 0.3e1) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((h + 2 * g + 2 * f)) + (0.27e2 / 0.2e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((h + 2 * g + 4 * f)) + ((-0.13e2 / 0.10e2 * eta ^ 2 + 0.4e1 * eta + 0.13e2 + eta ^ 3 / 0.2e1) * ci2 ^ 4 + (0.13e2 / 0.10e2 * eta ^ 2 - 0.4e1 * eta - 0.13e2 - eta ^ 3 / 0.2e1) * ci2 ^ 2 - 0.2e1 / 0.5e1 * eta ^ 2 - eta ^ 3 / 0.10e2 + 0.7e1 / 0.4e1 * eta + 0.13e2 / 0.4e1) * cos((-h + 2 * f)) + (0.1e1 + eta) * (eta - 0.1e1) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * cos((-h + 4 * f)) / 0.8e1 - 0.3e1 / 0.2e1 * (eta ^ 4 + 0.23e2 / 0.15e2 * eta ^ 3 + 0.11e2 / 0.15e2 * eta ^ 2 - 0.79e2 / 0.30e2 * eta - 0.91e2 / 0.30e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-h + 2 * g)) + 0.9e1 / 0.2e1 * Delta * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (0.1e1 + eta) * sin((-h + 2 * g)) + ((0.273e3 / 0.20e2 - 0.9e1 / 0.2e1 * eta ^ 4 - 0.69e2 / 0.10e2 * eta ^ 3 - 0.33e2 / 0.10e2 * eta ^ 2 + 0.237e3 / 0.20e2 * eta) * ci2 ^ 4 + (0.9e1 / 0.2e1 * eta ^ 4 - 0.273e3 / 0.20e2 + 0.69e2 / 0.10e2 * eta ^ 3 + 0.33e2 / 0.10e2 * eta ^ 2 - 0.237e3 / 0.20e2 * eta) * ci2 ^ 2 - eta ^ 2 / 0.2e1 + 0.12e2 / 0.5e1 - 0.7e1 / 0.10e2 * eta ^ 4 - 0.11e2 / 0.10e2 * eta ^ 3 + 0.11e2 / 0.5e1 * eta) * cos((h + 2 * g)) + ((-0.13e2 / 0.10e2 * eta ^ 2 + 0.4e1 * eta + 0.13e2 + eta ^ 3 / 0.2e1) * ci2 ^ 4 + (0.13e2 / 0.10e2 * eta ^ 2 - 0.4e1 * eta - 0.13e2 - eta ^ 3 / 0.2e1) * ci2 ^ 2 - 0.2e1 / 0.5e1 * eta ^ 2 - eta ^ 3 / 0.10e2 + 0.7e1 / 0.4e1 * eta + 0.13e2 / 0.4e1) * cos((h + 2 * f)) + (0.1e1 + eta) * (eta - 0.1e1) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * cos((h + 4 * f)) / 0.8e1 - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((h + 4 * g)) / 0.8e1 + 0.27e2 / 0.2e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * sin((h + 2 * g)) + cos(h) * ((0.7e1 / 0.4e1 * eta ^ 3 + eta ^ 4 + 0.35e2 / 0.4e1 * eta ^ 2 + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * ci2 ^ 4 + (-eta ^ 4 - 0.7e1 / 0.4e1 * eta ^ 3 - 0.35e2 / 0.4e1 * eta ^ 2 - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * ci2 ^ 2 - eta ^ 4 / 0.5e1 - 0.7e1 / 0.20e2 * eta ^ 3 + 0.33e2 / 0.20e2 * eta ^ 2 + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2)) * (eta - 0.1e1))) * J ^ 2 / a ^ 4 / ci2 / eta ^ 11 / (0.1e1 + eta) -0.81e2 / 0.4e1 * R__e ^ 4 * J ^ 2 * ((-0.20e2 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.7e1 / 0.60e2) * Delta * cos((3 * f + 2 * g)) - 0.20e2 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.7e1 / 0.60e2) * Delta * cos((f + 2 * g)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * h - 2 * g + f)) / 0.24e2 + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 4 + (-0.19e2 / 0.3e1 - eta ^ 2 - 0.10e2 / 0.3e1 * eta) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.26e2 / 0.27e2 * eta + 0.44e2 / 0.27e2) * sin((-2 * h + f)) / 0.2e1 - 0.5e1 / 0.6e1 * ((eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta ^ 2 + 0.34e2 / 0.3e1 * eta + 0.77e2 / 0.6e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 - 0.5e1 / 0.3e1 * eta - 0.28e2 / 0.15e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((f + 2 * g)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 4 + (-0.19e2 / 0.3e1 - eta ^ 2 - 0.10e2 / 0.3e1 * eta) * ci2 ^ 2 + 0.2e1 / 0.9e1 * eta ^ 2 + 0.26e2 / 0.27e2 * eta + 0.44e2 / 0.27e2) * sin((2 * h + f)) / 0.2e1 - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta ^ 2 - 0.250e3 / 0.9e1 * eta - 0.905e3 / 0.18e2) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.11e2 / 0.3e1 * eta + 0.20e2 / 0.3e1) * sin((3 * f + 2 * g)) / 0.18e2 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * h + 3 * f)) / 0.6e1 + (ci2 ^ 2 - 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((-2 * g + f)) / 0.6e1 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f)) / 0.6e1 + (ci2 ^ 2 - 0.1e1 / 0.6e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * sin((5 * f + 2 * g)) / 0.6e1 + (0.1e1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * (eta - 0.1e1) * sin((2 * h + 5 * f + 2 * g)) / 0.8e1 - (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.13e2 / 0.18e2 * ci2 ^ 4 - 0.1e1 / 0.36e2) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * f)) / 0.3e1 - 0.5e1 * (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * cos((2 * h + f + 2 * g)) + (0.1e1 + eta) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * (eta - 0.1e1) * sin((-2 * h - 2 * g + f)) / 0.8e1 - 0.5e1 / 0.3e1 * (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * cos((2 * h + 3 * f + 2 * g)) + ((-eta ^ 2 / 0.24e2 - 0.25e2 / 0.18e2 * eta - 0.181e3 / 0.72e2) * ci2 ^ 8 + (0.5e1 / 0.72e2 * eta ^ 2 + 0.125e3 / 0.54e2 * eta + 0.905e3 / 0.216e3) * ci2 ^ 6 + (-0.79e2 / 0.81e2 * eta - 0.1145e4 / 0.648e3 - 0.19e2 / 0.648e3 * eta ^ 2) * ci2 ^ 4 + 0.59e2 / 0.1296e4 + 0.2e1 / 0.81e2 * eta + eta ^ 2 / 0.1296e4) * sin((2 * h + 3 * f + 2 * g)) + ((0.77e2 / 0.8e1 - 0.5e1 / 0.8e1 * eta ^ 2 + 0.17e2 / 0.2e1 * eta) * ci2 ^ 8 + (-0.85e2 / 0.6e1 * eta + 0.25e2 / 0.24e2 * eta ^ 2 - 0.385e3 / 0.24e2) * ci2 ^ 6 + (-0.95e2 / 0.216e3 * eta ^ 2 + 0.55e2 / 0.9e1 * eta + 0.497e3 / 0.72e2) * ci2 ^ 4 - 0.35e2 / 0.144e3 + 0.5e1 / 0.432e3 * eta ^ 2 - 0.2e1 / 0.9e1 * eta) * sin((2 * h + f + 2 * g)) - 0.5e1 / 0.9e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 5 * f + 2 * g)) / 0.24e2 - 0.5e1 / 0.3e1 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + f + 2 * g)) + sin(f) * ((0.19e2 / 0.3e1 + eta ^ 2 + 0.10e2 / 0.3e1 * eta) * ci2 ^ 8 + (-0.50e2 / 0.9e1 * eta - 0.5e1 / 0.3e1 * eta ^ 2 - 0.95e2 / 0.9e1) * ci2 ^ 6 + (0.259e3 / 0.54e2 + 0.13e2 / 0.18e2 * eta ^ 2 + 0.71e2 / 0.27e2 * eta) * ci2 ^ 4 - 0.31e2 / 0.108e3 - eta ^ 2 / 0.36e2 - 0.11e2 / 0.54e2 * eta) - ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) / 0.72e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 3 * f + 4 * g)) / 0.9e1 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 5 * f + 4 * g)) / 0.9e1 - 0.5e1 / 0.24e2 * ci2 ^ 2 * (eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((5 * f + 4 * g)) / 0.9e1 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((3 * f + 4 * g)) / 0.9e1) * sqrt(-eta ^ 2 + 0.1e1) - 0.10e2 / 0.3e1 * (0.1e1 + eta) * (ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta ^ 2 - 0.7e1) * sin((-2 * h + 2 * g + 2 * f)) / 0.60e2 - 0.13e2 / 0.240e3 * (eta + 0.31e2 / 0.13e2) * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 4 * f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 2 * f + 4 * g)) / 0.24e2 + ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 4 * f + 4 * g)) / 0.120e3 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * sin((2 * h + 6 * f + 4 * g)) / 0.120e3 + ((-0.7e1 / 0.20e2 + eta ^ 2 / 0.20e2) * ci2 ^ 8 + (0.7e1 / 0.12e2 - eta ^ 2 / 0.12e2) * ci2 ^ 6 + (-0.47e2 / 0.180e3 + 0.7e1 / 0.180e3 * eta ^ 2) * ci2 ^ 4 - eta ^ 2 / 0.360e3 + 0.1e1 / 0.72e2) * sin((2 * h + 2 * g + 2 * f)) - 0.13e2 / 0.80e2 * (eta - 0.1e1) * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta - 0.155e3 / 0.39e2) * ci2 ^ 6 + (0.83e2 / 0.117e3 * eta + 0.197e3 / 0.117e3) * ci2 ^ 4 - 0.5e1 / 0.234e3 * eta - 0.11e2 / 0.234e3) * sin((2 * h + 2 * g + 4 * f)) + ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + 2 * g + 2 * f)) / 0.2e1 + 0.3e1 / 0.2e1 * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * cos((2 * h + 2 * g + 2 * f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((2 * g - 2 * h)) / 0.4e1 + 0.3e1 / 0.4e1 * (0.1e1 + eta) * Delta * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.97e2 / 0.135e3 * ci2 ^ 4 - 0.7e1 / 0.270e3) * cos((2 * g + 2 * h)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((2 * f + 4 * g)) / 0.24e2 + ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((4 * f + 4 * g)) / 0.120e3 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (eta - 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((6 * f + 4 * g)) / 0.120e3 + ci2 ^ 2 * ((eta ^ 2 - 0.7e1) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta ^ 2 + 0.35e2 / 0.6e1) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.1e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * g + 2 * f)) / 0.15e2 - 0.13e2 / 0.60e2 * ci2 ^ 2 * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 4 + (-0.5e1 / 0.6e1 * eta - 0.155e3 / 0.78e2) * ci2 ^ 2 + 0.3e1 / 0.26e2 * eta + 0.7e1 / 0.26e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((2 * g + 4 * f)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * sin((-2 * h + 2 * f)) / 0.24e2 - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * sin((2 * h + 2 * f)) / 0.24e2 + 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.7e1 / 0.60e2) * Delta * cos((2 * g + 2 * f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (ci2 ^ 4 - 0.5e1 / 0.6e1 * ci2 ^ 2 + 0.11e2 / 0.90e2) * (eta - 0.1e1) * cos((2 * g)) - ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * ((eta ^ 2 + 0.7e1) * ci2 ^ 4 + (-eta ^ 2 - 0.7e1) * ci2 ^ 2 + eta ^ 2 / 0.10e2 + 0.11e2 / 0.6e1) * cos((2 * h)) / 0.6e1 - (eta - 0.1e1) * ((eta - 0.31e2 / 0.5e1) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta + 0.31e2 / 0.3e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta - 0.23e2 / 0.5e1) * ci2 ^ 4 + eta / 0.30e2 + 0.7e1 / 0.30e2) * sin((2 * f)) / 0.12e2 - Delta * ((eta ^ 2 + 0.7e1) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta ^ 2 - 0.35e2 / 0.3e1) * ci2 ^ 6 + (0.3e1 / 0.5e1 * eta ^ 2 + 0.16e2 / 0.3e1) * ci2 ^ 4 + eta ^ 2 / 0.30e2 - 0.1e1 / 0.3e1) / 0.6e1)) / eta ^ 8 / a ^ 4 / (0.1e1 + eta) -0.135e3 / 0.4e1 * ((-ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta ^ 2 + 0.100e3 / 0.3e1 * eta + 0.181e3 / 0.3e1) * cos((-2 * h + 3 * f + 2 * g)) / 0.120e3 + ((0.181e3 / 0.120e3 + eta ^ 2 / 0.40e2 + 0.5e1 / 0.6e1 * eta) * ci2 ^ 8 + (-eta ^ 2 / 0.24e2 - 0.25e2 / 0.18e2 * eta - 0.181e3 / 0.72e2) * ci2 ^ 6 + (0.229e3 / 0.216e3 + 0.19e2 / 0.1080e4 * eta ^ 2 + 0.79e2 / 0.135e3 * eta) * ci2 ^ 4 - 0.59e2 / 0.2160e4 - eta ^ 2 / 0.2160e4 - 0.2e1 / 0.135e3 * eta) * cos((2 * h + 3 * f + 2 * g)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((-2 * h + 5 * f + 2 * g)) / 0.40e2 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 3 * f + 4 * g)) / 0.15e2 - 0.3e1 / 0.40e2 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * cos((2 * h + 5 * f + 2 * g)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 5 * f + 4 * g)) / 0.15e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 3 * f + 2 * g)) / 0.3e1 - (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * sin((2 * h + 3 * f + 2 * g)) - ci2 ^ 2 * (eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((-2 * h + f + 2 * g)) / 0.8e1 + ((-0.51e2 / 0.10e2 * eta - 0.231e3 / 0.40e2 + 0.3e1 / 0.8e1 * eta ^ 2) * ci2 ^ 8 + (0.77e2 / 0.8e1 - 0.5e1 / 0.8e1 * eta ^ 2 + 0.17e2 / 0.2e1 * eta) * ci2 ^ 6 + (-0.11e2 / 0.3e1 * eta - 0.497e3 / 0.120e3 + 0.19e2 / 0.72e2 * eta ^ 2) * ci2 ^ 4 + 0.7e1 / 0.48e2 + 0.2e1 / 0.15e2 * eta - eta ^ 2 / 0.144e3) * cos((2 * h + f + 2 * g)) + 0.3e1 / 0.40e2 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.19e2 / 0.27e2 * ci2 ^ 4 - 0.1e1 / 0.54e2) * cos((-2 * h - 2 * g + f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((2 * h - 2 * g + f)) / 0.40e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + f + 2 * g)) - 0.3e1 * (0.1e1 + eta) * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * sin((2 * h + f + 2 * g)) - (((eta ^ 2 / 0.15e2 + 0.20e2 / 0.9e1 * eta + 0.181e3 / 0.45e2) * ci2 ^ 4 + (-0.4e1 / 0.45e2 * eta ^ 2 - 0.80e2 / 0.27e2 * eta - 0.724e3 / 0.135e3) * ci2 ^ 2 + 0.116e3 / 0.135e3 * eta + 0.7e1 / 0.270e3 * eta ^ 2 + 0.421e3 / 0.270e3) * cos((3 * f + 2 * g)) - 0.4e1 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((3 * f + 4 * g)) - (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.7e1 / 0.18e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((5 * f + 2 * g)) / 0.5e1 + 0.4e1 / 0.15e2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((5 * f + 4 * g)) + 0.2e1 / 0.5e1 * (0.1e1 + eta) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((-2 * h + 3 * f)) - 0.2e1 / 0.5e1 * (0.1e1 + eta) * (ci2 ^ 2 - 0.2e1 / 0.3e1) * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((2 * h + 3 * f)) - 0.8e1 / 0.3e1 * (0.1e1 + eta) * Delta * (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.2e1 / 0.5e1) * sin((3 * f + 2 * g)) + ((eta ^ 2 - 0.68e2 / 0.5e1 * eta - 0.77e2 / 0.5e1) * ci2 ^ 4 + (0.308e3 / 0.15e2 - 0.4e1 / 0.3e1 * eta ^ 2 + 0.272e3 / 0.15e2 * eta) * ci2 ^ 2 + 0.7e1 / 0.18e2 * eta ^ 2 - 0.28e2 / 0.5e1 * eta - 0.63e2 / 0.10e2) * cos((f + 2 * g)) + ((-0.38e2 / 0.5e1 - 0.6e1 / 0.5e1 * eta ^ 2 - 0.4e1 * eta) * ci2 ^ 4 + (0.6e1 / 0.5e1 * eta ^ 2 + 0.4e1 * eta + 0.38e2 / 0.5e1) * ci2 ^ 2 - 0.4e1 / 0.15e2 * eta ^ 2 - 0.52e2 / 0.45e2 * eta - 0.88e2 / 0.45e2) * cos((-2 * h + f)) + ((0.6e1 / 0.5e1 * eta ^ 2 + 0.4e1 * eta + 0.38e2 / 0.5e1) * ci2 ^ 4 + (-0.38e2 / 0.5e1 - 0.6e1 / 0.5e1 * eta ^ 2 - 0.4e1 * eta) * ci2 ^ 2 + 0.52e2 / 0.45e2 * eta + 0.88e2 / 0.45e2 + 0.4e1 / 0.15e2 * eta ^ 2) * cos((2 * h + f)) + (0.1e1 + eta) * ((ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.7e1 / 0.18e2) * (eta - 0.1e1) * cos((-2 * g + f)) - 0.40e2 * Delta * sin((f + 2 * g)) * (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.2e1 / 0.5e1)) / 0.5e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) / 0.4e1) * sqrt(-eta ^ 2 + 0.1e1) + (0.1e1 + eta) * (-ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta ^ 2 - 0.7e1) * cos((-2 * h + 2 * g + 2 * f)) / 0.30e2 + 0.13e2 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * (eta + 0.31e2 / 0.13e2) * cos((-2 * h + 2 * g + 4 * f)) + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 2 * f + 4 * g)) / 0.12e2 + ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 4 * f + 4 * g)) / 0.60e2 - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 / 0.3e1 - 0.1e1 / 0.6e1) * cos((2 * h + 6 * f + 4 * g)) / 0.60e2 + ((-0.7e1 / 0.10e2 + eta ^ 2 / 0.10e2) * ci2 ^ 8 + (-eta ^ 2 / 0.6e1 + 0.7e1 / 0.6e1) * ci2 ^ 6 + (0.7e1 / 0.90e2 * eta ^ 2 - 0.47e2 / 0.90e2) * ci2 ^ 4 + 0.1e1 / 0.36e2 - eta ^ 2 / 0.180e3) * cos((2 * h + 2 * g + 2 * f)) - 0.13e2 / 0.40e2 * (eta - 0.1e1) * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 8 + (-0.5e1 / 0.3e1 * eta - 0.155e3 / 0.39e2) * ci2 ^ 6 + (0.83e2 / 0.117e3 * eta + 0.197e3 / 0.117e3) * ci2 ^ 4 - 0.5e1 / 0.234e3 * eta - 0.11e2 / 0.234e3) * cos((2 * h + 2 * g + 4 * f)) + ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * Delta * (ci2 ^ 2 - 0.1e1 / 0.3e1) * sin((-2 * h + 2 * g + 2 * f)) - 0.3e1 * Delta * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.32e2 / 0.45e2 * ci2 ^ 4 - 0.1e1 / 0.45e2) * sin((2 * h + 2 * g + 2 * f)) - ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((2 * f + 4 * g)) / 0.12e2 - ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * (eta ^ 2 + 0.3e1) * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * cos((4 * f + 4 * g)) / 0.60e2 + ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * cos((6 * f + 4 * g)) / 0.60e2 - ci2 ^ 2 * (ci2 - 0.1e1) * ((eta ^ 2 - 0.7e1) * ci2 ^ 4 + (-0.4e1 / 0.3e1 * eta ^ 2 + 0.28e2 / 0.3e1) * ci2 ^ 2 + eta ^ 2 / 0.2e1 - 0.19e2 / 0.6e1) * (ci2 + 0.1e1) * cos((2 * g + 2 * f)) / 0.15e2 + 0.13e2 / 0.60e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * ((eta + 0.31e2 / 0.13e2) * ci2 ^ 4 + (-0.4e1 / 0.3e1 * eta - 0.124e3 / 0.39e2) * ci2 ^ 2 + 0.31e2 / 0.78e2 * eta + 0.73e2 / 0.78e2) * cos((2 * g + 4 * f)) + ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-2 * h + 2 * f)) / 0.12e2 - ((eta - 0.31e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.31e2 / 0.5e1) * ci2 ^ 2 + eta / 0.10e2 - 0.3e1 / 0.2e1) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((2 * h + 2 * f)) / 0.12e2 + (ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) ^ 2 * (ci2 + 0.1e1) ^ 2 * (ci2 ^ 2 - 0.1e1 / 0.3e1) * (eta - 0.1e1) * sin((2 * g - 2 * h)) / 0.2e1 - 0.3e1 / 0.2e1 * (0.1e1 + eta) * (eta - 0.1e1) * (ci2 ^ 8 - 0.5e1 / 0.3e1 * ci2 ^ 6 + 0.97e2 / 0.135e3 * ci2 ^ 4 - 0.7e1 / 0.270e3) * sin((2 * g + 2 * h)) + ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * ((0.2e1 * ci2 ^ 4 - 0.8e1 / 0.3e1 * ci2 ^ 2 + 0.4e1 / 0.5e1) * sin((2 * g + 2 * f)) + (0.1e1 + eta) * (ci2 ^ 4 - 0.4e1 / 0.3e1 * ci2 ^ 2 + 0.37e2 / 0.90e2) * (eta - 0.1e1) * sin((2 * g)) + sin((2 * h)) * ((eta ^ 2 + 0.7e1) * ci2 ^ 4 + (-eta ^ 2 - 0.7e1) * ci2 ^ 2 + eta ^ 2 / 0.10e2 + 0.11e2 / 0.6e1) / 0.3e1)) * Delta)) * R__e ^ 4 * J ^ 2 / eta ^ 8 / a ^ 4 / (0.1e1 + eta) 0.45e2 / 0.2e1 * (0.39e2 / 0.80e2 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 3 + 0.398e3 / 0.117e3 * eta ^ 2 + 0.779e3 / 0.117e3 * eta - 0.406e3 / 0.117e3) * ci2 ^ 4 + (-eta ^ 3 - 0.398e3 / 0.117e3 * eta ^ 2 - 0.779e3 / 0.117e3 * eta + 0.406e3 / 0.117e3) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.157e3 / 0.117e3 * eta ^ 2 + 0.401e3 / 0.234e3 * eta - 0.109e3 / 0.117e3) * sin((-g - 2 * h + f)) - 0.21e2 / 0.160e3 * (0.1e1 + eta) * ((eta ^ 3 - 0.13e2 / 0.63e2 * eta ^ 2 - 0.41e2 / 0.9e1 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.63e2 * eta ^ 2 + 0.41e2 / 0.9e1 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.31e2 / 0.126e3 * eta ^ 2 - 0.149e3 / 0.126e3 * eta - 0.5e1 / 0.6e1) * (eta - 0.1e1) * sin((g + 2 * h + 3 * f)) - 0.21e2 / 0.160e3 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta ^ 2 + 0.32e2 / 0.63e2 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 2 - 0.32e2 / 0.63e2 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.8e1 / 0.63e2 * eta - 0.5e1 / 0.6e1) * sin((-g - 2 * h + 3 * f)) - 0.3e1 / 0.160e3 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sin((-g - 2 * h + 5 * f)) + 0.3e1 / 0.128e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((g + 7 * f)) + 0.3e1 / 0.640e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * sin((-3 * g - 2 * h + 3 * f)) + 0.81e2 / 0.640e3 * ((eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 - 0.134e3 / 0.27e2 * eta - 0.37e2 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.62e2 / 0.81e2 * eta + 0.163e3 / 0.243e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-3 * g - 2 * h + f)) + 0.33e2 / 0.640e3 * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.13e2) * (eta + 0.21e2 / 0.11e2) * ci2 ^ 4 + (-eta ^ 2 + 0.122e3 / 0.11e2 * eta + 0.273e3 / 0.11e2) * ci2 ^ 2 + eta ^ 2 / 0.11e2 - 0.46e2 / 0.33e2 * eta - 0.287e3 / 0.99e2) * sin((5 * f + g)) + 0.93e2 / 0.640e3 * ((eta ^ 3 - 0.111e3 / 0.31e2 * eta ^ 2 - 0.387e3 / 0.31e2 * eta - 0.269e3 / 0.31e2) * ci2 ^ 4 + (-eta ^ 3 + 0.111e3 / 0.31e2 * eta ^ 2 + 0.387e3 / 0.31e2 * eta + 0.269e3 / 0.31e2) * ci2 ^ 2 + eta ^ 3 / 0.9e1 - 0.41e2 / 0.93e2 * eta ^ 2 - 0.137e3 / 0.93e2 * eta - 0.281e3 / 0.279e3) * (0.1e1 + eta) * (eta - 0.1e1) * sin((3 * g + 2 * h + 5 * f)) - 0.81e2 / 0.640e3 * ((eta ^ 2 + 0.110e3 / 0.243e3 * eta - 0.949e3 / 0.243e3) * ci2 ^ 4 + (-eta ^ 2 - 0.110e3 / 0.243e3 * eta + 0.949e3 / 0.243e3) * ci2 ^ 2 + 0.41e2 / 0.243e3 * eta ^ 2 - 0.34e2 / 0.243e3 * eta - 0.211e3 / 0.243e3) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-g + 3 * f)) - 0.3e1 / 0.160e3 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 3 * sin((-g + 5 * f)) + 0.3e1 / 0.128e3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * sin((3 * g + 2 * h + 7 * f)) - 0.3e1 / 0.160e3 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * sin((2 * h + g + 5 * f)) + ((-0.16633e5 / 0.960e3 * eta + 0.39e2 / 0.320e3 * eta ^ 5 + 0.9161e4 / 0.960e3 * eta ^ 4 + 0.565e3 / 0.48e2 * eta ^ 3 - 0.72e2 / 0.5e1 * eta ^ 2 - 0.197e3 / 0.192e3) * ci2 ^ 4 + (0.16633e5 / 0.960e3 * eta - 0.565e3 / 0.48e2 * eta ^ 3 + 0.72e2 / 0.5e1 * eta ^ 2 - 0.39e2 / 0.320e3 * eta ^ 5 - 0.9161e4 / 0.960e3 * eta ^ 4 + 0.197e3 / 0.192e3) * ci2 ^ 2 - 0.263e3 / 0.960e3 + 0.13e2 / 0.320e3 * eta ^ 5 + 0.355e3 / 0.192e3 * eta ^ 4 + 0.527e3 / 0.240e3 * eta ^ 3 - 0.21e2 / 0.8e1 * eta ^ 2 - 0.205e3 / 0.64e2 * eta) * sin((f + g)) - 0.13e2 / 0.64e2 * (eta - 0.1e1) * ((eta ^ 4 + 0.428e3 / 0.195e3 * eta ^ 3 - 0.32e2 / 0.39e2 * eta ^ 2 - 0.700e3 / 0.39e2 * eta - 0.3443e4 / 0.195e3) * ci2 ^ 4 + (-eta ^ 4 - 0.428e3 / 0.195e3 * eta ^ 3 + 0.32e2 / 0.39e2 * eta ^ 2 + 0.700e3 / 0.39e2 * eta + 0.3443e4 / 0.195e3) * ci2 ^ 2 + 0.86e2 / 0.585e3 * eta ^ 4 - 0.28e2 / 0.585e3 * eta ^ 3 - 0.566e3 / 0.585e3 * eta ^ 2 - 0.1564e4 / 0.585e3 * eta - 0.136e3 / 0.65e2) * sin((g + 3 * f)) - 0.237e3 / 0.320e3 * (eta - 0.1e1) * ((eta ^ 4 - 0.1128e4 / 0.79e2 * eta ^ 3 - 0.2632e4 / 0.79e2 * eta ^ 2 - 0.1480e4 / 0.79e2 * eta - 0.71e2 / 0.79e2) * ci2 ^ 4 + (-eta ^ 4 + 0.1128e4 / 0.79e2 * eta ^ 3 + 0.2632e4 / 0.79e2 * eta ^ 2 + 0.1480e4 / 0.79e2 * eta + 0.71e2 / 0.79e2) * ci2 ^ 2 + eta ^ 4 / 0.9e1 - 0.1622e4 / 0.711e3 * eta ^ 3 - 0.1222e4 / 0.237e3 * eta ^ 2 - 0.2122e4 / 0.711e3 * eta - 0.173e3 / 0.711e3) * sin((3 * g + 2 * h + f)) + 0.69e2 / 0.128e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 3 + 0.4093e4 / 0.1035e4 * eta ^ 2 + 0.7969e4 / 0.1035e4 * eta - 0.2249e4 / 0.1035e4) * ci2 ^ 4 + (-eta ^ 3 - 0.4093e4 / 0.1035e4 * eta ^ 2 - 0.7969e4 / 0.1035e4 * eta + 0.2249e4 / 0.1035e4) * ci2 ^ 2 + 0.167e3 / 0.1035e4 * eta ^ 3 + 0.1409e4 / 0.1035e4 * eta ^ 2 + 0.1901e4 / 0.1035e4 * eta - 0.709e3 / 0.1035e4) * sin((f - g)) + 0.27e2 / 0.640e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g + f)) + 0.11e2 / 0.48e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.11e2 * eta + 0.1e1 / 0.5e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 3 * f)) + 0.11e2 / 0.640e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.101e3 / 0.11e2 * eta ^ 2 + 0.193e3 / 0.11e2 * eta + 0.111e3 / 0.11e2) * (eta - 0.1e1) * sin((-g + 2 * h + f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.73e2 / 0.15e2) * (eta - 0.1e1) ^ 2 * sin((3 * g + 7 * f)) / 0.128e3 + 0.31e2 / 0.640e3 * (eta ^ 3 - 0.325e3 / 0.93e2 * eta ^ 2 - 0.1081e4 / 0.93e2 * eta - 0.149e3 / 0.31e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 5 * f)) - 0.11e2 / 0.240e3 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 7 * f)) - 0.79e2 / 0.320e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 - 0.3332e4 / 0.237e3 * eta ^ 3 - 0.2580e4 / 0.79e2 * eta ^ 2 - 0.1428e4 / 0.79e2 * eta - 0.161e3 / 0.237e3) * (eta - 0.1e1) * sin((3 * g + f)) + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 7 * f)) / 0.128e3 + ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + 3 * f)) / 0.640e3 + ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + 3 * f)) / 0.640e3 - 0.39e2 / 0.320e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 5 - 0.833e3 / 0.39e2 * eta ^ 4 - 0.316e3 / 0.13e2 * eta ^ 3 + 0.424e3 / 0.13e2 * eta ^ 2 + 0.431e3 / 0.13e2 * eta - 0.71e2 / 0.39e2) * sin((g - 2 * h + f)) + 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * cos((f - g)) + 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + f)) - 0.105e3 / 0.16e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + f)) - 0.23e2 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 4 + 0.328e3 / 0.69e2 * eta ^ 3 + 0.440e3 / 0.69e2 * eta ^ 2 - 0.2456e4 / 0.69e2 * eta - 0.991e3 / 0.23e2) * sin((g - 2 * h + 3 * f)) - 0.23e2 / 0.16e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (eta - 0.1e1) * cos((g + 3 * f)) - 0.13e2 / 0.240e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + f)) - 0.31e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2) * sin((5 * g + 2 * h + 5 * f)) - 0.35e2 / 0.16e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * Delta * (eta - 0.1e1) * cos((3 * g + f)) - 0.23e2 / 0.48e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * Delta * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) + 0.3e1 / 0.128e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.38e2 / 0.5e1 * eta - 0.269e3 / 0.15e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((g - 2 * h + 5 * f)) - 0.39e2 / 0.16e2 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * cos((3 * g + 2 * h + 3 * f)) - 0.57e2 / 0.16e2 * (0.1e1 + eta) * cos((f + g)) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * Delta - 0.31e2 / 0.960e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 5 + 0.427e3 / 0.31e2 * eta ^ 4 + 0.1020e4 / 0.31e2 * eta ^ 3 + 0.368e3 / 0.93e2 * eta ^ 2 - 0.3601e4 / 0.93e2 * eta - 0.1035e4 / 0.31e2) * (ci2 + 0.1e1) * sin((3 * g + 3 * f)) - 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * cos((5 * f + g)) - 0.3e1 / 0.16e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h + 5 * f)) + (0.15e2 / 0.2e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * cos((3 * g + 2 * h + 2 * f)) + 0.9e1 / 0.8e1 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * cos((3 * g + 2 * h + 4 * f)) - (0.1e1 + eta) ^ 2 * (eta - 0.1e1) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((g + 2 * h + 4 * f)) / 0.96e2 - 0.13e2 / 0.160e3 * (0.1e1 + eta) ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) * sin((3 * g + 2 * h + 6 * f)) + 0.9e1 / 0.2e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * cos((g + 2 * f)) + (0.1e1 + eta) * ((eta ^ 3 - 0.211e3 / 0.24e2 * eta - 0.9e1 / 0.8e1) * ci2 ^ 4 + (-eta ^ 3 + 0.211e3 / 0.24e2 * eta + 0.9e1 / 0.8e1) * ci2 ^ 2 + eta ^ 3 / 0.3e1 - 0.39e2 / 0.20e2 * eta - 0.3e1 / 0.20e2) * Delta * cos(g) + 0.3e1 / 0.32e2 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-eta - 0.4e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta + 0.2e1 / 0.15e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * sin((-3 * g - 2 * h + 2 * f)) - 0.13e2 / 0.160e3 * (0.1e1 + eta) * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) ^ 2 * sin((g + 6 * f)) - (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((-g + 4 * f)) / 0.96e2 - (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * sin((-g - 2 * h + 4 * f)) / 0.96e2 + ((0.31e2 / 0.240e3 * eta ^ 4 - 0.56e2 / 0.15e2 * eta ^ 2 + 0.91e2 / 0.80e2 * eta ^ 3 - 0.529e3 / 0.80e2 * eta - 0.593e3 / 0.240e3) * ci2 ^ 4 + (-0.31e2 / 0.240e3 * eta ^ 4 + 0.56e2 / 0.15e2 * eta ^ 2 - 0.91e2 / 0.80e2 * eta ^ 3 + 0.529e3 / 0.80e2 * eta + 0.593e3 / 0.240e3) * ci2 ^ 2 - 0.41e2 / 0.120e3 + 0.61e2 / 0.240e3 * eta ^ 3 - 0.289e3 / 0.240e3 * eta + 0.7e1 / 0.80e2 * eta ^ 4 - 0.61e2 / 0.80e2 * eta ^ 2) * sin((g + 2 * f)) - 0.113e3 / 0.240e3 * sin(g) * ((eta ^ 4 + 0.203e3 / 0.113e3 * eta ^ 3 + 0.139e3 / 0.113e3 * eta ^ 2 - 0.59e2 / 0.113e3 * eta + 0.196e3 / 0.113e3) * ci2 ^ 4 + (-eta ^ 4 - 0.203e3 / 0.113e3 * eta ^ 3 - 0.139e3 / 0.113e3 * eta ^ 2 + 0.59e2 / 0.113e3 * eta - 0.196e3 / 0.113e3) * ci2 ^ 2 + 0.11e2 / 0.113e3 * eta ^ 4 + 0.19e2 / 0.113e3 * eta ^ 3 + 0.20e2 / 0.113e3 * eta ^ 2 + 0.33e2 / 0.113e3 * eta + 0.81e2 / 0.113e3) + 0.29e2 / 0.80e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.65e2 / 0.29e2 * eta ^ 2 + 0.121e3 / 0.29e2 * eta + 0.91e2 / 0.29e2) * ci2 ^ 4 + (-eta ^ 3 - 0.65e2 / 0.29e2 * eta ^ 2 - 0.121e3 / 0.29e2 * eta - 0.91e2 / 0.29e2) * ci2 ^ 2 + 0.13e2 / 0.87e2 * eta ^ 3 + 0.31e2 / 0.87e2 * eta ^ 2 + 0.64e2 / 0.87e2 * eta + 0.16e2 / 0.29e2) * sin((3 * g + 2 * h)) - 0.7e1 / 0.48e2 * ((eta ^ 3 - 0.156e3 / 0.35e2 * eta ^ 2 - 0.39e2 / 0.35e2 * eta + 0.52e2 / 0.7e1) * ci2 ^ 4 + (-eta ^ 3 + 0.156e3 / 0.35e2 * eta ^ 2 + 0.39e2 / 0.35e2 * eta - 0.52e2 / 0.7e1) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.48e2 / 0.35e2 * eta ^ 2 + 0.6e1 / 0.35e2 * eta + 0.13e2 / 0.7e1) * (eta - 0.1e1) * sin((-g - 2 * h + 2 * f)) - 0.5e1 / 0.96e2 * ((eta ^ 3 - 0.438e3 / 0.25e2 * eta ^ 2 - 0.39e2 / 0.5e1 * eta + 0.484e3 / 0.25e2) * ci2 ^ 4 + (-eta ^ 3 + 0.438e3 / 0.25e2 * eta ^ 2 + 0.39e2 / 0.5e1 * eta - 0.484e3 / 0.25e2) * ci2 ^ 2 - 0.21e2 / 0.25e2 * eta ^ 3 - 0.116e3 / 0.25e2 * eta ^ 2 - 0.7e1 / 0.25e2 * eta + 0.124e3 / 0.25e2) * (eta - 0.1e1) * sin((-g + 2 * f)) - 0.31e2 / 0.96e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.387e3 / 0.155e3 * eta ^ 2 - 0.147e3 / 0.31e2 * eta - 0.1381e4 / 0.155e3) * ci2 ^ 4 + (-eta ^ 3 - 0.387e3 / 0.155e3 * eta ^ 2 + 0.147e3 / 0.31e2 * eta + 0.1381e4 / 0.155e3) * ci2 ^ 2 + 0.17e2 / 0.155e3 * eta ^ 3 + 0.37e2 / 0.155e3 * eta ^ 2 - 0.19e2 / 0.31e2 * eta - 0.161e3 / 0.155e3) * sin((g + 4 * f)) - (eta ^ 2 + 0.19e2 / 0.5e1 * eta - 0.6e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g + 6 * f)) / 0.32e2 + (eta + 0.4e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * sin((-3 * g + 2 * f)) / 0.32e2 + (eta + 0.4e1 / 0.5e1) * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((-g + 2 * h + 2 * f)) / 0.32e2 + 0.49e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.55e2 / 0.49e2 * eta + 0.24e2 / 0.49e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((5 * g + 2 * h + 2 * f)) - 0.13e2 / 0.480e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.46e2 / 0.13e2) * sin((g - 2 * h + 6 * f)) + 0.3e1 / 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * cos((g - 2 * h + 2 * f)) + 0.5e1 / 0.2e1 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * cos((2 * f + 3 * g)) + 0.3e1 / 0.8e1 * Delta * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((4 * f + 3 * g)) + (eta ^ 2 - 0.3e1 / 0.2e1 * eta - 0.1e1 / 0.2e1) * ci2 ^ 2 * (0.1e1 + eta) * (eta + 0.3e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((g - 2 * h)) / 0.2e1 + ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + eta - 0.3e1 / 0.8e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * cos((3 * g)) - ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 8 * f)) / 0.160e3 - ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h)) / 0.96e2 + 0.53e2 / 0.480e3 * (eta ^ 3 + 0.115e3 / 0.53e2 * eta ^ 2 + 0.227e3 / 0.53e2 * eta + 0.177e3 / 0.53e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((3 * g)) - 0.31e2 / 0.240e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.25e2 / 0.31e2 * eta ^ 2 - 0.37e2 / 0.31e2 * eta - 0.91e2 / 0.31e2) * sin((g - 2 * h)) - ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((5 * g + 2 * h + 8 * f)) / 0.160e3 - 0.3e1 / 0.80e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.2e1 / 0.9e1 * eta ^ 2 - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * sin((5 * g + 2 * h + 6 * f)) - 0.5e1 / 0.48e2 * (eta ^ 3 + 0.74e2 / 0.25e2 * eta ^ 2 - 0.101e3 / 0.25e2 * eta - 0.219e3 / 0.25e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * sin((g - 2 * h + 4 * f)) + 0.11e2 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.11e2 * eta ^ 3 - 0.277e3 / 0.22e2 * eta ^ 2 - 0.188e3 / 0.11e2 * eta - 0.111e3 / 0.22e2) * sin((g - 2 * h + 2 * f)) + 0.13e2 / 0.80e2 * ci2 ^ 2 * (eta ^ 4 + 0.17e2 / 0.13e2 * eta ^ 3 - 0.236e3 / 0.39e2 * eta ^ 2 - 0.233e3 / 0.39e2 * eta + 0.45e2 / 0.13e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((2 * f + 3 * g)) + 0.7e1 / 0.120e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.14e2 * eta ^ 3 + eta ^ 2 / 0.2e1 + 0.13e2 / 0.14e2 * eta + 0.25e2 / 0.14e2) * sin((5 * g + 2 * h + 4 * f)) + 0.3e1 * (0.1e1 + eta) * ((eta ^ 2 + eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 - eta + 0.3e1 / 0.8e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta ^ 2 + 0.7e1 / 0.45e2 * eta - 0.1e1 / 0.20e2) * Delta * (eta - 0.1e1) * cos((3 * g + 2 * h)) - 0.3e1 / 0.16e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.44e2 / 0.15e2 * eta ^ 3 - 0.8e1 / 0.5e1 * eta ^ 2 - 0.7e1 * eta - 0.194e3 / 0.45e2) * sin((4 * f + 3 * g)) - ((eta ^ 2 + 0.28e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 - 0.28e2 / 0.3e1) * ci2 ^ 2 - eta ^ 2 / 0.5e1 + 0.8e1 / 0.3e1) * (0.1e1 + eta) * eta * Delta * cos((g + 2 * h)) / 0.2e1 + 0.9e1 / 0.8e1 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * cos((g + 4 * f)) + ((-eta ^ 4 / 0.12e2 - 0.65e2 / 0.48e2 * eta - 0.7e1 / 0.48e2 * eta ^ 3 - 0.35e2 / 0.48e2 * eta ^ 2 - 0.469e3 / 0.240e3) * ci2 ^ 4 + (0.7e1 / 0.48e2 * eta ^ 3 + 0.35e2 / 0.48e2 * eta ^ 2 + 0.65e2 / 0.48e2 * eta + eta ^ 4 / 0.12e2 + 0.469e3 / 0.240e3) * ci2 ^ 2 + eta ^ 4 / 0.60e2 + 0.7e1 / 0.240e3 * eta ^ 3 - 0.7e1 / 0.16e2 * eta - 0.43e2 / 0.80e2 - 0.11e2 / 0.80e2 * eta ^ 2) * sin((g + 2 * h)) + ((-0.13e2 / 0.12e2 - 0.7e1 / 0.48e2 * eta ^ 4 + 0.57e2 / 0.80e2 * eta ^ 3 - 0.13e2 / 0.48e2 * eta ^ 2 - 0.153e3 / 0.80e2 * eta) * ci2 ^ 4 + (0.13e2 / 0.12e2 + 0.7e1 / 0.48e2 * eta ^ 4 - 0.57e2 / 0.80e2 * eta ^ 3 + 0.13e2 / 0.48e2 * eta ^ 2 + 0.153e3 / 0.80e2 * eta) * ci2 ^ 2 + 0.7e1 / 0.240e3 * eta ^ 4 + 0.3e1 / 0.16e2 * eta ^ 3 - 0.19e2 / 0.120e3 * eta ^ 2 - 0.43e2 / 0.80e2 * eta - 0.13e2 / 0.48e2) * sin((g + 2 * h + 2 * f)) + ((0.3e1 / 0.8e1 * eta ^ 4 + 0.3e1 / 0.5e1 * eta ^ 3 - 0.113e3 / 0.40e2 * eta - 0.199e3 / 0.80e2 * eta ^ 2 + 0.111e3 / 0.80e2) * ci2 ^ 4 + (-0.3e1 / 0.8e1 * eta ^ 4 - 0.3e1 / 0.5e1 * eta ^ 3 + 0.113e3 / 0.40e2 * eta + 0.199e3 / 0.80e2 * eta ^ 2 - 0.111e3 / 0.80e2) * ci2 ^ 2 - 0.41e2 / 0.80e2 * eta ^ 2 - 0.5e1 / 0.8e1 * eta + 0.11e2 / 0.120e3 * eta ^ 4 + eta ^ 3 / 0.8e1 + 0.17e2 / 0.240e3) * sin((3 * g + 2 * h + 2 * f)) + ((0.219e3 / 0.80e2 - 0.51e2 / 0.80e2 * eta ^ 4 - 0.27e2 / 0.16e2 * eta ^ 3 + 0.103e3 / 0.80e2 * eta ^ 2 + 0.22e2 / 0.5e1 * eta) * ci2 ^ 4 + (-0.219e3 / 0.80e2 + 0.51e2 / 0.80e2 * eta ^ 4 + 0.27e2 / 0.16e2 * eta ^ 3 - 0.103e3 / 0.80e2 * eta ^ 2 - 0.22e2 / 0.5e1 * eta) * ci2 ^ 2 + 0.37e2 / 0.120e3 + 0.3e1 / 0.20e2 * eta ^ 2 + eta / 0.2e1 - 0.19e2 / 0.240e3 * eta ^ 4 - 0.47e2 / 0.240e3 * eta ^ 3) * sin((3 * g + 2 * h + 4 * f)) + 0.3e1 / 0.8e1 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 4 * f))) * sqrt(-eta ^ 2 + 0.1e1) + ((-0.519e3 / 0.320e3 * eta ^ 4 - 0.263e3 / 0.80e2 * eta ^ 3 - 0.31e2 / 0.320e3 * eta ^ 5 + 0.13e2 / 0.24e2 * eta ^ 2 + 0.4177e4 / 0.960e3 * eta + 0.991e3 / 0.320e3) * ci2 ^ 4 + (0.31e2 / 0.320e3 * eta ^ 5 - 0.4177e4 / 0.960e3 * eta - 0.991e3 / 0.320e3 + 0.519e3 / 0.320e3 * eta ^ 4 + 0.263e3 / 0.80e2 * eta ^ 3 - 0.13e2 / 0.24e2 * eta ^ 2) * ci2 ^ 2 - 0.31e2 / 0.2880e4 * eta ^ 5 - 0.77e2 / 0.240e3 * eta ^ 3 + 0.17e2 / 0.720e3 * eta ^ 2 + 0.1163e4 / 0.2880e4 * eta + 0.101e3 / 0.320e3 - 0.433e3 / 0.2880e4 * eta ^ 4) * sin((3 * g + 2 * h + 3 * f)) + ((0.39e2 / 0.80e2 * eta ^ 5 + 0.26e2 / 0.15e2 * eta ^ 4 + 0.173e3 / 0.60e2 * eta ^ 3 - 0.99e2 / 0.40e2 * eta ^ 2 - 0.1249e4 / 0.240e3 * eta - 0.203e3 / 0.120e3) * ci2 ^ 4 + (-0.39e2 / 0.80e2 * eta ^ 5 - 0.26e2 / 0.15e2 * eta ^ 4 - 0.173e3 / 0.60e2 * eta ^ 3 + 0.99e2 / 0.40e2 * eta ^ 2 + 0.1249e4 / 0.240e3 * eta + 0.203e3 / 0.120e3) * ci2 ^ 2 + 0.13e2 / 0.160e3 * eta ^ 5 + 0.2e1 / 0.3e1 * eta ^ 4 + 0.113e3 / 0.120e3 * eta ^ 3 - 0.191e3 / 0.240e3 * eta ^ 2 - 0.241e3 / 0.160e3 * eta - 0.109e3 / 0.240e3) * sin((g + 2 * h + f)) + Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + f)) / 0.16e2 - Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 5 * f)) / 0.16e2 - 0.13e2 / 0.16e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * cos((3 * g + 3 * f)) + Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + f)) / 0.16e2 - Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 5 * f)) / 0.16e2 - 0.19e2 / 0.16e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * Delta * cos((g - 2 * h + f))) * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * J ^ 2 / a ^ 4 / eta ^ 11 / ci2 / (0.1e1 + eta) -0.219e3 / 0.32e2 * sqrt(-ci2 ^ 2 + 0.1e1) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 4 * J ^ 2 * (0.525e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 0.1e1) * sin((3 * g + f)) - 0.115e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * sin((g - 2 * h + 3 * f)) - 0.63e2 / 0.146e3 * (0.1e1 + eta) * (eta - 0.1e1) * ((eta ^ 3 - 0.13e2 / 0.63e2 * eta ^ 2 - 0.41e2 / 0.9e1 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 3 + 0.13e2 / 0.63e2 * eta ^ 2 + 0.41e2 / 0.9e1 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 3 / 0.6e1 - 0.31e2 / 0.126e3 * eta ^ 2 - 0.149e3 / 0.126e3 * eta - 0.5e1 / 0.6e1) * cos((g + 2 * h + 3 * f)) - 0.45e2 / 0.584e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((g + 7 * f)) - 0.837e3 / 0.584e3 * ((eta ^ 3 + 0.2275e4 / 0.837e3 * eta ^ 2 + 0.145e3 / 0.27e2 * eta - 0.137e3 / 0.27e2) * ci2 ^ 4 + (-eta ^ 3 - 0.2275e4 / 0.837e3 * eta ^ 2 - 0.145e3 / 0.27e2 * eta + 0.137e3 / 0.27e2) * ci2 ^ 2 + 0.145e3 / 0.837e3 * eta ^ 3 + 0.1103e4 / 0.837e3 * eta ^ 2 + 0.1307e4 / 0.837e3 * eta - 0.115e3 / 0.93e2) * (0.1e1 + eta) * (eta - 0.1e1) * cos((f - g)) + 0.261e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.146e3 / 0.261e3 * eta - 0.931e3 / 0.261e3) * ci2 ^ 4 + (-eta ^ 2 - 0.146e3 / 0.261e3 * eta + 0.931e3 / 0.261e3) * ci2 ^ 2 + 0.43e2 / 0.261e3 * eta ^ 2 - 0.10e2 / 0.87e2 * eta - 0.209e3 / 0.261e3) * (eta - 0.1e1) ^ 2 * cos((-g + 3 * f)) - 0.9e1 / 0.146e3 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((2 * h + g + 5 * f)) - 0.117e3 / 0.73e2 * (0.1e1 + eta) * ((eta ^ 3 + 0.398e3 / 0.117e3 * eta ^ 2 + 0.779e3 / 0.117e3 * eta - 0.406e3 / 0.117e3) * ci2 ^ 4 + (-eta ^ 3 - 0.398e3 / 0.117e3 * eta ^ 2 - 0.779e3 / 0.117e3 * eta + 0.406e3 / 0.117e3) * ci2 ^ 2 + eta ^ 3 / 0.6e1 + 0.157e3 / 0.117e3 * eta ^ 2 + 0.401e3 / 0.234e3 * eta - 0.109e3 / 0.117e3) * (eta - 0.1e1) * cos((-g - 2 * h + f)) - 0.9e1 / 0.584e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((-3 * g - 2 * h + 3 * f)) + 0.63e2 / 0.146e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.32e2 / 0.63e2 * eta - 0.235e3 / 0.63e2) * ci2 ^ 4 + (-eta ^ 2 - 0.32e2 / 0.63e2 * eta + 0.235e3 / 0.63e2) * ci2 ^ 2 + eta ^ 2 / 0.6e1 - 0.8e1 / 0.63e2 * eta - 0.5e1 / 0.6e1) * (eta - 0.1e1) ^ 2 * cos((-g - 2 * h + 3 * f)) + ((-0.31e2 / 0.4e1 + 0.819e3 / 0.292e3 * eta ^ 5 - 0.5833e4 / 0.292e3 * eta ^ 4 - 0.1441e4 / 0.73e2 * eta ^ 3 + 0.2268e4 / 0.73e2 * eta ^ 2 + 0.6641e4 / 0.292e3 * eta) * ci2 ^ 4 + (0.31e2 / 0.4e1 + 0.5833e4 / 0.292e3 * eta ^ 4 - 0.2268e4 / 0.73e2 * eta ^ 2 + 0.1441e4 / 0.73e2 * eta ^ 3 - 0.6641e4 / 0.292e3 * eta - 0.819e3 / 0.292e3 * eta ^ 5) * ci2 ^ 2 - 0.495e3 / 0.292e3 * eta ^ 4 + 0.248e3 / 0.73e2 * eta ^ 2 - 0.75e2 / 0.73e2 * eta ^ 3 + 0.183e3 / 0.292e3 * eta - 0.609e3 / 0.292e3 + 0.117e3 / 0.292e3 * eta ^ 5) * cos((f + g)) - 0.13e2 / 0.73e2 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + f)) + 0.23e2 / 0.292e3 * (eta ^ 4 + 0.328e3 / 0.69e2 * eta ^ 3 + 0.440e3 / 0.69e2 * eta ^ 2 - 0.2456e4 / 0.69e2 * eta - 0.991e3 / 0.23e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((g - 2 * h + 3 * f)) + 0.1575e4 / 0.73e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta ^ 2 + 0.38e2 / 0.35e2 * eta + 0.3e1 / 0.7e1) * (eta - 0.1e1) * sin((3 * g + 2 * h + f)) - 0.31e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.9e1 / 0.31e2 * eta ^ 2 - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2) * cos((5 * g + 2 * h + 5 * f)) - 0.11e2 / 0.73e2 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 7 * f)) - 0.237e3 / 0.292e3 * ci2 ^ 2 * (eta ^ 4 - 0.3436e4 / 0.237e3 * eta ^ 3 - 0.2684e4 / 0.79e2 * eta ^ 2 - 0.1532e4 / 0.79e2 * eta - 0.265e3 / 0.237e3) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + f)) - 0.171e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 2 - 0.106e3 / 0.19e2 * eta - 0.265e3 / 0.19e2) * ci2 ^ 4 + (-eta ^ 2 + 0.106e3 / 0.19e2 * eta + 0.265e3 / 0.19e2) * ci2 ^ 2 + 0.7e1 / 0.57e2 * eta ^ 2 - 0.2e1 / 0.3e1 * eta - 0.275e3 / 0.171e3) * (eta - 0.1e1) ^ 2 * cos((5 * f + g)) + 0.9e1 / 0.146e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g - 2 * h + 5 * f)) + 0.45e2 / 0.584e3 * (0.1e1 + eta) ^ 3 * (eta - 0.1e1) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.9e1) * cos((3 * g + 2 * h + 7 * f)) + 0.279e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 3 - 0.111e3 / 0.31e2 * eta ^ 2 - 0.387e3 / 0.31e2 * eta - 0.269e3 / 0.31e2) * ci2 ^ 4 + (-eta ^ 3 + 0.111e3 / 0.31e2 * eta ^ 2 + 0.387e3 / 0.31e2 * eta + 0.269e3 / 0.31e2) * ci2 ^ 2 + eta ^ 3 / 0.9e1 - 0.41e2 / 0.93e2 * eta ^ 2 - 0.137e3 / 0.93e2 * eta - 0.281e3 / 0.279e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + 5 * f)) - 0.243e3 / 0.584e3 * (0.1e1 + eta) * ((eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * ci2 ^ 4 + (-eta ^ 2 - 0.134e3 / 0.27e2 * eta - 0.37e2 / 0.9e1) * ci2 ^ 2 + eta ^ 2 / 0.9e1 + 0.62e2 / 0.81e2 * eta + 0.163e3 / 0.243e3) * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + f)) + 0.9e1 / 0.146e3 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.6e1) * cos((-g + 5 * f)) - 0.81e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta ^ 2 + 0.134e3 / 0.27e2 * eta + 0.37e2 / 0.9e1) * cos((-3 * g + f)) + (-0.5e1 / 0.146e3 * (0.1e1 + eta) ^ 2 * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (eta - 0.1e1) * cos((g + 2 * h + 4 * f)) + ((-0.742e3 / 0.73e2 + eta ^ 4 + 0.133e3 / 0.73e2 * eta ^ 3 - 0.211e3 / 0.73e2 * eta ^ 2 - 0.709e3 / 0.73e2 * eta) * ci2 ^ 4 + (-0.133e3 / 0.73e2 * eta ^ 3 + 0.211e3 / 0.73e2 * eta ^ 2 + 0.709e3 / 0.73e2 * eta - eta ^ 4 + 0.742e3 / 0.73e2) * ci2 ^ 2 + 0.33e2 / 0.73e2 * eta ^ 3 + 0.19e2 / 0.73e2 * eta ^ 4 - 0.177e3 / 0.73e2 - 0.46e2 / 0.73e2 * eta ^ 2 - 0.177e3 / 0.73e2 * eta) * cos(g) + 0.63e2 / 0.146e3 * (eta ^ 3 + 0.145e3 / 0.63e2 * eta ^ 2 + 0.257e3 / 0.63e2 * eta + 0.187e3 / 0.63e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g)) - 0.5e1 / 0.146e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h)) - 0.9e1 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.2e1 / 0.9e1 * eta ^ 2 - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * cos((5 * g + 2 * h + 6 * f)) - 0.3e1 / 0.146e3 * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((5 * g + 2 * h + 8 * f)) + 0.25e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 3 + 0.74e2 / 0.25e2 * eta ^ 2 - 0.101e3 / 0.25e2 * eta - 0.219e3 / 0.25e2) * cos((g - 2 * h + 4 * f)) + 0.31e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 3 + 0.25e2 / 0.31e2 * eta ^ 2 - 0.37e2 / 0.31e2 * eta - 0.91e2 / 0.31e2) * cos((g - 2 * h)) + 0.3e1 / 0.146e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 8 * f)) + 0.5e1 / 0.146e3 * (0.1e1 + eta) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (eta - 0.1e1) ^ 2 * cos((-g - 2 * h + 4 * f)) + 0.480e3 / 0.73e2 * sin(g) * (0.1e1 + eta) * ((eta ^ 3 + 0.13e2 / 0.48e2 * eta - 0.9e1 / 0.16e2) * ci2 ^ 4 + (-eta ^ 3 - 0.13e2 / 0.48e2 * eta + 0.9e1 / 0.16e2) * ci2 ^ 2 + eta ^ 3 / 0.15e2 + 0.43e2 / 0.120e3 * eta - 0.3e1 / 0.40e2) * Delta + 0.1080e4 / 0.73e2 * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((g + 2 * f)) - 0.45e2 / 0.146e3 * ((eta + 0.4e1 / 0.5e1) * ci2 ^ 4 + (-eta - 0.4e1 / 0.5e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta + 0.2e1 / 0.15e2) * (0.1e1 + eta) * (eta - 0.1e1) ^ 2 * cos((-3 * g - 2 * h + 2 * f)) + 0.39e2 / 0.146e3 * (0.1e1 + eta) * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) ^ 2 * cos((g + 6 * f)) - 0.1800e4 / 0.73e2 * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((3 * g + 2 * h + 2 * f)) - 0.39e2 / 0.146e3 * (0.1e1 + eta) ^ 2 * ((eta + 0.46e2 / 0.13e2) * ci2 ^ 4 + (-eta - 0.46e2 / 0.13e2) * ci2 ^ 2 + 0.5e1 / 0.39e2 * eta + 0.16e2 / 0.39e2) * (eta - 0.1e1) * cos((3 * g + 2 * h + 6 * f)) + 0.5e1 / 0.146e3 * (0.1e1 + eta) * ((eta - 0.67e2 / 0.5e1) * ci2 ^ 4 + (-eta + 0.67e2 / 0.5e1) * ci2 ^ 2 - eta / 0.5e1 - 0.13e2 / 0.5e1) * (eta - 0.1e1) ^ 2 * cos((-g + 4 * f)) - 0.270e3 / 0.73e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((3 * g + 2 * h + 4 * f)) - 0.15e2 / 0.146e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.4e1 / 0.5e1) * cos((-3 * g + 2 * f)) - 0.11e2 / 0.146e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 + 0.61e2 / 0.11e2 * eta + 0.10e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((3 * g + 6 * f)) + 0.15e2 / 0.146e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta + 0.4e1 / 0.5e1) * cos((-g + 2 * h + 2 * f)) + 0.49e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.55e2 / 0.49e2 * eta + 0.24e2 / 0.49e2) * (eta - 0.1e1) * cos((5 * g + 2 * h + 2 * f)) + 0.13e2 / 0.146e3 * (eta + 0.46e2 / 0.13e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * cos((g - 2 * h + 6 * f)) + ((-0.469e3 / 0.73e2 - 0.35e2 / 0.73e2 * eta ^ 3 - 0.175e3 / 0.73e2 * eta ^ 2 - 0.20e2 / 0.73e2 * eta ^ 4 - 0.325e3 / 0.73e2 * eta) * ci2 ^ 4 + (0.469e3 / 0.73e2 + 0.35e2 / 0.73e2 * eta ^ 3 + 0.175e3 / 0.73e2 * eta ^ 2 + 0.20e2 / 0.73e2 * eta ^ 4 + 0.325e3 / 0.73e2 * eta) * ci2 ^ 2 - 0.105e3 / 0.73e2 * eta - 0.33e2 / 0.73e2 * eta ^ 2 + 0.4e1 / 0.73e2 * eta ^ 4 + 0.7e1 / 0.73e2 * eta ^ 3 - 0.129e3 / 0.73e2) * cos((g + 2 * h)) + ((0.333e3 / 0.73e2 - 0.597e3 / 0.73e2 * eta ^ 2 - 0.678e3 / 0.73e2 * eta + 0.90e2 / 0.73e2 * eta ^ 4 + 0.144e3 / 0.73e2 * eta ^ 3) * ci2 ^ 4 + (-0.333e3 / 0.73e2 + 0.678e3 / 0.73e2 * eta - 0.90e2 / 0.73e2 * eta ^ 4 - 0.144e3 / 0.73e2 * eta ^ 3 + 0.597e3 / 0.73e2 * eta ^ 2) * ci2 ^ 2 + 0.17e2 / 0.73e2 - 0.123e3 / 0.73e2 * eta ^ 2 - 0.150e3 / 0.73e2 * eta + 0.22e2 / 0.73e2 * eta ^ 4 + 0.30e2 / 0.73e2 * eta ^ 3) * cos((3 * g + 2 * h + 2 * f)) + ((0.9e1 + 0.309e3 / 0.73e2 * eta ^ 2 + 0.1056e4 / 0.73e2 * eta - 0.153e3 / 0.73e2 * eta ^ 4 - 0.405e3 / 0.73e2 * eta ^ 3) * ci2 ^ 4 + (-0.9e1 + 0.153e3 / 0.73e2 * eta ^ 4 + 0.405e3 / 0.73e2 * eta ^ 3 - 0.309e3 / 0.73e2 * eta ^ 2 - 0.1056e4 / 0.73e2 * eta) * ci2 ^ 2 - 0.19e2 / 0.73e2 * eta ^ 4 - 0.47e2 / 0.73e2 * eta ^ 3 + 0.74e2 / 0.73e2 + 0.36e2 / 0.73e2 * eta ^ 2 + 0.120e3 / 0.73e2 * eta) * cos((3 * g + 2 * h + 4 * f)) + ((0.171e3 / 0.73e2 * eta ^ 3 - 0.459e3 / 0.73e2 * eta - 0.260e3 / 0.73e2 - 0.35e2 / 0.73e2 * eta ^ 4 - 0.65e2 / 0.73e2 * eta ^ 2) * ci2 ^ 4 + (0.260e3 / 0.73e2 + 0.35e2 / 0.73e2 * eta ^ 4 - 0.171e3 / 0.73e2 * eta ^ 3 + 0.65e2 / 0.73e2 * eta ^ 2 + 0.459e3 / 0.73e2 * eta) * ci2 ^ 2 - 0.65e2 / 0.73e2 + 0.45e2 / 0.73e2 * eta ^ 3 - 0.129e3 / 0.73e2 * eta + 0.7e1 / 0.73e2 * eta ^ 4 - 0.38e2 / 0.73e2 * eta ^ 2) * cos((g + 2 * h + 2 * f)) - 0.240e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta - 0.1e1) * (eta ^ 2 + eta - 0.3e1 / 0.8e1) * sin((3 * g)) + 0.120e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 2 - 0.3e1 / 0.2e1 * eta - 0.1e1 / 0.2e1) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta + 0.3e1 / 0.2e1) * sin((g - 2 * h)) - 0.600e3 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 2 + 0.13e2 / 0.10e2 * eta + 0.1e1 / 0.2e1) * Delta * sin((2 * f + 3 * g)) - 0.90e2 / 0.73e2 * Delta * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((4 * f + 3 * g)) + 0.360e3 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 2 + eta / 0.2e1 - 0.5e1 / 0.6e1) * sin((g - 2 * h + 2 * f)) + 0.21e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (eta ^ 4 + 0.15e2 / 0.7e1 * eta ^ 3 - 0.54e2 / 0.7e1 * eta ^ 2 - 0.73e2 / 0.7e1 * eta + 0.29e2 / 0.7e1) * (ci2 + 0.1e1) * cos((2 * f + 3 * g)) - 0.57e2 / 0.73e2 * (eta ^ 4 + 0.46e2 / 0.19e2 * eta ^ 3 - 0.134e3 / 0.57e2 * eta ^ 2 - 0.389e3 / 0.57e2 * eta - 0.244e3 / 0.57e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((4 * f + 3 * g)) + 0.120e3 / 0.73e2 * (0.1e1 + eta) * eta * Delta * ((eta ^ 2 + 0.28e2 / 0.3e1) * ci2 ^ 4 + (-eta ^ 2 - 0.28e2 / 0.3e1) * ci2 ^ 2 - eta ^ 2 / 0.5e1 + 0.8e1 / 0.3e1) * sin((g + 2 * h)) + 0.270e3 / 0.73e2 * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((g + 4 * f)) - 0.720e3 / 0.73e2 * ((eta ^ 2 + eta - 0.3e1 / 0.8e1) * ci2 ^ 4 + (-eta ^ 2 - eta + 0.3e1 / 0.8e1) * ci2 ^ 2 + 0.7e1 / 0.45e2 * eta ^ 2 + 0.7e1 / 0.45e2 * eta - 0.1e1 / 0.20e2) * (0.1e1 + eta) * Delta * (eta - 0.1e1) * sin((3 * g + 2 * h)) - 0.22e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.11e2 * eta ^ 3 - 0.277e3 / 0.22e2 * eta ^ 2 - 0.188e3 / 0.11e2 * eta - 0.111e3 / 0.22e2) * cos((g - 2 * h + 2 * f)) + 0.14e2 / 0.73e2 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 4 + 0.17e2 / 0.14e2 * eta ^ 3 + eta ^ 2 / 0.2e1 + 0.13e2 / 0.14e2 * eta + 0.25e2 / 0.14e2) * cos((5 * g + 2 * h + 4 * f)) + 0.90e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 4 * f)) + ((0.1e1 + 0.69e2 / 0.73e2 * eta ^ 3 + 0.766e3 / 0.73e2 * eta ^ 2 + 0.669e3 / 0.73e2 * eta - 0.101e3 / 0.73e2 * eta ^ 4) * ci2 ^ 4 + (-0.1e1 - 0.69e2 / 0.73e2 * eta ^ 3 - 0.766e3 / 0.73e2 * eta ^ 2 - 0.669e3 / 0.73e2 * eta + 0.101e3 / 0.73e2 * eta ^ 4) * ci2 ^ 2 - 0.48e2 / 0.73e2 + 0.107e3 / 0.73e2 * eta ^ 2 - 0.7e1 / 0.73e2 * eta ^ 4 + 0.29e2 / 0.73e2 * eta ^ 3 + 0.31e2 / 0.73e2 * eta) * cos((g + 2 * f)) + 0.145e3 / 0.146e3 * ((eta ^ 3 + 0.501e3 / 0.145e3 * eta ^ 2 - 0.477e3 / 0.145e3 * eta - 0.43e2 / 0.5e1) * ci2 ^ 4 + (-eta ^ 3 - 0.501e3 / 0.145e3 * eta ^ 2 + 0.477e3 / 0.145e3 * eta + 0.43e2 / 0.5e1) * ci2 ^ 2 + 0.19e2 / 0.145e3 * eta ^ 3 + 0.67e2 / 0.145e3 * eta ^ 2 - 0.41e2 / 0.145e3 * eta - 0.27e2 / 0.29e2) * (eta - 0.1e1) * cos((g + 4 * f)) + 0.87e2 / 0.73e2 * (eta - 0.1e1) * ((eta ^ 3 + 0.65e2 / 0.29e2 * eta ^ 2 + 0.121e3 / 0.29e2 * eta + 0.91e2 / 0.29e2) * ci2 ^ 4 + (-eta ^ 3 - 0.65e2 / 0.29e2 * eta ^ 2 - 0.121e3 / 0.29e2 * eta - 0.91e2 / 0.29e2) * ci2 ^ 2 + 0.13e2 / 0.87e2 * eta ^ 3 + 0.31e2 / 0.87e2 * eta ^ 2 + 0.64e2 / 0.87e2 * eta + 0.16e2 / 0.29e2) * cos((3 * g + 2 * h)) + 0.35e2 / 0.73e2 * ((eta ^ 3 - 0.156e3 / 0.35e2 * eta ^ 2 - 0.39e2 / 0.35e2 * eta + 0.52e2 / 0.7e1) * ci2 ^ 4 + (-eta ^ 3 + 0.156e3 / 0.35e2 * eta ^ 2 + 0.39e2 / 0.35e2 * eta - 0.52e2 / 0.7e1) * ci2 ^ 2 - eta ^ 3 / 0.5e1 - 0.48e2 / 0.35e2 * eta ^ 2 + 0.6e1 / 0.35e2 * eta + 0.13e2 / 0.7e1) * (eta - 0.1e1) * cos((-g - 2 * h + 2 * f)) + 0.115e3 / 0.146e3 * ((eta ^ 3 - 0.186e3 / 0.115e3 * eta ^ 2 + 0.39e2 / 0.115e3 * eta + 0.556e3 / 0.115e3) * ci2 ^ 4 + (-eta ^ 3 + 0.186e3 / 0.115e3 * eta ^ 2 - 0.39e2 / 0.115e3 * eta - 0.556e3 / 0.115e3) * ci2 ^ 2 - 0.7e1 / 0.115e3 * eta ^ 3 - 0.76e2 / 0.115e3 * eta ^ 2 + 0.31e2 / 0.115e3 * eta + 0.136e3 / 0.115e3) * (eta - 0.1e1) * cos((-g + 2 * f))) * sqrt(-eta ^ 2 + 0.1e1) + ((0.2973e4 / 0.292e3 - 0.1557e4 / 0.292e3 * eta ^ 4 - 0.789e3 / 0.73e2 * eta ^ 3 + 0.130e3 / 0.73e2 * eta ^ 2 + 0.4177e4 / 0.292e3 * eta - 0.93e2 / 0.292e3 * eta ^ 5) * ci2 ^ 4 + (-0.2973e4 / 0.292e3 + 0.93e2 / 0.292e3 * eta ^ 5 + 0.1557e4 / 0.292e3 * eta ^ 4 + 0.789e3 / 0.73e2 * eta ^ 3 - 0.130e3 / 0.73e2 * eta ^ 2 - 0.4177e4 / 0.292e3 * eta) * ci2 ^ 2 - 0.77e2 / 0.73e2 * eta ^ 3 + 0.17e2 / 0.219e3 * eta ^ 2 - 0.31e2 / 0.876e3 * eta ^ 5 + 0.1163e4 / 0.876e3 * eta + 0.303e3 / 0.292e3 - 0.433e3 / 0.876e3 * eta ^ 4) * cos((3 * g + 2 * h + 3 * f)) + ((0.416e3 / 0.73e2 * eta ^ 4 + 0.692e3 / 0.73e2 * eta ^ 3 - 0.594e3 / 0.73e2 * eta ^ 2 - 0.1249e4 / 0.73e2 * eta + 0.117e3 / 0.73e2 * eta ^ 5 - 0.406e3 / 0.73e2) * ci2 ^ 4 + (0.406e3 / 0.73e2 - 0.416e3 / 0.73e2 * eta ^ 4 - 0.692e3 / 0.73e2 * eta ^ 3 + 0.594e3 / 0.73e2 * eta ^ 2 + 0.1249e4 / 0.73e2 * eta - 0.117e3 / 0.73e2 * eta ^ 5) * ci2 ^ 2 + 0.160e3 / 0.73e2 * eta ^ 4 + 0.226e3 / 0.73e2 * eta ^ 3 - 0.191e3 / 0.73e2 * eta ^ 2 - 0.723e3 / 0.146e3 * eta + 0.39e2 / 0.146e3 * eta ^ 5 - 0.109e3 / 0.73e2) * cos((g + 2 * h + f)) + 0.117e3 / 0.292e3 * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta ^ 5 - 0.833e3 / 0.39e2 * eta ^ 4 - 0.316e3 / 0.13e2 * eta ^ 3 + 0.424e3 / 0.13e2 * eta ^ 2 + 0.431e3 / 0.13e2 * eta - 0.71e2 / 0.39e2) * cos((g - 2 * h + f)) + 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * sin((-3 * g - 2 * h + f)) - 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((f - g)) + 0.33e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (eta ^ 3 + 0.101e3 / 0.11e2 * eta ^ 2 + 0.193e3 / 0.11e2 * eta + 0.111e3 / 0.11e2) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * cos((-g + 2 * h + f)) + 0.15e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta + 0.103e3 / 0.15e2) * cos((3 * g + 7 * f)) + 0.55e2 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 2 + 0.14e2 / 0.11e2 * eta + 0.1e1 / 0.5e1) * cos((5 * g + 2 * h + 3 * f)) + 0.93e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) * (eta ^ 3 - 0.11e2 / 0.3e1 * eta ^ 2 - 0.1241e4 / 0.93e2 * eta - 0.389e3 / 0.31e2) * cos((3 * g + 5 * f)) - 0.45e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * (eta - 0.1e1) ^ 2 * (eta ^ 2 - 0.38e2 / 0.5e1 * eta - 0.269e3 / 0.15e2) * cos((g - 2 * h + 5 * f)) - 0.285e3 / 0.73e2 * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * sin((g - 2 * h + f)) + 0.195e3 / 0.73e2 * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * ci2 ^ 2 * (0.1e1 + eta) * (ci2 - 0.1e1) * (ci2 + 0.1e1) * Delta * sin((3 * g + 3 * f)) + 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((3 * g + 5 * f)) + 0.3e1 / 0.584e3 * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-g + 2 * h + 3 * f)) - 0.3e1 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((-3 * g + 3 * f)) - 0.15e2 / 0.584e3 * ci2 ^ 2 * (0.1e1 + eta) ^ 2 * (eta - 0.1e1) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((g - 2 * h + 7 * f)) - 0.345e3 / 0.73e2 * (eta ^ 2 + 0.14e2 / 0.23e2 * eta - 0.45e2 / 0.23e2) * (0.1e1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((g + 3 * f)) - 0.855e3 / 0.73e2 * (eta ^ 3 - 0.3e1 / 0.19e2 * eta ^ 2 - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (0.1e1 + eta) * sin((f + g)) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta + 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 3 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) * sin((3 * g + 2 * h + 5 * f)) - 0.45e2 / 0.73e2 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * (eta - 0.1e1) ^ 2 * sin((5 * f + g)) - 0.31e2 / 0.292e3 * (eta ^ 5 + 0.611e3 / 0.31e2 * eta ^ 4 + 0.1084e4 / 0.31e2 * eta ^ 3 - 0.1408e4 / 0.93e2 * eta ^ 2 - 0.4753e4 / 0.93e2 * eta - 0.947e3 / 0.31e2) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g + 3 * f)) + 0.585e3 / 0.73e2 * (0.1e1 + eta) * (eta ^ 3 + 0.3e1 / 0.13e2 * eta ^ 2 - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (ci2 ^ 4 - ci2 ^ 2 + 0.2e1 / 0.15e2) * Delta * sin((3 * g + 2 * h + 3 * f)) + 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-3 * g + f)) - 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) * (0.1e1 + eta) ^ 3 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((-g + 2 * h + f)) - 0.15e2 / 0.73e2 * Delta * ci2 ^ 2 * (eta - 0.1e1) ^ 2 * (0.1e1 + eta) ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * sin((g - 2 * h + 5 * f)) - 0.57e2 / 0.292e3 * ((eta ^ 4 - 0.4e1 * eta ^ 3 - 0.1040e4 / 0.57e2 * eta ^ 2 + 0.1412e4 / 0.57e2 * eta + 0.2503e4 / 0.57e2) * ci2 ^ 4 + (-eta ^ 4 + 0.4e1 * eta ^ 3 + 0.1040e4 / 0.57e2 * eta ^ 2 - 0.1412e4 / 0.57e2 * eta - 0.2503e4 / 0.57e2) * ci2 ^ 2 + 0.40e2 / 0.171e3 * eta ^ 4 - 0.32e2 / 0.171e3 * eta ^ 3 - 0.514e3 / 0.171e3 * eta ^ 2 + 0.40e2 / 0.171e3 * eta + 0.66e2 / 0.19e2) * (eta - 0.1e1) * cos((g + 3 * f)) - 0.711e3 / 0.292e3 * ((eta ^ 4 - 0.1128e4 / 0.79e2 * eta ^ 3 - 0.2632e4 / 0.79e2 * eta ^ 2 - 0.1480e4 / 0.79e2 * eta - 0.71e2 / 0.79e2) * ci2 ^ 4 + (-eta ^ 4 + 0.1128e4 / 0.79e2 * eta ^ 3 + 0.2632e4 / 0.79e2 * eta ^ 2 + 0.1480e4 / 0.79e2 * eta + 0.71e2 / 0.79e2) * ci2 ^ 2 + eta ^ 4 / 0.9e1 - 0.1622e4 / 0.711e3 * eta ^ 3 - 0.1222e4 / 0.237e3 * eta ^ 2 - 0.2122e4 / 0.711e3 * eta - 0.173e3 / 0.711e3) * (eta - 0.1e1) * cos((3 * g + 2 * h + f))) / a ^ 4 / ci2 / eta ^ 11 / (0.1e1 + eta)];
D5 = [0.45e2 / 0.2e1 * ((0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.17e2 / 0.7e1) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 2) + 0.19e2 / 0.7e1) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 2) - 0.53e2 / 0.70e2) * (ci2 ^ 2) - (eta ^ 2) / 0.30e2 + 0.1e1 / 0.30e2) * Delta * sin(g - h) - 0.3e1 / 0.20e2 * (((eta ^ 2) - 0.11e2 / 0.9e1) * (ci2 ^ 2) - 0.5e1 / 0.9e1 * (eta ^ 2) + 0.5e1 / 0.9e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.3e1 * g - h + (2 * f)) - (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * (((eta ^ 2) - 0.14e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 2) / 0.3e1 - 0.1e1) * ((ci2 + 1) ^ 2) * cos(0.3e1 * g - h + (4 * f)) / 0.20e2 + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 3) * ((ci2 + 1) ^ 3) * cos(0.3e1 * g - h + (6 * f)) / 0.60e2 - (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.5e1 * g + h + (8 * f)) / 0.40e2 + 0.12e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.4e1 / 0.3e1 * (ci2 ^ 4) + 0.7e1 / 0.15e2 * (ci2 ^ 2) - 0.1e1 / 0.30e2) * Delta * sin(g - h + (2 * f)) - 0.32e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.9e1 / 0.8e1 * (ci2 ^ 4) + 0.3e1 / 0.10e2 * (ci2 ^ 2) - 0.1e1 / 0.80e2) * sin(0.3e1 * g + h + (2 * f)) + (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.3e1 * g - h) / 0.24e2 + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.3e1 / 0.10e2) * cos(0.5e1 * g + h + (4 * f)) / 0.6e1 - 0.7e1 / 0.60e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 2) - (eta ^ 2) / 0.7e1 + 0.1e1 / 0.7e1) * cos(0.5e1 * g + h + (6 * f)) + 0.3e1 * (1 + eta) * sin(g + h) * Delta * (((eta ^ 2) + 0.77e2 / 0.9e1) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) - 0.56e2 / 0.3e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 2) + 0.47e2 / 0.3e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 2) - 0.6e1) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 + 0.5e1 / 0.6e1) - 0.5e1 / 0.6e1 * (((eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) - 0.71e2 / 0.5e1 * eta - 0.454e3 / 0.25e2) * (ci2 ^ 6) + (-0.29e2 / 0.25e2 * (eta ^ 3) + 0.16e2 / 0.25e2 * (eta ^ 2) + 0.383e3 / 0.25e2 * eta + 0.482e3 / 0.25e2) * (ci2 ^ 4) + (0.21e2 / 0.50e2 * (eta ^ 3) + (eta ^ 2) / 0.25e2 - 0.41e2 / 0.10e2 * eta - 0.119e3 / 0.25e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.25e2) * (ci2 - 1) * (ci2 + 1) * cos(g - h + (2 * f)) + 0.13e2 / 0.10e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.38e2 / 0.13e2 * (eta ^ 2) - 0.205e3 / 0.39e2 * eta - 0.232e3 / 0.39e2) * (ci2 ^ 6) + (-0.43e2 / 0.39e2 * (eta ^ 3) - 0.118e3 / 0.39e2 * (eta ^ 2) + 0.233e3 / 0.39e2 * eta + 0.20e2 / 0.3e1) * (ci2 ^ 4) + (0.35e2 / 0.78e2 * (eta ^ 3) + 0.32e2 / 0.39e2 * (eta ^ 2) - 0.5e1 / 0.2e1 * eta - 0.34e2 / 0.13e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.39e2) * cos(0.3e1 * g + h + (2 * f)) - 0.11e2 / 0.4e1 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.137e3 / 0.55e2 * (eta ^ 2) - 0.551e3 / 0.165e3 * eta - 0.91e2 / 0.15e2) * (ci2 ^ 6) + (-0.191e3 / 0.165e3 * (eta ^ 3) - 0.43e2 / 0.15e2 * (eta ^ 2) + 0.577e3 / 0.165e3 * eta + 0.1063e4 / 0.165e3) * (ci2 ^ 4) + (0.103e3 / 0.330e3 * (eta ^ 3) + 0.49e2 / 0.66e2 * (eta ^ 2) - 0.233e3 / 0.330e3 * eta - 0.443e3 / 0.330e3) * (ci2 ^ 2) - (eta ^ 3) / 0.66e2 - (eta ^ 2) / 0.30e2 + eta / 0.66e2 + 0.1e1 / 0.30e2) * cos(0.3e1 * g + h + (4 * f)) - (1 + eta) * (eta - 1) * ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.134e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.93e2 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.26e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.1e1 / 0.2e1) * cos(g + h + (4 * f)) / 0.12e2 + 0.7e1 / 0.12e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.1e1 / 0.7e1) * cos(0.5e1 * g + h + (2 * f)) + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-eta - 0.4e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.1e1 / 0.5e1) * (eta - 1) * cos(-g + h + (2 * f)) / 0.2e1 + 0.2e1 / 0.3e1 * (eta - 1) * (((eta ^ 2) - 0.26e2 / 0.5e1 * eta - 0.53e2 / 0.10e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + 0.117e3 / 0.10e2 * eta + 0.243e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.51e2 / 0.5e1 * eta - 0.51e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.41e2 / 0.10e2 * eta + 0.37e2 / 0.10e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.3e1 / 0.5e1 * eta - 0.19e2 / 0.40e2) * cos(-g - h + (2 * f)) + ((-(eta ^ 3) + (5 * eta ^ 2) - 0.61e2 / 0.5e1 - 0.13e2 / 0.5e1 * eta) * (ci2 ^ 8) + (0.763e3 / 0.30e2 + 0.13e2 / 0.6e1 * (eta ^ 3) - 0.331e3 / 0.30e2 * (eta ^ 2) + 0.151e3 / 0.30e2 * eta) * (ci2 ^ 6) + (-(eta ^ 3) + (9 * eta ^ 2) - (5 * eta) - 0.99e2 / 0.5e1) * (ci2 ^ 4) + (-(eta ^ 3) / 0.5e1 - 0.16e2 / 0.5e1 * (eta ^ 2) + 0.13e2 / 0.5e1 * eta + 0.34e2 / 0.5e1) * (ci2 ^ 2) + (eta ^ 3) / 0.10e2 + 0.2e1 / 0.5e1 * (eta ^ 2) - 0.5e1 / 0.12e2 * eta - 0.49e2 / 0.60e2) * cos(g + h + (2 * f)) + 0.13e2 / 0.12e2 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) + 0.16e2 / 0.5e1 * eta + 0.25e2 / 0.13e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.296e3 / 0.65e2 * eta - 0.187e3 / 0.65e2) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.22e2 / 0.13e2 * eta + 0.147e3 / 0.130e3) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.8e1 / 0.65e2 * eta - 0.11e2 / 0.130e3) * cos(g - h + (4 * f)) + (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.16e2 / 0.15e2 * (eta ^ 2) - 0.113e3 / 0.30e2 * eta - 0.14e2 / 0.3e1 + (eta ^ 4) + 0.47e2 / 0.30e2 * (eta ^ 3)) * (ci2 ^ 4) + (-(eta ^ 4) - 0.47e2 / 0.30e2 * (eta ^ 3) - 0.16e2 / 0.15e2 * (eta ^ 2) + 0.113e3 / 0.30e2 * eta + 0.14e2 / 0.3e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * (eta ^ 4) + 0.23e2 / 0.60e2 * (eta ^ 3) + 0.7e1 / 0.30e2 * (eta ^ 2) - 0.67e2 / 0.60e2 * eta - 0.19e2 / 0.15e2) * cos(g - h) + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.3e1 / 0.2e1 * eta + 0.7e1 / 0.5e1) * (ci2 ^ 4) + (-(eta ^ 2) - 0.3e1 / 0.2e1 * eta - 0.7e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * (eta ^ 2) + 0.7e1 / 0.20e2 * eta + 0.1e1 / 0.3e1) * (eta - 1) * cos(0.3e1 * g + h) - 0.13e2 / 0.30e2 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-eta - 0.46e2 / 0.13e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.8e1 / 0.13e2) * cos(0.3e1 * g + h + (6 * f)) - 0.6e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * sin(0.3e1 * g + h + (4 * f)) - 0.11e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 6) - 0.13e2 / 0.11e2 * (ci2 ^ 4) + 0.41e2 / 0.110e3 * (ci2 ^ 2) - 0.7e1 / 0.330e3) * sin(0.3e1 * g + h) + ((-0.469e3 / 0.60e2 - 0.65e2 / 0.12e2 * eta - (eta ^ 4) / 0.3e1 - 0.7e1 / 0.12e2 * (eta ^ 3) - 0.35e2 / 0.12e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.469e3 / 0.30e2 + 0.7e1 / 0.6e1 * (eta ^ 3) + 0.35e2 / 0.6e1 * (eta ^ 2) + 0.65e2 / 0.6e1 * eta + 0.2e1 / 0.3e1 * (eta ^ 4)) * (ci2 ^ 6) + (-0.727e3 / 0.60e2 - 0.7e1 / 0.20e2 * (eta ^ 3) - 0.107e3 / 0.12e2 * eta - (eta ^ 4) / 0.5e1 - 0.241e3 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.7e1 / 0.30e2 * (eta ^ 3) + 0.7e1 / 0.2e1 * eta - 0.2e1 / 0.15e2 * (eta ^ 4) + 0.43e2 / 0.10e2 + 0.11e2 / 0.10e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.7e1 / 0.120e3 * (eta ^ 3) - 0.13e2 / 0.120e3 * (eta ^ 2) + (eta ^ 4) / 0.30e2 - 0.21e2 / 0.40e2 - 0.11e2 / 0.24e2 * eta) * cos(g + h)) * sqrt((-eta ^ 2 + 1)) + 0.3e1 / 0.4e1 * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * (1 + eta) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos(-g - h + (3 * f)) - (((eta ^ 2 - 3) * ci2 ^ 2) - 0.2e1 / 0.5e1 * (eta ^ 2) + 0.2e1 / 0.5e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.3e1 * g - h + (3 * f)) / 0.6e1 + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 2) * (ci2 + 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.3e1 * g - h + (5 * f)) / 0.60e2 - 0.27e2 / 0.10e2 * (((eta ^ 3) + 0.367e3 / 0.81e2 * (eta ^ 2) + 0.797e3 / 0.81e2 * eta + 0.475e3 / 0.81e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 3) - 0.812e3 / 0.81e2 * (eta ^ 2) - 0.1768e4 / 0.81e2 * eta - 0.1064e4 / 0.81e2) * (ci2 ^ 6) + (0.46e2 / 0.27e2 * (eta ^ 3) + 0.26e2 / 0.3e1 * (eta ^ 2) + 0.506e3 / 0.27e2 * eta + 0.302e3 / 0.27e2) * (ci2 ^ 4) + (-0.14e2 / 0.27e2 * (eta ^ 3) - 0.94e2 / 0.27e2 * (eta ^ 2) - 0.200e3 / 0.27e2 * eta - 0.116e3 / 0.27e2) * (ci2 ^ 2) + 0.17e2 / 0.324e3 * (eta ^ 3) + 0.83e2 / 0.162e3 * (eta ^ 2) + 0.347e3 / 0.324e3 * eta + 0.97e2 / 0.162e3) * (eta - 1) * cos(-g - h + f) - 0.9e1 / 0.20e2 * (((eta ^ 3) - 0.74e2 / 0.81e2 * (eta ^ 2) - 0.469e3 / 0.81e2 * eta - 0.230e3 / 0.81e2) * (ci2 ^ 6) + (-0.25e2 / 0.27e2 * (eta ^ 3) + 0.280e3 / 0.81e2 * (eta ^ 2) + 0.1031e4 / 0.81e2 * eta + 0.592e3 / 0.81e2) * (ci2 ^ 4) + (0.25e2 / 0.162e3 * (eta ^ 3) - 0.163e3 / 0.81e2 * (eta ^ 2) - 0.1025e4 / 0.162e3 * eta - 0.323e3 / 0.81e2) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.162e3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(g - h + (3 * f)) - (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.391e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3203e4 / 0.180e3) * (ci2 ^ 6) + (-0.31e2 / 0.30e2 * (eta ^ 3) - 0.1367e4 / 0.180e3 * (eta ^ 2) - 0.36e2 / 0.5e1 * eta + 0.713e3 / 0.36e2) * (ci2 ^ 4) + (0.13e2 / 0.60e2 * (eta ^ 3) + 0.641e3 / 0.360e3 * (eta ^ 2) + 0.9e1 / 0.5e1 * eta - 0.311e3 / 0.72e2) * (ci2 ^ 2) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.360e3) * cos(0.3e1 * g + h + (3 * f)) - 0.21e2 / 0.40e2 * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(-0.3e1 * g - h + f) - 0.9e1 / 0.40e2 * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(g - h + (5 * f)) + 0.13e2 / 0.20e2 * (((eta ^ 2) - 0.59e2 / 0.13e2 * eta - 0.138e3 / 0.13e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 2) + 0.59e2 / 0.13e2 * eta + 0.140e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.78e2 * (eta ^ 2) - 0.5e1 / 0.6e1 * eta - 0.77e2 / 0.39e2) * (ci2 ^ 2) - (eta ^ 2) / 0.78e2 + 0.1e1 / 0.78e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(0.3e1 * g + h + (5 * f)) - 0.13e2 / 0.3e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * (eta - 1) * sin(g - h + (3 * f)) + 0.10e2 * (1 + eta) * (ci2 - 1) * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 2) + 0.31e2 / 0.15e2) * (ci2 ^ 4) + (0.23e2 / 0.75e2 * (eta ^ 2) - 0.37e2 / 0.75e2) * (ci2 ^ 2) - (eta ^ 2) / 0.75e2 + 0.1e1 / 0.75e2) * (ci2 + 1) * Delta * sin(0.3e1 * g + h + (3 * f)) + 0.41e2 / 0.60e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.4e1 / 0.41e2) * cos(0.5e1 * g + h + (3 * f)) - 0.13e2 / 0.30e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 2) - 0.2e1 / 0.13e2 * (eta ^ 2) + 0.2e1 / 0.13e2) * cos(0.5e1 * g + h + (5 * f)) + (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sin(0.3e1 * g + h + (5 * f)) + (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos(-g + h + (3 * f)) / 0.40e2 + 0.13e2 / 0.60e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.3e1 * g - h + f) + (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * cos(0.3e1 * g + h + (7 * f)) / 0.8e1 - 0.11e2 / 0.60e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.5e1 * g + h + (7 * f)) - 0.2e1 / 0.5e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.585e3 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.4e1 * eta - 0.871e3 / 0.8e1) * (ci2 ^ 6) + ((eta ^ 3) / 0.4e1 - 0.731e3 / 0.8e1 * (eta ^ 2) - 0.27e2 / 0.2e1 * eta + 0.1025e4 / 0.8e1) * (ci2 ^ 4) + (-0.17e2 / 0.24e2 * (eta ^ 3) + 0.1463e4 / 0.48e2 * (eta ^ 2) + 0.15e2 / 0.4e1 * eta - 0.1837e4 / 0.48e2) * (ci2 ^ 2) + 0.5e1 / 0.48e2 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * cos(g - h + f) - 0.9e1 / 0.10e2 * (((eta ^ 2) - 0.8e1 / 0.27e2 * eta - 0.137e3 / 0.27e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) + 0.16e2 / 0.27e2 * eta + 0.280e3 / 0.27e2) * (ci2 ^ 6) + (0.46e2 / 0.27e2 * (eta ^ 2) - 0.8e1 / 0.9e1 * eta - 0.206e3 / 0.27e2) * (ci2 ^ 4) + (-0.14e2 / 0.27e2 * (eta ^ 2) + 0.16e2 / 0.27e2 * eta + 0.64e2 / 0.27e2) * (ci2 ^ 2) + 0.17e2 / 0.324e3 * (eta ^ 2) - 0.31e2 / 0.324e3 * eta - 0.41e2 / 0.162e3) * (1 + eta) * (eta - 1) * cos(g + h + (3 * f)) - 0.97e2 / 0.20e2 * (((eta ^ 3) - 0.738e3 / 0.97e2 * (eta ^ 2) - 0.1781e4 / 0.97e2 * eta - 0.942e3 / 0.97e2) * (ci2 ^ 6) + (-0.107e3 / 0.97e2 * (eta ^ 3) + 0.864e3 / 0.97e2 * (eta ^ 2) + 0.2071e4 / 0.97e2 * eta + 0.1096e4 / 0.97e2) * (ci2 ^ 4) + (0.155e3 / 0.582e3 * (eta ^ 3) - 0.829e3 / 0.291e3 * (eta ^ 2) - 0.3827e4 / 0.582e3 * eta - 0.335e3 / 0.97e2) * (ci2 ^ 2) - 0.5e1 / 0.582e3 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(0.3e1 * g + h + f) + (1 + eta) * ((ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.53e2 / 0.5e1 * eta + 0.46e2 / 0.5e1) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.53e2 / 0.5e1 * eta - 0.44e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.2e1 + 0.79e2 / 0.30e2 * eta + 0.31e2 / 0.15e2) * (ci2 ^ 2) - (eta ^ 2) / 0.30e2 + 0.1e1 / 0.30e2) * (eta - 1) * cos(-g + h + f) - 0.56e2 * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 2) + 0.1e1) * (ci2 ^ 4) + (0.3e1 / 0.7e1 * (eta ^ 2) - 0.13e2 / 0.35e2) * (ci2 ^ 2) - (eta ^ 2) / 0.35e2 + 0.1e1 / 0.35e2) * sin(g - h + f) + 0.100e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * (eta - 1) * sin(0.3e1 * g + h + f) - 0.4e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sin(-g + h + f) - 0.3e1 / 0.5e1 * (1 + eta) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * cos(g + h + (5 * f)) + 0.12e2 * (((eta ^ 3) + 0.211e3 / 0.90e2 * (eta ^ 2) + 0.18e2 / 0.5e1 * eta - 0.881e3 / 0.90e2) * (ci2 ^ 8) + (-0.11e2 / 0.5e1 * (eta ^ 3) - 0.232e3 / 0.45e2 * (eta ^ 2) - 0.39e2 / 0.5e1 * eta + 0.938e3 / 0.45e2) * (ci2 ^ 6) + (0.5e1 / 0.3e1 * (eta ^ 3) + 0.79e2 / 0.15e2 * (eta ^ 2) + 0.29e2 / 0.5e1 * eta - 0.17e2) * (ci2 ^ 4) + (-(eta ^ 3) / 0.2e1 - 0.8e1 / 0.3e1 * (eta ^ 2) - 0.17e2 / 0.10e2 * eta + 0.283e3 / 0.45e2) * (ci2 ^ 2) + (eta ^ 3) / 0.20e2 + 0.161e3 / 0.360e3 * (eta ^ 2) + eta / 0.6e1 - 0.299e3 / 0.360e3) * cos(g + h + f)) / 0.4e1) * R__e ^ 4 * J ^ 2 / a ^ 5 / (eta ^ 8) / (1 + eta) 0.945e3 / 0.8e1 * R__e ^ 4 * J ^ 2 * ((((-0.436e3 / 0.105e3 + 0.11e2 / 0.126e3 * (eta ^ 5) - 0.67e2 / 0.42e2 * eta - 0.76e2 / 0.315e3 * (eta ^ 4) + 0.239e3 / 0.315e3 * (eta ^ 3) + 0.208e3 / 0.63e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.2746e4 / 0.315e3 - 0.4e1 / 0.21e2 * (eta ^ 5) - 0.57e2 / 0.35e2 * (eta ^ 3) - 0.247e3 / 0.35e2 * (eta ^ 2) + 0.209e3 / 0.63e2 * eta + 0.11e2 / 0.21e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.481e3 / 0.70e2 + 0.12e2 / 0.7e1 * (eta ^ 3) - 0.209e3 / 0.70e2 * eta - 0.31e2 / 0.70e2 * (eta ^ 4) + 0.596e3 / 0.105e3 * (eta ^ 2) + 0.19e2 / 0.210e3 * (eta ^ 5)) * (ci2 ^ 4) + (-0.569e3 / 0.630e3 * (eta ^ 3) + 0.277e3 / 0.210e3 * eta + 0.109e3 / 0.630e3 * (eta ^ 4) + 0.253e3 / 0.105e3 - 0.1283e4 / 0.630e3 * (eta ^ 2) + (eta ^ 5) / 0.63e2) * (ci2 ^ 2) + 0.191e3 / 0.1260e4 * (eta ^ 3) - 0.11e2 / 0.1260e4 * (eta ^ 5) + 0.82e2 / 0.315e3 * (eta ^ 2) - 0.61e2 / 0.2520e4 * (eta ^ 4) - 0.151e3 / 0.504e3 - 0.62e2 / 0.315e3 * eta) * sin(g + h + (2 * f)) + (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos(-g + h + (2 * f)) / 0.21e2 - 0.11e2 / 0.21e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos(0.3e1 * g + h + (6 * f)) + (ci2 ^ 2) * (eta - 1) * (eta - 4) * (eta + 4) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(0.3e1 * g - h + (6 * f)) / 0.630e3 - 0.11e2 / 0.21e2 * (((eta ^ 5) + 0.563e3 / 0.220e3 * (eta ^ 4) + 0.21e2 / 0.8e1 * (eta ^ 3) - 0.2027e4 / 0.1320e4 * (eta ^ 2) - 0.7537e4 / 0.1320e4 * eta - 0.4079e4 / 0.1320e4) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 5) - 0.1993e4 / 0.660e3 * (eta ^ 4) - 0.4009e4 / 0.1320e4 * (eta ^ 3) + 0.2483e4 / 0.1320e4 * (eta ^ 2) + 0.8897e4 / 0.1320e4 * eta + 0.437e3 / 0.120e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 5) + 0.23e2 / 0.24e2 * (eta ^ 4) + 0.487e3 / 0.528e3 * (eta ^ 3) - 0.187e3 / 0.240e3 * (eta ^ 2) - 0.1255e4 / 0.528e3 * eta - 0.1107e4 / 0.880e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (1 + eta) * ((eta ^ 4) + 0.11e2 / 0.7e1 * (eta ^ 3) + 0.5e1 / 0.7e1 * (eta ^ 2) - 0.22e2 / 0.7e1 * eta - 0.24e2 / 0.7e1)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(0.3e1 * g + h) + (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.25e2 / 0.42e2 * (eta ^ 4) - 0.369e3 / 0.140e3 * (eta ^ 3) - 0.2441e4 / 0.420e3 * (eta ^ 2) - 0.23e2 / 0.28e2 * eta + 0.4027e4 / 0.420e3) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 5) - 0.157e3 / 0.210e3 * (eta ^ 4) + 0.401e3 / 0.140e3 * (eta ^ 3) + 0.569e3 / 0.84e2 * (eta ^ 2) + 0.131e3 / 0.140e3 * eta - 0.4391e4 / 0.420e3) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 5) + 0.109e3 / 0.420e3 * (eta ^ 4) - 0.91e2 / 0.120e3 * (eta ^ 3) - 0.253e3 / 0.120e3 * (eta ^ 2) - 0.13e2 / 0.56e2 * eta + 0.2329e4 / 0.840e3) * (ci2 ^ 2) - (eta - 1) * ((eta ^ 4) + 0.11e2 / 0.7e1 * (eta ^ 3) + 0.5e1 / 0.7e1 * (eta ^ 2) - 0.22e2 / 0.7e1 * eta - 0.24e2 / 0.7e1) / 0.30e2) * sin(g - h) / 0.3e1 - (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 4) + 0.373e3 / 0.70e2 * (eta ^ 3) - 0.151e3 / 0.70e2 * (eta ^ 2) - 0.1237e4 / 0.70e2 * eta - 0.97e2 / 0.10e2) * (ci2 ^ 6) + (-0.51e2 / 0.35e2 * (eta ^ 4) - 0.501e3 / 0.70e2 * (eta ^ 3) + 0.367e3 / 0.70e2 * (eta ^ 2) + 0.2133e4 / 0.70e2 * eta + 0.1263e4 / 0.70e2) * (ci2 ^ 4) + (0.113e3 / 0.210e3 * (eta ^ 4) + 0.49e2 / 0.20e2 * (eta ^ 3) - 0.161e3 / 0.60e2 * (eta ^ 2) - 0.5549e4 / 0.420e3 * eta - 0.703e3 / 0.84e2) * (ci2 ^ 2) - 0.4e1 / 0.105e3 * ((eta ^ 3) + (3 * eta ^ 2) - (10 * eta) - 0.37e2 / 0.2e1) * (1 + eta)) * sin(g - h + (4 * f)) / 0.12e2 - 0.17e2 / 0.252e3 * ((0.2088e4 / 0.85e2 + 0.3123e4 / 0.85e2 * eta + (eta ^ 4) - 0.91e2 / 0.85e2 * (eta ^ 3) + 0.143e3 / 0.17e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.4696e4 / 0.85e2 + 0.214e3 / 0.85e2 * (eta ^ 3) - 0.1538e4 / 0.85e2 * (eta ^ 2) - 0.6926e4 / 0.85e2 * eta - 0.38e2 / 0.17e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.3957e4 / 0.85e2 - 0.54e2 / 0.17e2 * (eta ^ 3) + 0.1182e4 / 0.17e2 * eta + 0.99e2 / 0.85e2 * (eta ^ 4) + 0.1392e4 / 0.85e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.167e3 / 0.85e2 * (eta ^ 3) - 0.2307e4 / 0.85e2 * eta + 0.2e1 / 0.17e2 * (eta ^ 4) - 0.87e2 / 0.5e1 - 0.623e3 / 0.85e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.129e3 / 0.340e3 * (eta ^ 3) + 0.407e3 / 0.340e3 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.1313e4 / 0.340e3 * eta + 0.159e3 / 0.68e2) * (eta - 1) * sin(-g - h + (2 * f)) - (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * ((eta - 1) ^ 2) * sin(-g + h + (4 * f)) / 0.84e2 - 0.41e2 / 0.21e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.47e2 / 0.41e2 * (ci2 ^ 4) + 0.13e2 / 0.41e2 * (ci2 ^ 2) - 0.3e1 / 0.205e3) * (eta - 1) * cos(0.3e1 * g + h) + 0.13e2 / 0.420e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(0.3e1 * g + h + (8 * f)) - (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 2) - 0.217e3 / 0.45e2) * (ci2 ^ 2) - 0.2e1 / 0.15e2 * (eta ^ 2) + 0.8e1 / 0.15e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin(0.5e1 * g + h + (2 * f)) / 0.28e2 + (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.5e1 / 0.3e1) * (ci2 ^ 2) - 0.5e1 / 0.9e1 * (eta ^ 2) + 0.5e1 / 0.9e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin(0.3e1 * g - h) / 0.280e3 + 0.19e2 / 0.21e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 6) - 0.25e2 / 0.19e2 * (ci2 ^ 4) + 0.43e2 / 0.95e2 * (ci2 ^ 2) - 0.3e1 / 0.95e2) * cos(g - h + (4 * f)) + 0.11e2 / 0.840e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.289e3 / 0.33e2) * (ci2 ^ 2) - (eta ^ 2) / 0.11e2 + 0.1e1 / 0.11e2) * (eta - 1) * sin(0.5e1 * g + h + (8 * f)) + sin(g + h) * ((-0.2747e4 / 0.90e2 + (eta ^ 6) + 0.16e2 / 0.9e1 * (eta ^ 5) - 0.1036e4 / 0.45e2 * eta + 0.283e3 / 0.30e2 * (eta ^ 4) + (18 * eta ^ 3) + 0.794e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.5963e4 / 0.90e2 - 0.20e2 / 0.9e1 * (eta ^ 6) - 0.71e2 / 0.18e2 * (eta ^ 5) - 0.353e3 / 0.9e1 * (eta ^ 3) - 0.347e3 / 0.9e1 * (eta ^ 2) + 0.4469e4 / 0.90e2 * eta - 0.1853e4 / 0.90e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.55e2 + 0.533e3 / 0.15e2 * (eta ^ 3) - 0.127e3 / 0.3e1 * eta + 0.17e2 / 0.15e2 * (eta ^ 6) + 0.50e2 / 0.3e1 * (eta ^ 4) + 0.502e3 / 0.15e2 * (eta ^ 2) + (2 * eta ^ 5)) * (ci2 ^ 4) + (-0.140e3 / 0.9e1 * (eta ^ 3) + 0.253e3 / 0.15e2 * eta + 0.2e1 / 0.15e2 * (eta ^ 6) - 0.533e3 / 0.90e2 * (eta ^ 4) + 0.207e3 / 0.10e2 - 0.613e3 / 0.45e2 * (eta ^ 2) + 0.11e2 / 0.45e2 * (eta ^ 5)) * (ci2 ^ 2) + 0.109e3 / 0.45e2 * (eta ^ 3) - 0.8e1 / 0.45e2 * (eta ^ 5) + 0.359e3 / 0.180e3 * (eta ^ 2) + 0.91e2 / 0.120e3 * (eta ^ 4) - 0.337e3 / 0.120e3 - (eta ^ 6) / 0.10e2 - 0.109e3 / 0.45e2 * eta) / 0.7e1 + (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.17e2 / 0.21e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 2) + 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.3e1 / 0.7e1 * (eta ^ 2) - 0.41e2 / 0.105e3) * (ci2 ^ 2) - (eta ^ 2) / 0.35e2 + 0.1e1 / 0.35e2) * cos(g - h) + 0.27e2 / 0.140e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) + 0.623e3 / 0.162e3 * (eta ^ 2) - 0.1820e4 / 0.243e3 * eta - 0.8203e4 / 0.486e3) * (ci2 ^ 6) + (-0.269e3 / 0.243e3 * (eta ^ 3) - 0.2053e4 / 0.486e3 * (eta ^ 2) + 0.1846e4 / 0.243e3 * eta + 0.8387e4 / 0.486e3) * (ci2 ^ 4) + (0.133e3 / 0.486e3 * (eta ^ 3) + 0.947e3 / 0.972e3 * (eta ^ 2) - 0.118e3 / 0.81e2 * eta - 0.3157e4 / 0.972e3) * (ci2 ^ 2) - 0.5e1 / 0.486e3 * (eta + 0.16e2 / 0.5e1) * (1 + eta) * (eta - 1)) * sin(0.3e1 * g + h + (6 * f)) - 0.3e1 / 0.140e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.2e1 / 0.9e1 * (eta ^ 2) - 0.205e3 / 0.27e2) * (ci2 ^ 2) - (eta ^ 4) / 0.9e1 - 0.2e1 / 0.9e1 * (eta ^ 2) + 0.25e2 / 0.27e2) * sin(0.5e1 * g + h + (4 * f)) + 0.13e2 / 0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.59e2 / 0.39e2) * (ci2 ^ 6) + (-0.17e2 / 0.13e2 * (eta ^ 2) + 0.79e2 / 0.39e2) * (ci2 ^ 4) + (0.29e2 / 0.65e2 * (eta ^ 2) - 0.139e3 / 0.195e3) * (ci2 ^ 2) - 0.2e1 / 0.65e2 * (eta ^ 2) + 0.2e1 / 0.39e2) * cos(g - h + (2 * f)) - 0.31e2 / 0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.185e3 / 0.93e2) * (ci2 ^ 6) + (-0.35e2 / 0.31e2 * (eta ^ 2) + 0.205e3 / 0.93e2) * (ci2 ^ 4) + (0.47e2 / 0.155e3 * (eta ^ 2) - 0.53e2 / 0.93e2) * (ci2 ^ 2) - 0.2e1 / 0.155e3 * (eta ^ 2) + 0.2e1 / 0.93e2) * cos(0.3e1 * g + h + (2 * f)) - 0.13e2 / 0.252e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.551e3 / 0.130e3 * eta + 0.71e2 / 0.26e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.787e3 / 0.130e3 * eta - 0.539e3 / 0.130e3) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.9e1 / 0.4e1 * eta + 0.33e2 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.21e2 / 0.130e3 * eta - 0.8e1 / 0.65e2) * sin(g - h + (6 * f)) - 0.3e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.115e3 / 0.63e2) * (ci2 ^ 6) + (-0.23e2 / 0.21e2 * (eta ^ 2) + 0.121e3 / 0.63e2) * (ci2 ^ 4) + (0.29e2 / 0.105e3 * (eta ^ 2) - 0.139e3 / 0.315e3) * (ci2 ^ 2) - (eta ^ 2) / 0.105e3 + 0.1e1 / 0.105e3) * Delta * cos(0.3e1 * g + h + (4 * f)) + 0.11e2 / 0.84e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.199e3 / 0.110e3 * eta + 0.91e2 / 0.110e3) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.47e2 / 0.22e2 * eta - 0.107e3 / 0.110e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.60e2 * eta + 0.69e2 / 0.220e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.13e2 / 0.330e3 * eta - 0.1e1 / 0.55e2) * sin(-0.3e1 * g - h + (2 * f)) - 0.3e1 / 0.28e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) + 0.73e2 / 0.90e2 * (eta ^ 2) - 0.188e3 / 0.45e2 * eta - 0.347e3 / 0.90e2) * (ci2 ^ 6) + (-0.11e2 / 0.9e1 * (eta ^ 3) - 0.89e2 / 0.90e2 * (eta ^ 2) + 0.22e2 / 0.5e1 * eta + 0.121e3 / 0.30e2) * (ci2 ^ 4) + (0.109e3 / 0.270e3 * (eta ^ 3) + 0.181e3 / 0.540e3 * (eta ^ 2) - 0.152e3 / 0.135e3 * eta - 0.559e3 / 0.540e3) * (ci2 ^ 2) - 0.7e1 / 0.270e3 * (1 + eta) * (eta + 0.6e1 / 0.7e1) * (eta - 1)) * sin(-g + h + (2 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.188e3 / 0.7e1 * (eta ^ 2) + 0.309e3 / 0.7e1) * (ci2 ^ 2) - (eta ^ 4) / 0.7e1 + 0.17e2 / 0.7e1 * (eta ^ 2) - 0.16e2 / 0.7e1) * sin(0.5e1 * g + h + (6 * f)) / 0.90e2 + (((eta ^ 4) - (6 * eta ^ 2) + 0.31e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 4) / 0.2e1 + 0.5e1 / 0.2e1 * (eta ^ 2) - 0.2e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(0.3e1 * g - h + (2 * f)) / 0.105e3 + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.26e2 / 0.3e1 * (eta ^ 2) + 0.173e3 / 0.9e1) * (ci2 ^ 2) - (eta ^ 4) / 0.3e1 - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.25e2 / 0.9e1) * sin(0.3e1 * g - h + (4 * f)) / 0.140e3 + ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sin(g + h + (6 * f)) / 0.252e3 + 0.2e1 / 0.63e2 * (((eta ^ 3) - 0.491e3 / 0.40e2 * (eta ^ 2) + 0.12e2 / 0.5e1 * eta + 0.327e3 / 0.8e1) * (ci2 ^ 8) + (-0.17e2 / 0.8e1 * (eta ^ 3) + 0.1049e4 / 0.40e2 * (eta ^ 2) - 0.187e3 / 0.40e2 * eta - 0.3337e4 / 0.40e2) * (ci2 ^ 6) + (0.9e1 / 0.10e2 * (eta ^ 3) - 0.99e2 / 0.5e1 * (eta ^ 2) + 0.69e2 / 0.10e2 * eta + 0.306e3 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 3) / 0.4e1 + 0.247e3 / 0.40e2 * (eta ^ 2) - 0.93e2 / 0.20e2 * eta - 0.759e3 / 0.40e2) * (ci2 ^ 2) - (eta ^ 3) / 0.10e2 - 0.107e3 / 0.160e3 * (eta ^ 2) + 0.31e2 / 0.40e2 * eta + 0.327e3 / 0.160e3) * (1 + eta) * (eta - 1) * sin(g + h + (4 * f)) + 0.11e2 / 0.42e2 * (((eta ^ 5) + 0.167e3 / 0.110e3 * (eta ^ 4) - 0.974e3 / 0.55e2 * (eta ^ 3) - 0.343e3 / 0.11e2 * (eta ^ 2) + 0.1389e4 / 0.55e2 * eta + 0.895e3 / 0.22e2) * (ci2 ^ 6) + (-0.63e2 / 0.55e2 * (eta ^ 5) - 0.43e2 / 0.22e2 * (eta ^ 4) + 0.212e3 / 0.11e2 * (eta ^ 3) + 0.377e3 / 0.11e2 * (eta ^ 2) - 0.1467e4 / 0.55e2 * eta - 0.4767e4 / 0.110e3) * (ci2 ^ 4) + (0.31e2 / 0.110e3 * (eta ^ 5) + 0.367e3 / 0.660e3 * (eta ^ 4) - 0.706e3 / 0.165e3 * (eta ^ 3) - 0.511e3 / 0.66e2 * (eta ^ 2) + 0.119e3 / 0.22e2 * eta + 0.5947e4 / 0.660e3) * (ci2 ^ 2) - 0.2e1 / 0.165e3 * (1 + eta) * (eta - 1) * ((eta ^ 3) + (3 * eta ^ 2) - (10 * eta) - 0.37e2 / 0.2e1)) * (ci2 - 1) * (ci2 + 1) * sin(0.3e1 * g + h + (4 * f)) + (((eta ^ 5) + 0.179e3 / 0.30e2 * (eta ^ 4) - 0.86e2 / 0.15e2 * (eta ^ 3) - 0.35e2 / 0.3e1 * (eta ^ 2) + 0.137e3 / 0.5e1 * eta + 0.1099e4 / 0.30e2) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 5) - 0.263e3 / 0.30e2 * (eta ^ 4) + 0.22e2 / 0.15e2 * (eta ^ 3) + 0.127e3 / 0.15e2 * (eta ^ 2) - 0.361e3 / 0.15e2 * eta - 0.317e3 / 0.10e2) * (ci2 ^ 4) + (0.7e1 / 0.18e2 * (eta ^ 5) + 0.209e3 / 0.60e2 * (eta ^ 4) + 0.58e2 / 0.45e2 * (eta ^ 3) - 0.49e2 / 0.90e2 * (eta ^ 2) + 0.73e2 / 0.18e2 * eta + 0.767e3 / 0.180e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 4) + (8 * eta ^ 3) - (2 * eta ^ 2) + (4 * eta) - 0.17e2 / 0.3e1) / 0.30e2) * (ci2 - 1) * (ci2 + 1) * sin(g - h + (2 * f)) / 0.14e2 - (1 + eta) * (((eta ^ 2) - 0.239e3 / 0.20e2 * eta - 0.223e3 / 0.20e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + (27 * eta) + 0.513e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.111e3 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.157e3 / 0.20e2 * eta + 0.143e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.79e2 / 0.80e2 * eta - 0.67e2 / 0.80e2) * ((eta - 1) ^ 2) * sin(-g - h + (4 * f)) / 0.63e2 - 0.13e2 / 0.210e3 * (((eta ^ 5) + 0.791e3 / 0.26e2 * (eta ^ 4) + 0.610e3 / 0.13e2 * (eta ^ 3) + (29 * eta ^ 2) - 0.723e3 / 0.13e2 * eta - 0.1817e4 / 0.26e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 5) - 0.875e3 / 0.26e2 * (eta ^ 4) - 0.674e3 / 0.13e2 * (eta ^ 3) - 0.425e3 / 0.13e2 * (eta ^ 2) + 0.773e3 / 0.13e2 * eta + 0.1965e4 / 0.26e2) * (ci2 ^ 4) + (0.15e2 / 0.26e2 * (eta ^ 5) + 0.107e3 / 0.12e2 * (eta ^ 4) + 0.126e3 / 0.13e2 * (eta ^ 3) + 0.367e3 / 0.78e2 * (eta ^ 2) - 0.685e3 / 0.78e2 * eta - 0.1981e4 / 0.156e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 4) + (8 * eta ^ 3) - (2 * eta ^ 2) + (4 * eta) - 0.17e2 / 0.3e1) / 0.26e2) * (ci2 - 1) * (ci2 + 1) * sin(0.3e1 * g + h + (2 * f))) * sqrt((-eta ^ 2 + 1)) - 0.4e1 / 0.21e2 * (1 + eta) * (((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 6) - 0.5e1 / 0.4e1 * (ci2 ^ 4) + 0.2e1 / 0.5e1 * (ci2 ^ 2) - 0.1e1 / 0.40e2) * cos(-g + h + f) + 0.21e2 / 0.8e1 * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) - 0.38e2 / 0.7e1 * (eta ^ 2) + 0.85e2 / 0.21e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 4) + 0.50e2 / 0.7e1 * (eta ^ 2) - 0.115e3 / 0.21e2) * (ci2 ^ 4) + (0.3e1 / 0.7e1 * (eta ^ 4) - 0.86e2 / 0.35e2 * (eta ^ 2) + 0.41e2 / 0.21e2) * (ci2 ^ 2) - (eta ^ 4) / 0.35e2 + 0.6e1 / 0.35e2 * (eta ^ 2) - 0.1e1 / 0.7e1) * cos(g - h + f) - 0.5e1 * (1 + eta) * (((eta ^ 2) - 0.29e2 / 0.5e1) * (ci2 ^ 6) + (-0.23e2 / 0.20e2 * (eta ^ 2) + 0.131e3 / 0.20e2) * (ci2 ^ 4) + (0.8e1 / 0.25e2 * (eta ^ 2) - 0.44e2 / 0.25e2) * (ci2 ^ 2) - 0.3e1 / 0.200e3 * (eta ^ 2) + 0.3e1 / 0.40e2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * cos(0.3e1 * g + h + f) + 0.403e3 / 0.960e3 * ((ci2 ^ 2) - 0.4e1 / 0.31e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin(0.5e1 * g + h + f) - 0.3e1 / 0.64e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin(g + h + (7 * f)) - 0.13e2 / 0.960e3 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(-0.3e1 * g + h + f) + 0.3e1 / 0.8e1 * ((0.203e3 / 0.3e1 + (eta ^ 5) - 0.133e3 / 0.5e1 * eta + 0.11e2 / 0.15e2 * (eta ^ 4) + (12 * eta ^ 3) - 0.442e3 / 0.9e1 * (eta ^ 2)) * (ci2 ^ 8) + (-0.6496e4 / 0.45e2 - 0.11e2 / 0.5e1 * (eta ^ 5) - (26 * eta ^ 3) + 0.952e3 / 0.9e1 * (eta ^ 2) + (57 * eta) - 0.8e1 / 0.5e1 * (eta ^ 4)) * (ci2 ^ 6) + (0.586e3 / 0.5e1 + 0.58e2 / 0.3e1 * (eta ^ 3) - 0.209e3 / 0.5e1 * eta + 0.26e2 / 0.5e1 * (eta ^ 4) - 0.1396e4 / 0.15e2 * (eta ^ 2) + 0.5e1 / 0.3e1 * (eta ^ 5)) * (ci2 ^ 4) + (-0.17e2 / 0.3e1 * (eta ^ 3) + 0.361e3 / 0.30e2 * eta - 0.24e2 / 0.5e1 * (eta ^ 4) - 0.644e3 / 0.15e2 + 0.1756e4 / 0.45e2 * (eta ^ 2) - (eta ^ 5) / 0.2e1) * (ci2 ^ 2) + 0.5e1 / 0.9e1 * (eta ^ 3) + (eta ^ 5) / 0.20e2 - 0.1039e4 / 0.180e3 * (eta ^ 2) + 0.371e3 / 0.360e3 * (eta ^ 4) - 0.209e3 / 0.180e3 * eta + 0.2027e4 / 0.360e3) * sin(g + h + f)) - (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos(-g + h + (3 * f)) / 0.84e2 + 0.5e1 / 0.84e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos(0.3e1 * g + h + (7 * f)) - 0.67e2 / 0.105e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.9e1 / 0.8e1 * (eta ^ 4) - 0.75e2 / 0.134e3 * (eta ^ 3) + 0.1417e4 / 0.268e3 * (eta ^ 2) + 0.133e3 / 0.134e3 * eta - 0.3375e4 / 0.536e3) * (ci2 ^ 6) + (-0.353e3 / 0.268e3 * (eta ^ 5) + 0.713e3 / 0.536e3 * (eta ^ 4) + 0.60e2 / 0.67e2 * (eta ^ 3) - 0.1535e4 / 0.268e3 * (eta ^ 2) - 0.279e3 / 0.268e3 * eta + 0.3517e4 / 0.536e3) * (ci2 ^ 4) + (0.727e3 / 0.1608e4 * (eta ^ 5) - 0.1411e4 / 0.3216e4 * (eta ^ 4) - 0.99e2 / 0.268e3 * (eta ^ 3) + 0.2551e4 / 0.1608e4 * (eta ^ 2) + 0.331e3 / 0.1608e4 * eta - 0.5075e4 / 0.3216e4) * (ci2 ^ 2) - 0.101e3 / 0.3216e4 * ((eta ^ 4) - 0.106e3 / 0.101e3 * (eta ^ 2) + 0.160e3 / 0.101e3 * eta + 0.173e3 / 0.101e3) * (eta - 1)) * sin(g - h + f) - 0.3e1 / 0.112e3 * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin(-g - h + (5 * f)) - 0.1573e4 / 0.10080e5 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.365e3 / 0.121e3 * (eta ^ 4) + 0.866e3 / 0.143e3 * (eta ^ 3) + 0.7438e4 / 0.1573e4 * (eta ^ 2) + 0.3221e4 / 0.1573e4 * eta + 0.2809e4 / 0.1573e4) * (ci2 ^ 6) + (-0.2237e4 / 0.1573e4 * (eta ^ 5) - 0.7537e4 / 0.1573e4 * (eta ^ 4) - 0.14822e5 / 0.1573e4 * (eta ^ 3) - 0.5726e4 / 0.1573e4 * (eta ^ 2) + 0.9587e4 / 0.1573e4 * eta + 0.5119e4 / 0.1573e4) * (ci2 ^ 4) + (0.1679e4 / 0.3146e4 * (eta ^ 5) + 0.5931e4 / 0.3146e4 * (eta ^ 4) + 0.5721e4 / 0.1573e4 * (eta ^ 3) + 0.493e3 / 0.1573e4 * (eta ^ 2) - 0.17137e5 / 0.3146e4 * eta - 0.10709e5 / 0.3146e4) * (ci2 ^ 2) - 0.6e1 / 0.143e3 * (1 + eta) * ((eta ^ 4) + 0.80e2 / 0.33e2 * (eta ^ 3) + 0.118e3 / 0.33e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * eta - 0.101e3 / 0.11e2)) * (eta - 1) * sin(g - h + (3 * f)) - (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 4) - 0.4898e4 / 0.15e2 * (eta ^ 3) - 0.3828e4 / 0.5e1 * (eta ^ 2) + 0.13186e5 / 0.15e2 * eta + 0.8191e4 / 0.5e1) * (ci2 ^ 6) + (-0.17e2 / 0.5e1 * (eta ^ 4) + 0.5362e4 / 0.15e2 * (eta ^ 3) + 0.12596e5 / 0.15e2 * (eta ^ 2) - (910 * eta) - 0.25649e5 / 0.15e2) * (ci2 ^ 4) + (0.49e2 / 0.30e2 * (eta ^ 4) - 0.3769e4 / 0.45e2 * (eta ^ 3) - 0.962e3 / 0.5e1 * (eta ^ 2) + 0.8137e4 / 0.45e2 * eta + 0.30721e5 / 0.90e2) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 2) - 0.128e3 / 0.9e1 * eta - 0.281e3 / 0.9e1) * (eta - 1) / 0.5e1) * sin(0.3e1 * g + h + (5 * f)) / 0.224e3 - 0.199e3 / 0.3360e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.2358e4 / 0.199e3 * (eta ^ 3) + 0.2236e4 / 0.199e3 * (eta ^ 2) - 0.4918e4 / 0.199e3 * eta - 0.4979e4 / 0.199e3) * (ci2 ^ 6) + (-0.187e3 / 0.199e3 * (eta ^ 4) - 0.2790e4 / 0.199e3 * (eta ^ 3) - 0.2692e4 / 0.199e3 * (eta ^ 2) + 0.5350e4 / 0.199e3 * eta + 0.5423e4 / 0.199e3) * (ci2 ^ 4) + (0.187e3 / 0.1194e4 * (eta ^ 4) + 0.881e3 / 0.199e3 * (eta ^ 3) + 0.2618e4 / 0.597e3 * (eta ^ 2) - 0.4307e4 / 0.597e3 * eta - 0.8735e4 / 0.1194e4) * (ci2 ^ 2) + (eta - 0.163e3 / 0.3e1) * ((1 + eta) ^ 2) * (eta - 1) / 0.199e3) * (eta - 1) * sin(-g + h + f) + 0.15e2 / 0.14e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) - 0.118e3 / 0.15e2 * (eta ^ 2) + 0.73e2 / 0.9e1) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 4) + 0.26e2 / 0.3e1 * (eta ^ 2) - 0.79e2 / 0.9e1) * (ci2 ^ 4) + (0.23e2 / 0.75e2 * (eta ^ 4) - 0.166e3 / 0.75e2 * (eta ^ 2) + 0.97e2 / 0.45e2) * (ci2 ^ 2) - (eta ^ 4) / 0.75e2 + 0.2e1 / 0.25e2 * (eta ^ 2) - 0.1e1 / 0.15e2) * cos(0.3e1 * g + h + (3 * f)) + 0.3e1 / 0.70e2 * (1 + eta) * (ci2 - 1) * (((eta ^ 3) - 0.47e2 / 0.8e1 * (eta ^ 2) - 0.787e3 / 0.36e2 * eta - 0.935e3 / 0.72e2) * (ci2 ^ 6) + (-0.5e1 / 0.4e1 * (eta ^ 3) + 0.637e3 / 0.72e2 * (eta ^ 2) + 0.293e3 / 0.9e1 * eta + 0.491e3 / 0.24e2) * (ci2 ^ 4) + (0.85e2 / 0.216e3 * (eta ^ 3) - 0.1495e4 / 0.432e3 * (eta ^ 2) - 0.1361e4 / 0.108e3 * eta - 0.3635e4 / 0.432e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 2) - 0.128e3 / 0.9e1 * eta - 0.281e3 / 0.9e1) / 0.48e2) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(g - h + (5 * f)) + 0.25e2 / 0.1008e4 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(0.5e1 * g + h + (9 * f)) + ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * sin(-0.3e1 * g - h + (3 * f)) / 0.160e3 + 0.9e1 / 0.280e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.14e2 / 0.3e1 * (eta ^ 2) + 0.139e3 / 0.27e2) * (ci2 ^ 2) - 0.10e2 / 0.27e2 * (eta ^ 4) + 0.52e2 / 0.81e2 * (eta ^ 2) - 0.22e2 / 0.81e2) * sin(0.3e1 * g - h + (3 * f)) - 0.5e1 / 0.84e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.523e3 / 0.100e3 * eta - 0.1551e4 / 0.100e3) * (ci2 ^ 6) + (-0.11e2 / 0.10e2 * (eta ^ 2) + 0.523e3 / 0.100e3 * eta + 0.1561e4 / 0.100e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 - 0.589e3 / 0.600e3 * eta - 0.1667e4 / 0.600e3) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * ((eta - 1) ^ 2) * sin(0.3e1 * g + h + (7 * f)) + 0.37e2 / 0.840e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.354e3 / 0.37e2 * (eta ^ 2) + 0.1151e4 / 0.111e3) * (ci2 ^ 2) - 0.6e1 / 0.37e2 * (eta ^ 4) + 0.36e2 / 0.37e2 * (eta ^ 2) - 0.30e2 / 0.37e2) * sin(0.5e1 * g + h + (5 * f)) - ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.153e3 / 0.8e1 * eta + 0.121e3 / 0.8e1) * (ci2 ^ 6) + (-0.5e1 / 0.4e1 * (eta ^ 2) - 0.153e3 / 0.8e1 * eta - 0.119e3 / 0.8e1) * (ci2 ^ 4) + (0.3e1 / 0.8e1 * (eta ^ 2) + 0.215e3 / 0.48e2 * eta + 0.173e3 / 0.48e2) * (ci2 ^ 2) - (eta ^ 2) / 0.48e2 + 0.1e1 / 0.48e2) * ((eta - 1) ^ 2) * sin(-g + h + (3 * f)) / 0.210e3 - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sin(0.3e1 * g + h + (9 * f)) / 0.96e2 - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sin(-g + h + (5 * f)) / 0.1120e4 + 0.17e2 / 0.30e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.53e2 / 0.28e2 * (eta ^ 4) + 0.5e1 / 0.357e3 * (eta ^ 3) - 0.469e3 / 0.34e2 * (eta ^ 2) - 0.86e2 / 0.17e2 * eta + 0.24203e5 / 0.1428e4) * (ci2 ^ 6) + (-0.797e3 / 0.714e3 * (eta ^ 5) - 0.1023e4 / 0.476e3 * (eta ^ 4) - 0.10e2 / 0.51e2 * (eta ^ 3) + 0.10855e5 / 0.714e3 * (eta ^ 2) + 0.1331e4 / 0.238e3 * eta - 0.26185e5 / 0.1428e4) * (ci2 ^ 4) + (0.139e3 / 0.476e3 * (eta ^ 5) + 0.431e3 / 0.952e3 * (eta ^ 4) + 0.59e2 / 0.714e3 * (eta ^ 3) - 0.1523e4 / 0.476e3 * (eta ^ 2) - 0.613e3 / 0.476e3 * eta + 0.91e2 / 0.24e2) * (ci2 ^ 2) - 0.11e2 / 0.952e3 * (eta - 1) * ((eta ^ 4) + 0.80e2 / 0.33e2 * (eta ^ 3) + 0.118e3 / 0.33e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * eta - 0.101e3 / 0.11e2)) * sin(0.3e1 * g + h + (3 * f)) + 0.641e3 / 0.480e3 * (((eta ^ 5) + 0.6275e4 / 0.4487e4 * (eta ^ 4) - 0.2158e4 / 0.4487e4 * (eta ^ 3) - 0.3238e4 / 0.4487e4 * (eta ^ 2) + 0.2231e4 / 0.4487e4 * eta + 0.213e3 / 0.641e3) * (ci2 ^ 6) + (-0.5167e4 / 0.4487e4 * (eta ^ 5) - 0.7195e4 / 0.4487e4 * (eta ^ 4) + 0.2398e4 / 0.4487e4 * (eta ^ 3) + 0.3254e4 / 0.4487e4 * (eta ^ 2) - 0.3263e4 / 0.4487e4 * eta - 0.2059e4 / 0.4487e4) * (ci2 ^ 4) + (0.2869e4 / 0.8974e4 * (eta ^ 5) + 0.1469e4 / 0.3846e4 * (eta ^ 4) - 0.1149e4 / 0.4487e4 * (eta ^ 3) - 0.323e3 / 0.13461e5 * (eta ^ 2) + 0.17183e5 / 0.26922e5 * eta + 0.9227e4 / 0.26922e5) * (ci2 ^ 2) - 0.202e3 / 0.13461e5 * (1 + eta) * ((eta ^ 4) - 0.106e3 / 0.101e3 * (eta ^ 2) + 0.160e3 / 0.101e3 * eta + 0.173e3 / 0.101e3)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(0.3e1 * g + h + f) + 0.41e2 / 0.560e3 * ((-0.1715e4 / 0.41e2 + (eta ^ 5) - 0.2951e4 / 0.41e2 * eta + 0.1093e4 / 0.369e3 * (eta ^ 4) + 0.4382e4 / 0.369e3 * (eta ^ 3) - 0.7178e4 / 0.369e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.34118e5 / 0.369e3 - 0.90e2 / 0.41e2 * (eta ^ 5) - 0.9724e4 / 0.369e3 * (eta ^ 3) + 0.5132e4 / 0.123e3 * (eta ^ 2) + 0.58246e5 / 0.369e3 * eta - 0.58e2 / 0.9e1 * (eta ^ 4)) * (ci2 ^ 6) + (-0.3188e4 / 0.41e2 + 0.3256e4 / 0.123e3 * (eta ^ 3) - 0.5484e4 / 0.41e2 * eta + 0.980e3 / 0.123e3 * (eta ^ 4) - 0.4280e4 / 0.123e3 * (eta ^ 2) + 0.68e2 / 0.41e2 * (eta ^ 5)) * (ci2 ^ 4) + (-0.4906e4 / 0.369e3 * (eta ^ 3) + 0.6395e4 / 0.123e3 * eta - 0.1847e4 / 0.369e3 * (eta ^ 4) + 0.1209e4 / 0.41e2 + 0.4966e4 / 0.369e3 * (eta ^ 2) - 0.61e2 / 0.123e3 * (eta ^ 5)) * (ci2 ^ 2) + 0.565e3 / 0.246e3 * (eta ^ 3) + 0.73e2 / 0.1476e4 * (eta ^ 5) - 0.157e3 / 0.82e2 * (eta ^ 2) + 0.1445e4 / 0.1476e4 * (eta ^ 4) - 0.5963e4 / 0.1476e4 - 0.3613e4 / 0.492e3 * eta) * (eta - 1) * sin(-g - h + f) - 0.139e3 / 0.1260e4 * (((eta ^ 2) - 0.153e3 / 0.139e3) * (ci2 ^ 2) - 0.15e2 / 0.139e3 * (eta ^ 2) + 0.11e2 / 0.139e3) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin(0.5e1 * g + h + (3 * f)) - 0.29e2 / 0.5040e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 ^ 2) - 0.44e2 / 0.29e2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin(0.3e1 * g - h + (7 * f)) + 0.25e2 / 0.84e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * Delta * ((eta - 1) ^ 2) * cos(-0.3e1 * g - h + f) + 0.19e2 / 0.1260e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.25e2 / 0.19e2) * (ci2 ^ 2) - 0.13e2 / 0.19e2 * (eta ^ 2) + 0.13e2 / 0.19e2) * sin(0.3e1 * g - h + f) - 0.10e2 / 0.21e2 * ((1 + eta) ^ 2) * (((eta ^ 2) - 0.23e2 / 0.5e1) * (ci2 ^ 6) + (-0.13e2 / 0.10e2 * (eta ^ 2) + 0.61e2 / 0.10e2) * (ci2 ^ 4) + (0.11e2 / 0.25e2 * (eta ^ 2) - 0.53e2 / 0.25e2) * (ci2 ^ 2) - 0.3e1 / 0.100e3 * (eta ^ 2) + 0.3e1 / 0.20e2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * cos(g - h + (3 * f)) - 0.13e2 / 0.84e2 * ((1 + eta) ^ 3) * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * cos(g - h + (5 * f)) + 0.25e2 / 0.252e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.383e3 / 0.125e3) * (ci2 ^ 2) - 0.11e2 / 0.125e3 * (eta ^ 2) + 0.11e2 / 0.125e3) * (eta - 1) * sin(0.5e1 * g + h + (7 * f)) + 0.11e2 / 0.1260e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.65e2 / 0.11e2) * (ci2 ^ 2) + 0.9e1 / 0.11e2 * (eta ^ 2) - 0.45e2 / 0.11e2) * (eta - 1) * sin(0.3e1 * g - h + (5 * f)) + (ci2 ^ 2) * ((1 + eta) ^ 2) * ((0.3e1 / 0.35e2 * (ci2 ^ 2) - 0.3e1 / 0.35e2) * sin(0.3e1 * g - h + (8 * f)) - 0.6e1 / 0.35e2 * sin(0.5e1 * g + h + (10 * f)) * (ci2 ^ 2) + sin(0.5e1 * g + h) * ((ci2 ^ 2) - 0.1e1 / 0.7e1)) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) / 0.72e2 + 0.10e2 / 0.21e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) - 0.23e2 / 0.5e1) * (ci2 ^ 6) + (-0.11e2 / 0.10e2 * (eta ^ 2) + 0.47e2 / 0.10e2) * (ci2 ^ 4) + (0.7e1 / 0.25e2 * (eta ^ 2) - 0.1e1) * (ci2 ^ 2) - (eta ^ 2) / 0.100e3 + 0.1e1 / 0.100e3) * cos(0.3e1 * g + h + (5 * f)) + 0.3e1 / 0.224e3 * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sin(g - h + (7 * f)) - 0.19e2 / 0.420e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 2) - 0.1213e4 / 0.76e2 * eta - 0.1265e4 / 0.76e2) * (ci2 ^ 6) + (-0.41e2 / 0.38e2 * (eta ^ 2) + 0.1429e4 / 0.76e2 * eta + 0.1487e4 / 0.76e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 - 0.2795e4 / 0.456e3 * eta - 0.959e3 / 0.152e3) * (ci2 ^ 2) - (eta - 0.163e3 / 0.3e1) * (1 + eta) / 0.152e3) * sin(-0.3e1 * g - h + f) - 0.3e1 / 0.140e3 * (((eta ^ 3) - 0.5e1 / 0.3e1 * (eta ^ 2) - 0.113e3 / 0.3e1 * eta - 0.31e2) * (ci2 ^ 8) + (-0.7e1 / 0.3e1 * (eta ^ 3) + 0.91e2 / 0.27e2 * (eta ^ 2) + 0.2279e4 / 0.27e2 * eta + 0.1909e4 / 0.27e2) * (ci2 ^ 6) + (0.17e2 / 0.9e1 * (eta ^ 3) - 0.49e2 / 0.9e1 * (eta ^ 2) - 0.215e3 / 0.3e1 * eta - 0.59e2) * (ci2 ^ 4) + (-0.11e2 / 0.18e2 * (eta ^ 3) + 0.229e3 / 0.54e2 * (eta ^ 2) + 0.1481e4 / 0.54e2 * eta + 0.1147e4 / 0.54e2) * (ci2 ^ 2) + 0.7e1 / 0.108e3 * (eta ^ 3) - 0.67e2 / 0.72e2 * (eta ^ 2) - 0.103e3 / 0.27e2 * eta - 0.65e2 / 0.24e2) * (1 + eta) * ((eta - 1) ^ 2) * sin(-g - h + (3 * f)) + 0.3e1 / 0.80e2 * (1 + eta) * (eta - 1) * ((0.13667e5 / 0.189e3 + 0.2570e4 / 0.189e3 * eta + (eta ^ 4) - 0.46e2 / 0.63e2 * (eta ^ 3) - 0.2416e4 / 0.63e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.28274e5 / 0.189e3 + 0.316e3 / 0.189e3 * (eta ^ 3) + 0.15472e5 / 0.189e3 * (eta ^ 2) - 0.740e3 / 0.27e2 * eta - 0.46e2 / 0.21e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.2392e4 / 0.21e2 - 0.16e2 / 0.3e1 * (eta ^ 3) + 0.1744e4 / 0.63e2 * eta + 0.104e3 / 0.63e2 * (eta ^ 4) - 0.4016e4 / 0.63e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.890e3 / 0.189e3 * (eta ^ 3) - 0.298e3 / 0.21e2 * eta - 0.31e2 / 0.63e2 * (eta ^ 4) - 0.2377e4 / 0.63e2 + 0.4040e4 / 0.189e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.353e3 / 0.378e3 * (eta ^ 3) - 0.478e3 / 0.189e3 * (eta ^ 2) + 0.37e2 / 0.756e3 * (eta ^ 4) + 0.1105e4 / 0.252e3 + 0.841e3 / 0.378e3 * eta) * sin(g + h + (3 * f)) + ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.8e1 / 0.63e2 * eta - 0.541e3 / 0.63e2) * (ci2 ^ 8) + (-0.15e2 / 0.7e1 * (eta ^ 2) - 0.16e2 / 0.63e2 * eta + 0.1091e4 / 0.63e2) * (ci2 ^ 6) + (0.11e2 / 0.7e1 * (eta ^ 2) - 0.8e1 / 0.21e2 * eta - 0.257e3 / 0.21e2) * (ci2 ^ 4) + (-0.19e2 / 0.42e2 * (eta ^ 2) + 0.32e2 / 0.63e2 * eta + 0.445e3 / 0.126e3) * (ci2 ^ 2) + 0.11e2 / 0.252e3 * (eta ^ 2) - 0.47e2 / 0.504e3 * eta - 0.59e2 / 0.168e3) * sin(g + h + (5 * f)) / 0.20e2) / a ^ 4 / (eta ^ 11) / (1 + eta) 0.15e2 * ci2 * R__e ^ 4 * sqrt((-ci2 ^ 2 + 1)) * J ^ 2 * ((((-0.33e2 / 0.8e1 * (eta ^ 3) - 0.411e3 / 0.40e2 * (eta ^ 2) + 0.551e3 / 0.40e2 * eta + 0.1001e4 / 0.40e2) * (ci2 ^ 8) + (0.903e3 / 0.160e3 * (eta ^ 3) + 0.2241e4 / 0.160e3 * (eta ^ 2) - 0.2833e4 / 0.160e3 * eta - 0.5191e4 / 0.160e3) * (ci2 ^ 6) + (-0.147e3 / 0.80e2 * (eta ^ 3) - 0.359e3 / 0.80e2 * (eta ^ 2) + 0.81e2 / 0.16e2 * eta + 0.753e3 / 0.80e2) * (ci2 ^ 4) + (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) * (ci2 ^ 2) / 0.64e2 + (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) / 0.64e2) * cos(0.3e1 * g + 0.2e1 * h + (4 * f)) + ((-0.11e2 / 0.4e1 * (eta ^ 3) + 0.17e2 / 0.2e1 * (eta ^ 2) + 0.277e3 / 0.20e2 * eta + 0.22e2 / 0.5e1) * (ci2 ^ 8) + (0.83e2 / 0.20e2 * (eta ^ 3) - 0.1081e4 / 0.80e2 * (eta ^ 2) - 0.703e3 / 0.40e2 * eta - 0.13e2 / 0.16e2) * (ci2 ^ 6) + (-0.11e2 / 0.8e1 * (eta ^ 3) + 0.18e2 / 0.5e1 * eta - 0.117e3 / 0.20e2 + 0.277e3 / 0.40e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.199e3 / 0.80e2 - (eta ^ 3) / 0.16e2 - 0.19e2 / 0.16e2 * (eta ^ 2) + 0.73e2 / 0.80e2 * eta) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 - 5)) / 0.80e2) * cos(g + (2 * f)) + ((0.39e2 / 0.20e2 * (eta ^ 3) + 0.57e2 / 0.10e2 * (eta ^ 2) - 0.41e2 / 0.4e1 * eta - 0.58e2 / 0.5e1) * (ci2 ^ 8) + (-0.207e3 / 0.80e2 * (eta ^ 3) - 0.291e3 / 0.40e2 * (eta ^ 2) + 0.1109e4 / 0.80e2 * eta + 0.311e3 / 0.20e2) * (ci2 ^ 6) + (-0.29e2 / 0.5e1 + 0.39e2 / 0.40e2 * (eta ^ 3) + 0.91e2 / 0.40e2 * (eta ^ 2) - 0.107e3 / 0.20e2 * eta) * (ci2 ^ 4) - ((1 + eta) * (eta ^ 2 - 5) * ci2 ^ 2) / 0.80e2 - ((1 + eta) * (eta ^ 2 - 5)) / 0.80e2) * cos(0.3e1 * g + 0.2e1 * h + (2 * f)) + 0.7e1 / 0.8e1 * ((ci2 ^ 2) + 0.1e1 / 0.7e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (ci2 + 0.1e1 / 0.2e1) * (eta - 1) * (ci2 - 0.1e1 / 0.2e1) * cos(0.5e1 * g + 0.2e1 * h + (2 * f)) - 0.3e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.14e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 2) / 0.4e1 - 0.3e1 / 0.4e1) * cos(-0.2e1 * h + 0.3e1 * g + (4 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 2) - 0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * cos(0.5e1 * g + (4 * f)) / 0.4e1 + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 4) + (-0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * (ci2 ^ 2) - (eta ^ 2) / 0.40e2 - 0.3e1 / 0.40e2) * cos(0.5e1 * g + 0.2e1 * h + (4 * f)) / 0.4e1 - 0.7e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 4) + (-0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * (ci2 ^ 2) - (eta ^ 2) / 0.28e2 + 0.1e1 / 0.28e2) * cos(0.5e1 * g + 0.2e1 * h + (6 * f)) - 0.3e1 / 0.80e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((8 * f) + 0.5e1 * g) + (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(-0.2e1 * h + 0.3e1 * g) / 0.16e2 - 0.48e2 * ((ci2 ^ 6) - 0.27e2 / 0.32e2 * (ci2 ^ 4) + 0.3e1 / 0.20e2 * (ci2 ^ 2) - 0.1e1 / 0.320e3) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sin((2 * f) + 0.3e1 * g) + 0.21e2 / 0.2e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.17e2 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.57e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.84e2 * (eta ^ 2) - 0.53e2 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * sin(g - 0.2e1 * h) - 0.9e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 2) - 0.11e2 / 0.9e1) * (ci2 ^ 2) - 0.5e1 / 0.12e2 * (eta ^ 2) + 0.5e1 / 0.12e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(-0.2e1 * h + 0.3e1 * g + (2 * f)) + 0.18e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - (ci2 ^ 4) + 0.7e1 / 0.30e2 * (ci2 ^ 2) - 0.1e1 / 0.120e3) * sin(g - 0.2e1 * h + (2 * f)) - 0.7e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 2) - 0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * cos((6 * f) + 0.5e1 * g) - 0.3e1 / 0.80e2 * (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * cos(0.5e1 * g + 0.2e1 * h + (8 * f)) - ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 1) * cos(g + 0.2e1 * h + (4 * f)) / 0.8e1 + 0.9e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * Delta * (((eta ^ 2) + 0.77e2 / 0.9e1) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) - 0.14e2) * (ci2 ^ 4) + (0.17e2 / 0.30e2 * (eta ^ 2) + 0.47e2 / 0.6e1) * (ci2 ^ 2) + (eta ^ 2) / 0.30e2 - 0.3e1 / 0.2e1) * sin(g + 0.2e1 * h) - 0.33e2 / 0.2e1 * ((ci2 ^ 8) - 0.61e2 / 0.44e2 * (ci2 ^ 6) + 0.53e2 / 0.110e3 * (ci2 ^ 4) - 0.7e1 / 0.1320e4 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * ((1 + eta) ^ 2) * Delta * (eta - 1) * sin(0.3e1 * g + 0.2e1 * h) + 0.3e1 / 0.4e1 * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(-g + 0.2e1 * h + (2 * f)) - 0.3e1 / 0.2e1 * (ci2 ^ 2) * (((eta ^ 3) - (5 * eta ^ 2) + 0.13e2 / 0.5e1 * eta + 0.61e2 / 0.5e1) * (ci2 ^ 6) + (-0.13e2 / 0.8e1 * (eta ^ 3) + 0.331e3 / 0.40e2 * (eta ^ 2) - 0.151e3 / 0.40e2 * eta - 0.763e3 / 0.40e2) * (ci2 ^ 4) + ((eta ^ 3) / 0.2e1 - 0.9e1 / 0.2e1 * (eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.99e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 3) / 0.20e2 + 0.4e1 / 0.5e1 * (eta ^ 2) - 0.13e2 / 0.20e2 * eta - 0.17e2 / 0.10e2) * cos(g + 0.2e1 * h + (2 * f)) + 0.3e1 / 0.2e1 * (((eta ^ 2) + 0.9e1 / 0.2e1 * eta + 0.16e2 / 0.5e1) * (ci2 ^ 8) + (-0.373e3 / 0.240e3 * (eta ^ 2) - 0.419e3 / 0.60e2 * eta - 0.1213e4 / 0.240e3) * (ci2 ^ 6) + (0.19e2 / 0.30e2 * (eta ^ 2) + 0.29e2 / 0.10e2 * eta + 0.13e2 / 0.6e1) * (ci2 ^ 4) - 0.3e1 / 0.160e3 * (eta + 7) * (1 + eta) * (ci2 ^ 2) - (eta ^ 2) / 0.96e2 - eta / 0.30e2 - 0.11e2 / 0.480e3) * (eta - 1) * cos(g + (4 * f)) + ((-0.749e3 / 0.40e2 + (eta ^ 4) + 0.59e2 / 0.40e2 * (eta ^ 3) - 0.111e3 / 0.40e2 * (eta ^ 2) - 0.551e3 / 0.40e2 * eta) * (ci2 ^ 6) + (0.2107e4 / 0.80e2 - 0.9e1 / 0.8e1 * (eta ^ 4) - 0.13e2 / 0.8e1 * (eta ^ 3) + 0.73e2 / 0.16e2 * (eta ^ 2) + 0.77e2 / 0.4e1 * eta) * (ci2 ^ 4) + (-0.943e3 / 0.80e2 + 0.2e1 / 0.5e1 * (eta ^ 4) + 0.49e2 / 0.80e2 * (eta ^ 3) - 0.143e3 / 0.16e2 * eta - 0.39e2 / 0.16e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.129e3 / 0.80e2 - (eta ^ 4) / 0.20e2 - 0.7e1 / 0.80e2 * (eta ^ 3) + 0.33e2 / 0.80e2 * (eta ^ 2) + 0.21e2 / 0.16e2 * eta) * (ci2 ^ 2) * cos(g) - 0.21e2 / 0.5e1 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.69e2 / 0.28e2 * (eta ^ 2) - 0.565e3 / 0.168e3 * eta - 0.145e3 / 0.24e2) * (ci2 ^ 6) + (-0.6e1 / 0.7e1 * (eta ^ 3) - 0.237e3 / 0.112e3 * (eta ^ 2) + 0.41e2 / 0.16e2 * eta + 0.265e3 / 0.56e2) * (ci2 ^ 4) + (0.17e2 / 0.112e3 * (eta ^ 3) + 0.61e2 / 0.168e3 * (eta ^ 2) - 0.59e2 / 0.168e3 * eta - 0.223e3 / 0.336e3) * (ci2 ^ 2) - 0.5e1 / 0.1344e4 * (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1)) * cos((4 * f) + 0.3e1 * g) + 0.3e1 / 0.2e1 * (ci2 ^ 4) * (1 + eta) * (eta - 1) * (((eta ^ 2) + 0.3e1 / 0.2e1 * eta + 0.7e1 / 0.5e1) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * (eta ^ 2) - 0.15e2 / 0.8e1 * eta - 0.7e1 / 0.4e1) * (ci2 ^ 2) + 0.11e2 / 0.30e2 * (eta ^ 2) + 0.11e2 / 0.20e2 * eta + 0.31e2 / 0.60e2) * cos(0.3e1 * g + 0.2e1 * h) - 0.9e1 * (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * sin(0.3e1 * g + 0.2e1 * h + (4 * f)) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.16e2 / 0.15e2 * (eta ^ 2) - 0.113e3 / 0.30e2 * eta - 0.14e2 / 0.3e1 + (eta ^ 4) + 0.47e2 / 0.30e2 * (eta ^ 3)) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 4) - 0.47e2 / 0.40e2 * (eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) + 0.113e3 / 0.40e2 * eta + 0.7e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 4) + 0.23e2 / 0.120e3 * (eta ^ 3) + 0.7e1 / 0.60e2 * (eta ^ 2) - 0.67e2 / 0.120e3 * eta - 0.19e2 / 0.30e2) * cos(g - 0.2e1 * h) - 0.13e2 / 0.20e2 * (ci2 ^ 4) * (1 + eta) * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * (ci2 ^ 2) + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (eta - 1) * cos(0.3e1 * g + 0.2e1 * h + (6 * f)) + 0.13e2 / 0.8e1 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) + 0.16e2 / 0.5e1 * eta + 0.25e2 / 0.13e2) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.222e3 / 0.65e2 * eta - 0.561e3 / 0.260e3) * (ci2 ^ 4) + (0.67e2 / 0.260e3 * (eta ^ 2) + 0.11e2 / 0.13e2 * eta + 0.147e3 / 0.260e3) * (ci2 ^ 2) - (eta ^ 2) / 0.104e3 - 0.2e1 / 0.65e2 * eta - 0.11e2 / 0.520e3) * cos(g - 0.2e1 * h + (4 * f)) + ((ci2 ^ 2) - 0.3e1 / 0.4e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos(-0.2e1 * h + 0.3e1 * g + (6 * f)) / 0.40e2 - 0.9e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * sin((4 * f) + 0.3e1 * g) + 0.7e1 / 0.8e1 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.3e1 / 0.28e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((2 * f) + 0.5e1 * g) - 0.5e1 / 0.8e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((eta + 0.91e2 / 0.25e2) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.273e3 / 0.100e3) * (ci2 ^ 2) + 0.11e2 / 0.100e3 * eta + 0.33e2 / 0.100e3) * cos(0.3e1 * g + (6 * f)) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.37e2 / 0.24e2 * eta + 0.173e3 / 0.120e3) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 2) - 0.9e1 / 0.8e1 * eta - 0.21e2 / 0.20e2) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 2) + 0.7e1 / 0.40e2 * eta + 0.1e1 / 0.6e1) * (eta - 1) * cos(0.3e1 * g) - 0.33e2 / 0.2e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.39e2 / 0.44e2 * (ci2 ^ 4) + 0.41e2 / 0.220e3 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * Delta * (eta - 1) * sin(0.3e1 * g) + 0.7e1 / 0.4e1 * (ci2 ^ 2) * (((eta ^ 2) - 0.11e2 / 0.5e1 * eta - 0.94e2 / 0.35e2) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * (eta ^ 2) + 0.81e2 / 0.20e2 * eta + 0.669e3 / 0.140e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.2e1 - 0.92e2 / 0.35e2 * eta - 0.39e2 / 0.14e2) * (ci2 ^ 2) + (eta ^ 2) / 0.70e2 + 0.41e2 / 0.70e2 * eta + 0.37e2 / 0.70e2) * (eta - 1) * cos(-g + (2 * f)) + 0.15e2 * sin(g) * (1 + eta) * Delta * (((eta ^ 2) + 0.13e2 / 0.15e2) * (ci2 ^ 8) + (-0.61e2 / 0.40e2 * (eta ^ 2) - 0.77e2 / 0.40e2) * (ci2 ^ 6) + (0.83e2 / 0.150e3 * (eta ^ 2) + 0.161e3 / 0.100e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.240e3 - 0.533e3 / 0.1200e4) * (ci2 ^ 2) - 0.7e1 / 0.1200e4 * (eta ^ 2) + 0.7e1 / 0.1200e4) - 0.48e2 * (1 + eta) * Delta * ((ci2 ^ 8) - 0.43e2 / 0.32e2 * (ci2 ^ 6) + 0.69e2 / 0.160e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.320e3 - 0.1e1 / 0.320e3) * sin(0.3e1 * g + 0.2e1 * h + (2 * f)) - 0.5e1 / 0.4e1 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) - 0.71e2 / 0.5e1 * eta - 0.454e3 / 0.25e2) * (ci2 ^ 6) + (-0.87e2 / 0.100e3 * (eta ^ 3) + 0.12e2 / 0.25e2 * (eta ^ 2) + 0.1149e4 / 0.100e3 * eta + 0.723e3 / 0.50e2) * (ci2 ^ 4) + (0.21e2 / 0.100e3 * (eta ^ 3) + (eta ^ 2) / 0.50e2 - 0.41e2 / 0.20e2 * eta - 0.119e3 / 0.50e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.100e3) * cos(g - 0.2e1 * h + (2 * f)) - (ci2 ^ 2) * ((0.7e1 / 0.4e1 * (eta ^ 3) + (eta ^ 4) + 0.35e2 / 0.4e1 * (eta ^ 2) + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.7e1 / 0.4e1 * (eta ^ 3) - 0.35e2 / 0.4e1 * (eta ^ 2) - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 4) / 0.5e1 - 0.7e1 / 0.20e2 * (eta ^ 3) + 0.33e2 / 0.20e2 * (eta ^ 2) + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * cos(g + 0.2e1 * h) / 0.2e1 + (ci2 ^ 2) * (eta - 1) * (((eta ^ 2) - 0.26e2 / 0.5e1 * eta - 0.53e2 / 0.10e2) * (ci2 ^ 6) + (-0.27e2 / 0.16e2 * (eta ^ 2) + 0.351e3 / 0.40e2 * eta + 0.729e3 / 0.80e2) * (ci2 ^ 4) + (0.3e1 / 0.5e1 * (eta ^ 2) - 0.51e2 / 0.10e2 * eta - 0.51e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 2) / 0.40e2 + 0.41e2 / 0.40e2 * eta + 0.37e2 / 0.40e2) * cos(-g - 0.2e1 * h + (2 * f)) + 0.18e2 * (1 + eta) * Delta * ((ci2 ^ 8) - 0.3e1 / 0.2e1 * (ci2 ^ 6) + 0.17e2 / 0.30e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.120e3 - 0.1e1 / 0.120e3) * sin(g + (2 * f)) + 0.69e2 / 0.40e2 * (((eta ^ 3) + 0.73e2 / 0.23e2 * (eta ^ 2) - 0.133e3 / 0.23e2 * eta - 0.151e3 / 0.23e2) * (ci2 ^ 6) + (-0.81e2 / 0.92e2 * (eta ^ 3) - 0.231e3 / 0.92e2 * (eta ^ 2) + 0.461e3 / 0.92e2 * eta + 0.515e3 / 0.92e2) * (ci2 ^ 4) + (0.25e2 / 0.92e2 * (eta ^ 3) + 0.133e3 / 0.276e3 * (eta ^ 2) - 0.395e3 / 0.276e3 * eta - 0.413e3 / 0.276e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.138e3) * (ci2 - 1) * (ci2 + 1) * cos((2 * f) + 0.3e1 * g)) * sqrt((-eta ^ 2 + 1)) + 0.39e2 / 0.10e2 * (-0.21e2 / 0.104e3 * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.41e2 / 0.252e3 * eta + 0.13e2 / 0.84e2) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(-0.3e1 * g + f) - 0.15e2 / 0.104e3 * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 8) + (-0.31e2 / 0.20e2 * eta - 0.83e2 / 0.60e2) * (ci2 ^ 6) + (0.29e2 / 0.45e2 * eta + 0.3e1 / 0.5e1) * (ci2 ^ 4) + (-0.7e1 / 0.180e3 * eta - 0.7e1 / 0.180e3) * (ci2 ^ 2) - eta / 0.180e3 - 0.1e1 / 0.180e3) * ((eta - 1) ^ 2) * cos((5 * f) + g) - 0.5e1 / 0.3e1 * (1 + eta) * Delta * (eta - 1) * ((ci2 ^ 8) - 0.77e2 / 0.52e2 * (ci2 ^ 6) + 0.11e2 / 0.20e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.130e3 - 0.1e1 / 0.130e3) * sin(g + (3 * f)) + 0.125e3 / 0.13e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.87e2 / 0.100e3 * (ci2 ^ 4) + 0.41e2 / 0.250e3 * (ci2 ^ 2) - 0.1e1 / 0.250e3) * (eta - 1) * sin(0.3e1 * g + f) - 0.5e1 / 0.13e2 * (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * sin(f - g) + (((eta ^ 3) - 0.1333e4 / 0.156e3 * (eta ^ 2) + 0.63e2 / 0.26e2 * eta + 0.851e3 / 0.156e3) * (ci2 ^ 8) + (-0.193e3 / 0.104e3 * (eta ^ 3) + 0.2435e4 / 0.208e3 * (eta ^ 2) - 0.225e3 / 0.52e2 * eta - 0.1065e4 / 0.208e3) * (ci2 ^ 6) + (0.40e2 / 0.39e2 * (eta ^ 3) + 0.33e2 / 0.13e2 * eta - 0.151e3 / 0.78e2 - 0.110e3 / 0.39e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.2159e4 / 0.1248e4 - 0.185e3 / 0.1248e4 * (eta ^ 3) - 0.859e3 / 0.1248e4 * (eta ^ 2) - 0.201e3 / 0.416e3 * eta) * (ci2 ^ 2) - 0.5e1 / 0.1248e4 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * cos(f + g) - 0.70e2 / 0.13e2 * sin(f + g) * Delta * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 8) + (-0.41e2 / 0.28e2 * (eta ^ 2) + 0.31e2 / 0.28e2) * (ci2 ^ 6) + (0.15e2 / 0.28e2 * (eta ^ 2) - 0.61e2 / 0.140e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3)) * (1 + eta) + 0.3e1 / 0.16e2 * (ci2 ^ 4) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * cos(0.3e1 * g + 0.2e1 * h + (7 * f)) - 0.11e2 / 0.40e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((7 * f) + 0.5e1 * g) + 0.39e2 / 0.40e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) - 0.176e3 / 0.39e2 * eta - 0.413e3 / 0.39e2) * (ci2 ^ 6) + (-0.45e2 / 0.52e2 * (eta ^ 2) + 0.173e3 / 0.52e2 * eta + 0.8e1) * (ci2 ^ 4) + (0.23e2 / 0.156e3 * (eta ^ 2) - 0.23e2 / 0.52e2 * eta - 0.79e2 / 0.78e2) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * cos(0.3e1 * g + (5 * f)) + 0.3e1 / 0.8e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.53e2 / 0.5e1 * eta + 0.46e2 / 0.5e1) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.159e3 / 0.20e2 * eta - 0.33e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 + 0.79e2 / 0.60e2 * eta + 0.31e2 / 0.30e2) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * (eta - 1) * cos(-g + 0.2e1 * h + f) - 0.3e1 / 0.2e1 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * sin(-g + 0.2e1 * h + f) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * sin(0.3e1 * g + (5 * f)) - 0.9e1 / 0.40e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((eta - 1) ^ 2) * cos(0.2e1 * h + g + (5 * f)) - 0.13e2 / 0.20e2 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 4) + (-0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 + 0.1e1 / 0.26e2) * cos(0.5e1 * g + 0.2e1 * h + (5 * f)) - (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2 - 3) * ci2 ^ 2) - 0.3e1 / 0.10e2 * (eta ^ 2) + 0.3e1 / 0.10e2) * cos(-0.2e1 * h + 0.3e1 * g + (3 * f)) / 0.4e1 - 0.27e2 / 0.80e2 * (1 + eta) * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.12e2 * eta - 0.11e2 / 0.12e2) * (ci2 ^ 4) + (0.29e2 / 0.108e3 * eta + 0.1e1 / 0.4e1) * (ci2 ^ 2) - eta / 0.108e3 - 0.1e1 / 0.108e3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(g - 0.2e1 * h + (5 * f)) + 0.15e2 * (1 + eta) * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.20e2 * (eta ^ 2) + 0.31e2 / 0.20e2) * (ci2 ^ 4) + (0.23e2 / 0.150e3 * (eta ^ 2) - 0.37e2 / 0.150e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (ci2 - 1) * (ci2 + 1) * Delta * sin(0.3e1 * g + (3 * f)) - 0.13e2 / 0.20e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 2) - 0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * cos((5 * f) + 0.5e1 * g) + 0.13e2 / 0.40e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(-0.2e1 * h + 0.3e1 * g + f) + 0.3e1 / 0.2e1 * (ci2 ^ 4) * ((1 + eta) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * sin(0.3e1 * g + 0.2e1 * h + (5 * f)) - 0.11e2 / 0.40e2 * (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * cos(0.5e1 * g + 0.2e1 * h + (7 * f)) - 0.21e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.4e1) * (ci2 ^ 4) + (0.3e1 / 0.14e2 * (eta ^ 2) - 0.13e2 / 0.70e2) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * sin(g - 0.2e1 * h + f) + 0.75e2 / 0.2e1 * ((1 + eta) ^ 2) * ((ci2 ^ 8) - 0.137e3 / 0.100e3 * (ci2 ^ 6) + 0.227e3 / 0.500e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.250e3 - 0.1e1 / 0.250e3) * Delta * (eta - 1) * sin(0.3e1 * g + 0.2e1 * h + f) - 0.27e2 / 0.20e2 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 2) - 0.8e1 / 0.27e2 * eta - 0.137e3 / 0.27e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) + 0.4e1 / 0.9e1 * eta + 0.70e2 / 0.9e1) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.103e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 2) + 0.4e1 / 0.27e2 * eta + 0.16e2 / 0.27e2) * (eta - 1) * cos(g + 0.2e1 * h + (3 * f)) - 0.3e1 / 0.5e1 * (((eta ^ 3) + 0.585e3 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.4e1 * eta - 0.871e3 / 0.8e1) * (ci2 ^ 6) + (0.3e1 / 0.16e2 * (eta ^ 3) - 0.2193e4 / 0.32e2 * (eta ^ 2) - 0.81e2 / 0.8e1 * eta + 0.3075e4 / 0.32e2) * (ci2 ^ 4) + (-0.17e2 / 0.48e2 * (eta ^ 3) + 0.1463e4 / 0.96e2 * (eta ^ 2) + 0.15e2 / 0.8e1 * eta - 0.1837e4 / 0.96e2) * (ci2 ^ 2) + 0.5e1 / 0.192e3 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * cos(g - 0.2e1 * h + f) + 0.9e1 / 0.8e1 * (ci2 ^ 2) * (1 + eta) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.10e2 * eta - 0.3e1 / 0.2e1) * (ci2 ^ 4) + (0.8e1 / 0.9e1 * eta + 0.4e1 / 0.5e1) * (ci2 ^ 2) - 0.5e1 / 0.36e2 * eta - 0.23e2 / 0.180e3) * ((eta - 1) ^ 2) * cos(-g - 0.2e1 * h + (3 * f)) - 0.27e2 / 0.40e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.74e2 / 0.81e2 * (eta ^ 2) - 0.469e3 / 0.81e2 * eta - 0.230e3 / 0.81e2) * (ci2 ^ 6) + (-0.25e2 / 0.36e2 * (eta ^ 3) + 0.70e2 / 0.27e2 * (eta ^ 2) + 0.1031e4 / 0.108e3 * eta + 0.148e3 / 0.27e2) * (ci2 ^ 4) + (0.25e2 / 0.324e3 * (eta ^ 3) - 0.163e3 / 0.162e3 * (eta ^ 2) - 0.1025e4 / 0.324e3 * eta - 0.323e3 / 0.162e3) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.648e3) * (eta - 1) * cos(g - 0.2e1 * h + (3 * f)) + 0.39e2 / 0.40e2 * (1 + eta) * (((eta ^ 2) - 0.59e2 / 0.13e2 * eta - 0.138e3 / 0.13e2) * (ci2 ^ 8) + (-0.71e2 / 0.52e2 * (eta ^ 2) + 0.295e3 / 0.52e2 * eta + 0.174e3 / 0.13e2) * (ci2 ^ 6) + (0.17e2 / 0.39e2 * (eta ^ 2) - 0.121e3 / 0.78e2 * eta - 0.287e3 / 0.78e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (eta - 1) * cos(0.3e1 * g + 0.2e1 * h + (5 * f)) + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(-0.2e1 * h + 0.3e1 * g + (5 * f)) / 0.40e2 + 0.41e2 / 0.40e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.3e1 / 0.41e2) * cos((3 * f) + 0.5e1 * g) + 0.41e2 / 0.40e2 * ((ci2 ^ 4) - 0.3e1 / 0.41e2 * (ci2 ^ 2) - 0.1e1 / 0.41e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(0.5e1 * g + 0.2e1 * h + (3 * f)) - 0.147e3 / 0.40e2 * (((eta ^ 3) + 0.80e2 / 0.21e2 * (eta ^ 2) + 0.1297e4 / 0.147e3 * eta + 0.116e3 / 0.21e2) * (ci2 ^ 8) + (-0.47e2 / 0.28e2 * (eta ^ 3) - 0.332e3 / 0.49e2 * (eta ^ 2) - 0.3047e4 / 0.196e3 * eta - 0.68e2 / 0.7e1) * (ci2 ^ 6) + (0.43e2 / 0.49e2 * (eta ^ 3) + 0.181e3 / 0.42e2 * (eta ^ 2) + 0.470e3 / 0.49e2 * eta + 0.35e2 / 0.6e1) * (ci2 ^ 4) + (-0.167e3 / 0.1176e4 * (eta ^ 3) - 0.23e2 / 0.24e2 * (eta ^ 2) - 0.49e2 / 0.24e2 * eta - 0.199e3 / 0.168e3) * (ci2 ^ 2) + ((eta - 1) * (1 + eta) ^ 2) / 0.1176e4) * (eta - 1) * cos(f - g) - 0.81e2 / 0.40e2 * (eta - 1) * (((eta ^ 3) + 0.40e2 / 0.243e3 * (eta ^ 2) - 0.1339e4 / 0.243e3 * eta - 0.1052e4 / 0.243e3) * (ci2 ^ 8) + (-0.163e3 / 0.108e3 * (eta ^ 3) + 0.49e2 / 0.243e3 * (eta ^ 2) + 0.9359e4 / 0.972e3 * eta + 0.1819e4 / 0.243e3) * (ci2 ^ 6) + (0.163e3 / 0.243e3 * (eta ^ 3) - 0.19e2 / 0.54e2 * (eta ^ 2) - 0.1204e4 / 0.243e3 * eta - 0.1855e4 / 0.486e3) * (ci2 ^ 4) - 0.167e3 / 0.1944e4 * ((eta ^ 2) - 0.224e3 / 0.167e3 * eta - 0.827e3 / 0.167e3) * (1 + eta) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.1944e4) * cos(g + (3 * f)) - 0.3e1 / 0.2e1 * (1 + eta) * (((eta ^ 3) + 0.391e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3203e4 / 0.180e3) * (ci2 ^ 8) + (-0.51e2 / 0.40e2 * (eta ^ 3) - 0.2149e4 / 0.240e3 * (eta ^ 2) - 0.171e3 / 0.20e2 * eta + 0.17101e5 / 0.720e3) * (ci2 ^ 6) + (0.11e2 / 0.30e2 * (eta ^ 3) + 0.251e3 / 0.90e2 * (eta ^ 2) + 0.27e2 / 0.10e2 * eta - 0.64e2 / 0.9e1) * (ci2 ^ 4) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59) * ci2 ^ 2) / 0.1440e4 - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * cos(0.3e1 * g + 0.2e1 * h + (3 * f)) - 0.291e3 / 0.40e2 * (eta - 1) * (((eta ^ 3) - 0.738e3 / 0.97e2 * (eta ^ 2) - 0.1781e4 / 0.97e2 * eta - 0.942e3 / 0.97e2) * (ci2 ^ 8) + (-0.515e3 / 0.388e3 * (eta ^ 3) + 0.1017e4 / 0.97e2 * (eta ^ 2) + 0.9775e4 / 0.388e3 * eta + 0.1293e4 / 0.97e2) * (ci2 ^ 6) + (0.119e3 / 0.291e3 * (eta ^ 3) - 0.2125e4 / 0.582e3 * (eta ^ 2) - 0.2510e4 / 0.291e3 * eta - 0.883e3 / 0.194e3) * (ci2 ^ 4) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * cos(0.3e1 * g + 0.2e1 * h + f) - 0.81e2 / 0.20e2 * (((eta ^ 3) + 0.367e3 / 0.81e2 * (eta ^ 2) + 0.797e3 / 0.81e2 * eta + 0.475e3 / 0.81e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 3) - 0.203e3 / 0.27e2 * (eta ^ 2) - 0.442e3 / 0.27e2 * eta - 0.266e3 / 0.27e2) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 3) + 0.13e2 / 0.3e1 * (eta ^ 2) + 0.253e3 / 0.27e2 * eta + 0.151e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 3) - 0.47e2 / 0.54e2 * (eta ^ 2) - 0.50e2 / 0.27e2 * eta - 0.29e2 / 0.27e2) * (ci2 ^ 2) * (eta - 1) * cos(-g - 0.2e1 * h + f) - 0.291e3 / 0.40e2 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) - 0.2227e4 / 0.291e3 * (eta ^ 2) - 0.5369e4 / 0.291e3 * eta - 0.2839e4 / 0.291e3) * (ci2 ^ 6) + (-0.321e3 / 0.388e3 * (eta ^ 3) + 0.648e3 / 0.97e2 * (eta ^ 2) + 0.6213e4 / 0.388e3 * eta + 0.822e3 / 0.97e2) * (ci2 ^ 4) + (0.155e3 / 0.1164e4 * (eta ^ 3) - 0.829e3 / 0.582e3 * (eta ^ 2) - 0.3827e4 / 0.1164e4 * eta - 0.335e3 / 0.194e3) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * cos(0.3e1 * g + f) - 0.3e1 / 0.2e1 * (((eta ^ 3) + 0.401e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3293e4 / 0.180e3) * (ci2 ^ 6) + (-0.31e2 / 0.40e2 * (eta ^ 3) - 0.1379e4 / 0.240e3 * (eta ^ 2) - 0.27e2 / 0.5e1 * eta + 0.3577e4 / 0.240e3) * (ci2 ^ 4) + (0.13e2 / 0.120e3 * (eta ^ 3) + 0.629e3 / 0.720e3 * (eta ^ 2) + 0.9e1 / 0.10e2 * eta - 0.1543e4 / 0.720e3) * (ci2 ^ 2) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * cos(0.3e1 * g + (3 * f)) + 0.93e2 / 0.80e2 * (ci2 ^ 2) * (1 + eta) * ((eta + 0.27e2 / 0.31e2) * (ci2 ^ 6) + (-0.209e3 / 0.124e3 * eta - 0.185e3 / 0.124e3) * (ci2 ^ 4) + (0.27e2 / 0.31e2 * eta + 0.73e2 / 0.93e2) * (ci2 ^ 2) - 0.25e2 / 0.186e3 * eta - 0.23e2 / 0.186e3) * ((eta - 1) ^ 2) * cos(-g + (3 * f)) - 0.13e2 / 0.2e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 6) - 0.51e2 / 0.52e2 * (ci2 ^ 4) + 0.29e2 / 0.130e3 * (ci2 ^ 2) - 0.1e1 / 0.130e3) * sin(g - 0.2e1 * h + (3 * f)) + 0.3e1 / 0.16e2 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(0.3e1 * g + (7 * f)) + 0.3e1 / 0.80e2 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(-g + 0.2e1 * h + (3 * f)) - 0.63e2 / 0.80e2 * (1 + eta) * ((eta - 1) ^ 2) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 8) + (-0.39e2 / 0.28e2 * eta - 0.107e3 / 0.84e2) * (ci2 ^ 6) + (0.29e2 / 0.63e2 * eta + 0.3e1 / 0.7e1) * (ci2 ^ 4) + (-eta / 0.252e3 - 0.1e1 / 0.252e3) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * cos(-0.3e1 * g - 0.2e1 * h + f) + 0.15e2 * (1 + eta) * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 8) + (-0.27e2 / 0.20e2 * (eta ^ 2) + 0.151e3 / 0.60e2) * (ci2 ^ 6) + (0.131e3 / 0.300e3 * (eta ^ 2) - 0.229e3 / 0.300e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * Delta * sin(0.3e1 * g + 0.2e1 * h + (3 * f)) + 0.9e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 3) + 0.211e3 / 0.90e2 * (eta ^ 2) + 0.18e2 / 0.5e1 * eta - 0.881e3 / 0.90e2) * (ci2 ^ 6) + (-0.33e2 / 0.20e2 * (eta ^ 3) - 0.58e2 / 0.15e2 * (eta ^ 2) - 0.117e3 / 0.20e2 * eta + 0.469e3 / 0.30e2) * (ci2 ^ 4) + (0.5e1 / 0.6e1 * (eta ^ 3) + 0.79e2 / 0.30e2 * (eta ^ 2) + 0.29e2 / 0.10e2 * eta - 0.17e2 / 0.2e1) * (ci2 ^ 2) - (eta ^ 3) / 0.8e1 - 0.2e1 / 0.3e1 * (eta ^ 2) - 0.17e2 / 0.40e2 * eta + 0.283e3 / 0.180e3) * cos(g + 0.2e1 * h + f)) / (eta ^ 8) / a ^ 4 / (1 + eta) -0.90e2 * sqrt((-ci2 ^ 2 + 1)) * ci2 * (-(ci2 ^ 4) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * sin(0.3e1 * g + 0.2e1 * h + (7 * f)) / 0.32e2 + (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(-0.2e1 * h + 0.3e1 * g + (5 * f)) / 0.240e3 + 0.13e2 / 0.12e2 * ((ci2 ^ 6) - 0.51e2 / 0.52e2 * (ci2 ^ 4) + 0.29e2 / 0.130e3 * (ci2 ^ 2) - 0.1e1 / 0.130e3) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * cos(g - 0.2e1 * h + (3 * f)) + 0.41e2 / 0.240e3 * ((ci2 ^ 2) - 0.3e1 / 0.41e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin((3 * f) + 0.5e1 * g) - 0.5e1 / 0.2e1 * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.20e2 * (eta ^ 2) + 0.31e2 / 0.20e2) * (ci2 ^ 4) + (0.23e2 / 0.150e3 * (eta ^ 2) - 0.37e2 / 0.150e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * cos(0.3e1 * g + (3 * f)) + 0.13e2 / 0.240e3 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(-0.2e1 * h + 0.3e1 * g + f) - 0.9e1 / 0.160e3 * (1 + eta) * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.12e2 * eta - 0.11e2 / 0.12e2) * (ci2 ^ 4) + (0.29e2 / 0.108e3 * eta + 0.1e1 / 0.4e1) * (ci2 ^ 2) - eta / 0.108e3 - 0.1e1 / 0.108e3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(g - 0.2e1 * h + (5 * f)) - (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) + 0.53e2 / 0.5e1 * eta + 0.46e2 / 0.5e1) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.159e3 / 0.20e2 * eta - 0.33e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 + 0.79e2 / 0.60e2 * eta + 0.31e2 / 0.30e2) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * sin(-g + 0.2e1 * h + f) / 0.16e2 + (ci2 ^ 4) * ((1 + eta) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * cos(0.3e1 * g + 0.2e1 * h + (5 * f)) / 0.4e1 + 0.11e2 / 0.240e3 * (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * sin(0.5e1 * g + 0.2e1 * h + (7 * f)) + 0.13e2 / 0.120e3 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 4) + (-0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 + 0.1e1 / 0.26e2) * sin(0.5e1 * g + 0.2e1 * h + (5 * f)) - (((eta ^ 2 - 3) * ci2 ^ 2) - 0.3e1 / 0.10e2 * (eta ^ 2) + 0.3e1 / 0.10e2) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(-0.2e1 * h + 0.3e1 * g + (3 * f)) / 0.24e2 + 0.7e1 / 0.2e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.4e1) * (ci2 ^ 4) + (0.3e1 / 0.14e2 * (eta ^ 2) - 0.13e2 / 0.70e2) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * Delta * cos(g - 0.2e1 * h + f) - 0.11e2 / 0.240e3 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((7 * f) + 0.5e1 * g) - 0.13e2 / 0.120e3 * (ci2 ^ 2) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 2) - 0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * f) + 0.5e1 * g) + 0.13e2 / 0.80e2 * (((eta ^ 2) - 0.178e3 / 0.39e2 * eta - 0.415e3 / 0.39e2) * (ci2 ^ 6) + (-0.45e2 / 0.52e2 * (eta ^ 2) + 0.181e3 / 0.52e2 * eta + 0.106e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.156e3 * (eta ^ 2) - 0.61e2 / 0.156e3 * eta - 0.25e2 / 0.26e2) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(0.3e1 * g + (5 * f)) - (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * cos(-g + 0.2e1 * h + f) / 0.4e1 - (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * cos(0.3e1 * g + (5 * f)) / 0.4e1 - 0.27e2 / 0.40e2 * (ci2 ^ 2) * (((eta ^ 3) + 0.367e3 / 0.81e2 * (eta ^ 2) + 0.797e3 / 0.81e2 * eta + 0.475e3 / 0.81e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 3) - 0.203e3 / 0.27e2 * (eta ^ 2) - 0.442e3 / 0.27e2 * eta - 0.266e3 / 0.27e2) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 3) + 0.13e2 / 0.3e1 * (eta ^ 2) + 0.253e3 / 0.27e2 * eta + 0.151e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 3) - 0.47e2 / 0.54e2 * (eta ^ 2) - 0.50e2 / 0.27e2 * eta - 0.29e2 / 0.27e2) * (eta - 1) * sin(-g - 0.2e1 * h + f) + 0.5e1 / 0.2e1 * (1 + eta) * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 8) + (-0.27e2 / 0.20e2 * (eta ^ 2) + 0.151e3 / 0.60e2) * (ci2 ^ 6) + (0.131e3 / 0.300e3 * (eta ^ 2) - 0.229e3 / 0.300e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * Delta * cos(0.3e1 * g + 0.2e1 * h + (3 * f)) - 0.3e1 / 0.4e1 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 3) + 0.211e3 / 0.90e2 * (eta ^ 2) + 0.18e2 / 0.5e1 * eta - 0.881e3 / 0.90e2) * (ci2 ^ 6) + (-0.33e2 / 0.20e2 * (eta ^ 3) - 0.58e2 / 0.15e2 * (eta ^ 2) - 0.117e3 / 0.20e2 * eta + 0.469e3 / 0.30e2) * (ci2 ^ 4) + (0.5e1 / 0.6e1 * (eta ^ 3) + 0.79e2 / 0.30e2 * (eta ^ 2) + 0.29e2 / 0.10e2 * eta - 0.17e2 / 0.2e1) * (ci2 ^ 2) - (eta ^ 3) / 0.8e1 - 0.2e1 / 0.3e1 * (eta ^ 2) - 0.17e2 / 0.40e2 * eta + 0.283e3 / 0.180e3) * sin(g + 0.2e1 * h + f) - 0.21e2 / 0.160e3 * (1 + eta) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 8) + (-0.39e2 / 0.28e2 * eta - 0.107e3 / 0.84e2) * (ci2 ^ 6) + (0.29e2 / 0.63e2 * eta + 0.3e1 / 0.7e1) * (ci2 ^ 4) + (-eta / 0.252e3 - 0.1e1 / 0.252e3) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * ((eta - 1) ^ 2) * sin(-0.3e1 * g - 0.2e1 * h + f) - 0.29e2 / 0.160e3 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * ((eta + 0.25e2 / 0.29e2) * (ci2 ^ 6) + (-0.199e3 / 0.116e3 * eta - 0.175e3 / 0.116e3) * (ci2 ^ 4) + (0.79e2 / 0.87e2 * eta + 0.71e2 / 0.87e2) * (ci2 ^ 2) - 0.25e2 / 0.174e3 * eta - 0.23e2 / 0.174e3) * sin(-g + (3 * f)) + 0.25e2 / 0.4e1 * ((1 + eta) ^ 2) * Delta * ((ci2 ^ 8) - 0.137e3 / 0.100e3 * (ci2 ^ 6) + 0.227e3 / 0.500e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.250e3 - 0.1e1 / 0.250e3) * (eta - 1) * cos(0.3e1 * g + 0.2e1 * h + f) + 0.3e1 / 0.16e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.10e2 * eta - 0.3e1 / 0.2e1) * (ci2 ^ 4) + (0.8e1 / 0.9e1 * eta + 0.4e1 / 0.5e1) * (ci2 ^ 2) - 0.5e1 / 0.36e2 * eta - 0.23e2 / 0.180e3) * sin(-g - 0.2e1 * h + (3 * f)) - 0.97e2 / 0.80e2 * (((eta ^ 3) - 0.2201e4 / 0.291e3 * (eta ^ 2) - 0.5317e4 / 0.291e3 * eta - 0.29e2 / 0.3e1) * (ci2 ^ 6) + (-0.321e3 / 0.388e3 * (eta ^ 3) + 0.648e3 / 0.97e2 * (eta ^ 2) + 0.6213e4 / 0.388e3 * eta + 0.822e3 / 0.97e2) * (ci2 ^ 4) + (0.155e3 / 0.1164e4 * (eta ^ 3) - 0.829e3 / 0.582e3 * (eta ^ 2) - 0.3827e4 / 0.1164e4 * eta - 0.335e3 / 0.194e3) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(0.3e1 * g + f) + (1 + eta) * (0.21e2 / 0.40e2 * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.41e2 / 0.252e3 * eta + 0.13e2 / 0.84e2) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * sin(-0.3e1 * g + f) + 0.3e1 / 0.40e2 * ((eta + 0.1e1 / 0.3e1) * (ci2 ^ 8) + (-0.7e1 / 0.4e1 * eta - 0.11e2 / 0.12e2) * (ci2 ^ 6) + (0.5e1 / 0.9e1 * eta + 0.1e1 / 0.3e1) * (ci2 ^ 4) + (0.5e1 / 0.36e2 * eta + 0.5e1 / 0.36e2) * (ci2 ^ 2) - eta / 0.36e2 - 0.1e1 / 0.36e2) * ((eta - 1) ^ 2) * sin((5 * f) + g) - 0.13e2 / 0.3e1 * (1 + eta) * Delta * (eta - 1) * ((ci2 ^ 8) - 0.77e2 / 0.52e2 * (ci2 ^ 6) + 0.11e2 / 0.20e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.130e3 - 0.1e1 / 0.130e3) * cos(g + (3 * f)) - 0.25e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 6) - 0.87e2 / 0.100e3 * (ci2 ^ 4) + 0.41e2 / 0.250e3 * (ci2 ^ 2) - 0.1e1 / 0.250e3) * cos(0.3e1 * g + f) + (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * cos(f - g) + ((0.153e3 / 0.10e2 * eta + 0.17e2 / 0.5e1 * (eta ^ 3) - 0.875e3 / 0.12e2 + 0.2177e4 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.203e3 / 0.40e2 * (eta ^ 3) - 0.477e3 / 0.20e2 * eta + 0.8569e4 / 0.80e2 - 0.4291e4 / 0.80e2 * (eta ^ 2)) * (ci2 ^ 6) + (0.7e1 / 0.3e1 * (eta ^ 3) + 0.54e2 / 0.5e1 * eta - 0.1379e4 / 0.30e2 + 0.347e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.35e2 / 0.96e2 * (eta ^ 3) - 0.207e3 / 0.160e3 * eta + 0.2369e4 / 0.480e3 - 0.1061e4 / 0.480e3 * (eta ^ 2)) * (ci2 ^ 2) + ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1) / 0.96e2) * sin(f + g) - 0.14e2 * cos(f + g) * Delta * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 8) + (-0.41e2 / 0.28e2 * (eta ^ 2) + 0.31e2 / 0.28e2) * (ci2 ^ 6) + (0.15e2 / 0.28e2 * (eta ^ 2) - 0.61e2 / 0.140e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3)) / 0.4e1 - 0.41e2 / 0.240e3 * ((ci2 ^ 4) - 0.3e1 / 0.41e2 * (ci2 ^ 2) - 0.1e1 / 0.41e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(0.5e1 * g + 0.2e1 * h + (3 * f)) - 0.13e2 / 0.80e2 * (1 + eta) * (eta - 1) * (((eta ^ 2) - 0.59e2 / 0.13e2 * eta - 0.138e3 / 0.13e2) * (ci2 ^ 8) + (-0.71e2 / 0.52e2 * (eta ^ 2) + 0.295e3 / 0.52e2 * eta + 0.174e3 / 0.13e2) * (ci2 ^ 6) + (0.17e2 / 0.39e2 * (eta ^ 2) - 0.121e3 / 0.78e2 * eta - 0.287e3 / 0.78e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * sin(0.3e1 * g + 0.2e1 * h + (5 * f)) + (0.7e1 / 0.48e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.3e1 / 0.28e2) * sin((2 * f) + 0.5e1 * g) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * cos((4 * f) + 0.3e1 * g) + 0.11e2 / 0.4e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.39e2 / 0.44e2 * (ci2 ^ 4) + 0.41e2 / 0.220e3 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * Delta * (eta - 1) * cos(0.3e1 * g) - (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * sin(-g + 0.2e1 * h + (2 * f)) / 0.8e1 + (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.3e1 / 0.4e1) * sin(-0.2e1 * h + 0.3e1 * g + (6 * f)) / 0.240e3 - 0.7e1 / 0.48e2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 + 0.1e1 / 0.2e1) * ((ci2 ^ 2) + 0.1e1 / 0.7e1) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(0.5e1 * g + 0.2e1 * h + (2 * f)) - 0.7e1 / 0.4e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.17e2 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.57e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.84e2 * (eta ^ 2) - 0.53e2 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * Delta * cos(g - 0.2e1 * h) + ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 1) * sin(g + 0.2e1 * h + (4 * f)) / 0.48e2 - 0.3e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - (ci2 ^ 4) + 0.7e1 / 0.30e2 * (ci2 ^ 2) - 0.1e1 / 0.120e3) * cos(g - 0.2e1 * h + (2 * f)) - (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 4) + (-0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * (ci2 ^ 2) - (eta ^ 2) / 0.40e2 - 0.3e1 / 0.40e2) * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sin(0.5e1 * g + 0.2e1 * h + (4 * f)) / 0.24e2 + 0.7e1 / 0.240e3 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 4) + (-0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * (ci2 ^ 2) - (eta ^ 2) / 0.28e2 + 0.1e1 / 0.28e2) * sin(0.5e1 * g + 0.2e1 * h + (6 * f)) - 0.3e1 / 0.80e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.11e2 / 0.9e1) * (ci2 ^ 2) - 0.5e1 / 0.12e2 * (eta ^ 2) + 0.5e1 / 0.12e2) * sin(-0.2e1 * h + 0.3e1 * g + (2 * f)) - (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.14e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 2) / 0.4e1 - 0.3e1 / 0.4e1) * sin(-0.2e1 * h + 0.3e1 * g + (4 * f)) / 0.80e2 + (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * sin(0.5e1 * g + 0.2e1 * h + (8 * f)) / 0.160e3 - 0.7e1 / 0.240e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 2) - 0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * sin((6 * f) + 0.5e1 * g) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 2) - 0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * ((ci2 + 1) ^ 2) * sin(0.5e1 * g + (4 * f)) / 0.24e2 - (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((8 * f) + 0.5e1 * g) / 0.160e3 + (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(-0.2e1 * h + 0.3e1 * g) / 0.96e2 + 0.8e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.27e2 / 0.32e2 * (ci2 ^ 4) + 0.3e1 / 0.20e2 * (ci2 ^ 2) - 0.1e1 / 0.320e3) * Delta * cos((2 * f) + 0.3e1 * g) - 0.9e1 / 0.80e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (eta + 0.31e2 / 0.9e1) * sin(0.3e1 * g + (6 * f)) - 0.8e1 * (1 + eta) * Delta * ((ci2 ^ 8) - 0.43e2 / 0.32e2 * (ci2 ^ 6) + 0.69e2 / 0.160e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.320e3 - 0.1e1 / 0.320e3) * cos(0.3e1 * g + 0.2e1 * h + (2 * f)) + 0.3e1 / 0.4e1 * (ci2 ^ 2) * (1 + eta) * Delta * (((eta ^ 2) + 0.77e2 / 0.9e1) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) - 0.14e2) * (ci2 ^ 4) + (0.17e2 / 0.30e2 * (eta ^ 2) + 0.47e2 / 0.6e1) * (ci2 ^ 2) + (eta ^ 2) / 0.30e2 - 0.3e1 / 0.2e1) * cos(g + 0.2e1 * h) + (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.16e2 / 0.15e2 * (eta ^ 2) - 0.113e3 / 0.30e2 * eta - 0.14e2 / 0.3e1 + (eta ^ 4) + 0.47e2 / 0.30e2 * (eta ^ 3)) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 4) - 0.47e2 / 0.40e2 * (eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) + 0.113e3 / 0.40e2 * eta + 0.7e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 4) + 0.23e2 / 0.120e3 * (eta ^ 3) + 0.7e1 / 0.60e2 * (eta ^ 2) - 0.67e2 / 0.120e3 * eta - 0.19e2 / 0.30e2) * sin(g - 0.2e1 * h) / 0.4e1 - 0.11e2 / 0.4e1 * ((ci2 ^ 8) - 0.61e2 / 0.44e2 * (ci2 ^ 6) + 0.53e2 / 0.110e3 * (ci2 ^ 4) - 0.7e1 / 0.1320e4 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * ((1 + eta) ^ 2) * Delta * (eta - 1) * cos(0.3e1 * g + 0.2e1 * h) + 0.13e2 / 0.120e3 * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * (ci2 ^ 2) + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (ci2 ^ 4) * (1 + eta) * (eta - 1) * sin(0.3e1 * g + 0.2e1 * h + (6 * f)) - (ci2 ^ 4) * (1 + eta) * (((eta ^ 2) + 0.3e1 / 0.2e1 * eta + 0.7e1 / 0.5e1) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * (eta ^ 2) - 0.15e2 / 0.8e1 * eta - 0.7e1 / 0.4e1) * (ci2 ^ 2) + 0.11e2 / 0.30e2 * (eta ^ 2) + 0.11e2 / 0.20e2 * eta + 0.31e2 / 0.60e2) * (eta - 1) * sin(0.3e1 * g + 0.2e1 * h) / 0.4e1 - 0.3e1 / 0.2e1 * (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * cos(0.3e1 * g + 0.2e1 * h + (4 * f)) + 0.13e2 / 0.48e2 * (((eta ^ 2) + 0.16e2 / 0.5e1 * eta + 0.25e2 / 0.13e2) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.222e3 / 0.65e2 * eta - 0.561e3 / 0.260e3) * (ci2 ^ 4) + (0.67e2 / 0.260e3 * (eta ^ 2) + 0.11e2 / 0.13e2 * eta + 0.147e3 / 0.260e3) * (ci2 ^ 2) - (eta ^ 2) / 0.104e3 - 0.2e1 / 0.65e2 * eta - 0.11e2 / 0.520e3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(g - 0.2e1 * h + (4 * f)) + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.35e2 / 0.24e2 * eta + 0.163e3 / 0.120e3) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 2) - 0.9e1 / 0.8e1 * eta - 0.21e2 / 0.20e2) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 2) + 0.7e1 / 0.40e2 * eta + 0.1e1 / 0.6e1) * (eta - 1) * sin(0.3e1 * g) / 0.4e1 - 0.27e2 / 0.40e2 * (((eta ^ 3) + 0.68e2 / 0.27e2 * (eta ^ 2) - 0.179e3 / 0.54e2 * eta - 0.329e3 / 0.54e2) * (ci2 ^ 6) + (-0.95e2 / 0.108e3 * (eta ^ 3) - 0.59e2 / 0.27e2 * (eta ^ 2) + 0.145e3 / 0.54e2 * eta + 0.533e3 / 0.108e3) * (ci2 ^ 4) + (0.13e2 / 0.81e2 * (eta ^ 3) + 0.41e2 / 0.108e3 * (eta ^ 2) - 0.115e3 / 0.324e3 * eta - 0.55e2 / 0.81e2) * (ci2 ^ 2) - 0.5e1 / 0.1296e4 * (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1)) * (ci2 - 1) * (ci2 + 1) * sin((4 * f) + 0.3e1 * g) + 0.29e2 / 0.80e2 * (((eta ^ 3) + 0.79e2 / 0.29e2 * (eta ^ 2) - 0.421e3 / 0.87e2 * eta - 0.475e3 / 0.87e2) * (ci2 ^ 6) + (-0.91e2 / 0.116e3 * (eta ^ 3) - 0.241e3 / 0.116e3 * (eta ^ 2) + 0.471e3 / 0.116e3 * eta + 0.525e3 / 0.116e3) * (ci2 ^ 4) + (0.65e2 / 0.348e3 * (eta ^ 3) + 0.41e2 / 0.116e3 * (eta ^ 2) - 0.385e3 / 0.348e3 * eta - 0.403e3 / 0.348e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.174e3) * (ci2 - 1) * (ci2 + 1) * sin((2 * f) + 0.3e1 * g) + 0.3e1 * (1 + eta) * ((ci2 ^ 8) - 0.3e1 / 0.2e1 * (ci2 ^ 6) + 0.17e2 / 0.30e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.120e3 - 0.1e1 / 0.120e3) * Delta * cos(g + (2 * f)) + (ci2 ^ 2) * (eta - 1) * (((eta ^ 2) - 0.26e2 / 0.5e1 * eta - 0.53e2 / 0.10e2) * (ci2 ^ 6) + (-0.27e2 / 0.16e2 * (eta ^ 2) + 0.351e3 / 0.40e2 * eta + 0.729e3 / 0.80e2) * (ci2 ^ 4) + (0.3e1 / 0.5e1 * (eta ^ 2) - 0.51e2 / 0.10e2 * eta - 0.51e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 2) / 0.40e2 + 0.41e2 / 0.40e2 * eta + 0.37e2 / 0.40e2) * sin(-g - 0.2e1 * h + (2 * f)) / 0.6e1 - 0.5e1 / 0.24e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) - 0.71e2 / 0.5e1 * eta - 0.454e3 / 0.25e2) * (ci2 ^ 6) + (-0.87e2 / 0.100e3 * (eta ^ 3) + 0.12e2 / 0.25e2 * (eta ^ 2) + 0.1149e4 / 0.100e3 * eta + 0.723e3 / 0.50e2) * (ci2 ^ 4) + (0.21e2 / 0.100e3 * (eta ^ 3) + (eta ^ 2) / 0.50e2 - 0.41e2 / 0.20e2 * eta - 0.119e3 / 0.50e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.100e3) * sin(g - 0.2e1 * h + (2 * f)) + (ci2 ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((0.7e1 / 0.4e1 * (eta ^ 3) + (eta ^ 4) + 0.35e2 / 0.4e1 * (eta ^ 2) + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.7e1 / 0.4e1 * (eta ^ 3) - 0.35e2 / 0.4e1 * (eta ^ 2) - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 4) / 0.5e1 - 0.7e1 / 0.20e2 * (eta ^ 3) + 0.33e2 / 0.20e2 * (eta ^ 2) + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2) * sin(g + 0.2e1 * h) / 0.12e2 + (1 + eta) * Delta * (((eta ^ 2) - 0.32e2 / 0.3e1) * (ci2 ^ 8) + (-0.21e2 / 0.16e2 * (eta ^ 2) + 0.259e3 / 0.16e2) * (ci2 ^ 6) + (0.8e1 / 0.15e2 * (eta ^ 2) - 0.309e3 / 0.40e2) * (ci2 ^ 4) + (-0.19e2 / 0.480e3 * (eta ^ 2) + 0.547e3 / 0.480e3) * (ci2 ^ 2) - 0.7e1 / 0.480e3 * (eta ^ 2) + 0.7e1 / 0.480e3) * cos(g) - (ci2 ^ 2) * (eta - 1) * (((eta ^ 2) - 0.131e3 / 0.5e1 * eta - 0.118e3 / 0.5e1) * (ci2 ^ 6) + (-(3 * eta ^ 2) + 0.837e3 / 0.20e2 * eta + 0.789e3 / 0.20e2) * (ci2 ^ 4) + (0.13e2 / 0.10e2 * (eta ^ 2) - 0.112e3 / 0.5e1 * eta - 0.213e3 / 0.10e2) * (ci2 ^ 2) + (eta ^ 2) / 0.10e2 + 0.41e2 / 0.10e2 * eta + 0.37e2 / 0.10e2) * sin(-g + (2 * f)) / 0.24e2 + ((-0.13e2 / 0.40e2 * (eta ^ 3) - 0.19e2 / 0.20e2 * (eta ^ 2) + 0.41e2 / 0.24e2 * eta + 0.29e2 / 0.15e2) * (ci2 ^ 8) + (0.69e2 / 0.160e3 * (eta ^ 3) + 0.97e2 / 0.80e2 * (eta ^ 2) - 0.1109e4 / 0.480e3 * eta - 0.311e3 / 0.120e3) * (ci2 ^ 6) + (-0.13e2 / 0.80e2 * (eta ^ 3) - 0.91e2 / 0.240e3 * (eta ^ 2) + 0.107e3 / 0.120e3 * eta + 0.29e2 / 0.30e2) * (ci2 ^ 4) + ((1 + eta) * (eta ^ 2 - 5) * ci2 ^ 2) / 0.480e3 + ((1 + eta) * (eta ^ 2 - 5)) / 0.480e3) * sin(0.3e1 * g + 0.2e1 * h + (2 * f)) + ((-0.41e2 / 0.6e1 - (eta ^ 3) / 0.24e2 + 0.13e2 / 0.12e2 * (eta ^ 2) - 0.433e3 / 0.120e3 * eta) * (ci2 ^ 8) + (0.4643e4 / 0.480e3 + 0.29e2 / 0.240e3 * (eta ^ 3) - 0.181e3 / 0.96e2 * (eta ^ 2) + 0.289e3 / 0.60e2 * eta) * (ci2 ^ 6) + (-0.37e2 / 0.20e2 * eta - 0.159e3 / 0.40e2 - (eta ^ 3) / 0.48e2 + 0.263e3 / 0.240e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.7e1 / 0.480e3 * (eta ^ 3) - 0.97e2 / 0.480e3 * (eta ^ 2) + 0.83e2 / 0.480e3 * eta + 0.209e3 / 0.480e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.480e3) * sin(g + (2 * f)) + ((0.11e2 / 0.16e2 * (eta ^ 3) - 0.1001e4 / 0.240e3 + 0.137e3 / 0.80e2 * (eta ^ 2) - 0.551e3 / 0.240e3 * eta) * (ci2 ^ 8) + (0.5191e4 / 0.960e3 - 0.301e3 / 0.320e3 * (eta ^ 3) - 0.747e3 / 0.320e3 * (eta ^ 2) + 0.2833e4 / 0.960e3 * eta) * (ci2 ^ 6) + (-0.251e3 / 0.160e3 + 0.49e2 / 0.160e3 * (eta ^ 3) + 0.359e3 / 0.480e3 * (eta ^ 2) - 0.27e2 / 0.32e2 * eta) * (ci2 ^ 4) - (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) * (ci2 ^ 2) / 0.384e3 - (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) / 0.384e3) * sin(0.3e1 * g + 0.2e1 * h + (4 * f)) + (((eta ^ 3) - (5 * eta ^ 2) + 0.13e2 / 0.5e1 * eta + 0.61e2 / 0.5e1) * (ci2 ^ 6) + (-0.13e2 / 0.8e1 * (eta ^ 3) + 0.331e3 / 0.40e2 * (eta ^ 2) - 0.151e3 / 0.40e2 * eta - 0.763e3 / 0.40e2) * (ci2 ^ 4) + ((eta ^ 3) / 0.2e1 - 0.9e1 / 0.2e1 * (eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.99e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 3) / 0.20e2 + 0.4e1 / 0.5e1 * (eta ^ 2) - 0.13e2 / 0.20e2 * eta - 0.17e2 / 0.10e2) * (ci2 ^ 2) * sin(g + 0.2e1 * h + (2 * f)) / 0.4e1 - 0.7e1 / 0.24e2 * (((eta ^ 2) + 0.73e2 / 0.35e2 * eta + 0.29e2 / 0.35e2) * (ci2 ^ 8) + (-0.433e3 / 0.280e3 * (eta ^ 2) - 0.233e3 / 0.70e2 * eta - 0.409e3 / 0.280e3) * (ci2 ^ 6) + (0.41e2 / 0.70e2 * (eta ^ 2) + 0.6e1 / 0.5e1 * eta + 0.37e2 / 0.70e2) * (ci2 ^ 4) - ((1 + eta) * (eta - 41) * ci2 ^ 2) / 0.560e3 - (eta ^ 2) / 0.112e3 - eta / 0.35e2 - 0.11e2 / 0.560e3) * (eta - 1) * sin(g + (4 * f)) - sin(g) * (ci2 ^ 2) * (((eta ^ 4) + 0.129e3 / 0.80e2 * (eta ^ 3) + 0.239e3 / 0.80e2 * (eta ^ 2) + 0.99e2 / 0.80e2 * eta + 0.189e3 / 0.80e2) * (ci2 ^ 6) + (-0.21e2 / 0.16e2 * (eta ^ 4) - 0.17e2 / 0.8e1 * (eta ^ 3) - 0.137e3 / 0.32e2 * (eta ^ 2) - 0.41e2 / 0.16e2 * eta - 0.707e3 / 0.160e3) * (ci2 ^ 4) + (0.7e1 / 0.20e2 * (eta ^ 4) + 0.91e2 / 0.160e3 * (eta ^ 3) + 0.287e3 / 0.160e3 * (eta ^ 2) + 0.71e2 / 0.32e2 * eta + 0.511e3 / 0.160e3) * (ci2 ^ 2) + (eta ^ 4) / 0.40e2 + 0.7e1 / 0.160e3 * (eta ^ 3) - 0.33e2 / 0.160e3 * (eta ^ 2) - 0.21e2 / 0.32e2 * eta - 0.129e3 / 0.160e3) / 0.3e1) * sqrt((-eta ^ 2 + 1)) - ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(-g + 0.2e1 * h + (3 * f)) / 0.160e3 + ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(0.3e1 * g + (7 * f)) / 0.32e2 + 0.59e2 / 0.80e2 * (((eta ^ 3) + 0.908e3 / 0.177e3 * (eta ^ 2) + 0.1891e4 / 0.177e3 * eta + 0.1088e4 / 0.177e3) * (ci2 ^ 8) + (-0.391e3 / 0.236e3 * (eta ^ 3) - 0.480e3 / 0.59e2 * (eta ^ 2) - 0.4025e4 / 0.236e3 * eta - 0.588e3 / 0.59e2) * (ci2 ^ 6) + (0.49e2 / 0.59e2 * (eta ^ 3) + 0.1541e4 / 0.354e3 * (eta ^ 2) + 0.542e3 / 0.59e2 * eta + 0.1909e4 / 0.354e3) * (ci2 ^ 4) + (-0.169e3 / 0.1416e4 * (eta ^ 3) - 0.1129e4 / 0.1416e4 * (eta ^ 2) - 0.2399e4 / 0.1416e4 * eta - 0.1391e4 / 0.1416e4) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.1416e4) * (eta - 1) * sin(f - g) + 0.97e2 / 0.80e2 * (eta - 1) * (((eta ^ 3) - 0.738e3 / 0.97e2 * (eta ^ 2) - 0.1781e4 / 0.97e2 * eta - 0.942e3 / 0.97e2) * (ci2 ^ 8) + (-0.515e3 / 0.388e3 * (eta ^ 3) + 0.1017e4 / 0.97e2 * (eta ^ 2) + 0.9775e4 / 0.388e3 * eta + 0.1293e4 / 0.97e2) * (ci2 ^ 6) + (0.119e3 / 0.291e3 * (eta ^ 3) - 0.2125e4 / 0.582e3 * (eta ^ 2) - 0.2510e4 / 0.291e3 * eta - 0.883e3 / 0.194e3) * (ci2 ^ 4) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * sin(0.3e1 * g + 0.2e1 * h + f) - 0.9e1 / 0.80e2 * (((eta ^ 3) + 0.188e3 / 0.81e2 * (eta ^ 2) - 0.401e3 / 0.81e2 * eta - 0.592e3 / 0.81e2) * (ci2 ^ 8) + (-0.77e2 / 0.36e2 * (eta ^ 3) - 0.445e3 / 0.81e2 * (eta ^ 2) + 0.1297e4 / 0.324e3 * eta + 0.701e3 / 0.81e2) * (ci2 ^ 6) + (0.113e3 / 0.81e2 * (eta ^ 3) + 0.145e3 / 0.54e2 * (eta ^ 2) - 0.176e3 / 0.81e2 * eta - 0.617e3 / 0.162e3) * (ci2 ^ 4) + (-0.169e3 / 0.648e3 * (eta ^ 3) - (eta ^ 2) / 0.72e2 + 0.869e3 / 0.648e3 * eta + 0.709e3 / 0.648e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.648e3) * (eta - 1) * sin(g + (3 * f)) + (1 + eta) * (((eta ^ 3) + 0.391e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3203e4 / 0.180e3) * (ci2 ^ 8) + (-0.51e2 / 0.40e2 * (eta ^ 3) - 0.2149e4 / 0.240e3 * (eta ^ 2) - 0.171e3 / 0.20e2 * eta + 0.17101e5 / 0.720e3) * (ci2 ^ 6) + (0.11e2 / 0.30e2 * (eta ^ 3) + 0.251e3 / 0.90e2 * (eta ^ 2) + 0.27e2 / 0.10e2 * eta - 0.64e2 / 0.9e1) * (ci2 ^ 4) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59) * ci2 ^ 2) / 0.1440e4 - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * sin(0.3e1 * g + 0.2e1 * h + (3 * f)) / 0.4e1 + 0.9e1 / 0.40e2 * (((eta ^ 2) - 0.8e1 / 0.27e2 * eta - 0.137e3 / 0.27e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) + 0.4e1 / 0.9e1 * eta + 0.70e2 / 0.9e1) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.103e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 2) + 0.4e1 / 0.27e2 * eta + 0.16e2 / 0.27e2) * (ci2 ^ 2) * (1 + eta) * (eta - 1) * sin(g + 0.2e1 * h + (3 * f)) - (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.127e3 / 0.20e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3113e4 / 0.180e3) * (ci2 ^ 6) + (-0.31e2 / 0.40e2 * (eta ^ 3) - 0.271e3 / 0.48e2 * (eta ^ 2) - 0.27e2 / 0.5e1 * eta + 0.3553e4 / 0.240e3) * (ci2 ^ 4) + (0.13e2 / 0.120e3 * (eta ^ 3) + 0.653e3 / 0.720e3 * (eta ^ 2) + 0.9e1 / 0.10e2 * eta - 0.1567e4 / 0.720e3) * (ci2 ^ 2) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * sin(0.3e1 * g + (3 * f)) / 0.4e1 - 0.9e1 / 0.80e2 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) - 0.74e2 / 0.81e2 * (eta ^ 2) - 0.469e3 / 0.81e2 * eta - 0.230e3 / 0.81e2) * (ci2 ^ 6) + (-0.25e2 / 0.36e2 * (eta ^ 3) + 0.70e2 / 0.27e2 * (eta ^ 2) + 0.1031e4 / 0.108e3 * eta + 0.148e3 / 0.27e2) * (ci2 ^ 4) + (0.25e2 / 0.324e3 * (eta ^ 3) - 0.163e3 / 0.162e3 * (eta ^ 2) - 0.1025e4 / 0.324e3 * eta - 0.323e3 / 0.162e3) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.648e3) * sin(g - 0.2e1 * h + (3 * f)) - (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.585e3 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.4e1 * eta - 0.871e3 / 0.8e1) * (ci2 ^ 6) + (0.3e1 / 0.16e2 * (eta ^ 3) - 0.2193e4 / 0.32e2 * (eta ^ 2) - 0.81e2 / 0.8e1 * eta + 0.3075e4 / 0.32e2) * (ci2 ^ 4) + (-0.17e2 / 0.48e2 * (eta ^ 3) + 0.1463e4 / 0.96e2 * (eta ^ 2) + 0.15e2 / 0.8e1 * eta - 0.1837e4 / 0.96e2) * (ci2 ^ 2) + 0.5e1 / 0.192e3 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * sin(g - 0.2e1 * h + f) / 0.10e2 + 0.3e1 / 0.80e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sin(0.2e1 * h + g + (5 * f))) * R__e ^ 4 * J ^ 2 / (eta ^ 8) / a ^ 4 / (1 + eta) -0.891e3 / 0.256e3 * (-0.160e3 / 0.33e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((0.12133e5 / 0.720e3 + (eta ^ 6) - 0.25e2 / 0.72e2 * (eta ^ 5) - 0.821e3 / 0.60e2 * (eta ^ 3) - 0.487e3 / 0.120e3 * (eta ^ 2) + 0.1519e4 / 0.72e2 * eta - 0.4891e4 / 0.720e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.13589e5 / 0.720e3 + 0.547e3 / 0.36e2 * (eta ^ 3) - 0.199e3 / 0.8e1 * eta + 0.6107e4 / 0.720e3 * (eta ^ 4) + 0.73e2 / 0.72e2 * (eta ^ 5) - (eta ^ 6) + 0.67e2 / 0.24e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.533e3 / 0.120e3 * (eta ^ 3) + 0.389e3 / 0.48e2 * eta - 0.4133e4 / 0.1440e4 * (eta ^ 4) + 0.7979e4 / 0.1440e4 - 0.421e3 / 0.720e3 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) + 0.13e2 / 0.80e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.7e1 / 0.90e2 * (1 + eta) * ((eta ^ 4) + 0.11e2 / 0.7e1 * (eta ^ 3) + 0.5e1 / 0.7e1 * (eta ^ 2) - 0.22e2 / 0.7e1 * eta - 0.24e2 / 0.7e1)) * cos(0.2e1 * g) + 0.20e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) - 0.4e1 / 0.5e1 * (eta ^ 4) - 0.38e2 / 0.15e2 * (eta ^ 3) + 0.24e2 / 0.5e1 * (eta ^ 2) - 0.29e2 / 0.15e2 * eta - 0.124e3 / 0.15e2) * (ci2 ^ 2) - 0.3e1 / 0.5e1 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 4) + 0.8e1 / 0.3e1 * (eta ^ 3) - (2 * eta ^ 2) - 0.31e2 / 0.15e2 * eta + 0.8e1 / 0.5e1) * cos(-0.2e1 * h + 0.2e1 * g + (2 * f)) + 0.5e1 / 0.11e2 * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * ((1 + eta) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * g - 0.2e1 * h + (5 * f)) + 0.8e1 / 0.297e3 * ((eta ^ 5 + 18 * eta ^ 4 + 90 * eta ^ 3 - 42 * eta ^ 2 - 59 * eta - 16) * ci2 ^ 2 - 4 * eta ^ 5 - 3 * eta ^ 4 - 12 * eta ^ 3 - 6 * eta ^ 2 + 25) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((4 * f) + 0.4e1 * g) + 0.2240e4 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.163e3 / 0.28e2 * (eta ^ 3) - 0.3e1 / 0.4e1 * (eta ^ 2) + 0.151e3 / 0.28e2 * eta + 0.17e2 / 0.28e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 5) + 0.193e3 / 0.28e2 * (eta ^ 3) + 0.27e2 / 0.28e2 * (eta ^ 2) - 0.173e3 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 5) - 0.297e3 / 0.140e3 * (eta ^ 3) - 0.9e1 / 0.28e2 * (eta ^ 2) + 0.251e3 / 0.140e3 * eta + 0.41e2 / 0.140e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) - 0.37e2 / 0.14e2 * eta - 0.9e1 / 0.14e2) * (eta - 1) / 0.30e2) * Delta * sin(0.2e1 * h) - 0.2e1 / 0.99e2 * (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 3) * ((ci2 + 1) ^ 3) * cos(0.2e1 * g - 0.2e1 * h + (8 * f)) + 0.1600e4 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 3) - 0.33e2 / 0.5e1 * (eta ^ 2) - 0.31e2 / 0.5e1 * eta + 0.61e2 / 0.5e1) * (ci2 ^ 6) + (-(eta ^ 3) / 0.5e1 + 0.39e2 / 0.5e1 * (eta ^ 2) + 0.31e2 / 0.5e1 * eta - 0.71e2 / 0.5e1) * (ci2 ^ 4) + (-0.11e2 / 0.25e2 * (eta ^ 3) - 0.57e2 / 0.25e2 * (eta ^ 2) - 0.31e2 / 0.25e2 * eta + 0.101e3 / 0.25e2) * (ci2 ^ 2) + 0.2e1 / 0.25e2 * (eta ^ 3) + 0.3e1 / 0.25e2 * (eta ^ 2) - 0.1e1 / 0.5e1) * sin(0.2e1 * g + (2 * f)) - 0.160e3 / 0.11e2 * ((1 + eta) ^ 3) * eta * (((eta ^ 2) + 0.308e3 / 0.27e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) - 0.224e3 / 0.9e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 2) + 0.188e3 / 0.9e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 2) - 0.8e1) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 + 0.10e2 / 0.9e1) * Delta * (eta - 1) * sin(0.2e1 * g + 0.2e1 * h) + 0.1480e4 / 0.297e3 * (((eta ^ 5) + 0.67e2 / 0.74e2 * (eta ^ 4) - 0.3267e4 / 0.185e3 * (eta ^ 3) - 0.6946e4 / 0.185e3 * (eta ^ 2) - 0.2192e4 / 0.185e3 * eta + 0.3297e4 / 0.370e3) * (ci2 ^ 6) + (-0.229e3 / 0.185e3 * (eta ^ 5) - 0.559e3 / 0.370e3 * (eta ^ 4) + 0.3753e4 / 0.185e3 * (eta ^ 3) + 0.8252e4 / 0.185e3 * (eta ^ 2) + 0.3166e4 / 0.185e3 * eta - 0.2853e4 / 0.370e3) * (ci2 ^ 4) + (0.33e2 / 0.74e2 * (eta ^ 5) + 0.109e3 / 0.148e3 * (eta ^ 4) - 0.2221e4 / 0.370e3 * (eta ^ 3) - 0.2507e4 / 0.185e3 * (eta ^ 2) - 0.1177e4 / 0.185e3 * eta + 0.767e3 / 0.740e3) * (ci2 ^ 2) - 0.7e1 / 0.185e3 * (1 + eta) * ((eta ^ 4) + 0.8e1 / 0.7e1 * (eta ^ 3) - 0.145e3 / 0.14e2 * (eta ^ 2) - 0.80e2 / 0.7e1 * eta - 0.17e2 / 0.14e2)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(-0.2e1 * h + (2 * f)) - 0.259e3 / 0.198e3 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.16897e5 / 0.2331e4 * (eta ^ 4) + 0.13522e5 / 0.777e3 * (eta ^ 3) + 0.5738e4 / 0.259e3 * (eta ^ 2) + 0.17887e5 / 0.2331e4 * eta - 0.2809e4 / 0.777e3) * (ci2 ^ 6) + (-0.593e3 / 0.777e3 * (eta ^ 5) - 0.13721e5 / 0.2331e4 * (eta ^ 4) - 0.11474e5 / 0.777e3 * (eta ^ 3) - 0.7530e4 / 0.259e3 * (eta ^ 2) - 0.61319e5 / 0.2331e4 * eta - 0.5119e4 / 0.777e3) * (ci2 ^ 4) + (0.23e2 / 0.666e3 * (eta ^ 5) + 0.3851e4 / 0.4662e4 * (eta ^ 4) + 0.1775e4 / 0.777e3 * (eta ^ 3) + 0.1079e4 / 0.111e3 * (eta ^ 2) + 0.70709e5 / 0.4662e4 * eta + 0.10709e5 / 0.1554e4) * (ci2 ^ 2) + 0.46e2 / 0.2331e4 * (1 + eta) * ((eta ^ 4) + 0.2e1 / 0.23e2 * (eta ^ 3) - 0.26e2 / 0.23e2 * (eta ^ 2) - 0.802e3 / 0.23e2 * eta - 0.909e3 / 0.23e2)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + (3 * f)) + 0.8080e4 / 0.99e2 * (((eta ^ 3) + 0.63e2 / 0.101e3 * (eta ^ 2) - 0.117e3 / 0.101e3 * eta - 0.115e3 / 0.101e3) * (ci2 ^ 6) + (-0.107e3 / 0.101e3 * (eta ^ 3) - 0.69e2 / 0.101e3 * (eta ^ 2) + 0.123e3 / 0.101e3 * eta + 0.121e3 / 0.101e3) * (ci2 ^ 4) + (0.25e2 / 0.101e3 * (eta ^ 3) + 0.87e2 / 0.505e3 * (eta ^ 2) - 0.141e3 / 0.505e3 * eta - 0.139e3 / 0.505e3) * (ci2 ^ 2) - 0.3e1 / 0.505e3 * (eta - 1) * ((1 + eta) ^ 2)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sin(0.2e1 * h + (4 * f) + 0.4e1 * g) - 0.802e3 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 5) + 0.2273e4 / 0.401e3 * (eta ^ 4) + 0.4304e4 / 0.401e3 * (eta ^ 3) - 0.15488e5 / 0.3609e4 * (eta ^ 2) - 0.76769e5 / 0.3609e4 * eta - 0.24203e5 / 0.1203e4) * (ci2 ^ 6) + (-0.1265e4 / 0.1203e4 * (eta ^ 5) - 0.2619e4 / 0.401e3 * (eta ^ 4) - 0.15016e5 / 0.1203e4 * (eta ^ 3) + 0.16528e5 / 0.3609e4 * (eta ^ 2) + 0.85123e5 / 0.3609e4 * eta + 0.26185e5 / 0.1203e4) * (ci2 ^ 4) + (0.551e3 / 0.2406e4 * (eta ^ 5) + 0.3403e4 / 0.2406e4 * (eta ^ 4) + 0.1155e4 / 0.401e3 * (eta ^ 3) - 0.1925e4 / 0.3609e4 * (eta ^ 2) - 0.34123e5 / 0.7218e4 * eta - 0.10829e5 / 0.2406e4) * (ci2 ^ 2) - 0.31e2 / 0.7218e4 * (eta ^ 5) - 0.433e3 / 0.7218e4 * (eta ^ 4) - 0.154e3 / 0.1203e4 * (eta ^ 3) + 0.34e2 / 0.3609e4 * (eta ^ 2) + 0.1163e4 / 0.7218e4 * eta + 0.101e3 / 0.802e3) * cos(0.2e1 * h + (3 * f) + 0.4e1 * g) + 0.76e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) + 0.14e2 / 0.57e2 * (eta ^ 4) - 0.162e3 / 0.19e2 * (eta ^ 3) - 0.376e3 / 0.57e2 * (eta ^ 2) + 0.425e3 / 0.57e2 * eta + 0.206e3 / 0.19e2) * (ci2 ^ 2) - 0.3e1 / 0.19e2 * ((eta ^ 3) + 0.2e1 / 0.9e1 * (eta ^ 2) - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * (1 + eta) * (eta - 1)) * cos(0.6e1 * g + 0.2e1 * h + (6 * f)) + 0.5800e4 / 0.33e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) + 0.95e2 / 0.87e2 * eta + 0.8e1 / 0.15e2) * (ci2 ^ 6) + (-0.101e3 / 0.87e2 * (eta ^ 2) - 0.19e2 / 0.15e2 * eta - 0.262e3 / 0.435e3) * (ci2 ^ 4) + (0.143e3 / 0.435e3 * (eta ^ 2) + 0.779e3 / 0.2175e4 * eta + 0.352e3 / 0.2175e4) * (ci2 ^ 2) - 0.7e1 / 0.435e3 * (eta ^ 2) - 0.38e2 / 0.2175e4 * eta - 0.1e1 / 0.145e3) * sin(0.4e1 * g + 0.2e1 * h + f) + 0.580e3 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) - 0.24e2 / 0.29e2 * eta - 0.197e3 / 0.29e2) * (ci2 ^ 6) + (-(eta ^ 2) + 0.32e2 / 0.29e2 * eta + 0.205e3 / 0.29e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.5e1 - 0.56e2 / 0.145e3 * eta - 0.229e3 / 0.145e3) * (ci2 ^ 2) + 0.4e1 / 0.145e3 * eta + 0.4e1 / 0.145e3) * sqrt((-eta ^ 2 + 1)) * sin((5 * f) + 0.2e1 * g) - 0.265e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.264e3 / 0.265e3 * eta - 0.1561e4 / 0.265e3) * (ci2 ^ 2) + 0.88e2 / 0.265e3 * eta + 0.88e2 / 0.265e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.4e1 * g + (7 * f)) - 0.10e2 / 0.33e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.23e2 / 0.45e2 * eta - 0.26e2 / 0.9e1) * (ci2 ^ 2) - 0.2e1 / 0.45e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.2e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + (5 * f) + 0.2e1 * g) - 0.6040e4 / 0.297e3 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.91e2 / 0.151e3 * eta - 0.276e3 / 0.151e3) * (ci2 ^ 6) + (-0.197e3 / 0.151e3 * (eta ^ 2) - 0.119e3 / 0.151e3 * eta + 0.366e3 / 0.151e3) * (ci2 ^ 4) + (0.67e2 / 0.151e3 * (eta ^ 2) + 0.203e3 / 0.755e3 * eta - 0.636e3 / 0.755e3) * (ci2 ^ 2) - 0.23e2 / 0.755e3 * (eta ^ 2) - 0.14e2 / 0.755e3 * eta + 0.9e1 / 0.151e3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + (3 * f)) + 0.500e3 / 0.99e2 * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(-0.4e1 * g - 0.2e1 * h + f) + 0.80e2 / 0.9e1 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sin(0.2e1 * h + (6 * f) + 0.4e1 * g) - 0.80e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sin(-0.2e1 * g + (2 * f)) + 0.167e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.312e3 / 0.167e3 * eta - 0.503e3 / 0.167e3) * (ci2 ^ 2) + 0.104e3 / 0.167e3 * eta + 0.104e3 / 0.167e3) * sqrt((-eta ^ 2 + 1)) * cos(0.4e1 * g + f) + 0.80e2 / 0.9e1 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sin((6 * f) + 0.2e1 * g) - 0.403e3 / 0.297e3 * ((ci2 ^ 2) - 0.4e1 / 0.31e2) * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(0.6e1 * g + 0.2e1 * h + f) - 0.260e3 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * sin(-0.2e1 * h + (5 * f)) - 0.340e3 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * (0.4e1 / 0.85e2 + (eta - 0.41e2 / 0.17e2) * (ci2 ^ 6) + (-eta + 0.49e2 / 0.17e2) * (ci2 ^ 4) + (eta / 0.5e1 - 0.73e2 / 0.85e2) * (ci2 ^ 2)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * g + f) + 0.29e2 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * ((ci2 ^ 2) - 0.44e2 / 0.29e2) * cos(0.2e1 * g - 0.2e1 * h + (7 * f)) - 0.80e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sin(0.2e1 * h + (2 * f)) + 0.2054e4 / 0.297e3 * (((eta ^ 2) + 0.1305e4 / 0.1027e4 * eta + 0.306e3 / 0.1027e4) * (ci2 ^ 2) - 0.110e3 / 0.1027e4 * (eta ^ 2) - 0.140e3 / 0.1027e4 * eta - 0.22e2 / 0.1027e4) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.6e1 * g + 0.2e1 * h + (3 * f)) + 0.20e2 / 0.297e3 * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * cos((6 * f)) - 0.20e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((3 * f) - 0.2e1 * g) - 0.20e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (3 * f)) - 0.5840e4 / 0.99e2 * (((eta ^ 2) + 0.34e2 / 0.73e2 * eta - 0.59e2 / 0.73e2) * (ci2 ^ 6) + (-0.97e2 / 0.73e2 * (eta ^ 2) - 0.46e2 / 0.73e2 * eta + 0.79e2 / 0.73e2) * (ci2 ^ 4) + (0.169e3 / 0.365e3 * (eta ^ 2) + 0.82e2 / 0.365e3 * eta - 0.139e3 / 0.365e3) * (ci2 ^ 2) - 0.12e2 / 0.365e3 * (eta ^ 2) - 0.6e1 / 0.365e3 * eta + 0.2e1 / 0.73e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin(-0.2e1 * h + (2 * f)) + 0.316e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.136e3 / 0.79e2 * (eta ^ 3) + 0.190e3 / 0.79e2 * (eta ^ 2) - 0.144e3 / 0.79e2 * eta - 0.341e3 / 0.79e2) * (ci2 ^ 2) - 0.40e2 / 0.79e2 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.10e2 * (eta ^ 2) - 0.6e1 / 0.5e1)) * (eta - 1) * cos((2 * f) + 0.4e1 * g) + 0.31e2 / 0.22e2 * (1 + eta) * (((eta ^ 4) + 0.808e3 / 0.93e2 * (eta ^ 3) - 0.338e3 / 0.279e3 * (eta ^ 2) - 0.1112e4 / 0.31e2 * eta - 0.2503e4 / 0.93e2) * (ci2 ^ 6) + (-0.343e3 / 0.279e3 * (eta ^ 4) - 0.2512e4 / 0.279e3 * (eta ^ 3) + 0.38e2 / 0.9e1 * (eta ^ 2) + 0.3920e4 / 0.93e2 * eta + 0.933e3 / 0.31e2) * (ci2 ^ 4) + (0.631e3 / 0.1674e4 * (eta ^ 4) + 0.634e3 / 0.279e3 * (eta ^ 3) - 0.2231e4 / 0.837e3 * (eta ^ 2) - 0.410e3 / 0.31e2 * eta - 0.14489e5 / 0.1674e4) * (ci2 ^ 2) - 0.16e2 / 0.837e3 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.8e1 * (eta ^ 2) - (20 * eta) - 0.163e3 / 0.8e1)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * g + f) - 0.217e3 / 0.198e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.3480e4 / 0.217e3 * (eta ^ 3) + 0.4546e4 / 0.217e3 * (eta ^ 2) - 0.20920e5 / 0.217e3 * eta - 0.853e3 / 0.7e1) * (ci2 ^ 6) + (-0.281e3 / 0.217e3 * (eta ^ 4) - 0.3616e4 / 0.217e3 * (eta ^ 3) - 0.3690e4 / 0.217e3 * (eta ^ 2) + 0.24000e5 / 0.217e3 * eta + 0.4085e4 / 0.31e2) * (ci2 ^ 4) + (0.569e3 / 0.1302e4 * (eta ^ 4) + 0.718e3 / 0.217e3 * (eta ^ 3) + 0.95e2 / 0.651e3 * (eta ^ 2) - 0.18650e5 / 0.651e3 * eta - 0.37991e5 / 0.1302e4) * (ci2 ^ 2) - 0.16e2 / 0.651e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.8e1 * (eta ^ 2) - (16 * eta) - 0.281e3 / 0.8e1)) * cos((5 * f) + 0.2e1 * g) - 0.239e3 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 3) + 0.1691e4 / 0.239e3 * (eta ^ 2) + 0.2725e4 / 0.239e3 * eta + 0.1265e4 / 0.239e3) * (ci2 ^ 6) + (-0.293e3 / 0.239e3 * (eta ^ 3) - 0.2013e4 / 0.239e3 * (eta ^ 2) - 0.3215e4 / 0.239e3 * eta - 0.1487e4 / 0.239e3) * (ci2 ^ 4) + (0.167e3 / 0.478e3 * (eta ^ 3) + 0.1265e4 / 0.478e3 * (eta ^ 2) + 0.6179e4 / 0.1434e4 * eta + 0.959e3 / 0.478e3) * (ci2 ^ 2) - 0.9e1 / 0.478e3 * (1 + eta) * ((eta ^ 2) + 0.62e2 / 0.9e1 * eta + 0.163e3 / 0.27e2)) * cos(-0.4e1 * g - 0.2e1 * h + f) + 0.125e3 / 0.198e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) - 0.1176e4 / 0.125e3 * eta - 0.3137e4 / 0.125e3) * (ci2 ^ 6) + (-(eta ^ 2) + 0.1216e4 / 0.125e3 * eta + 0.3177e4 / 0.125e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.6e1 - 0.754e3 / 0.375e3 * eta - 0.3469e4 / 0.750e3) * (ci2 ^ 2) + 0.2e1 / 0.75e2 * eta + 0.2e1 / 0.75e2) * cos(0.2e1 * g + (7 * f)) - (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.397e3 / 0.99e2 * (eta ^ 2) - 0.1567e4 / 0.99e2 * eta - 0.85e2 / 0.9e1) * (ci2 ^ 6) + (-0.43e2 / 0.33e2 * (eta ^ 3) + 0.595e3 / 0.99e2 * (eta ^ 2) + 0.2333e4 / 0.99e2 * eta + 0.491e3 / 0.33e2) * (ci2 ^ 4) + (0.257e3 / 0.594e3 * (eta ^ 3) - 0.463e3 / 0.198e3 * (eta ^ 2) - 0.5417e4 / 0.594e3 * eta - 0.3635e4 / 0.594e3) * (ci2 ^ 2) - 0.5e1 / 0.198e3 * ((eta ^ 2) - 0.42e2 / 0.5e1 * eta - 0.281e3 / 0.15e2) * (1 + eta)) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + (5 * f)) + 0.358e3 / 0.297e3 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 4) + 0.268e3 / 0.179e3 * (eta ^ 3) + 0.370e3 / 0.179e3 * (eta ^ 2) - 0.540e3 / 0.179e3 * eta - 0.1021e4 / 0.179e3) * (ci2 ^ 2) - 0.64e2 / 0.179e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.16e2 * (eta ^ 2) - 0.45e2 / 0.16e2)) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((5 * f) + 0.4e1 * g) - 0.5e1 / 0.22e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + (7 * f)) + 0.13e2 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.146e3 / 0.13e2 * eta + 0.121e3 / 0.13e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 2) - 0.146e3 / 0.13e2 * eta - 0.119e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.78e2 * (eta ^ 2) + 0.8e1 / 0.3e1 * eta + 0.173e3 / 0.78e2) * (ci2 ^ 2) - (eta ^ 2) / 0.78e2 + 0.1e1 / 0.78e2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + (3 * f)) - 0.1600e4 / 0.99e2 * (((eta ^ 4) + (eta ^ 3) - 0.13e2 / 0.10e2 * (eta ^ 2) + 0.9e1 / 0.5e1 * eta + 0.29e2 / 0.10e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 4) - 0.7e1 / 0.5e1 * (eta ^ 3) + 0.13e2 / 0.10e2 * (eta ^ 2) - 0.12e2 / 0.5e1 * eta - 0.7e1 / 0.2e1) * (ci2 ^ 4) + (0.27e2 / 0.50e2 * (eta ^ 4) + 0.27e2 / 0.50e2 * (eta ^ 3) - 0.13e2 / 0.50e2 * (eta ^ 2) + 0.21e2 / 0.25e2 * eta + 0.53e2 / 0.50e2) * (ci2 ^ 2) - 0.7e1 / 0.150e3 * ((eta ^ 3) + 0.9e1 / 0.7e1) * (1 + eta)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin(0.2e1 * g) - 0.680e3 / 0.99e2 * (((eta ^ 3) + 0.8e1 / 0.17e2 * (eta ^ 2) - 0.21e2 / 0.17e2 * eta - 0.8e1 / 0.17e2) * (ci2 ^ 6) + (-0.19e2 / 0.17e2 * (eta ^ 3) - 0.10e2 / 0.17e2 * (eta ^ 2) + 0.23e2 / 0.17e2 * eta + 0.10e2 / 0.17e2) * (ci2 ^ 4) + (0.5e1 / 0.17e2 * (eta ^ 3) + 0.16e2 / 0.85e2 * (eta ^ 2) - 0.29e2 / 0.85e2 * eta - 0.16e2 / 0.85e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.85e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + f) - 0.13e2 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h - 0.2e1 * g + f) + (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + (5 * f)) / 0.66e2 + (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos((5 * f) - 0.2e1 * g) / 0.66e2 + 0.35e2 / 0.198e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * g + (9 * f)) + 0.35e2 / 0.198e3 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(0.4e1 * g + 0.2e1 * h + (9 * f)) + 0.4e1 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((eta ^ 2 + eta) * ci2 ^ 2 + eta ^ 2 - eta - 32) * cos(0.2e1 * g - 0.2e1 * h + (6 * f)) - 0.7e1 / 0.66e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * sqrt((-eta ^ 2 + 1)) * cos(-0.4e1 * g - 0.2e1 * h + (3 * f)) - 0.20e2 / 0.99e2 * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * cos((4 * f) - 0.2e1 * g) - 0.38e2 / 0.297e3 * (((eta ^ 3) + 0.9e1 / 0.19e2 * (eta ^ 2) - 0.25e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (ci2 ^ 2) - 0.5e1 / 0.19e2 * (eta - 1) * ((1 + eta) ^ 2)) * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos(0.2e1 * g - 0.2e1 * h) + 0.52e2 / 0.99e2 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(0.4e1 * g + 0.2e1 * h + (8 * f)) - 0.1360e4 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.77e2 / 0.68e2 * eta + 0.217e3 / 0.340e3) * (ci2 ^ 2) - 0.49e2 / 0.340e3 * (eta ^ 2) - 0.11e2 / 0.68e2 * eta - 0.6e1 / 0.85e2) * cos(0.6e1 * g + 0.2e1 * h + (2 * f)) - 0.1520e4 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.25e2 / 0.19e2 * (ci2 ^ 4) + 0.43e2 / 0.95e2 * (ci2 ^ 2) - 0.3e1 / 0.95e2) * ((eta - 1) ^ 2) * sin(-0.2e1 * h + (4 * f)) + 0.4e1 / 0.33e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) - eta - 0.146e3 / 0.9e1) * (ci2 ^ 2) + eta / 0.3e1 + 0.1e1 / 0.3e1) * cos((8 * f) + 0.4e1 * g) - 0.125e3 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((9 * f) + 0.4e1 * g) - 0.28e2 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (((eta ^ 2) - 0.15e2 / 0.7e1 * eta - 0.10e2 / 0.7e1) * (ci2 ^ 2) + 0.5e1 / 0.7e1 * eta + 0.5e1 / 0.7e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * cos(0.4e1 * g) + 0.280e3 / 0.297e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) - 0.188e3 / 0.7e1 * (eta ^ 3) - 0.858e3 / 0.7e1 * (eta ^ 2) + 0.540e3 / 0.7e1 * eta + 0.1371e4 / 0.7e1) * (ci2 ^ 6) + (0.25e2 / 0.7e1 * (eta ^ 4) + 0.256e3 / 0.7e1 * (eta ^ 3) + 0.894e3 / 0.7e1 * (eta ^ 2) - 0.720e3 / 0.7e1 * eta - 0.1551e4 / 0.7e1) * (ci2 ^ 4) + (-0.121e3 / 0.35e2 * (eta ^ 4) - 0.92e2 / 0.7e1 * (eta ^ 3) - 0.1002e4 / 0.35e2 * (eta ^ 2) + (36 * eta) + 0.2091e4 / 0.35e2) * (ci2 ^ 2) + 0.16e2 / 0.35e2 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.8e1 * (eta ^ 2) - 0.45e2 / 0.8e1)) * Delta * sqrt((-eta ^ 2 + 1)) * sin((3 * f) + 0.2e1 * g) - 0.734e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.250e3 / 0.367e3 * (eta ^ 2) - 0.663e3 / 0.367e3 * eta - 0.766e3 / 0.367e3) * (ci2 ^ 2) - 0.22e2 / 0.367e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * cos(0.6e1 * g + 0.2e1 * h + (7 * f)) + 0.34e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * (((eta ^ 3) + 0.11e2 / 0.17e2 * (eta ^ 2) - 0.277e3 / 0.51e2 * eta - 0.17e2 / 0.3e1) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.17e2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos(0.6e1 * g + 0.2e1 * h + (8 * f)) + 0.8240e4 / 0.33e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.134e3 / 0.103e3 * eta + 0.185e3 / 0.309e3) * (ci2 ^ 6) + (-0.349e3 / 0.309e3 * (eta ^ 2) - 0.454e3 / 0.309e3 * eta - 0.205e3 / 0.309e3) * (ci2 ^ 4) + (0.469e3 / 0.1545e4 * (eta ^ 2) + 0.122e3 / 0.309e3 * eta + 0.53e2 / 0.309e3) * (ci2 ^ 2) - 0.4e1 / 0.309e3 * (eta ^ 2) - 0.26e2 / 0.1545e4 * eta - 0.2e1 / 0.309e3) * sin(0.2e1 * h + (2 * f) + 0.4e1 * g) + 0.7600e4 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.47e2 / 0.38e2 * (eta ^ 3) - 0.1231e4 / 0.570e3 * (eta ^ 2) - 0.2293e4 / 0.570e3 * eta - 0.73e2 / 0.38e2) * (ci2 ^ 6) + (-0.108e3 / 0.95e2 * (eta ^ 4) - 0.267e3 / 0.190e3 * (eta ^ 3) + 0.1331e4 / 0.570e3 * (eta ^ 2) + 0.2501e4 / 0.570e3 * eta + 0.79e2 / 0.38e2) * (ci2 ^ 4) + (0.147e3 / 0.475e3 * (eta ^ 4) + 0.363e3 / 0.950e3 * (eta ^ 3) - 0.1631e4 / 0.2850e4 * (eta ^ 2) - 0.125e3 / 0.114e3 * eta - 0.97e2 / 0.190e3) * (ci2 ^ 2) - 0.13e2 / 0.950e3 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (1 + eta)) * sin(0.2e1 * h + (3 * f) + 0.4e1 * g) - 0.20e2 / 0.99e2 * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(0.2e1 * h + (4 * f)) + 0.40e2 / 0.3e1 * ((1 + eta) ^ 2) * (((eta ^ 3) + 0.20e2 / 0.33e2 * (eta ^ 2) - 0.31e2 / 0.11e2 * eta - 0.92e2 / 0.33e2) * (ci2 ^ 6) + (-0.35e2 / 0.33e2 * (eta ^ 3) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.95e2 / 0.33e2 * eta + 0.94e2 / 0.33e2) * (ci2 ^ 4) + (0.41e2 / 0.165e3 * (eta ^ 3) + 0.28e2 / 0.165e3 * (eta ^ 2) - 0.101e3 / 0.165e3 * eta - 0.20e2 / 0.33e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.165e3) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (5 * f) + 0.4e1 * g) + 0.3680e4 / 0.99e2 * (((eta ^ 2) - 0.18e2 / 0.23e2 * eta - 0.67e2 / 0.23e2) * (ci2 ^ 6) + (-(eta ^ 2) + 0.24e2 / 0.23e2 * eta + 0.73e2 / 0.23e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.5e1 - 0.42e2 / 0.115e3 * eta - 0.91e2 / 0.115e3) * (ci2 ^ 2) + 0.3e1 / 0.115e3 * eta + 0.3e1 / 0.115e3) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin(0.2e1 * g + (4 * f)) - 0.8e1 / 0.33e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.16e2 / 0.9e1 * (eta ^ 3) + 0.92e2 / 0.9e1 * (eta ^ 2) - 0.32e2 / 0.3e1 * eta - 0.103e3 / 0.3e1) * (ci2 ^ 2) - 0.4e1 / 0.9e1 * (1 + eta) * ((eta ^ 3) + (eta ^ 2) / 0.2e1 - 0.8e1)) * (eta - 1) * cos((6 * f) + 0.4e1 * g) + 0.52e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * cos((8 * f) + 0.2e1 * g) - 0.512e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 4) + 0.155e3 / 0.128e3 * (eta ^ 3) - 0.121e3 / 0.128e3 * (eta ^ 2) - 0.127e3 / 0.128e3 * eta + 0.205e3 / 0.128e3) * (ci2 ^ 2) - 0.7e1 / 0.64e2 * (eta ^ 4) - 0.17e2 / 0.128e3 * (eta ^ 3) - 0.7e1 / 0.128e3 * (eta ^ 2) - 0.13e2 / 0.128e3 * eta - 0.25e2 / 0.128e3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos(0.6e1 * g + 0.2e1 * h + (4 * f)) - 0.56e2 / 0.27e2 * (((eta ^ 4) + 0.419e3 / 0.308e3 * (eta ^ 3) - 0.417e3 / 0.308e3 * (eta ^ 2) - 0.1479e4 / 0.308e3 * eta - 0.1151e4 / 0.308e3) * (ci2 ^ 2) - 0.31e2 / 0.154e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.31e2 * (eta ^ 2) - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2)) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(0.6e1 * g + 0.2e1 * h + (5 * f)) + 0.86e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.38e2 / 0.129e3 * (eta ^ 2) - 0.99e2 / 0.43e2 * eta - 0.50e2 / 0.129e3) * (ci2 ^ 2) - 0.26e2 / 0.129e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + f + 0.2e1 * g) - 0.13e2 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(-0.4e1 * g + f) - 0.125e3 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.6e1 * g + 0.2e1 * h + (9 * f)) + 0.172e3 / 0.11e2 * ((-0.2030e4 / 0.387e3 + (eta ^ 5) - 0.17900e5 / 0.1161e4 * eta + 0.4195e4 / 0.1161e4 * (eta ^ 4) + 0.7663e4 / 0.1161e4 * (eta ^ 3) - 0.10213e5 / 0.1161e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.12992e5 / 0.1161e4 - 0.284e3 / 0.129e3 * (eta ^ 5) - 0.5570e4 / 0.387e3 * (eta ^ 3) + 0.21614e5 / 0.1161e4 * (eta ^ 2) + 0.12766e5 / 0.387e3 * eta - 0.3074e4 / 0.387e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1172e4 / 0.129e3 + 0.1628e4 / 0.129e3 * (eta ^ 3) - 0.10618e5 / 0.387e3 * eta + 0.324e3 / 0.43e2 * (eta ^ 4) + 0.646e3 / 0.387e3 * (eta ^ 5) - 0.2008e4 / 0.129e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.673e3 / 0.129e3 * (eta ^ 3) + 0.12179e5 / 0.1161e4 * eta - 0.449e3 / 0.129e3 * (eta ^ 4) + 0.1288e4 / 0.387e3 - 0.194e3 / 0.387e3 * (eta ^ 5) + 0.2351e4 / 0.387e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.890e3 / 0.1161e4 * (eta ^ 3) - 0.328e3 / 0.387e3 * (eta ^ 2) + 0.857e3 / 0.1548e4 * (eta ^ 4) - 0.2027e4 / 0.4644e4 - 0.2219e4 / 0.1548e4 * eta + 0.233e3 / 0.4644e4 * (eta ^ 5)) * (1 + eta) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + f + 0.2e1 * g) + 0.100e3 / 0.99e2 * (1 + eta) * (eta - 1) * ((-0.488e3 / 0.5e1 + (eta ^ 5) - 0.411e3 / 0.5e1 * eta - 0.96e2 / 0.25e2 * (eta ^ 4) + 0.1114e4 / 0.75e2 * (eta ^ 3) + 0.2488e4 / 0.75e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.3136e4 / 0.15e2 - (2 * eta ^ 5) - 0.764e3 / 0.25e2 * (eta ^ 3) - 0.952e3 / 0.15e2 * (eta ^ 2) + 0.2738e4 / 0.15e2 * eta + 0.616e3 / 0.75e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.841e3 / 0.5e1 + 0.154e3 / 0.5e1 * (eta ^ 3) - 0.797e3 / 0.5e1 * eta - 0.149e3 / 0.25e2 * (eta ^ 4) + 0.3e1 / 0.5e1 * (eta ^ 5) + 0.218e3 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1172e4 / 0.75e2 * (eta ^ 3) + 0.322e3 / 0.5e1 * eta + 0.37e2 / 0.25e2 * (eta ^ 4) + 0.301e3 / 0.5e1 + 0.2e1 / 0.5e1 * (eta ^ 5) - 0.178e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.37e2 / 0.15e2 * (eta ^ 3) + 0.109e3 / 0.150e3 * (eta ^ 2) - 0.3e1 / 0.100e3 * (eta ^ 4) - 0.93e2 / 0.10e2 * eta - (eta ^ 5) / 0.10e2 - 0.461e3 / 0.60e2) * cos((2 * f)) - 0.380e3 / 0.99e2 * (1 + eta) * ((eta - 1) ^ 2) * ((0.696e3 / 0.95e2 + 0.2297e4 / 0.285e3 * eta + (eta ^ 4) - 0.949e3 / 0.285e3 * (eta ^ 3) - 0.1097e4 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.4696e4 / 0.285e3 + 0.428e3 / 0.57e2 * (eta ^ 3) + 0.136e3 / 0.15e2 * (eta ^ 2) - 0.5036e4 / 0.285e3 * eta - 0.128e3 / 0.57e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.1319e4 / 0.95e2 - 0.698e3 / 0.95e2 * (eta ^ 3) + 0.1434e4 / 0.95e2 * eta + 0.113e3 / 0.95e2 * (eta ^ 4) - 0.728e3 / 0.95e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.1013e4 / 0.285e3 * (eta ^ 3) - 0.341e3 / 0.57e2 * eta + 0.2e1 / 0.19e2 * (eta ^ 4) - 0.493e3 / 0.95e2 + 0.781e3 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.691e3 / 0.1140e4 * (eta ^ 3) - 0.389e3 / 0.1140e4 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.53e2 / 0.76e2 + 0.991e3 / 0.1140e4 * eta) * cos(-0.2e1 * g - 0.2e1 * h + (2 * f)) - 0.80e2 / 0.297e3 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (((eta ^ 2) - 0.239e3 / 0.20e2 * eta - 0.223e3 / 0.20e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + (27 * eta) + 0.513e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.111e3 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.157e3 / 0.20e2 * eta + 0.143e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.79e2 / 0.80e2 * eta - 0.67e2 / 0.80e2) * cos(-0.2e1 * g - 0.2e1 * h + (4 * f)) + 0.400e3 / 0.297e3 * ((0.2747e4 / 0.50e2 + (eta ^ 6) + 0.23e2 / 0.5e1 * (eta ^ 5) + 0.6159e4 / 0.50e2 * eta + 0.949e3 / 0.50e2 * (eta ^ 4) + 0.2873e4 / 0.50e2 * (eta ^ 3) + 0.2834e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.5963e4 / 0.50e2 - (2 * eta ^ 6) - 0.48e2 / 0.5e1 * (eta ^ 5) - 0.2978e4 / 0.25e2 * (eta ^ 3) - 0.5918e4 / 0.25e2 * (eta ^ 2) - 0.6556e4 / 0.25e2 * eta - 0.1953e4 / 0.50e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.99e2 + 0.4519e4 / 0.50e2 * (eta ^ 3) + 0.10849e5 / 0.50e2 * eta + 0.592e3 / 0.25e2 * (eta ^ 4) + 0.93e2 / 0.25e2 * (eta ^ 5) + 0.3e1 / 0.5e1 * (eta ^ 6) + 0.4801e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.731e3 / 0.25e2 * (eta ^ 3) - 0.413e3 / 0.5e1 * eta - 0.169e3 / 0.50e2 * (eta ^ 4) - 0.1863e4 / 0.50e2 + 0.34e2 / 0.25e2 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 6) - 0.1786e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.161e3 / 0.50e2 * (eta ^ 3) + 0.469e3 / 0.50e2 * (eta ^ 2) - 0.39e2 / 0.200e3 * (eta ^ 4) + 0.563e3 / 0.50e2 * eta - (eta ^ 6) / 0.10e2 - 0.23e2 / 0.50e2 * (eta ^ 5) + 0.1011e4 / 0.200e3) * (1 + eta) * (eta - 1) * cos(0.2e1 * g + 0.2e1 * h) - 0.467e3 / 0.33e2 * ((-0.1715e4 / 0.467e3 + (eta ^ 5) - 0.5485e4 / 0.4203e4 * eta + 0.2621e4 / 0.467e3 * (eta ^ 4) + 0.62690e5 / 0.4203e4 * (eta ^ 3) + 0.52966e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.34118e5 / 0.4203e4 - 0.1038e4 / 0.467e3 * (eta ^ 5) - 0.138916e6 / 0.4203e4 * (eta ^ 3) - 0.13148e5 / 0.467e3 * (eta ^ 2) + 0.11234e5 / 0.4203e4 * eta - 0.52234e5 / 0.4203e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.3188e4 / 0.467e3 + 0.13368e5 / 0.467e3 * (eta ^ 3) - 0.3068e4 / 0.1401e4 * eta + 0.14996e5 / 0.1401e4 * (eta ^ 4) + 0.796e3 / 0.467e3 * (eta ^ 5) + 0.11288e5 / 0.467e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.48358e5 / 0.4203e4 * (eta ^ 3) + 0.3595e4 / 0.4203e4 * eta - 0.17911e5 / 0.4203e4 * (eta ^ 4) + 0.1209e4 / 0.467e3 - 0.727e3 / 0.1401e4 * (eta ^ 5) - 0.39818e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.14195e5 / 0.8406e4 * (eta ^ 3) + 0.11381e5 / 0.8406e4 * (eta ^ 2) + 0.10417e5 / 0.16812e5 * (eta ^ 4) - 0.5963e4 / 0.16812e5 - 0.225e3 / 0.1868e4 * eta + 0.883e3 / 0.16812e5 * (eta ^ 5)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h - 0.2e1 * g + f) + 0.145e3 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.433e3 / 0.145e3 * (eta ^ 2) - 0.2049e4 / 0.145e3 * eta - 0.1551e4 / 0.145e3) * (ci2 ^ 6) + (-0.31e2 / 0.29e2 * (eta ^ 3) + 0.423e3 / 0.145e3 * (eta ^ 2) + 0.71e2 / 0.5e1 * eta + 0.1561e4 / 0.145e3) * (ci2 ^ 4) + (0.13e2 / 0.58e2 * (eta ^ 3) - 0.449e3 / 0.870e3 * (eta ^ 2) - 0.2231e4 / 0.870e3 * eta - 0.1667e4 / 0.870e3) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.174e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.4e1 * g + 0.2e1 * h + (7 * f)) - 0.5360e4 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) + 0.113e3 / 0.134e3 * (eta ^ 3) - 0.135e3 / 0.134e3 * (eta ^ 2) - 0.21e2 / 0.134e3 * eta + 0.85e2 / 0.134e3) * (ci2 ^ 6) + (-0.86e2 / 0.67e2 * (eta ^ 4) - 0.145e3 / 0.134e3 * (eta ^ 3) + 0.187e3 / 0.134e3 * (eta ^ 2) + 0.37e2 / 0.134e3 * eta - 0.115e3 / 0.134e3) * (ci2 ^ 4) + (0.143e3 / 0.335e3 * (eta ^ 4) + 0.241e3 / 0.670e3 * (eta ^ 3) - 0.343e3 / 0.670e3 * (eta ^ 2) - 0.17e2 / 0.134e3 * eta + 0.41e2 / 0.134e3) * (ci2 ^ 2) - 0.19e2 / 0.670e3 * (1 + eta) * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + f) - 0.200e3 / 0.9e1 * (1 + eta) * (((eta ^ 4) + 0.116e3 / 0.55e2 * (eta ^ 3) + 0.206e3 / 0.55e2 * (eta ^ 2) - 0.36e2 / 0.11e2 * eta - 0.317e3 / 0.55e2) * (ci2 ^ 6) + (-0.87e2 / 0.55e2 * (eta ^ 4) - 0.32e2 / 0.11e2 * (eta ^ 3) - 0.218e3 / 0.55e2 * (eta ^ 2) + 0.48e2 / 0.11e2 * eta + 0.377e3 / 0.55e2) * (ci2 ^ 4) + (0.183e3 / 0.275e3 * (eta ^ 4) + 0.292e3 / 0.275e3 * (eta ^ 3) + 0.254e3 / 0.275e3 * (eta ^ 2) - 0.84e2 / 0.55e2 * eta - 0.557e3 / 0.275e3) * (ci2 ^ 2) - 0.16e2 / 0.275e3 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.8e1 * (eta ^ 2) - 0.15e2 / 0.8e1)) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * sin(f + 0.2e1 * g) + 0.38e2 / 0.297e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) - 0.340e3 / 0.19e2 * (eta ^ 3) - 0.830e3 / 0.19e2 * (eta ^ 2) + 0.132e3 / 0.19e2 * eta + 0.723e3 / 0.19e2) * (ci2 ^ 2) + 0.64e2 / 0.19e2 * ((eta ^ 3) + 0.15e2 / 0.16e2 * (eta ^ 2) - 0.11e2 / 0.16e2) * (1 + eta)) * cos((3 * f) + 0.4e1 * g) + 0.70e2 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.7e1) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 3) * cos(0.6e1 * g + 0.2e1 * h) - 0.136e3 / 0.297e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.13e2 / 0.68e2 * (eta ^ 3) - 0.369e3 / 0.68e2 * (eta ^ 2) + 0.9e1 / 0.68e2 * eta + 0.417e3 / 0.68e2) * (ci2 ^ 2) - 0.23e2 / 0.34e2 * (eta ^ 4) - 0.4e1 / 0.17e2 * (eta ^ 3) + 0.37e2 / 0.17e2 * (eta ^ 2) + 0.24e2 / 0.17e2 * eta - 0.11e2 / 0.34e2) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + (3 * f) + 0.2e1 * g) + 0.16e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 4) + (eta ^ 3) / 0.4e1 - 0.119e3 / 0.12e2 * (eta ^ 2) - 0.41e2 / 0.12e2 * eta + 0.173e3 / 0.12e2) * (ci2 ^ 2) - (eta ^ 4) / 0.2e1 - (eta ^ 3) / 0.4e1 + 0.31e2 / 0.12e2 * (eta ^ 2) + 0.37e2 / 0.12e2 * eta + 0.25e2 / 0.12e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos(-0.2e1 * h + 0.2e1 * g + (4 * f)) - 0.119e3 / 0.33e2 * ((0.13667e5 / 0.1071e4 + (eta ^ 5) + 0.17839e5 / 0.1071e4 * eta - 0.677e3 / 0.1071e4 * (eta ^ 4) - 0.1778e4 / 0.153e3 * (eta ^ 3) - 0.466e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.28274e5 / 0.1071e4 - 0.38e2 / 0.17e2 * (eta ^ 5) + 0.1252e4 / 0.51e2 * (eta ^ 3) + 0.436e3 / 0.63e2 * (eta ^ 2) - 0.36826e5 / 0.1071e4 * eta + 0.1406e4 / 0.1071e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.2392e4 / 0.119e3 - 0.20912e5 / 0.1071e4 * (eta ^ 3) + 0.29432e5 / 0.1071e4 * eta - 0.2216e4 / 0.1071e4 * (eta ^ 4) + 0.88e2 / 0.51e2 * (eta ^ 5) - 0.656e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 4) + (0.1058e4 / 0.153e3 * (eta ^ 3) - 0.3581e4 / 0.357e3 * eta + 0.1549e4 / 0.1071e4 * (eta ^ 4) - 0.2377e4 / 0.357e3 - 0.9e1 / 0.17e2 * (eta ^ 5) + 0.590e3 / 0.1071e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.5527e4 / 0.6426e4 * (eta ^ 3) + 0.197e3 / 0.6426e4 * (eta ^ 2) - 0.65e2 / 0.252e3 * (eta ^ 4) + 0.65e2 / 0.84e2 + 0.16297e5 / 0.12852e5 * eta + 0.11e2 / 0.204e3 * (eta ^ 5)) * (1 + eta) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + (3 * f) + 0.2e1 * g) + 0.40e2 / 0.99e2 * ((1 + eta) ^ 2) * (((eta ^ 3) - 0.63e2 / 0.5e1 * (eta ^ 2) + 0.257e3 / 0.15e2 * eta + 0.929e3 / 0.15e2) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.383e3 / 0.15e2 * (eta ^ 2) - 0.192e3 / 0.5e1 * eta - 0.385e3 / 0.3e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * (eta ^ 3) - 0.88e2 / 0.5e1 * (eta ^ 2) + 0.179e3 / 0.5e1 * eta + 0.478e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * (eta ^ 3) + 0.23e2 / 0.5e1 * (eta ^ 2) - 0.232e3 / 0.15e2 * eta - 0.451e3 / 0.15e2) * (ci2 ^ 2) - (eta ^ 3) / 0.10e2 - 0.7e1 / 0.20e2 * (eta ^ 2) + 0.13e2 / 0.6e1 * eta + 0.197e3 / 0.60e2) * ((eta - 1) ^ 2) * cos((4 * f)) + 0.20e2 / 0.297e3 * ((1 + eta) ^ 4) * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * ((eta - 1) ^ 2) * cos(0.2e1 * g + 0.2e1 * h + (6 * f)) + 0.80e2 / 0.99e2 * ((1 + eta) ^ 2) * (eta - 1) * ((0.109e3 / 0.4e1 + 0.355e3 / 0.12e2 * eta + (eta ^ 4) - 0.701e3 / 0.60e2 * (eta ^ 3) - 0.111e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.3337e4 / 0.60e2 + 0.122e3 / 0.5e1 * (eta ^ 3) + 0.123e3 / 0.10e2 * (eta ^ 2) - 0.301e3 / 0.5e1 * eta - 0.25e2 / 0.12e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.204e3 / 0.5e1 - 0.92e2 / 0.5e1 * (eta ^ 3) + 0.93e2 / 0.2e1 * eta + 0.4e1 / 0.5e1 * (eta ^ 4) - 0.71e2 / 0.10e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.71e2 / 0.12e2 * (eta ^ 3) - 0.967e3 / 0.60e2 * eta + 0.3e1 / 0.10e2 * (eta ^ 4) - 0.253e3 / 0.20e2 + 0.11e2 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.161e3 / 0.240e3 * (eta ^ 3) + 0.29e2 / 0.240e3 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.109e3 / 0.80e2 + 0.461e3 / 0.240e3 * eta) * cos(0.2e1 * h + 0.2e1 * g + (4 * f)) - 0.940e3 / 0.297e3 * (1 + eta) * (((eta ^ 4) + 0.2097e4 / 0.470e3 * (eta ^ 3) + 0.483e3 / 0.470e3 * (eta ^ 2) - 0.3421e4 / 0.470e3 * eta - 0.2037e4 / 0.470e3) * (ci2 ^ 6) + (-0.67e2 / 0.47e2 * (eta ^ 4) - 0.2889e4 / 0.470e3 * (eta ^ 3) - 0.267e3 / 0.470e3 * (eta ^ 2) + 0.5981e4 / 0.470e3 * eta + 0.3789e4 / 0.470e3) * (ci2 ^ 4) + (0.247e3 / 0.470e3 * (eta ^ 4) + 0.2059e4 / 0.940e3 * (eta ^ 3) - 0.71e2 / 0.940e3 * (eta ^ 2) - 0.5231e4 / 0.940e3 * eta - 0.703e3 / 0.188e3) * (ci2 ^ 2) - 0.9e1 / 0.235e3 * (1 + eta) * ((eta ^ 3) + 0.26e2 / 0.9e1 * (eta ^ 2) - 0.34e2 / 0.9e1 * eta - 0.74e2 / 0.9e1)) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(-0.2e1 * h + (4 * f)) - 0.452e3 / 0.297e3 * (1 + eta) * (((eta ^ 5) + 0.2153e4 / 0.226e3 * (eta ^ 4) + 0.5306e4 / 0.113e3 * (eta ^ 3) + 0.3855e4 / 0.113e3 * (eta ^ 2) - 0.14427e5 / 0.113e3 * eta - 0.28887e5 / 0.226e3) * (ci2 ^ 6) + (-0.217e3 / 0.113e3 * (eta ^ 5) - 0.3049e4 / 0.226e3 * (eta ^ 4) - 0.5938e4 / 0.113e3 * (eta ^ 3) - 0.3207e4 / 0.113e3 * (eta ^ 2) + 0.17115e5 / 0.113e3 * eta + 0.32391e5 / 0.226e3) * (ci2 ^ 4) + (0.225e3 / 0.226e3 * (eta ^ 5) + 0.2303e4 / 0.452e3 * (eta ^ 4) + 0.1393e4 / 0.113e3 * (eta ^ 3) + 0.121e3 / 0.226e3 * (eta ^ 2) - 0.9275e4 / 0.226e3 * eta - 0.15409e5 / 0.452e3) * (ci2 ^ 2) - 0.10e2 / 0.113e3 * ((eta ^ 4) + (3 * eta ^ 3) + 0.12e2 / 0.5e1 * (eta ^ 2) - (8 * eta) - 0.74e2 / 0.5e1) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(0.2e1 * g + (4 * f)) - 0.19e2 / 0.33e2 * ((1 + eta) ^ 2) * (((eta ^ 2) - 0.202e3 / 0.171e3 * eta - 0.2281e4 / 0.171e3) * (ci2 ^ 8) + (-(2 * eta ^ 2) + 0.476e3 / 0.171e3 * eta + 0.4634e4 / 0.171e3) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) - 0.176e3 / 0.57e2 * eta - 0.1100e4 / 0.57e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 + 0.14e2 / 0.9e1 * eta + 0.959e3 / 0.171e3) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 - 0.2e1 / 0.9e1 * eta - 0.383e3 / 0.684e3) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((5 * f)) + 0.34e2 / 0.11e2 * (((eta ^ 3) + 0.188e3 / 0.153e3 * (eta ^ 2) - 0.587e3 / 0.153e3 * eta - 0.62e2 / 0.17e2) * (ci2 ^ 8) + (-0.116e3 / 0.51e2 * (eta ^ 3) - 0.1318e4 / 0.459e3 * (eta ^ 2) + 0.3928e4 / 0.459e3 * eta + 0.3818e4 / 0.459e3) * (ci2 ^ 6) + (0.274e3 / 0.153e3 * (eta ^ 3) + 0.898e3 / 0.459e3 * (eta ^ 2) - 0.22e2 / 0.3e1 * eta - 0.118e3 / 0.17e2) * (ci2 ^ 4) + (-0.86e2 / 0.153e3 * (eta ^ 3) - 0.149e3 / 0.459e3 * (eta ^ 2) + 0.440e3 / 0.153e3 * eta + 0.1147e4 / 0.459e3) * (ci2 ^ 2) + 0.107e3 / 0.1836e4 * (eta ^ 3) - 0.43e2 / 0.1836e4 * (eta ^ 2) - 0.2269e4 / 0.5508e4 * eta - 0.65e2 / 0.204e3) * (1 + eta) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * g - 0.2e1 * h + (3 * f)) - 0.80e2 / 0.33e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.4027e4 / 0.180e3 + (eta ^ 6) + 0.283e3 / 0.90e2 * (eta ^ 5) - 0.1843e4 / 0.90e2 * (eta ^ 3) - 0.803e3 / 0.45e2 * (eta ^ 2) + 0.331e3 / 0.15e2 * eta + 0.49e2 / 0.180e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4391e4 / 0.180e3 + 0.1979e4 / 0.90e2 * (eta ^ 3) - 0.206e3 / 0.9e1 * eta - 0.149e3 / 0.180e3 * (eta ^ 4) - 0.23e2 / 0.6e1 * (eta ^ 5) - (eta ^ 6) + 0.919e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.229e3 / 0.36e2 * (eta ^ 3) + 0.553e3 / 0.90e2 * eta + 0.53e2 / 0.120e3 * (eta ^ 4) + 0.2329e4 / 0.360e3 + 0.233e3 / 0.180e3 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) - 0.266e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) + 0.11e2 / 0.15e2 * (eta ^ 2) - 0.8e1 / 0.5e1 * eta - 0.16e2 / 0.5e1) * (eta - 1) / 0.12e2) * cos(0.2e1 * h) - 0.64e2 / 0.297e3 * ((0.1077e4 / 0.8e1 + (eta ^ 6) + 0.575e3 / 0.8e1 * (eta ^ 5) - 0.775e3 / 0.4e1 * (eta ^ 3) - 0.321e3 / 0.4e1 * (eta ^ 2) + 0.1191e4 / 0.8e1 * eta - 0.755e3 / 0.8e1 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1521e4 / 0.8e1 + 0.911e3 / 0.4e1 * (eta ^ 3) - 0.1491e4 / 0.8e1 * eta + 0.895e3 / 0.8e1 * (eta ^ 4) - 0.547e3 / 0.8e1 * (eta ^ 5) + (eta ^ 6) + 0.465e3 / 0.4e1 * (eta ^ 2)) * (ci2 ^ 4) + (-0.417e3 / 0.8e1 * (eta ^ 3) + 0.737e3 / 0.16e2 * eta - 0.705e3 / 0.16e2 * (eta ^ 4) + 0.607e3 / 0.16e2 + 0.153e3 / 0.16e2 * (eta ^ 5) - 0.3e1 / 0.2e1 * (eta ^ 6) + (eta ^ 2) / 0.8e1) * (ci2 ^ 2) - (eta ^ 3) / 0.4e1 + 0.3e1 / 0.4e1 * (eta ^ 2) + 0.7e1 / 0.8e1 * (eta ^ 4) - 0.17e2 / 0.8e1 - 0.5e1 / 0.8e1 * eta + (eta ^ 6) / 0.2e1 + 0.7e1 / 0.8e1 * (eta ^ 5)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * cos(0.2e1 * g + (2 * f)) - 0.1751e4 / 0.198e3 * ((-0.14991e5 / 0.1751e4 + (eta ^ 6) + 0.6080e4 / 0.1751e4 * (eta ^ 5) + 0.21472e5 / 0.1751e4 * (eta ^ 3) + 0.12741e5 / 0.1751e4 * (eta ^ 2) - 0.15520e5 / 0.1751e4 * eta + 0.12595e5 / 0.1751e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.16127e5 / 0.1751e4 - 0.26880e5 / 0.1751e4 * (eta ^ 3) + 0.17584e5 / 0.1751e4 * eta - 0.20035e5 / 0.1751e4 * (eta ^ 4) - 0.8752e4 / 0.1751e4 * (eta ^ 5) - 0.1431e4 / 0.1751e4 * (eta ^ 6) - 0.12773e5 / 0.1751e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.30008e5 / 0.5253e4 * (eta ^ 3) - 0.18980e5 / 0.5253e4 * eta + 0.53675e5 / 0.10506e5 * (eta ^ 4) - 0.29527e5 / 0.10506e5 + 0.10252e5 / 0.5253e4 * (eta ^ 5) + 0.631e3 / 0.10506e5 * (eta ^ 6) + 0.17845e5 / 0.10506e5 * (eta ^ 2)) * (ci2 ^ 2) + 0.80e2 / 0.5253e4 * (1 + eta) * ((eta ^ 5) - 0.283e3 / 0.20e2 * (eta ^ 4) - (21 * eta ^ 3) - 0.53e2 / 0.10e2 * (eta ^ 2) + (8 * eta) + 0.173e3 / 0.20e2)) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * cos(f + 0.2e1 * g) + 0.184e3 / 0.11e2 * (1 + eta) * ((0.4475e4 / 0.414e3 + (eta ^ 6) + 0.1079e4 / 0.414e3 * (eta ^ 5) - 0.9605e4 / 0.621e3 * (eta ^ 3) - 0.1456e4 / 0.621e3 * (eta ^ 2) + 0.18685e5 / 0.1242e4 * eta - 0.7411e4 / 0.1242e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1589e4 / 0.138e3 + 0.10579e5 / 0.621e3 * (eta ^ 3) - 0.20093e5 / 0.1242e4 * eta + 0.349e3 / 0.54e2 * (eta ^ 4) - 0.1259e4 / 0.414e3 * (eta ^ 5) - 0.241e3 / 0.207e3 * (eta ^ 6) + 0.1688e4 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1601e4 / 0.414e3 * (eta ^ 3) + 0.8503e4 / 0.2484e4 * eta - 0.1163e4 / 0.828e3 * (eta ^ 4) + 0.5947e4 / 0.2484e4 + 0.661e3 / 0.828e3 * (eta ^ 5) + 0.43e2 / 0.138e3 * (eta ^ 6) - 0.452e3 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.19e2 / 0.1242e4 * (1 + eta) * ((eta ^ 4) + 0.47e2 / 0.19e2 * (eta ^ 3) - 0.36e2 / 0.19e2 * (eta ^ 2) - 0.120e3 / 0.19e2 * eta - 0.74e2 / 0.19e2) * (eta - 1)) * (ci2 - 1) * (ci2 + 1) * cos(0.2e1 * h + (4 * f) + 0.4e1 * g) - 0.349e3 / 0.66e2 * ((0.94003e5 / 0.3141e4 + (eta ^ 6) - 0.7648e4 / 0.9423e4 * (eta ^ 5) - 0.240544e6 / 0.9423e4 * (eta ^ 3) - 0.35057e5 / 0.3141e4 * (eta ^ 2) + 0.115072e6 / 0.3141e4 * eta - 0.93269e5 / 0.9423e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.109859e6 / 0.3141e4 + 0.283904e6 / 0.9423e4 * (eta ^ 3) - 0.15632e5 / 0.349e3 * eta + 0.128005e6 / 0.9423e4 * (eta ^ 4) + 0.18224e5 / 0.9423e4 * (eta ^ 5) - 0.3077e4 / 0.3141e4 * (eta ^ 6) + 0.31633e5 / 0.3141e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.70456e5 / 0.9423e4 * (eta ^ 3) + 0.12740e5 / 0.1047e4 * eta - 0.92383e5 / 0.18846e5 * (eta ^ 4) + 0.54025e5 / 0.6282e4 - 0.11212e5 / 0.9423e4 * (eta ^ 5) + 0.127e3 / 0.698e3 * (eta ^ 6) - 0.2827e4 / 0.6282e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.16e2 / 0.9423e4 * (1 + eta) * ((eta ^ 5) + 0.227e3 / 0.4e1 * (eta ^ 4) + (119 * eta ^ 3) + 0.177e3 / 0.2e1 * (eta ^ 2) - (132 * eta) - 0.909e3 / 0.4e1)) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * cos((3 * f) + 0.2e1 * g) - 0.14e2 / 0.11e2 * ((1 + eta) ^ 2) * (((eta ^ 3) + 0.124e3 / 0.189e3 * (eta ^ 2) - 0.1075e4 / 0.189e3 * eta - 0.1082e4 / 0.189e3) * (ci2 ^ 8) + (-0.44e2 / 0.21e2 * (eta ^ 3) - 0.38e2 / 0.27e2 * (eta ^ 2) + 0.2168e4 / 0.189e3 * eta + 0.2182e4 / 0.189e3) * (ci2 ^ 6) + (0.94e2 / 0.63e2 * (eta ^ 3) + 0.2e1 / 0.3e1 * (eta ^ 2) - 0.178e3 / 0.21e2 * eta - 0.514e3 / 0.63e2) * (ci2 ^ 4) + (-0.26e2 / 0.63e2 * (eta ^ 3) + 0.13e2 / 0.189e3 * (eta ^ 2) + 0.512e3 / 0.189e3 * eta + 0.445e3 / 0.189e3) * (ci2 ^ 2) + 0.29e2 / 0.756e3 * (eta ^ 3) - (eta ^ 2) / 0.28e2 - 0.25e2 / 0.84e2 * eta - 0.59e2 / 0.252e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + (5 * f) + 0.2e1 * g) - 0.3e1 / 0.11e2 * (1 + eta) * (eta - 1) * ((0.17015e5 / 0.81e2 + 0.8930e4 / 0.81e2 * eta + (eta ^ 4) - 0.134e3 / 0.27e2 * (eta ^ 3) - 0.584e3 / 0.9e1 * (eta ^ 2)) * (ci2 ^ 8) + (-0.1330e4 / 0.3e1 + 0.292e3 / 0.27e2 * (eta ^ 3) + 0.10504e5 / 0.81e2 * (eta ^ 2) - 0.19820e5 / 0.81e2 * eta - (2 * eta ^ 4)) * (ci2 ^ 6) + (0.3100e4 / 0.9e1 - 0.1328e4 / 0.81e2 * (eta ^ 3) + 0.17680e5 / 0.81e2 * eta + 0.4e1 / 0.3e1 * (eta ^ 4) - 0.7240e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.866e3 / 0.81e2 * (eta ^ 3) - 0.7330e4 / 0.81e2 * eta - (eta ^ 4) / 0.3e1 - 0.9425e4 / 0.81e2 + 0.628e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.46e2 / 0.27e2 * (eta ^ 3) - 0.239e3 / 0.162e3 * (eta ^ 2) + (eta ^ 4) / 0.36e2 + 0.350e3 / 0.27e2 * eta + 0.1495e4 / 0.108e3) * sqrt((-eta ^ 2 + 1)) * cos((3 * f)) + 0.13e2 / 0.198e3 * (((eta ^ 2) + 0.280e3 / 0.13e2 * eta + 0.223e3 / 0.13e2) * (ci2 ^ 6) + (-(eta ^ 2) - 0.272e3 / 0.13e2 * eta - 0.215e3 / 0.13e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.6e1 + 0.14e2 / 0.3e1 * eta + 0.307e3 / 0.78e2) * (ci2 ^ 2) + 0.2e1 / 0.39e2 * eta + 0.2e1 / 0.39e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((3 * f) - 0.2e1 * g) + 0.640e3 / 0.9e1 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * (((eta ^ 2) + eta - 0.41e2 / 0.88e2) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.13e2 / 0.11e2 * eta + 0.47e2 / 0.88e2) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.110e3 * eta - 0.13e2 / 0.88e2) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.7e1 / 0.330e3 * eta + 0.3e1 / 0.440e3) * sin(0.4e1 * g + 0.2e1 * h) - 0.160e3 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) - 0.27e2 / 0.40e2 * (eta ^ 2) - 0.29e2 / 0.4e1 * eta - 0.219e3 / 0.40e2) * (ci2 ^ 6) + (-(eta ^ 3) + 0.47e2 / 0.40e2 * (eta ^ 2) + 0.163e3 / 0.20e2 * eta + 0.47e2 / 0.8e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * (eta ^ 3) - 0.127e3 / 0.240e3 * (eta ^ 2) - 0.19e2 / 0.8e1 * eta - 0.383e3 / 0.240e3) * (ci2 ^ 2) + 0.7e1 / 0.120e3 * (eta ^ 2) + 0.13e2 / 0.120e3 * eta + 0.1e1 / 0.20e2) * cos(-0.2e1 * g + (2 * f)) - 0.6067e4 / 0.198e3 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 5) - 0.46919e5 / 0.6067e4 * (eta ^ 4) - 0.180282e6 / 0.6067e4 * (eta ^ 3) - 0.197014e6 / 0.6067e4 * (eta ^ 2) - 0.71305e5 / 0.6067e4 * eta - 0.1491e4 / 0.6067e4) * (ci2 ^ 6) + (-0.6699e4 / 0.6067e4 * (eta ^ 5) + 0.55311e5 / 0.6067e4 * (eta ^ 4) + 0.210362e6 / 0.6067e4 * (eta ^ 3) + 0.229910e6 / 0.6067e4 * (eta ^ 2) + 0.83713e5 / 0.6067e4 * eta + 0.2059e4 / 0.6067e4) * (ci2 ^ 4) + (0.3241e4 / 0.12134e5 * (eta ^ 5) - 0.36237e5 / 0.12134e5 * (eta ^ 4) - 0.197185e6 / 0.18201e5 * (eta ^ 3) - 0.216271e6 / 0.18201e5 * (eta ^ 2) - 0.165929e6 / 0.36402e5 * eta - 0.9227e4 / 0.36402e5) * (ci2 ^ 2) - 0.158e3 / 0.18201e5 * ((eta ^ 4) - 0.1622e4 / 0.79e2 * (eta ^ 3) - 0.3666e4 / 0.79e2 * (eta ^ 2) - 0.2122e4 / 0.79e2 * eta - 0.173e3 / 0.79e2) * (1 + eta)) * cos(0.4e1 * g + 0.2e1 * h + f) + 0.1492e4 / 0.297e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.3197e4 / 0.746e3 * (eta ^ 3) - 0.1851e4 / 0.746e3 * (eta ^ 2) - 0.11449e5 / 0.746e3 * eta - 0.8203e4 / 0.746e3) * (ci2 ^ 6) + (-0.399e3 / 0.373e3 * (eta ^ 4) - 0.3433e4 / 0.746e3 * (eta ^ 3) + 0.1719e4 / 0.746e3 * (eta ^ 2) + 0.11685e5 / 0.746e3 * eta + 0.8387e4 / 0.746e3) * (ci2 ^ 4) + (0.183e3 / 0.746e3 * (eta ^ 4) + 0.1507e4 / 0.1492e4 * (eta ^ 3) - 0.493e3 / 0.1492e4 * (eta ^ 2) - 0.4439e4 / 0.1492e4 * eta - 0.3157e4 / 0.1492e4) * (ci2 ^ 2) - 0.5e1 / 0.746e3 * (eta + 0.16e2 / 0.5e1) * ((1 + eta) ^ 2) * (eta - 1)) * (eta - 1) * cos(0.2e1 * h + (6 * f) + 0.4e1 * g) + 0.20e2 / 0.9e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * (((eta ^ 2) + 0.199e3 / 0.110e3 * eta + 0.91e2 / 0.110e3) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.47e2 / 0.22e2 * eta - 0.107e3 / 0.110e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.60e2 * eta + 0.69e2 / 0.220e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.13e2 / 0.330e3 * eta - 0.1e1 / 0.55e2) * cos(-0.4e1 * g - 0.2e1 * h + (2 * f)) + 0.4e1 / 0.99e2 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((10 * f) + 0.4e1 * g) + 0.677e3 / 0.198e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.6983e4 / 0.677e3 * (eta ^ 4) - 0.20870e5 / 0.677e3 * (eta ^ 3) + 0.1498e4 / 0.677e3 * (eta ^ 2) + 0.35057e5 / 0.677e3 * eta + 0.24573e5 / 0.677e3) * (ci2 ^ 6) + (-0.801e3 / 0.677e3 * (eta ^ 5) + 0.7427e4 / 0.677e3 * (eta ^ 4) + 0.22542e5 / 0.677e3 * (eta ^ 3) - 0.866e3 / 0.677e3 * (eta ^ 2) - 0.36605e5 / 0.677e3 * eta - 0.25649e5 / 0.677e3) * (ci2 ^ 4) + (0.427e3 / 0.1354e4 * (eta ^ 5) - 0.9707e4 / 0.4062e4 * (eta ^ 4) - 0.14995e5 / 0.2031e4 * (eta ^ 3) - 0.659e3 / 0.2031e4 * (eta ^ 2) + 0.14727e5 / 0.1354e4 * eta + 0.30721e5 / 0.4062e4) * (ci2 ^ 2) - 0.31e2 / 0.2031e4 * ((eta ^ 3) - 0.123e3 / 0.31e2 * (eta ^ 2) - 0.411e3 / 0.31e2 * eta - 0.281e3 / 0.31e2) * (1 + eta) * (eta - 1)) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + (5 * f) + 0.4e1 * g) - 0.560e3 / 0.99e2 * (((eta ^ 5) + 0.101e3 / 0.20e2 * (eta ^ 4) + 0.2867e4 / 0.280e3 * (eta ^ 3) + 0.11843e5 / 0.840e3 * (eta ^ 2) + 0.10747e5 / 0.840e3 * eta + 0.4079e4 / 0.840e3) * (ci2 ^ 6) + (-(eta ^ 5) - 0.2237e4 / 0.420e3 * (eta ^ 4) - 0.9353e4 / 0.840e3 * (eta ^ 3) - 0.13331e5 / 0.840e3 * (eta ^ 2) - 0.12443e5 / 0.840e3 * eta - 0.4807e4 / 0.840e3) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * (eta ^ 5) + 0.1157e4 / 0.840e3 * (eta ^ 4) + 0.1737e4 / 0.560e3 * (eta ^ 3) + 0.8273e4 / 0.1680e4 * (eta ^ 2) + 0.2771e4 / 0.560e3 * eta + 0.1107e4 / 0.560e3) * (ci2 ^ 2) - 0.13e2 / 0.420e3 * ((eta ^ 3) + 0.31e2 / 0.13e2 * (eta ^ 2) + 0.64e2 / 0.13e2 * eta + 0.48e2 / 0.13e2) * (1 + eta)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos(0.4e1 * g + 0.2e1 * h) + 0.608e3 / 0.297e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) + 0.23e2 / 0.8e1 * (eta ^ 2) - 0.65e2 / 0.4e1 * eta - 0.4279e4 / 0.152e3) * (ci2 ^ 6) + (-(eta ^ 3) - 0.385e3 / 0.152e3 * (eta ^ 2) + 0.1353e4 / 0.76e2 * eta + 0.4463e4 / 0.152e3) * (ci2 ^ 4) + (0.7e1 / 0.38e2 * (eta ^ 3) + 0.59e2 / 0.304e3 * (eta ^ 2) - 0.641e3 / 0.152e3 * eta - 0.1793e4 / 0.304e3) * (ci2 ^ 2) + 0.5e1 / 0.152e3 * (eta ^ 2) + 0.21e2 / 0.152e3 * eta + 0.2e1 / 0.19e2) * cos((6 * f) + 0.2e1 * g) - 0.260e3 / 0.297e3 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.551e3 / 0.130e3 * eta + 0.71e2 / 0.26e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.787e3 / 0.130e3 * eta - 0.539e3 / 0.130e3) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.9e1 / 0.4e1 * eta + 0.33e2 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.21e2 / 0.130e3 * eta - 0.8e1 / 0.65e2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * cos(-0.2e1 * h + (6 * f)) - 0.424e3 / 0.33e2 * (1 + eta) * (((eta ^ 5) + 0.1231e4 / 0.318e3 * (eta ^ 4) - 0.1373e4 / 0.477e3 * (eta ^ 3) - 0.5758e4 / 0.477e3 * (eta ^ 2) - 0.434e3 / 0.477e3 * eta + 0.1817e4 / 0.318e3) * (ci2 ^ 6) + (-0.179e3 / 0.159e3 * (eta ^ 5) - 0.445e3 / 0.106e3 * (eta ^ 4) + 0.1675e4 / 0.477e3 * (eta ^ 3) + 0.6608e4 / 0.477e3 * (eta ^ 2) + 0.664e3 / 0.477e3 * eta - 0.655e3 / 0.106e3) * (ci2 ^ 4) + (0.131e3 / 0.318e3 * (eta ^ 5) + 0.267e3 / 0.212e3 * (eta ^ 4) - 0.1559e4 / 0.954e3 * (eta ^ 3) - 0.857e3 / 0.159e3 * (eta ^ 2) - 0.922e3 / 0.477e3 * eta + 0.1981e4 / 0.1908e4) * (ci2 ^ 2) - 0.11e2 / 0.477e3 * ((eta ^ 4) + 0.15e2 / 0.11e2 * (eta ^ 3) - 0.123e3 / 0.22e2 * (eta ^ 2) - 0.75e2 / 0.11e2 * eta + 0.17e2 / 0.22e2) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(0.2e1 * h + (2 * f) + 0.4e1 * g) - 0.106e3 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 5) + 0.6769e4 / 0.53e2 * (eta ^ 4) + 0.7320e4 / 0.53e2 * (eta ^ 3) - 0.13000e5 / 0.53e2 * (eta ^ 2) - 0.11157e5 / 0.53e2 * eta + 0.3375e4 / 0.53e2) * (ci2 ^ 6) + (0.25e2 / 0.53e2 * (eta ^ 5) - 0.8435e4 / 0.53e2 * (eta ^ 4) - 0.9216e4 / 0.53e2 * (eta ^ 3) + 0.15544e5 / 0.53e2 * (eta ^ 2) + 0.13743e5 / 0.53e2 * eta - 0.3517e4 / 0.53e2) * (ci2 ^ 4) + (-0.277e3 / 0.318e3 * (eta ^ 5) + 0.16747e5 / 0.318e3 * (eta ^ 4) + 0.9073e4 / 0.159e3 * (eta ^ 3) - 0.14447e5 / 0.159e3 * (eta ^ 2) - 0.26173e5 / 0.318e3 * eta + 0.5075e4 / 0.318e3) * (ci2 ^ 2) + 0.13e2 / 0.106e3 * (eta ^ 5) - 0.1135e4 / 0.318e3 * (eta ^ 4) - 0.602e3 / 0.159e3 * (eta ^ 3) + 0.878e3 / 0.159e3 * (eta ^ 2) + 0.543e3 / 0.106e3 * eta - 0.173e3 / 0.318e3) * cos(-0.2e1 * h + f) + 0.100e3 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.4e1 * g + 0.2e1 * h + (7 * f)) + 0.100e3 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * g + (7 * f)) + 0.173e3 / 0.198e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.3692e4 / 0.173e3 * (eta ^ 3) + 0.1998e4 / 0.173e3 * (eta ^ 2) - 0.6820e4 / 0.173e3 * eta - 0.4979e4 / 0.173e3) * (ci2 ^ 6) + (-0.217e3 / 0.173e3 * (eta ^ 4) - 0.4052e4 / 0.173e3 * (eta ^ 3) - 0.2366e4 / 0.173e3 * (eta ^ 2) + 0.7148e4 / 0.173e3 * eta + 0.5423e4 / 0.173e3) * (ci2 ^ 4) + (0.409e3 / 0.1038e4 * (eta ^ 4) + 0.3526e4 / 0.519e3 * (eta ^ 3) + 0.2279e4 / 0.519e3 * (eta ^ 2) - 0.1862e4 / 0.173e3 * eta - 0.8735e4 / 0.1038e4) * (ci2 ^ 2) - 0.11e2 / 0.519e3 * (eta - 1) * ((eta ^ 3) + 0.153e3 / 0.11e2 * (eta ^ 2) + (27 * eta) + 0.163e3 / 0.11e2)) * cos(0.2e1 * h + f) + 0.4e1 / 0.99e2 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos(0.6e1 * g + 0.2e1 * h + (10 * f)) - 0.100e3 / 0.33e2 * ((1 + eta) ^ 3) * (((eta ^ 3) + 0.21e2 / 0.50e2 * (eta ^ 2) - 0.77e2 / 0.25e2 * eta - 0.347e3 / 0.150e3) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 3) - 0.79e2 / 0.150e3 * (eta ^ 2) + 0.241e3 / 0.75e2 * eta + 0.121e3 / 0.50e2) * (ci2 ^ 4) + (0.151e3 / 0.450e3 * (eta ^ 3) + 0.19e2 / 0.100e3 * (eta ^ 2) - 0.367e3 / 0.450e3 * eta - 0.559e3 / 0.900e3) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (1 + eta) * (eta + 0.6e1 / 0.7e1) * (eta - 1)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos(0.2e1 * h + (2 * f)) + 0.80e2 / 0.99e2 * (1 + eta) * ((-0.2747e4 / 0.30e2 + (eta ^ 6) - (eta ^ 5) / 0.6e1 - 0.3479e4 / 0.30e2 * eta + 0.73e2 / 0.10e2 * (eta ^ 4) + (4 * eta ^ 3) - 0.397e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.5963e4 / 0.30e2 - (2 * eta ^ 6) + (eta ^ 5) - (eta ^ 3) + 0.348e3 / 0.5e1 * (eta ^ 2) + 0.1292e4 / 0.5e1 * eta - 0.383e3 / 0.30e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.165e3 + 0.73e2 / 0.15e2 * (eta ^ 3) - 0.6671e4 / 0.30e2 * eta + 0.173e3 / 0.15e2 * (eta ^ 4) - 0.17e2 / 0.10e2 * (eta ^ 5) + 0.3e1 / 0.5e1 * (eta ^ 6) - 0.947e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 4) + (-(7 * eta ^ 3) + 0.1316e4 / 0.15e2 * eta - 0.193e3 / 0.30e2 * (eta ^ 4) + 0.621e3 / 0.10e2 + 0.11e2 / 0.15e2 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 6) + 0.123e3 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 2) + 0.23e2 / 0.15e2 * (eta ^ 3) - 0.227e3 / 0.60e2 * (eta ^ 2) + 0.157e3 / 0.120e3 * (eta ^ 4) - 0.757e3 / 0.60e2 * eta - (eta ^ 6) / 0.10e2 + (eta ^ 5) / 0.60e2 - 0.337e3 / 0.40e2) * (eta - 1) + 0.1600e4 / 0.297e3 * ((-0.327e3 / 0.25e2 + (eta ^ 6) - 0.399e3 / 0.100e3 * (eta ^ 5) - 0.2281e4 / 0.100e3 * eta + 0.231e3 / 0.50e2 * (eta ^ 4) + 0.237e3 / 0.10e2 * (eta ^ 3) + 0.11e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 8) + (0.1373e4 / 0.50e2 - 0.87e2 / 0.40e2 * (eta ^ 6) + 0.1767e4 / 0.200e3 * (eta ^ 5) - 0.1011e4 / 0.20e2 * (eta ^ 3) - 0.43e2 / 0.8e1 * (eta ^ 2) + 0.9583e4 / 0.200e3 * eta - 0.939e3 / 0.100e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4329e4 / 0.200e3 + 0.837e3 / 0.20e2 * (eta ^ 3) - 0.7851e4 / 0.200e3 * eta + 0.1923e4 / 0.200e3 * (eta ^ 4) - 0.1503e4 / 0.200e3 * (eta ^ 5) + 0.51e2 / 0.50e2 * (eta ^ 6) + 0.321e3 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1587e4 / 0.100e3 * (eta ^ 3) + 0.2959e4 / 0.200e3 * eta - 0.507e3 / 0.100e3 * (eta ^ 4) + 0.759e3 / 0.100e3 + 0.579e3 / 0.200e3 * (eta ^ 5) + 0.19e2 / 0.100e3 * (eta ^ 6) - 0.17e2 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.849e3 / 0.400e3 * (eta ^ 3) - 0.37e2 / 0.400e3 * (eta ^ 2) + 0.677e3 / 0.800e3 * (eta ^ 4) - 0.151e3 / 0.160e3 - 0.1567e4 / 0.800e3 * eta - (eta ^ 6) / 0.10e2 - 0.63e2 / 0.160e3 * (eta ^ 5)) * (1 + eta) * cos(0.2e1 * h + 0.2e1 * g + (2 * f)) + ((0.13265e5 / 0.99e2 + (eta ^ 6) + 0.196e3 / 0.297e3 * (eta ^ 5) + 0.5044e4 / 0.33e2 * eta + 0.2113e4 / 0.297e3 * (eta ^ 4) - 0.18680e5 / 0.297e3 * (eta ^ 3) - 0.15869e5 / 0.297e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.7826e4 / 0.27e2 - (2 * eta ^ 6) - 0.248e3 / 0.297e3 * (eta ^ 5) + 0.39280e5 / 0.297e3 * (eta ^ 3) + 0.9886e4 / 0.99e2 * (eta ^ 2) - 0.101048e6 / 0.297e3 * eta - 0.3842e4 / 0.297e3 * (eta ^ 4)) * (ci2 ^ 6) + (0.716e3 / 0.3e1 - 0.4000e4 / 0.33e2 * (eta ^ 3) + 0.3232e4 / 0.11e2 * eta + 0.740e3 / 0.99e2 * (eta ^ 4) + 0.448e3 / 0.99e2 * (eta ^ 5) + 0.4e1 / 0.3e1 * (eta ^ 6) - 0.7220e4 / 0.99e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.16360e5 / 0.297e3 * (eta ^ 3) - 0.11548e5 / 0.99e2 * eta - 0.107e3 / 0.297e3 * (eta ^ 4) - 0.8779e4 / 0.99e2 - 0.1268e4 / 0.297e3 * (eta ^ 5) - (eta ^ 6) / 0.3e1 + 0.653e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.2560e4 / 0.297e3 * (eta ^ 3) - 0.2813e4 / 0.1188e4 * (eta ^ 2) - 0.731e3 / 0.1188e4 * (eta ^ 4) + 0.14071e5 / 0.1188e4 + 0.1664e4 / 0.99e2 * eta + (eta ^ 6) / 0.36e2 + 0.224e3 / 0.297e3 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * cos(f) - 0.5e1 / 0.33e2 * ((1 + eta) ^ 3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos((7 * f)) - 0.5e1 / 0.33e2 * ((1 + eta) ^ 4) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * g + 0.2e1 * h + (7 * f))) * R__e ^ 4 * J ^ 2 / ((1 + eta) ^ 2) / a ^ 4 / (eta ^ 11) 0.18333e5 / 0.256e3 * (-0.20e2 / 0.6111e4 * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * sin(0.2e1 * g + 0.2e1 * h + (6 * f)) + 0.20e2 / 0.6111e4 * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * sin((6 * f)) + 0.320e3 / 0.679e3 * ((1 + eta) ^ 2) * eta * Delta * (((eta ^ 4) + 0.34e2 / 0.3e1 * (eta ^ 2) - 0.154e3 / 0.9e1) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 4) - 0.74e2 / 0.3e1 * (eta ^ 2) + 0.112e3 / 0.3e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 4) + 0.109e3 / 0.5e1 * (eta ^ 2) - 0.94e2 / 0.3e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 4) - 0.46e2 / 0.5e1 * (eta ^ 2) + 0.12e2) * (ci2 ^ 2) - (eta ^ 4) / 0.10e2 + 0.7e1 / 0.5e1 * (eta ^ 2) - 0.5e1 / 0.3e1) - 0.80e2 / 0.6111e4 * (((eta ^ 2) - 0.239e3 / 0.20e2 * eta - 0.223e3 / 0.20e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + (27 * eta) + 0.513e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.111e3 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.157e3 / 0.20e2 * eta + 0.143e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.79e2 / 0.80e2 * eta - 0.67e2 / 0.80e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin(-0.2e1 * g - 0.2e1 * h + (4 * f)) - 0.1600e4 / 0.6111e4 * (1 + eta) * ((-0.327e3 / 0.25e2 + (eta ^ 6) - 0.399e3 / 0.100e3 * (eta ^ 5) - 0.2281e4 / 0.100e3 * eta + 0.231e3 / 0.50e2 * (eta ^ 4) + 0.237e3 / 0.10e2 * (eta ^ 3) + 0.11e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 8) + (0.1373e4 / 0.50e2 - 0.87e2 / 0.40e2 * (eta ^ 6) + 0.1767e4 / 0.200e3 * (eta ^ 5) - 0.1011e4 / 0.20e2 * (eta ^ 3) - 0.43e2 / 0.8e1 * (eta ^ 2) + 0.9583e4 / 0.200e3 * eta - 0.939e3 / 0.100e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4329e4 / 0.200e3 + 0.837e3 / 0.20e2 * (eta ^ 3) - 0.7851e4 / 0.200e3 * eta + 0.1923e4 / 0.200e3 * (eta ^ 4) - 0.1503e4 / 0.200e3 * (eta ^ 5) + 0.51e2 / 0.50e2 * (eta ^ 6) + 0.321e3 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1587e4 / 0.100e3 * (eta ^ 3) + 0.2959e4 / 0.200e3 * eta - 0.507e3 / 0.100e3 * (eta ^ 4) + 0.759e3 / 0.100e3 + 0.579e3 / 0.200e3 * (eta ^ 5) + 0.19e2 / 0.100e3 * (eta ^ 6) - 0.17e2 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.849e3 / 0.400e3 * (eta ^ 3) - 0.37e2 / 0.400e3 * (eta ^ 2) + 0.677e3 / 0.800e3 * (eta ^ 4) - 0.151e3 / 0.160e3 - 0.1567e4 / 0.800e3 * eta - (eta ^ 6) / 0.10e2 - 0.63e2 / 0.160e3 * (eta ^ 5)) * sin(0.2e1 * h + 0.2e1 * g + (2 * f)) + 0.70e2 / 0.873e3 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 4) + 0.54e2 / 0.35e2 * (eta ^ 3) + 0.108e3 / 0.245e3 * (eta ^ 2) - 0.158e3 / 0.35e2 * eta - 0.183e3 / 0.35e2) * (ci2 ^ 2) + 0.4e1 / 0.35e2 * eta * (1 + eta) * (eta ^ 2 - 5)) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((5 * f) + 0.4e1 * g) + 0.8e1 / 0.291e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (((eta ^ 2) + 0.55e2 / 0.42e2 * eta + 0.25e2 / 0.42e2) * (ci2 ^ 2) - 0.5e1 / 0.42e2 * (eta ^ 2) - 0.5e1 / 0.42e2 * eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin(0.4e1 * g) - 0.10e2 / 0.873e3 * (ci2 ^ 2) * ((1 + eta) ^ 4) * ((ci2 ^ 2) - 0.1e1 / 0.7e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 3) * sin(0.6e1 * g + 0.2e1 * h) - 0.33e2 / 0.679e3 * (((eta ^ 3) - 0.397e3 / 0.99e2 * (eta ^ 2) - 0.1567e4 / 0.99e2 * eta - 0.85e2 / 0.9e1) * (ci2 ^ 6) + (-0.43e2 / 0.33e2 * (eta ^ 3) + 0.595e3 / 0.99e2 * (eta ^ 2) + 0.2333e4 / 0.99e2 * eta + 0.491e3 / 0.33e2) * (ci2 ^ 4) + (0.257e3 / 0.594e3 * (eta ^ 3) - 0.463e3 / 0.198e3 * (eta ^ 2) - 0.5417e4 / 0.594e3 * eta - 0.3635e4 / 0.594e3) * (ci2 ^ 2) - 0.5e1 / 0.198e3 * ((eta ^ 2) - 0.42e2 / 0.5e1 * eta - 0.281e3 / 0.15e2) * (1 + eta)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + (5 * f)) - 0.15e2 / 0.1358e4 * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + (7 * f)) + 0.88e2 / 0.873e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.419e3 / 0.308e3 * (eta ^ 3) - 0.417e3 / 0.308e3 * (eta ^ 2) - 0.1479e4 / 0.308e3 * eta - 0.1151e4 / 0.308e3) * (ci2 ^ 2) - 0.31e2 / 0.154e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.31e2 * (eta ^ 2) - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2)) * sqrt((-eta ^ 2 + 1)) * sin(0.6e1 * g + 0.2e1 * h + (5 * f)) - 0.38e2 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.9e1 / 0.19e2 * (eta ^ 2) - 0.25e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (ci2 ^ 2) - 0.5e1 / 0.19e2 * (eta - 1) * ((1 + eta) ^ 2)) * (eta - 1) * sin(0.2e1 * g - 0.2e1 * h) - 0.32e2 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.11e2 / 0.4e1 * (eta ^ 3) + 0.91e2 / 0.4e1 * (eta ^ 2) - 0.97e2 / 0.4e1 * eta - 0.309e3 / 0.4e1) * (ci2 ^ 2) + 0.3e1 / 0.4e1 * (1 + eta) * ((eta ^ 2) - 0.31e2 / 0.3e1) * eta) * (eta - 1) * sin((6 * f) + 0.4e1 * g) + 0.227e3 / 0.4074e4 * (((eta ^ 4) + 0.6712e4 / 0.227e3 * (eta ^ 3) + 0.12894e5 / 0.227e3 * (eta ^ 2) + 0.3976e4 / 0.227e3 * eta - 0.2449e4 / 0.227e3) * (ci2 ^ 6) + (-0.315e3 / 0.227e3 * (eta ^ 4) - 0.7632e4 / 0.227e3 * (eta ^ 3) - 0.14406e5 / 0.227e3 * (eta ^ 2) - 0.4656e4 / 0.227e3 * eta + 0.2449e4 / 0.227e3) * (ci2 ^ 4) + (0.667e3 / 0.1362e4 * (eta ^ 4) + 0.2366e4 / 0.227e3 * (eta ^ 3) + 0.13261e5 / 0.681e3 * (eta ^ 2) + 0.5014e4 / 0.681e3 * eta - 0.2981e4 / 0.1362e4) * (ci2 ^ 2) - 0.22e2 / 0.681e3 * ((eta ^ 2) + 0.156e3 / 0.11e2 * eta + 0.137e3 / 0.11e2) * (1 + eta) * eta) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * g + f) - 0.236e3 / 0.6111e4 * (ci2 ^ 2) * (((eta ^ 4) + 0.26e2 / 0.59e2 * (eta ^ 3) - (4 * eta ^ 2) - 0.46e2 / 0.59e2 * eta + 0.93e2 / 0.59e2) * (ci2 ^ 2) - 0.38e2 / 0.59e2 * (1 + eta) * eta * ((eta ^ 2) - 0.31e2 / 0.19e2)) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin((2 * f) + 0.4e1 * g) - 0.5120e4 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 4) + (eta ^ 3) - 0.71e2 / 0.16e2 * (eta ^ 2) - 0.19e2 / 0.4e1 * eta - 0.3e1 / 0.8e1) * (ci2 ^ 6) - 0.5e1 / 0.4e1 * ((eta ^ 3) - (eta ^ 2) - 0.21e2 / 0.10e2 * eta - 0.3e1 / 0.20e2) * (eta + 2) * (ci2 ^ 4) + (0.17e2 / 0.40e2 * (eta ^ 4) + 0.17e2 / 0.40e2 * (eta ^ 3) - 0.121e3 / 0.80e2 * (eta ^ 2) - 0.63e2 / 0.40e2 * eta - 0.3e1 / 0.40e2) * (ci2 ^ 2) - 0.7e1 / 0.240e3 * (1 + eta) * ((eta ^ 2) - 0.37e2 / 0.14e2) * eta) * cos(0.2e1 * g) + 0.440e3 / 0.679e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * (((eta ^ 3) + 0.20e2 / 0.33e2 * (eta ^ 2) - 0.31e2 / 0.11e2 * eta - 0.92e2 / 0.33e2) * (ci2 ^ 6) + (-0.35e2 / 0.33e2 * (eta ^ 3) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.95e2 / 0.33e2 * eta + 0.94e2 / 0.33e2) * (ci2 ^ 4) + (0.41e2 / 0.165e3 * (eta ^ 3) + 0.28e2 / 0.165e3 * (eta ^ 2) - 0.101e3 / 0.165e3 * eta - 0.20e2 / 0.33e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.165e3) * cos(0.2e1 * h + (5 * f) + 0.4e1 * g) - 0.136e3 / 0.6111e4 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.13e2 / 0.68e2 * (eta ^ 3) - 0.369e3 / 0.68e2 * (eta ^ 2) + 0.9e1 / 0.68e2 * eta + 0.417e3 / 0.68e2) * (ci2 ^ 2) - 0.23e2 / 0.34e2 * (eta ^ 4) - 0.4e1 / 0.17e2 * (eta ^ 3) + 0.37e2 / 0.17e2 * (eta ^ 2) + 0.24e2 / 0.17e2 * eta - 0.11e2 / 0.34e2) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + (3 * f) + 0.2e1 * g) + 0.52e2 / 0.2037e4 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sin((8 * f) + 0.2e1 * g) + 0.7040e4 / 0.2037e4 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * (((eta ^ 2) + eta - 0.41e2 / 0.88e2) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.13e2 / 0.11e2 * eta + 0.47e2 / 0.88e2) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.110e3 * eta - 0.13e2 / 0.88e2) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.7e1 / 0.330e3 * eta + 0.3e1 / 0.440e3) * cos(0.4e1 * g + 0.2e1 * h) + 0.5840e4 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.34e2 / 0.73e2 * eta - 0.59e2 / 0.73e2) * (ci2 ^ 6) + (-0.97e2 / 0.73e2 * (eta ^ 2) - 0.46e2 / 0.73e2 * eta + 0.79e2 / 0.73e2) * (ci2 ^ 4) + (0.169e3 / 0.365e3 * (eta ^ 2) + 0.82e2 / 0.365e3 * eta - 0.139e3 / 0.365e3) * (ci2 ^ 2) - 0.12e2 / 0.365e3 * (eta ^ 2) - 0.6e1 / 0.365e3 * eta + 0.2e1 / 0.73e2) * cos(-0.2e1 * h + (2 * f)) - ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin(-0.4e1 * g - 0.2e1 * h + (3 * f)) / 0.194e3 + 0.1520e4 / 0.2037e4 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.25e2 / 0.19e2 * (ci2 ^ 4) + 0.43e2 / 0.95e2 * (ci2 ^ 2) - 0.3e1 / 0.95e2) * ((eta - 1) ^ 2) * cos(-0.2e1 * h + (4 * f)) - 0.2360e4 / 0.873e3 * (((eta ^ 4) + 0.338e3 / 0.413e3 * (eta ^ 3) - 0.1472e4 / 0.413e3 * (eta ^ 2) - 0.746e3 / 0.413e3 * eta + 0.117e3 / 0.59e2) * (ci2 ^ 6) + (-0.505e3 / 0.413e3 * (eta ^ 4) - 0.430e3 / 0.413e3 * (eta ^ 3) + 0.244e3 / 0.59e2 * (eta ^ 2) + 0.982e3 / 0.413e3 * eta - 0.117e3 / 0.59e2) * (ci2 ^ 4) + (0.781e3 / 0.2065e4 * (eta ^ 4) + 0.706e3 / 0.2065e4 * (eta ^ 3) - 0.2416e4 / 0.2065e4 * (eta ^ 2) - 0.338e3 / 0.413e3 * eta + 0.117e3 / 0.295e3) * (ci2 ^ 2) - 0.46e2 / 0.2065e4 * (1 + eta) * eta * ((eta ^ 2) - 0.59e2 / 0.23e2)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * cos((3 * f) + 0.2e1 * g) + 0.5360e4 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) + 0.113e3 / 0.134e3 * (eta ^ 3) - 0.135e3 / 0.134e3 * (eta ^ 2) - 0.21e2 / 0.134e3 * eta + 0.85e2 / 0.134e3) * (ci2 ^ 6) + (-0.86e2 / 0.67e2 * (eta ^ 4) - 0.145e3 / 0.134e3 * (eta ^ 3) + 0.187e3 / 0.134e3 * (eta ^ 2) + 0.37e2 / 0.134e3 * eta - 0.115e3 / 0.134e3) * (ci2 ^ 4) + (0.143e3 / 0.335e3 * (eta ^ 4) + 0.241e3 / 0.670e3 * (eta ^ 3) - 0.343e3 / 0.670e3 * (eta ^ 2) - 0.17e2 / 0.134e3 * eta + 0.41e2 / 0.134e3) * (ci2 ^ 2) - 0.19e2 / 0.670e3 * (1 + eta) * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + f) - 0.680e3 / 0.2037e4 * (((eta ^ 3) + 0.8e1 / 0.17e2 * (eta ^ 2) - 0.21e2 / 0.17e2 * eta - 0.8e1 / 0.17e2) * (ci2 ^ 6) + (-0.19e2 / 0.17e2 * (eta ^ 3) - 0.10e2 / 0.17e2 * (eta ^ 2) + 0.23e2 / 0.17e2 * eta + 0.10e2 / 0.17e2) * (ci2 ^ 4) + (0.5e1 / 0.17e2 * (eta ^ 3) + 0.16e2 / 0.85e2 * (eta ^ 2) - 0.29e2 / 0.85e2 * eta - 0.16e2 / 0.85e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.85e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + f) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin((5 * f) - 0.2e1 * g) / 0.1358e4 - 0.5e1 / 0.582e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(0.4e1 * g + 0.2e1 * h + (9 * f)) + 0.5e1 / 0.582e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * g + (9 * f)) - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (5 * f)) / 0.1358e4 - 0.7e1 / 0.97e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) + 0.302e3 / 0.441e3 * eta - 0.2047e4 / 0.441e3) * (ci2 ^ 8) + (-0.106e3 / 0.49e2 * (eta ^ 2) - 0.676e3 / 0.441e3 * eta + 0.4094e4 / 0.441e3) * (ci2 ^ 6) + (0.236e3 / 0.147e3 * (eta ^ 2) + 0.128e3 / 0.147e3 * eta - 0.956e3 / 0.147e3) * (ci2 ^ 4) + (-0.23e2 / 0.49e2 * (eta ^ 2) - 0.22e2 / 0.441e3 * eta + 0.821e3 / 0.441e3) * (ci2 ^ 2) + 0.9e1 / 0.196e3 * (eta ^ 2) - 0.8e1 / 0.441e3 * eta - 0.325e3 / 0.1764e4) * sin((5 * f)) - 0.552e3 / 0.679e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((0.4475e4 / 0.414e3 + (eta ^ 6) + 0.1079e4 / 0.414e3 * (eta ^ 5) - 0.9605e4 / 0.621e3 * (eta ^ 3) - 0.1456e4 / 0.621e3 * (eta ^ 2) + 0.18685e5 / 0.1242e4 * eta - 0.7411e4 / 0.1242e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1589e4 / 0.138e3 + 0.10579e5 / 0.621e3 * (eta ^ 3) - 0.20093e5 / 0.1242e4 * eta + 0.349e3 / 0.54e2 * (eta ^ 4) - 0.1259e4 / 0.414e3 * (eta ^ 5) - 0.241e3 / 0.207e3 * (eta ^ 6) + 0.1688e4 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1601e4 / 0.414e3 * (eta ^ 3) + 0.8503e4 / 0.2484e4 * eta - 0.1163e4 / 0.828e3 * (eta ^ 4) + 0.5947e4 / 0.2484e4 + 0.661e3 / 0.828e3 * (eta ^ 5) + 0.43e2 / 0.138e3 * (eta ^ 6) - 0.452e3 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.19e2 / 0.1242e4 * (1 + eta) * ((eta ^ 4) + 0.47e2 / 0.19e2 * (eta ^ 3) - 0.36e2 / 0.19e2 * (eta ^ 2) - 0.120e3 / 0.19e2 * eta - 0.74e2 / 0.19e2) * (eta - 1)) * sin(0.2e1 * h + (4 * f) + 0.4e1 * g) - 0.51e2 / 0.194e3 * (ci2 - 1) * (ci2 + 1) * ((0.4003e4 / 0.357e3 + (eta ^ 6) - 0.59152e5 / 0.1071e4 * (eta ^ 5) + 0.6304e4 / 0.153e3 * (eta ^ 3) + 0.35947e5 / 0.153e3 * (eta ^ 2) + 0.146224e6 / 0.1071e4 * eta - 0.133445e6 / 0.1071e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4003e4 / 0.357e3 - 0.6976e4 / 0.153e3 * (eta ^ 3) - 0.167840e6 / 0.1071e4 * eta + 0.17789e5 / 0.119e3 * (eta ^ 4) + 0.70496e5 / 0.1071e4 * (eta ^ 5) - 0.565e3 / 0.357e3 * (eta ^ 6) - 0.292637e6 / 0.1071e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.42088e5 / 0.3213e4 * (eta ^ 3) + 0.20188e5 / 0.459e3 * eta - 0.298733e6 / 0.6426e4 * (eta ^ 4) + 0.3691e4 / 0.2142e4 - 0.66316e5 / 0.3213e4 * (eta ^ 5) + 0.3935e4 / 0.6426e4 * (eta ^ 6) + 0.24665e5 / 0.306e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.52e2 / 0.1071e4 * (1 + eta) * ((eta ^ 4) - 0.1034e4 / 0.39e2 * (eta ^ 3) - 0.1204e4 / 0.39e2 * (eta ^ 2) + 0.550e3 / 0.13e2 * eta + 0.1789e4 / 0.39e2) * eta) * sqrt((-eta ^ 2 + 1)) * sin(f + 0.2e1 * g) + 0.80e2 / 0.679e3 * ((1 + eta) ^ 2) * ((0.4027e4 / 0.180e3 + (eta ^ 6) + 0.283e3 / 0.90e2 * (eta ^ 5) - 0.1843e4 / 0.90e2 * (eta ^ 3) - 0.803e3 / 0.45e2 * (eta ^ 2) + 0.331e3 / 0.15e2 * eta + 0.49e2 / 0.180e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4391e4 / 0.180e3 + 0.1979e4 / 0.90e2 * (eta ^ 3) - 0.206e3 / 0.9e1 * eta - 0.149e3 / 0.180e3 * (eta ^ 4) - 0.23e2 / 0.6e1 * (eta ^ 5) - (eta ^ 6) + 0.919e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.229e3 / 0.36e2 * (eta ^ 3) + 0.553e3 / 0.90e2 * eta + 0.53e2 / 0.120e3 * (eta ^ 4) + 0.2329e4 / 0.360e3 + 0.233e3 / 0.180e3 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) - 0.266e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) + 0.11e2 / 0.15e2 * (eta ^ 2) - 0.8e1 / 0.5e1 * eta - 0.16e2 / 0.5e1) * (eta - 1) / 0.12e2) * (ci2 - 1) * (ci2 + 1) * sin(0.2e1 * h) + 0.6e1 / 0.97e2 * (((eta ^ 3) + 0.124e3 / 0.189e3 * (eta ^ 2) - 0.1075e4 / 0.189e3 * eta - 0.1082e4 / 0.189e3) * (ci2 ^ 8) + (-0.44e2 / 0.21e2 * (eta ^ 3) - 0.38e2 / 0.27e2 * (eta ^ 2) + 0.2168e4 / 0.189e3 * eta + 0.2182e4 / 0.189e3) * (ci2 ^ 6) + (0.94e2 / 0.63e2 * (eta ^ 3) + 0.2e1 / 0.3e1 * (eta ^ 2) - 0.178e3 / 0.21e2 * eta - 0.514e3 / 0.63e2) * (ci2 ^ 4) + (-0.26e2 / 0.63e2 * (eta ^ 3) + 0.13e2 / 0.189e3 * (eta ^ 2) + 0.512e3 / 0.189e3 * eta + 0.445e3 / 0.189e3) * (ci2 ^ 2) + 0.29e2 / 0.756e3 * (eta ^ 3) - (eta ^ 2) / 0.28e2 - 0.25e2 / 0.84e2 * eta - 0.59e2 / 0.252e3) * ((1 + eta) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (5 * f) + 0.2e1 * g) - 0.3824e4 / 0.6111e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((0.2187e4 / 0.239e3 + (eta ^ 6) + 0.320e3 / 0.239e3 * (eta ^ 5) - 0.5878e4 / 0.239e3 * (eta ^ 3) + 0.3383e4 / 0.239e3 * (eta ^ 2) + 0.6902e4 / 0.239e3 * eta - 0.3985e4 / 0.239e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.2187e4 / 0.239e3 + 0.6506e4 / 0.239e3 * (eta ^ 3) - 0.7504e4 / 0.239e3 * eta + 0.4457e4 / 0.239e3 * (eta ^ 4) - 0.394e3 / 0.239e3 * (eta ^ 5) - 0.283e3 / 0.239e3 * (eta ^ 6) - 0.3859e4 / 0.239e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1727e4 / 0.239e3 * (eta ^ 3) + 0.1918e4 / 0.239e3 * eta - 0.11e2 / 0.2e1 * (eta ^ 4) + 0.687e3 / 0.478e3 + 0.129e3 / 0.239e3 * (eta ^ 5) + 0.195e3 / 0.478e3 * (eta ^ 6) + 0.2563e4 / 0.478e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.7e1 / 0.239e3 * (1 + eta) * ((eta ^ 4) + 0.5e1 / 0.14e2 * (eta ^ 3) - 0.137e3 / 0.14e2 * (eta ^ 2) - 0.3e1 / 0.2e1 * eta + 0.155e3 / 0.14e2) * eta) * sin(0.2e1 * g + (2 * f)) + 0.40e2 / 0.873e3 * ((1 + eta) ^ 2) * (((eta ^ 3) - 0.408e3 / 0.35e2 * (eta ^ 2) - 0.41e2 / 0.7e1 * eta + 0.706e3 / 0.35e2) * (ci2 ^ 8) + (-0.15e2 / 0.7e1 * (eta ^ 3) + 0.878e3 / 0.35e2 * (eta ^ 2) + 0.477e3 / 0.35e2 * eta - 0.1412e4 / 0.35e2) * (ci2 ^ 6) + (0.33e2 / 0.35e2 * (eta ^ 3) - 0.684e3 / 0.35e2 * (eta ^ 2) - 0.327e3 / 0.35e2 * eta + 0.1014e4 / 0.35e2) * (ci2 ^ 4) + (0.8e1 / 0.35e2 * (eta ^ 3) + 0.228e3 / 0.35e2 * (eta ^ 2) + 0.68e2 / 0.35e2 * eta - 0.44e2 / 0.5e1) * (ci2 ^ 2) - (eta ^ 3) / 0.10e2 - 0.27e2 / 0.35e2 * (eta ^ 2) - 0.4e1 / 0.35e2 * eta + 0.13e2 / 0.14e2) * ((eta - 1) ^ 2) * sin((4 * f)) - 0.516e3 / 0.679e3 * (1 + eta) * ((-0.2030e4 / 0.387e3 + (eta ^ 5) - 0.17900e5 / 0.1161e4 * eta + 0.4195e4 / 0.1161e4 * (eta ^ 4) + 0.7663e4 / 0.1161e4 * (eta ^ 3) - 0.10213e5 / 0.1161e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.12992e5 / 0.1161e4 - 0.284e3 / 0.129e3 * (eta ^ 5) - 0.5570e4 / 0.387e3 * (eta ^ 3) + 0.21614e5 / 0.1161e4 * (eta ^ 2) + 0.12766e5 / 0.387e3 * eta - 0.3074e4 / 0.387e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1172e4 / 0.129e3 + 0.1628e4 / 0.129e3 * (eta ^ 3) - 0.10618e5 / 0.387e3 * eta + 0.324e3 / 0.43e2 * (eta ^ 4) + 0.646e3 / 0.387e3 * (eta ^ 5) - 0.2008e4 / 0.129e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.673e3 / 0.129e3 * (eta ^ 3) + 0.12179e5 / 0.1161e4 * eta - 0.449e3 / 0.129e3 * (eta ^ 4) + 0.1288e4 / 0.387e3 - 0.194e3 / 0.387e3 * (eta ^ 5) + 0.2351e4 / 0.387e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.890e3 / 0.1161e4 * (eta ^ 3) - 0.328e3 / 0.387e3 * (eta ^ 2) + 0.857e3 / 0.1548e4 * (eta ^ 4) - 0.2027e4 / 0.4644e4 - 0.2219e4 / 0.1548e4 * eta + 0.233e3 / 0.4644e4 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + f + 0.2e1 * g) + 0.17e2 / 0.97e2 * (1 + eta) * ((0.13667e5 / 0.1071e4 + (eta ^ 5) + 0.17839e5 / 0.1071e4 * eta - 0.677e3 / 0.1071e4 * (eta ^ 4) - 0.1778e4 / 0.153e3 * (eta ^ 3) - 0.466e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.28274e5 / 0.1071e4 - 0.38e2 / 0.17e2 * (eta ^ 5) + 0.1252e4 / 0.51e2 * (eta ^ 3) + 0.436e3 / 0.63e2 * (eta ^ 2) - 0.36826e5 / 0.1071e4 * eta + 0.1406e4 / 0.1071e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.2392e4 / 0.119e3 - 0.20912e5 / 0.1071e4 * (eta ^ 3) + 0.29432e5 / 0.1071e4 * eta - 0.2216e4 / 0.1071e4 * (eta ^ 4) + 0.88e2 / 0.51e2 * (eta ^ 5) - 0.656e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 4) + (0.1058e4 / 0.153e3 * (eta ^ 3) - 0.3581e4 / 0.357e3 * eta + 0.1549e4 / 0.1071e4 * (eta ^ 4) - 0.2377e4 / 0.357e3 - 0.9e1 / 0.17e2 * (eta ^ 5) + 0.590e3 / 0.1071e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.5527e4 / 0.6426e4 * (eta ^ 3) + 0.197e3 / 0.6426e4 * (eta ^ 2) - 0.65e2 / 0.252e3 * (eta ^ 4) + 0.65e2 / 0.84e2 + 0.16297e5 / 0.12852e5 * eta + 0.11e2 / 0.204e3 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (3 * f) + 0.2e1 * g) - 0.380e3 / 0.2037e4 * (1 + eta) * ((0.696e3 / 0.95e2 + 0.2297e4 / 0.285e3 * eta + (eta ^ 4) - 0.949e3 / 0.285e3 * (eta ^ 3) - 0.1097e4 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.4696e4 / 0.285e3 + 0.428e3 / 0.57e2 * (eta ^ 3) + 0.136e3 / 0.15e2 * (eta ^ 2) - 0.5036e4 / 0.285e3 * eta - 0.128e3 / 0.57e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.1319e4 / 0.95e2 - 0.698e3 / 0.95e2 * (eta ^ 3) + 0.1434e4 / 0.95e2 * eta + 0.113e3 / 0.95e2 * (eta ^ 4) - 0.728e3 / 0.95e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.1013e4 / 0.285e3 * (eta ^ 3) - 0.341e3 / 0.57e2 * eta + 0.2e1 / 0.19e2 * (eta ^ 4) - 0.493e3 / 0.95e2 + 0.781e3 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.691e3 / 0.1140e4 * (eta ^ 3) - 0.389e3 / 0.1140e4 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.53e2 / 0.76e2 + 0.991e3 / 0.1140e4 * eta) * ((eta - 1) ^ 2) * sin(-0.2e1 * g - 0.2e1 * h + (2 * f)) - 0.400e3 / 0.6111e4 * (1 + eta) * ((0.2747e4 / 0.50e2 + (eta ^ 6) + 0.23e2 / 0.5e1 * (eta ^ 5) + 0.6159e4 / 0.50e2 * eta + 0.949e3 / 0.50e2 * (eta ^ 4) + 0.2873e4 / 0.50e2 * (eta ^ 3) + 0.2834e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.5963e4 / 0.50e2 - (2 * eta ^ 6) - 0.48e2 / 0.5e1 * (eta ^ 5) - 0.2978e4 / 0.25e2 * (eta ^ 3) - 0.5918e4 / 0.25e2 * (eta ^ 2) - 0.6556e4 / 0.25e2 * eta - 0.1953e4 / 0.50e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.99e2 + 0.4519e4 / 0.50e2 * (eta ^ 3) + 0.10849e5 / 0.50e2 * eta + 0.592e3 / 0.25e2 * (eta ^ 4) + 0.93e2 / 0.25e2 * (eta ^ 5) + 0.3e1 / 0.5e1 * (eta ^ 6) + 0.4801e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.731e3 / 0.25e2 * (eta ^ 3) - 0.413e3 / 0.5e1 * eta - 0.169e3 / 0.50e2 * (eta ^ 4) - 0.1863e4 / 0.50e2 + 0.34e2 / 0.25e2 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 6) - 0.1786e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.161e3 / 0.50e2 * (eta ^ 3) + 0.469e3 / 0.50e2 * (eta ^ 2) - 0.39e2 / 0.200e3 * (eta ^ 4) + 0.563e3 / 0.50e2 * eta - (eta ^ 6) / 0.10e2 - 0.23e2 / 0.50e2 * (eta ^ 5) + 0.1011e4 / 0.200e3) * (eta - 1) * sin(0.2e1 * g + 0.2e1 * h) - 0.80e2 / 0.2037e4 * ((1 + eta) ^ 2) * (eta - 1) * ((0.109e3 / 0.4e1 + 0.355e3 / 0.12e2 * eta + (eta ^ 4) - 0.701e3 / 0.60e2 * (eta ^ 3) - 0.111e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.3337e4 / 0.60e2 + 0.122e3 / 0.5e1 * (eta ^ 3) + 0.123e3 / 0.10e2 * (eta ^ 2) - 0.301e3 / 0.5e1 * eta - 0.25e2 / 0.12e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.204e3 / 0.5e1 - 0.92e2 / 0.5e1 * (eta ^ 3) + 0.93e2 / 0.2e1 * eta + 0.4e1 / 0.5e1 * (eta ^ 4) - 0.71e2 / 0.10e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.71e2 / 0.12e2 * (eta ^ 3) - 0.967e3 / 0.60e2 * eta + 0.3e1 / 0.10e2 * (eta ^ 4) - 0.253e3 / 0.20e2 + 0.11e2 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.161e3 / 0.240e3 * (eta ^ 3) + 0.29e2 / 0.240e3 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.109e3 / 0.80e2 + 0.461e3 / 0.240e3 * eta) * sin(0.2e1 * h + 0.2e1 * g + (4 * f)) - 0.467e3 / 0.679e3 * (eta - 1) * sqrt((-eta ^ 2 + 1)) * ((-0.1715e4 / 0.467e3 + (eta ^ 5) - 0.5485e4 / 0.4203e4 * eta + 0.2621e4 / 0.467e3 * (eta ^ 4) + 0.62690e5 / 0.4203e4 * (eta ^ 3) + 0.52966e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.34118e5 / 0.4203e4 - 0.1038e4 / 0.467e3 * (eta ^ 5) - 0.138916e6 / 0.4203e4 * (eta ^ 3) - 0.13148e5 / 0.467e3 * (eta ^ 2) + 0.11234e5 / 0.4203e4 * eta - 0.52234e5 / 0.4203e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.3188e4 / 0.467e3 + 0.13368e5 / 0.467e3 * (eta ^ 3) - 0.3068e4 / 0.1401e4 * eta + 0.14996e5 / 0.1401e4 * (eta ^ 4) + 0.796e3 / 0.467e3 * (eta ^ 5) + 0.11288e5 / 0.467e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.48358e5 / 0.4203e4 * (eta ^ 3) + 0.3595e4 / 0.4203e4 * eta - 0.17911e5 / 0.4203e4 * (eta ^ 4) + 0.1209e4 / 0.467e3 - 0.727e3 / 0.1401e4 * (eta ^ 5) - 0.39818e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.14195e5 / 0.8406e4 * (eta ^ 3) + 0.11381e5 / 0.8406e4 * (eta ^ 2) + 0.10417e5 / 0.16812e5 * (eta ^ 4) - 0.5963e4 / 0.16812e5 - 0.225e3 / 0.1868e4 * eta + 0.883e3 / 0.16812e5 * (eta ^ 5)) * sin(-0.2e1 * h - 0.2e1 * g + f) + 0.20e2 / 0.63e2 * ((-0.3144e4 / 0.485e3 + (eta ^ 5) + 0.5909e4 / 0.485e3 * eta - 0.1584e4 / 0.485e3 * (eta ^ 4) + 0.1302e4 / 0.485e3 * (eta ^ 3) + 0.12136e5 / 0.485e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.6288e4 / 0.485e3 - 0.214e3 / 0.97e2 * (eta ^ 5) - 0.2492e4 / 0.485e3 * (eta ^ 3) - 0.26152e5 / 0.485e3 * (eta ^ 2) - 0.13334e5 / 0.485e3 * eta + 0.3544e4 / 0.485e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4701e4 / 0.485e3 + 0.2682e4 / 0.485e3 * (eta ^ 3) + 0.2199e4 / 0.97e2 * eta - 0.657e3 / 0.97e2 * (eta ^ 4) + 0.531e3 / 0.485e3 * (eta ^ 5) + 0.4362e4 / 0.97e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.312e3 / 0.97e2 * (eta ^ 3) - 0.3946e4 / 0.485e3 * eta + 0.1461e4 / 0.485e3 * (eta ^ 4) + 0.1557e4 / 0.485e3 + 0.74e2 / 0.485e3 * (eta ^ 5) - 0.8354e4 / 0.485e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.283e3 / 0.485e3 * (eta ^ 3) + 0.2303e4 / 0.970e3 * (eta ^ 2) - 0.183e3 / 0.388e3 * (eta ^ 4) + 0.207e3 / 0.194e3 * eta - 0.143e3 / 0.388e3 - (eta ^ 5) / 0.10e2) * (1 + eta) * (eta - 1) * sin((2 * f)) + 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(0.2e1 * h + (4 * f)) - 0.13000e5 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.306e3 / 0.325e3 * (eta ^ 3) - 0.72e2 / 0.65e2 * (eta ^ 2) - 0.202e3 / 0.325e3 * eta + 0.147e3 / 0.325e3) * (ci2 ^ 6) + (-0.401e3 / 0.325e3 * (eta ^ 4) - 0.382e3 / 0.325e3 * (eta ^ 3) + 0.452e3 / 0.325e3 * (eta ^ 2) + 0.294e3 / 0.325e3 * eta - 0.147e3 / 0.325e3) * (ci2 ^ 4) + (0.629e3 / 0.1625e4 * (eta ^ 4) + 0.122e3 / 0.325e3 * (eta ^ 3) - 0.56e2 / 0.125e3 * (eta ^ 2) - 0.114e3 / 0.325e3 * eta + 0.147e3 / 0.1625e4) * (ci2 ^ 2) - 0.38e2 / 0.1625e4 * (1 + eta) * eta * ((eta ^ 2) - 0.23e2 / 0.19e2)) * cos(f + 0.2e1 * g) + 0.215e3 / 0.4074e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.1016e4 / 0.215e3 * eta - 0.3067e4 / 0.215e3) * (ci2 ^ 6) + (-0.51e2 / 0.43e2 * (eta ^ 2) + 0.976e3 / 0.215e3 * eta + 0.3067e4 / 0.215e3) * (ci2 ^ 4) + (0.83e2 / 0.258e3 * (eta ^ 2) - 0.158e3 / 0.215e3 * eta - 0.3199e4 / 0.1290e4) * (ci2 ^ 2) - 0.2e1 / 0.129e3 * eta * (1 + eta)) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * g + (7 * f)) + 0.16e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 4) + (eta ^ 3) / 0.4e1 - 0.119e3 / 0.12e2 * (eta ^ 2) - 0.41e2 / 0.12e2 * eta + 0.173e3 / 0.12e2) * (ci2 ^ 2) - (eta ^ 4) / 0.2e1 - (eta ^ 3) / 0.4e1 + 0.31e2 / 0.12e2 * (eta ^ 2) + 0.37e2 / 0.12e2 * eta + 0.25e2 / 0.12e2) * sin(-0.2e1 * h + 0.2e1 * g + (4 * f)) + 0.16e2 / 0.2037e4 * (((eta ^ 2) - eta / 0.4e1 - 0.143e3 / 0.12e2) * (ci2 ^ 2) - (eta ^ 2) / 0.4e1 - eta / 0.4e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin((8 * f) + 0.4e1 * g) - 0.125e3 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((9 * f) + 0.4e1 * g) - 0.239e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) + 0.1691e4 / 0.239e3 * (eta ^ 2) + 0.2725e4 / 0.239e3 * eta + 0.1265e4 / 0.239e3) * (ci2 ^ 6) + (-0.293e3 / 0.239e3 * (eta ^ 3) - 0.2013e4 / 0.239e3 * (eta ^ 2) - 0.3215e4 / 0.239e3 * eta - 0.1487e4 / 0.239e3) * (ci2 ^ 4) + (0.167e3 / 0.478e3 * (eta ^ 3) + 0.1265e4 / 0.478e3 * (eta ^ 2) + 0.6179e4 / 0.1434e4 * eta + 0.959e3 / 0.478e3) * (ci2 ^ 2) - 0.9e1 / 0.478e3 * (1 + eta) * ((eta ^ 2) + 0.62e2 / 0.9e1 * eta + 0.163e3 / 0.27e2)) * sqrt((-eta ^ 2 + 1)) * sin(-0.4e1 * g - 0.2e1 * h + f) - 0.320e3 / 0.97e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.10e2 / 0.21e2 * eta - 0.8e1 / 0.7e1) * (ci2 ^ 6) + (-0.8e1 / 0.7e1 * (eta ^ 2) - 0.13e2 / 0.21e2 * eta + 0.8e1 / 0.7e1) * (ci2 ^ 4) + (0.11e2 / 0.35e2 * (eta ^ 2) + 0.22e2 / 0.105e3 * eta - 0.8e1 / 0.35e2) * (ci2 ^ 2) - (eta ^ 2) / 0.70e2 - eta / 0.70e2) * cos(0.2e1 * g + (4 * f)) + 0.2468e4 / 0.6111e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 5) + 0.3605e4 / 0.1234e4 * (eta ^ 4) - 0.4182e4 / 0.617e3 * (eta ^ 3) - 0.8665e4 / 0.617e3 * (eta ^ 2) + 0.8389e4 / 0.617e3 * eta + 0.24813e5 / 0.1234e4) * (ci2 ^ 6) + (-0.817e3 / 0.617e3 * (eta ^ 5) - 0.4981e4 / 0.1234e4 * (eta ^ 4) + 0.4806e4 / 0.617e3 * (eta ^ 3) + 0.11657e5 / 0.617e3 * (eta ^ 2) - 0.6509e4 / 0.617e3 * eta - 0.24813e5 / 0.1234e4) * (ci2 ^ 4) + (0.537e3 / 0.1234e4 * (eta ^ 5) + 0.3491e4 / 0.2468e4 * (eta ^ 4) - 0.1135e4 / 0.617e3 * (eta ^ 3) - 0.7535e4 / 0.1234e4 * (eta ^ 2) - 0.107e3 / 0.1234e4 * eta + 0.8379e4 / 0.2468e4) * (ci2 ^ 2) - 0.18e2 / 0.617e3 * ((eta ^ 2) + eta - 0.20e2 / 0.3e1) * (eta + 0.4e1 / 0.3e1) * (1 + eta) * eta) * sin(0.2e1 * g + (4 * f)) - 0.200e3 / 0.679e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) + 0.47e2 / 0.25e2 * (eta ^ 2) - 0.64e2 / 0.75e2) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 3) - 0.53e2 / 0.25e2 * (eta ^ 2) - 0.8e1 / 0.75e2 * eta + 0.64e2 / 0.75e2) * (ci2 ^ 4) + (0.151e3 / 0.450e3 * (eta ^ 3) + 0.19e2 / 0.30e2 * (eta ^ 2) + 0.22e2 / 0.225e3 * eta - 0.44e2 / 0.225e3) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (1 + eta) * eta * (eta + 0.6e1 / 0.7e1)) * sin(-0.2e1 * g + (2 * f)) + 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) - 0.4e1 / 0.5e1 * (eta ^ 4) - 0.38e2 / 0.15e2 * (eta ^ 3) + 0.24e2 / 0.5e1 * (eta ^ 2) - 0.29e2 / 0.15e2 * eta - 0.124e3 / 0.15e2) * (ci2 ^ 2) - 0.3e1 / 0.5e1 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 4) + 0.8e1 / 0.3e1 * (eta ^ 3) - (2 * eta ^ 2) - 0.31e2 / 0.15e2 * eta + 0.8e1 / 0.5e1) * sin(-0.2e1 * h + 0.2e1 * g + (2 * f)) - 0.1492e4 / 0.6111e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.3197e4 / 0.746e3 * (eta ^ 3) - 0.1851e4 / 0.746e3 * (eta ^ 2) - 0.11449e5 / 0.746e3 * eta - 0.8203e4 / 0.746e3) * (ci2 ^ 6) + (-0.399e3 / 0.373e3 * (eta ^ 4) - 0.3433e4 / 0.746e3 * (eta ^ 3) + 0.1719e4 / 0.746e3 * (eta ^ 2) + 0.11685e5 / 0.746e3 * eta + 0.8387e4 / 0.746e3) * (ci2 ^ 4) + (0.183e3 / 0.746e3 * (eta ^ 4) + 0.1507e4 / 0.1492e4 * (eta ^ 3) - 0.493e3 / 0.1492e4 * (eta ^ 2) - 0.4439e4 / 0.1492e4 * eta - 0.3157e4 / 0.1492e4) * (ci2 ^ 2) - 0.5e1 / 0.746e3 * (eta + 0.16e2 / 0.5e1) * ((1 + eta) ^ 2) * (eta - 1)) * (eta - 1) * sin(0.2e1 * h + (6 * f) + 0.4e1 * g) + 0.320e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((0.265e3 / 0.32e2 + (eta ^ 6) + 0.913e3 / 0.240e3 * (eta ^ 5) - 0.23e2 / 0.24e2 * (eta ^ 3) - 0.1473e4 / 0.80e2 * (eta ^ 2) - 0.811e3 / 0.240e3 * eta + 0.4079e4 / 0.480e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.265e3 / 0.32e2 + 0.211e3 / 0.120e3 * (eta ^ 3) + 0.401e3 / 0.80e2 * eta - 0.851e3 / 0.96e2 * (eta ^ 4) - 0.307e3 / 0.80e2 * (eta ^ 5) - (eta ^ 6) + 0.5083e4 / 0.240e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.91e2 / 0.48e2 * (eta ^ 3) - 0.1723e4 / 0.480e3 * eta + 0.2161e4 / 0.960e3 * (eta ^ 4) + 0.1337e4 / 0.960e3 + 0.31e2 / 0.32e2 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) - 0.4037e4 / 0.480e3 * (eta ^ 2)) * (ci2 ^ 2) - (eta * (1 + eta) * (eta ^ 3 + 4 * eta ^ 2 - 23 * eta - 28)) / 0.120e3) * (eta - 1) * sin(0.2e1 * g) + 0.100e3 / 0.679e3 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) + 0.21e2 / 0.50e2 * (eta ^ 2) - 0.77e2 / 0.25e2 * eta - 0.347e3 / 0.150e3) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 3) - 0.79e2 / 0.150e3 * (eta ^ 2) + 0.241e3 / 0.75e2 * eta + 0.121e3 / 0.50e2) * (ci2 ^ 4) + (0.151e3 / 0.450e3 * (eta ^ 3) + 0.19e2 / 0.100e3 * (eta ^ 2) - 0.367e3 / 0.450e3 * eta - 0.559e3 / 0.900e3) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (1 + eta) * (eta + 0.6e1 / 0.7e1) * (eta - 1)) * sin(0.2e1 * h + (2 * f)) - 0.173e3 / 0.4074e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.3692e4 / 0.173e3 * (eta ^ 3) + 0.1998e4 / 0.173e3 * (eta ^ 2) - 0.6820e4 / 0.173e3 * eta - 0.4979e4 / 0.173e3) * (ci2 ^ 6) + (-0.217e3 / 0.173e3 * (eta ^ 4) - 0.4052e4 / 0.173e3 * (eta ^ 3) - 0.2366e4 / 0.173e3 * (eta ^ 2) + 0.7148e4 / 0.173e3 * eta + 0.5423e4 / 0.173e3) * (ci2 ^ 4) + (0.409e3 / 0.1038e4 * (eta ^ 4) + 0.3526e4 / 0.519e3 * (eta ^ 3) + 0.2279e4 / 0.519e3 * (eta ^ 2) - 0.1862e4 / 0.173e3 * eta - 0.8735e4 / 0.1038e4) * (ci2 ^ 2) - 0.11e2 / 0.519e3 * (eta - 1) * ((eta ^ 3) + 0.153e3 / 0.11e2 * (eta ^ 2) + (27 * eta) + 0.163e3 / 0.11e2)) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + f) + 0.320e3 / 0.291e3 * ((1 + eta) ^ 2) * (((eta ^ 5) - 0.163e3 / 0.28e2 * (eta ^ 3) - 0.3e1 / 0.4e1 * (eta ^ 2) + 0.151e3 / 0.28e2 * eta + 0.17e2 / 0.28e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 5) + 0.193e3 / 0.28e2 * (eta ^ 3) + 0.27e2 / 0.28e2 * (eta ^ 2) - 0.173e3 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 5) - 0.297e3 / 0.140e3 * (eta ^ 3) - 0.9e1 / 0.28e2 * (eta ^ 2) + 0.251e3 / 0.140e3 * eta + 0.41e2 / 0.140e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) - 0.37e2 / 0.14e2 * eta - 0.9e1 / 0.14e2) * (eta - 1) / 0.30e2) * (ci2 - 1) * (ci2 + 1) * Delta * cos(0.2e1 * h) - 0.106e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.6769e4 / 0.53e2 * (eta ^ 4) + 0.7320e4 / 0.53e2 * (eta ^ 3) - 0.13000e5 / 0.53e2 * (eta ^ 2) - 0.11157e5 / 0.53e2 * eta + 0.3375e4 / 0.53e2) * (ci2 ^ 6) + (0.25e2 / 0.53e2 * (eta ^ 5) - 0.8435e4 / 0.53e2 * (eta ^ 4) - 0.9216e4 / 0.53e2 * (eta ^ 3) + 0.15544e5 / 0.53e2 * (eta ^ 2) + 0.13743e5 / 0.53e2 * eta - 0.3517e4 / 0.53e2) * (ci2 ^ 4) + (-0.277e3 / 0.318e3 * (eta ^ 5) + 0.16747e5 / 0.318e3 * (eta ^ 4) + 0.9073e4 / 0.159e3 * (eta ^ 3) - 0.14447e5 / 0.159e3 * (eta ^ 2) - 0.26173e5 / 0.318e3 * eta + 0.5075e4 / 0.318e3) * (ci2 ^ 2) + 0.13e2 / 0.106e3 * (eta ^ 5) - 0.1135e4 / 0.318e3 * (eta ^ 4) - 0.602e3 / 0.159e3 * (eta ^ 3) + 0.878e3 / 0.159e3 * (eta ^ 2) + 0.543e3 / 0.106e3 * eta - 0.173e3 / 0.318e3) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + f) - 0.232e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 5) - 0.9e1 / 0.29e2 * (eta ^ 4) - 0.296e3 / 0.29e2 * (eta ^ 3) - 0.36e2 / 0.29e2 * (eta ^ 2) + 0.273e3 / 0.29e2 * eta + 0.189e3 / 0.29e2) * (ci2 ^ 2) - 0.8e1 / 0.29e2 * (eta ^ 5) + 0.28e2 / 0.29e2 * (eta ^ 3) - 0.12e2 / 0.29e2 * eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((4 * f) + 0.4e1 * g) - 0.4e1 / 0.2037e4 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin(0.6e1 * g + 0.2e1 * h + (10 * f)) - 0.17120e5 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.27e2 / 0.107e3 * (eta ^ 2) - 0.155e3 / 0.107e3 * eta + 0.63e2 / 0.107e3) * (ci2 ^ 6) + (-0.131e3 / 0.107e3 * (eta ^ 3) + 0.27e2 / 0.107e3 * (eta ^ 2) + 0.187e3 / 0.107e3 * eta - 0.63e2 / 0.107e3) * (ci2 ^ 4) + (0.203e3 / 0.535e3 * (eta ^ 3) - 0.27e2 / 0.535e3 * (eta ^ 2) - 0.283e3 / 0.535e3 * eta + 0.63e2 / 0.535e3) * (ci2 ^ 2) - 0.12e2 / 0.535e3 * (eta ^ 3) + 0.16e2 / 0.535e3 * eta) * Delta * cos(0.2e1 * g + (2 * f)) + 0.424e3 / 0.679e3 * (1 + eta) * (((eta ^ 5) + 0.1231e4 / 0.318e3 * (eta ^ 4) - 0.1373e4 / 0.477e3 * (eta ^ 3) - 0.5758e4 / 0.477e3 * (eta ^ 2) - 0.434e3 / 0.477e3 * eta + 0.1817e4 / 0.318e3) * (ci2 ^ 6) + (-0.179e3 / 0.159e3 * (eta ^ 5) - 0.445e3 / 0.106e3 * (eta ^ 4) + 0.1675e4 / 0.477e3 * (eta ^ 3) + 0.6608e4 / 0.477e3 * (eta ^ 2) + 0.664e3 / 0.477e3 * eta - 0.655e3 / 0.106e3) * (ci2 ^ 4) + (0.131e3 / 0.318e3 * (eta ^ 5) + 0.267e3 / 0.212e3 * (eta ^ 4) - 0.1559e4 / 0.954e3 * (eta ^ 3) - 0.857e3 / 0.159e3 * (eta ^ 2) - 0.922e3 / 0.477e3 * eta + 0.1981e4 / 0.1908e4) * (ci2 ^ 2) - 0.11e2 / 0.477e3 * ((eta ^ 4) + 0.15e2 / 0.11e2 * (eta ^ 3) - 0.123e3 / 0.22e2 * (eta ^ 2) - 0.75e2 / 0.11e2 * eta + 0.17e2 / 0.22e2) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin(0.2e1 * h + (2 * f) + 0.4e1 * g) + 0.880e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos(0.2e1 * h + (6 * f) + 0.4e1 * g) - 0.10e2 / 0.679e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.23e2 / 0.45e2 * eta - 0.26e2 / 0.9e1) * (ci2 ^ 2) - 0.2e1 / 0.45e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.2e1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + (5 * f) + 0.2e1 * g) - 0.1100e4 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.28e2 / 0.55e2 * eta - 0.171e3 / 0.55e2) * (ci2 ^ 6) + (-0.63e2 / 0.55e2 * (eta ^ 2) - 0.36e2 / 0.55e2 * eta + 0.171e3 / 0.55e2) * (ci2 ^ 4) + (0.87e2 / 0.275e3 * (eta ^ 2) + 0.12e2 / 0.55e2 * eta - 0.171e3 / 0.275e3) * (ci2 ^ 2) - 0.4e1 / 0.275e3 * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) * cos((5 * f) + 0.2e1 * g) - 0.880e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((6 * f) + 0.2e1 * g) + 0.6040e4 / 0.6111e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) + 0.91e2 / 0.151e3 * eta - 0.276e3 / 0.151e3) * (ci2 ^ 6) + (-0.197e3 / 0.151e3 * (eta ^ 2) - 0.119e3 / 0.151e3 * eta + 0.366e3 / 0.151e3) * (ci2 ^ 4) + (0.67e2 / 0.151e3 * (eta ^ 2) + 0.203e3 / 0.755e3 * eta - 0.636e3 / 0.755e3) * (ci2 ^ 2) - 0.23e2 / 0.755e3 * (eta ^ 2) - 0.14e2 / 0.755e3 * eta + 0.9e1 / 0.151e3) * cos(-0.2e1 * h + (3 * f)) + 0.29e2 / 0.6111e4 * (ci2 ^ 2) * ((ci2 ^ 2) - 0.44e2 / 0.29e2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * g - 0.2e1 * h + (7 * f)) + 0.80e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos(-0.2e1 * g + (2 * f)) - 0.80e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos(0.2e1 * h + (2 * f)) + 0.1340e4 / 0.2037e4 * ((eta + 0.9e1 / 0.67e2) * (ci2 ^ 6) + (-0.75e2 / 0.67e2 * eta - 0.9e1 / 0.67e2) * (ci2 ^ 4) + (0.99e2 / 0.335e3 * eta + 0.9e1 / 0.335e3) * (ci2 ^ 2) - 0.4e1 / 0.335e3 * eta) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * g + f) + 0.260e3 / 0.2037e4 * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(-0.2e1 * h + (5 * f)) - 0.500e3 / 0.2037e4 * ((1 + eta) ^ 3) * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos(-0.4e1 * g - 0.2e1 * h + f) + 0.5800e4 / 0.679e3 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.95e2 / 0.87e2 * eta + 0.8e1 / 0.15e2) * (ci2 ^ 6) + (-0.101e3 / 0.87e2 * (eta ^ 2) - 0.19e2 / 0.15e2 * eta - 0.262e3 / 0.435e3) * (ci2 ^ 4) + (0.143e3 / 0.435e3 * (eta ^ 2) + 0.779e3 / 0.2175e4 * eta + 0.352e3 / 0.2175e4) * (ci2 ^ 2) - 0.7e1 / 0.435e3 * (eta ^ 2) - 0.38e2 / 0.2175e4 * eta - 0.1e1 / 0.145e3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos(0.4e1 * g + 0.2e1 * h + f) - 0.323e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.148e3 / 0.323e3 * eta - 0.1503e4 / 0.323e3) * (ci2 ^ 2) - 0.88e2 / 0.323e3 * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) * sin(0.4e1 * g + (7 * f)) + 0.403e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 2) - 0.4e1 / 0.31e2) * sqrt((-eta ^ 2 + 1)) * sin(0.6e1 * g + 0.2e1 * h + f) - 0.139e3 / 0.873e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.1300e4 / 0.973e3 * eta + 0.303e3 / 0.973e3) * (ci2 ^ 2) - 0.104e3 / 0.973e3 * eta * (1 + eta)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.4e1 * g + f) - 0.2054e4 / 0.6111e4 * (((eta ^ 2) + 0.1305e4 / 0.1027e4 * eta + 0.306e3 / 0.1027e4) * (ci2 ^ 2) - 0.110e3 / 0.1027e4 * (eta ^ 2) - 0.140e3 / 0.1027e4 * eta - 0.22e2 / 0.1027e4) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.6e1 * g + 0.2e1 * h + (3 * f)) - 0.5e1 / 0.679e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin((7 * f)) + 0.5e1 / 0.679e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * g + 0.2e1 * h + (7 * f)) - 0.677e3 / 0.4074e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.6983e4 / 0.677e3 * (eta ^ 4) - 0.20870e5 / 0.677e3 * (eta ^ 3) + 0.1498e4 / 0.677e3 * (eta ^ 2) + 0.35057e5 / 0.677e3 * eta + 0.24573e5 / 0.677e3) * (ci2 ^ 6) + (-0.801e3 / 0.677e3 * (eta ^ 5) + 0.7427e4 / 0.677e3 * (eta ^ 4) + 0.22542e5 / 0.677e3 * (eta ^ 3) - 0.866e3 / 0.677e3 * (eta ^ 2) - 0.36605e5 / 0.677e3 * eta - 0.25649e5 / 0.677e3) * (ci2 ^ 4) + (0.427e3 / 0.1354e4 * (eta ^ 5) - 0.9707e4 / 0.4062e4 * (eta ^ 4) - 0.14995e5 / 0.2031e4 * (eta ^ 3) - 0.659e3 / 0.2031e4 * (eta ^ 2) + 0.14727e5 / 0.1354e4 * eta + 0.30721e5 / 0.4062e4) * (ci2 ^ 2) - 0.31e2 / 0.2031e4 * ((eta ^ 3) - 0.123e3 / 0.31e2 * (eta ^ 2) - 0.411e3 / 0.31e2 * eta - 0.281e3 / 0.31e2) * (1 + eta) * (eta - 1)) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (5 * f) + 0.4e1 * g) + 0.802e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.2273e4 / 0.401e3 * (eta ^ 4) + 0.4304e4 / 0.401e3 * (eta ^ 3) - 0.15488e5 / 0.3609e4 * (eta ^ 2) - 0.76769e5 / 0.3609e4 * eta - 0.24203e5 / 0.1203e4) * (ci2 ^ 6) + (-0.1265e4 / 0.1203e4 * (eta ^ 5) - 0.2619e4 / 0.401e3 * (eta ^ 4) - 0.15016e5 / 0.1203e4 * (eta ^ 3) + 0.16528e5 / 0.3609e4 * (eta ^ 2) + 0.85123e5 / 0.3609e4 * eta + 0.26185e5 / 0.1203e4) * (ci2 ^ 4) + (0.551e3 / 0.2406e4 * (eta ^ 5) + 0.3403e4 / 0.2406e4 * (eta ^ 4) + 0.1155e4 / 0.401e3 * (eta ^ 3) - 0.1925e4 / 0.3609e4 * (eta ^ 2) - 0.34123e5 / 0.7218e4 * eta - 0.10829e5 / 0.2406e4) * (ci2 ^ 2) - 0.31e2 / 0.7218e4 * (eta ^ 5) - 0.433e3 / 0.7218e4 * (eta ^ 4) - 0.154e3 / 0.1203e4 * (eta ^ 3) + 0.34e2 / 0.3609e4 * (eta ^ 2) + 0.1163e4 / 0.7218e4 * eta + 0.101e3 / 0.802e3) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (3 * f) + 0.4e1 * g) + 0.4e1 / 0.2037e4 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((10 * f) + 0.4e1 * g) - 0.940e3 / 0.6111e4 * (((eta ^ 4) + 0.2097e4 / 0.470e3 * (eta ^ 3) + 0.483e3 / 0.470e3 * (eta ^ 2) - 0.3421e4 / 0.470e3 * eta - 0.2037e4 / 0.470e3) * (ci2 ^ 6) + (-0.67e2 / 0.47e2 * (eta ^ 4) - 0.2889e4 / 0.470e3 * (eta ^ 3) - 0.267e3 / 0.470e3 * (eta ^ 2) + 0.5981e4 / 0.470e3 * eta + 0.3789e4 / 0.470e3) * (ci2 ^ 4) + (0.247e3 / 0.470e3 * (eta ^ 4) + 0.2059e4 / 0.940e3 * (eta ^ 3) - 0.71e2 / 0.940e3 * (eta ^ 2) - 0.5231e4 / 0.940e3 * eta - 0.703e3 / 0.188e3) * (ci2 ^ 2) - 0.9e1 / 0.235e3 * (1 + eta) * ((eta ^ 3) + 0.26e2 / 0.9e1 * (eta ^ 2) - 0.34e2 / 0.9e1 * eta - 0.74e2 / 0.9e1)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(-0.2e1 * h + (4 * f)) - 0.2e1 / 0.2037e4 * (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 3) * ((ci2 + 1) ^ 3) * sin(0.2e1 * g - 0.2e1 * h + (8 * f)) + 0.376e3 / 0.2037e4 * ((1 + eta) ^ 2) * (((eta ^ 3) + 0.559e3 / 0.141e3 * (eta ^ 2) - 0.782e3 / 0.141e3 * eta - 0.654e3 / 0.47e2) * (ci2 ^ 6) + (-0.167e3 / 0.141e3 * (eta ^ 3) - 0.677e3 / 0.141e3 * (eta ^ 2) + 0.230e3 / 0.47e2 * eta + 0.654e3 / 0.47e2) * (ci2 ^ 4) + (0.95e2 / 0.282e3 * (eta ^ 3) + 0.389e3 / 0.282e3 * (eta ^ 2) - 0.67e2 / 0.141e3 * eta - 0.341e3 / 0.141e3) * (ci2 ^ 2) - 0.5e1 / 0.282e3 * (eta ^ 3) - 0.7e1 / 0.94e2 * (eta ^ 2) - 0.8e1 / 0.141e3 * eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((6 * f) + 0.2e1 * g) + 0.8240e4 / 0.679e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.134e3 / 0.103e3 * eta + 0.185e3 / 0.309e3) * (ci2 ^ 6) + (-0.349e3 / 0.309e3 * (eta ^ 2) - 0.454e3 / 0.309e3 * eta - 0.205e3 / 0.309e3) * (ci2 ^ 4) + (0.469e3 / 0.1545e4 * (eta ^ 2) + 0.122e3 / 0.309e3 * eta + 0.53e2 / 0.309e3) * (ci2 ^ 2) - 0.4e1 / 0.309e3 * (eta ^ 2) - 0.26e2 / 0.1545e4 * eta - 0.2e1 / 0.309e3) * cos(0.2e1 * h + (2 * f) + 0.4e1 * g) + 0.7600e4 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) + 0.47e2 / 0.38e2 * (eta ^ 3) - 0.1231e4 / 0.570e3 * (eta ^ 2) - 0.2293e4 / 0.570e3 * eta - 0.73e2 / 0.38e2) * (ci2 ^ 6) + (-0.108e3 / 0.95e2 * (eta ^ 4) - 0.267e3 / 0.190e3 * (eta ^ 3) + 0.1331e4 / 0.570e3 * (eta ^ 2) + 0.2501e4 / 0.570e3 * eta + 0.79e2 / 0.38e2) * (ci2 ^ 4) + (0.147e3 / 0.475e3 * (eta ^ 4) + 0.363e3 / 0.950e3 * (eta ^ 3) - 0.1631e4 / 0.2850e4 * (eta ^ 2) - 0.125e3 / 0.114e3 * eta - 0.97e2 / 0.190e3) * (ci2 ^ 2) - 0.13e2 / 0.950e3 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (1 + eta)) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + (3 * f) + 0.4e1 * g) + 0.4e1 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((eta ^ 2 + eta) * ci2 ^ 2 + eta ^ 2 - eta - 32) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin(0.2e1 * g - 0.2e1 * h + (6 * f)) + 0.790e3 / 0.6111e4 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.198e3 / 0.395e3 * (eta ^ 3) - 0.1724e4 / 0.395e3 * (eta ^ 2) - 0.1518e4 / 0.395e3 * eta - 0.111e3 / 0.395e3) * (ci2 ^ 2) - 0.124e3 / 0.395e3 * (1 + eta) * ((eta ^ 2) - 0.59e2 / 0.31e2) * eta) * sqrt((-eta ^ 2 + 1)) * sin((3 * f) + 0.4e1 * g) - 0.13e2 / 0.2037e4 * (((eta ^ 2) + 0.146e3 / 0.13e2 * eta + 0.121e3 / 0.13e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 2) - 0.146e3 / 0.13e2 * eta - 0.119e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.78e2 * (eta ^ 2) + 0.8e1 / 0.3e1 * eta + 0.173e3 / 0.78e2) * (ci2 ^ 2) - (eta ^ 2) / 0.78e2 + 0.1e1 / 0.78e2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h + (3 * f)) + 0.55e2 / 0.4074e4 * (((eta ^ 2) + 0.72e2 / 0.11e2 * eta + 0.261e3 / 0.55e2) * (ci2 ^ 6) + (-0.63e2 / 0.55e2 * (eta ^ 2) - 0.368e3 / 0.55e2 * eta - 0.261e3 / 0.55e2) * (ci2 ^ 4) + (0.19e2 / 0.66e2 * (eta ^ 2) + 0.262e3 / 0.165e3 * eta + 0.7e1 / 0.6e1) * (ci2 ^ 2) - 0.2e1 / 0.165e3 * eta * (1 + eta)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((3 * f) - 0.2e1 * g) - 0.34e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 3) + 0.11e2 / 0.17e2 * (eta ^ 2) - 0.277e3 / 0.51e2 * eta - 0.17e2 / 0.3e1) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.17e2) * sin(0.6e1 * g + 0.2e1 * h + (8 * f)) + 0.125e3 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.6e1 * g + 0.2e1 * h + (9 * f)) + 0.734e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.250e3 / 0.367e3 * (eta ^ 2) - 0.663e3 / 0.367e3 * eta - 0.766e3 / 0.367e3) * (ci2 ^ 2) - 0.22e2 / 0.367e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * sin(0.6e1 * g + 0.2e1 * h + (7 * f)) + 0.86e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.38e2 / 0.129e3 * (eta ^ 2) - 0.99e2 / 0.43e2 * eta - 0.50e2 / 0.129e3) * (ci2 ^ 2) - 0.26e2 / 0.129e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + f + 0.2e1 * g) + 0.512e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 4) + 0.155e3 / 0.128e3 * (eta ^ 3) - 0.121e3 / 0.128e3 * (eta ^ 2) - 0.127e3 / 0.128e3 * eta + 0.205e3 / 0.128e3) * (ci2 ^ 2) - 0.7e1 / 0.64e2 * (eta ^ 4) - 0.17e2 / 0.128e3 * (eta ^ 3) - 0.7e1 / 0.128e3 * (eta ^ 2) - 0.13e2 / 0.128e3 * eta - 0.25e2 / 0.128e3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin(0.6e1 * g + 0.2e1 * h + (4 * f)) + 0.1360e4 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.77e2 / 0.68e2 * eta + 0.217e3 / 0.340e3) * (ci2 ^ 2) - 0.49e2 / 0.340e3 * (eta ^ 2) - 0.11e2 / 0.68e2 * eta - 0.6e1 / 0.85e2) * sin(0.6e1 * g + 0.2e1 * h + (2 * f)) - 0.52e2 / 0.2037e4 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin(0.4e1 * g + 0.2e1 * h + (8 * f)) - 0.145e3 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.433e3 / 0.145e3 * (eta ^ 2) - 0.2049e4 / 0.145e3 * eta - 0.1551e4 / 0.145e3) * (ci2 ^ 6) + (-0.31e2 / 0.29e2 * (eta ^ 3) + 0.423e3 / 0.145e3 * (eta ^ 2) + 0.71e2 / 0.5e1 * eta + 0.1561e4 / 0.145e3) * (ci2 ^ 4) + (0.13e2 / 0.58e2 * (eta ^ 3) - 0.449e3 / 0.870e3 * (eta ^ 2) - 0.2231e4 / 0.870e3 * eta - 0.1667e4 / 0.870e3) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.174e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.4e1 * g + 0.2e1 * h + (7 * f)) - 0.13e2 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(-0.4e1 * g + f) - 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * sin((4 * f) - 0.2e1 * g) + 0.13e2 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.2e1 * h - 0.2e1 * g + f) + 0.323e3 / 0.4074e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) - 0.4776e4 / 0.323e3 * (eta ^ 3) - 0.12610e5 / 0.323e3 * (eta ^ 2) + 0.10856e5 / 0.323e3 * eta + 0.22703e5 / 0.323e3) * (ci2 ^ 6) + (-0.443e3 / 0.323e3 * (eta ^ 4) + 0.5616e4 / 0.323e3 * (eta ^ 3) + 0.15738e5 / 0.323e3 * (eta ^ 2) - 0.8688e4 / 0.323e3 * eta - 0.22703e5 / 0.323e3) * (ci2 ^ 4) + (0.923e3 / 0.1938e4 * (eta ^ 4) - 0.4550e4 / 0.969e3 * (eta ^ 3) - 0.14131e5 / 0.969e3 * (eta ^ 2) + 0.146e3 / 0.323e3 * eta + 0.7817e4 / 0.646e3) * (ci2 ^ 2) - 0.10e2 / 0.323e3 * (1 + eta) * eta * ((eta ^ 2) - 0.44e2 / 0.5e1 * eta - 0.283e3 / 0.15e2)) * sin((5 * f) + 0.2e1 * g) + 0.6067e4 / 0.4074e4 * (((eta ^ 5) - 0.46919e5 / 0.6067e4 * (eta ^ 4) - 0.180282e6 / 0.6067e4 * (eta ^ 3) - 0.197014e6 / 0.6067e4 * (eta ^ 2) - 0.71305e5 / 0.6067e4 * eta - 0.1491e4 / 0.6067e4) * (ci2 ^ 6) + (-0.6699e4 / 0.6067e4 * (eta ^ 5) + 0.55311e5 / 0.6067e4 * (eta ^ 4) + 0.210362e6 / 0.6067e4 * (eta ^ 3) + 0.229910e6 / 0.6067e4 * (eta ^ 2) + 0.83713e5 / 0.6067e4 * eta + 0.2059e4 / 0.6067e4) * (ci2 ^ 4) + (0.3241e4 / 0.12134e5 * (eta ^ 5) - 0.36237e5 / 0.12134e5 * (eta ^ 4) - 0.197185e6 / 0.18201e5 * (eta ^ 3) - 0.216271e6 / 0.18201e5 * (eta ^ 2) - 0.165929e6 / 0.36402e5 * eta - 0.9227e4 / 0.36402e5) * (ci2 ^ 2) - 0.158e3 / 0.18201e5 * ((eta ^ 4) - 0.1622e4 / 0.79e2 * (eta ^ 3) - 0.3666e4 / 0.79e2 * (eta ^ 2) - 0.2122e4 / 0.79e2 * eta - 0.173e3 / 0.79e2) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin(0.4e1 * g + 0.2e1 * h + f) + 0.8080e4 / 0.2037e4 * (((eta ^ 3) + 0.63e2 / 0.101e3 * (eta ^ 2) - 0.117e3 / 0.101e3 * eta - 0.115e3 / 0.101e3) * (ci2 ^ 6) + (-0.107e3 / 0.101e3 * (eta ^ 3) - 0.69e2 / 0.101e3 * (eta ^ 2) + 0.123e3 / 0.101e3 * eta + 0.121e3 / 0.101e3) * (ci2 ^ 4) + (0.25e2 / 0.101e3 * (eta ^ 3) + 0.87e2 / 0.505e3 * (eta ^ 2) - 0.141e3 / 0.505e3 * eta - 0.139e3 / 0.505e3) * (ci2 ^ 2) - 0.3e1 / 0.505e3 * (eta - 1) * ((1 + eta) ^ 2)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * cos(0.2e1 * h + (4 * f) + 0.4e1 * g) - 0.37e2 / 0.582e3 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 5) + 0.16897e5 / 0.2331e4 * (eta ^ 4) + 0.13522e5 / 0.777e3 * (eta ^ 3) + 0.5738e4 / 0.259e3 * (eta ^ 2) + 0.17887e5 / 0.2331e4 * eta - 0.2809e4 / 0.777e3) * (ci2 ^ 6) + (-0.593e3 / 0.777e3 * (eta ^ 5) - 0.13721e5 / 0.2331e4 * (eta ^ 4) - 0.11474e5 / 0.777e3 * (eta ^ 3) - 0.7530e4 / 0.259e3 * (eta ^ 2) - 0.61319e5 / 0.2331e4 * eta - 0.5119e4 / 0.777e3) * (ci2 ^ 4) + (0.23e2 / 0.666e3 * (eta ^ 5) + 0.3851e4 / 0.4662e4 * (eta ^ 4) + 0.1775e4 / 0.777e3 * (eta ^ 3) + 0.1079e4 / 0.111e3 * (eta ^ 2) + 0.70709e5 / 0.4662e4 * eta + 0.10709e5 / 0.1554e4) * (ci2 ^ 2) + 0.46e2 / 0.2331e4 * (1 + eta) * ((eta ^ 4) + 0.2e1 / 0.23e2 * (eta ^ 3) - 0.26e2 / 0.23e2 * (eta ^ 2) - 0.802e3 / 0.23e2 * eta - 0.909e3 / 0.23e2)) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * h + (3 * f)) - 0.480e3 / 0.679e3 * ((1 + eta) ^ 3) * (((eta ^ 2) + 0.308e3 / 0.27e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) - 0.224e3 / 0.9e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 2) + 0.188e3 / 0.9e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 2) - 0.8e1) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 + 0.10e2 / 0.9e1) * eta * Delta * (eta - 1) * cos(0.2e1 * g + 0.2e1 * h) + 0.220e3 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.199e3 / 0.110e3 * eta + 0.91e2 / 0.110e3) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.47e2 / 0.22e2 * eta - 0.107e3 / 0.110e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.60e2 * eta + 0.69e2 / 0.220e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.13e2 / 0.330e3 * eta - 0.1e1 / 0.55e2) * ((eta - 1) ^ 3) * sin(-0.4e1 * g - 0.2e1 * h + (2 * f)) - 0.260e3 / 0.6111e4 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.551e3 / 0.130e3 * eta + 0.71e2 / 0.26e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.787e3 / 0.130e3 * eta - 0.539e3 / 0.130e3) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.9e1 / 0.4e1 * eta + 0.33e2 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.21e2 / 0.130e3 * eta - 0.8e1 / 0.65e2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sin(-0.2e1 * h + (6 * f)) + 0.1480e4 / 0.6111e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.67e2 / 0.74e2 * (eta ^ 4) - 0.3267e4 / 0.185e3 * (eta ^ 3) - 0.6946e4 / 0.185e3 * (eta ^ 2) - 0.2192e4 / 0.185e3 * eta + 0.3297e4 / 0.370e3) * (ci2 ^ 6) + (-0.229e3 / 0.185e3 * (eta ^ 5) - 0.559e3 / 0.370e3 * (eta ^ 4) + 0.3753e4 / 0.185e3 * (eta ^ 3) + 0.8252e4 / 0.185e3 * (eta ^ 2) + 0.3166e4 / 0.185e3 * eta - 0.2853e4 / 0.370e3) * (ci2 ^ 4) + (0.33e2 / 0.74e2 * (eta ^ 5) + 0.109e3 / 0.148e3 * (eta ^ 4) - 0.2221e4 / 0.370e3 * (eta ^ 3) - 0.2507e4 / 0.185e3 * (eta ^ 2) - 0.1177e4 / 0.185e3 * eta + 0.767e3 / 0.740e3) * (ci2 ^ 2) - 0.7e1 / 0.185e3 * (1 + eta) * ((eta ^ 4) + 0.8e1 / 0.7e1 * (eta ^ 3) - 0.145e3 / 0.14e2 * (eta ^ 2) - 0.80e2 / 0.7e1 * eta - 0.17e2 / 0.14e2)) * (eta - 1) * sin(-0.2e1 * h + (2 * f)) + 0.80e2 / 0.291e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 5) + 0.101e3 / 0.20e2 * (eta ^ 4) + 0.2867e4 / 0.280e3 * (eta ^ 3) + 0.11843e5 / 0.840e3 * (eta ^ 2) + 0.10747e5 / 0.840e3 * eta + 0.4079e4 / 0.840e3) * (ci2 ^ 6) + (-(eta ^ 5) - 0.2237e4 / 0.420e3 * (eta ^ 4) - 0.9353e4 / 0.840e3 * (eta ^ 3) - 0.13331e5 / 0.840e3 * (eta ^ 2) - 0.12443e5 / 0.840e3 * eta - 0.4807e4 / 0.840e3) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * (eta ^ 5) + 0.1157e4 / 0.840e3 * (eta ^ 4) + 0.1737e4 / 0.560e3 * (eta ^ 3) + 0.8273e4 / 0.1680e4 * (eta ^ 2) + 0.2771e4 / 0.560e3 * eta + 0.1107e4 / 0.560e3) * (ci2 ^ 2) - 0.13e2 / 0.420e3 * ((eta ^ 3) + 0.31e2 / 0.13e2 * (eta ^ 2) + 0.64e2 / 0.13e2 * eta + 0.48e2 / 0.13e2) * (1 + eta)) * sin(0.4e1 * g + 0.2e1 * h) + 0.15e2 / 0.679e3 * ((1 + eta) ^ 2) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin(-0.2e1 * g - 0.2e1 * h + (5 * f)) - 0.76e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) + 0.14e2 / 0.57e2 * (eta ^ 4) - 0.162e3 / 0.19e2 * (eta ^ 3) - 0.376e3 / 0.57e2 * (eta ^ 2) + 0.425e3 / 0.57e2 * eta + 0.206e3 / 0.19e2) * (ci2 ^ 2) - 0.3e1 / 0.19e2 * ((eta ^ 3) + 0.2e1 / 0.9e1 * (eta ^ 2) - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * (1 + eta) * (eta - 1)) * sin(0.6e1 * g + 0.2e1 * h + (6 * f)) - 0.241e3 / 0.4074e4 * ((0.33207e5 / 0.241e3 + (eta ^ 6) - 0.15536e5 / 0.2169e4 * (eta ^ 5) - 0.47008e5 / 0.723e3 * (eta ^ 3) + 0.51595e5 / 0.2169e4 * (eta ^ 2) + 0.436496e6 / 0.2169e4 * eta - 0.68659e5 / 0.2169e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.33207e5 / 0.241e3 + 0.17088e5 / 0.241e3 * (eta ^ 3) - 0.398944e6 / 0.2169e4 * eta + 0.45971e5 / 0.2169e4 * (eta ^ 4) + 0.6304e4 / 0.2169e4 * (eta ^ 5) - 0.1091e4 / 0.723e3 * (eta ^ 6) + 0.13285e5 / 0.2169e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.2904e4 / 0.241e3 * (eta ^ 3) + 0.50420e5 / 0.2169e4 * eta - 0.2009e4 / 0.4338e4 * (eta ^ 4) + 0.10869e5 / 0.482e3 + 0.388e3 / 0.2169e4 * (eta ^ 5) + 0.769e3 / 0.1446e4 * (eta ^ 6) - 0.47431e5 / 0.4338e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.92e2 / 0.2169e4 * (1 + eta) * eta * ((eta ^ 4) + 0.78e2 / 0.23e2 * (eta ^ 3) + 0.212e3 / 0.23e2 * (eta ^ 2) - 0.422e3 / 0.23e2 * eta - 0.635e3 / 0.23e2)) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * sin((3 * f) + 0.2e1 * g) + 0.102e3 / 0.679e3 * (1 + eta) * (((eta ^ 3) + 0.188e3 / 0.153e3 * (eta ^ 2) - 0.587e3 / 0.153e3 * eta - 0.62e2 / 0.17e2) * (ci2 ^ 8) + (-0.116e3 / 0.51e2 * (eta ^ 3) - 0.1318e4 / 0.459e3 * (eta ^ 2) + 0.3928e4 / 0.459e3 * eta + 0.3818e4 / 0.459e3) * (ci2 ^ 6) + (0.274e3 / 0.153e3 * (eta ^ 3) + 0.898e3 / 0.459e3 * (eta ^ 2) - 0.22e2 / 0.3e1 * eta - 0.118e3 / 0.17e2) * (ci2 ^ 4) + (-0.86e2 / 0.153e3 * (eta ^ 3) - 0.149e3 / 0.459e3 * (eta ^ 2) + 0.440e3 / 0.153e3 * eta + 0.1147e4 / 0.459e3) * (ci2 ^ 2) + 0.107e3 / 0.1836e4 * (eta ^ 3) - 0.43e2 / 0.1836e4 * (eta ^ 2) - 0.2269e4 / 0.5508e4 * eta - 0.65e2 / 0.204e3) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin(-0.2e1 * g - 0.2e1 * h + (3 * f)) - 0.100e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * g + (7 * f)) - 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos(0.2e1 * h + (3 * f)) + 0.100e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos(0.4e1 * g + 0.2e1 * h + (7 * f)) + 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos((3 * f) - 0.2e1 * g) + ((0.425e3 / 0.291e3 + (eta ^ 6) + 0.4100e4 / 0.873e3 * (eta ^ 5) - 0.80740e5 / 0.6111e4 * eta + 0.59183e5 / 0.6111e4 * (eta ^ 4) - 0.35800e5 / 0.6111e4 * (eta ^ 3) - 0.23069e5 / 0.873e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.850e3 / 0.291e3 - 0.1502e4 / 0.679e3 * (eta ^ 6) - 0.7032e4 / 0.679e3 * (eta ^ 5) + 0.1200e4 / 0.97e2 * (eta ^ 3) + 0.350374e6 / 0.6111e4 * (eta ^ 2) + 0.1832e4 / 0.63e2 * eta - 0.130142e6 / 0.6111e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.1500e4 / 0.679e3 - 0.7040e4 / 0.679e3 * (eta ^ 3) - 0.49712e5 / 0.2037e4 * eta + 0.38684e5 / 0.2037e4 * (eta ^ 4) + 0.18992e5 / 0.2037e4 * (eta ^ 5) + 0.3436e4 / 0.2037e4 * (eta ^ 6) - 0.98204e5 / 0.2037e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.24952e5 / 0.6111e4 * (eta ^ 3) + 0.56668e5 / 0.6111e4 * eta - 0.7027e4 / 0.873e3 * (eta ^ 4) - 0.1525e4 / 0.2037e4 - 0.24436e5 / 0.6111e4 * (eta ^ 5) - 0.1039e4 / 0.2037e4 * (eta ^ 6) + 0.113873e6 / 0.6111e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.3536e4 / 0.6111e4 * (eta ^ 3) - 0.63691e5 / 0.24444e5 * (eta ^ 2) + 0.29891e5 / 0.24444e5 * (eta ^ 4) - 0.7816e4 / 0.6111e4 * eta + 0.715e3 / 0.8148e4 + 0.1255e4 / 0.24444e5 * (eta ^ 6) + 0.3736e4 / 0.6111e4 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * sin(f) - 0.19e2 / 0.97e2 * ((0.10319e5 / 0.1197e4 - 0.6994e4 / 0.1197e4 * eta + (eta ^ 4) - 0.58e2 / 0.399e3 * (eta ^ 3) - 0.268e3 / 0.21e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.20638e5 / 0.1197e4 + 0.212e3 / 0.1197e4 * (eta ^ 3) + 0.32944e5 / 0.1197e4 * (eta ^ 2) + 0.16204e5 / 0.1197e4 * eta - 0.902e3 / 0.399e3 * (eta ^ 4)) * (ci2 ^ 6) + (0.1684e4 / 0.133e3 - 0.1360e4 / 0.1197e4 * (eta ^ 3) - 0.12560e5 / 0.1197e4 * eta + 0.2116e4 / 0.1197e4 * (eta ^ 4) - 0.26648e5 / 0.1197e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.74e2 / 0.63e2 * (eta ^ 3) + 0.3826e4 / 0.1197e4 * eta - 0.659e3 / 0.1197e4 * (eta ^ 4) - 0.691e3 / 0.171e3 + 0.9592e4 / 0.1197e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.128e3 / 0.513e3 * (eta ^ 3) - 0.7409e4 / 0.7182e4 * (eta ^ 2) + 0.815e3 / 0.14364e5 * (eta ^ 4) + 0.715e3 / 0.1596e4 - 0.1280e4 / 0.3591e4 * eta) * (1 + eta) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((3 * f))) * R__e ^ 4 * J ^ 2 / ((1 + eta) ^ 2) / a ^ 4 / (eta ^ 11)];
D6 = [0.315e3 / 0.2e1 * R__e ^ 4 * J ^ 2 * (((ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.7e1) * (eta - 1) * sin((5 * g + h + 2 * f)) / 0.12e2 - 0.13e2 / 0.210e3 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-eta - 0.46e2 / 0.13e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.8e1 / 0.13e2) * (eta - 1) * sin((3 * g + h + 6 * f)) + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-eta - 0.4e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.1e1 / 0.5e1) * sin((-g + h + 2 * f)) / 0.14e2 + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) + 0.3e1 / 0.2e1 * eta + 0.7e1 / 0.5e1) * (ci2 ^ 4) + (-(eta ^ 2) - 0.3e1 / 0.2e1 * eta - 0.7e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * (eta ^ 2) + 0.7e1 / 0.20e2 * eta + 0.1e1 / 0.3e1) * sin((3 * g + h)) / 0.7e1 + 0.11e2 / 0.7e1 * ((1 + eta) ^ 2) * ((ci2 ^ 6) - 0.13e2 / 0.11e2 * (ci2 ^ 4) + 0.41e2 / 0.110e3 * (ci2 ^ 2) - 0.7e1 / 0.330e3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * cos((3 * g + h)) + 0.6e1 / 0.7e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * cos((3 * g + h + 4 * f)) - 0.11e2 / 0.28e2 * (((eta ^ 3) + 0.137e3 / 0.55e2 * (eta ^ 2) - 0.551e3 / 0.165e3 * eta - 0.91e2 / 0.15e2) * (ci2 ^ 6) + (-0.191e3 / 0.165e3 * (eta ^ 3) - 0.43e2 / 0.15e2 * (eta ^ 2) + 0.577e3 / 0.165e3 * eta + 0.1063e4 / 0.165e3) * (ci2 ^ 4) + (0.103e3 / 0.330e3 * (eta ^ 3) + 0.49e2 / 0.66e2 * (eta ^ 2) - 0.233e3 / 0.330e3 * eta - 0.443e3 / 0.330e3) * (ci2 ^ 2) - (eta ^ 3) / 0.66e2 - (eta ^ 2) / 0.30e2 + eta / 0.66e2 + 0.1e1 / 0.30e2) * (ci2 - 1) * (ci2 + 1) * sin((3 * g + h + 4 * f)) - ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.134e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.93e2 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.26e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.1e1 / 0.2e1) * (1 + eta) * (eta - 1) * sin((g + h + 4 * f)) / 0.84e2 + 0.5e1 / 0.42e2 * (((eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) - 0.71e2 / 0.5e1 * eta - 0.454e3 / 0.25e2) * (ci2 ^ 6) + (-0.29e2 / 0.25e2 * (eta ^ 3) + 0.16e2 / 0.25e2 * (eta ^ 2) + 0.383e3 / 0.25e2 * eta + 0.482e3 / 0.25e2) * (ci2 ^ 4) + (0.21e2 / 0.50e2 * (eta ^ 3) + (eta ^ 2) / 0.25e2 - 0.41e2 / 0.10e2 * eta - 0.119e3 / 0.25e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.25e2) * (ci2 - 1) * (ci2 + 1) * sin((g - h + 2 * f)) - 0.3e1 / 0.7e1 * cos((g + h)) * (1 + eta) * Delta * (((eta ^ 2) + 0.77e2 / 0.9e1) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) - 0.56e2 / 0.3e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 2) + 0.47e2 / 0.3e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 2) - 0.6e1) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 + 0.5e1 / 0.6e1) + 0.13e2 / 0.70e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.38e2 / 0.13e2 * (eta ^ 2) - 0.205e3 / 0.39e2 * eta - 0.232e3 / 0.39e2) * (ci2 ^ 6) + (-0.43e2 / 0.39e2 * (eta ^ 3) - 0.118e3 / 0.39e2 * (eta ^ 2) + 0.233e3 / 0.39e2 * eta + 0.20e2 / 0.3e1) * (ci2 ^ 4) + (0.35e2 / 0.78e2 * (eta ^ 3) + 0.32e2 / 0.39e2 * (eta ^ 2) - 0.5e1 / 0.2e1 * eta - 0.34e2 / 0.13e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.39e2) * sin((3 * g + h + 2 * f)) - 0.13e2 / 0.84e2 * (((eta ^ 2) + 0.16e2 / 0.5e1 * eta + 0.25e2 / 0.13e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.296e3 / 0.65e2 * eta - 0.187e3 / 0.65e2) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.22e2 / 0.13e2 * eta + 0.147e3 / 0.130e3) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.8e1 / 0.65e2 * eta - 0.11e2 / 0.130e3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((g - h + 4 * f)) - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.16e2 / 0.15e2 * (eta ^ 2) - 0.113e3 / 0.30e2 * eta - 0.14e2 / 0.3e1 + (eta ^ 4) + 0.47e2 / 0.30e2 * (eta ^ 3)) * (ci2 ^ 4) + (-(eta ^ 4) - 0.47e2 / 0.30e2 * (eta ^ 3) - 0.16e2 / 0.15e2 * (eta ^ 2) + 0.113e3 / 0.30e2 * eta + 0.14e2 / 0.3e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * (eta ^ 4) + 0.23e2 / 0.60e2 * (eta ^ 3) + 0.7e1 / 0.30e2 * (eta ^ 2) - 0.67e2 / 0.60e2 * eta - 0.19e2 / 0.15e2) * sin((g - h)) / 0.7e1 - 0.2e1 / 0.21e2 * (((eta ^ 2) - 0.26e2 / 0.5e1 * eta - 0.53e2 / 0.10e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + 0.117e3 / 0.10e2 * eta + 0.243e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.51e2 / 0.5e1 * eta - 0.51e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.41e2 / 0.10e2 * eta + 0.37e2 / 0.10e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.3e1 / 0.5e1 * eta - 0.19e2 / 0.40e2) * (eta - 1) * sin((-g - h + 2 * f)) + ((-0.67e2 / 0.60e2 - 0.65e2 / 0.84e2 * eta - (eta ^ 4) / 0.21e2 - (eta ^ 3) / 0.12e2 - 0.5e1 / 0.12e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.67e2 / 0.30e2 + (eta ^ 3) / 0.6e1 + 0.5e1 / 0.6e1 * (eta ^ 2) + 0.65e2 / 0.42e2 * eta + 0.2e1 / 0.21e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.727e3 / 0.420e3 - (eta ^ 3) / 0.20e2 - 0.107e3 / 0.84e2 * eta - (eta ^ 4) / 0.35e2 - 0.241e3 / 0.420e3 * (eta ^ 2)) * (ci2 ^ 4) + (-(eta ^ 3) / 0.30e2 + eta / 0.2e1 - 0.2e1 / 0.105e3 * (eta ^ 4) + 0.43e2 / 0.70e2 + 0.11e2 / 0.70e2 * (eta ^ 2)) * (ci2 ^ 2) + (eta ^ 3) / 0.120e3 - 0.13e2 / 0.840e3 * (eta ^ 2) + (eta ^ 4) / 0.210e3 - 0.11e2 / 0.168e3 * eta - 0.3e1 / 0.40e2) * sin((g + h)) + ((-0.61e2 / 0.35e2 - (eta ^ 3) / 0.7e1 + 0.5e1 / 0.7e1 * (eta ^ 2) - 0.13e2 / 0.35e2 * eta) * (ci2 ^ 8) + (0.109e3 / 0.30e2 - 0.331e3 / 0.210e3 * (eta ^ 2) + 0.151e3 / 0.210e3 * eta + 0.13e2 / 0.42e2 * (eta ^ 3)) * (ci2 ^ 6) + (-0.99e2 / 0.35e2 - (eta ^ 3) / 0.7e1 + 0.9e1 / 0.7e1 * (eta ^ 2) - 0.5e1 / 0.7e1 * eta) * (ci2 ^ 4) + (0.34e2 / 0.35e2 - (eta ^ 3) / 0.35e2 - 0.16e2 / 0.35e2 * (eta ^ 2) + 0.13e2 / 0.35e2 * eta) * (ci2 ^ 2) + (eta ^ 3) / 0.70e2 + 0.2e1 / 0.35e2 * (eta ^ 2) - 0.5e1 / 0.84e2 * eta - 0.7e1 / 0.60e2) * sin((g + h + 2 * f)) - (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h)) / 0.168e3 + (((eta ^ 2) - 0.17e2 / 0.7e1) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 2) + 0.19e2 / 0.7e1) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 2) - 0.53e2 / 0.70e2) * (ci2 ^ 2) - (eta ^ 2) / 0.30e2 + 0.1e1 / 0.30e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * cos((g - h)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.3e1 / 0.10e2) * sin((5 * g + h + 4 * f)) / 0.42e2 - (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 2) - (eta ^ 2) / 0.7e1 + 0.1e1 / 0.7e1) * sin((5 * g + h + 6 * f)) / 0.60e2 - (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 8 * f)) / 0.280e3 + 0.12e2 / 0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.4e1 / 0.3e1 * (ci2 ^ 4) + 0.7e1 / 0.15e2 * (ci2 ^ 2) - 0.1e1 / 0.30e2) * cos((g - h + 2 * f)) + 0.32e2 / 0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.9e1 / 0.8e1 * (ci2 ^ 4) + 0.3e1 / 0.10e2 * (ci2 ^ 2) - 0.1e1 / 0.80e2) * cos((3 * g + h + 2 * f)) + 0.3e1 / 0.140e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.11e2 / 0.9e1) * (ci2 ^ 2) - 0.5e1 / 0.9e1 * (eta ^ 2) + 0.5e1 / 0.9e1) * sin((3 * g - h + 2 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.14e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 2) / 0.3e1 - 0.1e1) * sin((3 * g - h + 4 * f)) / 0.140e3 - (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 3) * ((ci2 + 1) ^ 3) * sin((3 * g - h + 6 * f)) / 0.420e3) * sqrt((-eta ^ 2 + 1)) - 0.3e1 / 0.28e2 * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * ((eta - 1) ^ 2) * sin((-g - h + 3 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2 - 3) * ci2 ^ 2) - 0.2e1 / 0.5e1 * (eta ^ 2) + 0.2e1 / 0.5e1) * sin((3 * g - h + 3 * f)) / 0.42e2 - (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 2) * (ci2 + 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + 5 * f)) / 0.420e3 + 0.27e2 / 0.70e2 * (((eta ^ 3) + 0.367e3 / 0.81e2 * (eta ^ 2) + 0.797e3 / 0.81e2 * eta + 0.475e3 / 0.81e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 3) - 0.812e3 / 0.81e2 * (eta ^ 2) - 0.1768e4 / 0.81e2 * eta - 0.1064e4 / 0.81e2) * (ci2 ^ 6) + (0.46e2 / 0.27e2 * (eta ^ 3) + 0.26e2 / 0.3e1 * (eta ^ 2) + 0.506e3 / 0.27e2 * eta + 0.302e3 / 0.27e2) * (ci2 ^ 4) + (-0.14e2 / 0.27e2 * (eta ^ 3) - 0.94e2 / 0.27e2 * (eta ^ 2) - 0.200e3 / 0.27e2 * eta - 0.116e3 / 0.27e2) * (ci2 ^ 2) + 0.17e2 / 0.324e3 * (eta ^ 3) + 0.83e2 / 0.162e3 * (eta ^ 2) + 0.347e3 / 0.324e3 * eta + 0.97e2 / 0.162e3) * (eta - 1) * sin((-g - h + f)) + 0.9e1 / 0.140e3 * (((eta ^ 3) - 0.74e2 / 0.81e2 * (eta ^ 2) - 0.469e3 / 0.81e2 * eta - 0.230e3 / 0.81e2) * (ci2 ^ 6) + (-0.25e2 / 0.27e2 * (eta ^ 3) + 0.280e3 / 0.81e2 * (eta ^ 2) + 0.1031e4 / 0.81e2 * eta + 0.592e3 / 0.81e2) * (ci2 ^ 4) + (0.25e2 / 0.162e3 * (eta ^ 3) - 0.163e3 / 0.81e2 * (eta ^ 2) - 0.1025e4 / 0.162e3 * eta - 0.323e3 / 0.81e2) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.162e3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((g - h + 3 * f)) - (((eta ^ 3) + 0.391e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3203e4 / 0.180e3) * (ci2 ^ 6) + (-0.31e2 / 0.30e2 * (eta ^ 3) - 0.1367e4 / 0.180e3 * (eta ^ 2) - 0.36e2 / 0.5e1 * eta + 0.713e3 / 0.36e2) * (ci2 ^ 4) + (0.13e2 / 0.60e2 * (eta ^ 3) + 0.641e3 / 0.360e3 * (eta ^ 2) + 0.9e1 / 0.5e1 * eta - 0.311e3 / 0.72e2) * (ci2 ^ 2) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.360e3) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sin((3 * g + h + 3 * f)) / 0.7e1 + 0.3e1 / 0.40e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * sin((-3 * g - h + f)) + 0.9e1 / 0.280e3 * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((g - h + 5 * f)) + 0.13e2 / 0.140e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.59e2 / 0.13e2 * eta - 0.138e3 / 0.13e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 2) + 0.59e2 / 0.13e2 * eta + 0.140e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.78e2 * (eta ^ 2) - 0.5e1 / 0.6e1 * eta - 0.77e2 / 0.39e2) * (ci2 ^ 2) - (eta ^ 2) / 0.78e2 + 0.1e1 / 0.78e2) * (eta - 1) * sin((3 * g + h + 5 * f)) - 0.13e2 / 0.21e2 * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * cos((g - h + 3 * f)) - 0.10e2 / 0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 2) + 0.31e2 / 0.15e2) * (ci2 ^ 4) + (0.23e2 / 0.75e2 * (eta ^ 2) - 0.37e2 / 0.75e2) * (ci2 ^ 2) - (eta ^ 2) / 0.75e2 + 0.1e1 / 0.75e2) * cos((3 * g + h + 3 * f)) - (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * cos((3 * g + h + 5 * f)) / 0.7e1 + 0.41e2 / 0.420e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.4e1 / 0.41e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin((5 * g + h + 3 * f)) - 0.13e2 / 0.210e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 2) - 0.2e1 / 0.13e2 * (eta ^ 2) + 0.2e1 / 0.13e2) * sin((5 * g + h + 5 * f)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((-g + h + 3 * f)) / 0.280e3 - 0.13e2 / 0.420e3 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((3 * g - h + f)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((3 * g + h + 7 * f)) / 0.56e2 - 0.11e2 / 0.420e3 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * g + h + 7 * f)) + 0.2e1 / 0.35e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.585e3 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.4e1 * eta - 0.871e3 / 0.8e1) * (ci2 ^ 6) + ((eta ^ 3) / 0.4e1 - 0.731e3 / 0.8e1 * (eta ^ 2) - 0.27e2 / 0.2e1 * eta + 0.1025e4 / 0.8e1) * (ci2 ^ 4) + (-0.17e2 / 0.24e2 * (eta ^ 3) + 0.1463e4 / 0.48e2 * (eta ^ 2) + 0.15e2 / 0.4e1 * eta - 0.1837e4 / 0.48e2) * (ci2 ^ 2) + 0.5e1 / 0.48e2 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * sin((g - h + f)) - 0.9e1 / 0.70e2 * (((eta ^ 2) - 0.8e1 / 0.27e2 * eta - 0.137e3 / 0.27e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) + 0.16e2 / 0.27e2 * eta + 0.280e3 / 0.27e2) * (ci2 ^ 6) + (0.46e2 / 0.27e2 * (eta ^ 2) - 0.8e1 / 0.9e1 * eta - 0.206e3 / 0.27e2) * (ci2 ^ 4) + (-0.14e2 / 0.27e2 * (eta ^ 2) + 0.16e2 / 0.27e2 * eta + 0.64e2 / 0.27e2) * (ci2 ^ 2) + 0.17e2 / 0.324e3 * (eta ^ 2) - 0.31e2 / 0.324e3 * eta - 0.41e2 / 0.162e3) * (1 + eta) * (eta - 1) * sin((g + h + 3 * f)) - 0.97e2 / 0.140e3 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) - 0.738e3 / 0.97e2 * (eta ^ 2) - 0.1781e4 / 0.97e2 * eta - 0.942e3 / 0.97e2) * (ci2 ^ 6) + (-0.107e3 / 0.97e2 * (eta ^ 3) + 0.864e3 / 0.97e2 * (eta ^ 2) + 0.2071e4 / 0.97e2 * eta + 0.1096e4 / 0.97e2) * (ci2 ^ 4) + (0.155e3 / 0.582e3 * (eta ^ 3) - 0.829e3 / 0.291e3 * (eta ^ 2) - 0.3827e4 / 0.582e3 * eta - 0.335e3 / 0.97e2) * (ci2 ^ 2) - 0.5e1 / 0.582e3 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * sin((3 * g + h + f)) + (1 + eta) * ((ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.53e2 / 0.5e1 * eta + 0.46e2 / 0.5e1) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.53e2 / 0.5e1 * eta - 0.44e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.2e1 + 0.79e2 / 0.30e2 * eta + 0.31e2 / 0.15e2) * (ci2 ^ 2) - (eta ^ 2) / 0.30e2 + 0.1e1 / 0.30e2) * (eta - 1) * sin((-g + h + f)) / 0.4e1 - 0.14e2 * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 2) + 0.1e1) * (ci2 ^ 4) + (0.3e1 / 0.7e1 * (eta ^ 2) - 0.13e2 / 0.35e2) * (ci2 ^ 2) - (eta ^ 2) / 0.35e2 + 0.1e1 / 0.35e2) * (ci2 - 1) * (ci2 + 1) * Delta * cos((g - h + f)) - 0.25e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * Delta * (eta - 1) * cos((3 * g + h + f)) + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * cos((-g + h + f)) - 0.3e1 / 0.20e2 * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((eta - 1) ^ 2) * sin((g + h + 5 * f)) + 0.3e1 * (((eta ^ 3) + 0.211e3 / 0.90e2 * (eta ^ 2) + 0.18e2 / 0.5e1 * eta - 0.881e3 / 0.90e2) * (ci2 ^ 8) + (-0.11e2 / 0.5e1 * (eta ^ 3) - 0.232e3 / 0.45e2 * (eta ^ 2) - 0.39e2 / 0.5e1 * eta + 0.938e3 / 0.45e2) * (ci2 ^ 6) + (0.5e1 / 0.3e1 * (eta ^ 3) + 0.79e2 / 0.15e2 * (eta ^ 2) + 0.29e2 / 0.5e1 * eta - 0.17e2) * (ci2 ^ 4) + (-(eta ^ 3) / 0.2e1 - 0.8e1 / 0.3e1 * (eta ^ 2) - 0.17e2 / 0.10e2 * eta + 0.283e3 / 0.45e2) * (ci2 ^ 2) + (eta ^ 3) / 0.20e2 + 0.161e3 / 0.360e3 * (eta ^ 2) + eta / 0.6e1 - 0.299e3 / 0.360e3) * sin((g + h + f))) / 0.7e1) / a ^ 5 / (eta ^ 8) / (1 + eta) 0.315e3 / 0.8e1 * ((-0.3e1 / 0.7e1 * cos((g + h)) * ((-0.2747e4 / 0.90e2 + (eta ^ 6) + 0.16e2 / 0.9e1 * (eta ^ 5) - 0.1036e4 / 0.45e2 * eta + 0.283e3 / 0.30e2 * (eta ^ 4) + (18 * eta ^ 3) + 0.794e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.5963e4 / 0.90e2 - 0.20e2 / 0.9e1 * (eta ^ 6) - 0.71e2 / 0.18e2 * (eta ^ 5) - 0.353e3 / 0.9e1 * (eta ^ 3) - 0.347e3 / 0.9e1 * (eta ^ 2) + 0.4469e4 / 0.90e2 * eta - 0.1853e4 / 0.90e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.55e2 + 0.533e3 / 0.15e2 * (eta ^ 3) - 0.127e3 / 0.3e1 * eta + 0.17e2 / 0.15e2 * (eta ^ 6) + 0.50e2 / 0.3e1 * (eta ^ 4) + 0.502e3 / 0.15e2 * (eta ^ 2) + (2 * eta ^ 5)) * (ci2 ^ 4) + (-0.140e3 / 0.9e1 * (eta ^ 3) + 0.253e3 / 0.15e2 * eta + 0.2e1 / 0.15e2 * (eta ^ 6) - 0.533e3 / 0.90e2 * (eta ^ 4) + 0.207e3 / 0.10e2 - 0.613e3 / 0.45e2 * (eta ^ 2) + 0.11e2 / 0.45e2 * (eta ^ 5)) * (ci2 ^ 2) + 0.109e3 / 0.45e2 * (eta ^ 3) - 0.8e1 / 0.45e2 * (eta ^ 5) + 0.359e3 / 0.180e3 * (eta ^ 2) + 0.91e2 / 0.120e3 * (eta ^ 4) - 0.337e3 / 0.120e3 - (eta ^ 6) / 0.10e2 - 0.109e3 / 0.45e2 * eta) + ((0.436e3 / 0.35e2 - 0.11e2 / 0.42e2 * (eta ^ 5) + 0.67e2 / 0.14e2 * eta + 0.76e2 / 0.105e3 * (eta ^ 4) - 0.239e3 / 0.105e3 * (eta ^ 3) - 0.208e3 / 0.21e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.2746e4 / 0.105e3 + 0.4e1 / 0.7e1 * (eta ^ 5) + 0.171e3 / 0.35e2 * (eta ^ 3) + 0.741e3 / 0.35e2 * (eta ^ 2) - 0.209e3 / 0.21e2 * eta - 0.11e2 / 0.7e1 * (eta ^ 4)) * (ci2 ^ 6) + (0.1443e4 / 0.70e2 - 0.36e2 / 0.7e1 * (eta ^ 3) + 0.627e3 / 0.70e2 * eta - 0.19e2 / 0.70e2 * (eta ^ 5) + 0.93e2 / 0.70e2 * (eta ^ 4) - 0.596e3 / 0.35e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.569e3 / 0.210e3 * (eta ^ 3) - 0.277e3 / 0.70e2 * eta - (eta ^ 5) / 0.21e2 - 0.109e3 / 0.210e3 * (eta ^ 4) - 0.253e3 / 0.35e2 + 0.1283e4 / 0.210e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.191e3 / 0.420e3 * (eta ^ 3) + 0.11e2 / 0.420e3 * (eta ^ 5) - 0.82e2 / 0.105e3 * (eta ^ 2) + 0.61e2 / 0.840e3 * (eta ^ 4) + 0.151e3 / 0.168e3 + 0.62e2 / 0.105e3 * eta) * cos((g + h + 2 * f)) + 0.9e1 / 0.28e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.73e2 / 0.90e2 * (eta ^ 2) - 0.188e3 / 0.45e2 * eta - 0.347e3 / 0.90e2) * (ci2 ^ 6) + (-0.11e2 / 0.9e1 * (eta ^ 3) - 0.89e2 / 0.90e2 * (eta ^ 2) + 0.22e2 / 0.5e1 * eta + 0.121e3 / 0.30e2) * (ci2 ^ 4) + (0.109e3 / 0.270e3 * (eta ^ 3) + 0.181e3 / 0.540e3 * (eta ^ 2) - 0.152e3 / 0.135e3 * eta - 0.559e3 / 0.540e3) * (ci2 ^ 2) - 0.7e1 / 0.270e3 * (1 + eta) * (eta + 0.6e1 / 0.7e1) * (eta - 1)) * (eta - 1) * cos((-g + h + 2 * f)) + 0.9e1 / 0.140e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.2e1 / 0.9e1 * (eta ^ 2) - 0.205e3 / 0.27e2) * (ci2 ^ 2) - (eta ^ 4) / 0.9e1 - 0.2e1 / 0.9e1 * (eta ^ 2) + 0.25e2 / 0.27e2) * cos((5 * g + h + 4 * f)) - 0.81e2 / 0.140e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.623e3 / 0.162e3 * (eta ^ 2) - 0.1820e4 / 0.243e3 * eta - 0.8203e4 / 0.486e3) * (ci2 ^ 6) + (-0.269e3 / 0.243e3 * (eta ^ 3) - 0.2053e4 / 0.486e3 * (eta ^ 2) + 0.1846e4 / 0.243e3 * eta + 0.8387e4 / 0.486e3) * (ci2 ^ 4) + (0.133e3 / 0.486e3 * (eta ^ 3) + 0.947e3 / 0.972e3 * (eta ^ 2) - 0.118e3 / 0.81e2 * eta - 0.3157e4 / 0.972e3) * (ci2 ^ 2) - 0.5e1 / 0.486e3 * (eta + 0.16e2 / 0.5e1) * (1 + eta) * (eta - 1)) * (eta - 1) * cos((3 * g + h + 6 * f)) - 0.3e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.17e2 / 0.21e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 2) + 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.3e1 / 0.7e1 * (eta ^ 2) - 0.41e2 / 0.105e3) * (ci2 ^ 2) - (eta ^ 2) / 0.35e2 + 0.1e1 / 0.35e2) * Delta * sin((g - h)) + 0.11e2 / 0.28e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.199e3 / 0.110e3 * eta + 0.91e2 / 0.110e3) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.47e2 / 0.22e2 * eta - 0.107e3 / 0.110e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.60e2 * eta + 0.69e2 / 0.220e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.13e2 / 0.330e3 * eta - 0.1e1 / 0.55e2) * cos((-3 * g - h + 2 * f)) - 0.17e2 / 0.84e2 * ((0.2088e4 / 0.85e2 + 0.3123e4 / 0.85e2 * eta + (eta ^ 4) - 0.91e2 / 0.85e2 * (eta ^ 3) + 0.143e3 / 0.17e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.4696e4 / 0.85e2 + 0.214e3 / 0.85e2 * (eta ^ 3) - 0.1538e4 / 0.85e2 * (eta ^ 2) - 0.6926e4 / 0.85e2 * eta - 0.38e2 / 0.17e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.3957e4 / 0.85e2 - 0.54e2 / 0.17e2 * (eta ^ 3) + 0.1182e4 / 0.17e2 * eta + 0.99e2 / 0.85e2 * (eta ^ 4) + 0.1392e4 / 0.85e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.167e3 / 0.85e2 * (eta ^ 3) - 0.2307e4 / 0.85e2 * eta + 0.2e1 / 0.17e2 * (eta ^ 4) - 0.87e2 / 0.5e1 - 0.623e3 / 0.85e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.129e3 / 0.340e3 * (eta ^ 3) + 0.407e3 / 0.340e3 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.1313e4 / 0.340e3 * eta + 0.159e3 / 0.68e2) * (eta - 1) * cos((-g - h + 2 * f)) - 0.11e2 / 0.280e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.289e3 / 0.33e2) * (ci2 ^ 2) - (eta ^ 2) / 0.11e2 + 0.1e1 / 0.11e2) * cos((5 * g + h + 8 * f)) - 0.13e2 / 0.140e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * ((eta - 1) ^ 2) * cos((3 * g + h + 8 * f)) + ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((-g + h + 4 * f)) / 0.28e2 + 0.3e1 / 0.280e3 * (((eta ^ 2) + 0.5e1 / 0.3e1) * (ci2 ^ 2) - 0.5e1 / 0.9e1 * (eta ^ 2) + 0.5e1 / 0.9e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((3 * g - h)) - 0.19e2 / 0.7e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 6) - 0.25e2 / 0.19e2 * (ci2 ^ 4) + 0.43e2 / 0.95e2 * (ci2 ^ 2) - 0.3e1 / 0.95e2) * sin((g - h + 4 * f)) - 0.41e2 / 0.7e1 * ((1 + eta) ^ 2) * ((ci2 ^ 6) - 0.47e2 / 0.41e2 * (ci2 ^ 4) + 0.13e2 / 0.41e2 * (ci2 ^ 2) - 0.3e1 / 0.205e3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin((3 * g + h)) + 0.3e1 / 0.28e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.217e3 / 0.45e2) * (ci2 ^ 2) - 0.2e1 / 0.15e2 * (eta ^ 2) + 0.8e1 / 0.15e2) * (eta - 1) * cos((5 * g + h + 2 * f)) - 0.39e2 / 0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.59e2 / 0.39e2) * (ci2 ^ 6) + (-0.17e2 / 0.13e2 * (eta ^ 2) + 0.79e2 / 0.39e2) * (ci2 ^ 4) + (0.29e2 / 0.65e2 * (eta ^ 2) - 0.139e3 / 0.195e3) * (ci2 ^ 2) - 0.2e1 / 0.65e2 * (eta ^ 2) + 0.2e1 / 0.39e2) * sin((g - h + 2 * f)) - 0.93e2 / 0.7e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.185e3 / 0.93e2) * (ci2 ^ 6) + (-0.35e2 / 0.31e2 * (eta ^ 2) + 0.205e3 / 0.93e2) * (ci2 ^ 4) + (0.47e2 / 0.155e3 * (eta ^ 2) - 0.53e2 / 0.93e2) * (ci2 ^ 2) - 0.2e1 / 0.155e3 * (eta ^ 2) + 0.2e1 / 0.93e2) * sin((3 * g + h + 2 * f)) - (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.188e3 / 0.7e1 * (eta ^ 2) + 0.309e3 / 0.7e1) * (ci2 ^ 2) - (eta ^ 4) / 0.7e1 + 0.17e2 / 0.7e1 * (eta ^ 2) - 0.16e2 / 0.7e1) * cos((5 * g + h + 6 * f)) / 0.30e2 - 0.9e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.115e3 / 0.63e2) * (ci2 ^ 6) + (-0.23e2 / 0.21e2 * (eta ^ 2) + 0.121e3 / 0.63e2) * (ci2 ^ 4) + (0.29e2 / 0.105e3 * (eta ^ 2) - 0.139e3 / 0.315e3) * (ci2 ^ 2) - (eta ^ 2) / 0.105e3 + 0.1e1 / 0.105e3) * sin((3 * g + h + 4 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - (6 * eta ^ 2) + 0.31e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 4) / 0.2e1 + 0.5e1 / 0.2e1 * (eta ^ 2) - 0.2e1) * cos((3 * g - h + 2 * f)) / 0.35e2 + 0.3e1 / 0.140e3 * (((eta ^ 4) - 0.26e2 / 0.3e1 * (eta ^ 2) + 0.173e3 / 0.9e1) * (ci2 ^ 2) - (eta ^ 4) / 0.3e1 - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.25e2 / 0.9e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 4 * f)) - 0.13e2 / 0.84e2 * (((eta ^ 2) + 0.551e3 / 0.130e3 * eta + 0.71e2 / 0.26e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.787e3 / 0.130e3 * eta - 0.539e3 / 0.130e3) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.9e1 / 0.4e1 * eta + 0.33e2 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.21e2 / 0.130e3 * eta - 0.8e1 / 0.65e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((g - h + 6 * f)) + (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((-g + h + 2 * f)) / 0.7e1 - 0.11e2 / 0.7e1 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((3 * g + h + 6 * f)) + (ci2 ^ 2) * (eta - 1) * (eta - 4) * (eta + 4) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((3 * g - h + 6 * f)) / 0.210e3 + 0.11e2 / 0.7e1 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 5) + 0.563e3 / 0.220e3 * (eta ^ 4) + 0.21e2 / 0.8e1 * (eta ^ 3) - 0.2027e4 / 0.1320e4 * (eta ^ 2) - 0.7537e4 / 0.1320e4 * eta - 0.4079e4 / 0.1320e4) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 5) - 0.1993e4 / 0.660e3 * (eta ^ 4) - 0.4009e4 / 0.1320e4 * (eta ^ 3) + 0.2483e4 / 0.1320e4 * (eta ^ 2) + 0.8897e4 / 0.1320e4 * eta + 0.437e3 / 0.120e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 5) + 0.23e2 / 0.24e2 * (eta ^ 4) + 0.487e3 / 0.528e3 * (eta ^ 3) - 0.187e3 / 0.240e3 * (eta ^ 2) - 0.1255e4 / 0.528e3 * eta - 0.1107e4 / 0.880e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (1 + eta) * ((eta ^ 4) + 0.11e2 / 0.7e1 * (eta ^ 3) + 0.5e1 / 0.7e1 * (eta ^ 2) - 0.22e2 / 0.7e1 * eta - 0.24e2 / 0.7e1)) * cos((3 * g + h)) - ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * cos((g + h + 6 * f)) / 0.84e2 - 0.2e1 / 0.21e2 * (1 + eta) * (eta - 1) * (((eta ^ 3) - 0.491e3 / 0.40e2 * (eta ^ 2) + 0.12e2 / 0.5e1 * eta + 0.327e3 / 0.8e1) * (ci2 ^ 8) + (-0.17e2 / 0.8e1 * (eta ^ 3) + 0.1049e4 / 0.40e2 * (eta ^ 2) - 0.187e3 / 0.40e2 * eta - 0.3337e4 / 0.40e2) * (ci2 ^ 6) + (0.9e1 / 0.10e2 * (eta ^ 3) - 0.99e2 / 0.5e1 * (eta ^ 2) + 0.69e2 / 0.10e2 * eta + 0.306e3 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 3) / 0.4e1 + 0.247e3 / 0.40e2 * (eta ^ 2) - 0.93e2 / 0.20e2 * eta - 0.759e3 / 0.40e2) * (ci2 ^ 2) - (eta ^ 3) / 0.10e2 - 0.107e3 / 0.160e3 * (eta ^ 2) + 0.31e2 / 0.40e2 * eta + 0.327e3 / 0.160e3) * cos((g + h + 4 * f)) - 0.11e2 / 0.14e2 * (((eta ^ 5) + 0.167e3 / 0.110e3 * (eta ^ 4) - 0.974e3 / 0.55e2 * (eta ^ 3) - 0.343e3 / 0.11e2 * (eta ^ 2) + 0.1389e4 / 0.55e2 * eta + 0.895e3 / 0.22e2) * (ci2 ^ 6) + (-0.63e2 / 0.55e2 * (eta ^ 5) - 0.43e2 / 0.22e2 * (eta ^ 4) + 0.212e3 / 0.11e2 * (eta ^ 3) + 0.377e3 / 0.11e2 * (eta ^ 2) - 0.1467e4 / 0.55e2 * eta - 0.4767e4 / 0.110e3) * (ci2 ^ 4) + (0.31e2 / 0.110e3 * (eta ^ 5) + 0.367e3 / 0.660e3 * (eta ^ 4) - 0.706e3 / 0.165e3 * (eta ^ 3) - 0.511e3 / 0.66e2 * (eta ^ 2) + 0.119e3 / 0.22e2 * eta + 0.5947e4 / 0.660e3) * (ci2 ^ 2) - 0.2e1 / 0.165e3 * (1 + eta) * (eta - 1) * ((eta ^ 3) + (3 * eta ^ 2) - (10 * eta) - 0.37e2 / 0.2e1)) * (ci2 - 1) * (ci2 + 1) * cos((3 * g + h + 4 * f)) + 0.3e1 / 0.14e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.179e3 / 0.30e2 * (eta ^ 4) - 0.86e2 / 0.15e2 * (eta ^ 3) - 0.35e2 / 0.3e1 * (eta ^ 2) + 0.137e3 / 0.5e1 * eta + 0.1099e4 / 0.30e2) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 5) - 0.263e3 / 0.30e2 * (eta ^ 4) + 0.22e2 / 0.15e2 * (eta ^ 3) + 0.127e3 / 0.15e2 * (eta ^ 2) - 0.361e3 / 0.15e2 * eta - 0.317e3 / 0.10e2) * (ci2 ^ 4) + (0.7e1 / 0.18e2 * (eta ^ 5) + 0.209e3 / 0.60e2 * (eta ^ 4) + 0.58e2 / 0.45e2 * (eta ^ 3) - 0.49e2 / 0.90e2 * (eta ^ 2) + 0.73e2 / 0.18e2 * eta + 0.767e3 / 0.180e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 4) + (8 * eta ^ 3) - (2 * eta ^ 2) + (4 * eta) - 0.17e2 / 0.3e1) / 0.30e2) * cos((g - h + 2 * f)) - (1 + eta) * (((eta ^ 2) - 0.239e3 / 0.20e2 * eta - 0.223e3 / 0.20e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + (27 * eta) + 0.513e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.111e3 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.157e3 / 0.20e2 * eta + 0.143e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.79e2 / 0.80e2 * eta - 0.67e2 / 0.80e2) * ((eta - 1) ^ 2) * cos((-g - h + 4 * f)) / 0.21e2 + 0.13e2 / 0.70e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.791e3 / 0.26e2 * (eta ^ 4) + 0.610e3 / 0.13e2 * (eta ^ 3) + (29 * eta ^ 2) - 0.723e3 / 0.13e2 * eta - 0.1817e4 / 0.26e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 5) - 0.875e3 / 0.26e2 * (eta ^ 4) - 0.674e3 / 0.13e2 * (eta ^ 3) - 0.425e3 / 0.13e2 * (eta ^ 2) + 0.773e3 / 0.13e2 * eta + 0.1965e4 / 0.26e2) * (ci2 ^ 4) + (0.15e2 / 0.26e2 * (eta ^ 5) + 0.107e3 / 0.12e2 * (eta ^ 4) + 0.126e3 / 0.13e2 * (eta ^ 3) + 0.367e3 / 0.78e2 * (eta ^ 2) - 0.685e3 / 0.78e2 * eta - 0.1981e4 / 0.156e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 4) + (8 * eta ^ 3) - (2 * eta ^ 2) + (4 * eta) - 0.17e2 / 0.3e1) / 0.26e2) * cos((3 * g + h + 2 * f)) + (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.25e2 / 0.42e2 * (eta ^ 4) - 0.369e3 / 0.140e3 * (eta ^ 3) - 0.2441e4 / 0.420e3 * (eta ^ 2) - 0.23e2 / 0.28e2 * eta + 0.4027e4 / 0.420e3) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 5) - 0.157e3 / 0.210e3 * (eta ^ 4) + 0.401e3 / 0.140e3 * (eta ^ 3) + 0.569e3 / 0.84e2 * (eta ^ 2) + 0.131e3 / 0.140e3 * eta - 0.4391e4 / 0.420e3) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 5) + 0.109e3 / 0.420e3 * (eta ^ 4) - 0.91e2 / 0.120e3 * (eta ^ 3) - 0.253e3 / 0.120e3 * (eta ^ 2) - 0.13e2 / 0.56e2 * eta + 0.2329e4 / 0.840e3) * (ci2 ^ 2) - (eta - 1) * ((eta ^ 4) + 0.11e2 / 0.7e1 * (eta ^ 3) + 0.5e1 / 0.7e1 * (eta ^ 2) - 0.22e2 / 0.7e1 * eta - 0.24e2 / 0.7e1) / 0.30e2) * cos((g - h)) - (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 4) + 0.373e3 / 0.70e2 * (eta ^ 3) - 0.151e3 / 0.70e2 * (eta ^ 2) - 0.1237e4 / 0.70e2 * eta - 0.97e2 / 0.10e2) * (ci2 ^ 6) + (-0.51e2 / 0.35e2 * (eta ^ 4) - 0.501e3 / 0.70e2 * (eta ^ 3) + 0.367e3 / 0.70e2 * (eta ^ 2) + 0.2133e4 / 0.70e2 * eta + 0.1263e4 / 0.70e2) * (ci2 ^ 4) + (0.113e3 / 0.210e3 * (eta ^ 4) + 0.49e2 / 0.20e2 * (eta ^ 3) - 0.161e3 / 0.60e2 * (eta ^ 2) - 0.5549e4 / 0.420e3 * eta - 0.703e3 / 0.84e2) * (ci2 ^ 2) - 0.4e1 / 0.105e3 * ((eta ^ 3) + (3 * eta ^ 2) - (10 * eta) - 0.37e2 / 0.2e1) * (1 + eta)) * cos((g - h + 4 * f)) / 0.4e1) * sqrt((-eta ^ 2 + 1)) + 0.27e2 / 0.280e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.14e2 / 0.3e1 * (eta ^ 2) + 0.139e3 / 0.27e2) * (ci2 ^ 2) - 0.10e2 / 0.27e2 * (eta ^ 4) + 0.52e2 / 0.81e2 * (eta ^ 2) - 0.22e2 / 0.81e2) * cos((3 * g - h + 3 * f)) + 0.199e3 / 0.1120e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 4) + 0.2358e4 / 0.199e3 * (eta ^ 3) + 0.2236e4 / 0.199e3 * (eta ^ 2) - 0.4918e4 / 0.199e3 * eta - 0.4979e4 / 0.199e3) * (ci2 ^ 6) + (-0.187e3 / 0.199e3 * (eta ^ 4) - 0.2790e4 / 0.199e3 * (eta ^ 3) - 0.2692e4 / 0.199e3 * (eta ^ 2) + 0.5350e4 / 0.199e3 * eta + 0.5423e4 / 0.199e3) * (ci2 ^ 4) + (0.187e3 / 0.1194e4 * (eta ^ 4) + 0.881e3 / 0.199e3 * (eta ^ 3) + 0.2618e4 / 0.597e3 * (eta ^ 2) - 0.4307e4 / 0.597e3 * eta - 0.8735e4 / 0.1194e4) * (ci2 ^ 2) + (eta - 0.163e3 / 0.3e1) * ((1 + eta) ^ 2) * (eta - 1) / 0.199e3) * cos((-g + h + f)) + 0.3e1 / 0.160e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * ((eta - 1) ^ 3) * cos((-3 * g - h + 3 * f)) + 0.9e1 / 0.70e2 * (((eta ^ 3) - 0.47e2 / 0.8e1 * (eta ^ 2) - 0.787e3 / 0.36e2 * eta - 0.935e3 / 0.72e2) * (ci2 ^ 6) + (-0.5e1 / 0.4e1 * (eta ^ 3) + 0.637e3 / 0.72e2 * (eta ^ 2) + 0.293e3 / 0.9e1 * eta + 0.491e3 / 0.24e2) * (ci2 ^ 4) + (0.85e2 / 0.216e3 * (eta ^ 3) - 0.1495e4 / 0.432e3 * (eta ^ 2) - 0.1361e4 / 0.108e3 * eta - 0.3635e4 / 0.432e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 2) - 0.128e3 / 0.9e1 * eta - 0.281e3 / 0.9e1) / 0.48e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((g - h + 5 * f)) - 0.37e2 / 0.280e3 * (((eta ^ 4) - 0.354e3 / 0.37e2 * (eta ^ 2) + 0.1151e4 / 0.111e3) * (ci2 ^ 2) - 0.6e1 / 0.37e2 * (eta ^ 4) + 0.36e2 / 0.37e2 * (eta ^ 2) - 0.30e2 / 0.37e2) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((5 * g + h + 5 * f)) + 0.123e3 / 0.560e3 * ((-0.1715e4 / 0.41e2 + (eta ^ 5) - 0.2951e4 / 0.41e2 * eta + 0.1093e4 / 0.369e3 * (eta ^ 4) + 0.4382e4 / 0.369e3 * (eta ^ 3) - 0.7178e4 / 0.369e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.34118e5 / 0.369e3 - 0.90e2 / 0.41e2 * (eta ^ 5) - 0.9724e4 / 0.369e3 * (eta ^ 3) + 0.5132e4 / 0.123e3 * (eta ^ 2) + 0.58246e5 / 0.369e3 * eta - 0.58e2 / 0.9e1 * (eta ^ 4)) * (ci2 ^ 6) + (-0.3188e4 / 0.41e2 + 0.3256e4 / 0.123e3 * (eta ^ 3) - 0.5484e4 / 0.41e2 * eta + 0.980e3 / 0.123e3 * (eta ^ 4) - 0.4280e4 / 0.123e3 * (eta ^ 2) + 0.68e2 / 0.41e2 * (eta ^ 5)) * (ci2 ^ 4) + (-0.4906e4 / 0.369e3 * (eta ^ 3) + 0.6395e4 / 0.123e3 * eta - 0.1847e4 / 0.369e3 * (eta ^ 4) + 0.1209e4 / 0.41e2 + 0.4966e4 / 0.369e3 * (eta ^ 2) - 0.61e2 / 0.123e3 * (eta ^ 5)) * (ci2 ^ 2) + 0.565e3 / 0.246e3 * (eta ^ 3) + 0.73e2 / 0.1476e4 * (eta ^ 5) - 0.157e3 / 0.82e2 * (eta ^ 2) + 0.1445e4 / 0.1476e4 * (eta ^ 4) - 0.5963e4 / 0.1476e4 - 0.3613e4 / 0.492e3 * eta) * (eta - 1) * cos((-g - h + f)) + 0.13e2 / 0.28e2 * ((1 + eta) ^ 3) * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sin((g - h + 5 * f)) - 0.25e2 / 0.28e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * sin((-3 * g - h + f)) + 0.10e2 / 0.7e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) - 0.23e2 / 0.5e1) * (ci2 ^ 6) + (-0.13e2 / 0.10e2 * (eta ^ 2) + 0.61e2 / 0.10e2) * (ci2 ^ 4) + (0.11e2 / 0.25e2 * (eta ^ 2) - 0.53e2 / 0.25e2) * (ci2 ^ 2) - 0.3e1 / 0.100e3 * (eta ^ 2) + 0.3e1 / 0.20e2) * sin((g - h + 3 * f)) - 0.25e2 / 0.84e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.383e3 / 0.125e3) * (ci2 ^ 2) - 0.11e2 / 0.125e3 * (eta ^ 2) + 0.11e2 / 0.125e3) * (eta - 1) * cos((5 * g + h + 7 * f)) + 0.19e2 / 0.420e3 * (((eta ^ 2) - 0.25e2 / 0.19e2) * (ci2 ^ 2) - 0.13e2 / 0.19e2 * (eta ^ 2) + 0.13e2 / 0.19e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((3 * g - h + f)) - (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((-0.3e1 / 0.35e2 * (ci2 ^ 2) + 0.3e1 / 0.35e2) * cos((3 * g - h + 8 * f)) - 0.6e1 / 0.35e2 * cos((5 * g + h + 10 * f)) * (ci2 ^ 2) + cos((5 * g + h)) * ((ci2 ^ 2) - 0.1e1 / 0.7e1)) * ((-eta ^ 2 + 1) ^ (0.3e1 / 0.2e1)) / 0.24e2 + 0.11e2 / 0.420e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.65e2 / 0.11e2) * (ci2 ^ 2) + 0.9e1 / 0.11e2 * (eta ^ 2) - 0.45e2 / 0.11e2) * cos((3 * g - h + 5 * f)) - 0.29e2 / 0.1680e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 2) - 0.44e2 / 0.29e2) * cos((3 * g - h + 7 * f)) + 0.139e3 / 0.420e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.153e3 / 0.139e3) * (ci2 ^ 2) - 0.15e2 / 0.139e3 * (eta ^ 2) + 0.11e2 / 0.139e3) * cos((5 * g + h + 3 * f)) + 0.10e2 / 0.7e1 * (((eta ^ 2) - 0.23e2 / 0.5e1) * (ci2 ^ 6) + (-0.11e2 / 0.10e2 * (eta ^ 2) + 0.47e2 / 0.10e2) * (ci2 ^ 4) + (0.7e1 / 0.25e2 * (eta ^ 2) - 0.1e1) * (ci2 ^ 2) - (eta ^ 2) / 0.100e3 + 0.1e1 / 0.100e3) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin((3 * g + h + 5 * f)) + 0.3e1 / 0.224e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) - 0.4898e4 / 0.15e2 * (eta ^ 3) - 0.3828e4 / 0.5e1 * (eta ^ 2) + 0.13186e5 / 0.15e2 * eta + 0.8191e4 / 0.5e1) * (ci2 ^ 6) + (-0.17e2 / 0.5e1 * (eta ^ 4) + 0.5362e4 / 0.15e2 * (eta ^ 3) + 0.12596e5 / 0.15e2 * (eta ^ 2) - (910 * eta) - 0.25649e5 / 0.15e2) * (ci2 ^ 4) + (0.49e2 / 0.30e2 * (eta ^ 4) - 0.3769e4 / 0.45e2 * (eta ^ 3) - 0.962e3 / 0.5e1 * (eta ^ 2) + 0.8137e4 / 0.45e2 * eta + 0.30721e5 / 0.90e2) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 2) - 0.128e3 / 0.9e1 * eta - 0.281e3 / 0.9e1) * (eta - 1) / 0.5e1) * (eta - 1) * cos((3 * g + h + 5 * f)) + ((1 + eta) ^ 2) * (((eta ^ 2) + 0.153e3 / 0.8e1 * eta + 0.121e3 / 0.8e1) * (ci2 ^ 6) + (-0.5e1 / 0.4e1 * (eta ^ 2) - 0.153e3 / 0.8e1 * eta - 0.119e3 / 0.8e1) * (ci2 ^ 4) + (0.3e1 / 0.8e1 * (eta ^ 2) + 0.215e3 / 0.48e2 * eta + 0.173e3 / 0.48e2) * (ci2 ^ 2) - (eta ^ 2) / 0.48e2 + 0.1e1 / 0.48e2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((-g + h + 3 * f)) / 0.70e2 - 0.19e2 / 0.140e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (((eta ^ 2) - 0.1213e4 / 0.76e2 * eta - 0.1265e4 / 0.76e2) * (ci2 ^ 6) + (-0.41e2 / 0.38e2 * (eta ^ 2) + 0.1429e4 / 0.76e2 * eta + 0.1487e4 / 0.76e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 - 0.2795e4 / 0.456e3 * eta - 0.959e3 / 0.152e3) * (ci2 ^ 2) - (eta - 0.163e3 / 0.3e1) * (1 + eta) / 0.152e3) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((-3 * g - h + f)) + 0.9e1 / 0.224e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * cos((g - h + 7 * f)) + 0.5e1 / 0.28e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 2) - 0.523e3 / 0.100e3 * eta - 0.1551e4 / 0.100e3) * (ci2 ^ 6) + (-0.11e2 / 0.10e2 * (eta ^ 2) + 0.523e3 / 0.100e3 * eta + 0.1561e4 / 0.100e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 - 0.589e3 / 0.600e3 * eta - 0.1667e4 / 0.600e3) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * cos((3 * g + h + 7 * f)) - 0.25e2 / 0.336e3 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((5 * g + h + 9 * f)) + 0.45e2 / 0.14e2 * (((eta ^ 4) - 0.118e3 / 0.15e2 * (eta ^ 2) + 0.73e2 / 0.9e1) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 4) + 0.26e2 / 0.3e1 * (eta ^ 2) - 0.79e2 / 0.9e1) * (ci2 ^ 4) + (0.23e2 / 0.75e2 * (eta ^ 4) - 0.166e3 / 0.75e2 * (eta ^ 2) + 0.97e2 / 0.45e2) * (ci2 ^ 2) - (eta ^ 4) / 0.75e2 + 0.2e1 / 0.25e2 * (eta ^ 2) - 0.1e1 / 0.15e2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sin((3 * g + h + 3 * f)) - (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((-g + h + 3 * f)) / 0.28e2 + 0.5e1 / 0.28e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((3 * g + h + 7 * f)) - 0.9e1 / 0.112e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((-g - h + 5 * f)) - 0.17e2 / 0.10e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.53e2 / 0.28e2 * (eta ^ 4) + 0.5e1 / 0.357e3 * (eta ^ 3) - 0.469e3 / 0.34e2 * (eta ^ 2) - 0.86e2 / 0.17e2 * eta + 0.24203e5 / 0.1428e4) * (ci2 ^ 6) + (-0.797e3 / 0.714e3 * (eta ^ 5) - 0.1023e4 / 0.476e3 * (eta ^ 4) - 0.10e2 / 0.51e2 * (eta ^ 3) + 0.10855e5 / 0.714e3 * (eta ^ 2) + 0.1331e4 / 0.238e3 * eta - 0.26185e5 / 0.1428e4) * (ci2 ^ 4) + (0.139e3 / 0.476e3 * (eta ^ 5) + 0.431e3 / 0.952e3 * (eta ^ 4) + 0.59e2 / 0.714e3 * (eta ^ 3) - 0.1523e4 / 0.476e3 * (eta ^ 2) - 0.613e3 / 0.476e3 * eta + 0.91e2 / 0.24e2) * (ci2 ^ 2) - 0.11e2 / 0.952e3 * (eta - 1) * ((eta ^ 4) + 0.80e2 / 0.33e2 * (eta ^ 3) + 0.118e3 / 0.33e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * eta - 0.101e3 / 0.11e2)) * cos((3 * g + h + 3 * f)) + 0.3e1 / 0.1120e4 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * cos((-g + h + 5 * f)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * cos((3 * g + h + 9 * f)) / 0.32e2 - 0.9e1 / 0.140e3 * (1 + eta) * (((eta ^ 3) - 0.5e1 / 0.3e1 * (eta ^ 2) - 0.113e3 / 0.3e1 * eta - 0.31e2) * (ci2 ^ 8) + (-0.7e1 / 0.3e1 * (eta ^ 3) + 0.91e2 / 0.27e2 * (eta ^ 2) + 0.2279e4 / 0.27e2 * eta + 0.1909e4 / 0.27e2) * (ci2 ^ 6) + (0.17e2 / 0.9e1 * (eta ^ 3) - 0.49e2 / 0.9e1 * (eta ^ 2) - 0.215e3 / 0.3e1 * eta - 0.59e2) * (ci2 ^ 4) + (-0.11e2 / 0.18e2 * (eta ^ 3) + 0.229e3 / 0.54e2 * (eta ^ 2) + 0.1481e4 / 0.54e2 * eta + 0.1147e4 / 0.54e2) * (ci2 ^ 2) + 0.7e1 / 0.108e3 * (eta ^ 3) - 0.67e2 / 0.72e2 * (eta ^ 2) - 0.103e3 / 0.27e2 * eta - 0.65e2 / 0.24e2) * ((eta - 1) ^ 2) * cos((-g - h + 3 * f)) - 0.9e1 / 0.80e2 * ((0.13667e5 / 0.189e3 + 0.2570e4 / 0.189e3 * eta + (eta ^ 4) - 0.46e2 / 0.63e2 * (eta ^ 3) - 0.2416e4 / 0.63e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.28274e5 / 0.189e3 + 0.316e3 / 0.189e3 * (eta ^ 3) + 0.15472e5 / 0.189e3 * (eta ^ 2) - 0.740e3 / 0.27e2 * eta - 0.46e2 / 0.21e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.2392e4 / 0.21e2 - 0.16e2 / 0.3e1 * (eta ^ 3) + 0.1744e4 / 0.63e2 * eta + 0.104e3 / 0.63e2 * (eta ^ 4) - 0.4016e4 / 0.63e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.890e3 / 0.189e3 * (eta ^ 3) - 0.298e3 / 0.21e2 * eta - 0.31e2 / 0.63e2 * (eta ^ 4) - 0.2377e4 / 0.63e2 + 0.4040e4 / 0.189e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.353e3 / 0.378e3 * (eta ^ 3) - 0.478e3 / 0.189e3 * (eta ^ 2) + 0.37e2 / 0.756e3 * (eta ^ 4) + 0.1105e4 / 0.252e3 + 0.841e3 / 0.378e3 * eta) * (1 + eta) * (eta - 1) * cos((g + h + 3 * f)) - 0.13e2 / 0.1680e4 * (1 + eta) * (0.960e3 / 0.13e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 6) - 0.5e1 / 0.4e1 * (ci2 ^ 4) + 0.2e1 / 0.5e1 * (ci2 ^ 2) - 0.1e1 / 0.40e2) * sin((-g + h + f)) - 0.2520e4 / 0.13e2 * (((eta ^ 4) - 0.38e2 / 0.7e1 * (eta ^ 2) + 0.85e2 / 0.21e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 4) + 0.50e2 / 0.7e1 * (eta ^ 2) - 0.115e3 / 0.21e2) * (ci2 ^ 4) + (0.3e1 / 0.7e1 * (eta ^ 4) - 0.86e2 / 0.35e2 * (eta ^ 2) + 0.41e2 / 0.21e2) * (ci2 ^ 2) - (eta ^ 4) / 0.35e2 + 0.6e1 / 0.35e2 * (eta ^ 2) - 0.1e1 / 0.7e1) * (ci2 - 1) * (ci2 + 1) * Delta * sin((g - h + f)) - 0.4800e4 / 0.13e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) - 0.29e2 / 0.5e1) * (ci2 ^ 6) + (-0.23e2 / 0.20e2 * (eta ^ 2) + 0.131e3 / 0.20e2) * (ci2 ^ 4) + (0.8e1 / 0.25e2 * (eta ^ 2) - 0.44e2 / 0.25e2) * (ci2 ^ 2) - 0.3e1 / 0.200e3 * (eta ^ 2) + 0.3e1 / 0.40e2) * sin((3 * g + h + f)) - 0.31e2 * ((ci2 ^ 2) - 0.4e1 / 0.31e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * cos((5 * g + h + f)) + 0.45e2 / 0.13e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * cos((g + h + 7 * f)) + (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-3 * g + h + f)) - 0.360e3 / 0.13e2 * ((0.203e3 / 0.3e1 + (eta ^ 5) - 0.133e3 / 0.5e1 * eta + 0.11e2 / 0.15e2 * (eta ^ 4) + (12 * eta ^ 3) - 0.442e3 / 0.9e1 * (eta ^ 2)) * (ci2 ^ 8) + (-0.6496e4 / 0.45e2 - 0.11e2 / 0.5e1 * (eta ^ 5) - (26 * eta ^ 3) + 0.952e3 / 0.9e1 * (eta ^ 2) + (57 * eta) - 0.8e1 / 0.5e1 * (eta ^ 4)) * (ci2 ^ 6) + (0.586e3 / 0.5e1 + 0.58e2 / 0.3e1 * (eta ^ 3) - 0.209e3 / 0.5e1 * eta + 0.26e2 / 0.5e1 * (eta ^ 4) - 0.1396e4 / 0.15e2 * (eta ^ 2) + 0.5e1 / 0.3e1 * (eta ^ 5)) * (ci2 ^ 4) + (-0.17e2 / 0.3e1 * (eta ^ 3) + 0.361e3 / 0.30e2 * eta - 0.24e2 / 0.5e1 * (eta ^ 4) - 0.644e3 / 0.15e2 + 0.1756e4 / 0.45e2 * (eta ^ 2) - (eta ^ 5) / 0.2e1) * (ci2 ^ 2) + 0.5e1 / 0.9e1 * (eta ^ 3) + (eta ^ 5) / 0.20e2 - 0.1039e4 / 0.180e3 * (eta ^ 2) + 0.371e3 / 0.360e3 * (eta ^ 4) - 0.209e3 / 0.180e3 * eta + 0.2027e4 / 0.360e3) * cos((g + h + f))) - 0.3e1 / 0.20e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.8e1 / 0.63e2 * eta - 0.541e3 / 0.63e2) * (ci2 ^ 8) + (-0.15e2 / 0.7e1 * (eta ^ 2) - 0.16e2 / 0.63e2 * eta + 0.1091e4 / 0.63e2) * (ci2 ^ 6) + (0.11e2 / 0.7e1 * (eta ^ 2) - 0.8e1 / 0.21e2 * eta - 0.257e3 / 0.21e2) * (ci2 ^ 4) + (-0.19e2 / 0.42e2 * (eta ^ 2) + 0.32e2 / 0.63e2 * eta + 0.445e3 / 0.126e3) * (ci2 ^ 2) + 0.11e2 / 0.252e3 * (eta ^ 2) - 0.47e2 / 0.504e3 * eta - 0.59e2 / 0.168e3) * cos((g + h + 5 * f)) - 0.67e2 / 0.35e2 * (1 + eta) * (((eta ^ 5) - 0.9e1 / 0.8e1 * (eta ^ 4) - 0.75e2 / 0.134e3 * (eta ^ 3) + 0.1417e4 / 0.268e3 * (eta ^ 2) + 0.133e3 / 0.134e3 * eta - 0.3375e4 / 0.536e3) * (ci2 ^ 6) + (-0.353e3 / 0.268e3 * (eta ^ 5) + 0.713e3 / 0.536e3 * (eta ^ 4) + 0.60e2 / 0.67e2 * (eta ^ 3) - 0.1535e4 / 0.268e3 * (eta ^ 2) - 0.279e3 / 0.268e3 * eta + 0.3517e4 / 0.536e3) * (ci2 ^ 4) + (0.727e3 / 0.1608e4 * (eta ^ 5) - 0.1411e4 / 0.3216e4 * (eta ^ 4) - 0.99e2 / 0.268e3 * (eta ^ 3) + 0.2551e4 / 0.1608e4 * (eta ^ 2) + 0.331e3 / 0.1608e4 * eta - 0.5075e4 / 0.3216e4) * (ci2 ^ 2) - 0.101e3 / 0.3216e4 * ((eta ^ 4) - 0.106e3 / 0.101e3 * (eta ^ 2) + 0.160e3 / 0.101e3 * eta + 0.173e3 / 0.101e3) * (eta - 1)) * (ci2 - 1) * (ci2 + 1) * cos((g - h + f)) - 0.641e3 / 0.160e3 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 5) + 0.6275e4 / 0.4487e4 * (eta ^ 4) - 0.2158e4 / 0.4487e4 * (eta ^ 3) - 0.3238e4 / 0.4487e4 * (eta ^ 2) + 0.2231e4 / 0.4487e4 * eta + 0.213e3 / 0.641e3) * (ci2 ^ 6) + (-0.5167e4 / 0.4487e4 * (eta ^ 5) - 0.7195e4 / 0.4487e4 * (eta ^ 4) + 0.2398e4 / 0.4487e4 * (eta ^ 3) + 0.3254e4 / 0.4487e4 * (eta ^ 2) - 0.3263e4 / 0.4487e4 * eta - 0.2059e4 / 0.4487e4) * (ci2 ^ 4) + (0.2869e4 / 0.8974e4 * (eta ^ 5) + 0.1469e4 / 0.3846e4 * (eta ^ 4) - 0.1149e4 / 0.4487e4 * (eta ^ 3) - 0.323e3 / 0.13461e5 * (eta ^ 2) + 0.17183e5 / 0.26922e5 * eta + 0.9227e4 / 0.26922e5) * (ci2 ^ 2) - 0.202e3 / 0.13461e5 * (1 + eta) * ((eta ^ 4) - 0.106e3 / 0.101e3 * (eta ^ 2) + 0.160e3 / 0.101e3 * eta + 0.173e3 / 0.101e3)) * cos((3 * g + h + f)) - 0.1573e4 / 0.3360e4 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 5) + 0.365e3 / 0.121e3 * (eta ^ 4) + 0.866e3 / 0.143e3 * (eta ^ 3) + 0.7438e4 / 0.1573e4 * (eta ^ 2) + 0.3221e4 / 0.1573e4 * eta + 0.2809e4 / 0.1573e4) * (ci2 ^ 6) + (-0.2237e4 / 0.1573e4 * (eta ^ 5) - 0.7537e4 / 0.1573e4 * (eta ^ 4) - 0.14822e5 / 0.1573e4 * (eta ^ 3) - 0.5726e4 / 0.1573e4 * (eta ^ 2) + 0.9587e4 / 0.1573e4 * eta + 0.5119e4 / 0.1573e4) * (ci2 ^ 4) + (0.1679e4 / 0.3146e4 * (eta ^ 5) + 0.5931e4 / 0.3146e4 * (eta ^ 4) + 0.5721e4 / 0.1573e4 * (eta ^ 3) + 0.493e3 / 0.1573e4 * (eta ^ 2) - 0.17137e5 / 0.3146e4 * eta - 0.10709e5 / 0.3146e4) * (ci2 ^ 2) - 0.6e1 / 0.143e3 * (1 + eta) * ((eta ^ 4) + 0.80e2 / 0.33e2 * (eta ^ 3) + 0.118e3 / 0.33e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * eta - 0.101e3 / 0.11e2)) * cos((g - h + 3 * f))) * R__e ^ 4 * J ^ 2 / a ^ 4 / (eta ^ 11) / (1 + eta) 0.90e2 * ci2 * R__e ^ 4 * sqrt((-ci2 ^ 2 + 1)) * J ^ 2 * ((ci2 ^ 4) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * sin((3 * g + 2 * h + 7 * f)) / 0.32e2 - (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-2 * h + 3 * g + 5 * f)) / 0.240e3 - 0.13e2 / 0.12e2 * ((ci2 ^ 6) - 0.51e2 / 0.52e2 * (ci2 ^ 4) + 0.29e2 / 0.130e3 * (ci2 ^ 2) - 0.1e1 / 0.130e3) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * cos((g - 2 * h + 3 * f)) + 0.41e2 / 0.240e3 * ((ci2 ^ 2) - 0.3e1 / 0.41e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin((3 * f + 5 * g)) - 0.5e1 / 0.2e1 * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.20e2 * (eta ^ 2) + 0.31e2 / 0.20e2) * (ci2 ^ 4) + (0.23e2 / 0.150e3 * (eta ^ 2) - 0.37e2 / 0.150e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * cos((3 * g + 3 * f)) - 0.13e2 / 0.240e3 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-2 * h + 3 * g + f)) + 0.9e1 / 0.160e3 * (1 + eta) * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.12e2 * eta - 0.11e2 / 0.12e2) * (ci2 ^ 4) + (0.29e2 / 0.108e3 * eta + 0.1e1 / 0.4e1) * (ci2 ^ 2) - eta / 0.108e3 - 0.1e1 / 0.108e3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((g - 2 * h + 5 * f)) + (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) + 0.53e2 / 0.5e1 * eta + 0.46e2 / 0.5e1) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.159e3 / 0.20e2 * eta - 0.33e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 + 0.79e2 / 0.60e2 * eta + 0.31e2 / 0.30e2) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * sin((-g + 2 * h + f)) / 0.16e2 - (ci2 ^ 4) * ((1 + eta) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * cos((3 * g + 2 * h + 5 * f)) / 0.4e1 - 0.11e2 / 0.240e3 * (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * sin((5 * g + 2 * h + 7 * f)) - 0.13e2 / 0.120e3 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 4) + (-0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 + 0.1e1 / 0.26e2) * sin((5 * g + 2 * h + 5 * f)) + (((eta ^ 2 - 3) * ci2 ^ 2) - 0.3e1 / 0.10e2 * (eta ^ 2) + 0.3e1 / 0.10e2) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-2 * h + 3 * g + 3 * f)) / 0.24e2 - 0.7e1 / 0.2e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.4e1) * (ci2 ^ 4) + (0.3e1 / 0.14e2 * (eta ^ 2) - 0.13e2 / 0.70e2) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * Delta * cos((g - 2 * h + f)) - 0.11e2 / 0.240e3 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((7 * f + 5 * g)) - 0.13e2 / 0.120e3 * (ci2 ^ 2) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 2) - 0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((5 * f + 5 * g)) + 0.13e2 / 0.80e2 * (((eta ^ 2) - 0.178e3 / 0.39e2 * eta - 0.415e3 / 0.39e2) * (ci2 ^ 6) + (-0.45e2 / 0.52e2 * (eta ^ 2) + 0.181e3 / 0.52e2 * eta + 0.106e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.156e3 * (eta ^ 2) - 0.61e2 / 0.156e3 * eta - 0.25e2 / 0.26e2) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((3 * g + 5 * f)) + (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * cos((-g + 2 * h + f)) / 0.4e1 - (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * cos((3 * g + 5 * f)) / 0.4e1 + 0.27e2 / 0.40e2 * (ci2 ^ 2) * (((eta ^ 3) + 0.367e3 / 0.81e2 * (eta ^ 2) + 0.797e3 / 0.81e2 * eta + 0.475e3 / 0.81e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 3) - 0.203e3 / 0.27e2 * (eta ^ 2) - 0.442e3 / 0.27e2 * eta - 0.266e3 / 0.27e2) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 3) + 0.13e2 / 0.3e1 * (eta ^ 2) + 0.253e3 / 0.27e2 * eta + 0.151e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 3) - 0.47e2 / 0.54e2 * (eta ^ 2) - 0.50e2 / 0.27e2 * eta - 0.29e2 / 0.27e2) * (eta - 1) * sin((-g - 2 * h + f)) - 0.5e1 / 0.2e1 * (1 + eta) * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 8) + (-0.27e2 / 0.20e2 * (eta ^ 2) + 0.151e3 / 0.60e2) * (ci2 ^ 6) + (0.131e3 / 0.300e3 * (eta ^ 2) - 0.229e3 / 0.300e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * Delta * cos((3 * g + 2 * h + 3 * f)) + 0.3e1 / 0.4e1 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 3) + 0.211e3 / 0.90e2 * (eta ^ 2) + 0.18e2 / 0.5e1 * eta - 0.881e3 / 0.90e2) * (ci2 ^ 6) + (-0.33e2 / 0.20e2 * (eta ^ 3) - 0.58e2 / 0.15e2 * (eta ^ 2) - 0.117e3 / 0.20e2 * eta + 0.469e3 / 0.30e2) * (ci2 ^ 4) + (0.5e1 / 0.6e1 * (eta ^ 3) + 0.79e2 / 0.30e2 * (eta ^ 2) + 0.29e2 / 0.10e2 * eta - 0.17e2 / 0.2e1) * (ci2 ^ 2) - (eta ^ 3) / 0.8e1 - 0.2e1 / 0.3e1 * (eta ^ 2) - 0.17e2 / 0.40e2 * eta + 0.283e3 / 0.180e3) * sin((g + 2 * h + f)) + 0.21e2 / 0.160e3 * (1 + eta) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 8) + (-0.39e2 / 0.28e2 * eta - 0.107e3 / 0.84e2) * (ci2 ^ 6) + (0.29e2 / 0.63e2 * eta + 0.3e1 / 0.7e1) * (ci2 ^ 4) + (-eta / 0.252e3 - 0.1e1 / 0.252e3) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * ((eta - 1) ^ 2) * sin((-3 * g - 2 * h + f)) - 0.29e2 / 0.160e3 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * ((eta + 0.25e2 / 0.29e2) * (ci2 ^ 6) + (-0.199e3 / 0.116e3 * eta - 0.175e3 / 0.116e3) * (ci2 ^ 4) + (0.79e2 / 0.87e2 * eta + 0.71e2 / 0.87e2) * (ci2 ^ 2) - 0.25e2 / 0.174e3 * eta - 0.23e2 / 0.174e3) * sin((-g + 3 * f)) - 0.25e2 / 0.4e1 * ((1 + eta) ^ 2) * Delta * ((ci2 ^ 8) - 0.137e3 / 0.100e3 * (ci2 ^ 6) + 0.227e3 / 0.500e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.250e3 - 0.1e1 / 0.250e3) * (eta - 1) * cos((3 * g + 2 * h + f)) - 0.3e1 / 0.16e2 * (ci2 ^ 2) * (1 + eta) * ((eta - 1) ^ 2) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.10e2 * eta - 0.3e1 / 0.2e1) * (ci2 ^ 4) + (0.8e1 / 0.9e1 * eta + 0.4e1 / 0.5e1) * (ci2 ^ 2) - 0.5e1 / 0.36e2 * eta - 0.23e2 / 0.180e3) * sin((-g - 2 * h + 3 * f)) - 0.97e2 / 0.80e2 * (((eta ^ 3) - 0.2201e4 / 0.291e3 * (eta ^ 2) - 0.5317e4 / 0.291e3 * eta - 0.29e2 / 0.3e1) * (ci2 ^ 6) + (-0.321e3 / 0.388e3 * (eta ^ 3) + 0.648e3 / 0.97e2 * (eta ^ 2) + 0.6213e4 / 0.388e3 * eta + 0.822e3 / 0.97e2) * (ci2 ^ 4) + (0.155e3 / 0.1164e4 * (eta ^ 3) - 0.829e3 / 0.582e3 * (eta ^ 2) - 0.3827e4 / 0.1164e4 * eta - 0.335e3 / 0.194e3) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((3 * g + f)) + (1 + eta) * (0.21e2 / 0.40e2 * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.41e2 / 0.252e3 * eta + 0.13e2 / 0.84e2) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * sin((-3 * g + f)) + 0.3e1 / 0.40e2 * ((eta + 0.1e1 / 0.3e1) * (ci2 ^ 8) + (-0.7e1 / 0.4e1 * eta - 0.11e2 / 0.12e2) * (ci2 ^ 6) + (0.5e1 / 0.9e1 * eta + 0.1e1 / 0.3e1) * (ci2 ^ 4) + (0.5e1 / 0.36e2 * eta + 0.5e1 / 0.36e2) * (ci2 ^ 2) - eta / 0.36e2 - 0.1e1 / 0.36e2) * ((eta - 1) ^ 2) * sin((5 * f + g)) - 0.13e2 / 0.3e1 * (1 + eta) * Delta * (eta - 1) * ((ci2 ^ 8) - 0.77e2 / 0.52e2 * (ci2 ^ 6) + 0.11e2 / 0.20e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.130e3 - 0.1e1 / 0.130e3) * cos((g + 3 * f)) - 0.25e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 6) - 0.87e2 / 0.100e3 * (ci2 ^ 4) + 0.41e2 / 0.250e3 * (ci2 ^ 2) - 0.1e1 / 0.250e3) * cos((3 * g + f)) + (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * cos((f - g)) + ((0.153e3 / 0.10e2 * eta + 0.17e2 / 0.5e1 * (eta ^ 3) - 0.875e3 / 0.12e2 + 0.2177e4 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.203e3 / 0.40e2 * (eta ^ 3) - 0.477e3 / 0.20e2 * eta + 0.8569e4 / 0.80e2 - 0.4291e4 / 0.80e2 * (eta ^ 2)) * (ci2 ^ 6) + (0.7e1 / 0.3e1 * (eta ^ 3) + 0.54e2 / 0.5e1 * eta - 0.1379e4 / 0.30e2 + 0.347e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.35e2 / 0.96e2 * (eta ^ 3) - 0.207e3 / 0.160e3 * eta + 0.2369e4 / 0.480e3 - 0.1061e4 / 0.480e3 * (eta ^ 2)) * (ci2 ^ 2) + ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1) / 0.96e2) * sin((f + g)) - 0.14e2 * cos((f + g)) * Delta * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 8) + (-0.41e2 / 0.28e2 * (eta ^ 2) + 0.31e2 / 0.28e2) * (ci2 ^ 6) + (0.15e2 / 0.28e2 * (eta ^ 2) - 0.61e2 / 0.140e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3)) / 0.4e1 + 0.41e2 / 0.240e3 * ((ci2 ^ 4) - 0.3e1 / 0.41e2 * (ci2 ^ 2) - 0.1e1 / 0.41e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((5 * g + 2 * h + 3 * f)) + (0.7e1 / 0.48e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.3e1 / 0.28e2) * sin((2 * f + 5 * g)) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * cos((4 * f + 3 * g)) + 0.11e2 / 0.4e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.39e2 / 0.44e2 * (ci2 ^ 4) + 0.41e2 / 0.220e3 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * Delta * (eta - 1) * cos((3 * g)) + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * sin((-g + 2 * h + 2 * f)) / 0.8e1 - (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.3e1 / 0.4e1) * sin((-2 * h + 3 * g + 6 * f)) / 0.240e3 + 0.7e1 / 0.48e2 * (ci2 - 0.1e1 / 0.2e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 + 0.1e1 / 0.2e1) * ((ci2 ^ 2) + 0.1e1 / 0.7e1) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((5 * g + 2 * h + 2 * f)) + 0.7e1 / 0.4e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.17e2 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.57e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.84e2 * (eta ^ 2) - 0.53e2 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * Delta * cos((g - 2 * h)) - ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 1) * sin((g + 2 * h + 4 * f)) / 0.48e2 + 0.3e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - (ci2 ^ 4) + 0.7e1 / 0.30e2 * (ci2 ^ 2) - 0.1e1 / 0.120e3) * cos((g - 2 * h + 2 * f)) + (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 4) + (-0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * (ci2 ^ 2) - (eta ^ 2) / 0.40e2 - 0.3e1 / 0.40e2) * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sin((5 * g + 2 * h + 4 * f)) / 0.24e2 - 0.7e1 / 0.240e3 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 4) + (-0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * (ci2 ^ 2) - (eta ^ 2) / 0.28e2 + 0.1e1 / 0.28e2) * sin((5 * g + 2 * h + 6 * f)) + 0.3e1 / 0.80e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.11e2 / 0.9e1) * (ci2 ^ 2) - 0.5e1 / 0.12e2 * (eta ^ 2) + 0.5e1 / 0.12e2) * sin((-2 * h + 3 * g + 2 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.14e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 2) / 0.4e1 - 0.3e1 / 0.4e1) * sin((-2 * h + 3 * g + 4 * f)) / 0.80e2 - (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * sin((5 * g + 2 * h + 8 * f)) / 0.160e3 - 0.7e1 / 0.240e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 2) - 0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * sin((6 * f + 5 * g)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 2) - 0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * ((ci2 + 1) ^ 2) * sin((5 * g + 4 * f)) / 0.24e2 - (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((8 * f + 5 * g)) / 0.160e3 - (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((-2 * h + 3 * g)) / 0.96e2 + 0.8e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.27e2 / 0.32e2 * (ci2 ^ 4) + 0.3e1 / 0.20e2 * (ci2 ^ 2) - 0.1e1 / 0.320e3) * Delta * cos((2 * f + 3 * g)) - 0.9e1 / 0.80e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (eta + 0.31e2 / 0.9e1) * sin((3 * g + 6 * f)) + 0.8e1 * (1 + eta) * Delta * ((ci2 ^ 8) - 0.43e2 / 0.32e2 * (ci2 ^ 6) + 0.69e2 / 0.160e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.320e3 - 0.1e1 / 0.320e3) * cos((3 * g + 2 * h + 2 * f)) - 0.3e1 / 0.4e1 * (ci2 ^ 2) * (1 + eta) * Delta * (((eta ^ 2) + 0.77e2 / 0.9e1) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) - 0.14e2) * (ci2 ^ 4) + (0.17e2 / 0.30e2 * (eta ^ 2) + 0.47e2 / 0.6e1) * (ci2 ^ 2) + (eta ^ 2) / 0.30e2 - 0.3e1 / 0.2e1) * cos((g + 2 * h)) - (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.16e2 / 0.15e2 * (eta ^ 2) - 0.113e3 / 0.30e2 * eta - 0.14e2 / 0.3e1 + (eta ^ 4) + 0.47e2 / 0.30e2 * (eta ^ 3)) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 4) - 0.47e2 / 0.40e2 * (eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) + 0.113e3 / 0.40e2 * eta + 0.7e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 4) + 0.23e2 / 0.120e3 * (eta ^ 3) + 0.7e1 / 0.60e2 * (eta ^ 2) - 0.67e2 / 0.120e3 * eta - 0.19e2 / 0.30e2) * sin((g - 2 * h)) / 0.4e1 + 0.11e2 / 0.4e1 * ((ci2 ^ 8) - 0.61e2 / 0.44e2 * (ci2 ^ 6) + 0.53e2 / 0.110e3 * (ci2 ^ 4) - 0.7e1 / 0.1320e4 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * ((1 + eta) ^ 2) * Delta * (eta - 1) * cos((3 * g + 2 * h)) - 0.13e2 / 0.120e3 * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * (ci2 ^ 2) + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (ci2 ^ 4) * (1 + eta) * (eta - 1) * sin((3 * g + 2 * h + 6 * f)) + (ci2 ^ 4) * (1 + eta) * (((eta ^ 2) + 0.3e1 / 0.2e1 * eta + 0.7e1 / 0.5e1) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * (eta ^ 2) - 0.15e2 / 0.8e1 * eta - 0.7e1 / 0.4e1) * (ci2 ^ 2) + 0.11e2 / 0.30e2 * (eta ^ 2) + 0.11e2 / 0.20e2 * eta + 0.31e2 / 0.60e2) * (eta - 1) * sin((3 * g + 2 * h)) / 0.4e1 + 0.3e1 / 0.2e1 * (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * cos((3 * g + 2 * h + 4 * f)) - 0.13e2 / 0.48e2 * (((eta ^ 2) + 0.16e2 / 0.5e1 * eta + 0.25e2 / 0.13e2) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.222e3 / 0.65e2 * eta - 0.561e3 / 0.260e3) * (ci2 ^ 4) + (0.67e2 / 0.260e3 * (eta ^ 2) + 0.11e2 / 0.13e2 * eta + 0.147e3 / 0.260e3) * (ci2 ^ 2) - (eta ^ 2) / 0.104e3 - 0.2e1 / 0.65e2 * eta - 0.11e2 / 0.520e3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((g - 2 * h + 4 * f)) + (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.35e2 / 0.24e2 * eta + 0.163e3 / 0.120e3) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 2) - 0.9e1 / 0.8e1 * eta - 0.21e2 / 0.20e2) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 2) + 0.7e1 / 0.40e2 * eta + 0.1e1 / 0.6e1) * (eta - 1) * sin((3 * g)) / 0.4e1 + ((-0.11e2 / 0.16e2 * (eta ^ 3) - 0.137e3 / 0.80e2 * (eta ^ 2) + 0.551e3 / 0.240e3 * eta + 0.1001e4 / 0.240e3) * (ci2 ^ 8) + (0.301e3 / 0.320e3 * (eta ^ 3) + 0.747e3 / 0.320e3 * (eta ^ 2) - 0.5191e4 / 0.960e3 - 0.2833e4 / 0.960e3 * eta) * (ci2 ^ 6) + (-0.49e2 / 0.160e3 * (eta ^ 3) - 0.359e3 / 0.480e3 * (eta ^ 2) + 0.27e2 / 0.32e2 * eta + 0.251e3 / 0.160e3) * (ci2 ^ 4) + (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) * (ci2 ^ 2) / 0.384e3 + (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) / 0.384e3) * sin((3 * g + 2 * h + 4 * f)) + ((0.13e2 / 0.40e2 * (eta ^ 3) + 0.19e2 / 0.20e2 * (eta ^ 2) - 0.41e2 / 0.24e2 * eta - 0.29e2 / 0.15e2) * (ci2 ^ 8) + (-0.69e2 / 0.160e3 * (eta ^ 3) - 0.97e2 / 0.80e2 * (eta ^ 2) + 0.1109e4 / 0.480e3 * eta + 0.311e3 / 0.120e3) * (ci2 ^ 6) + (0.13e2 / 0.80e2 * (eta ^ 3) + 0.91e2 / 0.240e3 * (eta ^ 2) - 0.107e3 / 0.120e3 * eta - 0.29e2 / 0.30e2) * (ci2 ^ 4) - ((1 + eta) * (eta ^ 2 - 5) * ci2 ^ 2) / 0.480e3 - ((1 + eta) * (eta ^ 2 - 5)) / 0.480e3) * sin((3 * g + 2 * h + 2 * f)) - 0.27e2 / 0.40e2 * (((eta ^ 3) + 0.68e2 / 0.27e2 * (eta ^ 2) - 0.179e3 / 0.54e2 * eta - 0.329e3 / 0.54e2) * (ci2 ^ 6) + (-0.95e2 / 0.108e3 * (eta ^ 3) - 0.59e2 / 0.27e2 * (eta ^ 2) + 0.145e3 / 0.54e2 * eta + 0.533e3 / 0.108e3) * (ci2 ^ 4) + (0.13e2 / 0.81e2 * (eta ^ 3) + 0.41e2 / 0.108e3 * (eta ^ 2) - 0.115e3 / 0.324e3 * eta - 0.55e2 / 0.81e2) * (ci2 ^ 2) - 0.5e1 / 0.1296e4 * (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1)) * (ci2 - 1) * (ci2 + 1) * sin((4 * f + 3 * g)) + 0.29e2 / 0.80e2 * (((eta ^ 3) + 0.79e2 / 0.29e2 * (eta ^ 2) - 0.421e3 / 0.87e2 * eta - 0.475e3 / 0.87e2) * (ci2 ^ 6) + (-0.91e2 / 0.116e3 * (eta ^ 3) - 0.241e3 / 0.116e3 * (eta ^ 2) + 0.471e3 / 0.116e3 * eta + 0.525e3 / 0.116e3) * (ci2 ^ 4) + (0.65e2 / 0.348e3 * (eta ^ 3) + 0.41e2 / 0.116e3 * (eta ^ 2) - 0.385e3 / 0.348e3 * eta - 0.403e3 / 0.348e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.174e3) * (ci2 - 1) * (ci2 + 1) * sin((2 * f + 3 * g)) + 0.3e1 * (1 + eta) * ((ci2 ^ 8) - 0.3e1 / 0.2e1 * (ci2 ^ 6) + 0.17e2 / 0.30e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.120e3 - 0.1e1 / 0.120e3) * Delta * cos((g + 2 * f)) - (ci2 ^ 2) * (eta - 1) * (((eta ^ 2) - 0.26e2 / 0.5e1 * eta - 0.53e2 / 0.10e2) * (ci2 ^ 6) + (-0.27e2 / 0.16e2 * (eta ^ 2) + 0.351e3 / 0.40e2 * eta + 0.729e3 / 0.80e2) * (ci2 ^ 4) + (0.3e1 / 0.5e1 * (eta ^ 2) - 0.51e2 / 0.10e2 * eta - 0.51e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 2) / 0.40e2 + 0.41e2 / 0.40e2 * eta + 0.37e2 / 0.40e2) * sin((-g - 2 * h + 2 * f)) / 0.6e1 + 0.5e1 / 0.24e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) - 0.71e2 / 0.5e1 * eta - 0.454e3 / 0.25e2) * (ci2 ^ 6) + (-0.87e2 / 0.100e3 * (eta ^ 3) + 0.12e2 / 0.25e2 * (eta ^ 2) + 0.1149e4 / 0.100e3 * eta + 0.723e3 / 0.50e2) * (ci2 ^ 4) + (0.21e2 / 0.100e3 * (eta ^ 3) + (eta ^ 2) / 0.50e2 - 0.41e2 / 0.20e2 * eta - 0.119e3 / 0.50e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.100e3) * sin((g - 2 * h + 2 * f)) - (ci2 ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((0.7e1 / 0.4e1 * (eta ^ 3) + (eta ^ 4) + 0.35e2 / 0.4e1 * (eta ^ 2) + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.7e1 / 0.4e1 * (eta ^ 3) - 0.35e2 / 0.4e1 * (eta ^ 2) - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 4) / 0.5e1 - 0.7e1 / 0.20e2 * (eta ^ 3) + 0.33e2 / 0.20e2 * (eta ^ 2) + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2) * sin((g + 2 * h)) / 0.12e2 + (1 + eta) * Delta * (((eta ^ 2) - 0.32e2 / 0.3e1) * (ci2 ^ 8) + (-0.21e2 / 0.16e2 * (eta ^ 2) + 0.259e3 / 0.16e2) * (ci2 ^ 6) + (0.8e1 / 0.15e2 * (eta ^ 2) - 0.309e3 / 0.40e2) * (ci2 ^ 4) + (-0.19e2 / 0.480e3 * (eta ^ 2) + 0.547e3 / 0.480e3) * (ci2 ^ 2) - 0.7e1 / 0.480e3 * (eta ^ 2) + 0.7e1 / 0.480e3) * cos(g) - (ci2 ^ 2) * (eta - 1) * (((eta ^ 2) - 0.131e3 / 0.5e1 * eta - 0.118e3 / 0.5e1) * (ci2 ^ 6) + (-(3 * eta ^ 2) + 0.837e3 / 0.20e2 * eta + 0.789e3 / 0.20e2) * (ci2 ^ 4) + (0.13e2 / 0.10e2 * (eta ^ 2) - 0.112e3 / 0.5e1 * eta - 0.213e3 / 0.10e2) * (ci2 ^ 2) + (eta ^ 2) / 0.10e2 + 0.41e2 / 0.10e2 * eta + 0.37e2 / 0.10e2) * sin((-g + 2 * f)) / 0.24e2 + ((-0.41e2 / 0.6e1 - (eta ^ 3) / 0.24e2 + 0.13e2 / 0.12e2 * (eta ^ 2) - 0.433e3 / 0.120e3 * eta) * (ci2 ^ 8) + (0.4643e4 / 0.480e3 + 0.29e2 / 0.240e3 * (eta ^ 3) - 0.181e3 / 0.96e2 * (eta ^ 2) + 0.289e3 / 0.60e2 * eta) * (ci2 ^ 6) + (-0.37e2 / 0.20e2 * eta - 0.159e3 / 0.40e2 - (eta ^ 3) / 0.48e2 + 0.263e3 / 0.240e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.7e1 / 0.480e3 * (eta ^ 3) - 0.97e2 / 0.480e3 * (eta ^ 2) + 0.83e2 / 0.480e3 * eta + 0.209e3 / 0.480e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.480e3) * sin((g + 2 * f)) - (((eta ^ 3) - (5 * eta ^ 2) + 0.13e2 / 0.5e1 * eta + 0.61e2 / 0.5e1) * (ci2 ^ 6) + (-0.13e2 / 0.8e1 * (eta ^ 3) + 0.331e3 / 0.40e2 * (eta ^ 2) - 0.151e3 / 0.40e2 * eta - 0.763e3 / 0.40e2) * (ci2 ^ 4) + ((eta ^ 3) / 0.2e1 - 0.9e1 / 0.2e1 * (eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.99e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 3) / 0.20e2 + 0.4e1 / 0.5e1 * (eta ^ 2) - 0.13e2 / 0.20e2 * eta - 0.17e2 / 0.10e2) * (ci2 ^ 2) * sin((g + 2 * h + 2 * f)) / 0.4e1 - 0.7e1 / 0.24e2 * (((eta ^ 2) + 0.73e2 / 0.35e2 * eta + 0.29e2 / 0.35e2) * (ci2 ^ 8) + (-0.433e3 / 0.280e3 * (eta ^ 2) - 0.233e3 / 0.70e2 * eta - 0.409e3 / 0.280e3) * (ci2 ^ 6) + (0.41e2 / 0.70e2 * (eta ^ 2) + 0.6e1 / 0.5e1 * eta + 0.37e2 / 0.70e2) * (ci2 ^ 4) - ((1 + eta) * (eta - 41) * ci2 ^ 2) / 0.560e3 - (eta ^ 2) / 0.112e3 - eta / 0.35e2 - 0.11e2 / 0.560e3) * (eta - 1) * sin((g + 4 * f)) - sin(g) * (ci2 ^ 2) * (((eta ^ 4) + 0.129e3 / 0.80e2 * (eta ^ 3) + 0.239e3 / 0.80e2 * (eta ^ 2) + 0.99e2 / 0.80e2 * eta + 0.189e3 / 0.80e2) * (ci2 ^ 6) + (-0.21e2 / 0.16e2 * (eta ^ 4) - 0.17e2 / 0.8e1 * (eta ^ 3) - 0.137e3 / 0.32e2 * (eta ^ 2) - 0.41e2 / 0.16e2 * eta - 0.707e3 / 0.160e3) * (ci2 ^ 4) + (0.7e1 / 0.20e2 * (eta ^ 4) + 0.91e2 / 0.160e3 * (eta ^ 3) + 0.287e3 / 0.160e3 * (eta ^ 2) + 0.71e2 / 0.32e2 * eta + 0.511e3 / 0.160e3) * (ci2 ^ 2) + (eta ^ 4) / 0.40e2 + 0.7e1 / 0.160e3 * (eta ^ 3) - 0.33e2 / 0.160e3 * (eta ^ 2) - 0.21e2 / 0.32e2 * eta - 0.129e3 / 0.160e3) / 0.3e1) * sqrt((-eta ^ 2 + 1)) + 0.13e2 / 0.80e2 * (1 + eta) * (eta - 1) * (((eta ^ 2) - 0.59e2 / 0.13e2 * eta - 0.138e3 / 0.13e2) * (ci2 ^ 8) + (-0.71e2 / 0.52e2 * (eta ^ 2) + 0.295e3 / 0.52e2 * eta + 0.174e3 / 0.13e2) * (ci2 ^ 6) + (0.17e2 / 0.39e2 * (eta ^ 2) - 0.121e3 / 0.78e2 * eta - 0.287e3 / 0.78e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * sin((3 * g + 2 * h + 5 * f)) + ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((-g + 2 * h + 3 * f)) / 0.160e3 + ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((3 * g + 7 * f)) / 0.32e2 + 0.59e2 / 0.80e2 * (((eta ^ 3) + 0.908e3 / 0.177e3 * (eta ^ 2) + 0.1891e4 / 0.177e3 * eta + 0.1088e4 / 0.177e3) * (ci2 ^ 8) + (-0.391e3 / 0.236e3 * (eta ^ 3) - 0.480e3 / 0.59e2 * (eta ^ 2) - 0.4025e4 / 0.236e3 * eta - 0.588e3 / 0.59e2) * (ci2 ^ 6) + (0.49e2 / 0.59e2 * (eta ^ 3) + 0.1541e4 / 0.354e3 * (eta ^ 2) + 0.542e3 / 0.59e2 * eta + 0.1909e4 / 0.354e3) * (ci2 ^ 4) + (-0.169e3 / 0.1416e4 * (eta ^ 3) - 0.1129e4 / 0.1416e4 * (eta ^ 2) - 0.2399e4 / 0.1416e4 * eta - 0.1391e4 / 0.1416e4) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.1416e4) * (eta - 1) * sin((f - g)) - 0.97e2 / 0.80e2 * (eta - 1) * (((eta ^ 3) - 0.738e3 / 0.97e2 * (eta ^ 2) - 0.1781e4 / 0.97e2 * eta - 0.942e3 / 0.97e2) * (ci2 ^ 8) + (-0.515e3 / 0.388e3 * (eta ^ 3) + 0.1017e4 / 0.97e2 * (eta ^ 2) + 0.9775e4 / 0.388e3 * eta + 0.1293e4 / 0.97e2) * (ci2 ^ 6) + (0.119e3 / 0.291e3 * (eta ^ 3) - 0.2125e4 / 0.582e3 * (eta ^ 2) - 0.2510e4 / 0.291e3 * eta - 0.883e3 / 0.194e3) * (ci2 ^ 4) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * sin((3 * g + 2 * h + f)) - 0.9e1 / 0.80e2 * (((eta ^ 3) + 0.188e3 / 0.81e2 * (eta ^ 2) - 0.401e3 / 0.81e2 * eta - 0.592e3 / 0.81e2) * (ci2 ^ 8) + (-0.77e2 / 0.36e2 * (eta ^ 3) - 0.445e3 / 0.81e2 * (eta ^ 2) + 0.1297e4 / 0.324e3 * eta + 0.701e3 / 0.81e2) * (ci2 ^ 6) + (0.113e3 / 0.81e2 * (eta ^ 3) + 0.145e3 / 0.54e2 * (eta ^ 2) - 0.176e3 / 0.81e2 * eta - 0.617e3 / 0.162e3) * (ci2 ^ 4) + (-0.169e3 / 0.648e3 * (eta ^ 3) - (eta ^ 2) / 0.72e2 + 0.869e3 / 0.648e3 * eta + 0.709e3 / 0.648e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.648e3) * (eta - 1) * sin((g + 3 * f)) - (1 + eta) * (((eta ^ 3) + 0.391e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3203e4 / 0.180e3) * (ci2 ^ 8) + (-0.51e2 / 0.40e2 * (eta ^ 3) - 0.2149e4 / 0.240e3 * (eta ^ 2) - 0.171e3 / 0.20e2 * eta + 0.17101e5 / 0.720e3) * (ci2 ^ 6) + (0.11e2 / 0.30e2 * (eta ^ 3) + 0.251e3 / 0.90e2 * (eta ^ 2) + 0.27e2 / 0.10e2 * eta - 0.64e2 / 0.9e1) * (ci2 ^ 4) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59) * ci2 ^ 2) / 0.1440e4 - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * sin((3 * g + 2 * h + 3 * f)) / 0.4e1 - 0.9e1 / 0.40e2 * (((eta ^ 2) - 0.8e1 / 0.27e2 * eta - 0.137e3 / 0.27e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) + 0.4e1 / 0.9e1 * eta + 0.70e2 / 0.9e1) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.103e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 2) + 0.4e1 / 0.27e2 * eta + 0.16e2 / 0.27e2) * (ci2 ^ 2) * (1 + eta) * (eta - 1) * sin((g + 2 * h + 3 * f)) - (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.127e3 / 0.20e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3113e4 / 0.180e3) * (ci2 ^ 6) + (-0.31e2 / 0.40e2 * (eta ^ 3) - 0.271e3 / 0.48e2 * (eta ^ 2) - 0.27e2 / 0.5e1 * eta + 0.3553e4 / 0.240e3) * (ci2 ^ 4) + (0.13e2 / 0.120e3 * (eta ^ 3) + 0.653e3 / 0.720e3 * (eta ^ 2) + 0.9e1 / 0.10e2 * eta - 0.1567e4 / 0.720e3) * (ci2 ^ 2) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * sin((3 * g + 3 * f)) / 0.4e1 + 0.9e1 / 0.80e2 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) - 0.74e2 / 0.81e2 * (eta ^ 2) - 0.469e3 / 0.81e2 * eta - 0.230e3 / 0.81e2) * (ci2 ^ 6) + (-0.25e2 / 0.36e2 * (eta ^ 3) + 0.70e2 / 0.27e2 * (eta ^ 2) + 0.1031e4 / 0.108e3 * eta + 0.148e3 / 0.27e2) * (ci2 ^ 4) + (0.25e2 / 0.324e3 * (eta ^ 3) - 0.163e3 / 0.162e3 * (eta ^ 2) - 0.1025e4 / 0.324e3 * eta - 0.323e3 / 0.162e3) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.648e3) * sin((g - 2 * h + 3 * f)) + (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.585e3 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.4e1 * eta - 0.871e3 / 0.8e1) * (ci2 ^ 6) + (0.3e1 / 0.16e2 * (eta ^ 3) - 0.2193e4 / 0.32e2 * (eta ^ 2) - 0.81e2 / 0.8e1 * eta + 0.3075e4 / 0.32e2) * (ci2 ^ 4) + (-0.17e2 / 0.48e2 * (eta ^ 3) + 0.1463e4 / 0.96e2 * (eta ^ 2) + 0.15e2 / 0.8e1 * eta - 0.1837e4 / 0.96e2) * (ci2 ^ 2) + 0.5e1 / 0.192e3 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * sin((g - 2 * h + f)) / 0.10e2 - 0.3e1 / 0.80e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sin((2 * h + g + 5 * f))) / (eta ^ 8) / a ^ 4 / (1 + eta) 0.15e2 * ci2 * (0.39e2 / 0.10e2 * (-0.21e2 / 0.104e3 * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.41e2 / 0.252e3 * eta + 0.13e2 / 0.84e2) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((-3 * g + f)) - 0.15e2 / 0.104e3 * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 8) + (-0.31e2 / 0.20e2 * eta - 0.83e2 / 0.60e2) * (ci2 ^ 6) + (0.29e2 / 0.45e2 * eta + 0.3e1 / 0.5e1) * (ci2 ^ 4) + (-0.7e1 / 0.180e3 * eta - 0.7e1 / 0.180e3) * (ci2 ^ 2) - eta / 0.180e3 - 0.1e1 / 0.180e3) * ((eta - 1) ^ 2) * cos((5 * f + g)) - 0.5e1 / 0.3e1 * (1 + eta) * Delta * (eta - 1) * ((ci2 ^ 8) - 0.77e2 / 0.52e2 * (ci2 ^ 6) + 0.11e2 / 0.20e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.130e3 - 0.1e1 / 0.130e3) * sin((g + 3 * f)) + 0.125e3 / 0.13e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.87e2 / 0.100e3 * (ci2 ^ 4) + 0.41e2 / 0.250e3 * (ci2 ^ 2) - 0.1e1 / 0.250e3) * (eta - 1) * sin((3 * g + f)) - 0.5e1 / 0.13e2 * (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * sin((f - g)) + (((eta ^ 3) - 0.1333e4 / 0.156e3 * (eta ^ 2) + 0.63e2 / 0.26e2 * eta + 0.851e3 / 0.156e3) * (ci2 ^ 8) + (-0.193e3 / 0.104e3 * (eta ^ 3) + 0.2435e4 / 0.208e3 * (eta ^ 2) - 0.225e3 / 0.52e2 * eta - 0.1065e4 / 0.208e3) * (ci2 ^ 6) + (0.40e2 / 0.39e2 * (eta ^ 3) + 0.33e2 / 0.13e2 * eta - 0.151e3 / 0.78e2 - 0.110e3 / 0.39e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.2159e4 / 0.1248e4 - 0.185e3 / 0.1248e4 * (eta ^ 3) - 0.859e3 / 0.1248e4 * (eta ^ 2) - 0.201e3 / 0.416e3 * eta) * (ci2 ^ 2) - 0.5e1 / 0.1248e4 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * cos((f + g)) - 0.70e2 / 0.13e2 * sin((f + g)) * Delta * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 8) + (-0.41e2 / 0.28e2 * (eta ^ 2) + 0.31e2 / 0.28e2) * (ci2 ^ 6) + (0.15e2 / 0.28e2 * (eta ^ 2) - 0.61e2 / 0.140e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3)) * (1 + eta) - 0.3e1 / 0.16e2 * (ci2 ^ 4) * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.3e1) * cos((3 * g + 2 * h + 7 * f)) - 0.11e2 / 0.40e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((7 * f + 5 * g)) + 0.39e2 / 0.40e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) - 0.176e3 / 0.39e2 * eta - 0.413e3 / 0.39e2) * (ci2 ^ 6) + (-0.45e2 / 0.52e2 * (eta ^ 2) + 0.173e3 / 0.52e2 * eta + 0.8e1) * (ci2 ^ 4) + (0.23e2 / 0.156e3 * (eta ^ 2) - 0.23e2 / 0.52e2 * eta - 0.79e2 / 0.78e2) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * cos((3 * g + 5 * f)) - 0.3e1 / 0.8e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.53e2 / 0.5e1 * eta + 0.46e2 / 0.5e1) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.159e3 / 0.20e2 * eta - 0.33e2 / 0.5e1) * (ci2 ^ 4) + ((eta ^ 2) / 0.4e1 + 0.79e2 / 0.60e2 * eta + 0.31e2 / 0.30e2) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * (eta - 1) * cos((-g + 2 * h + f)) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * sin((-g + 2 * h + f)) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * sin((3 * g + 5 * f)) + 0.9e1 / 0.40e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * ((eta - 1) ^ 2) * cos((2 * h + g + 5 * f)) + 0.13e2 / 0.20e2 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 4) + (-0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 + 0.1e1 / 0.26e2) * cos((5 * g + 2 * h + 5 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2 - 3) * ci2 ^ 2) - 0.3e1 / 0.10e2 * (eta ^ 2) + 0.3e1 / 0.10e2) * cos((-2 * h + 3 * g + 3 * f)) / 0.4e1 + 0.27e2 / 0.80e2 * (1 + eta) * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.12e2 * eta - 0.11e2 / 0.12e2) * (ci2 ^ 4) + (0.29e2 / 0.108e3 * eta + 0.1e1 / 0.4e1) * (ci2 ^ 2) - eta / 0.108e3 - 0.1e1 / 0.108e3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((g - 2 * h + 5 * f)) + 0.15e2 * (1 + eta) * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.20e2 * (eta ^ 2) + 0.31e2 / 0.20e2) * (ci2 ^ 4) + (0.23e2 / 0.150e3 * (eta ^ 2) - 0.37e2 / 0.150e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (ci2 - 1) * (ci2 + 1) * Delta * sin((3 * g + 3 * f)) - 0.13e2 / 0.20e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.23e2 / 0.13e2) * (ci2 ^ 2) - 0.3e1 / 0.26e2 * (eta ^ 2) + 0.3e1 / 0.26e2) * cos((5 * f + 5 * g)) - 0.13e2 / 0.40e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-2 * h + 3 * g + f)) - 0.3e1 / 0.2e1 * (ci2 ^ 4) * ((1 + eta) ^ 2) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * (eta - 1) * sin((3 * g + 2 * h + 5 * f)) + 0.11e2 / 0.40e2 * (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * cos((5 * g + 2 * h + 7 * f)) + 0.21e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.5e1 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.4e1) * (ci2 ^ 4) + (0.3e1 / 0.14e2 * (eta ^ 2) - 0.13e2 / 0.70e2) * (ci2 ^ 2) - (eta ^ 2) / 0.140e3 + 0.1e1 / 0.140e3) * sin((g - 2 * h + f)) + (((-0.39e2 / 0.20e2 * (eta ^ 3) - 0.57e2 / 0.10e2 * (eta ^ 2) + 0.41e2 / 0.4e1 * eta + 0.58e2 / 0.5e1) * (ci2 ^ 8) + (0.291e3 / 0.40e2 * (eta ^ 2) - 0.1109e4 / 0.80e2 * eta + 0.207e3 / 0.80e2 * (eta ^ 3) - 0.311e3 / 0.20e2) * (ci2 ^ 6) + (-0.39e2 / 0.40e2 * (eta ^ 3) - 0.91e2 / 0.40e2 * (eta ^ 2) + 0.107e3 / 0.20e2 * eta + 0.29e2 / 0.5e1) * (ci2 ^ 4) + ((1 + eta) * (eta ^ 2 - 5) * ci2 ^ 2) / 0.80e2 + ((1 + eta) * (eta ^ 2 - 5)) / 0.80e2) * cos((3 * g + 2 * h + 2 * f)) + ((-0.1001e4 / 0.40e2 + 0.33e2 / 0.8e1 * (eta ^ 3) + 0.411e3 / 0.40e2 * (eta ^ 2) - 0.551e3 / 0.40e2 * eta) * (ci2 ^ 8) + (0.5191e4 / 0.160e3 - 0.903e3 / 0.160e3 * (eta ^ 3) - 0.2241e4 / 0.160e3 * (eta ^ 2) + 0.2833e4 / 0.160e3 * eta) * (ci2 ^ 6) + (-0.753e3 / 0.80e2 + 0.147e3 / 0.80e2 * (eta ^ 3) + 0.359e3 / 0.80e2 * (eta ^ 2) - 0.81e2 / 0.16e2 * eta) * (ci2 ^ 4) - (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) * (ci2 ^ 2) / 0.64e2 - (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1) / 0.64e2) * cos((3 * g + 2 * h + 4 * f)) + ((-0.11e2 / 0.4e1 * (eta ^ 3) + 0.17e2 / 0.2e1 * (eta ^ 2) + 0.277e3 / 0.20e2 * eta + 0.22e2 / 0.5e1) * (ci2 ^ 8) + (0.83e2 / 0.20e2 * (eta ^ 3) - 0.1081e4 / 0.80e2 * (eta ^ 2) - 0.703e3 / 0.40e2 * eta - 0.13e2 / 0.16e2) * (ci2 ^ 6) + (-0.11e2 / 0.8e1 * (eta ^ 3) + 0.18e2 / 0.5e1 * eta - 0.117e3 / 0.20e2 + 0.277e3 / 0.40e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.199e3 / 0.80e2 - (eta ^ 3) / 0.16e2 - 0.19e2 / 0.16e2 * (eta ^ 2) + 0.73e2 / 0.80e2 * eta) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 - 5)) / 0.80e2) * cos((g + 2 * f)) - 0.7e1 / 0.8e1 * ((ci2 ^ 2) + 0.1e1 / 0.7e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (ci2 + 0.1e1 / 0.2e1) * (eta - 1) * (ci2 - 0.1e1 / 0.2e1) * cos((5 * g + 2 * h + 2 * f)) + 0.3e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.14e2 / 0.3e1) * (ci2 ^ 2) - (eta ^ 2) / 0.4e1 - 0.3e1 / 0.4e1) * cos((-2 * h + 3 * g + 4 * f)) + (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 2) - 0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * cos((5 * g + 4 * f)) / 0.4e1 - (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.11e2 / 0.10e2) * (ci2 ^ 4) + (-0.3e1 / 0.40e2 * (eta ^ 2) - 0.9e1 / 0.40e2) * (ci2 ^ 2) - (eta ^ 2) / 0.40e2 - 0.3e1 / 0.40e2) * cos((5 * g + 2 * h + 4 * f)) / 0.4e1 + 0.7e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 4) + (-0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * (ci2 ^ 2) - (eta ^ 2) / 0.28e2 + 0.1e1 / 0.28e2) * cos((5 * g + 2 * h + 6 * f)) - 0.3e1 / 0.80e2 * (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((8 * f + 5 * g)) - (ci2 ^ 4) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-2 * h + 3 * g)) / 0.16e2 - 0.48e2 * ((ci2 ^ 6) - 0.27e2 / 0.32e2 * (ci2 ^ 4) + 0.3e1 / 0.20e2 * (ci2 ^ 2) - 0.1e1 / 0.320e3) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sin((2 * f + 3 * g)) - 0.21e2 / 0.2e1 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 2) - 0.17e2 / 0.7e1) * (ci2 ^ 6) + (-0.27e2 / 0.28e2 * (eta ^ 2) + 0.57e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.84e2 * (eta ^ 2) - 0.53e2 / 0.140e3) * (ci2 ^ 2) - (eta ^ 2) / 0.120e3 + 0.1e1 / 0.120e3) * sin((g - 2 * h)) + 0.9e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 2) - 0.11e2 / 0.9e1) * (ci2 ^ 2) - 0.5e1 / 0.12e2 * (eta ^ 2) + 0.5e1 / 0.12e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-2 * h + 3 * g + 2 * f)) - 0.18e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - (ci2 ^ 4) + 0.7e1 / 0.30e2 * (ci2 ^ 2) - 0.1e1 / 0.120e3) * sin((g - 2 * h + 2 * f)) - 0.7e1 / 0.40e2 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.33e2 / 0.7e1) * (ci2 ^ 2) - 0.3e1 / 0.28e2 * (eta ^ 2) + 0.3e1 / 0.28e2) * cos((6 * f + 5 * g)) + 0.3e1 / 0.80e2 * (ci2 ^ 6) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * cos((5 * g + 2 * h + 8 * f)) + ((eta - 0.67e2 / 0.5e1) * (ci2 ^ 4) + (-eta + 0.67e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.5e1 - 0.13e2 / 0.5e1) * (ci2 ^ 2) * (1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 1) * cos((g + 2 * h + 4 * f)) / 0.8e1 - 0.9e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * Delta * (((eta ^ 2) + 0.77e2 / 0.9e1) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) - 0.14e2) * (ci2 ^ 4) + (0.17e2 / 0.30e2 * (eta ^ 2) + 0.47e2 / 0.6e1) * (ci2 ^ 2) + (eta ^ 2) / 0.30e2 - 0.3e1 / 0.2e1) * sin((g + 2 * h)) + 0.33e2 / 0.2e1 * ((ci2 ^ 8) - 0.61e2 / 0.44e2 * (ci2 ^ 6) + 0.53e2 / 0.110e3 * (ci2 ^ 4) - 0.7e1 / 0.1320e4 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * ((1 + eta) ^ 2) * Delta * (eta - 1) * sin((3 * g + 2 * h)) - 0.3e1 / 0.4e1 * ((eta + 0.4e1 / 0.5e1) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.3e1 / 0.5e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * eta + 0.1e1 / 0.10e2) * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((-g + 2 * h + 2 * f)) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * (((eta ^ 3) - (5 * eta ^ 2) + 0.13e2 / 0.5e1 * eta + 0.61e2 / 0.5e1) * (ci2 ^ 6) + (-0.13e2 / 0.8e1 * (eta ^ 3) + 0.331e3 / 0.40e2 * (eta ^ 2) - 0.151e3 / 0.40e2 * eta - 0.763e3 / 0.40e2) * (ci2 ^ 4) + ((eta ^ 3) / 0.2e1 - 0.9e1 / 0.2e1 * (eta ^ 2) + 0.5e1 / 0.2e1 * eta + 0.99e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 3) / 0.20e2 + 0.4e1 / 0.5e1 * (eta ^ 2) - 0.13e2 / 0.20e2 * eta - 0.17e2 / 0.10e2) * cos((g + 2 * h + 2 * f)) + 0.3e1 / 0.2e1 * (((eta ^ 2) + 0.9e1 / 0.2e1 * eta + 0.16e2 / 0.5e1) * (ci2 ^ 8) + (-0.373e3 / 0.240e3 * (eta ^ 2) - 0.419e3 / 0.60e2 * eta - 0.1213e4 / 0.240e3) * (ci2 ^ 6) + (0.19e2 / 0.30e2 * (eta ^ 2) + 0.29e2 / 0.10e2 * eta + 0.13e2 / 0.6e1) * (ci2 ^ 4) - 0.3e1 / 0.160e3 * (eta + 7) * (1 + eta) * (ci2 ^ 2) - (eta ^ 2) / 0.96e2 - eta / 0.30e2 - 0.11e2 / 0.480e3) * (eta - 1) * cos((g + 4 * f)) + ((-0.749e3 / 0.40e2 + (eta ^ 4) + 0.59e2 / 0.40e2 * (eta ^ 3) - 0.111e3 / 0.40e2 * (eta ^ 2) - 0.551e3 / 0.40e2 * eta) * (ci2 ^ 6) + (0.2107e4 / 0.80e2 - 0.9e1 / 0.8e1 * (eta ^ 4) - 0.13e2 / 0.8e1 * (eta ^ 3) + 0.73e2 / 0.16e2 * (eta ^ 2) + 0.77e2 / 0.4e1 * eta) * (ci2 ^ 4) + (-0.943e3 / 0.80e2 + 0.2e1 / 0.5e1 * (eta ^ 4) + 0.49e2 / 0.80e2 * (eta ^ 3) - 0.143e3 / 0.16e2 * eta - 0.39e2 / 0.16e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.129e3 / 0.80e2 - (eta ^ 4) / 0.20e2 - 0.7e1 / 0.80e2 * (eta ^ 3) + 0.33e2 / 0.80e2 * (eta ^ 2) + 0.21e2 / 0.16e2 * eta) * (ci2 ^ 2) * cos(g) - 0.21e2 / 0.5e1 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) + 0.69e2 / 0.28e2 * (eta ^ 2) - 0.565e3 / 0.168e3 * eta - 0.145e3 / 0.24e2) * (ci2 ^ 6) + (-0.6e1 / 0.7e1 * (eta ^ 3) - 0.237e3 / 0.112e3 * (eta ^ 2) + 0.41e2 / 0.16e2 * eta + 0.265e3 / 0.56e2) * (ci2 ^ 4) + (0.17e2 / 0.112e3 * (eta ^ 3) + 0.61e2 / 0.168e3 * (eta ^ 2) - 0.59e2 / 0.168e3 * eta - 0.223e3 / 0.336e3) * (ci2 ^ 2) - 0.5e1 / 0.1344e4 * (1 + eta) * (eta - 1) * (eta + 0.11e2 / 0.5e1)) * cos((4 * f + 3 * g)) - 0.3e1 / 0.2e1 * (ci2 ^ 4) * (1 + eta) * (eta - 1) * (((eta ^ 2) + 0.3e1 / 0.2e1 * eta + 0.7e1 / 0.5e1) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * (eta ^ 2) - 0.15e2 / 0.8e1 * eta - 0.7e1 / 0.4e1) * (ci2 ^ 2) + 0.11e2 / 0.30e2 * (eta ^ 2) + 0.11e2 / 0.20e2 * eta + 0.31e2 / 0.60e2) * cos((3 * g + 2 * h)) + 0.9e1 * (ci2 ^ 4) * (1 + eta) * ((ci2 ^ 4) - 0.5e1 / 0.4e1 * (ci2 ^ 2) + 0.7e1 / 0.20e2) * Delta * sin((3 * g + 2 * h + 4 * f)) - 0.3e1 / 0.2e1 * (ci2 ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.16e2 / 0.15e2 * (eta ^ 2) - 0.113e3 / 0.30e2 * eta - 0.14e2 / 0.3e1 + (eta ^ 4) + 0.47e2 / 0.30e2 * (eta ^ 3)) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 4) - 0.47e2 / 0.40e2 * (eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) + 0.113e3 / 0.40e2 * eta + 0.7e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 4) + 0.23e2 / 0.120e3 * (eta ^ 3) + 0.7e1 / 0.60e2 * (eta ^ 2) - 0.67e2 / 0.120e3 * eta - 0.19e2 / 0.30e2) * cos((g - 2 * h)) + 0.13e2 / 0.20e2 * (ci2 ^ 4) * (1 + eta) * ((eta + 0.46e2 / 0.13e2) * (ci2 ^ 4) + (-0.5e1 / 0.4e1 * eta - 0.115e3 / 0.26e2) * (ci2 ^ 2) + 0.9e1 / 0.26e2 * eta + 0.31e2 / 0.26e2) * (eta - 1) * cos((3 * g + 2 * h + 6 * f)) - 0.13e2 / 0.8e1 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 2) + 0.16e2 / 0.5e1 * eta + 0.25e2 / 0.13e2) * (ci2 ^ 6) + (-0.21e2 / 0.20e2 * (eta ^ 2) - 0.222e3 / 0.65e2 * eta - 0.561e3 / 0.260e3) * (ci2 ^ 4) + (0.67e2 / 0.260e3 * (eta ^ 2) + 0.11e2 / 0.13e2 * eta + 0.147e3 / 0.260e3) * (ci2 ^ 2) - (eta ^ 2) / 0.104e3 - 0.2e1 / 0.65e2 * eta - 0.11e2 / 0.520e3) * cos((g - 2 * h + 4 * f)) - ((ci2 ^ 2) - 0.3e1 / 0.4e1) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((-2 * h + 3 * g + 6 * f)) / 0.40e2 - 0.9e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.10e2) * sin((4 * f + 3 * g)) + 0.7e1 / 0.8e1 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 2) - 0.3e1 / 0.28e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((2 * f + 5 * g)) - 0.5e1 / 0.8e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((eta + 0.91e2 / 0.25e2) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * eta - 0.273e3 / 0.100e3) * (ci2 ^ 2) + 0.11e2 / 0.100e3 * eta + 0.33e2 / 0.100e3) * cos((3 * g + 6 * f)) + 0.3e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.37e2 / 0.24e2 * eta + 0.173e3 / 0.120e3) * (ci2 ^ 4) + (-0.3e1 / 0.4e1 * (eta ^ 2) - 0.9e1 / 0.8e1 * eta - 0.21e2 / 0.20e2) * (ci2 ^ 2) + 0.7e1 / 0.60e2 * (eta ^ 2) + 0.7e1 / 0.40e2 * eta + 0.1e1 / 0.6e1) * (eta - 1) * cos((3 * g)) - 0.33e2 / 0.2e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 6) - 0.39e2 / 0.44e2 * (ci2 ^ 4) + 0.41e2 / 0.220e3 * (ci2 ^ 2) - 0.7e1 / 0.1320e4) * Delta * (eta - 1) * sin((3 * g)) + 0.7e1 / 0.4e1 * (ci2 ^ 2) * (((eta ^ 2) - 0.11e2 / 0.5e1 * eta - 0.94e2 / 0.35e2) * (ci2 ^ 6) + (-0.3e1 / 0.2e1 * (eta ^ 2) + 0.81e2 / 0.20e2 * eta + 0.669e3 / 0.140e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.2e1 - 0.92e2 / 0.35e2 * eta - 0.39e2 / 0.14e2) * (ci2 ^ 2) + (eta ^ 2) / 0.70e2 + 0.41e2 / 0.70e2 * eta + 0.37e2 / 0.70e2) * (eta - 1) * cos((-g + 2 * f)) + 0.15e2 * sin(g) * (1 + eta) * Delta * (((eta ^ 2) + 0.13e2 / 0.15e2) * (ci2 ^ 8) + (-0.61e2 / 0.40e2 * (eta ^ 2) - 0.77e2 / 0.40e2) * (ci2 ^ 6) + (0.83e2 / 0.150e3 * (eta ^ 2) + 0.161e3 / 0.100e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.240e3 - 0.533e3 / 0.1200e4) * (ci2 ^ 2) - 0.7e1 / 0.1200e4 * (eta ^ 2) + 0.7e1 / 0.1200e4) + 0.48e2 * (1 + eta) * Delta * ((ci2 ^ 8) - 0.43e2 / 0.32e2 * (ci2 ^ 6) + 0.69e2 / 0.160e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.320e3 - 0.1e1 / 0.320e3) * sin((3 * g + 2 * h + 2 * f)) + 0.5e1 / 0.4e1 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.4e1 / 0.5e1 * (eta ^ 2) - 0.71e2 / 0.5e1 * eta - 0.454e3 / 0.25e2) * (ci2 ^ 6) + (-0.87e2 / 0.100e3 * (eta ^ 3) + 0.12e2 / 0.25e2 * (eta ^ 2) + 0.1149e4 / 0.100e3 * eta + 0.723e3 / 0.50e2) * (ci2 ^ 4) + (0.21e2 / 0.100e3 * (eta ^ 3) + (eta ^ 2) / 0.50e2 - 0.41e2 / 0.20e2 * eta - 0.119e3 / 0.50e2) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.100e3) * cos((g - 2 * h + 2 * f)) + (ci2 ^ 2) * ((0.7e1 / 0.4e1 * (eta ^ 3) + (eta ^ 4) + 0.35e2 / 0.4e1 * (eta ^ 2) + 0.65e2 / 0.4e1 * eta + 0.469e3 / 0.20e2) * (ci2 ^ 4) + (-(eta ^ 4) - 0.7e1 / 0.4e1 * (eta ^ 3) - 0.35e2 / 0.4e1 * (eta ^ 2) - 0.65e2 / 0.4e1 * eta - 0.469e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 4) / 0.5e1 - 0.7e1 / 0.20e2 * (eta ^ 3) + 0.33e2 / 0.20e2 * (eta ^ 2) + 0.21e2 / 0.4e1 * eta + 0.129e3 / 0.20e2) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * cos((g + 2 * h)) / 0.2e1 - (ci2 ^ 2) * (eta - 1) * (((eta ^ 2) - 0.26e2 / 0.5e1 * eta - 0.53e2 / 0.10e2) * (ci2 ^ 6) + (-0.27e2 / 0.16e2 * (eta ^ 2) + 0.351e3 / 0.40e2 * eta + 0.729e3 / 0.80e2) * (ci2 ^ 4) + (0.3e1 / 0.5e1 * (eta ^ 2) - 0.51e2 / 0.10e2 * eta - 0.51e2 / 0.10e2) * (ci2 ^ 2) + (eta ^ 2) / 0.40e2 + 0.41e2 / 0.40e2 * eta + 0.37e2 / 0.40e2) * cos((-g - 2 * h + 2 * f)) + 0.18e2 * (1 + eta) * Delta * ((ci2 ^ 8) - 0.3e1 / 0.2e1 * (ci2 ^ 6) + 0.17e2 / 0.30e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.120e3 - 0.1e1 / 0.120e3) * sin((g + 2 * f)) + 0.69e2 / 0.40e2 * (((eta ^ 3) + 0.73e2 / 0.23e2 * (eta ^ 2) - 0.133e3 / 0.23e2 * eta - 0.151e3 / 0.23e2) * (ci2 ^ 6) + (-0.81e2 / 0.92e2 * (eta ^ 3) - 0.231e3 / 0.92e2 * (eta ^ 2) + 0.461e3 / 0.92e2 * eta + 0.515e3 / 0.92e2) * (ci2 ^ 4) + (0.25e2 / 0.92e2 * (eta ^ 3) + 0.133e3 / 0.276e3 * (eta ^ 2) - 0.395e3 / 0.276e3 * eta - 0.413e3 / 0.276e3) * (ci2 ^ 2) - ((1 + eta) * (eta ^ 2 - 5)) / 0.138e3) * (ci2 - 1) * (ci2 + 1) * cos((2 * f + 3 * g))) * sqrt((-eta ^ 2 + 1)) - 0.75e2 / 0.2e1 * ((1 + eta) ^ 2) * ((ci2 ^ 8) - 0.137e3 / 0.100e3 * (ci2 ^ 6) + 0.227e3 / 0.500e3 * (ci2 ^ 4) - (ci2 ^ 2) / 0.250e3 - 0.1e1 / 0.250e3) * Delta * (eta - 1) * sin((3 * g + 2 * h + f)) + 0.27e2 / 0.20e2 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 2) - 0.8e1 / 0.27e2 * eta - 0.137e3 / 0.27e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 2) + 0.4e1 / 0.9e1 * eta + 0.70e2 / 0.9e1) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.103e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 2) + 0.4e1 / 0.27e2 * eta + 0.16e2 / 0.27e2) * (eta - 1) * cos((g + 2 * h + 3 * f)) + 0.3e1 / 0.5e1 * (((eta ^ 3) + 0.585e3 / 0.8e1 * (eta ^ 2) + 0.45e2 / 0.4e1 * eta - 0.871e3 / 0.8e1) * (ci2 ^ 6) + (0.3e1 / 0.16e2 * (eta ^ 3) - 0.2193e4 / 0.32e2 * (eta ^ 2) - 0.81e2 / 0.8e1 * eta + 0.3075e4 / 0.32e2) * (ci2 ^ 4) + (-0.17e2 / 0.48e2 * (eta ^ 3) + 0.1463e4 / 0.96e2 * (eta ^ 2) + 0.15e2 / 0.8e1 * eta - 0.1837e4 / 0.96e2) * (ci2 ^ 2) + 0.5e1 / 0.192e3 * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (eta - 1)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * cos((g - 2 * h + f)) - 0.9e1 / 0.8e1 * (ci2 ^ 2) * (1 + eta) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 6) + (-0.17e2 / 0.10e2 * eta - 0.3e1 / 0.2e1) * (ci2 ^ 4) + (0.8e1 / 0.9e1 * eta + 0.4e1 / 0.5e1) * (ci2 ^ 2) - 0.5e1 / 0.36e2 * eta - 0.23e2 / 0.180e3) * ((eta - 1) ^ 2) * cos((-g - 2 * h + 3 * f)) + 0.27e2 / 0.40e2 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.74e2 / 0.81e2 * (eta ^ 2) - 0.469e3 / 0.81e2 * eta - 0.230e3 / 0.81e2) * (ci2 ^ 6) + (-0.25e2 / 0.36e2 * (eta ^ 3) + 0.70e2 / 0.27e2 * (eta ^ 2) + 0.1031e4 / 0.108e3 * eta + 0.148e3 / 0.27e2) * (ci2 ^ 4) + (0.25e2 / 0.324e3 * (eta ^ 3) - 0.163e3 / 0.162e3 * (eta ^ 2) - 0.1025e4 / 0.324e3 * eta - 0.323e3 / 0.162e3) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.648e3) * (eta - 1) * cos((g - 2 * h + 3 * f)) - 0.39e2 / 0.40e2 * (1 + eta) * (((eta ^ 2) - 0.59e2 / 0.13e2 * eta - 0.138e3 / 0.13e2) * (ci2 ^ 8) + (-0.71e2 / 0.52e2 * (eta ^ 2) + 0.295e3 / 0.52e2 * eta + 0.174e3 / 0.13e2) * (ci2 ^ 6) + (0.17e2 / 0.39e2 * (eta ^ 2) - 0.121e3 / 0.78e2 * eta - 0.287e3 / 0.78e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (ci2 ^ 2) - (eta ^ 2) / 0.312e3 + 0.1e1 / 0.312e3) * (eta - 1) * cos((3 * g + 2 * h + 5 * f)) - (ci2 ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2 - 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((-2 * h + 3 * g + 5 * f)) / 0.40e2 + 0.41e2 / 0.40e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * ((ci2 ^ 2) - 0.3e1 / 0.41e2) * cos((3 * f + 5 * g)) - 0.41e2 / 0.40e2 * ((ci2 ^ 4) - 0.3e1 / 0.41e2 * (ci2 ^ 2) - 0.1e1 / 0.41e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((5 * g + 2 * h + 3 * f)) - 0.147e3 / 0.40e2 * (((eta ^ 3) + 0.80e2 / 0.21e2 * (eta ^ 2) + 0.1297e4 / 0.147e3 * eta + 0.116e3 / 0.21e2) * (ci2 ^ 8) + (-0.47e2 / 0.28e2 * (eta ^ 3) - 0.332e3 / 0.49e2 * (eta ^ 2) - 0.3047e4 / 0.196e3 * eta - 0.68e2 / 0.7e1) * (ci2 ^ 6) + (0.43e2 / 0.49e2 * (eta ^ 3) + 0.181e3 / 0.42e2 * (eta ^ 2) + 0.470e3 / 0.49e2 * eta + 0.35e2 / 0.6e1) * (ci2 ^ 4) + (-0.167e3 / 0.1176e4 * (eta ^ 3) - 0.23e2 / 0.24e2 * (eta ^ 2) - 0.49e2 / 0.24e2 * eta - 0.199e3 / 0.168e3) * (ci2 ^ 2) + ((eta - 1) * (1 + eta) ^ 2) / 0.1176e4) * (eta - 1) * cos((f - g)) - 0.81e2 / 0.40e2 * (eta - 1) * (((eta ^ 3) + 0.40e2 / 0.243e3 * (eta ^ 2) - 0.1339e4 / 0.243e3 * eta - 0.1052e4 / 0.243e3) * (ci2 ^ 8) + (-0.163e3 / 0.108e3 * (eta ^ 3) + 0.49e2 / 0.243e3 * (eta ^ 2) + 0.9359e4 / 0.972e3 * eta + 0.1819e4 / 0.243e3) * (ci2 ^ 6) + (0.163e3 / 0.243e3 * (eta ^ 3) - 0.19e2 / 0.54e2 * (eta ^ 2) - 0.1204e4 / 0.243e3 * eta - 0.1855e4 / 0.486e3) * (ci2 ^ 4) - 0.167e3 / 0.1944e4 * ((eta ^ 2) - 0.224e3 / 0.167e3 * eta - 0.827e3 / 0.167e3) * (1 + eta) * (ci2 ^ 2) + ((1 + eta) * (eta ^ 2 + 32 * eta + 59)) / 0.1944e4) * cos((g + 3 * f)) + 0.3e1 / 0.2e1 * (1 + eta) * (((eta ^ 3) + 0.391e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3203e4 / 0.180e3) * (ci2 ^ 8) + (-0.51e2 / 0.40e2 * (eta ^ 3) - 0.2149e4 / 0.240e3 * (eta ^ 2) - 0.171e3 / 0.20e2 * eta + 0.17101e5 / 0.720e3) * (ci2 ^ 6) + (0.11e2 / 0.30e2 * (eta ^ 3) + 0.251e3 / 0.90e2 * (eta ^ 2) + 0.27e2 / 0.10e2 * eta - 0.64e2 / 0.9e1) * (ci2 ^ 4) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59) * ci2 ^ 2) / 0.1440e4 - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * cos((3 * g + 2 * h + 3 * f)) + 0.291e3 / 0.40e2 * (eta - 1) * (((eta ^ 3) - 0.738e3 / 0.97e2 * (eta ^ 2) - 0.1781e4 / 0.97e2 * eta - 0.942e3 / 0.97e2) * (ci2 ^ 8) + (-0.515e3 / 0.388e3 * (eta ^ 3) + 0.1017e4 / 0.97e2 * (eta ^ 2) + 0.9775e4 / 0.388e3 * eta + 0.1293e4 / 0.97e2) * (ci2 ^ 6) + (0.119e3 / 0.291e3 * (eta ^ 3) - 0.2125e4 / 0.582e3 * (eta ^ 2) - 0.2510e4 / 0.291e3 * eta - 0.883e3 / 0.194e3) * (ci2 ^ 4) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * cos((3 * g + 2 * h + f)) + 0.81e2 / 0.20e2 * (((eta ^ 3) + 0.367e3 / 0.81e2 * (eta ^ 2) + 0.797e3 / 0.81e2 * eta + 0.475e3 / 0.81e2) * (ci2 ^ 6) + (-0.5e1 / 0.3e1 * (eta ^ 3) - 0.203e3 / 0.27e2 * (eta ^ 2) - 0.442e3 / 0.27e2 * eta - 0.266e3 / 0.27e2) * (ci2 ^ 4) + (0.23e2 / 0.27e2 * (eta ^ 3) + 0.13e2 / 0.3e1 * (eta ^ 2) + 0.253e3 / 0.27e2 * eta + 0.151e3 / 0.27e2) * (ci2 ^ 2) - 0.7e1 / 0.54e2 * (eta ^ 3) - 0.47e2 / 0.54e2 * (eta ^ 2) - 0.50e2 / 0.27e2 * eta - 0.29e2 / 0.27e2) * (ci2 ^ 2) * (eta - 1) * cos((-g - 2 * h + f)) - 0.291e3 / 0.40e2 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) - 0.2227e4 / 0.291e3 * (eta ^ 2) - 0.5369e4 / 0.291e3 * eta - 0.2839e4 / 0.291e3) * (ci2 ^ 6) + (-0.321e3 / 0.388e3 * (eta ^ 3) + 0.648e3 / 0.97e2 * (eta ^ 2) + 0.6213e4 / 0.388e3 * eta + 0.822e3 / 0.97e2) * (ci2 ^ 4) + (0.155e3 / 0.1164e4 * (eta ^ 3) - 0.829e3 / 0.582e3 * (eta ^ 2) - 0.3827e4 / 0.1164e4 * eta - 0.335e3 / 0.194e3) * (ci2 ^ 2) - 0.5e1 / 0.2328e4 * (1 + eta) * ((eta ^ 2) - 0.96e2 / 0.5e1 * eta - 0.21e2)) * cos((3 * g + f)) - 0.3e1 / 0.2e1 * (((eta ^ 3) + 0.401e3 / 0.60e2 * (eta ^ 2) + 0.63e2 / 0.10e2 * eta - 0.3293e4 / 0.180e3) * (ci2 ^ 6) + (-0.31e2 / 0.40e2 * (eta ^ 3) - 0.1379e4 / 0.240e3 * (eta ^ 2) - 0.27e2 / 0.5e1 * eta + 0.3577e4 / 0.240e3) * (ci2 ^ 4) + (0.13e2 / 0.120e3 * (eta ^ 3) + 0.629e3 / 0.720e3 * (eta ^ 2) + 0.9e1 / 0.10e2 * eta - 0.1543e4 / 0.720e3) * (ci2 ^ 2) - ((eta - 1) * (eta ^ 2 + 32 * eta + 59)) / 0.1440e4) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * cos((3 * g + 3 * f)) + 0.93e2 / 0.80e2 * (ci2 ^ 2) * (1 + eta) * ((eta + 0.27e2 / 0.31e2) * (ci2 ^ 6) + (-0.209e3 / 0.124e3 * eta - 0.185e3 / 0.124e3) * (ci2 ^ 4) + (0.27e2 / 0.31e2 * eta + 0.73e2 / 0.93e2) * (ci2 ^ 2) - 0.25e2 / 0.186e3 * eta - 0.23e2 / 0.186e3) * ((eta - 1) ^ 2) * cos((-g + 3 * f)) + 0.13e2 / 0.2e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 6) - 0.51e2 / 0.52e2 * (ci2 ^ 4) + 0.29e2 / 0.130e3 * (ci2 ^ 2) - 0.1e1 / 0.130e3) * sin((g - 2 * h + 3 * f)) + 0.3e1 / 0.16e2 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((3 * g + 7 * f)) - 0.3e1 / 0.80e2 * ((ci2 ^ 4) - 0.3e1 / 0.4e1 * (ci2 ^ 2) + 0.1e1 / 0.12e2) * (ci2 ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((-g + 2 * h + 3 * f)) + 0.63e2 / 0.80e2 * (1 + eta) * ((eta - 1) ^ 2) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 8) + (-0.39e2 / 0.28e2 * eta - 0.107e3 / 0.84e2) * (ci2 ^ 6) + (0.29e2 / 0.63e2 * eta + 0.3e1 / 0.7e1) * (ci2 ^ 4) + (-eta / 0.252e3 - 0.1e1 / 0.252e3) * (ci2 ^ 2) - eta / 0.252e3 - 0.1e1 / 0.252e3) * cos((-3 * g - 2 * h + f)) - 0.15e2 * (1 + eta) * (((eta ^ 2) - 0.29e2 / 0.15e2) * (ci2 ^ 8) + (-0.27e2 / 0.20e2 * (eta ^ 2) + 0.151e3 / 0.60e2) * (ci2 ^ 6) + (0.131e3 / 0.300e3 * (eta ^ 2) - 0.229e3 / 0.300e3) * (ci2 ^ 4) + (-(eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * (ci2 ^ 2) - (eta ^ 2) / 0.300e3 + 0.1e1 / 0.300e3) * Delta * sin((3 * g + 2 * h + 3 * f)) - 0.9e1 / 0.2e1 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 3) + 0.211e3 / 0.90e2 * (eta ^ 2) + 0.18e2 / 0.5e1 * eta - 0.881e3 / 0.90e2) * (ci2 ^ 6) + (-0.33e2 / 0.20e2 * (eta ^ 3) - 0.58e2 / 0.15e2 * (eta ^ 2) - 0.117e3 / 0.20e2 * eta + 0.469e3 / 0.30e2) * (ci2 ^ 4) + (0.5e1 / 0.6e1 * (eta ^ 3) + 0.79e2 / 0.30e2 * (eta ^ 2) + 0.29e2 / 0.10e2 * eta - 0.17e2 / 0.2e1) * (ci2 ^ 2) - (eta ^ 3) / 0.8e1 - 0.2e1 / 0.3e1 * (eta ^ 2) - 0.17e2 / 0.40e2 * eta + 0.283e3 / 0.180e3) * cos((g + 2 * h + f))) * R__e ^ 4 * sqrt((-ci2 ^ 2 + 1)) * J ^ 2 / (eta ^ 8) / a ^ 4 / (1 + eta) -0.18333e5 / 0.256e3 * R__e ^ 4 * J ^ 2 * (0.20e2 / 0.6111e4 * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * sin((2 * g + 2 * h + 6 * f)) + 0.20e2 / 0.6111e4 * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * sin((6 * f)) + 0.320e3 / 0.679e3 * ((1 + eta) ^ 2) * eta * Delta * (((eta ^ 4) + 0.34e2 / 0.3e1 * (eta ^ 2) - 0.154e3 / 0.9e1) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 4) - 0.74e2 / 0.3e1 * (eta ^ 2) + 0.112e3 / 0.3e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 4) + 0.109e3 / 0.5e1 * (eta ^ 2) - 0.94e2 / 0.3e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 4) - 0.46e2 / 0.5e1 * (eta ^ 2) + 0.12e2) * (ci2 ^ 2) - (eta ^ 4) / 0.10e2 + 0.7e1 / 0.5e1 * (eta ^ 2) - 0.5e1 / 0.3e1) + 0.80e2 / 0.6111e4 * (((eta ^ 2) - 0.239e3 / 0.20e2 * eta - 0.223e3 / 0.20e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + (27 * eta) + 0.513e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.111e3 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.157e3 / 0.20e2 * eta + 0.143e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.79e2 / 0.80e2 * eta - 0.67e2 / 0.80e2) * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * sin((-2 * g - 2 * h + 4 * f)) + 0.1600e4 / 0.6111e4 * (1 + eta) * ((-0.327e3 / 0.25e2 + (eta ^ 6) - 0.399e3 / 0.100e3 * (eta ^ 5) - 0.2281e4 / 0.100e3 * eta + 0.231e3 / 0.50e2 * (eta ^ 4) + 0.237e3 / 0.10e2 * (eta ^ 3) + 0.11e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 8) + (0.1373e4 / 0.50e2 - 0.87e2 / 0.40e2 * (eta ^ 6) + 0.1767e4 / 0.200e3 * (eta ^ 5) - 0.1011e4 / 0.20e2 * (eta ^ 3) - 0.43e2 / 0.8e1 * (eta ^ 2) + 0.9583e4 / 0.200e3 * eta - 0.939e3 / 0.100e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4329e4 / 0.200e3 + 0.837e3 / 0.20e2 * (eta ^ 3) - 0.7851e4 / 0.200e3 * eta + 0.1923e4 / 0.200e3 * (eta ^ 4) - 0.1503e4 / 0.200e3 * (eta ^ 5) + 0.51e2 / 0.50e2 * (eta ^ 6) + 0.321e3 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1587e4 / 0.100e3 * (eta ^ 3) + 0.2959e4 / 0.200e3 * eta - 0.507e3 / 0.100e3 * (eta ^ 4) + 0.759e3 / 0.100e3 + 0.579e3 / 0.200e3 * (eta ^ 5) + 0.19e2 / 0.100e3 * (eta ^ 6) - 0.17e2 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.849e3 / 0.400e3 * (eta ^ 3) - 0.37e2 / 0.400e3 * (eta ^ 2) + 0.677e3 / 0.800e3 * (eta ^ 4) - 0.151e3 / 0.160e3 - 0.1567e4 / 0.800e3 * eta - (eta ^ 6) / 0.10e2 - 0.63e2 / 0.160e3 * (eta ^ 5)) * sin((2 * h + 2 * g + 2 * f)) + 0.70e2 / 0.873e3 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 4) + 0.54e2 / 0.35e2 * (eta ^ 3) + 0.108e3 / 0.245e3 * (eta ^ 2) - 0.158e3 / 0.35e2 * eta - 0.183e3 / 0.35e2) * (ci2 ^ 2) + 0.4e1 / 0.35e2 * eta * (1 + eta) * (eta ^ 2 - 5)) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((5 * f + 4 * g)) + 0.8e1 / 0.291e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (((eta ^ 2) + 0.55e2 / 0.42e2 * eta + 0.25e2 / 0.42e2) * (ci2 ^ 2) - 0.5e1 / 0.42e2 * (eta ^ 2) - 0.5e1 / 0.42e2 * eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin((4 * g)) + 0.10e2 / 0.873e3 * (ci2 ^ 2) * ((1 + eta) ^ 4) * ((ci2 ^ 2) - 0.1e1 / 0.7e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 3) * sin((6 * g + 2 * h)) + 0.33e2 / 0.679e3 * (((eta ^ 3) - 0.397e3 / 0.99e2 * (eta ^ 2) - 0.1567e4 / 0.99e2 * eta - 0.85e2 / 0.9e1) * (ci2 ^ 6) + (-0.43e2 / 0.33e2 * (eta ^ 3) + 0.595e3 / 0.99e2 * (eta ^ 2) + 0.2333e4 / 0.99e2 * eta + 0.491e3 / 0.33e2) * (ci2 ^ 4) + (0.257e3 / 0.594e3 * (eta ^ 3) - 0.463e3 / 0.198e3 * (eta ^ 2) - 0.5417e4 / 0.594e3 * eta - 0.3635e4 / 0.594e3) * (ci2 ^ 2) - 0.5e1 / 0.198e3 * ((eta ^ 2) - 0.42e2 / 0.5e1 * eta - 0.281e3 / 0.15e2) * (1 + eta)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + 5 * f)) + 0.15e2 / 0.1358e4 * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + 7 * f)) - 0.88e2 / 0.873e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.419e3 / 0.308e3 * (eta ^ 3) - 0.417e3 / 0.308e3 * (eta ^ 2) - 0.1479e4 / 0.308e3 * eta - 0.1151e4 / 0.308e3) * (ci2 ^ 2) - 0.31e2 / 0.154e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.31e2 * (eta ^ 2) - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2)) * sqrt((-eta ^ 2 + 1)) * sin((6 * g + 2 * h + 5 * f)) + 0.38e2 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.9e1 / 0.19e2 * (eta ^ 2) - 0.25e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (ci2 ^ 2) - 0.5e1 / 0.19e2 * (eta - 1) * ((1 + eta) ^ 2)) * (eta - 1) * sin((2 * g - 2 * h)) - 0.32e2 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.11e2 / 0.4e1 * (eta ^ 3) + 0.91e2 / 0.4e1 * (eta ^ 2) - 0.97e2 / 0.4e1 * eta - 0.309e3 / 0.4e1) * (ci2 ^ 2) + 0.3e1 / 0.4e1 * (1 + eta) * ((eta ^ 2) - 0.31e2 / 0.3e1) * eta) * (eta - 1) * sin((6 * f + 4 * g)) + 0.227e3 / 0.4074e4 * (((eta ^ 4) + 0.6712e4 / 0.227e3 * (eta ^ 3) + 0.12894e5 / 0.227e3 * (eta ^ 2) + 0.3976e4 / 0.227e3 * eta - 0.2449e4 / 0.227e3) * (ci2 ^ 6) + (-0.315e3 / 0.227e3 * (eta ^ 4) - 0.7632e4 / 0.227e3 * (eta ^ 3) - 0.14406e5 / 0.227e3 * (eta ^ 2) - 0.4656e4 / 0.227e3 * eta + 0.2449e4 / 0.227e3) * (ci2 ^ 4) + (0.667e3 / 0.1362e4 * (eta ^ 4) + 0.2366e4 / 0.227e3 * (eta ^ 3) + 0.13261e5 / 0.681e3 * (eta ^ 2) + 0.5014e4 / 0.681e3 * eta - 0.2981e4 / 0.1362e4) * (ci2 ^ 2) - 0.22e2 / 0.681e3 * ((eta ^ 2) + 0.156e3 / 0.11e2 * eta + 0.137e3 / 0.11e2) * (1 + eta) * eta) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((-2 * g + f)) - 0.236e3 / 0.6111e4 * (ci2 ^ 2) * (((eta ^ 4) + 0.26e2 / 0.59e2 * (eta ^ 3) - (4 * eta ^ 2) - 0.46e2 / 0.59e2 * eta + 0.93e2 / 0.59e2) * (ci2 ^ 2) - 0.38e2 / 0.59e2 * (1 + eta) * eta * ((eta ^ 2) - 0.31e2 / 0.19e2)) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin((2 * f + 4 * g)) - 0.5120e4 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 4) + (eta ^ 3) - 0.71e2 / 0.16e2 * (eta ^ 2) - 0.19e2 / 0.4e1 * eta - 0.3e1 / 0.8e1) * (ci2 ^ 6) - 0.5e1 / 0.4e1 * ((eta ^ 3) - (eta ^ 2) - 0.21e2 / 0.10e2 * eta - 0.3e1 / 0.20e2) * (eta + 2) * (ci2 ^ 4) + (0.17e2 / 0.40e2 * (eta ^ 4) + 0.17e2 / 0.40e2 * (eta ^ 3) - 0.121e3 / 0.80e2 * (eta ^ 2) - 0.63e2 / 0.40e2 * eta - 0.3e1 / 0.40e2) * (ci2 ^ 2) - 0.7e1 / 0.240e3 * (1 + eta) * ((eta ^ 2) - 0.37e2 / 0.14e2) * eta) * cos((2 * g)) - 0.440e3 / 0.679e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * (((eta ^ 3) + 0.20e2 / 0.33e2 * (eta ^ 2) - 0.31e2 / 0.11e2 * eta - 0.92e2 / 0.33e2) * (ci2 ^ 6) + (-0.35e2 / 0.33e2 * (eta ^ 3) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.95e2 / 0.33e2 * eta + 0.94e2 / 0.33e2) * (ci2 ^ 4) + (0.41e2 / 0.165e3 * (eta ^ 3) + 0.28e2 / 0.165e3 * (eta ^ 2) - 0.101e3 / 0.165e3 * eta - 0.20e2 / 0.33e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.165e3) * cos((2 * h + 5 * f + 4 * g)) + 0.136e3 / 0.6111e4 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.13e2 / 0.68e2 * (eta ^ 3) - 0.369e3 / 0.68e2 * (eta ^ 2) + 0.9e1 / 0.68e2 * eta + 0.417e3 / 0.68e2) * (ci2 ^ 2) - 0.23e2 / 0.34e2 * (eta ^ 4) - 0.4e1 / 0.17e2 * (eta ^ 3) + 0.37e2 / 0.17e2 * (eta ^ 2) + 0.24e2 / 0.17e2 * eta - 0.11e2 / 0.34e2) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + 3 * f + 2 * g)) + 0.52e2 / 0.2037e4 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sin((8 * f + 2 * g)) - 0.7040e4 / 0.2037e4 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * (((eta ^ 2) + eta - 0.41e2 / 0.88e2) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.13e2 / 0.11e2 * eta + 0.47e2 / 0.88e2) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.110e3 * eta - 0.13e2 / 0.88e2) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.7e1 / 0.330e3 * eta + 0.3e1 / 0.440e3) * cos((4 * g + 2 * h)) - 0.5840e4 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.34e2 / 0.73e2 * eta - 0.59e2 / 0.73e2) * (ci2 ^ 6) + (-0.97e2 / 0.73e2 * (eta ^ 2) - 0.46e2 / 0.73e2 * eta + 0.79e2 / 0.73e2) * (ci2 ^ 4) + (0.169e3 / 0.365e3 * (eta ^ 2) + 0.82e2 / 0.365e3 * eta - 0.139e3 / 0.365e3) * (ci2 ^ 2) - 0.12e2 / 0.365e3 * (eta ^ 2) - 0.6e1 / 0.365e3 * eta + 0.2e1 / 0.73e2) * cos((-2 * h + 2 * f)) + ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin((-4 * g - 2 * h + 3 * f)) / 0.194e3 - 0.1520e4 / 0.2037e4 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.25e2 / 0.19e2 * (ci2 ^ 4) + 0.43e2 / 0.95e2 * (ci2 ^ 2) - 0.3e1 / 0.95e2) * ((eta - 1) ^ 2) * cos((-2 * h + 4 * f)) - 0.2360e4 / 0.873e3 * (((eta ^ 4) + 0.338e3 / 0.413e3 * (eta ^ 3) - 0.1472e4 / 0.413e3 * (eta ^ 2) - 0.746e3 / 0.413e3 * eta + 0.117e3 / 0.59e2) * (ci2 ^ 6) + (-0.505e3 / 0.413e3 * (eta ^ 4) - 0.430e3 / 0.413e3 * (eta ^ 3) + 0.244e3 / 0.59e2 * (eta ^ 2) + 0.982e3 / 0.413e3 * eta - 0.117e3 / 0.59e2) * (ci2 ^ 4) + (0.781e3 / 0.2065e4 * (eta ^ 4) + 0.706e3 / 0.2065e4 * (eta ^ 3) - 0.2416e4 / 0.2065e4 * (eta ^ 2) - 0.338e3 / 0.413e3 * eta + 0.117e3 / 0.295e3) * (ci2 ^ 2) - 0.46e2 / 0.2065e4 * (1 + eta) * eta * ((eta ^ 2) - 0.59e2 / 0.23e2)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * cos((3 * f + 2 * g)) - 0.5360e4 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) + 0.113e3 / 0.134e3 * (eta ^ 3) - 0.135e3 / 0.134e3 * (eta ^ 2) - 0.21e2 / 0.134e3 * eta + 0.85e2 / 0.134e3) * (ci2 ^ 6) + (-0.86e2 / 0.67e2 * (eta ^ 4) - 0.145e3 / 0.134e3 * (eta ^ 3) + 0.187e3 / 0.134e3 * (eta ^ 2) + 0.37e2 / 0.134e3 * eta - 0.115e3 / 0.134e3) * (ci2 ^ 4) + (0.143e3 / 0.335e3 * (eta ^ 4) + 0.241e3 / 0.670e3 * (eta ^ 3) - 0.343e3 / 0.670e3 * (eta ^ 2) - 0.17e2 / 0.134e3 * eta + 0.41e2 / 0.134e3) * (ci2 ^ 2) - 0.19e2 / 0.670e3 * (1 + eta) * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + f)) + 0.680e3 / 0.2037e4 * (((eta ^ 3) + 0.8e1 / 0.17e2 * (eta ^ 2) - 0.21e2 / 0.17e2 * eta - 0.8e1 / 0.17e2) * (ci2 ^ 6) + (-0.19e2 / 0.17e2 * (eta ^ 3) - 0.10e2 / 0.17e2 * (eta ^ 2) + 0.23e2 / 0.17e2 * eta + 0.10e2 / 0.17e2) * (ci2 ^ 4) + (0.5e1 / 0.17e2 * (eta ^ 3) + 0.16e2 / 0.85e2 * (eta ^ 2) - 0.29e2 / 0.85e2 * eta - 0.16e2 / 0.85e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.85e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * cos((2 * h + f)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin((5 * f - 2 * g)) / 0.1358e4 + 0.5e1 / 0.582e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((4 * g + 2 * h + 9 * f)) + 0.5e1 / 0.582e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin((2 * g + 9 * f)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 5 * f)) / 0.1358e4 - 0.7e1 / 0.97e2 * ((1 + eta) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) + 0.302e3 / 0.441e3 * eta - 0.2047e4 / 0.441e3) * (ci2 ^ 8) + (-0.106e3 / 0.49e2 * (eta ^ 2) - 0.676e3 / 0.441e3 * eta + 0.4094e4 / 0.441e3) * (ci2 ^ 6) + (0.236e3 / 0.147e3 * (eta ^ 2) + 0.128e3 / 0.147e3 * eta - 0.956e3 / 0.147e3) * (ci2 ^ 4) + (-0.23e2 / 0.49e2 * (eta ^ 2) - 0.22e2 / 0.441e3 * eta + 0.821e3 / 0.441e3) * (ci2 ^ 2) + 0.9e1 / 0.196e3 * (eta ^ 2) - 0.8e1 / 0.441e3 * eta - 0.325e3 / 0.1764e4) * sin((5 * f)) + 0.552e3 / 0.679e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((0.4475e4 / 0.414e3 + (eta ^ 6) + 0.1079e4 / 0.414e3 * (eta ^ 5) - 0.9605e4 / 0.621e3 * (eta ^ 3) - 0.1456e4 / 0.621e3 * (eta ^ 2) + 0.18685e5 / 0.1242e4 * eta - 0.7411e4 / 0.1242e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1589e4 / 0.138e3 + 0.10579e5 / 0.621e3 * (eta ^ 3) - 0.20093e5 / 0.1242e4 * eta + 0.349e3 / 0.54e2 * (eta ^ 4) - 0.1259e4 / 0.414e3 * (eta ^ 5) - 0.241e3 / 0.207e3 * (eta ^ 6) + 0.1688e4 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1601e4 / 0.414e3 * (eta ^ 3) + 0.8503e4 / 0.2484e4 * eta - 0.1163e4 / 0.828e3 * (eta ^ 4) + 0.5947e4 / 0.2484e4 + 0.661e3 / 0.828e3 * (eta ^ 5) + 0.43e2 / 0.138e3 * (eta ^ 6) - 0.452e3 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.19e2 / 0.1242e4 * (1 + eta) * ((eta ^ 4) + 0.47e2 / 0.19e2 * (eta ^ 3) - 0.36e2 / 0.19e2 * (eta ^ 2) - 0.120e3 / 0.19e2 * eta - 0.74e2 / 0.19e2) * (eta - 1)) * sin((2 * h + 4 * f + 4 * g)) - 0.51e2 / 0.194e3 * (ci2 - 1) * (ci2 + 1) * ((0.4003e4 / 0.357e3 + (eta ^ 6) - 0.59152e5 / 0.1071e4 * (eta ^ 5) + 0.6304e4 / 0.153e3 * (eta ^ 3) + 0.35947e5 / 0.153e3 * (eta ^ 2) + 0.146224e6 / 0.1071e4 * eta - 0.133445e6 / 0.1071e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4003e4 / 0.357e3 - 0.6976e4 / 0.153e3 * (eta ^ 3) - 0.167840e6 / 0.1071e4 * eta + 0.17789e5 / 0.119e3 * (eta ^ 4) + 0.70496e5 / 0.1071e4 * (eta ^ 5) - 0.565e3 / 0.357e3 * (eta ^ 6) - 0.292637e6 / 0.1071e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.42088e5 / 0.3213e4 * (eta ^ 3) + 0.20188e5 / 0.459e3 * eta - 0.298733e6 / 0.6426e4 * (eta ^ 4) + 0.3691e4 / 0.2142e4 - 0.66316e5 / 0.3213e4 * (eta ^ 5) + 0.3935e4 / 0.6426e4 * (eta ^ 6) + 0.24665e5 / 0.306e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.52e2 / 0.1071e4 * (1 + eta) * ((eta ^ 4) - 0.1034e4 / 0.39e2 * (eta ^ 3) - 0.1204e4 / 0.39e2 * (eta ^ 2) + 0.550e3 / 0.13e2 * eta + 0.1789e4 / 0.39e2) * eta) * sqrt((-eta ^ 2 + 1)) * sin((f + 2 * g)) - 0.80e2 / 0.679e3 * ((1 + eta) ^ 2) * ((0.4027e4 / 0.180e3 + (eta ^ 6) + 0.283e3 / 0.90e2 * (eta ^ 5) - 0.1843e4 / 0.90e2 * (eta ^ 3) - 0.803e3 / 0.45e2 * (eta ^ 2) + 0.331e3 / 0.15e2 * eta + 0.49e2 / 0.180e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4391e4 / 0.180e3 + 0.1979e4 / 0.90e2 * (eta ^ 3) - 0.206e3 / 0.9e1 * eta - 0.149e3 / 0.180e3 * (eta ^ 4) - 0.23e2 / 0.6e1 * (eta ^ 5) - (eta ^ 6) + 0.919e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.229e3 / 0.36e2 * (eta ^ 3) + 0.553e3 / 0.90e2 * eta + 0.53e2 / 0.120e3 * (eta ^ 4) + 0.2329e4 / 0.360e3 + 0.233e3 / 0.180e3 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) - 0.266e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) + 0.11e2 / 0.15e2 * (eta ^ 2) - 0.8e1 / 0.5e1 * eta - 0.16e2 / 0.5e1) * (eta - 1) / 0.12e2) * (ci2 - 1) * (ci2 + 1) * sin((2 * h)) - 0.6e1 / 0.97e2 * (((eta ^ 3) + 0.124e3 / 0.189e3 * (eta ^ 2) - 0.1075e4 / 0.189e3 * eta - 0.1082e4 / 0.189e3) * (ci2 ^ 8) + (-0.44e2 / 0.21e2 * (eta ^ 3) - 0.38e2 / 0.27e2 * (eta ^ 2) + 0.2168e4 / 0.189e3 * eta + 0.2182e4 / 0.189e3) * (ci2 ^ 6) + (0.94e2 / 0.63e2 * (eta ^ 3) + 0.2e1 / 0.3e1 * (eta ^ 2) - 0.178e3 / 0.21e2 * eta - 0.514e3 / 0.63e2) * (ci2 ^ 4) + (-0.26e2 / 0.63e2 * (eta ^ 3) + 0.13e2 / 0.189e3 * (eta ^ 2) + 0.512e3 / 0.189e3 * eta + 0.445e3 / 0.189e3) * (ci2 ^ 2) + 0.29e2 / 0.756e3 * (eta ^ 3) - (eta ^ 2) / 0.28e2 - 0.25e2 / 0.84e2 * eta - 0.59e2 / 0.252e3) * ((1 + eta) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 5 * f + 2 * g)) - 0.3824e4 / 0.6111e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((0.2187e4 / 0.239e3 + (eta ^ 6) + 0.320e3 / 0.239e3 * (eta ^ 5) - 0.5878e4 / 0.239e3 * (eta ^ 3) + 0.3383e4 / 0.239e3 * (eta ^ 2) + 0.6902e4 / 0.239e3 * eta - 0.3985e4 / 0.239e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.2187e4 / 0.239e3 + 0.6506e4 / 0.239e3 * (eta ^ 3) - 0.7504e4 / 0.239e3 * eta + 0.4457e4 / 0.239e3 * (eta ^ 4) - 0.394e3 / 0.239e3 * (eta ^ 5) - 0.283e3 / 0.239e3 * (eta ^ 6) - 0.3859e4 / 0.239e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1727e4 / 0.239e3 * (eta ^ 3) + 0.1918e4 / 0.239e3 * eta - 0.11e2 / 0.2e1 * (eta ^ 4) + 0.687e3 / 0.478e3 + 0.129e3 / 0.239e3 * (eta ^ 5) + 0.195e3 / 0.478e3 * (eta ^ 6) + 0.2563e4 / 0.478e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.7e1 / 0.239e3 * (1 + eta) * ((eta ^ 4) + 0.5e1 / 0.14e2 * (eta ^ 3) - 0.137e3 / 0.14e2 * (eta ^ 2) - 0.3e1 / 0.2e1 * eta + 0.155e3 / 0.14e2) * eta) * sin((2 * g + 2 * f)) + 0.40e2 / 0.873e3 * ((1 + eta) ^ 2) * (((eta ^ 3) - 0.408e3 / 0.35e2 * (eta ^ 2) - 0.41e2 / 0.7e1 * eta + 0.706e3 / 0.35e2) * (ci2 ^ 8) + (-0.15e2 / 0.7e1 * (eta ^ 3) + 0.878e3 / 0.35e2 * (eta ^ 2) + 0.477e3 / 0.35e2 * eta - 0.1412e4 / 0.35e2) * (ci2 ^ 6) + (0.33e2 / 0.35e2 * (eta ^ 3) - 0.684e3 / 0.35e2 * (eta ^ 2) - 0.327e3 / 0.35e2 * eta + 0.1014e4 / 0.35e2) * (ci2 ^ 4) + (0.8e1 / 0.35e2 * (eta ^ 3) + 0.228e3 / 0.35e2 * (eta ^ 2) + 0.68e2 / 0.35e2 * eta - 0.44e2 / 0.5e1) * (ci2 ^ 2) - (eta ^ 3) / 0.10e2 - 0.27e2 / 0.35e2 * (eta ^ 2) - 0.4e1 / 0.35e2 * eta + 0.13e2 / 0.14e2) * ((eta - 1) ^ 2) * sin((4 * f)) + 0.516e3 / 0.679e3 * (1 + eta) * ((-0.2030e4 / 0.387e3 + (eta ^ 5) - 0.17900e5 / 0.1161e4 * eta + 0.4195e4 / 0.1161e4 * (eta ^ 4) + 0.7663e4 / 0.1161e4 * (eta ^ 3) - 0.10213e5 / 0.1161e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.12992e5 / 0.1161e4 - 0.284e3 / 0.129e3 * (eta ^ 5) - 0.5570e4 / 0.387e3 * (eta ^ 3) + 0.21614e5 / 0.1161e4 * (eta ^ 2) + 0.12766e5 / 0.387e3 * eta - 0.3074e4 / 0.387e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1172e4 / 0.129e3 + 0.1628e4 / 0.129e3 * (eta ^ 3) - 0.10618e5 / 0.387e3 * eta + 0.324e3 / 0.43e2 * (eta ^ 4) + 0.646e3 / 0.387e3 * (eta ^ 5) - 0.2008e4 / 0.129e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.673e3 / 0.129e3 * (eta ^ 3) + 0.12179e5 / 0.1161e4 * eta - 0.449e3 / 0.129e3 * (eta ^ 4) + 0.1288e4 / 0.387e3 - 0.194e3 / 0.387e3 * (eta ^ 5) + 0.2351e4 / 0.387e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.890e3 / 0.1161e4 * (eta ^ 3) - 0.328e3 / 0.387e3 * (eta ^ 2) + 0.857e3 / 0.1548e4 * (eta ^ 4) - 0.2027e4 / 0.4644e4 - 0.2219e4 / 0.1548e4 * eta + 0.233e3 / 0.4644e4 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + f + 2 * g)) - 0.17e2 / 0.97e2 * (1 + eta) * ((0.13667e5 / 0.1071e4 + (eta ^ 5) + 0.17839e5 / 0.1071e4 * eta - 0.677e3 / 0.1071e4 * (eta ^ 4) - 0.1778e4 / 0.153e3 * (eta ^ 3) - 0.466e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.28274e5 / 0.1071e4 - 0.38e2 / 0.17e2 * (eta ^ 5) + 0.1252e4 / 0.51e2 * (eta ^ 3) + 0.436e3 / 0.63e2 * (eta ^ 2) - 0.36826e5 / 0.1071e4 * eta + 0.1406e4 / 0.1071e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.2392e4 / 0.119e3 - 0.20912e5 / 0.1071e4 * (eta ^ 3) + 0.29432e5 / 0.1071e4 * eta - 0.2216e4 / 0.1071e4 * (eta ^ 4) + 0.88e2 / 0.51e2 * (eta ^ 5) - 0.656e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 4) + (0.1058e4 / 0.153e3 * (eta ^ 3) - 0.3581e4 / 0.357e3 * eta + 0.1549e4 / 0.1071e4 * (eta ^ 4) - 0.2377e4 / 0.357e3 - 0.9e1 / 0.17e2 * (eta ^ 5) + 0.590e3 / 0.1071e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.5527e4 / 0.6426e4 * (eta ^ 3) + 0.197e3 / 0.6426e4 * (eta ^ 2) - 0.65e2 / 0.252e3 * (eta ^ 4) + 0.65e2 / 0.84e2 + 0.16297e5 / 0.12852e5 * eta + 0.11e2 / 0.204e3 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 3 * f + 2 * g)) + 0.380e3 / 0.2037e4 * (1 + eta) * ((0.696e3 / 0.95e2 + 0.2297e4 / 0.285e3 * eta + (eta ^ 4) - 0.949e3 / 0.285e3 * (eta ^ 3) - 0.1097e4 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.4696e4 / 0.285e3 + 0.428e3 / 0.57e2 * (eta ^ 3) + 0.136e3 / 0.15e2 * (eta ^ 2) - 0.5036e4 / 0.285e3 * eta - 0.128e3 / 0.57e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.1319e4 / 0.95e2 - 0.698e3 / 0.95e2 * (eta ^ 3) + 0.1434e4 / 0.95e2 * eta + 0.113e3 / 0.95e2 * (eta ^ 4) - 0.728e3 / 0.95e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.1013e4 / 0.285e3 * (eta ^ 3) - 0.341e3 / 0.57e2 * eta + 0.2e1 / 0.19e2 * (eta ^ 4) - 0.493e3 / 0.95e2 + 0.781e3 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.691e3 / 0.1140e4 * (eta ^ 3) - 0.389e3 / 0.1140e4 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.53e2 / 0.76e2 + 0.991e3 / 0.1140e4 * eta) * ((eta - 1) ^ 2) * sin((-2 * g - 2 * h + 2 * f)) + 0.400e3 / 0.6111e4 * (1 + eta) * ((0.2747e4 / 0.50e2 + (eta ^ 6) + 0.23e2 / 0.5e1 * (eta ^ 5) + 0.6159e4 / 0.50e2 * eta + 0.949e3 / 0.50e2 * (eta ^ 4) + 0.2873e4 / 0.50e2 * (eta ^ 3) + 0.2834e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.5963e4 / 0.50e2 - (2 * eta ^ 6) - 0.48e2 / 0.5e1 * (eta ^ 5) - 0.2978e4 / 0.25e2 * (eta ^ 3) - 0.5918e4 / 0.25e2 * (eta ^ 2) - 0.6556e4 / 0.25e2 * eta - 0.1953e4 / 0.50e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.99e2 + 0.4519e4 / 0.50e2 * (eta ^ 3) + 0.10849e5 / 0.50e2 * eta + 0.592e3 / 0.25e2 * (eta ^ 4) + 0.93e2 / 0.25e2 * (eta ^ 5) + 0.3e1 / 0.5e1 * (eta ^ 6) + 0.4801e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.731e3 / 0.25e2 * (eta ^ 3) - 0.413e3 / 0.5e1 * eta - 0.169e3 / 0.50e2 * (eta ^ 4) - 0.1863e4 / 0.50e2 + 0.34e2 / 0.25e2 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 6) - 0.1786e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.161e3 / 0.50e2 * (eta ^ 3) + 0.469e3 / 0.50e2 * (eta ^ 2) - 0.39e2 / 0.200e3 * (eta ^ 4) + 0.563e3 / 0.50e2 * eta - (eta ^ 6) / 0.10e2 - 0.23e2 / 0.50e2 * (eta ^ 5) + 0.1011e4 / 0.200e3) * (eta - 1) * sin((2 * g + 2 * h)) + 0.80e2 / 0.2037e4 * ((1 + eta) ^ 2) * (eta - 1) * ((0.109e3 / 0.4e1 + 0.355e3 / 0.12e2 * eta + (eta ^ 4) - 0.701e3 / 0.60e2 * (eta ^ 3) - 0.111e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.3337e4 / 0.60e2 + 0.122e3 / 0.5e1 * (eta ^ 3) + 0.123e3 / 0.10e2 * (eta ^ 2) - 0.301e3 / 0.5e1 * eta - 0.25e2 / 0.12e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.204e3 / 0.5e1 - 0.92e2 / 0.5e1 * (eta ^ 3) + 0.93e2 / 0.2e1 * eta + 0.4e1 / 0.5e1 * (eta ^ 4) - 0.71e2 / 0.10e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.71e2 / 0.12e2 * (eta ^ 3) - 0.967e3 / 0.60e2 * eta + 0.3e1 / 0.10e2 * (eta ^ 4) - 0.253e3 / 0.20e2 + 0.11e2 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.161e3 / 0.240e3 * (eta ^ 3) + 0.29e2 / 0.240e3 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.109e3 / 0.80e2 + 0.461e3 / 0.240e3 * eta) * sin((2 * h + 2 * g + 4 * f)) + 0.467e3 / 0.679e3 * (eta - 1) * sqrt((-eta ^ 2 + 1)) * ((-0.1715e4 / 0.467e3 + (eta ^ 5) - 0.5485e4 / 0.4203e4 * eta + 0.2621e4 / 0.467e3 * (eta ^ 4) + 0.62690e5 / 0.4203e4 * (eta ^ 3) + 0.52966e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.34118e5 / 0.4203e4 - 0.1038e4 / 0.467e3 * (eta ^ 5) - 0.138916e6 / 0.4203e4 * (eta ^ 3) - 0.13148e5 / 0.467e3 * (eta ^ 2) + 0.11234e5 / 0.4203e4 * eta - 0.52234e5 / 0.4203e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.3188e4 / 0.467e3 + 0.13368e5 / 0.467e3 * (eta ^ 3) - 0.3068e4 / 0.1401e4 * eta + 0.14996e5 / 0.1401e4 * (eta ^ 4) + 0.796e3 / 0.467e3 * (eta ^ 5) + 0.11288e5 / 0.467e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.48358e5 / 0.4203e4 * (eta ^ 3) + 0.3595e4 / 0.4203e4 * eta - 0.17911e5 / 0.4203e4 * (eta ^ 4) + 0.1209e4 / 0.467e3 - 0.727e3 / 0.1401e4 * (eta ^ 5) - 0.39818e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.14195e5 / 0.8406e4 * (eta ^ 3) + 0.11381e5 / 0.8406e4 * (eta ^ 2) + 0.10417e5 / 0.16812e5 * (eta ^ 4) - 0.5963e4 / 0.16812e5 - 0.225e3 / 0.1868e4 * eta + 0.883e3 / 0.16812e5 * (eta ^ 5)) * sin((-2 * h - 2 * g + f)) + 0.20e2 / 0.63e2 * ((-0.3144e4 / 0.485e3 + (eta ^ 5) + 0.5909e4 / 0.485e3 * eta - 0.1584e4 / 0.485e3 * (eta ^ 4) + 0.1302e4 / 0.485e3 * (eta ^ 3) + 0.12136e5 / 0.485e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.6288e4 / 0.485e3 - 0.214e3 / 0.97e2 * (eta ^ 5) - 0.2492e4 / 0.485e3 * (eta ^ 3) - 0.26152e5 / 0.485e3 * (eta ^ 2) - 0.13334e5 / 0.485e3 * eta + 0.3544e4 / 0.485e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4701e4 / 0.485e3 + 0.2682e4 / 0.485e3 * (eta ^ 3) + 0.2199e4 / 0.97e2 * eta - 0.657e3 / 0.97e2 * (eta ^ 4) + 0.531e3 / 0.485e3 * (eta ^ 5) + 0.4362e4 / 0.97e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.312e3 / 0.97e2 * (eta ^ 3) - 0.3946e4 / 0.485e3 * eta + 0.1461e4 / 0.485e3 * (eta ^ 4) + 0.1557e4 / 0.485e3 + 0.74e2 / 0.485e3 * (eta ^ 5) - 0.8354e4 / 0.485e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.283e3 / 0.485e3 * (eta ^ 3) + 0.2303e4 / 0.970e3 * (eta ^ 2) - 0.183e3 / 0.388e3 * (eta ^ 4) + 0.207e3 / 0.194e3 * eta - 0.143e3 / 0.388e3 - (eta ^ 5) / 0.10e2) * (1 + eta) * (eta - 1) * sin((2 * f)) - 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((2 * h + 4 * f)) - 0.13000e5 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.306e3 / 0.325e3 * (eta ^ 3) - 0.72e2 / 0.65e2 * (eta ^ 2) - 0.202e3 / 0.325e3 * eta + 0.147e3 / 0.325e3) * (ci2 ^ 6) + (-0.401e3 / 0.325e3 * (eta ^ 4) - 0.382e3 / 0.325e3 * (eta ^ 3) + 0.452e3 / 0.325e3 * (eta ^ 2) + 0.294e3 / 0.325e3 * eta - 0.147e3 / 0.325e3) * (ci2 ^ 4) + (0.629e3 / 0.1625e4 * (eta ^ 4) + 0.122e3 / 0.325e3 * (eta ^ 3) - 0.56e2 / 0.125e3 * (eta ^ 2) - 0.114e3 / 0.325e3 * eta + 0.147e3 / 0.1625e4) * (ci2 ^ 2) - 0.38e2 / 0.1625e4 * (1 + eta) * eta * ((eta ^ 2) - 0.23e2 / 0.19e2)) * cos((f + 2 * g)) + 0.215e3 / 0.4074e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) - 0.1016e4 / 0.215e3 * eta - 0.3067e4 / 0.215e3) * (ci2 ^ 6) + (-0.51e2 / 0.43e2 * (eta ^ 2) + 0.976e3 / 0.215e3 * eta + 0.3067e4 / 0.215e3) * (ci2 ^ 4) + (0.83e2 / 0.258e3 * (eta ^ 2) - 0.158e3 / 0.215e3 * eta - 0.3199e4 / 0.1290e4) * (ci2 ^ 2) - 0.2e1 / 0.129e3 * eta * (1 + eta)) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((2 * g + 7 * f)) - 0.16e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 4) + (eta ^ 3) / 0.4e1 - 0.119e3 / 0.12e2 * (eta ^ 2) - 0.41e2 / 0.12e2 * eta + 0.173e3 / 0.12e2) * (ci2 ^ 2) - (eta ^ 4) / 0.2e1 - (eta ^ 3) / 0.4e1 + 0.31e2 / 0.12e2 * (eta ^ 2) + 0.37e2 / 0.12e2 * eta + 0.25e2 / 0.12e2) * sin((-2 * h + 2 * g + 4 * f)) + 0.16e2 / 0.2037e4 * (((eta ^ 2) - eta / 0.4e1 - 0.143e3 / 0.12e2) * (ci2 ^ 2) - (eta ^ 2) / 0.4e1 - eta / 0.4e1) * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin((8 * f + 4 * g)) - 0.125e3 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((9 * f + 4 * g)) + 0.239e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) + 0.1691e4 / 0.239e3 * (eta ^ 2) + 0.2725e4 / 0.239e3 * eta + 0.1265e4 / 0.239e3) * (ci2 ^ 6) + (-0.293e3 / 0.239e3 * (eta ^ 3) - 0.2013e4 / 0.239e3 * (eta ^ 2) - 0.3215e4 / 0.239e3 * eta - 0.1487e4 / 0.239e3) * (ci2 ^ 4) + (0.167e3 / 0.478e3 * (eta ^ 3) + 0.1265e4 / 0.478e3 * (eta ^ 2) + 0.6179e4 / 0.1434e4 * eta + 0.959e3 / 0.478e3) * (ci2 ^ 2) - 0.9e1 / 0.478e3 * (1 + eta) * ((eta ^ 2) + 0.62e2 / 0.9e1 * eta + 0.163e3 / 0.27e2)) * sqrt((-eta ^ 2 + 1)) * sin((-4 * g - 2 * h + f)) - 0.320e3 / 0.97e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.10e2 / 0.21e2 * eta - 0.8e1 / 0.7e1) * (ci2 ^ 6) + (-0.8e1 / 0.7e1 * (eta ^ 2) - 0.13e2 / 0.21e2 * eta + 0.8e1 / 0.7e1) * (ci2 ^ 4) + (0.11e2 / 0.35e2 * (eta ^ 2) + 0.22e2 / 0.105e3 * eta - 0.8e1 / 0.35e2) * (ci2 ^ 2) - (eta ^ 2) / 0.70e2 - eta / 0.70e2) * cos((2 * g + 4 * f)) + 0.2468e4 / 0.6111e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 5) + 0.3605e4 / 0.1234e4 * (eta ^ 4) - 0.4182e4 / 0.617e3 * (eta ^ 3) - 0.8665e4 / 0.617e3 * (eta ^ 2) + 0.8389e4 / 0.617e3 * eta + 0.24813e5 / 0.1234e4) * (ci2 ^ 6) + (-0.817e3 / 0.617e3 * (eta ^ 5) - 0.4981e4 / 0.1234e4 * (eta ^ 4) + 0.4806e4 / 0.617e3 * (eta ^ 3) + 0.11657e5 / 0.617e3 * (eta ^ 2) - 0.6509e4 / 0.617e3 * eta - 0.24813e5 / 0.1234e4) * (ci2 ^ 4) + (0.537e3 / 0.1234e4 * (eta ^ 5) + 0.3491e4 / 0.2468e4 * (eta ^ 4) - 0.1135e4 / 0.617e3 * (eta ^ 3) - 0.7535e4 / 0.1234e4 * (eta ^ 2) - 0.107e3 / 0.1234e4 * eta + 0.8379e4 / 0.2468e4) * (ci2 ^ 2) - 0.18e2 / 0.617e3 * ((eta ^ 2) + eta - 0.20e2 / 0.3e1) * (eta + 0.4e1 / 0.3e1) * (1 + eta) * eta) * sin((2 * g + 4 * f)) - 0.200e3 / 0.679e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) + 0.47e2 / 0.25e2 * (eta ^ 2) - 0.64e2 / 0.75e2) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 3) - 0.53e2 / 0.25e2 * (eta ^ 2) - 0.8e1 / 0.75e2 * eta + 0.64e2 / 0.75e2) * (ci2 ^ 4) + (0.151e3 / 0.450e3 * (eta ^ 3) + 0.19e2 / 0.30e2 * (eta ^ 2) + 0.22e2 / 0.225e3 * eta - 0.44e2 / 0.225e3) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (1 + eta) * eta * (eta + 0.6e1 / 0.7e1)) * sin((-2 * g + 2 * f)) - 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) - 0.4e1 / 0.5e1 * (eta ^ 4) - 0.38e2 / 0.15e2 * (eta ^ 3) + 0.24e2 / 0.5e1 * (eta ^ 2) - 0.29e2 / 0.15e2 * eta - 0.124e3 / 0.15e2) * (ci2 ^ 2) - 0.3e1 / 0.5e1 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 4) + 0.8e1 / 0.3e1 * (eta ^ 3) - (2 * eta ^ 2) - 0.31e2 / 0.15e2 * eta + 0.8e1 / 0.5e1) * sin((-2 * h + 2 * g + 2 * f)) + 0.1492e4 / 0.6111e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.3197e4 / 0.746e3 * (eta ^ 3) - 0.1851e4 / 0.746e3 * (eta ^ 2) - 0.11449e5 / 0.746e3 * eta - 0.8203e4 / 0.746e3) * (ci2 ^ 6) + (-0.399e3 / 0.373e3 * (eta ^ 4) - 0.3433e4 / 0.746e3 * (eta ^ 3) + 0.1719e4 / 0.746e3 * (eta ^ 2) + 0.11685e5 / 0.746e3 * eta + 0.8387e4 / 0.746e3) * (ci2 ^ 4) + (0.183e3 / 0.746e3 * (eta ^ 4) + 0.1507e4 / 0.1492e4 * (eta ^ 3) - 0.493e3 / 0.1492e4 * (eta ^ 2) - 0.4439e4 / 0.1492e4 * eta - 0.3157e4 / 0.1492e4) * (ci2 ^ 2) - 0.5e1 / 0.746e3 * (eta + 0.16e2 / 0.5e1) * ((1 + eta) ^ 2) * (eta - 1)) * (eta - 1) * sin((2 * h + 6 * f + 4 * g)) + 0.320e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((0.265e3 / 0.32e2 + (eta ^ 6) + 0.913e3 / 0.240e3 * (eta ^ 5) - 0.23e2 / 0.24e2 * (eta ^ 3) - 0.1473e4 / 0.80e2 * (eta ^ 2) - 0.811e3 / 0.240e3 * eta + 0.4079e4 / 0.480e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.265e3 / 0.32e2 + 0.211e3 / 0.120e3 * (eta ^ 3) + 0.401e3 / 0.80e2 * eta - 0.851e3 / 0.96e2 * (eta ^ 4) - 0.307e3 / 0.80e2 * (eta ^ 5) - (eta ^ 6) + 0.5083e4 / 0.240e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.91e2 / 0.48e2 * (eta ^ 3) - 0.1723e4 / 0.480e3 * eta + 0.2161e4 / 0.960e3 * (eta ^ 4) + 0.1337e4 / 0.960e3 + 0.31e2 / 0.32e2 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) - 0.4037e4 / 0.480e3 * (eta ^ 2)) * (ci2 ^ 2) - (eta * (1 + eta) * (eta ^ 3 + 4 * eta ^ 2 - 23 * eta - 28)) / 0.120e3) * (eta - 1) * sin((2 * g)) - 0.100e3 / 0.679e3 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 3) + 0.21e2 / 0.50e2 * (eta ^ 2) - 0.77e2 / 0.25e2 * eta - 0.347e3 / 0.150e3) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 3) - 0.79e2 / 0.150e3 * (eta ^ 2) + 0.241e3 / 0.75e2 * eta + 0.121e3 / 0.50e2) * (ci2 ^ 4) + (0.151e3 / 0.450e3 * (eta ^ 3) + 0.19e2 / 0.100e3 * (eta ^ 2) - 0.367e3 / 0.450e3 * eta - 0.559e3 / 0.900e3) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (1 + eta) * (eta + 0.6e1 / 0.7e1) * (eta - 1)) * sin((2 * h + 2 * f)) + 0.173e3 / 0.4074e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.3692e4 / 0.173e3 * (eta ^ 3) + 0.1998e4 / 0.173e3 * (eta ^ 2) - 0.6820e4 / 0.173e3 * eta - 0.4979e4 / 0.173e3) * (ci2 ^ 6) + (-0.217e3 / 0.173e3 * (eta ^ 4) - 0.4052e4 / 0.173e3 * (eta ^ 3) - 0.2366e4 / 0.173e3 * (eta ^ 2) + 0.7148e4 / 0.173e3 * eta + 0.5423e4 / 0.173e3) * (ci2 ^ 4) + (0.409e3 / 0.1038e4 * (eta ^ 4) + 0.3526e4 / 0.519e3 * (eta ^ 3) + 0.2279e4 / 0.519e3 * (eta ^ 2) - 0.1862e4 / 0.173e3 * eta - 0.8735e4 / 0.1038e4) * (ci2 ^ 2) - 0.11e2 / 0.519e3 * (eta - 1) * ((eta ^ 3) + 0.153e3 / 0.11e2 * (eta ^ 2) + (27 * eta) + 0.163e3 / 0.11e2)) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + f)) - 0.320e3 / 0.291e3 * ((1 + eta) ^ 2) * (((eta ^ 5) - 0.163e3 / 0.28e2 * (eta ^ 3) - 0.3e1 / 0.4e1 * (eta ^ 2) + 0.151e3 / 0.28e2 * eta + 0.17e2 / 0.28e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 5) + 0.193e3 / 0.28e2 * (eta ^ 3) + 0.27e2 / 0.28e2 * (eta ^ 2) - 0.173e3 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 5) - 0.297e3 / 0.140e3 * (eta ^ 3) - 0.9e1 / 0.28e2 * (eta ^ 2) + 0.251e3 / 0.140e3 * eta + 0.41e2 / 0.140e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) - 0.37e2 / 0.14e2 * eta - 0.9e1 / 0.14e2) * (eta - 1) / 0.30e2) * (ci2 - 1) * (ci2 + 1) * Delta * cos((2 * h)) + 0.106e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.6769e4 / 0.53e2 * (eta ^ 4) + 0.7320e4 / 0.53e2 * (eta ^ 3) - 0.13000e5 / 0.53e2 * (eta ^ 2) - 0.11157e5 / 0.53e2 * eta + 0.3375e4 / 0.53e2) * (ci2 ^ 6) + (0.25e2 / 0.53e2 * (eta ^ 5) - 0.8435e4 / 0.53e2 * (eta ^ 4) - 0.9216e4 / 0.53e2 * (eta ^ 3) + 0.15544e5 / 0.53e2 * (eta ^ 2) + 0.13743e5 / 0.53e2 * eta - 0.3517e4 / 0.53e2) * (ci2 ^ 4) + (-0.277e3 / 0.318e3 * (eta ^ 5) + 0.16747e5 / 0.318e3 * (eta ^ 4) + 0.9073e4 / 0.159e3 * (eta ^ 3) - 0.14447e5 / 0.159e3 * (eta ^ 2) - 0.26173e5 / 0.318e3 * eta + 0.5075e4 / 0.318e3) * (ci2 ^ 2) + 0.13e2 / 0.106e3 * (eta ^ 5) - 0.1135e4 / 0.318e3 * (eta ^ 4) - 0.602e3 / 0.159e3 * (eta ^ 3) + 0.878e3 / 0.159e3 * (eta ^ 2) + 0.543e3 / 0.106e3 * eta - 0.173e3 / 0.318e3) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + f)) - 0.232e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 5) - 0.9e1 / 0.29e2 * (eta ^ 4) - 0.296e3 / 0.29e2 * (eta ^ 3) - 0.36e2 / 0.29e2 * (eta ^ 2) + 0.273e3 / 0.29e2 * eta + 0.189e3 / 0.29e2) * (ci2 ^ 2) - 0.8e1 / 0.29e2 * (eta ^ 5) + 0.28e2 / 0.29e2 * (eta ^ 3) - 0.12e2 / 0.29e2 * eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((4 * f + 4 * g)) + 0.4e1 / 0.2037e4 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((6 * g + 2 * h + 10 * f)) - 0.17120e5 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.27e2 / 0.107e3 * (eta ^ 2) - 0.155e3 / 0.107e3 * eta + 0.63e2 / 0.107e3) * (ci2 ^ 6) + (-0.131e3 / 0.107e3 * (eta ^ 3) + 0.27e2 / 0.107e3 * (eta ^ 2) + 0.187e3 / 0.107e3 * eta - 0.63e2 / 0.107e3) * (ci2 ^ 4) + (0.203e3 / 0.535e3 * (eta ^ 3) - 0.27e2 / 0.535e3 * (eta ^ 2) - 0.283e3 / 0.535e3 * eta + 0.63e2 / 0.535e3) * (ci2 ^ 2) - 0.12e2 / 0.535e3 * (eta ^ 3) + 0.16e2 / 0.535e3 * eta) * Delta * cos((2 * g + 2 * f)) - 0.424e3 / 0.679e3 * (1 + eta) * (((eta ^ 5) + 0.1231e4 / 0.318e3 * (eta ^ 4) - 0.1373e4 / 0.477e3 * (eta ^ 3) - 0.5758e4 / 0.477e3 * (eta ^ 2) - 0.434e3 / 0.477e3 * eta + 0.1817e4 / 0.318e3) * (ci2 ^ 6) + (-0.179e3 / 0.159e3 * (eta ^ 5) - 0.445e3 / 0.106e3 * (eta ^ 4) + 0.1675e4 / 0.477e3 * (eta ^ 3) + 0.6608e4 / 0.477e3 * (eta ^ 2) + 0.664e3 / 0.477e3 * eta - 0.655e3 / 0.106e3) * (ci2 ^ 4) + (0.131e3 / 0.318e3 * (eta ^ 5) + 0.267e3 / 0.212e3 * (eta ^ 4) - 0.1559e4 / 0.954e3 * (eta ^ 3) - 0.857e3 / 0.159e3 * (eta ^ 2) - 0.922e3 / 0.477e3 * eta + 0.1981e4 / 0.1908e4) * (ci2 ^ 2) - 0.11e2 / 0.477e3 * ((eta ^ 4) + 0.15e2 / 0.11e2 * (eta ^ 3) - 0.123e3 / 0.22e2 * (eta ^ 2) - 0.75e2 / 0.11e2 * eta + 0.17e2 / 0.22e2) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sin((2 * h + 2 * f + 4 * g)) - 0.880e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((2 * h + 6 * f + 4 * g)) + 0.10e2 / 0.679e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.23e2 / 0.45e2 * eta - 0.26e2 / 0.9e1) * (ci2 ^ 2) - 0.2e1 / 0.45e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.2e1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + 5 * f + 2 * g)) - 0.1100e4 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.28e2 / 0.55e2 * eta - 0.171e3 / 0.55e2) * (ci2 ^ 6) + (-0.63e2 / 0.55e2 * (eta ^ 2) - 0.36e2 / 0.55e2 * eta + 0.171e3 / 0.55e2) * (ci2 ^ 4) + (0.87e2 / 0.275e3 * (eta ^ 2) + 0.12e2 / 0.55e2 * eta - 0.171e3 / 0.275e3) * (ci2 ^ 2) - 0.4e1 / 0.275e3 * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) * cos((5 * f + 2 * g)) - 0.880e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((6 * f + 2 * g)) - 0.6040e4 / 0.6111e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) + 0.91e2 / 0.151e3 * eta - 0.276e3 / 0.151e3) * (ci2 ^ 6) + (-0.197e3 / 0.151e3 * (eta ^ 2) - 0.119e3 / 0.151e3 * eta + 0.366e3 / 0.151e3) * (ci2 ^ 4) + (0.67e2 / 0.151e3 * (eta ^ 2) + 0.203e3 / 0.755e3 * eta - 0.636e3 / 0.755e3) * (ci2 ^ 2) - 0.23e2 / 0.755e3 * (eta ^ 2) - 0.14e2 / 0.755e3 * eta + 0.9e1 / 0.151e3) * cos((-2 * h + 3 * f)) - 0.29e2 / 0.6111e4 * (ci2 ^ 2) * ((ci2 ^ 2) - 0.44e2 / 0.29e2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((2 * g - 2 * h + 7 * f)) + 0.80e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((-2 * g + 2 * f)) + 0.80e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((2 * h + 2 * f)) + 0.1340e4 / 0.2037e4 * ((eta + 0.9e1 / 0.67e2) * (ci2 ^ 6) + (-0.75e2 / 0.67e2 * eta - 0.9e1 / 0.67e2) * (ci2 ^ 4) + (0.99e2 / 0.335e3 * eta + 0.9e1 / 0.335e3) * (ci2 ^ 2) - 0.4e1 / 0.335e3 * eta) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((-2 * g + f)) - 0.260e3 / 0.2037e4 * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + 5 * f)) + 0.500e3 / 0.2037e4 * ((1 + eta) ^ 3) * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((-4 * g - 2 * h + f)) - 0.5800e4 / 0.679e3 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.95e2 / 0.87e2 * eta + 0.8e1 / 0.15e2) * (ci2 ^ 6) + (-0.101e3 / 0.87e2 * (eta ^ 2) - 0.19e2 / 0.15e2 * eta - 0.262e3 / 0.435e3) * (ci2 ^ 4) + (0.143e3 / 0.435e3 * (eta ^ 2) + 0.779e3 / 0.2175e4 * eta + 0.352e3 / 0.2175e4) * (ci2 ^ 2) - 0.7e1 / 0.435e3 * (eta ^ 2) - 0.38e2 / 0.2175e4 * eta - 0.1e1 / 0.145e3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((4 * g + 2 * h + f)) - 0.323e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.148e3 / 0.323e3 * eta - 0.1503e4 / 0.323e3) * (ci2 ^ 2) - 0.88e2 / 0.323e3 * eta * (1 + eta)) * sqrt((-eta ^ 2 + 1)) * sin((4 * g + 7 * f)) - 0.403e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((ci2 ^ 2) - 0.4e1 / 0.31e2) * sqrt((-eta ^ 2 + 1)) * sin((6 * g + 2 * h + f)) - 0.139e3 / 0.873e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) + 0.1300e4 / 0.973e3 * eta + 0.303e3 / 0.973e3) * (ci2 ^ 2) - 0.104e3 / 0.973e3 * eta * (1 + eta)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((4 * g + f)) + 0.2054e4 / 0.6111e4 * (((eta ^ 2) + 0.1305e4 / 0.1027e4 * eta + 0.306e3 / 0.1027e4) * (ci2 ^ 2) - 0.110e3 / 0.1027e4 * (eta ^ 2) - 0.140e3 / 0.1027e4 * eta - 0.22e2 / 0.1027e4) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((6 * g + 2 * h + 3 * f)) - 0.5e1 / 0.679e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * sin((7 * f)) - 0.5e1 / 0.679e3 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((1 + eta) ^ 4) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((2 * g + 2 * h + 7 * f)) + 0.677e3 / 0.4074e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.6983e4 / 0.677e3 * (eta ^ 4) - 0.20870e5 / 0.677e3 * (eta ^ 3) + 0.1498e4 / 0.677e3 * (eta ^ 2) + 0.35057e5 / 0.677e3 * eta + 0.24573e5 / 0.677e3) * (ci2 ^ 6) + (-0.801e3 / 0.677e3 * (eta ^ 5) + 0.7427e4 / 0.677e3 * (eta ^ 4) + 0.22542e5 / 0.677e3 * (eta ^ 3) - 0.866e3 / 0.677e3 * (eta ^ 2) - 0.36605e5 / 0.677e3 * eta - 0.25649e5 / 0.677e3) * (ci2 ^ 4) + (0.427e3 / 0.1354e4 * (eta ^ 5) - 0.9707e4 / 0.4062e4 * (eta ^ 4) - 0.14995e5 / 0.2031e4 * (eta ^ 3) - 0.659e3 / 0.2031e4 * (eta ^ 2) + 0.14727e5 / 0.1354e4 * eta + 0.30721e5 / 0.4062e4) * (ci2 ^ 2) - 0.31e2 / 0.2031e4 * ((eta ^ 3) - 0.123e3 / 0.31e2 * (eta ^ 2) - 0.411e3 / 0.31e2 * eta - 0.281e3 / 0.31e2) * (1 + eta) * (eta - 1)) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 5 * f + 4 * g)) - 0.802e3 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.2273e4 / 0.401e3 * (eta ^ 4) + 0.4304e4 / 0.401e3 * (eta ^ 3) - 0.15488e5 / 0.3609e4 * (eta ^ 2) - 0.76769e5 / 0.3609e4 * eta - 0.24203e5 / 0.1203e4) * (ci2 ^ 6) + (-0.1265e4 / 0.1203e4 * (eta ^ 5) - 0.2619e4 / 0.401e3 * (eta ^ 4) - 0.15016e5 / 0.1203e4 * (eta ^ 3) + 0.16528e5 / 0.3609e4 * (eta ^ 2) + 0.85123e5 / 0.3609e4 * eta + 0.26185e5 / 0.1203e4) * (ci2 ^ 4) + (0.551e3 / 0.2406e4 * (eta ^ 5) + 0.3403e4 / 0.2406e4 * (eta ^ 4) + 0.1155e4 / 0.401e3 * (eta ^ 3) - 0.1925e4 / 0.3609e4 * (eta ^ 2) - 0.34123e5 / 0.7218e4 * eta - 0.10829e5 / 0.2406e4) * (ci2 ^ 2) - 0.31e2 / 0.7218e4 * (eta ^ 5) - 0.433e3 / 0.7218e4 * (eta ^ 4) - 0.154e3 / 0.1203e4 * (eta ^ 3) + 0.34e2 / 0.3609e4 * (eta ^ 2) + 0.1163e4 / 0.7218e4 * eta + 0.101e3 / 0.802e3) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 3 * f + 4 * g)) + 0.4e1 / 0.2037e4 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sin((10 * f + 4 * g)) + 0.940e3 / 0.6111e4 * (((eta ^ 4) + 0.2097e4 / 0.470e3 * (eta ^ 3) + 0.483e3 / 0.470e3 * (eta ^ 2) - 0.3421e4 / 0.470e3 * eta - 0.2037e4 / 0.470e3) * (ci2 ^ 6) + (-0.67e2 / 0.47e2 * (eta ^ 4) - 0.2889e4 / 0.470e3 * (eta ^ 3) - 0.267e3 / 0.470e3 * (eta ^ 2) + 0.5981e4 / 0.470e3 * eta + 0.3789e4 / 0.470e3) * (ci2 ^ 4) + (0.247e3 / 0.470e3 * (eta ^ 4) + 0.2059e4 / 0.940e3 * (eta ^ 3) - 0.71e2 / 0.940e3 * (eta ^ 2) - 0.5231e4 / 0.940e3 * eta - 0.703e3 / 0.188e3) * (ci2 ^ 2) - 0.9e1 / 0.235e3 * (1 + eta) * ((eta ^ 3) + 0.26e2 / 0.9e1 * (eta ^ 2) - 0.34e2 / 0.9e1 * eta - 0.74e2 / 0.9e1)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((-2 * h + 4 * f)) + 0.2e1 / 0.2037e4 * (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 3) * ((ci2 + 1) ^ 3) * sin((2 * g - 2 * h + 8 * f)) + 0.376e3 / 0.2037e4 * ((1 + eta) ^ 2) * (((eta ^ 3) + 0.559e3 / 0.141e3 * (eta ^ 2) - 0.782e3 / 0.141e3 * eta - 0.654e3 / 0.47e2) * (ci2 ^ 6) + (-0.167e3 / 0.141e3 * (eta ^ 3) - 0.677e3 / 0.141e3 * (eta ^ 2) + 0.230e3 / 0.47e2 * eta + 0.654e3 / 0.47e2) * (ci2 ^ 4) + (0.95e2 / 0.282e3 * (eta ^ 3) + 0.389e3 / 0.282e3 * (eta ^ 2) - 0.67e2 / 0.141e3 * eta - 0.341e3 / 0.141e3) * (ci2 ^ 2) - 0.5e1 / 0.282e3 * (eta ^ 3) - 0.7e1 / 0.94e2 * (eta ^ 2) - 0.8e1 / 0.141e3 * eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((6 * f + 2 * g)) - 0.8240e4 / 0.679e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.134e3 / 0.103e3 * eta + 0.185e3 / 0.309e3) * (ci2 ^ 6) + (-0.349e3 / 0.309e3 * (eta ^ 2) - 0.454e3 / 0.309e3 * eta - 0.205e3 / 0.309e3) * (ci2 ^ 4) + (0.469e3 / 0.1545e4 * (eta ^ 2) + 0.122e3 / 0.309e3 * eta + 0.53e2 / 0.309e3) * (ci2 ^ 2) - 0.4e1 / 0.309e3 * (eta ^ 2) - 0.26e2 / 0.1545e4 * eta - 0.2e1 / 0.309e3) * cos((2 * h + 2 * f + 4 * g)) - 0.7600e4 / 0.2037e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) + 0.47e2 / 0.38e2 * (eta ^ 3) - 0.1231e4 / 0.570e3 * (eta ^ 2) - 0.2293e4 / 0.570e3 * eta - 0.73e2 / 0.38e2) * (ci2 ^ 6) + (-0.108e3 / 0.95e2 * (eta ^ 4) - 0.267e3 / 0.190e3 * (eta ^ 3) + 0.1331e4 / 0.570e3 * (eta ^ 2) + 0.2501e4 / 0.570e3 * eta + 0.79e2 / 0.38e2) * (ci2 ^ 4) + (0.147e3 / 0.475e3 * (eta ^ 4) + 0.363e3 / 0.950e3 * (eta ^ 3) - 0.1631e4 / 0.2850e4 * (eta ^ 2) - 0.125e3 / 0.114e3 * eta - 0.97e2 / 0.190e3) * (ci2 ^ 2) - 0.13e2 / 0.950e3 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (1 + eta)) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + 3 * f + 4 * g)) - 0.4e1 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((eta ^ 2 + eta) * ci2 ^ 2 + eta ^ 2 - eta - 32) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sin((2 * g - 2 * h + 6 * f)) + 0.790e3 / 0.6111e4 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.198e3 / 0.395e3 * (eta ^ 3) - 0.1724e4 / 0.395e3 * (eta ^ 2) - 0.1518e4 / 0.395e3 * eta - 0.111e3 / 0.395e3) * (ci2 ^ 2) - 0.124e3 / 0.395e3 * (1 + eta) * ((eta ^ 2) - 0.59e2 / 0.31e2) * eta) * sqrt((-eta ^ 2 + 1)) * sin((3 * f + 4 * g)) + 0.13e2 / 0.2037e4 * (((eta ^ 2) + 0.146e3 / 0.13e2 * eta + 0.121e3 / 0.13e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 2) - 0.146e3 / 0.13e2 * eta - 0.119e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.78e2 * (eta ^ 2) + 0.8e1 / 0.3e1 * eta + 0.173e3 / 0.78e2) * (ci2 ^ 2) - (eta ^ 2) / 0.78e2 + 0.1e1 / 0.78e2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 3 * f)) + 0.55e2 / 0.4074e4 * (((eta ^ 2) + 0.72e2 / 0.11e2 * eta + 0.261e3 / 0.55e2) * (ci2 ^ 6) + (-0.63e2 / 0.55e2 * (eta ^ 2) - 0.368e3 / 0.55e2 * eta - 0.261e3 / 0.55e2) * (ci2 ^ 4) + (0.19e2 / 0.66e2 * (eta ^ 2) + 0.262e3 / 0.165e3 * eta + 0.7e1 / 0.6e1) * (ci2 ^ 2) - 0.2e1 / 0.165e3 * eta * (1 + eta)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((3 * f - 2 * g)) + 0.34e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 3) + 0.11e2 / 0.17e2 * (eta ^ 2) - 0.277e3 / 0.51e2 * eta - 0.17e2 / 0.3e1) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.17e2) * sin((6 * g + 2 * h + 8 * f)) - 0.125e3 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((6 * g + 2 * h + 9 * f)) - 0.734e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.250e3 / 0.367e3 * (eta ^ 2) - 0.663e3 / 0.367e3 * eta - 0.766e3 / 0.367e3) * (ci2 ^ 2) - 0.22e2 / 0.367e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * sin((6 * g + 2 * h + 7 * f)) - 0.86e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.38e2 / 0.129e3 * (eta ^ 2) - 0.99e2 / 0.43e2 * eta - 0.50e2 / 0.129e3) * (ci2 ^ 2) - 0.26e2 / 0.129e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + f + 2 * g)) - 0.512e3 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 4) + 0.155e3 / 0.128e3 * (eta ^ 3) - 0.121e3 / 0.128e3 * (eta ^ 2) - 0.127e3 / 0.128e3 * eta + 0.205e3 / 0.128e3) * (ci2 ^ 2) - 0.7e1 / 0.64e2 * (eta ^ 4) - 0.17e2 / 0.128e3 * (eta ^ 3) - 0.7e1 / 0.128e3 * (eta ^ 2) - 0.13e2 / 0.128e3 * eta - 0.25e2 / 0.128e3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sin((6 * g + 2 * h + 4 * f)) - 0.1360e4 / 0.6111e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.77e2 / 0.68e2 * eta + 0.217e3 / 0.340e3) * (ci2 ^ 2) - 0.49e2 / 0.340e3 * (eta ^ 2) - 0.11e2 / 0.68e2 * eta - 0.6e1 / 0.85e2) * sin((6 * g + 2 * h + 2 * f)) + 0.52e2 / 0.2037e4 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sin((4 * g + 2 * h + 8 * f)) + 0.145e3 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.433e3 / 0.145e3 * (eta ^ 2) - 0.2049e4 / 0.145e3 * eta - 0.1551e4 / 0.145e3) * (ci2 ^ 6) + (-0.31e2 / 0.29e2 * (eta ^ 3) + 0.423e3 / 0.145e3 * (eta ^ 2) + 0.71e2 / 0.5e1 * eta + 0.1561e4 / 0.145e3) * (ci2 ^ 4) + (0.13e2 / 0.58e2 * (eta ^ 3) - 0.449e3 / 0.870e3 * (eta ^ 2) - 0.2231e4 / 0.870e3 * eta - 0.1667e4 / 0.870e3) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.174e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((4 * g + 2 * h + 7 * f)) - 0.13e2 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((-4 * g + f)) - 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * sin((4 * f - 2 * g)) - 0.13e2 / 0.6111e4 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((2 * h - 2 * g + f)) + 0.323e3 / 0.4074e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) - 0.4776e4 / 0.323e3 * (eta ^ 3) - 0.12610e5 / 0.323e3 * (eta ^ 2) + 0.10856e5 / 0.323e3 * eta + 0.22703e5 / 0.323e3) * (ci2 ^ 6) + (-0.443e3 / 0.323e3 * (eta ^ 4) + 0.5616e4 / 0.323e3 * (eta ^ 3) + 0.15738e5 / 0.323e3 * (eta ^ 2) - 0.8688e4 / 0.323e3 * eta - 0.22703e5 / 0.323e3) * (ci2 ^ 4) + (0.923e3 / 0.1938e4 * (eta ^ 4) - 0.4550e4 / 0.969e3 * (eta ^ 3) - 0.14131e5 / 0.969e3 * (eta ^ 2) + 0.146e3 / 0.323e3 * eta + 0.7817e4 / 0.646e3) * (ci2 ^ 2) - 0.10e2 / 0.323e3 * (1 + eta) * eta * ((eta ^ 2) - 0.44e2 / 0.5e1 * eta - 0.283e3 / 0.15e2)) * sin((5 * f + 2 * g)) - 0.6067e4 / 0.4074e4 * (((eta ^ 5) - 0.46919e5 / 0.6067e4 * (eta ^ 4) - 0.180282e6 / 0.6067e4 * (eta ^ 3) - 0.197014e6 / 0.6067e4 * (eta ^ 2) - 0.71305e5 / 0.6067e4 * eta - 0.1491e4 / 0.6067e4) * (ci2 ^ 6) + (-0.6699e4 / 0.6067e4 * (eta ^ 5) + 0.55311e5 / 0.6067e4 * (eta ^ 4) + 0.210362e6 / 0.6067e4 * (eta ^ 3) + 0.229910e6 / 0.6067e4 * (eta ^ 2) + 0.83713e5 / 0.6067e4 * eta + 0.2059e4 / 0.6067e4) * (ci2 ^ 4) + (0.3241e4 / 0.12134e5 * (eta ^ 5) - 0.36237e5 / 0.12134e5 * (eta ^ 4) - 0.197185e6 / 0.18201e5 * (eta ^ 3) - 0.216271e6 / 0.18201e5 * (eta ^ 2) - 0.165929e6 / 0.36402e5 * eta - 0.9227e4 / 0.36402e5) * (ci2 ^ 2) - 0.158e3 / 0.18201e5 * ((eta ^ 4) - 0.1622e4 / 0.79e2 * (eta ^ 3) - 0.3666e4 / 0.79e2 * (eta ^ 2) - 0.2122e4 / 0.79e2 * eta - 0.173e3 / 0.79e2) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((4 * g + 2 * h + f)) - 0.8080e4 / 0.2037e4 * (((eta ^ 3) + 0.63e2 / 0.101e3 * (eta ^ 2) - 0.117e3 / 0.101e3 * eta - 0.115e3 / 0.101e3) * (ci2 ^ 6) + (-0.107e3 / 0.101e3 * (eta ^ 3) - 0.69e2 / 0.101e3 * (eta ^ 2) + 0.123e3 / 0.101e3 * eta + 0.121e3 / 0.101e3) * (ci2 ^ 4) + (0.25e2 / 0.101e3 * (eta ^ 3) + 0.87e2 / 0.505e3 * (eta ^ 2) - 0.141e3 / 0.505e3 * eta - 0.139e3 / 0.505e3) * (ci2 ^ 2) - 0.3e1 / 0.505e3 * (eta - 1) * ((1 + eta) ^ 2)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * cos((2 * h + 4 * f + 4 * g)) + 0.37e2 / 0.582e3 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * (((eta ^ 5) + 0.16897e5 / 0.2331e4 * (eta ^ 4) + 0.13522e5 / 0.777e3 * (eta ^ 3) + 0.5738e4 / 0.259e3 * (eta ^ 2) + 0.17887e5 / 0.2331e4 * eta - 0.2809e4 / 0.777e3) * (ci2 ^ 6) + (-0.593e3 / 0.777e3 * (eta ^ 5) - 0.13721e5 / 0.2331e4 * (eta ^ 4) - 0.11474e5 / 0.777e3 * (eta ^ 3) - 0.7530e4 / 0.259e3 * (eta ^ 2) - 0.61319e5 / 0.2331e4 * eta - 0.5119e4 / 0.777e3) * (ci2 ^ 4) + (0.23e2 / 0.666e3 * (eta ^ 5) + 0.3851e4 / 0.4662e4 * (eta ^ 4) + 0.1775e4 / 0.777e3 * (eta ^ 3) + 0.1079e4 / 0.111e3 * (eta ^ 2) + 0.70709e5 / 0.4662e4 * eta + 0.10709e5 / 0.1554e4) * (ci2 ^ 2) + 0.46e2 / 0.2331e4 * (1 + eta) * ((eta ^ 4) + 0.2e1 / 0.23e2 * (eta ^ 3) - 0.26e2 / 0.23e2 * (eta ^ 2) - 0.802e3 / 0.23e2 * eta - 0.909e3 / 0.23e2)) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + 3 * f)) + 0.480e3 / 0.679e3 * ((1 + eta) ^ 3) * (((eta ^ 2) + 0.308e3 / 0.27e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) - 0.224e3 / 0.9e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 2) + 0.188e3 / 0.9e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 2) - 0.8e1) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 + 0.10e2 / 0.9e1) * eta * Delta * (eta - 1) * cos((2 * g + 2 * h)) - 0.220e3 / 0.2037e4 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.199e3 / 0.110e3 * eta + 0.91e2 / 0.110e3) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.47e2 / 0.22e2 * eta - 0.107e3 / 0.110e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.60e2 * eta + 0.69e2 / 0.220e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.13e2 / 0.330e3 * eta - 0.1e1 / 0.55e2) * ((eta - 1) ^ 3) * sin((-4 * g - 2 * h + 2 * f)) + 0.260e3 / 0.6111e4 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.551e3 / 0.130e3 * eta + 0.71e2 / 0.26e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.787e3 / 0.130e3 * eta - 0.539e3 / 0.130e3) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.9e1 / 0.4e1 * eta + 0.33e2 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.21e2 / 0.130e3 * eta - 0.8e1 / 0.65e2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * sin((-2 * h + 6 * f)) - 0.1480e4 / 0.6111e4 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.67e2 / 0.74e2 * (eta ^ 4) - 0.3267e4 / 0.185e3 * (eta ^ 3) - 0.6946e4 / 0.185e3 * (eta ^ 2) - 0.2192e4 / 0.185e3 * eta + 0.3297e4 / 0.370e3) * (ci2 ^ 6) + (-0.229e3 / 0.185e3 * (eta ^ 5) - 0.559e3 / 0.370e3 * (eta ^ 4) + 0.3753e4 / 0.185e3 * (eta ^ 3) + 0.8252e4 / 0.185e3 * (eta ^ 2) + 0.3166e4 / 0.185e3 * eta - 0.2853e4 / 0.370e3) * (ci2 ^ 4) + (0.33e2 / 0.74e2 * (eta ^ 5) + 0.109e3 / 0.148e3 * (eta ^ 4) - 0.2221e4 / 0.370e3 * (eta ^ 3) - 0.2507e4 / 0.185e3 * (eta ^ 2) - 0.1177e4 / 0.185e3 * eta + 0.767e3 / 0.740e3) * (ci2 ^ 2) - 0.7e1 / 0.185e3 * (1 + eta) * ((eta ^ 4) + 0.8e1 / 0.7e1 * (eta ^ 3) - 0.145e3 / 0.14e2 * (eta ^ 2) - 0.80e2 / 0.7e1 * eta - 0.17e2 / 0.14e2)) * (eta - 1) * sin((-2 * h + 2 * f)) - 0.80e2 / 0.291e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 5) + 0.101e3 / 0.20e2 * (eta ^ 4) + 0.2867e4 / 0.280e3 * (eta ^ 3) + 0.11843e5 / 0.840e3 * (eta ^ 2) + 0.10747e5 / 0.840e3 * eta + 0.4079e4 / 0.840e3) * (ci2 ^ 6) + (-(eta ^ 5) - 0.2237e4 / 0.420e3 * (eta ^ 4) - 0.9353e4 / 0.840e3 * (eta ^ 3) - 0.13331e5 / 0.840e3 * (eta ^ 2) - 0.12443e5 / 0.840e3 * eta - 0.4807e4 / 0.840e3) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * (eta ^ 5) + 0.1157e4 / 0.840e3 * (eta ^ 4) + 0.1737e4 / 0.560e3 * (eta ^ 3) + 0.8273e4 / 0.1680e4 * (eta ^ 2) + 0.2771e4 / 0.560e3 * eta + 0.1107e4 / 0.560e3) * (ci2 ^ 2) - 0.13e2 / 0.420e3 * ((eta ^ 3) + 0.31e2 / 0.13e2 * (eta ^ 2) + 0.64e2 / 0.13e2 * eta + 0.48e2 / 0.13e2) * (1 + eta)) * sin((4 * g + 2 * h)) - 0.15e2 / 0.679e3 * ((1 + eta) ^ 2) * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * sin((-2 * g - 2 * h + 5 * f)) + 0.76e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) + 0.14e2 / 0.57e2 * (eta ^ 4) - 0.162e3 / 0.19e2 * (eta ^ 3) - 0.376e3 / 0.57e2 * (eta ^ 2) + 0.425e3 / 0.57e2 * eta + 0.206e3 / 0.19e2) * (ci2 ^ 2) - 0.3e1 / 0.19e2 * ((eta ^ 3) + 0.2e1 / 0.9e1 * (eta ^ 2) - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * (1 + eta) * (eta - 1)) * sin((6 * g + 2 * h + 6 * f)) - 0.241e3 / 0.4074e4 * ((0.33207e5 / 0.241e3 + (eta ^ 6) - 0.15536e5 / 0.2169e4 * (eta ^ 5) - 0.47008e5 / 0.723e3 * (eta ^ 3) + 0.51595e5 / 0.2169e4 * (eta ^ 2) + 0.436496e6 / 0.2169e4 * eta - 0.68659e5 / 0.2169e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.33207e5 / 0.241e3 + 0.17088e5 / 0.241e3 * (eta ^ 3) - 0.398944e6 / 0.2169e4 * eta + 0.45971e5 / 0.2169e4 * (eta ^ 4) + 0.6304e4 / 0.2169e4 * (eta ^ 5) - 0.1091e4 / 0.723e3 * (eta ^ 6) + 0.13285e5 / 0.2169e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.2904e4 / 0.241e3 * (eta ^ 3) + 0.50420e5 / 0.2169e4 * eta - 0.2009e4 / 0.4338e4 * (eta ^ 4) + 0.10869e5 / 0.482e3 + 0.388e3 / 0.2169e4 * (eta ^ 5) + 0.769e3 / 0.1446e4 * (eta ^ 6) - 0.47431e5 / 0.4338e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.92e2 / 0.2169e4 * (1 + eta) * eta * ((eta ^ 4) + 0.78e2 / 0.23e2 * (eta ^ 3) + 0.212e3 / 0.23e2 * (eta ^ 2) - 0.422e3 / 0.23e2 * eta - 0.635e3 / 0.23e2)) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * sin((3 * f + 2 * g)) - 0.102e3 / 0.679e3 * (1 + eta) * (((eta ^ 3) + 0.188e3 / 0.153e3 * (eta ^ 2) - 0.587e3 / 0.153e3 * eta - 0.62e2 / 0.17e2) * (ci2 ^ 8) + (-0.116e3 / 0.51e2 * (eta ^ 3) - 0.1318e4 / 0.459e3 * (eta ^ 2) + 0.3928e4 / 0.459e3 * eta + 0.3818e4 / 0.459e3) * (ci2 ^ 6) + (0.274e3 / 0.153e3 * (eta ^ 3) + 0.898e3 / 0.459e3 * (eta ^ 2) - 0.22e2 / 0.3e1 * eta - 0.118e3 / 0.17e2) * (ci2 ^ 4) + (-0.86e2 / 0.153e3 * (eta ^ 3) - 0.149e3 / 0.459e3 * (eta ^ 2) + 0.440e3 / 0.153e3 * eta + 0.1147e4 / 0.459e3) * (ci2 ^ 2) + 0.107e3 / 0.1836e4 * (eta ^ 3) - 0.43e2 / 0.1836e4 * (eta ^ 2) - 0.2269e4 / 0.5508e4 * eta - 0.65e2 / 0.204e3) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((-2 * g - 2 * h + 3 * f)) - 0.100e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos((2 * g + 7 * f)) + 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + 3 * f)) - 0.100e3 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos((4 * g + 2 * h + 7 * f)) + 0.20e2 / 0.2037e4 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sqrt((-eta ^ 2 + 1)) * cos((3 * f - 2 * g)) + ((0.425e3 / 0.291e3 + (eta ^ 6) + 0.4100e4 / 0.873e3 * (eta ^ 5) - 0.80740e5 / 0.6111e4 * eta + 0.59183e5 / 0.6111e4 * (eta ^ 4) - 0.35800e5 / 0.6111e4 * (eta ^ 3) - 0.23069e5 / 0.873e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.850e3 / 0.291e3 - 0.1502e4 / 0.679e3 * (eta ^ 6) - 0.7032e4 / 0.679e3 * (eta ^ 5) + 0.1200e4 / 0.97e2 * (eta ^ 3) + 0.350374e6 / 0.6111e4 * (eta ^ 2) + 0.1832e4 / 0.63e2 * eta - 0.130142e6 / 0.6111e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.1500e4 / 0.679e3 - 0.7040e4 / 0.679e3 * (eta ^ 3) - 0.49712e5 / 0.2037e4 * eta + 0.38684e5 / 0.2037e4 * (eta ^ 4) + 0.18992e5 / 0.2037e4 * (eta ^ 5) + 0.3436e4 / 0.2037e4 * (eta ^ 6) - 0.98204e5 / 0.2037e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.24952e5 / 0.6111e4 * (eta ^ 3) + 0.56668e5 / 0.6111e4 * eta - 0.7027e4 / 0.873e3 * (eta ^ 4) - 0.1525e4 / 0.2037e4 - 0.24436e5 / 0.6111e4 * (eta ^ 5) - 0.1039e4 / 0.2037e4 * (eta ^ 6) + 0.113873e6 / 0.6111e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.3536e4 / 0.6111e4 * (eta ^ 3) - 0.63691e5 / 0.24444e5 * (eta ^ 2) + 0.29891e5 / 0.24444e5 * (eta ^ 4) - 0.7816e4 / 0.6111e4 * eta + 0.715e3 / 0.8148e4 + 0.1255e4 / 0.24444e5 * (eta ^ 6) + 0.3736e4 / 0.6111e4 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * sin(f) - 0.19e2 / 0.97e2 * ((0.10319e5 / 0.1197e4 - 0.6994e4 / 0.1197e4 * eta + (eta ^ 4) - 0.58e2 / 0.399e3 * (eta ^ 3) - 0.268e3 / 0.21e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.20638e5 / 0.1197e4 + 0.212e3 / 0.1197e4 * (eta ^ 3) + 0.32944e5 / 0.1197e4 * (eta ^ 2) + 0.16204e5 / 0.1197e4 * eta - 0.902e3 / 0.399e3 * (eta ^ 4)) * (ci2 ^ 6) + (0.1684e4 / 0.133e3 - 0.1360e4 / 0.1197e4 * (eta ^ 3) - 0.12560e5 / 0.1197e4 * eta + 0.2116e4 / 0.1197e4 * (eta ^ 4) - 0.26648e5 / 0.1197e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.74e2 / 0.63e2 * (eta ^ 3) + 0.3826e4 / 0.1197e4 * eta - 0.659e3 / 0.1197e4 * (eta ^ 4) - 0.691e3 / 0.171e3 + 0.9592e4 / 0.1197e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.128e3 / 0.513e3 * (eta ^ 3) - 0.7409e4 / 0.7182e4 * (eta ^ 2) + 0.815e3 / 0.14364e5 * (eta ^ 4) + 0.715e3 / 0.1596e4 - 0.1280e4 / 0.3591e4 * eta) * (1 + eta) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((3 * f))) / ((1 + eta) ^ 2) / a ^ 4 / (eta ^ 11) -0.891e3 / 0.256e3 * R__e ^ 4 * J ^ 2 * (-0.160e3 / 0.33e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * ((0.12133e5 / 0.720e3 + (eta ^ 6) - 0.25e2 / 0.72e2 * (eta ^ 5) - 0.821e3 / 0.60e2 * (eta ^ 3) - 0.487e3 / 0.120e3 * (eta ^ 2) + 0.1519e4 / 0.72e2 * eta - 0.4891e4 / 0.720e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.13589e5 / 0.720e3 + 0.547e3 / 0.36e2 * (eta ^ 3) - 0.199e3 / 0.8e1 * eta + 0.6107e4 / 0.720e3 * (eta ^ 4) + 0.73e2 / 0.72e2 * (eta ^ 5) - (eta ^ 6) + 0.67e2 / 0.24e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.533e3 / 0.120e3 * (eta ^ 3) + 0.389e3 / 0.48e2 * eta - 0.4133e4 / 0.1440e4 * (eta ^ 4) + 0.7979e4 / 0.1440e4 - 0.421e3 / 0.720e3 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) + 0.13e2 / 0.80e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.7e1 / 0.90e2 * (1 + eta) * ((eta ^ 4) + 0.11e2 / 0.7e1 * (eta ^ 3) + 0.5e1 / 0.7e1 * (eta ^ 2) - 0.22e2 / 0.7e1 * eta - 0.24e2 / 0.7e1)) * cos((2 * g)) - 0.20e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) - 0.4e1 / 0.5e1 * (eta ^ 4) - 0.38e2 / 0.15e2 * (eta ^ 3) + 0.24e2 / 0.5e1 * (eta ^ 2) - 0.29e2 / 0.15e2 * eta - 0.124e3 / 0.15e2) * (ci2 ^ 2) - 0.3e1 / 0.5e1 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 4) + 0.8e1 / 0.3e1 * (eta ^ 3) - (2 * eta ^ 2) - 0.31e2 / 0.15e2 * eta + 0.8e1 / 0.5e1) * cos((-2 * h + 2 * g + 2 * f)) - 0.5e1 / 0.11e2 * ((eta + 0.13e2 / 0.15e2) * (ci2 ^ 4) + (-0.19e2 / 0.15e2 * eta - 0.17e2 / 0.15e2) * (ci2 ^ 2) + 0.31e2 / 0.90e2 * eta + 0.29e2 / 0.90e2) * ((1 + eta) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos((-2 * g - 2 * h + 5 * f)) + 0.8e1 / 0.297e3 * ((eta ^ 5 + 18 * eta ^ 4 + 90 * eta ^ 3 - 42 * eta ^ 2 - 59 * eta - 16) * ci2 ^ 2 - 4 * eta ^ 5 - 3 * eta ^ 4 - 12 * eta ^ 3 - 6 * eta ^ 2 + 25) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((4 * f + 4 * g)) - 0.2240e4 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.163e3 / 0.28e2 * (eta ^ 3) - 0.3e1 / 0.4e1 * (eta ^ 2) + 0.151e3 / 0.28e2 * eta + 0.17e2 / 0.28e2) * (ci2 ^ 6) + (-0.9e1 / 0.7e1 * (eta ^ 5) + 0.193e3 / 0.28e2 * (eta ^ 3) + 0.27e2 / 0.28e2 * (eta ^ 2) - 0.173e3 / 0.28e2 * eta - 0.23e2 / 0.28e2) * (ci2 ^ 4) + (0.19e2 / 0.42e2 * (eta ^ 5) - 0.297e3 / 0.140e3 * (eta ^ 3) - 0.9e1 / 0.28e2 * (eta ^ 2) + 0.251e3 / 0.140e3 * eta + 0.41e2 / 0.140e3) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) - 0.37e2 / 0.14e2 * eta - 0.9e1 / 0.14e2) * (eta - 1) / 0.30e2) * Delta * sin((2 * h)) + 0.2e1 / 0.99e2 * (ci2 ^ 2) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 3) * ((ci2 + 1) ^ 3) * cos((2 * g - 2 * h + 8 * f)) + 0.1600e4 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 3) - 0.33e2 / 0.5e1 * (eta ^ 2) - 0.31e2 / 0.5e1 * eta + 0.61e2 / 0.5e1) * (ci2 ^ 6) + (-(eta ^ 3) / 0.5e1 + 0.39e2 / 0.5e1 * (eta ^ 2) + 0.31e2 / 0.5e1 * eta - 0.71e2 / 0.5e1) * (ci2 ^ 4) + (-0.11e2 / 0.25e2 * (eta ^ 3) - 0.57e2 / 0.25e2 * (eta ^ 2) - 0.31e2 / 0.25e2 * eta + 0.101e3 / 0.25e2) * (ci2 ^ 2) + 0.2e1 / 0.25e2 * (eta ^ 3) + 0.3e1 / 0.25e2 * (eta ^ 2) - 0.1e1 / 0.5e1) * sin((2 * g + 2 * f)) + 0.160e3 / 0.11e2 * ((1 + eta) ^ 3) * eta * (((eta ^ 2) + 0.308e3 / 0.27e2) * (ci2 ^ 8) + (-0.20e2 / 0.9e1 * (eta ^ 2) - 0.224e3 / 0.9e1) * (ci2 ^ 6) + (0.17e2 / 0.15e2 * (eta ^ 2) + 0.188e3 / 0.9e1) * (ci2 ^ 4) + (0.2e1 / 0.15e2 * (eta ^ 2) - 0.8e1) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 + 0.10e2 / 0.9e1) * Delta * (eta - 1) * sin((2 * g + 2 * h)) - 0.1480e4 / 0.297e3 * (((eta ^ 5) + 0.67e2 / 0.74e2 * (eta ^ 4) - 0.3267e4 / 0.185e3 * (eta ^ 3) - 0.6946e4 / 0.185e3 * (eta ^ 2) - 0.2192e4 / 0.185e3 * eta + 0.3297e4 / 0.370e3) * (ci2 ^ 6) + (-0.229e3 / 0.185e3 * (eta ^ 5) - 0.559e3 / 0.370e3 * (eta ^ 4) + 0.3753e4 / 0.185e3 * (eta ^ 3) + 0.8252e4 / 0.185e3 * (eta ^ 2) + 0.3166e4 / 0.185e3 * eta - 0.2853e4 / 0.370e3) * (ci2 ^ 4) + (0.33e2 / 0.74e2 * (eta ^ 5) + 0.109e3 / 0.148e3 * (eta ^ 4) - 0.2221e4 / 0.370e3 * (eta ^ 3) - 0.2507e4 / 0.185e3 * (eta ^ 2) - 0.1177e4 / 0.185e3 * eta + 0.767e3 / 0.740e3) * (ci2 ^ 2) - 0.7e1 / 0.185e3 * (1 + eta) * ((eta ^ 4) + 0.8e1 / 0.7e1 * (eta ^ 3) - 0.145e3 / 0.14e2 * (eta ^ 2) - 0.80e2 / 0.7e1 * eta - 0.17e2 / 0.14e2)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((-2 * h + 2 * f)) + 0.259e3 / 0.198e3 * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) + 0.16897e5 / 0.2331e4 * (eta ^ 4) + 0.13522e5 / 0.777e3 * (eta ^ 3) + 0.5738e4 / 0.259e3 * (eta ^ 2) + 0.17887e5 / 0.2331e4 * eta - 0.2809e4 / 0.777e3) * (ci2 ^ 6) + (-0.593e3 / 0.777e3 * (eta ^ 5) - 0.13721e5 / 0.2331e4 * (eta ^ 4) - 0.11474e5 / 0.777e3 * (eta ^ 3) - 0.7530e4 / 0.259e3 * (eta ^ 2) - 0.61319e5 / 0.2331e4 * eta - 0.5119e4 / 0.777e3) * (ci2 ^ 4) + (0.23e2 / 0.666e3 * (eta ^ 5) + 0.3851e4 / 0.4662e4 * (eta ^ 4) + 0.1775e4 / 0.777e3 * (eta ^ 3) + 0.1079e4 / 0.111e3 * (eta ^ 2) + 0.70709e5 / 0.4662e4 * eta + 0.10709e5 / 0.1554e4) * (ci2 ^ 2) + 0.46e2 / 0.2331e4 * (1 + eta) * ((eta ^ 4) + 0.2e1 / 0.23e2 * (eta ^ 3) - 0.26e2 / 0.23e2 * (eta ^ 2) - 0.802e3 / 0.23e2 * eta - 0.909e3 / 0.23e2)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + 3 * f)) - 0.8080e4 / 0.99e2 * (((eta ^ 3) + 0.63e2 / 0.101e3 * (eta ^ 2) - 0.117e3 / 0.101e3 * eta - 0.115e3 / 0.101e3) * (ci2 ^ 6) + (-0.107e3 / 0.101e3 * (eta ^ 3) - 0.69e2 / 0.101e3 * (eta ^ 2) + 0.123e3 / 0.101e3 * eta + 0.121e3 / 0.101e3) * (ci2 ^ 4) + (0.25e2 / 0.101e3 * (eta ^ 3) + 0.87e2 / 0.505e3 * (eta ^ 2) - 0.141e3 / 0.505e3 * eta - 0.139e3 / 0.505e3) * (ci2 ^ 2) - 0.3e1 / 0.505e3 * (eta - 1) * ((1 + eta) ^ 2)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sin((2 * h + 4 * f + 4 * g)) + 0.802e3 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 5) + 0.2273e4 / 0.401e3 * (eta ^ 4) + 0.4304e4 / 0.401e3 * (eta ^ 3) - 0.15488e5 / 0.3609e4 * (eta ^ 2) - 0.76769e5 / 0.3609e4 * eta - 0.24203e5 / 0.1203e4) * (ci2 ^ 6) + (-0.1265e4 / 0.1203e4 * (eta ^ 5) - 0.2619e4 / 0.401e3 * (eta ^ 4) - 0.15016e5 / 0.1203e4 * (eta ^ 3) + 0.16528e5 / 0.3609e4 * (eta ^ 2) + 0.85123e5 / 0.3609e4 * eta + 0.26185e5 / 0.1203e4) * (ci2 ^ 4) + (0.551e3 / 0.2406e4 * (eta ^ 5) + 0.3403e4 / 0.2406e4 * (eta ^ 4) + 0.1155e4 / 0.401e3 * (eta ^ 3) - 0.1925e4 / 0.3609e4 * (eta ^ 2) - 0.34123e5 / 0.7218e4 * eta - 0.10829e5 / 0.2406e4) * (ci2 ^ 2) - 0.31e2 / 0.7218e4 * (eta ^ 5) - 0.433e3 / 0.7218e4 * (eta ^ 4) - 0.154e3 / 0.1203e4 * (eta ^ 3) + 0.34e2 / 0.3609e4 * (eta ^ 2) + 0.1163e4 / 0.7218e4 * eta + 0.101e3 / 0.802e3) * cos((2 * h + 3 * f + 4 * g)) - 0.76e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 5) + 0.14e2 / 0.57e2 * (eta ^ 4) - 0.162e3 / 0.19e2 * (eta ^ 3) - 0.376e3 / 0.57e2 * (eta ^ 2) + 0.425e3 / 0.57e2 * eta + 0.206e3 / 0.19e2) * (ci2 ^ 2) - 0.3e1 / 0.19e2 * ((eta ^ 3) + 0.2e1 / 0.9e1 * (eta ^ 2) - 0.31e2 / 0.9e1 * eta - 0.32e2 / 0.9e1) * (1 + eta) * (eta - 1)) * cos((6 * g + 2 * h + 6 * f)) - 0.5800e4 / 0.33e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) + 0.95e2 / 0.87e2 * eta + 0.8e1 / 0.15e2) * (ci2 ^ 6) + (-0.101e3 / 0.87e2 * (eta ^ 2) - 0.19e2 / 0.15e2 * eta - 0.262e3 / 0.435e3) * (ci2 ^ 4) + (0.143e3 / 0.435e3 * (eta ^ 2) + 0.779e3 / 0.2175e4 * eta + 0.352e3 / 0.2175e4) * (ci2 ^ 2) - 0.7e1 / 0.435e3 * (eta ^ 2) - 0.38e2 / 0.2175e4 * eta - 0.1e1 / 0.145e3) * sin((4 * g + 2 * h + f)) + 0.580e3 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) - 0.24e2 / 0.29e2 * eta - 0.197e3 / 0.29e2) * (ci2 ^ 6) + (-(eta ^ 2) + 0.32e2 / 0.29e2 * eta + 0.205e3 / 0.29e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.5e1 - 0.56e2 / 0.145e3 * eta - 0.229e3 / 0.145e3) * (ci2 ^ 2) + 0.4e1 / 0.145e3 * eta + 0.4e1 / 0.145e3) * sqrt((-eta ^ 2 + 1)) * sin((5 * f + 2 * g)) - 0.265e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 2) - 0.264e3 / 0.265e3 * eta - 0.1561e4 / 0.265e3) * (ci2 ^ 2) + 0.88e2 / 0.265e3 * eta + 0.88e2 / 0.265e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((4 * g + 7 * f)) + 0.10e2 / 0.33e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.23e2 / 0.45e2 * eta - 0.26e2 / 0.9e1) * (ci2 ^ 2) - 0.2e1 / 0.45e2 * (eta ^ 2) - 0.4e1 / 0.9e1 * eta - 0.2e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + 5 * f + 2 * g)) + 0.6040e4 / 0.297e3 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.91e2 / 0.151e3 * eta - 0.276e3 / 0.151e3) * (ci2 ^ 6) + (-0.197e3 / 0.151e3 * (eta ^ 2) - 0.119e3 / 0.151e3 * eta + 0.366e3 / 0.151e3) * (ci2 ^ 4) + (0.67e2 / 0.151e3 * (eta ^ 2) + 0.203e3 / 0.755e3 * eta - 0.636e3 / 0.755e3) * (ci2 ^ 2) - 0.23e2 / 0.755e3 * (eta ^ 2) - 0.14e2 / 0.755e3 * eta + 0.9e1 / 0.151e3) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + 3 * f)) - 0.500e3 / 0.99e2 * ((ci2 ^ 6) - 0.29e2 / 0.25e2 * (ci2 ^ 4) + 0.41e2 / 0.125e3 * (ci2 ^ 2) - 0.2e1 / 0.125e3) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((-4 * g - 2 * h + f)) - 0.80e2 / 0.9e1 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sin((2 * h + 6 * f + 4 * g)) - 0.80e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sin((-2 * g + 2 * f)) + 0.167e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * (((eta ^ 2) - 0.312e3 / 0.167e3 * eta - 0.503e3 / 0.167e3) * (ci2 ^ 2) + 0.104e3 / 0.167e3 * eta + 0.104e3 / 0.167e3) * sqrt((-eta ^ 2 + 1)) * cos((4 * g + f)) + 0.80e2 / 0.9e1 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sin((6 * f + 2 * g)) + 0.403e3 / 0.297e3 * ((ci2 ^ 2) - 0.4e1 / 0.31e2) * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((6 * g + 2 * h + f)) + 0.260e3 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * ((ci2 ^ 6) - 0.17e2 / 0.13e2 * (ci2 ^ 4) + 0.29e2 / 0.65e2 * (ci2 ^ 2) - 0.2e1 / 0.65e2) * sin((-2 * h + 5 * f)) - 0.340e3 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * (0.4e1 / 0.85e2 + (eta - 0.41e2 / 0.17e2) * (ci2 ^ 6) + (-eta + 0.49e2 / 0.17e2) * (ci2 ^ 4) + (eta / 0.5e1 - 0.73e2 / 0.85e2) * (ci2 ^ 2)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((-2 * g + f)) - 0.29e2 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * ((ci2 ^ 2) - 0.44e2 / 0.29e2) * cos((2 * g - 2 * h + 7 * f)) + 0.80e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sin((2 * h + 2 * f)) - 0.2054e4 / 0.297e3 * (((eta ^ 2) + 0.1305e4 / 0.1027e4 * eta + 0.306e3 / 0.1027e4) * (ci2 ^ 2) - 0.110e3 / 0.1027e4 * (eta ^ 2) - 0.140e3 / 0.1027e4 * eta - 0.22e2 / 0.1027e4) * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((6 * g + 2 * h + 3 * f)) + 0.20e2 / 0.297e3 * ((1 + eta) ^ 3) * ((eta - 1) ^ 3) * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * cos((6 * f)) - 0.20e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((3 * f - 2 * g)) + 0.20e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 3 * f)) + 0.5840e4 / 0.99e2 * (((eta ^ 2) + 0.34e2 / 0.73e2 * eta - 0.59e2 / 0.73e2) * (ci2 ^ 6) + (-0.97e2 / 0.73e2 * (eta ^ 2) - 0.46e2 / 0.73e2 * eta + 0.79e2 / 0.73e2) * (ci2 ^ 4) + (0.169e3 / 0.365e3 * (eta ^ 2) + 0.82e2 / 0.365e3 * eta - 0.139e3 / 0.365e3) * (ci2 ^ 2) - 0.12e2 / 0.365e3 * (eta ^ 2) - 0.6e1 / 0.365e3 * eta + 0.2e1 / 0.73e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin((-2 * h + 2 * f)) + 0.316e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.136e3 / 0.79e2 * (eta ^ 3) + 0.190e3 / 0.79e2 * (eta ^ 2) - 0.144e3 / 0.79e2 * eta - 0.341e3 / 0.79e2) * (ci2 ^ 2) - 0.40e2 / 0.79e2 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.10e2 * (eta ^ 2) - 0.6e1 / 0.5e1)) * (eta - 1) * cos((2 * f + 4 * g)) + 0.31e2 / 0.22e2 * (1 + eta) * (((eta ^ 4) + 0.808e3 / 0.93e2 * (eta ^ 3) - 0.338e3 / 0.279e3 * (eta ^ 2) - 0.1112e4 / 0.31e2 * eta - 0.2503e4 / 0.93e2) * (ci2 ^ 6) + (-0.343e3 / 0.279e3 * (eta ^ 4) - 0.2512e4 / 0.279e3 * (eta ^ 3) + 0.38e2 / 0.9e1 * (eta ^ 2) + 0.3920e4 / 0.93e2 * eta + 0.933e3 / 0.31e2) * (ci2 ^ 4) + (0.631e3 / 0.1674e4 * (eta ^ 4) + 0.634e3 / 0.279e3 * (eta ^ 3) - 0.2231e4 / 0.837e3 * (eta ^ 2) - 0.410e3 / 0.31e2 * eta - 0.14489e5 / 0.1674e4) * (ci2 ^ 2) - 0.16e2 / 0.837e3 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.8e1 * (eta ^ 2) - (20 * eta) - 0.163e3 / 0.8e1)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((-2 * g + f)) - 0.217e3 / 0.198e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.3480e4 / 0.217e3 * (eta ^ 3) + 0.4546e4 / 0.217e3 * (eta ^ 2) - 0.20920e5 / 0.217e3 * eta - 0.853e3 / 0.7e1) * (ci2 ^ 6) + (-0.281e3 / 0.217e3 * (eta ^ 4) - 0.3616e4 / 0.217e3 * (eta ^ 3) - 0.3690e4 / 0.217e3 * (eta ^ 2) + 0.24000e5 / 0.217e3 * eta + 0.4085e4 / 0.31e2) * (ci2 ^ 4) + (0.569e3 / 0.1302e4 * (eta ^ 4) + 0.718e3 / 0.217e3 * (eta ^ 3) + 0.95e2 / 0.651e3 * (eta ^ 2) - 0.18650e5 / 0.651e3 * eta - 0.37991e5 / 0.1302e4) * (ci2 ^ 2) - 0.16e2 / 0.651e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.8e1 * (eta ^ 2) - (16 * eta) - 0.281e3 / 0.8e1)) * cos((5 * f + 2 * g)) + 0.239e3 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 3) + 0.1691e4 / 0.239e3 * (eta ^ 2) + 0.2725e4 / 0.239e3 * eta + 0.1265e4 / 0.239e3) * (ci2 ^ 6) + (-0.293e3 / 0.239e3 * (eta ^ 3) - 0.2013e4 / 0.239e3 * (eta ^ 2) - 0.3215e4 / 0.239e3 * eta - 0.1487e4 / 0.239e3) * (ci2 ^ 4) + (0.167e3 / 0.478e3 * (eta ^ 3) + 0.1265e4 / 0.478e3 * (eta ^ 2) + 0.6179e4 / 0.1434e4 * eta + 0.959e3 / 0.478e3) * (ci2 ^ 2) - 0.9e1 / 0.478e3 * (1 + eta) * ((eta ^ 2) + 0.62e2 / 0.9e1 * eta + 0.163e3 / 0.27e2)) * cos((-4 * g - 2 * h + f)) + 0.125e3 / 0.198e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 2) - 0.1176e4 / 0.125e3 * eta - 0.3137e4 / 0.125e3) * (ci2 ^ 6) + (-(eta ^ 2) + 0.1216e4 / 0.125e3 * eta + 0.3177e4 / 0.125e3) * (ci2 ^ 4) + ((eta ^ 2) / 0.6e1 - 0.754e3 / 0.375e3 * eta - 0.3469e4 / 0.750e3) * (ci2 ^ 2) + 0.2e1 / 0.75e2 * eta + 0.2e1 / 0.75e2) * cos((2 * g + 7 * f)) + (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.397e3 / 0.99e2 * (eta ^ 2) - 0.1567e4 / 0.99e2 * eta - 0.85e2 / 0.9e1) * (ci2 ^ 6) + (-0.43e2 / 0.33e2 * (eta ^ 3) + 0.595e3 / 0.99e2 * (eta ^ 2) + 0.2333e4 / 0.99e2 * eta + 0.491e3 / 0.33e2) * (ci2 ^ 4) + (0.257e3 / 0.594e3 * (eta ^ 3) - 0.463e3 / 0.198e3 * (eta ^ 2) - 0.5417e4 / 0.594e3 * eta - 0.3635e4 / 0.594e3) * (ci2 ^ 2) - 0.5e1 / 0.198e3 * ((eta ^ 2) - 0.42e2 / 0.5e1 * eta - 0.281e3 / 0.15e2) * (1 + eta)) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + 5 * f)) + 0.358e3 / 0.297e3 * (ci2 ^ 2) * (1 + eta) * (((eta ^ 4) + 0.268e3 / 0.179e3 * (eta ^ 3) + 0.370e3 / 0.179e3 * (eta ^ 2) - 0.540e3 / 0.179e3 * eta - 0.1021e4 / 0.179e3) * (ci2 ^ 2) - 0.64e2 / 0.179e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.16e2 * (eta ^ 2) - 0.45e2 / 0.16e2)) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((5 * f + 4 * g)) + 0.5e1 / 0.22e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta + 0.7e1 / 0.9e1) * (ci2 ^ 6) + (-0.13e2 / 0.9e1 * eta - 0.11e2 / 0.9e1) * (ci2 ^ 4) + (0.29e2 / 0.54e2 * eta + 0.1e1 / 0.2e1) * (ci2 ^ 2) - eta / 0.27e2 - 0.1e1 / 0.27e2) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + 7 * f)) - 0.13e2 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 2) + 0.146e3 / 0.13e2 * eta + 0.121e3 / 0.13e2) * (ci2 ^ 6) + (-0.15e2 / 0.13e2 * (eta ^ 2) - 0.146e3 / 0.13e2 * eta - 0.119e3 / 0.13e2) * (ci2 ^ 4) + (0.23e2 / 0.78e2 * (eta ^ 2) + 0.8e1 / 0.3e1 * eta + 0.173e3 / 0.78e2) * (ci2 ^ 2) - (eta ^ 2) / 0.78e2 + 0.1e1 / 0.78e2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + 3 * f)) - 0.1600e4 / 0.99e2 * (((eta ^ 4) + (eta ^ 3) - 0.13e2 / 0.10e2 * (eta ^ 2) + 0.9e1 / 0.5e1 * eta + 0.29e2 / 0.10e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 4) - 0.7e1 / 0.5e1 * (eta ^ 3) + 0.13e2 / 0.10e2 * (eta ^ 2) - 0.12e2 / 0.5e1 * eta - 0.7e1 / 0.2e1) * (ci2 ^ 4) + (0.27e2 / 0.50e2 * (eta ^ 4) + 0.27e2 / 0.50e2 * (eta ^ 3) - 0.13e2 / 0.50e2 * (eta ^ 2) + 0.21e2 / 0.25e2 * eta + 0.53e2 / 0.50e2) * (ci2 ^ 2) - 0.7e1 / 0.150e3 * ((eta ^ 3) + 0.9e1 / 0.7e1) * (1 + eta)) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin((2 * g)) + 0.680e3 / 0.99e2 * (((eta ^ 3) + 0.8e1 / 0.17e2 * (eta ^ 2) - 0.21e2 / 0.17e2 * eta - 0.8e1 / 0.17e2) * (ci2 ^ 6) + (-0.19e2 / 0.17e2 * (eta ^ 3) - 0.10e2 / 0.17e2 * (eta ^ 2) + 0.23e2 / 0.17e2 * eta + 0.10e2 / 0.17e2) * (ci2 ^ 4) + (0.5e1 / 0.17e2 * (eta ^ 3) + 0.16e2 / 0.85e2 * (eta ^ 2) - 0.29e2 / 0.85e2 * eta - 0.16e2 / 0.85e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.85e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * sin((2 * h + f)) + 0.13e2 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((2 * h - 2 * g + f)) - (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + 5 * f)) / 0.66e2 + (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos((5 * f - 2 * g)) / 0.66e2 + 0.35e2 / 0.198e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos((2 * g + 9 * f)) - 0.35e2 / 0.198e3 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((4 * g + 2 * h + 9 * f)) - 0.4e1 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((eta ^ 2 + eta) * ci2 ^ 2 + eta ^ 2 - eta - 32) * cos((2 * g - 2 * h + 6 * f)) + 0.7e1 / 0.66e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.19e2 / 0.21e2) * (ci2 ^ 6) + (-0.25e2 / 0.21e2 * eta - 0.23e2 / 0.21e2) * (ci2 ^ 4) + (0.41e2 / 0.126e3 * eta + 0.13e2 / 0.42e2) * (ci2 ^ 2) - eta / 0.63e2 - 0.1e1 / 0.63e2) * sqrt((-eta ^ 2 + 1)) * cos((-4 * g - 2 * h + 3 * f)) - 0.20e2 / 0.99e2 * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * cos((4 * f - 2 * g)) + 0.38e2 / 0.297e3 * (((eta ^ 3) + 0.9e1 / 0.19e2 * (eta ^ 2) - 0.25e2 / 0.19e2 * eta + 0.15e2 / 0.19e2) * (ci2 ^ 2) - 0.5e1 / 0.19e2 * (eta - 1) * ((1 + eta) ^ 2)) * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((2 * g - 2 * h)) - 0.52e2 / 0.99e2 * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((4 * g + 2 * h + 8 * f)) + 0.1360e4 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) + 0.77e2 / 0.68e2 * eta + 0.217e3 / 0.340e3) * (ci2 ^ 2) - 0.49e2 / 0.340e3 * (eta ^ 2) - 0.11e2 / 0.68e2 * eta - 0.6e1 / 0.85e2) * cos((6 * g + 2 * h + 2 * f)) + 0.1520e4 / 0.99e2 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((ci2 ^ 6) - 0.25e2 / 0.19e2 * (ci2 ^ 4) + 0.43e2 / 0.95e2 * (ci2 ^ 2) - 0.3e1 / 0.95e2) * ((eta - 1) ^ 2) * sin((-2 * h + 4 * f)) + 0.4e1 / 0.33e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * (((eta ^ 2) - eta - 0.146e3 / 0.9e1) * (ci2 ^ 2) + eta / 0.3e1 + 0.1e1 / 0.3e1) * cos((8 * f + 4 * g)) - 0.125e3 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((9 * f + 4 * g)) - 0.28e2 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (((eta ^ 2) - 0.15e2 / 0.7e1 * eta - 0.10e2 / 0.7e1) * (ci2 ^ 2) + 0.5e1 / 0.7e1 * eta + 0.5e1 / 0.7e1) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * cos((4 * g)) + 0.280e3 / 0.297e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) - 0.188e3 / 0.7e1 * (eta ^ 3) - 0.858e3 / 0.7e1 * (eta ^ 2) + 0.540e3 / 0.7e1 * eta + 0.1371e4 / 0.7e1) * (ci2 ^ 6) + (0.25e2 / 0.7e1 * (eta ^ 4) + 0.256e3 / 0.7e1 * (eta ^ 3) + 0.894e3 / 0.7e1 * (eta ^ 2) - 0.720e3 / 0.7e1 * eta - 0.1551e4 / 0.7e1) * (ci2 ^ 4) + (-0.121e3 / 0.35e2 * (eta ^ 4) - 0.92e2 / 0.7e1 * (eta ^ 3) - 0.1002e4 / 0.35e2 * (eta ^ 2) + (36 * eta) + 0.2091e4 / 0.35e2) * (ci2 ^ 2) + 0.16e2 / 0.35e2 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.8e1 * (eta ^ 2) - 0.45e2 / 0.8e1)) * Delta * sqrt((-eta ^ 2 + 1)) * sin((3 * f + 2 * g)) + 0.734e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.250e3 / 0.367e3 * (eta ^ 2) - 0.663e3 / 0.367e3 * eta - 0.766e3 / 0.367e3) * (ci2 ^ 2) - 0.22e2 / 0.367e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * cos((6 * g + 2 * h + 7 * f)) - 0.34e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * (((eta ^ 3) + 0.11e2 / 0.17e2 * (eta ^ 2) - 0.277e3 / 0.51e2 * eta - 0.17e2 / 0.3e1) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.17e2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((6 * g + 2 * h + 8 * f)) - 0.8240e4 / 0.33e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * (((eta ^ 2) + 0.134e3 / 0.103e3 * eta + 0.185e3 / 0.309e3) * (ci2 ^ 6) + (-0.349e3 / 0.309e3 * (eta ^ 2) - 0.454e3 / 0.309e3 * eta - 0.205e3 / 0.309e3) * (ci2 ^ 4) + (0.469e3 / 0.1545e4 * (eta ^ 2) + 0.122e3 / 0.309e3 * eta + 0.53e2 / 0.309e3) * (ci2 ^ 2) - 0.4e1 / 0.309e3 * (eta ^ 2) - 0.26e2 / 0.1545e4 * eta - 0.2e1 / 0.309e3) * sin((2 * h + 2 * f + 4 * g)) - 0.7600e4 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.47e2 / 0.38e2 * (eta ^ 3) - 0.1231e4 / 0.570e3 * (eta ^ 2) - 0.2293e4 / 0.570e3 * eta - 0.73e2 / 0.38e2) * (ci2 ^ 6) + (-0.108e3 / 0.95e2 * (eta ^ 4) - 0.267e3 / 0.190e3 * (eta ^ 3) + 0.1331e4 / 0.570e3 * (eta ^ 2) + 0.2501e4 / 0.570e3 * eta + 0.79e2 / 0.38e2) * (ci2 ^ 4) + (0.147e3 / 0.475e3 * (eta ^ 4) + 0.363e3 / 0.950e3 * (eta ^ 3) - 0.1631e4 / 0.2850e4 * (eta ^ 2) - 0.125e3 / 0.114e3 * eta - 0.97e2 / 0.190e3) * (ci2 ^ 2) - 0.13e2 / 0.950e3 * ((eta ^ 3) + 0.3e1 / 0.13e2 * (eta ^ 2) - 0.59e2 / 0.39e2 * eta - 0.15e2 / 0.13e2) * (1 + eta)) * sin((2 * h + 3 * f + 4 * g)) + 0.20e2 / 0.99e2 * ((eta + 0.1e1 / 0.2e1) * (ci2 ^ 4) + (-eta - 0.1e1 / 0.2e1) * (ci2 ^ 2) + 0.7e1 / 0.30e2 * eta + 0.3e1 / 0.20e2) * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((2 * h + 4 * f)) - 0.40e2 / 0.3e1 * ((1 + eta) ^ 2) * (((eta ^ 3) + 0.20e2 / 0.33e2 * (eta ^ 2) - 0.31e2 / 0.11e2 * eta - 0.92e2 / 0.33e2) * (ci2 ^ 6) + (-0.35e2 / 0.33e2 * (eta ^ 3) - 0.2e1 / 0.3e1 * (eta ^ 2) + 0.95e2 / 0.33e2 * eta + 0.94e2 / 0.33e2) * (ci2 ^ 4) + (0.41e2 / 0.165e3 * (eta ^ 3) + 0.28e2 / 0.165e3 * (eta ^ 2) - 0.101e3 / 0.165e3 * eta - 0.20e2 / 0.33e2) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.165e3) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * sin((2 * h + 5 * f + 4 * g)) + 0.3680e4 / 0.99e2 * (((eta ^ 2) - 0.18e2 / 0.23e2 * eta - 0.67e2 / 0.23e2) * (ci2 ^ 6) + (-(eta ^ 2) + 0.24e2 / 0.23e2 * eta + 0.73e2 / 0.23e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.5e1 - 0.42e2 / 0.115e3 * eta - 0.91e2 / 0.115e3) * (ci2 ^ 2) + 0.3e1 / 0.115e3 * eta + 0.3e1 / 0.115e3) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * Delta * (eta - 1) * sin((2 * g + 4 * f)) - 0.8e1 / 0.33e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) + 0.16e2 / 0.9e1 * (eta ^ 3) + 0.92e2 / 0.9e1 * (eta ^ 2) - 0.32e2 / 0.3e1 * eta - 0.103e3 / 0.3e1) * (ci2 ^ 2) - 0.4e1 / 0.9e1 * (1 + eta) * ((eta ^ 3) + (eta ^ 2) / 0.2e1 - 0.8e1)) * (eta - 1) * cos((6 * f + 4 * g)) + 0.52e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * ((eta + 0.127e3 / 0.26e2) * (ci2 ^ 4) + (-eta - 0.127e3 / 0.26e2) * (ci2 ^ 2) + 0.5e1 / 0.26e2 * eta + 0.131e3 / 0.156e3) * cos((8 * f + 2 * g)) + 0.512e3 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 4) + 0.155e3 / 0.128e3 * (eta ^ 3) - 0.121e3 / 0.128e3 * (eta ^ 2) - 0.127e3 / 0.128e3 * eta + 0.205e3 / 0.128e3) * (ci2 ^ 2) - 0.7e1 / 0.64e2 * (eta ^ 4) - 0.17e2 / 0.128e3 * (eta ^ 3) - 0.7e1 / 0.128e3 * (eta ^ 2) - 0.13e2 / 0.128e3 * eta - 0.25e2 / 0.128e3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((6 * g + 2 * h + 4 * f)) + 0.56e2 / 0.27e2 * (((eta ^ 4) + 0.419e3 / 0.308e3 * (eta ^ 3) - 0.417e3 / 0.308e3 * (eta ^ 2) - 0.1479e4 / 0.308e3 * eta - 0.1151e4 / 0.308e3) * (ci2 ^ 2) - 0.31e2 / 0.154e3 * (1 + eta) * ((eta ^ 3) + 0.9e1 / 0.31e2 * (eta ^ 2) - 0.35e2 / 0.31e2 * eta - 0.45e2 / 0.31e2)) * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((6 * g + 2 * h + 5 * f)) - 0.86e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 3) + 0.38e2 / 0.129e3 * (eta ^ 2) - 0.99e2 / 0.43e2 * eta - 0.50e2 / 0.129e3) * (ci2 ^ 2) - 0.26e2 / 0.129e3 * (eta - 1) * ((1 + eta) ^ 2)) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + f + 2 * g)) - 0.13e2 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 3) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((-4 * g + f)) + 0.125e3 / 0.297e3 * (ci2 ^ 4) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((6 * g + 2 * h + 9 * f)) - 0.172e3 / 0.11e2 * ((-0.2030e4 / 0.387e3 + (eta ^ 5) - 0.17900e5 / 0.1161e4 * eta + 0.4195e4 / 0.1161e4 * (eta ^ 4) + 0.7663e4 / 0.1161e4 * (eta ^ 3) - 0.10213e5 / 0.1161e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.12992e5 / 0.1161e4 - 0.284e3 / 0.129e3 * (eta ^ 5) - 0.5570e4 / 0.387e3 * (eta ^ 3) + 0.21614e5 / 0.1161e4 * (eta ^ 2) + 0.12766e5 / 0.387e3 * eta - 0.3074e4 / 0.387e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1172e4 / 0.129e3 + 0.1628e4 / 0.129e3 * (eta ^ 3) - 0.10618e5 / 0.387e3 * eta + 0.324e3 / 0.43e2 * (eta ^ 4) + 0.646e3 / 0.387e3 * (eta ^ 5) - 0.2008e4 / 0.129e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.673e3 / 0.129e3 * (eta ^ 3) + 0.12179e5 / 0.1161e4 * eta - 0.449e3 / 0.129e3 * (eta ^ 4) + 0.1288e4 / 0.387e3 - 0.194e3 / 0.387e3 * (eta ^ 5) + 0.2351e4 / 0.387e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.890e3 / 0.1161e4 * (eta ^ 3) - 0.328e3 / 0.387e3 * (eta ^ 2) + 0.857e3 / 0.1548e4 * (eta ^ 4) - 0.2027e4 / 0.4644e4 - 0.2219e4 / 0.1548e4 * eta + 0.233e3 / 0.4644e4 * (eta ^ 5)) * (1 + eta) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + f + 2 * g)) + 0.100e3 / 0.99e2 * (1 + eta) * (eta - 1) * ((-0.488e3 / 0.5e1 + (eta ^ 5) - 0.411e3 / 0.5e1 * eta - 0.96e2 / 0.25e2 * (eta ^ 4) + 0.1114e4 / 0.75e2 * (eta ^ 3) + 0.2488e4 / 0.75e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.3136e4 / 0.15e2 - (2 * eta ^ 5) - 0.764e3 / 0.25e2 * (eta ^ 3) - 0.952e3 / 0.15e2 * (eta ^ 2) + 0.2738e4 / 0.15e2 * eta + 0.616e3 / 0.75e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.841e3 / 0.5e1 + 0.154e3 / 0.5e1 * (eta ^ 3) - 0.797e3 / 0.5e1 * eta - 0.149e3 / 0.25e2 * (eta ^ 4) + 0.3e1 / 0.5e1 * (eta ^ 5) + 0.218e3 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1172e4 / 0.75e2 * (eta ^ 3) + 0.322e3 / 0.5e1 * eta + 0.37e2 / 0.25e2 * (eta ^ 4) + 0.301e3 / 0.5e1 + 0.2e1 / 0.5e1 * (eta ^ 5) - 0.178e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.37e2 / 0.15e2 * (eta ^ 3) + 0.109e3 / 0.150e3 * (eta ^ 2) - 0.3e1 / 0.100e3 * (eta ^ 4) - 0.93e2 / 0.10e2 * eta - (eta ^ 5) / 0.10e2 - 0.461e3 / 0.60e2) * cos((2 * f)) + 0.380e3 / 0.99e2 * (1 + eta) * ((eta - 1) ^ 2) * ((0.696e3 / 0.95e2 + 0.2297e4 / 0.285e3 * eta + (eta ^ 4) - 0.949e3 / 0.285e3 * (eta ^ 3) - 0.1097e4 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.4696e4 / 0.285e3 + 0.428e3 / 0.57e2 * (eta ^ 3) + 0.136e3 / 0.15e2 * (eta ^ 2) - 0.5036e4 / 0.285e3 * eta - 0.128e3 / 0.57e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.1319e4 / 0.95e2 - 0.698e3 / 0.95e2 * (eta ^ 3) + 0.1434e4 / 0.95e2 * eta + 0.113e3 / 0.95e2 * (eta ^ 4) - 0.728e3 / 0.95e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.1013e4 / 0.285e3 * (eta ^ 3) - 0.341e3 / 0.57e2 * eta + 0.2e1 / 0.19e2 * (eta ^ 4) - 0.493e3 / 0.95e2 + 0.781e3 / 0.285e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.691e3 / 0.1140e4 * (eta ^ 3) - 0.389e3 / 0.1140e4 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.53e2 / 0.76e2 + 0.991e3 / 0.1140e4 * eta) * cos((-2 * g - 2 * h + 2 * f)) + 0.80e2 / 0.297e3 * ((1 + eta) ^ 2) * ((eta - 1) ^ 3) * (((eta ^ 2) - 0.239e3 / 0.20e2 * eta - 0.223e3 / 0.20e2) * (ci2 ^ 8) + (-0.9e1 / 0.4e1 * (eta ^ 2) + (27 * eta) + 0.513e3 / 0.20e2) * (ci2 ^ 6) + (0.6e1 / 0.5e1 * (eta ^ 2) - 0.111e3 / 0.5e1 * eta - 0.21e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.10e2 + 0.157e3 / 0.20e2 * eta + 0.143e3 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.10e2 - 0.79e2 / 0.80e2 * eta - 0.67e2 / 0.80e2) * cos((-2 * g - 2 * h + 4 * f)) - 0.400e3 / 0.297e3 * ((0.2747e4 / 0.50e2 + (eta ^ 6) + 0.23e2 / 0.5e1 * (eta ^ 5) + 0.6159e4 / 0.50e2 * eta + 0.949e3 / 0.50e2 * (eta ^ 4) + 0.2873e4 / 0.50e2 * (eta ^ 3) + 0.2834e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.5963e4 / 0.50e2 - (2 * eta ^ 6) - 0.48e2 / 0.5e1 * (eta ^ 5) - 0.2978e4 / 0.25e2 * (eta ^ 3) - 0.5918e4 / 0.25e2 * (eta ^ 2) - 0.6556e4 / 0.25e2 * eta - 0.1953e4 / 0.50e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.99e2 + 0.4519e4 / 0.50e2 * (eta ^ 3) + 0.10849e5 / 0.50e2 * eta + 0.592e3 / 0.25e2 * (eta ^ 4) + 0.93e2 / 0.25e2 * (eta ^ 5) + 0.3e1 / 0.5e1 * (eta ^ 6) + 0.4801e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.731e3 / 0.25e2 * (eta ^ 3) - 0.413e3 / 0.5e1 * eta - 0.169e3 / 0.50e2 * (eta ^ 4) - 0.1863e4 / 0.50e2 + 0.34e2 / 0.25e2 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 6) - 0.1786e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 2) + 0.161e3 / 0.50e2 * (eta ^ 3) + 0.469e3 / 0.50e2 * (eta ^ 2) - 0.39e2 / 0.200e3 * (eta ^ 4) + 0.563e3 / 0.50e2 * eta - (eta ^ 6) / 0.10e2 - 0.23e2 / 0.50e2 * (eta ^ 5) + 0.1011e4 / 0.200e3) * (1 + eta) * (eta - 1) * cos((2 * g + 2 * h)) + 0.467e3 / 0.33e2 * ((-0.1715e4 / 0.467e3 + (eta ^ 5) - 0.5485e4 / 0.4203e4 * eta + 0.2621e4 / 0.467e3 * (eta ^ 4) + 0.62690e5 / 0.4203e4 * (eta ^ 3) + 0.52966e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.34118e5 / 0.4203e4 - 0.1038e4 / 0.467e3 * (eta ^ 5) - 0.138916e6 / 0.4203e4 * (eta ^ 3) - 0.13148e5 / 0.467e3 * (eta ^ 2) + 0.11234e5 / 0.4203e4 * eta - 0.52234e5 / 0.4203e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.3188e4 / 0.467e3 + 0.13368e5 / 0.467e3 * (eta ^ 3) - 0.3068e4 / 0.1401e4 * eta + 0.14996e5 / 0.1401e4 * (eta ^ 4) + 0.796e3 / 0.467e3 * (eta ^ 5) + 0.11288e5 / 0.467e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.48358e5 / 0.4203e4 * (eta ^ 3) + 0.3595e4 / 0.4203e4 * eta - 0.17911e5 / 0.4203e4 * (eta ^ 4) + 0.1209e4 / 0.467e3 - 0.727e3 / 0.1401e4 * (eta ^ 5) - 0.39818e5 / 0.4203e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.14195e5 / 0.8406e4 * (eta ^ 3) + 0.11381e5 / 0.8406e4 * (eta ^ 2) + 0.10417e5 / 0.16812e5 * (eta ^ 4) - 0.5963e4 / 0.16812e5 - 0.225e3 / 0.1868e4 * eta + 0.883e3 / 0.16812e5 * (eta ^ 5)) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h - 2 * g + f)) - 0.145e3 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 3) - 0.433e3 / 0.145e3 * (eta ^ 2) - 0.2049e4 / 0.145e3 * eta - 0.1551e4 / 0.145e3) * (ci2 ^ 6) + (-0.31e2 / 0.29e2 * (eta ^ 3) + 0.423e3 / 0.145e3 * (eta ^ 2) + 0.71e2 / 0.5e1 * eta + 0.1561e4 / 0.145e3) * (ci2 ^ 4) + (0.13e2 / 0.58e2 * (eta ^ 3) - 0.449e3 / 0.870e3 * (eta ^ 2) - 0.2231e4 / 0.870e3 * eta - 0.1667e4 / 0.870e3) * (ci2 ^ 2) - ((eta - 1) * (1 + eta) ^ 2) / 0.174e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((4 * g + 2 * h + 7 * f)) + 0.5360e4 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * Delta * (((eta ^ 4) + 0.113e3 / 0.134e3 * (eta ^ 3) - 0.135e3 / 0.134e3 * (eta ^ 2) - 0.21e2 / 0.134e3 * eta + 0.85e2 / 0.134e3) * (ci2 ^ 6) + (-0.86e2 / 0.67e2 * (eta ^ 4) - 0.145e3 / 0.134e3 * (eta ^ 3) + 0.187e3 / 0.134e3 * (eta ^ 2) + 0.37e2 / 0.134e3 * eta - 0.115e3 / 0.134e3) * (ci2 ^ 4) + (0.143e3 / 0.335e3 * (eta ^ 4) + 0.241e3 / 0.670e3 * (eta ^ 3) - 0.343e3 / 0.670e3 * (eta ^ 2) - 0.17e2 / 0.134e3 * eta + 0.41e2 / 0.134e3) * (ci2 ^ 2) - 0.19e2 / 0.670e3 * (1 + eta) * ((eta ^ 3) - 0.3e1 / 0.19e2 * (eta ^ 2) - 0.23e2 / 0.19e2 * eta + 0.15e2 / 0.19e2)) * sqrt((-eta ^ 2 + 1)) * sin((-2 * h + f)) - 0.200e3 / 0.9e1 * (1 + eta) * (((eta ^ 4) + 0.116e3 / 0.55e2 * (eta ^ 3) + 0.206e3 / 0.55e2 * (eta ^ 2) - 0.36e2 / 0.11e2 * eta - 0.317e3 / 0.55e2) * (ci2 ^ 6) + (-0.87e2 / 0.55e2 * (eta ^ 4) - 0.32e2 / 0.11e2 * (eta ^ 3) - 0.218e3 / 0.55e2 * (eta ^ 2) + 0.48e2 / 0.11e2 * eta + 0.377e3 / 0.55e2) * (ci2 ^ 4) + (0.183e3 / 0.275e3 * (eta ^ 4) + 0.292e3 / 0.275e3 * (eta ^ 3) + 0.254e3 / 0.275e3 * (eta ^ 2) - 0.84e2 / 0.55e2 * eta - 0.557e3 / 0.275e3) * (ci2 ^ 2) - 0.16e2 / 0.275e3 * (1 + eta) * ((eta ^ 3) + 0.3e1 / 0.8e1 * (eta ^ 2) - 0.15e2 / 0.8e1)) * (ci2 - 1) * (ci2 + 1) * Delta * sqrt((-eta ^ 2 + 1)) * sin((f + 2 * g)) + 0.38e2 / 0.297e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) - 0.340e3 / 0.19e2 * (eta ^ 3) - 0.830e3 / 0.19e2 * (eta ^ 2) + 0.132e3 / 0.19e2 * eta + 0.723e3 / 0.19e2) * (ci2 ^ 2) + 0.64e2 / 0.19e2 * ((eta ^ 3) + 0.15e2 / 0.16e2 * (eta ^ 2) - 0.11e2 / 0.16e2) * (1 + eta)) * cos((3 * f + 4 * g)) - 0.70e2 / 0.297e3 * (ci2 ^ 2) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 ^ 2) - 0.1e1 / 0.7e1) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 3) * cos((6 * g + 2 * h)) + 0.136e3 / 0.297e3 * (ci2 ^ 2) * (1 + eta) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (((eta ^ 4) - 0.13e2 / 0.68e2 * (eta ^ 3) - 0.369e3 / 0.68e2 * (eta ^ 2) + 0.9e1 / 0.68e2 * eta + 0.417e3 / 0.68e2) * (ci2 ^ 2) - 0.23e2 / 0.34e2 * (eta ^ 4) - 0.4e1 / 0.17e2 * (eta ^ 3) + 0.37e2 / 0.17e2 * (eta ^ 2) + 0.24e2 / 0.17e2 * eta - 0.11e2 / 0.34e2) * sqrt((-eta ^ 2 + 1)) * cos((-2 * h + 3 * f + 2 * g)) - 0.16e2 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 2) * (((eta ^ 4) + (eta ^ 3) / 0.4e1 - 0.119e3 / 0.12e2 * (eta ^ 2) - 0.41e2 / 0.12e2 * eta + 0.173e3 / 0.12e2) * (ci2 ^ 2) - (eta ^ 4) / 0.2e1 - (eta ^ 3) / 0.4e1 + 0.31e2 / 0.12e2 * (eta ^ 2) + 0.37e2 / 0.12e2 * eta + 0.25e2 / 0.12e2) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * (eta - 1) * cos((-2 * h + 2 * g + 4 * f)) + 0.119e3 / 0.33e2 * ((0.13667e5 / 0.1071e4 + (eta ^ 5) + 0.17839e5 / 0.1071e4 * eta - 0.677e3 / 0.1071e4 * (eta ^ 4) - 0.1778e4 / 0.153e3 * (eta ^ 3) - 0.466e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.28274e5 / 0.1071e4 - 0.38e2 / 0.17e2 * (eta ^ 5) + 0.1252e4 / 0.51e2 * (eta ^ 3) + 0.436e3 / 0.63e2 * (eta ^ 2) - 0.36826e5 / 0.1071e4 * eta + 0.1406e4 / 0.1071e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.2392e4 / 0.119e3 - 0.20912e5 / 0.1071e4 * (eta ^ 3) + 0.29432e5 / 0.1071e4 * eta - 0.2216e4 / 0.1071e4 * (eta ^ 4) + 0.88e2 / 0.51e2 * (eta ^ 5) - 0.656e3 / 0.153e3 * (eta ^ 2)) * (ci2 ^ 4) + (0.1058e4 / 0.153e3 * (eta ^ 3) - 0.3581e4 / 0.357e3 * eta + 0.1549e4 / 0.1071e4 * (eta ^ 4) - 0.2377e4 / 0.357e3 - 0.9e1 / 0.17e2 * (eta ^ 5) + 0.590e3 / 0.1071e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.5527e4 / 0.6426e4 * (eta ^ 3) + 0.197e3 / 0.6426e4 * (eta ^ 2) - 0.65e2 / 0.252e3 * (eta ^ 4) + 0.65e2 / 0.84e2 + 0.16297e5 / 0.12852e5 * eta + 0.11e2 / 0.204e3 * (eta ^ 5)) * (1 + eta) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + 3 * f + 2 * g)) + 0.40e2 / 0.99e2 * ((1 + eta) ^ 2) * (((eta ^ 3) - 0.63e2 / 0.5e1 * (eta ^ 2) + 0.257e3 / 0.15e2 * eta + 0.929e3 / 0.15e2) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.383e3 / 0.15e2 * (eta ^ 2) - 0.192e3 / 0.5e1 * eta - 0.385e3 / 0.3e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * (eta ^ 3) - 0.88e2 / 0.5e1 * (eta ^ 2) + 0.179e3 / 0.5e1 * eta + 0.478e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * (eta ^ 3) + 0.23e2 / 0.5e1 * (eta ^ 2) - 0.232e3 / 0.15e2 * eta - 0.451e3 / 0.15e2) * (ci2 ^ 2) - (eta ^ 3) / 0.10e2 - 0.7e1 / 0.20e2 * (eta ^ 2) + 0.13e2 / 0.6e1 * eta + 0.197e3 / 0.60e2) * ((eta - 1) ^ 2) * cos((4 * f)) - 0.20e2 / 0.297e3 * ((1 + eta) ^ 4) * ((eta - 0.112e3 / 0.5e1) * (ci2 ^ 8) + (-(2 * eta) + 0.224e3 / 0.5e1) * (ci2 ^ 6) + (0.3e1 / 0.5e1 * eta - 0.153e3 / 0.5e1) * (ci2 ^ 4) + (0.2e1 / 0.5e1 * eta + 0.41e2 / 0.5e1) * (ci2 ^ 2) - eta / 0.10e2 - 0.3e1 / 0.4e1) * ((eta - 1) ^ 2) * cos((2 * g + 2 * h + 6 * f)) - 0.80e2 / 0.99e2 * ((1 + eta) ^ 2) * (eta - 1) * ((0.109e3 / 0.4e1 + 0.355e3 / 0.12e2 * eta + (eta ^ 4) - 0.701e3 / 0.60e2 * (eta ^ 3) - 0.111e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.3337e4 / 0.60e2 + 0.122e3 / 0.5e1 * (eta ^ 3) + 0.123e3 / 0.10e2 * (eta ^ 2) - 0.301e3 / 0.5e1 * eta - 0.25e2 / 0.12e2 * (eta ^ 4)) * (ci2 ^ 6) + (0.204e3 / 0.5e1 - 0.92e2 / 0.5e1 * (eta ^ 3) + 0.93e2 / 0.2e1 * eta + 0.4e1 / 0.5e1 * (eta ^ 4) - 0.71e2 / 0.10e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.71e2 / 0.12e2 * (eta ^ 3) - 0.967e3 / 0.60e2 * eta + 0.3e1 / 0.10e2 * (eta ^ 4) - 0.253e3 / 0.20e2 + 0.11e2 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.161e3 / 0.240e3 * (eta ^ 3) + 0.29e2 / 0.240e3 * (eta ^ 2) - (eta ^ 4) / 0.10e2 + 0.109e3 / 0.80e2 + 0.461e3 / 0.240e3 * eta) * cos((2 * h + 2 * g + 4 * f)) + 0.940e3 / 0.297e3 * (1 + eta) * (((eta ^ 4) + 0.2097e4 / 0.470e3 * (eta ^ 3) + 0.483e3 / 0.470e3 * (eta ^ 2) - 0.3421e4 / 0.470e3 * eta - 0.2037e4 / 0.470e3) * (ci2 ^ 6) + (-0.67e2 / 0.47e2 * (eta ^ 4) - 0.2889e4 / 0.470e3 * (eta ^ 3) - 0.267e3 / 0.470e3 * (eta ^ 2) + 0.5981e4 / 0.470e3 * eta + 0.3789e4 / 0.470e3) * (ci2 ^ 4) + (0.247e3 / 0.470e3 * (eta ^ 4) + 0.2059e4 / 0.940e3 * (eta ^ 3) - 0.71e2 / 0.940e3 * (eta ^ 2) - 0.5231e4 / 0.940e3 * eta - 0.703e3 / 0.188e3) * (ci2 ^ 2) - 0.9e1 / 0.235e3 * (1 + eta) * ((eta ^ 3) + 0.26e2 / 0.9e1 * (eta ^ 2) - 0.34e2 / 0.9e1 * eta - 0.74e2 / 0.9e1)) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((-2 * h + 4 * f)) - 0.452e3 / 0.297e3 * (1 + eta) * (((eta ^ 5) + 0.2153e4 / 0.226e3 * (eta ^ 4) + 0.5306e4 / 0.113e3 * (eta ^ 3) + 0.3855e4 / 0.113e3 * (eta ^ 2) - 0.14427e5 / 0.113e3 * eta - 0.28887e5 / 0.226e3) * (ci2 ^ 6) + (-0.217e3 / 0.113e3 * (eta ^ 5) - 0.3049e4 / 0.226e3 * (eta ^ 4) - 0.5938e4 / 0.113e3 * (eta ^ 3) - 0.3207e4 / 0.113e3 * (eta ^ 2) + 0.17115e5 / 0.113e3 * eta + 0.32391e5 / 0.226e3) * (ci2 ^ 4) + (0.225e3 / 0.226e3 * (eta ^ 5) + 0.2303e4 / 0.452e3 * (eta ^ 4) + 0.1393e4 / 0.113e3 * (eta ^ 3) + 0.121e3 / 0.226e3 * (eta ^ 2) - 0.9275e4 / 0.226e3 * eta - 0.15409e5 / 0.452e3) * (ci2 ^ 2) - 0.10e2 / 0.113e3 * ((eta ^ 4) + (3 * eta ^ 3) + 0.12e2 / 0.5e1 * (eta ^ 2) - (8 * eta) - 0.74e2 / 0.5e1) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((2 * g + 4 * f)) - 0.19e2 / 0.33e2 * ((1 + eta) ^ 2) * (((eta ^ 2) - 0.202e3 / 0.171e3 * eta - 0.2281e4 / 0.171e3) * (ci2 ^ 8) + (-(2 * eta ^ 2) + 0.476e3 / 0.171e3 * eta + 0.4634e4 / 0.171e3) * (ci2 ^ 6) + (0.4e1 / 0.3e1 * (eta ^ 2) - 0.176e3 / 0.57e2 * eta - 0.1100e4 / 0.57e2) * (ci2 ^ 4) + (-(eta ^ 2) / 0.3e1 + 0.14e2 / 0.9e1 * eta + 0.959e3 / 0.171e3) * (ci2 ^ 2) + (eta ^ 2) / 0.36e2 - 0.2e1 / 0.9e1 * eta - 0.383e3 / 0.684e3) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((5 * f)) - 0.34e2 / 0.11e2 * (((eta ^ 3) + 0.188e3 / 0.153e3 * (eta ^ 2) - 0.587e3 / 0.153e3 * eta - 0.62e2 / 0.17e2) * (ci2 ^ 8) + (-0.116e3 / 0.51e2 * (eta ^ 3) - 0.1318e4 / 0.459e3 * (eta ^ 2) + 0.3928e4 / 0.459e3 * eta + 0.3818e4 / 0.459e3) * (ci2 ^ 6) + (0.274e3 / 0.153e3 * (eta ^ 3) + 0.898e3 / 0.459e3 * (eta ^ 2) - 0.22e2 / 0.3e1 * eta - 0.118e3 / 0.17e2) * (ci2 ^ 4) + (-0.86e2 / 0.153e3 * (eta ^ 3) - 0.149e3 / 0.459e3 * (eta ^ 2) + 0.440e3 / 0.153e3 * eta + 0.1147e4 / 0.459e3) * (ci2 ^ 2) + 0.107e3 / 0.1836e4 * (eta ^ 3) - 0.43e2 / 0.1836e4 * (eta ^ 2) - 0.2269e4 / 0.5508e4 * eta - 0.65e2 / 0.204e3) * (1 + eta) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((-2 * g - 2 * h + 3 * f)) + 0.80e2 / 0.33e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((0.4027e4 / 0.180e3 + (eta ^ 6) + 0.283e3 / 0.90e2 * (eta ^ 5) - 0.1843e4 / 0.90e2 * (eta ^ 3) - 0.803e3 / 0.45e2 * (eta ^ 2) + 0.331e3 / 0.15e2 * eta + 0.49e2 / 0.180e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4391e4 / 0.180e3 + 0.1979e4 / 0.90e2 * (eta ^ 3) - 0.206e3 / 0.9e1 * eta - 0.149e3 / 0.180e3 * (eta ^ 4) - 0.23e2 / 0.6e1 * (eta ^ 5) - (eta ^ 6) + 0.919e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 4) + (-0.229e3 / 0.36e2 * (eta ^ 3) + 0.553e3 / 0.90e2 * eta + 0.53e2 / 0.120e3 * (eta ^ 4) + 0.2329e4 / 0.360e3 + 0.233e3 / 0.180e3 * (eta ^ 5) + 0.7e1 / 0.30e2 * (eta ^ 6) - 0.266e3 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 2) - (1 + eta) * ((eta ^ 3) + 0.11e2 / 0.15e2 * (eta ^ 2) - 0.8e1 / 0.5e1 * eta - 0.16e2 / 0.5e1) * (eta - 1) / 0.12e2) * cos((2 * h)) - 0.64e2 / 0.297e3 * ((0.1077e4 / 0.8e1 + (eta ^ 6) + 0.575e3 / 0.8e1 * (eta ^ 5) - 0.775e3 / 0.4e1 * (eta ^ 3) - 0.321e3 / 0.4e1 * (eta ^ 2) + 0.1191e4 / 0.8e1 * eta - 0.755e3 / 0.8e1 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1521e4 / 0.8e1 + 0.911e3 / 0.4e1 * (eta ^ 3) - 0.1491e4 / 0.8e1 * eta + 0.895e3 / 0.8e1 * (eta ^ 4) - 0.547e3 / 0.8e1 * (eta ^ 5) + (eta ^ 6) + 0.465e3 / 0.4e1 * (eta ^ 2)) * (ci2 ^ 4) + (-0.417e3 / 0.8e1 * (eta ^ 3) + 0.737e3 / 0.16e2 * eta - 0.705e3 / 0.16e2 * (eta ^ 4) + 0.607e3 / 0.16e2 + 0.153e3 / 0.16e2 * (eta ^ 5) - 0.3e1 / 0.2e1 * (eta ^ 6) + (eta ^ 2) / 0.8e1) * (ci2 ^ 2) - (eta ^ 3) / 0.4e1 + 0.3e1 / 0.4e1 * (eta ^ 2) + 0.7e1 / 0.8e1 * (eta ^ 4) - 0.17e2 / 0.8e1 - 0.5e1 / 0.8e1 * eta + (eta ^ 6) / 0.2e1 + 0.7e1 / 0.8e1 * (eta ^ 5)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * cos((2 * g + 2 * f)) - 0.1751e4 / 0.198e3 * ((-0.14991e5 / 0.1751e4 + (eta ^ 6) + 0.6080e4 / 0.1751e4 * (eta ^ 5) + 0.21472e5 / 0.1751e4 * (eta ^ 3) + 0.12741e5 / 0.1751e4 * (eta ^ 2) - 0.15520e5 / 0.1751e4 * eta + 0.12595e5 / 0.1751e4 * (eta ^ 4)) * (ci2 ^ 6) + (0.16127e5 / 0.1751e4 - 0.26880e5 / 0.1751e4 * (eta ^ 3) + 0.17584e5 / 0.1751e4 * eta - 0.20035e5 / 0.1751e4 * (eta ^ 4) - 0.8752e4 / 0.1751e4 * (eta ^ 5) - 0.1431e4 / 0.1751e4 * (eta ^ 6) - 0.12773e5 / 0.1751e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.30008e5 / 0.5253e4 * (eta ^ 3) - 0.18980e5 / 0.5253e4 * eta + 0.53675e5 / 0.10506e5 * (eta ^ 4) - 0.29527e5 / 0.10506e5 + 0.10252e5 / 0.5253e4 * (eta ^ 5) + 0.631e3 / 0.10506e5 * (eta ^ 6) + 0.17845e5 / 0.10506e5 * (eta ^ 2)) * (ci2 ^ 2) + 0.80e2 / 0.5253e4 * (1 + eta) * ((eta ^ 5) - 0.283e3 / 0.20e2 * (eta ^ 4) - (21 * eta ^ 3) - 0.53e2 / 0.10e2 * (eta ^ 2) + (8 * eta) + 0.173e3 / 0.20e2)) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * cos((f + 2 * g)) - 0.184e3 / 0.11e2 * (1 + eta) * ((0.4475e4 / 0.414e3 + (eta ^ 6) + 0.1079e4 / 0.414e3 * (eta ^ 5) - 0.9605e4 / 0.621e3 * (eta ^ 3) - 0.1456e4 / 0.621e3 * (eta ^ 2) + 0.18685e5 / 0.1242e4 * eta - 0.7411e4 / 0.1242e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.1589e4 / 0.138e3 + 0.10579e5 / 0.621e3 * (eta ^ 3) - 0.20093e5 / 0.1242e4 * eta + 0.349e3 / 0.54e2 * (eta ^ 4) - 0.1259e4 / 0.414e3 * (eta ^ 5) - 0.241e3 / 0.207e3 * (eta ^ 6) + 0.1688e4 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1601e4 / 0.414e3 * (eta ^ 3) + 0.8503e4 / 0.2484e4 * eta - 0.1163e4 / 0.828e3 * (eta ^ 4) + 0.5947e4 / 0.2484e4 + 0.661e3 / 0.828e3 * (eta ^ 5) + 0.43e2 / 0.138e3 * (eta ^ 6) - 0.452e3 / 0.621e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.19e2 / 0.1242e4 * (1 + eta) * ((eta ^ 4) + 0.47e2 / 0.19e2 * (eta ^ 3) - 0.36e2 / 0.19e2 * (eta ^ 2) - 0.120e3 / 0.19e2 * eta - 0.74e2 / 0.19e2) * (eta - 1)) * (ci2 - 1) * (ci2 + 1) * cos((2 * h + 4 * f + 4 * g)) - 0.349e3 / 0.66e2 * ((0.94003e5 / 0.3141e4 + (eta ^ 6) - 0.7648e4 / 0.9423e4 * (eta ^ 5) - 0.240544e6 / 0.9423e4 * (eta ^ 3) - 0.35057e5 / 0.3141e4 * (eta ^ 2) + 0.115072e6 / 0.3141e4 * eta - 0.93269e5 / 0.9423e4 * (eta ^ 4)) * (ci2 ^ 6) + (-0.109859e6 / 0.3141e4 + 0.283904e6 / 0.9423e4 * (eta ^ 3) - 0.15632e5 / 0.349e3 * eta + 0.128005e6 / 0.9423e4 * (eta ^ 4) + 0.18224e5 / 0.9423e4 * (eta ^ 5) - 0.3077e4 / 0.3141e4 * (eta ^ 6) + 0.31633e5 / 0.3141e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.70456e5 / 0.9423e4 * (eta ^ 3) + 0.12740e5 / 0.1047e4 * eta - 0.92383e5 / 0.18846e5 * (eta ^ 4) + 0.54025e5 / 0.6282e4 - 0.11212e5 / 0.9423e4 * (eta ^ 5) + 0.127e3 / 0.698e3 * (eta ^ 6) - 0.2827e4 / 0.6282e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.16e2 / 0.9423e4 * (1 + eta) * ((eta ^ 5) + 0.227e3 / 0.4e1 * (eta ^ 4) + (119 * eta ^ 3) + 0.177e3 / 0.2e1 * (eta ^ 2) - (132 * eta) - 0.909e3 / 0.4e1)) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * cos((3 * f + 2 * g)) + 0.14e2 / 0.11e2 * ((1 + eta) ^ 2) * (((eta ^ 3) + 0.124e3 / 0.189e3 * (eta ^ 2) - 0.1075e4 / 0.189e3 * eta - 0.1082e4 / 0.189e3) * (ci2 ^ 8) + (-0.44e2 / 0.21e2 * (eta ^ 3) - 0.38e2 / 0.27e2 * (eta ^ 2) + 0.2168e4 / 0.189e3 * eta + 0.2182e4 / 0.189e3) * (ci2 ^ 6) + (0.94e2 / 0.63e2 * (eta ^ 3) + 0.2e1 / 0.3e1 * (eta ^ 2) - 0.178e3 / 0.21e2 * eta - 0.514e3 / 0.63e2) * (ci2 ^ 4) + (-0.26e2 / 0.63e2 * (eta ^ 3) + 0.13e2 / 0.189e3 * (eta ^ 2) + 0.512e3 / 0.189e3 * eta + 0.445e3 / 0.189e3) * (ci2 ^ 2) + 0.29e2 / 0.756e3 * (eta ^ 3) - (eta ^ 2) / 0.28e2 - 0.25e2 / 0.84e2 * eta - 0.59e2 / 0.252e3) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + 5 * f + 2 * g)) - 0.3e1 / 0.11e2 * (1 + eta) * (eta - 1) * ((0.17015e5 / 0.81e2 + 0.8930e4 / 0.81e2 * eta + (eta ^ 4) - 0.134e3 / 0.27e2 * (eta ^ 3) - 0.584e3 / 0.9e1 * (eta ^ 2)) * (ci2 ^ 8) + (-0.1330e4 / 0.3e1 + 0.292e3 / 0.27e2 * (eta ^ 3) + 0.10504e5 / 0.81e2 * (eta ^ 2) - 0.19820e5 / 0.81e2 * eta - (2 * eta ^ 4)) * (ci2 ^ 6) + (0.3100e4 / 0.9e1 - 0.1328e4 / 0.81e2 * (eta ^ 3) + 0.17680e5 / 0.81e2 * eta + 0.4e1 / 0.3e1 * (eta ^ 4) - 0.7240e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.866e3 / 0.81e2 * (eta ^ 3) - 0.7330e4 / 0.81e2 * eta - (eta ^ 4) / 0.3e1 - 0.9425e4 / 0.81e2 + 0.628e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.46e2 / 0.27e2 * (eta ^ 3) - 0.239e3 / 0.162e3 * (eta ^ 2) + (eta ^ 4) / 0.36e2 + 0.350e3 / 0.27e2 * eta + 0.1495e4 / 0.108e3) * sqrt((-eta ^ 2 + 1)) * cos((3 * f)) + 0.13e2 / 0.198e3 * (((eta ^ 2) + 0.280e3 / 0.13e2 * eta + 0.223e3 / 0.13e2) * (ci2 ^ 6) + (-(eta ^ 2) - 0.272e3 / 0.13e2 * eta - 0.215e3 / 0.13e2) * (ci2 ^ 4) + ((eta ^ 2) / 0.6e1 + 0.14e2 / 0.3e1 * eta + 0.307e3 / 0.78e2) * (ci2 ^ 2) + 0.2e1 / 0.39e2 * eta + 0.2e1 / 0.39e2) * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((3 * f - 2 * g)) - 0.640e3 / 0.9e1 * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * Delta * ((eta - 1) ^ 2) * (((eta ^ 2) + eta - 0.41e2 / 0.88e2) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.13e2 / 0.11e2 * eta + 0.47e2 / 0.88e2) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.110e3 * eta - 0.13e2 / 0.88e2) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.7e1 / 0.330e3 * eta + 0.3e1 / 0.440e3) * sin((4 * g + 2 * h)) - 0.160e3 / 0.99e2 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) - 0.27e2 / 0.40e2 * (eta ^ 2) - 0.29e2 / 0.4e1 * eta - 0.219e3 / 0.40e2) * (ci2 ^ 6) + (-(eta ^ 3) + 0.47e2 / 0.40e2 * (eta ^ 2) + 0.163e3 / 0.20e2 * eta + 0.47e2 / 0.8e1) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * (eta ^ 3) - 0.127e3 / 0.240e3 * (eta ^ 2) - 0.19e2 / 0.8e1 * eta - 0.383e3 / 0.240e3) * (ci2 ^ 2) + 0.7e1 / 0.120e3 * (eta ^ 2) + 0.13e2 / 0.120e3 * eta + 0.1e1 / 0.20e2) * cos((-2 * g + 2 * f)) + 0.6067e4 / 0.198e3 * (ci2 - 1) * (ci2 + 1) * (eta - 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 5) - 0.46919e5 / 0.6067e4 * (eta ^ 4) - 0.180282e6 / 0.6067e4 * (eta ^ 3) - 0.197014e6 / 0.6067e4 * (eta ^ 2) - 0.71305e5 / 0.6067e4 * eta - 0.1491e4 / 0.6067e4) * (ci2 ^ 6) + (-0.6699e4 / 0.6067e4 * (eta ^ 5) + 0.55311e5 / 0.6067e4 * (eta ^ 4) + 0.210362e6 / 0.6067e4 * (eta ^ 3) + 0.229910e6 / 0.6067e4 * (eta ^ 2) + 0.83713e5 / 0.6067e4 * eta + 0.2059e4 / 0.6067e4) * (ci2 ^ 4) + (0.3241e4 / 0.12134e5 * (eta ^ 5) - 0.36237e5 / 0.12134e5 * (eta ^ 4) - 0.197185e6 / 0.18201e5 * (eta ^ 3) - 0.216271e6 / 0.18201e5 * (eta ^ 2) - 0.165929e6 / 0.36402e5 * eta - 0.9227e4 / 0.36402e5) * (ci2 ^ 2) - 0.158e3 / 0.18201e5 * ((eta ^ 4) - 0.1622e4 / 0.79e2 * (eta ^ 3) - 0.3666e4 / 0.79e2 * (eta ^ 2) - 0.2122e4 / 0.79e2 * eta - 0.173e3 / 0.79e2) * (1 + eta)) * cos((4 * g + 2 * h + f)) - 0.1492e4 / 0.297e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 4) + 0.3197e4 / 0.746e3 * (eta ^ 3) - 0.1851e4 / 0.746e3 * (eta ^ 2) - 0.11449e5 / 0.746e3 * eta - 0.8203e4 / 0.746e3) * (ci2 ^ 6) + (-0.399e3 / 0.373e3 * (eta ^ 4) - 0.3433e4 / 0.746e3 * (eta ^ 3) + 0.1719e4 / 0.746e3 * (eta ^ 2) + 0.11685e5 / 0.746e3 * eta + 0.8387e4 / 0.746e3) * (ci2 ^ 4) + (0.183e3 / 0.746e3 * (eta ^ 4) + 0.1507e4 / 0.1492e4 * (eta ^ 3) - 0.493e3 / 0.1492e4 * (eta ^ 2) - 0.4439e4 / 0.1492e4 * eta - 0.3157e4 / 0.1492e4) * (ci2 ^ 2) - 0.5e1 / 0.746e3 * (eta + 0.16e2 / 0.5e1) * ((1 + eta) ^ 2) * (eta - 1)) * (eta - 1) * cos((2 * h + 6 * f + 4 * g)) - 0.20e2 / 0.9e1 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * (((eta ^ 2) + 0.199e3 / 0.110e3 * eta + 0.91e2 / 0.110e3) * (ci2 ^ 6) + (-0.13e2 / 0.11e2 * (eta ^ 2) - 0.47e2 / 0.22e2 * eta - 0.107e3 / 0.110e3) * (ci2 ^ 4) + (0.41e2 / 0.110e3 * (eta ^ 2) + 0.41e2 / 0.60e2 * eta + 0.69e2 / 0.220e3) * (ci2 ^ 2) - 0.7e1 / 0.330e3 * (eta ^ 2) - 0.13e2 / 0.330e3 * eta - 0.1e1 / 0.55e2) * cos((-4 * g - 2 * h + 2 * f)) + 0.4e1 / 0.99e2 * (ci2 ^ 4) * ((eta - 1) ^ 3) * ((1 + eta) ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((10 * f + 4 * g)) - 0.677e3 / 0.198e3 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * (((eta ^ 5) - 0.6983e4 / 0.677e3 * (eta ^ 4) - 0.20870e5 / 0.677e3 * (eta ^ 3) + 0.1498e4 / 0.677e3 * (eta ^ 2) + 0.35057e5 / 0.677e3 * eta + 0.24573e5 / 0.677e3) * (ci2 ^ 6) + (-0.801e3 / 0.677e3 * (eta ^ 5) + 0.7427e4 / 0.677e3 * (eta ^ 4) + 0.22542e5 / 0.677e3 * (eta ^ 3) - 0.866e3 / 0.677e3 * (eta ^ 2) - 0.36605e5 / 0.677e3 * eta - 0.25649e5 / 0.677e3) * (ci2 ^ 4) + (0.427e3 / 0.1354e4 * (eta ^ 5) - 0.9707e4 / 0.4062e4 * (eta ^ 4) - 0.14995e5 / 0.2031e4 * (eta ^ 3) - 0.659e3 / 0.2031e4 * (eta ^ 2) + 0.14727e5 / 0.1354e4 * eta + 0.30721e5 / 0.4062e4) * (ci2 ^ 2) - 0.31e2 / 0.2031e4 * ((eta ^ 3) - 0.123e3 / 0.31e2 * (eta ^ 2) - 0.411e3 / 0.31e2 * eta - 0.281e3 / 0.31e2) * (1 + eta) * (eta - 1)) * sqrt((-eta ^ 2 + 1)) * cos((2 * h + 5 * f + 4 * g)) + 0.560e3 / 0.99e2 * (((eta ^ 5) + 0.101e3 / 0.20e2 * (eta ^ 4) + 0.2867e4 / 0.280e3 * (eta ^ 3) + 0.11843e5 / 0.840e3 * (eta ^ 2) + 0.10747e5 / 0.840e3 * eta + 0.4079e4 / 0.840e3) * (ci2 ^ 6) + (-(eta ^ 5) - 0.2237e4 / 0.420e3 * (eta ^ 4) - 0.9353e4 / 0.840e3 * (eta ^ 3) - 0.13331e5 / 0.840e3 * (eta ^ 2) - 0.12443e5 / 0.840e3 * eta - 0.4807e4 / 0.840e3) * (ci2 ^ 4) + (0.7e1 / 0.30e2 * (eta ^ 5) + 0.1157e4 / 0.840e3 * (eta ^ 4) + 0.1737e4 / 0.560e3 * (eta ^ 3) + 0.8273e4 / 0.1680e4 * (eta ^ 2) + 0.2771e4 / 0.560e3 * eta + 0.1107e4 / 0.560e3) * (ci2 ^ 2) - 0.13e2 / 0.420e3 * ((eta ^ 3) + 0.31e2 / 0.13e2 * (eta ^ 2) + 0.64e2 / 0.13e2 * eta + 0.48e2 / 0.13e2) * (1 + eta)) * (1 + eta) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * cos((4 * g + 2 * h)) + 0.608e3 / 0.297e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 2) * (((eta ^ 3) + 0.23e2 / 0.8e1 * (eta ^ 2) - 0.65e2 / 0.4e1 * eta - 0.4279e4 / 0.152e3) * (ci2 ^ 6) + (-(eta ^ 3) - 0.385e3 / 0.152e3 * (eta ^ 2) + 0.1353e4 / 0.76e2 * eta + 0.4463e4 / 0.152e3) * (ci2 ^ 4) + (0.7e1 / 0.38e2 * (eta ^ 3) + 0.59e2 / 0.304e3 * (eta ^ 2) - 0.641e3 / 0.152e3 * eta - 0.1793e4 / 0.304e3) * (ci2 ^ 2) + 0.5e1 / 0.152e3 * (eta ^ 2) + 0.21e2 / 0.152e3 * eta + 0.2e1 / 0.19e2) * cos((6 * f + 2 * g)) + 0.260e3 / 0.297e3 * ((1 + eta) ^ 2) * (((eta ^ 2) + 0.551e3 / 0.130e3 * eta + 0.71e2 / 0.26e2) * (ci2 ^ 6) + (-0.7e1 / 0.5e1 * (eta ^ 2) - 0.787e3 / 0.130e3 * eta - 0.539e3 / 0.130e3) * (ci2 ^ 4) + (0.67e2 / 0.130e3 * (eta ^ 2) + 0.9e1 / 0.4e1 * eta + 0.33e2 / 0.20e2) * (ci2 ^ 2) - (eta ^ 2) / 0.26e2 - 0.21e2 / 0.130e3 * eta - 0.8e1 / 0.65e2) * (ci2 - 1) * (ci2 + 1) * ((eta - 1) ^ 3) * cos((-2 * h + 6 * f)) + 0.424e3 / 0.33e2 * (1 + eta) * (((eta ^ 5) + 0.1231e4 / 0.318e3 * (eta ^ 4) - 0.1373e4 / 0.477e3 * (eta ^ 3) - 0.5758e4 / 0.477e3 * (eta ^ 2) - 0.434e3 / 0.477e3 * eta + 0.1817e4 / 0.318e3) * (ci2 ^ 6) + (-0.179e3 / 0.159e3 * (eta ^ 5) - 0.445e3 / 0.106e3 * (eta ^ 4) + 0.1675e4 / 0.477e3 * (eta ^ 3) + 0.6608e4 / 0.477e3 * (eta ^ 2) + 0.664e3 / 0.477e3 * eta - 0.655e3 / 0.106e3) * (ci2 ^ 4) + (0.131e3 / 0.318e3 * (eta ^ 5) + 0.267e3 / 0.212e3 * (eta ^ 4) - 0.1559e4 / 0.954e3 * (eta ^ 3) - 0.857e3 / 0.159e3 * (eta ^ 2) - 0.922e3 / 0.477e3 * eta + 0.1981e4 / 0.1908e4) * (ci2 ^ 2) - 0.11e2 / 0.477e3 * ((eta ^ 4) + 0.15e2 / 0.11e2 * (eta ^ 3) - 0.123e3 / 0.22e2 * (eta ^ 2) - 0.75e2 / 0.11e2 * eta + 0.17e2 / 0.22e2) * (1 + eta)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((2 * h + 2 * f + 4 * g)) + 0.106e3 / 0.99e2 * (1 + eta) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 5) + 0.6769e4 / 0.53e2 * (eta ^ 4) + 0.7320e4 / 0.53e2 * (eta ^ 3) - 0.13000e5 / 0.53e2 * (eta ^ 2) - 0.11157e5 / 0.53e2 * eta + 0.3375e4 / 0.53e2) * (ci2 ^ 6) + (0.25e2 / 0.53e2 * (eta ^ 5) - 0.8435e4 / 0.53e2 * (eta ^ 4) - 0.9216e4 / 0.53e2 * (eta ^ 3) + 0.15544e5 / 0.53e2 * (eta ^ 2) + 0.13743e5 / 0.53e2 * eta - 0.3517e4 / 0.53e2) * (ci2 ^ 4) + (-0.277e3 / 0.318e3 * (eta ^ 5) + 0.16747e5 / 0.318e3 * (eta ^ 4) + 0.9073e4 / 0.159e3 * (eta ^ 3) - 0.14447e5 / 0.159e3 * (eta ^ 2) - 0.26173e5 / 0.318e3 * eta + 0.5075e4 / 0.318e3) * (ci2 ^ 2) + 0.13e2 / 0.106e3 * (eta ^ 5) - 0.1135e4 / 0.318e3 * (eta ^ 4) - 0.602e3 / 0.159e3 * (eta ^ 3) + 0.878e3 / 0.159e3 * (eta ^ 2) + 0.543e3 / 0.106e3 * eta - 0.173e3 / 0.318e3) * cos((-2 * h + f)) - 0.100e3 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 4) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * (eta - 1) * sqrt((-eta ^ 2 + 1)) * sin((4 * g + 2 * h + 7 * f)) + 0.100e3 / 0.99e2 * (ci2 ^ 2) * ((1 + eta) ^ 3) * (ci2 - 1) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * Delta * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * sin((2 * g + 7 * f)) - 0.173e3 / 0.198e3 * ((1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * (((eta ^ 4) + 0.3692e4 / 0.173e3 * (eta ^ 3) + 0.1998e4 / 0.173e3 * (eta ^ 2) - 0.6820e4 / 0.173e3 * eta - 0.4979e4 / 0.173e3) * (ci2 ^ 6) + (-0.217e3 / 0.173e3 * (eta ^ 4) - 0.4052e4 / 0.173e3 * (eta ^ 3) - 0.2366e4 / 0.173e3 * (eta ^ 2) + 0.7148e4 / 0.173e3 * eta + 0.5423e4 / 0.173e3) * (ci2 ^ 4) + (0.409e3 / 0.1038e4 * (eta ^ 4) + 0.3526e4 / 0.519e3 * (eta ^ 3) + 0.2279e4 / 0.519e3 * (eta ^ 2) - 0.1862e4 / 0.173e3 * eta - 0.8735e4 / 0.1038e4) * (ci2 ^ 2) - 0.11e2 / 0.519e3 * (eta - 1) * ((eta ^ 3) + 0.153e3 / 0.11e2 * (eta ^ 2) + (27 * eta) + 0.163e3 / 0.11e2)) * cos((2 * h + f)) - 0.4e1 / 0.99e2 * (ci2 ^ 4) * ((eta - 1) ^ 2) * ((1 + eta) ^ 5) * ((ci2 - 1) ^ 2) * ((ci2 + 1) ^ 2) * cos((6 * g + 2 * h + 10 * f)) + 0.100e3 / 0.33e2 * ((1 + eta) ^ 3) * (((eta ^ 3) + 0.21e2 / 0.50e2 * (eta ^ 2) - 0.77e2 / 0.25e2 * eta - 0.347e3 / 0.150e3) * (ci2 ^ 6) + (-0.17e2 / 0.15e2 * (eta ^ 3) - 0.79e2 / 0.150e3 * (eta ^ 2) + 0.241e3 / 0.75e2 * eta + 0.121e3 / 0.50e2) * (ci2 ^ 4) + (0.151e3 / 0.450e3 * (eta ^ 3) + 0.19e2 / 0.100e3 * (eta ^ 2) - 0.367e3 / 0.450e3 * eta - 0.559e3 / 0.900e3) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (1 + eta) * (eta + 0.6e1 / 0.7e1) * (eta - 1)) * (ci2 - 1) * (ci2 + 1) * (eta - 1) * cos((2 * h + 2 * f)) + 0.80e2 / 0.99e2 * (1 + eta) * ((-0.2747e4 / 0.30e2 + (eta ^ 6) - (eta ^ 5) / 0.6e1 - 0.3479e4 / 0.30e2 * eta + 0.73e2 / 0.10e2 * (eta ^ 4) + (4 * eta ^ 3) - 0.397e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.5963e4 / 0.30e2 - (2 * eta ^ 6) + (eta ^ 5) - (eta ^ 3) + 0.348e3 / 0.5e1 * (eta ^ 2) + 0.1292e4 / 0.5e1 * eta - 0.383e3 / 0.30e2 * (eta ^ 4)) * (ci2 ^ 6) + (-0.165e3 + 0.73e2 / 0.15e2 * (eta ^ 3) - 0.6671e4 / 0.30e2 * eta + 0.173e3 / 0.15e2 * (eta ^ 4) - 0.17e2 / 0.10e2 * (eta ^ 5) + 0.3e1 / 0.5e1 * (eta ^ 6) - 0.947e3 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 4) + (-(7 * eta ^ 3) + 0.1316e4 / 0.15e2 * eta - 0.193e3 / 0.30e2 * (eta ^ 4) + 0.621e3 / 0.10e2 + 0.11e2 / 0.15e2 * (eta ^ 5) + 0.2e1 / 0.5e1 * (eta ^ 6) + 0.123e3 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 2) + 0.23e2 / 0.15e2 * (eta ^ 3) - 0.227e3 / 0.60e2 * (eta ^ 2) + 0.157e3 / 0.120e3 * (eta ^ 4) - 0.757e3 / 0.60e2 * eta - (eta ^ 6) / 0.10e2 + (eta ^ 5) / 0.60e2 - 0.337e3 / 0.40e2) * (eta - 1) - 0.1600e4 / 0.297e3 * ((-0.327e3 / 0.25e2 + (eta ^ 6) - 0.399e3 / 0.100e3 * (eta ^ 5) - 0.2281e4 / 0.100e3 * eta + 0.231e3 / 0.50e2 * (eta ^ 4) + 0.237e3 / 0.10e2 * (eta ^ 3) + 0.11e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 8) + (0.1373e4 / 0.50e2 - 0.87e2 / 0.40e2 * (eta ^ 6) + 0.1767e4 / 0.200e3 * (eta ^ 5) - 0.1011e4 / 0.20e2 * (eta ^ 3) - 0.43e2 / 0.8e1 * (eta ^ 2) + 0.9583e4 / 0.200e3 * eta - 0.939e3 / 0.100e3 * (eta ^ 4)) * (ci2 ^ 6) + (-0.4329e4 / 0.200e3 + 0.837e3 / 0.20e2 * (eta ^ 3) - 0.7851e4 / 0.200e3 * eta + 0.1923e4 / 0.200e3 * (eta ^ 4) - 0.1503e4 / 0.200e3 * (eta ^ 5) + 0.51e2 / 0.50e2 * (eta ^ 6) + 0.321e3 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1587e4 / 0.100e3 * (eta ^ 3) + 0.2959e4 / 0.200e3 * eta - 0.507e3 / 0.100e3 * (eta ^ 4) + 0.759e3 / 0.100e3 + 0.579e3 / 0.200e3 * (eta ^ 5) + 0.19e2 / 0.100e3 * (eta ^ 6) - 0.17e2 / 0.100e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.849e3 / 0.400e3 * (eta ^ 3) - 0.37e2 / 0.400e3 * (eta ^ 2) + 0.677e3 / 0.800e3 * (eta ^ 4) - 0.151e3 / 0.160e3 - 0.1567e4 / 0.800e3 * eta - (eta ^ 6) / 0.10e2 - 0.63e2 / 0.160e3 * (eta ^ 5)) * (1 + eta) * cos((2 * h + 2 * g + 2 * f)) + ((0.13265e5 / 0.99e2 + (eta ^ 6) + 0.196e3 / 0.297e3 * (eta ^ 5) + 0.5044e4 / 0.33e2 * eta + 0.2113e4 / 0.297e3 * (eta ^ 4) - 0.18680e5 / 0.297e3 * (eta ^ 3) - 0.15869e5 / 0.297e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.7826e4 / 0.27e2 - (2 * eta ^ 6) - 0.248e3 / 0.297e3 * (eta ^ 5) + 0.39280e5 / 0.297e3 * (eta ^ 3) + 0.9886e4 / 0.99e2 * (eta ^ 2) - 0.101048e6 / 0.297e3 * eta - 0.3842e4 / 0.297e3 * (eta ^ 4)) * (ci2 ^ 6) + (0.716e3 / 0.3e1 - 0.4000e4 / 0.33e2 * (eta ^ 3) + 0.3232e4 / 0.11e2 * eta + 0.740e3 / 0.99e2 * (eta ^ 4) + 0.448e3 / 0.99e2 * (eta ^ 5) + 0.4e1 / 0.3e1 * (eta ^ 6) - 0.7220e4 / 0.99e2 * (eta ^ 2)) * (ci2 ^ 4) + (0.16360e5 / 0.297e3 * (eta ^ 3) - 0.11548e5 / 0.99e2 * eta - 0.107e3 / 0.297e3 * (eta ^ 4) - 0.8779e4 / 0.99e2 - 0.1268e4 / 0.297e3 * (eta ^ 5) - (eta ^ 6) / 0.3e1 + 0.653e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 2) - 0.2560e4 / 0.297e3 * (eta ^ 3) - 0.2813e4 / 0.1188e4 * (eta ^ 2) - 0.731e3 / 0.1188e4 * (eta ^ 4) + 0.14071e5 / 0.1188e4 + 0.1664e4 / 0.99e2 * eta + (eta ^ 6) / 0.36e2 + 0.224e3 / 0.297e3 * (eta ^ 5)) * sqrt((-eta ^ 2 + 1)) * cos(f) - 0.5e1 / 0.33e2 * ((1 + eta) ^ 3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((eta - 1) ^ 3) * sqrt((-eta ^ 2 + 1)) * cos((7 * f)) + 0.5e1 / 0.33e2 * ((1 + eta) ^ 4) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.6e1) ^ 2 * ((eta - 1) ^ 2) * sqrt((-eta ^ 2 + 1)) * cos((2 * g + 2 * h + 7 * f))) / ((1 + eta) ^ 2) / a ^ 4 / (eta ^ 11)];

Dsp2t2 = O2Msign*[D1; D2; D3; D4; D5; D6];


Dsp1 = Dsp11 + Dsp12;

Dsp2 = Dsp2t1 + Dsp2t2;

Dsp = Dsp1 + Dsp2;
else
    Dsp = 0;
end

end

