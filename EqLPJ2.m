%% EqLPJ2
%     Desc: Computes long-period effects of J2 for Equinoctial elements.
%     Equinoctial elements: [a l+g+h tan(i/2)*cos(h) tan(i/2)*sin(h) e*cos(g+h) e*sin(g+h)];
% Reference: 
% B. Mahajan, S. R. Vadali and K. T. Alfriend, ï¿½Analytic Solution For Satellite 
% Relative Motion: The Complete Zonal Gravitational Problem,ï¿½ 26th AAS/AIAA 
% Space Flight Mechanics Meeting, Napa, CA, February 2016.
% Author: Bharat Mahajan (https://github.com/princemahajan)

%# codegen

function [Eqlp, Dlp] = EqLPJ2(Xm,mu,Re,J2, InverseOn, JacobianOn,tol) 

O2Msign = 1;
if InverseOn == true
	O2Msign = -1;
end

a = Xm(1); Lambda = Xm(2); p1 = Xm(3); p2 = Xm(4); q1 = Xm(5); q2 = Xm(6);

DelXm = Del2Eqn(Xm,mu,true);
 
l = DelXm(1); g = DelXm(2); h = DelXm(3);L = DelXm(4);G =DelXm(5); H= DelXm(6);

% intermediate quantities
e = sqrt(q1^2 + q2^2);
eta = sqrt(1 - e^2);
i = 2*atan(sqrt(p1^2 + p2^2));
si = sin(i); 
ci = cos(i);
ch = cos(h); 
sh = sin(h);
si2 = sin(i/2);
ci2 = cos(i/2);
J = J2;
R__e = Re;

% [~, f] = KeplerEqSolver(l, e, 1e-11); 

% Delta = atan((tan(f)-tan(l))/(1+tan(f)*tan(l))); 

% J2 Equinoctial First Order Long-Period Effects (Using Maple)

lp11 = 0;
lp12 = si2 ^ 2 * (300 * ci2 ^ 10 * eta ^ 3 + 450 * ci2 ^ 10 * eta ^ 2 - 600 * ci2 ^ 8 * eta ^ 3 - 750 * ci2 ^ 10 - 1050 * ci2 ^ 8 * eta ^ 2 + 430 * ci2 ^ 6 * eta ^ 3 + 1650 * ci2 ^ 8 + 935 * ci2 ^ 6 * eta ^ 2 - 130 * ci2 ^ 4 * eta ^ 3 - 1365 * ci2 ^ 6 - 395 * ci2 ^ 4 * eta ^ 2 + 14 * ci2 ^ 2 * eta ^ 3 + 525 * ci2 ^ 4 + 81 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) / (400 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 800 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 560 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 160 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 16 * L ^ 4 * eta ^ 4) * sin((2 * g)) * J * R__e ^ 2 * mu ^ 2;
lp13 = ((60 * ci2 ^ 6 * eta ^ 2 - 60 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 90 * ci2 ^ 4 + 44 * ci2 ^ 2 * eta ^ 2 - 44 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 / (160 * L ^ 4 * ci2 ^ 5 * eta ^ 4 - 160 * L ^ 4 * ci2 ^ 3 * eta ^ 4 + 32 * L ^ 4 * ci2 * eta ^ 4) * ch * cos((2 * g)) - si2 * (300 * ci2 ^ 10 * eta ^ 2 - 300 * ci2 ^ 10 - 750 * ci2 ^ 8 * eta ^ 2 + 750 * ci2 ^ 8 + 720 * ci2 ^ 6 * eta ^ 2 - 720 * ci2 ^ 6 - 330 * ci2 ^ 4 * eta ^ 2 + 330 * ci2 ^ 4 + 74 * ci2 ^ 2 * eta ^ 2 - 74 * ci2 ^ 2 - 7 * eta ^ 2 + 7) / (800 * L ^ 4 * ci2 ^ 9 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 7 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 5 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 3 * eta ^ 4 + 32 * L ^ 4 * ci2 * eta ^ 4) * sh * sin((2 * g))) * J * R__e ^ 2 * mu ^ 2;
lp14 = ((60 * ci2 ^ 6 * eta ^ 2 - 60 * ci2 ^ 6 - 90 * ci2 ^ 4 * eta ^ 2 + 90 * ci2 ^ 4 + 44 * ci2 ^ 2 * eta ^ 2 - 44 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 / (160 * L ^ 4 * ci2 ^ 5 * eta ^ 4 - 160 * L ^ 4 * ci2 ^ 3 * eta ^ 4 + 32 * L ^ 4 * ci2 * eta ^ 4) * sh * cos((2 * g)) + si2 * (300 * ci2 ^ 10 * eta ^ 2 - 300 * ci2 ^ 10 - 750 * ci2 ^ 8 * eta ^ 2 + 750 * ci2 ^ 8 + 720 * ci2 ^ 6 * eta ^ 2 - 720 * ci2 ^ 6 - 330 * ci2 ^ 4 * eta ^ 2 + 330 * ci2 ^ 4 + 74 * ci2 ^ 2 * eta ^ 2 - 74 * ci2 ^ 2 - 7 * eta ^ 2 + 7) / (800 * L ^ 4 * ci2 ^ 9 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 7 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 5 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 3 * eta ^ 4 + 32 * L ^ 4 * ci2 * eta ^ 4) * ch * sin((2 * g))) * J * R__e ^ 2 * mu ^ 2;
lp15 = (-sqrt((-eta ^ 2 + 1)) * (150 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 450 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 505 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 265 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 67 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * ch * cos(g) + sqrt((-eta ^ 2 + 1)) * (750 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 1650 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 1365 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 525 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 95 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * ch * cos(0.3e1 * g) - sqrt((-eta ^ 2 + 1)) * (150 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 450 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 505 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 265 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 67 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * sh * sin(g) - sqrt((-eta ^ 2 + 1)) * (750 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 1650 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 1365 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 525 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 95 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * sh * sin(0.3e1 * g)) * J * R__e ^ 2 * mu ^ 2;
lp16 = (-sqrt((-eta ^ 2 + 1)) * (150 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 450 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 505 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 265 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 67 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * sh * cos(g) + sqrt((-eta ^ 2 + 1)) * (750 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 1650 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 1365 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 525 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 95 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * sh * cos(0.3e1 * g) + sqrt((-eta ^ 2 + 1)) * (150 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 450 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 505 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 265 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 67 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * ch * sin(g) + sqrt((-eta ^ 2 + 1)) * (750 * ci2 ^ 10 * eta ^ 2 - 750 * ci2 ^ 10 - 1650 * ci2 ^ 8 * eta ^ 2 + 1650 * ci2 ^ 8 + 1365 * ci2 ^ 6 * eta ^ 2 - 1365 * ci2 ^ 6 - 525 * ci2 ^ 4 * eta ^ 2 + 525 * ci2 ^ 4 + 95 * ci2 ^ 2 * eta ^ 2 - 95 * ci2 ^ 2 - 7 * eta ^ 2 + 7) * si2 ^ 2 / (800 * L ^ 4 * ci2 ^ 8 * eta ^ 4 - 1600 * L ^ 4 * ci2 ^ 6 * eta ^ 4 + 1120 * L ^ 4 * ci2 ^ 4 * eta ^ 4 - 320 * L ^ 4 * ci2 ^ 2 * eta ^ 4 + 32 * L ^ 4 * eta ^ 4) * ch * sin(0.3e1 * g)) * J * R__e ^ 2 * mu ^ 2;

J2_LPX1 = O2Msign*[lp11; lp12; lp13; lp14; lp15; lp16];

% J2 Equinoctial Second Order Long-Period Effects (Using Maple)
lp2t11 = 0;
lp2t12 = -(si2 ^ 4) * (135000 * eta ^ 4 * si2 ^ 20 + 180000 * eta ^ 3 * si2 ^ 20 - 810000 * eta ^ 4 * si2 ^ 18 - 540000 * eta ^ 2 * si2 ^ 20 - 1080000 * eta ^ 3 * si2 ^ 18 + 2122500 * eta ^ 4 * si2 ^ 16 + 3240000 * eta ^ 2 * si2 ^ 18 + 225000 * si2 ^ 20 + 2856000 * eta ^ 3 * si2 ^ 16 - 3207000 * eta ^ 4 * si2 ^ 14 - 8529000 * eta ^ 2 * si2 ^ 16 - 1350000 * si2 ^ 18 - 4380000 * eta ^ 3 * si2 ^ 14 + 3097400 * eta ^ 4 * si2 ^ 12 + 12984000 * eta ^ 2 * si2 ^ 14 + 3550500 * si2 ^ 16 + 4310600 * eta ^ 3 * si2 ^ 12 - 1997600 * eta ^ 4 * si2 ^ 10 - 12660700 * eta ^ 2 * si2 ^ 12 - 5397000 * si2 ^ 14 - 2842400 * eta ^ 3 * si2 ^ 10 + 869940 * eta ^ 4 * si2 ^ 8 + 8258800 * eta ^ 2 * si2 ^ 10 + 5252700 * si2 ^ 12 + 1270880 * eta ^ 3 * si2 ^ 8 - 251860 * eta ^ 4 * si2 ^ 6 - 3646200 * eta ^ 2 * si2 ^ 8 - 3418800 * si2 ^ 10 - 380240 * eta ^ 3 * si2 ^ 6 + 46149 * eta ^ 4 * si2 ^ 4 + 1074080 * eta ^ 2 * si2 ^ 6 + 1505380 * si2 ^ 8 + 72832 * eta ^ 3 * si2 ^ 4 - 4788 * eta ^ 4 * si2 ^ 2 - 201546 * eta ^ 2 * si2 ^ 4 - 441980 * si2 ^ 6 - 8064 * eta ^ 3 * si2 ^ 2 + 210 * eta ^ 4 + 21672 * eta ^ 2 * si2 ^ 2 + 82565 * si2 ^ 4 + 392 * eta ^ 3 - 1008 * eta ^ 2 - 8820 * si2 ^ 2 + 406) / (640000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 2560000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 4352000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 4096000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 2329600 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 819200 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 174080 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 20480 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1024 * L ^ 8 * eta ^ 8) * sin((4 * g)) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t13 = (si2 * (180000 * ci2 ^ 20 * eta ^ 4 - 360000 * ci2 ^ 20 * eta ^ 2 - 990000 * ci2 ^ 18 * eta ^ 4 + 180000 * ci2 ^ 20 + 1980000 * ci2 ^ 18 * eta ^ 2 + 2400000 * ci2 ^ 16 * eta ^ 4 - 990000 * ci2 ^ 18 - 4800000 * ci2 ^ 16 * eta ^ 2 - 3378000 * ci2 ^ 14 * eta ^ 4 + 2400000 * ci2 ^ 16 + 6756000 * ci2 ^ 14 * eta ^ 2 + 3058600 * ci2 ^ 12 * eta ^ 4 - 3378000 * ci2 ^ 14 - 6117200 * ci2 ^ 12 * eta ^ 2 - 1863100 * ci2 ^ 10 * eta ^ 4 + 3058600 * ci2 ^ 12 + 3726200 * ci2 ^ 10 * eta ^ 2 + 774075 * ci2 ^ 8 * eta ^ 4 - 1863100 * ci2 ^ 10 - 1548150 * ci2 ^ 8 * eta ^ 2 - 216890 * ci2 ^ 6 * eta ^ 4 + 774075 * ci2 ^ 8 + 433780 * ci2 ^ 6 * eta ^ 2 + 39277 * ci2 ^ 4 * eta ^ 4 - 216890 * ci2 ^ 6 - 78554 * ci2 ^ 4 * eta ^ 2 - 4158 * ci2 ^ 2 * eta ^ 4 + 39277 * ci2 ^ 4 + 8316 * ci2 ^ 2 * eta ^ 2 + 196 * eta ^ 4 - 4158 * ci2 ^ 2 - 392 * eta ^ 2 + 196) / (2560000 * L ^ 8 * ci2 ^ 17 * eta ^ 8 - 10240000 * L ^ 8 * ci2 ^ 15 * eta ^ 8 + 17408000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 16384000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 9318400 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 3276800 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 696320 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 81920 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 4096 * L ^ 8 * ci2 * eta ^ 8) * ch * cos((4 * g)) - si2 * (90000 * ci2 ^ 20 * eta ^ 4 - 180000 * ci2 ^ 20 * eta ^ 2 - 489000 * ci2 ^ 18 * eta ^ 4 + 90000 * ci2 ^ 20 + 978000 * ci2 ^ 18 * eta ^ 2 + 1173000 * ci2 ^ 16 * eta ^ 4 - 489000 * ci2 ^ 18 - 2346000 * ci2 ^ 16 * eta ^ 2 - 1638000 * ci2 ^ 14 * eta ^ 4 + 1173000 * ci2 ^ 16 + 3276000 * ci2 ^ 14 * eta ^ 2 + 1476750 * ci2 ^ 12 * eta ^ 4 - 1638000 * ci2 ^ 14 - 2953500 * ci2 ^ 12 * eta ^ 2 - 899530 * ci2 ^ 10 * eta ^ 4 + 1476750 * ci2 ^ 12 + 1799060 * ci2 ^ 10 * eta ^ 2 + 375450 * ci2 ^ 8 * eta ^ 4 - 899530 * ci2 ^ 10 - 750900 * ci2 ^ 8 * eta ^ 2 - 106130 * ci2 ^ 6 * eta ^ 4 + 375450 * ci2 ^ 8 + 212260 * ci2 ^ 6 * eta ^ 2 + 19441 * ci2 ^ 4 * eta ^ 4 - 106130 * ci2 ^ 6 - 38882 * ci2 ^ 4 * eta ^ 2 - 2079 * ci2 ^ 2 * eta ^ 4 + 19441 * ci2 ^ 4 + 4158 * ci2 ^ 2 * eta ^ 2 + 98 * eta ^ 4 - 2079 * ci2 ^ 2 - 196 * eta ^ 2 + 98) / (1280000 * L ^ 8 * ci2 ^ 17 * eta ^ 8 - 5120000 * L ^ 8 * ci2 ^ 15 * eta ^ 8 + 8704000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 8192000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 4659200 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 1638400 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 348160 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 40960 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 2048 * L ^ 8 * ci2 * eta ^ 8) * sh * sin((4 * g)) + si2 * (1080000 * ci2 ^ 22 * eta ^ 4 - 2880000 * ci2 ^ 22 * eta ^ 2 - 5940000 * ci2 ^ 20 * eta ^ 4 + 1800000 * ci2 ^ 22 + 15840000 * ci2 ^ 20 * eta ^ 2 + 14502000 * ci2 ^ 18 * eta ^ 4 - 9900000 * ci2 ^ 20 - 38628000 * ci2 ^ 18 * eta ^ 2 - 20703000 * ci2 ^ 16 * eta ^ 4 + 24126000 * ci2 ^ 18 + 55014000 * ci2 ^ 16 * eta ^ 2 + 19157200 * ci2 ^ 14 * eta ^ 4 - 34311000 * ci2 ^ 16 - 50708800 * ci2 ^ 14 * eta ^ 2 - 12032200 * ci2 ^ 12 * eta ^ 4 + 31551600 * ci2 ^ 14 + 31660800 * ci2 ^ 12 * eta ^ 2 + 5218660 * ci2 ^ 10 * eta ^ 4 - 19628600 * ci2 ^ 12 - 13609240 * ci2 ^ 10 * eta ^ 2 - 1558245 * ci2 ^ 8 * eta ^ 4 + 8390580 * ci2 ^ 10 + 4007290 * ci2 ^ 8 * eta ^ 2 + 313022 * ci2 ^ 6 * eta ^ 4 - 2449045 * ci2 ^ 8 - 787052 * ci2 ^ 6 * eta ^ 2 - 40223 * ci2 ^ 4 * eta ^ 4 + 474030 * ci2 ^ 6 + 97358 * ci2 ^ 4 * eta ^ 2 + 2982 * ci2 ^ 2 * eta ^ 4 - 57135 * ci2 ^ 4 - 6748 * ci2 ^ 2 * eta ^ 2 - 98 * eta ^ 4 + 3766 * ci2 ^ 2 + 196 * eta ^ 2 - 98) / (2560000 * L ^ 8 * ci2 ^ 17 * eta ^ 8 - 10240000 * L ^ 8 * ci2 ^ 15 * eta ^ 8 + 17408000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 16384000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 9318400 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 3276800 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 696320 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 81920 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 4096 * L ^ 8 * ci2 * eta ^ 8) * ch) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t14 = (si2 * (180000 * ci2 ^ 20 * eta ^ 4 - 360000 * ci2 ^ 20 * eta ^ 2 - 990000 * ci2 ^ 18 * eta ^ 4 + 180000 * ci2 ^ 20 + 1980000 * ci2 ^ 18 * eta ^ 2 + 2400000 * ci2 ^ 16 * eta ^ 4 - 990000 * ci2 ^ 18 - 4800000 * ci2 ^ 16 * eta ^ 2 - 3378000 * ci2 ^ 14 * eta ^ 4 + 2400000 * ci2 ^ 16 + 6756000 * ci2 ^ 14 * eta ^ 2 + 3058600 * ci2 ^ 12 * eta ^ 4 - 3378000 * ci2 ^ 14 - 6117200 * ci2 ^ 12 * eta ^ 2 - 1863100 * ci2 ^ 10 * eta ^ 4 + 3058600 * ci2 ^ 12 + 3726200 * ci2 ^ 10 * eta ^ 2 + 774075 * ci2 ^ 8 * eta ^ 4 - 1863100 * ci2 ^ 10 - 1548150 * ci2 ^ 8 * eta ^ 2 - 216890 * ci2 ^ 6 * eta ^ 4 + 774075 * ci2 ^ 8 + 433780 * ci2 ^ 6 * eta ^ 2 + 39277 * ci2 ^ 4 * eta ^ 4 - 216890 * ci2 ^ 6 - 78554 * ci2 ^ 4 * eta ^ 2 - 4158 * ci2 ^ 2 * eta ^ 4 + 39277 * ci2 ^ 4 + 8316 * ci2 ^ 2 * eta ^ 2 + 196 * eta ^ 4 - 4158 * ci2 ^ 2 - 392 * eta ^ 2 + 196) / (2560000 * L ^ 8 * ci2 ^ 17 * eta ^ 8 - 10240000 * L ^ 8 * ci2 ^ 15 * eta ^ 8 + 17408000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 16384000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 9318400 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 3276800 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 696320 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 81920 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 4096 * L ^ 8 * ci2 * eta ^ 8) * sh * cos((4 * g)) + si2 * (90000 * ci2 ^ 20 * eta ^ 4 - 180000 * ci2 ^ 20 * eta ^ 2 - 489000 * ci2 ^ 18 * eta ^ 4 + 90000 * ci2 ^ 20 + 978000 * ci2 ^ 18 * eta ^ 2 + 1173000 * ci2 ^ 16 * eta ^ 4 - 489000 * ci2 ^ 18 - 2346000 * ci2 ^ 16 * eta ^ 2 - 1638000 * ci2 ^ 14 * eta ^ 4 + 1173000 * ci2 ^ 16 + 3276000 * ci2 ^ 14 * eta ^ 2 + 1476750 * ci2 ^ 12 * eta ^ 4 - 1638000 * ci2 ^ 14 - 2953500 * ci2 ^ 12 * eta ^ 2 - 899530 * ci2 ^ 10 * eta ^ 4 + 1476750 * ci2 ^ 12 + 1799060 * ci2 ^ 10 * eta ^ 2 + 375450 * ci2 ^ 8 * eta ^ 4 - 899530 * ci2 ^ 10 - 750900 * ci2 ^ 8 * eta ^ 2 - 106130 * ci2 ^ 6 * eta ^ 4 + 375450 * ci2 ^ 8 + 212260 * ci2 ^ 6 * eta ^ 2 + 19441 * ci2 ^ 4 * eta ^ 4 - 106130 * ci2 ^ 6 - 38882 * ci2 ^ 4 * eta ^ 2 - 2079 * ci2 ^ 2 * eta ^ 4 + 19441 * ci2 ^ 4 + 4158 * ci2 ^ 2 * eta ^ 2 + 98 * eta ^ 4 - 2079 * ci2 ^ 2 - 196 * eta ^ 2 + 98) / (1280000 * L ^ 8 * ci2 ^ 17 * eta ^ 8 - 5120000 * L ^ 8 * ci2 ^ 15 * eta ^ 8 + 8704000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 8192000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 4659200 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 1638400 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 348160 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 40960 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 2048 * L ^ 8 * ci2 * eta ^ 8) * ch * sin((4 * g)) + si2 * (1080000 * ci2 ^ 22 * eta ^ 4 - 2880000 * ci2 ^ 22 * eta ^ 2 - 5940000 * ci2 ^ 20 * eta ^ 4 + 1800000 * ci2 ^ 22 + 15840000 * ci2 ^ 20 * eta ^ 2 + 14502000 * ci2 ^ 18 * eta ^ 4 - 9900000 * ci2 ^ 20 - 38628000 * ci2 ^ 18 * eta ^ 2 - 20703000 * ci2 ^ 16 * eta ^ 4 + 24126000 * ci2 ^ 18 + 55014000 * ci2 ^ 16 * eta ^ 2 + 19157200 * ci2 ^ 14 * eta ^ 4 - 34311000 * ci2 ^ 16 - 50708800 * ci2 ^ 14 * eta ^ 2 - 12032200 * ci2 ^ 12 * eta ^ 4 + 31551600 * ci2 ^ 14 + 31660800 * ci2 ^ 12 * eta ^ 2 + 5218660 * ci2 ^ 10 * eta ^ 4 - 19628600 * ci2 ^ 12 - 13609240 * ci2 ^ 10 * eta ^ 2 - 1558245 * ci2 ^ 8 * eta ^ 4 + 8390580 * ci2 ^ 10 + 4007290 * ci2 ^ 8 * eta ^ 2 + 313022 * ci2 ^ 6 * eta ^ 4 - 2449045 * ci2 ^ 8 - 787052 * ci2 ^ 6 * eta ^ 2 - 40223 * ci2 ^ 4 * eta ^ 4 + 474030 * ci2 ^ 6 + 97358 * ci2 ^ 4 * eta ^ 2 + 2982 * ci2 ^ 2 * eta ^ 4 - 57135 * ci2 ^ 4 - 6748 * ci2 ^ 2 * eta ^ 2 - 98 * eta ^ 4 + 3766 * ci2 ^ 2 + 196 * eta ^ 2 - 98) / (2560000 * L ^ 8 * ci2 ^ 17 * eta ^ 8 - 10240000 * L ^ 8 * ci2 ^ 15 * eta ^ 8 + 17408000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 16384000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 9318400 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 3276800 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 696320 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 81920 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 4096 * L ^ 8 * ci2 * eta ^ 8) * sh) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t15 = (-sqrt((-eta ^ 2 + 1)) * (742500 * eta ^ 4 * si2 ^ 22 - 4320000 * eta ^ 4 * si2 ^ 20 - 1485000 * eta ^ 2 * si2 ^ 22 + 11197500 * eta ^ 4 * si2 ^ 18 + 8550000 * eta ^ 2 * si2 ^ 20 + 562500 * si2 ^ 22 - 17043000 * eta ^ 4 * si2 ^ 16 - 21861000 * eta ^ 2 * si2 ^ 18 - 3150000 * si2 ^ 20 + 16902225 * eta ^ 4 * si2 ^ 14 + 32691000 * eta ^ 2 * si2 ^ 16 + 7807500 * si2 ^ 18 - 11456100 * eta ^ 4 * si2 ^ 12 - 31692050 * eta ^ 2 * si2 ^ 14 - 11268000 * si2 ^ 16 + 5411200 * eta ^ 4 * si2 ^ 10 + 20858600 * eta ^ 2 * si2 ^ 12 + 10479225 * si2 ^ 14 - 1780940 * eta ^ 4 * si2 ^ 8 - 9482280 * eta ^ 2 * si2 ^ 10 - 6560100 * si2 ^ 12 + 400512 * eta ^ 4 * si2 ^ 6 + 2966620 * eta ^ 2 * si2 ^ 8 + 2800200 * si2 ^ 10 - 58720 * eta ^ 4 * si2 ^ 4 - 622964 * eta ^ 2 * si2 ^ 6 - 805440 * si2 ^ 8 + 5068 * eta ^ 4 * si2 ^ 2 + 83024 * eta ^ 2 * si2 ^ 4 + 149620 * si2 ^ 6 - 196 * eta ^ 4 - 6244 * eta ^ 2 * si2 ^ 2 - 16240 * si2 ^ 4 + 196 * eta ^ 2 + 784 * si2 ^ 2) * (si2 ^ 2) / (640000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 2560000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 4352000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 4096000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 2329600 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 819200 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 174080 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 20480 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1024 * L ^ 8 * eta ^ 8) * ch * cos(g) + sqrt((-eta ^ 2 + 1)) * (67500 * eta ^ 4 * si2 ^ 20 - 360000 * eta ^ 4 * si2 ^ 18 - 855000 * eta ^ 2 * si2 ^ 20 + 846000 * eta ^ 4 * si2 ^ 16 + 4860000 * eta ^ 2 * si2 ^ 18 + 787500 * si2 ^ 20 - 1155000 * eta ^ 4 * si2 ^ 14 - 12204000 * eta ^ 2 * si2 ^ 16 - 4500000 * si2 ^ 18 + 1014725 * eta ^ 4 * si2 ^ 12 + 17820000 * eta ^ 2 * si2 ^ 14 + 11358000 * si2 ^ 16 - 598100 * eta ^ 4 * si2 ^ 10 - 16746650 * eta ^ 2 * si2 ^ 12 - 16665000 * si2 ^ 14 + 237820 * eta ^ 4 * si2 ^ 8 + 10577000 * eta ^ 2 * si2 ^ 10 + 15731925 * si2 ^ 12 - 61940 * eta ^ 4 * si2 ^ 6 - 4543400 * eta ^ 2 * si2 ^ 8 - 9978900 * si2 ^ 10 + 9737 * eta ^ 4 * si2 ^ 4 + 1309360 * eta ^ 2 * si2 ^ 6 + 4305580 * si2 ^ 8 - 756 * eta ^ 4 * si2 ^ 2 - 241922 * eta ^ 2 * si2 ^ 4 - 1247420 * si2 ^ 6 + 14 * eta ^ 4 + 25816 * eta ^ 2 * si2 ^ 2 + 232185 * si2 ^ 4 - 1204 * eta ^ 2 - 25060 * si2 ^ 2 + 1190) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * ch * cos(0.3e1 * g) + sqrt((-eta ^ 2 + 1)) * (337500 * eta ^ 4 * si2 ^ 20 - 1800000 * eta ^ 4 * si2 ^ 18 - 675000 * eta ^ 2 * si2 ^ 20 + 4257000 * eta ^ 4 * si2 ^ 16 + 3600000 * eta ^ 2 * si2 ^ 18 + 337500 * si2 ^ 20 - 5871000 * eta ^ 4 * si2 ^ 14 - 8514000 * eta ^ 2 * si2 ^ 16 - 1800000 * si2 ^ 18 + 5226525 * eta ^ 4 * si2 ^ 12 + 11742000 * eta ^ 2 * si2 ^ 14 + 4257000 * si2 ^ 16 - 3141300 * eta ^ 4 * si2 ^ 10 - 10453050 * eta ^ 2 * si2 ^ 12 - 5871000 * si2 ^ 14 + 1294820 * eta ^ 4 * si2 ^ 8 + 6282600 * eta ^ 2 * si2 ^ 10 + 5226525 * si2 ^ 12 - 363460 * eta ^ 4 * si2 ^ 6 - 2589640 * eta ^ 2 * si2 ^ 8 - 3141300 * si2 ^ 10 + 67055 * eta ^ 4 * si2 ^ 4 + 726920 * eta ^ 2 * si2 ^ 6 + 1294820 * si2 ^ 8 - 7420 * eta ^ 4 * si2 ^ 2 - 134110 * eta ^ 2 * si2 ^ 4 - 363460 * si2 ^ 6 + 378 * eta ^ 4 + 14840 * eta ^ 2 * si2 ^ 2 + 67055 * si2 ^ 4 - 756 * eta ^ 2 - 7420 * si2 ^ 2 + 378) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * ch * cos(0.5e1 * g) + sqrt((-eta ^ 2 + 1)) * (742500 * eta ^ 4 * si2 ^ 22 - 4320000 * eta ^ 4 * si2 ^ 20 - 1485000 * eta ^ 2 * si2 ^ 22 + 11197500 * eta ^ 4 * si2 ^ 18 + 8550000 * eta ^ 2 * si2 ^ 20 + 562500 * si2 ^ 22 - 17043000 * eta ^ 4 * si2 ^ 16 - 21861000 * eta ^ 2 * si2 ^ 18 - 3150000 * si2 ^ 20 + 16902225 * eta ^ 4 * si2 ^ 14 + 32691000 * eta ^ 2 * si2 ^ 16 + 7807500 * si2 ^ 18 - 11456100 * eta ^ 4 * si2 ^ 12 - 31692050 * eta ^ 2 * si2 ^ 14 - 11268000 * si2 ^ 16 + 5411200 * eta ^ 4 * si2 ^ 10 + 20858600 * eta ^ 2 * si2 ^ 12 + 10479225 * si2 ^ 14 - 1780940 * eta ^ 4 * si2 ^ 8 - 9482280 * eta ^ 2 * si2 ^ 10 - 6560100 * si2 ^ 12 + 400512 * eta ^ 4 * si2 ^ 6 + 2966620 * eta ^ 2 * si2 ^ 8 + 2800200 * si2 ^ 10 - 58720 * eta ^ 4 * si2 ^ 4 - 622964 * eta ^ 2 * si2 ^ 6 - 805440 * si2 ^ 8 + 5068 * eta ^ 4 * si2 ^ 2 + 83024 * eta ^ 2 * si2 ^ 4 + 149620 * si2 ^ 6 - 196 * eta ^ 4 - 6244 * eta ^ 2 * si2 ^ 2 - 16240 * si2 ^ 4 + 196 * eta ^ 2 + 784 * si2 ^ 2) * (si2 ^ 2) / (640000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 2560000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 4352000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 4096000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 2329600 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 819200 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 174080 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 20480 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1024 * L ^ 8 * eta ^ 8) * sh * sin(g) + sqrt((-eta ^ 2 + 1)) * (67500 * eta ^ 4 * si2 ^ 20 - 360000 * eta ^ 4 * si2 ^ 18 - 855000 * eta ^ 2 * si2 ^ 20 + 846000 * eta ^ 4 * si2 ^ 16 + 4860000 * eta ^ 2 * si2 ^ 18 + 787500 * si2 ^ 20 - 1155000 * eta ^ 4 * si2 ^ 14 - 12204000 * eta ^ 2 * si2 ^ 16 - 4500000 * si2 ^ 18 + 1014725 * eta ^ 4 * si2 ^ 12 + 17820000 * eta ^ 2 * si2 ^ 14 + 11358000 * si2 ^ 16 - 598100 * eta ^ 4 * si2 ^ 10 - 16746650 * eta ^ 2 * si2 ^ 12 - 16665000 * si2 ^ 14 + 237820 * eta ^ 4 * si2 ^ 8 + 10577000 * eta ^ 2 * si2 ^ 10 + 15731925 * si2 ^ 12 - 61940 * eta ^ 4 * si2 ^ 6 - 4543400 * eta ^ 2 * si2 ^ 8 - 9978900 * si2 ^ 10 + 9737 * eta ^ 4 * si2 ^ 4 + 1309360 * eta ^ 2 * si2 ^ 6 + 4305580 * si2 ^ 8 - 756 * eta ^ 4 * si2 ^ 2 - 241922 * eta ^ 2 * si2 ^ 4 - 1247420 * si2 ^ 6 + 14 * eta ^ 4 + 25816 * eta ^ 2 * si2 ^ 2 + 232185 * si2 ^ 4 - 1204 * eta ^ 2 - 25060 * si2 ^ 2 + 1190) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * sh * sin(0.3e1 * g) - sqrt((-eta ^ 2 + 1)) * (337500 * eta ^ 4 * si2 ^ 20 - 1800000 * eta ^ 4 * si2 ^ 18 - 675000 * eta ^ 2 * si2 ^ 20 + 4257000 * eta ^ 4 * si2 ^ 16 + 3600000 * eta ^ 2 * si2 ^ 18 + 337500 * si2 ^ 20 - 5871000 * eta ^ 4 * si2 ^ 14 - 8514000 * eta ^ 2 * si2 ^ 16 - 1800000 * si2 ^ 18 + 5226525 * eta ^ 4 * si2 ^ 12 + 11742000 * eta ^ 2 * si2 ^ 14 + 4257000 * si2 ^ 16 - 3141300 * eta ^ 4 * si2 ^ 10 - 10453050 * eta ^ 2 * si2 ^ 12 - 5871000 * si2 ^ 14 + 1294820 * eta ^ 4 * si2 ^ 8 + 6282600 * eta ^ 2 * si2 ^ 10 + 5226525 * si2 ^ 12 - 363460 * eta ^ 4 * si2 ^ 6 - 2589640 * eta ^ 2 * si2 ^ 8 - 3141300 * si2 ^ 10 + 67055 * eta ^ 4 * si2 ^ 4 + 726920 * eta ^ 2 * si2 ^ 6 + 1294820 * si2 ^ 8 - 7420 * eta ^ 4 * si2 ^ 2 - 134110 * eta ^ 2 * si2 ^ 4 - 363460 * si2 ^ 6 + 378 * eta ^ 4 + 14840 * eta ^ 2 * si2 ^ 2 + 67055 * si2 ^ 4 - 756 * eta ^ 2 - 7420 * si2 ^ 2 + 378) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * sh * sin(0.5e1 * g)) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t16 = (-sqrt((-eta ^ 2 + 1)) * (742500 * eta ^ 4 * si2 ^ 22 - 4320000 * eta ^ 4 * si2 ^ 20 - 1485000 * eta ^ 2 * si2 ^ 22 + 11197500 * eta ^ 4 * si2 ^ 18 + 8550000 * eta ^ 2 * si2 ^ 20 + 562500 * si2 ^ 22 - 17043000 * eta ^ 4 * si2 ^ 16 - 21861000 * eta ^ 2 * si2 ^ 18 - 3150000 * si2 ^ 20 + 16902225 * eta ^ 4 * si2 ^ 14 + 32691000 * eta ^ 2 * si2 ^ 16 + 7807500 * si2 ^ 18 - 11456100 * eta ^ 4 * si2 ^ 12 - 31692050 * eta ^ 2 * si2 ^ 14 - 11268000 * si2 ^ 16 + 5411200 * eta ^ 4 * si2 ^ 10 + 20858600 * eta ^ 2 * si2 ^ 12 + 10479225 * si2 ^ 14 - 1780940 * eta ^ 4 * si2 ^ 8 - 9482280 * eta ^ 2 * si2 ^ 10 - 6560100 * si2 ^ 12 + 400512 * eta ^ 4 * si2 ^ 6 + 2966620 * eta ^ 2 * si2 ^ 8 + 2800200 * si2 ^ 10 - 58720 * eta ^ 4 * si2 ^ 4 - 622964 * eta ^ 2 * si2 ^ 6 - 805440 * si2 ^ 8 + 5068 * eta ^ 4 * si2 ^ 2 + 83024 * eta ^ 2 * si2 ^ 4 + 149620 * si2 ^ 6 - 196 * eta ^ 4 - 6244 * eta ^ 2 * si2 ^ 2 - 16240 * si2 ^ 4 + 196 * eta ^ 2 + 784 * si2 ^ 2) * (si2 ^ 2) / (640000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 2560000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 4352000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 4096000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 2329600 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 819200 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 174080 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 20480 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1024 * L ^ 8 * eta ^ 8) * sh * cos(g) + sqrt((-eta ^ 2 + 1)) * (67500 * eta ^ 4 * si2 ^ 20 - 360000 * eta ^ 4 * si2 ^ 18 - 855000 * eta ^ 2 * si2 ^ 20 + 846000 * eta ^ 4 * si2 ^ 16 + 4860000 * eta ^ 2 * si2 ^ 18 + 787500 * si2 ^ 20 - 1155000 * eta ^ 4 * si2 ^ 14 - 12204000 * eta ^ 2 * si2 ^ 16 - 4500000 * si2 ^ 18 + 1014725 * eta ^ 4 * si2 ^ 12 + 17820000 * eta ^ 2 * si2 ^ 14 + 11358000 * si2 ^ 16 - 598100 * eta ^ 4 * si2 ^ 10 - 16746650 * eta ^ 2 * si2 ^ 12 - 16665000 * si2 ^ 14 + 237820 * eta ^ 4 * si2 ^ 8 + 10577000 * eta ^ 2 * si2 ^ 10 + 15731925 * si2 ^ 12 - 61940 * eta ^ 4 * si2 ^ 6 - 4543400 * eta ^ 2 * si2 ^ 8 - 9978900 * si2 ^ 10 + 9737 * eta ^ 4 * si2 ^ 4 + 1309360 * eta ^ 2 * si2 ^ 6 + 4305580 * si2 ^ 8 - 756 * eta ^ 4 * si2 ^ 2 - 241922 * eta ^ 2 * si2 ^ 4 - 1247420 * si2 ^ 6 + 14 * eta ^ 4 + 25816 * eta ^ 2 * si2 ^ 2 + 232185 * si2 ^ 4 - 1204 * eta ^ 2 - 25060 * si2 ^ 2 + 1190) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * sh * cos(0.3e1 * g) + sqrt((-eta ^ 2 + 1)) * (337500 * eta ^ 4 * si2 ^ 20 - 1800000 * eta ^ 4 * si2 ^ 18 - 675000 * eta ^ 2 * si2 ^ 20 + 4257000 * eta ^ 4 * si2 ^ 16 + 3600000 * eta ^ 2 * si2 ^ 18 + 337500 * si2 ^ 20 - 5871000 * eta ^ 4 * si2 ^ 14 - 8514000 * eta ^ 2 * si2 ^ 16 - 1800000 * si2 ^ 18 + 5226525 * eta ^ 4 * si2 ^ 12 + 11742000 * eta ^ 2 * si2 ^ 14 + 4257000 * si2 ^ 16 - 3141300 * eta ^ 4 * si2 ^ 10 - 10453050 * eta ^ 2 * si2 ^ 12 - 5871000 * si2 ^ 14 + 1294820 * eta ^ 4 * si2 ^ 8 + 6282600 * eta ^ 2 * si2 ^ 10 + 5226525 * si2 ^ 12 - 363460 * eta ^ 4 * si2 ^ 6 - 2589640 * eta ^ 2 * si2 ^ 8 - 3141300 * si2 ^ 10 + 67055 * eta ^ 4 * si2 ^ 4 + 726920 * eta ^ 2 * si2 ^ 6 + 1294820 * si2 ^ 8 - 7420 * eta ^ 4 * si2 ^ 2 - 134110 * eta ^ 2 * si2 ^ 4 - 363460 * si2 ^ 6 + 378 * eta ^ 4 + 14840 * eta ^ 2 * si2 ^ 2 + 67055 * si2 ^ 4 - 756 * eta ^ 2 - 7420 * si2 ^ 2 + 378) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * sh * cos(0.5e1 * g) - sqrt((-eta ^ 2 + 1)) * (742500 * eta ^ 4 * si2 ^ 22 - 4320000 * eta ^ 4 * si2 ^ 20 - 1485000 * eta ^ 2 * si2 ^ 22 + 11197500 * eta ^ 4 * si2 ^ 18 + 8550000 * eta ^ 2 * si2 ^ 20 + 562500 * si2 ^ 22 - 17043000 * eta ^ 4 * si2 ^ 16 - 21861000 * eta ^ 2 * si2 ^ 18 - 3150000 * si2 ^ 20 + 16902225 * eta ^ 4 * si2 ^ 14 + 32691000 * eta ^ 2 * si2 ^ 16 + 7807500 * si2 ^ 18 - 11456100 * eta ^ 4 * si2 ^ 12 - 31692050 * eta ^ 2 * si2 ^ 14 - 11268000 * si2 ^ 16 + 5411200 * eta ^ 4 * si2 ^ 10 + 20858600 * eta ^ 2 * si2 ^ 12 + 10479225 * si2 ^ 14 - 1780940 * eta ^ 4 * si2 ^ 8 - 9482280 * eta ^ 2 * si2 ^ 10 - 6560100 * si2 ^ 12 + 400512 * eta ^ 4 * si2 ^ 6 + 2966620 * eta ^ 2 * si2 ^ 8 + 2800200 * si2 ^ 10 - 58720 * eta ^ 4 * si2 ^ 4 - 622964 * eta ^ 2 * si2 ^ 6 - 805440 * si2 ^ 8 + 5068 * eta ^ 4 * si2 ^ 2 + 83024 * eta ^ 2 * si2 ^ 4 + 149620 * si2 ^ 6 - 196 * eta ^ 4 - 6244 * eta ^ 2 * si2 ^ 2 - 16240 * si2 ^ 4 + 196 * eta ^ 2 + 784 * si2 ^ 2) * (si2 ^ 2) / (640000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 2560000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 4352000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 4096000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 2329600 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 819200 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 174080 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 20480 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1024 * L ^ 8 * eta ^ 8) * ch * sin(g) - sqrt((-eta ^ 2 + 1)) * (67500 * eta ^ 4 * si2 ^ 20 - 360000 * eta ^ 4 * si2 ^ 18 - 855000 * eta ^ 2 * si2 ^ 20 + 846000 * eta ^ 4 * si2 ^ 16 + 4860000 * eta ^ 2 * si2 ^ 18 + 787500 * si2 ^ 20 - 1155000 * eta ^ 4 * si2 ^ 14 - 12204000 * eta ^ 2 * si2 ^ 16 - 4500000 * si2 ^ 18 + 1014725 * eta ^ 4 * si2 ^ 12 + 17820000 * eta ^ 2 * si2 ^ 14 + 11358000 * si2 ^ 16 - 598100 * eta ^ 4 * si2 ^ 10 - 16746650 * eta ^ 2 * si2 ^ 12 - 16665000 * si2 ^ 14 + 237820 * eta ^ 4 * si2 ^ 8 + 10577000 * eta ^ 2 * si2 ^ 10 + 15731925 * si2 ^ 12 - 61940 * eta ^ 4 * si2 ^ 6 - 4543400 * eta ^ 2 * si2 ^ 8 - 9978900 * si2 ^ 10 + 9737 * eta ^ 4 * si2 ^ 4 + 1309360 * eta ^ 2 * si2 ^ 6 + 4305580 * si2 ^ 8 - 756 * eta ^ 4 * si2 ^ 2 - 241922 * eta ^ 2 * si2 ^ 4 - 1247420 * si2 ^ 6 + 14 * eta ^ 4 + 25816 * eta ^ 2 * si2 ^ 2 + 232185 * si2 ^ 4 - 1204 * eta ^ 2 - 25060 * si2 ^ 2 + 1190) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * ch * sin(0.3e1 * g) + sqrt((-eta ^ 2 + 1)) * (337500 * eta ^ 4 * si2 ^ 20 - 1800000 * eta ^ 4 * si2 ^ 18 - 675000 * eta ^ 2 * si2 ^ 20 + 4257000 * eta ^ 4 * si2 ^ 16 + 3600000 * eta ^ 2 * si2 ^ 18 + 337500 * si2 ^ 20 - 5871000 * eta ^ 4 * si2 ^ 14 - 8514000 * eta ^ 2 * si2 ^ 16 - 1800000 * si2 ^ 18 + 5226525 * eta ^ 4 * si2 ^ 12 + 11742000 * eta ^ 2 * si2 ^ 14 + 4257000 * si2 ^ 16 - 3141300 * eta ^ 4 * si2 ^ 10 - 10453050 * eta ^ 2 * si2 ^ 12 - 5871000 * si2 ^ 14 + 1294820 * eta ^ 4 * si2 ^ 8 + 6282600 * eta ^ 2 * si2 ^ 10 + 5226525 * si2 ^ 12 - 363460 * eta ^ 4 * si2 ^ 6 - 2589640 * eta ^ 2 * si2 ^ 8 - 3141300 * si2 ^ 10 + 67055 * eta ^ 4 * si2 ^ 4 + 726920 * eta ^ 2 * si2 ^ 6 + 1294820 * si2 ^ 8 - 7420 * eta ^ 4 * si2 ^ 2 - 134110 * eta ^ 2 * si2 ^ 4 - 363460 * si2 ^ 6 + 378 * eta ^ 4 + 14840 * eta ^ 2 * si2 ^ 2 + 67055 * si2 ^ 4 - 756 * eta ^ 2 - 7420 * si2 ^ 2 + 378) * (si2 ^ 4) / (1280000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 5120000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 8704000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 8192000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 4659200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 1638400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 348160 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 40960 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 2048 * L ^ 8 * eta ^ 8) * ch * sin(0.5e1 * g)) * J ^ 2 * R__e ^ 4 * mu ^ 4;

lp2t21 = 0;
lp2t22 = ((162000 * eta ^ 7 * si2 ^ 18 - 472500 * eta ^ 6 * si2 ^ 18 - 810000 * eta ^ 7 * si2 ^ 16 - 3981000 * eta ^ 5 * si2 ^ 18 + 2443500 * eta ^ 6 * si2 ^ 16 - 4223500 * eta ^ 4 * si2 ^ 18 + 1657800 * eta ^ 7 * si2 ^ 14 + 19347000 * eta ^ 5 * si2 ^ 16 + 2676000 * eta ^ 3 * si2 ^ 18 - 5907150 * eta ^ 6 * si2 ^ 14 + 20088500 * eta ^ 4 * si2 ^ 16 + 1736500 * eta ^ 2 * si2 ^ 18 - 1771200 * eta ^ 7 * si2 ^ 12 - 41442900 * eta ^ 5 * si2 ^ 14 - 13064000 * eta ^ 3 * si2 ^ 16 + 1655000 * eta * si2 ^ 18 + 8677350 * eta ^ 6 * si2 ^ 12 - 41118350 * eta ^ 4 * si2 ^ 14 - 8179500 * eta ^ 2 * si2 ^ 16 + 2447500 * si2 ^ 18 + 1017720 * eta ^ 7 * si2 ^ 10 + 51429900 * eta ^ 5 * si2 ^ 12 + 29382400 * eta ^ 3 * si2 ^ 14 - 8033000 * eta * si2 ^ 16 - 8345340 * eta ^ 6 * si2 ^ 10 + 47300750 * eta ^ 4 * si2 ^ 12 + 17363350 * eta ^ 2 * si2 ^ 14 - 11792500 * si2 ^ 16 - 255960 * eta ^ 7 * si2 ^ 8 - 40751640 * eta ^ 5 * si2 ^ 10 - 39991200 * eta ^ 3 * si2 ^ 12 + 15981900 * eta * si2 ^ 14 + 5314230 * eta ^ 6 * si2 ^ 8 - 33492320 * eta ^ 4 * si2 ^ 10 - 21922550 * eta ^ 2 * si2 ^ 12 + 24082950 * si2 ^ 14 - 26412 * eta ^ 7 * si2 ^ 6 + 21339420 * eta ^ 5 * si2 ^ 8 + 35893520 * eta ^ 3 * si2 ^ 10 - 16624300 * eta * si2 ^ 12 - 2195469 * eta ^ 6 * si2 ^ 6 + 15014330 * eta ^ 4 * si2 ^ 8 + 18123900 * eta ^ 2 * si2 ^ 10 - 27098750 * si2 ^ 12 + 33024 * eta ^ 7 * si2 ^ 4 - 7353834 * eta ^ 5 * si2 ^ 6 - 21618160 * eta ^ 3 * si2 ^ 8 + 9308240 * eta * si2 ^ 10 + 559977 * eta ^ 6 * si2 ^ 4 - 4211091 * eta ^ 4 * si2 ^ 6 - 10085110 * eta ^ 2 * si2 ^ 8 + 18245920 * si2 ^ 10 - 7560 * eta ^ 7 * si2 ^ 2 + 1599330 * eta ^ 5 * si2 ^ 4 + 8567184 * eta ^ 3 * si2 ^ 6 - 2272020 * eta * si2 ^ 8 - 79533 * eta ^ 6 * si2 ^ 2 + 698611 * eta ^ 4 * si2 ^ 4 + 3723525 * eta ^ 2 * si2 ^ 6 - 7436730 * si2 ^ 8 + 588 * eta ^ 7 - 198210 * eta ^ 5 * si2 ^ 2 - 2121532 * eta ^ 3 * si2 ^ 4 - 247482 * eta * si2 ^ 6 + 4788 * eta ^ 6 - 59791 * eta ^ 4 * si2 ^ 2 - 866361 * eta ^ 2 * si2 ^ 4 + 1743579 * si2 ^ 6 + 10632 * eta ^ 5 + 295340 * eta ^ 3 * si2 ^ 2 + 291866 * eta * si2 ^ 4 + 1808 * eta ^ 4 + 114005 * eta ^ 2 * si2 ^ 2 - 194915 * si2 ^ 4 - 17556 * eta ^ 3 - 66018 * eta * si2 ^ 2 - 6428 * eta ^ 2 + 1767 * si2 ^ 2 + 5120 * eta + 1048) * (si2 ^ 2) / (96000 * L ^ 8 * eta ^ 10 * si2 ^ 12 + 192000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 288000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 96000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 576000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 345600 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 288000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 691200 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 211200 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 345600 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 422400 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 69120 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 211200 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 138240 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 11520 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 69120 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 23040 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 768 * L ^ 8 * eta ^ 10 - 11520 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1536 * L ^ 8 * eta ^ 9 + 768 * L ^ 8 * eta ^ 8) * sin((2 * g)) - (si2 ^ 4) * (3240000 * eta ^ 8 * si2 ^ 20 + 22590000 * eta ^ 7 * si2 ^ 20 - 19440000 * eta ^ 8 * si2 ^ 18 + 63090000 * eta ^ 6 * si2 ^ 20 - 133920000 * eta ^ 7 * si2 ^ 18 + 57510000 * eta ^ 5 * si2 ^ 20 + 51462000 * eta ^ 8 * si2 ^ 16 - 368880000 * eta ^ 6 * si2 ^ 18 - 115110000 * eta ^ 4 * si2 ^ 20 + 350257500 * eta ^ 7 * si2 ^ 16 - 330240000 * eta ^ 5 * si2 ^ 18 - 170310000 * eta ^ 3 * si2 ^ 20 - 79110000 * eta ^ 8 * si2 ^ 14 + 951338500 * eta ^ 6 * si2 ^ 16 + 676080000 * eta ^ 4 * si2 ^ 18 + 13590000 * eta ^ 2 * si2 ^ 20 - 531774000 * eta ^ 7 * si2 ^ 14 + 835373500 * eta ^ 5 * si2 ^ 16 + 988320000 * eta ^ 3 * si2 ^ 18 + 94050000 * eta * si2 ^ 20 + 78166800 * eta ^ 8 * si2 ^ 12 - 1423616000 * eta ^ 6 * si2 ^ 14 - 1751265500 * eta ^ 4 * si2 ^ 16 - 82320000 * eta ^ 2 * si2 ^ 18 + 31350000 * si2 ^ 20 + 518607900 * eta ^ 7 * si2 ^ 12 - 1223994000 * eta ^ 5 * si2 ^ 14 - 2528935500 * eta ^ 3 * si2 ^ 16 - 547200000 * eta * si2 ^ 18 - 51847200 * eta ^ 8 * si2 ^ 10 + 1367510500 * eta ^ 6 * si2 ^ 12 + 2631840000 * eta ^ 4 * si2 ^ 14 + 219715500 * eta ^ 2 * si2 ^ 16 - 182400000 * si2 ^ 18 - 339238800 * eta ^ 7 * si2 ^ 10 + 1148573500 * eta ^ 5 * si2 ^ 12 + 3753166000 * eta ^ 3 * si2 ^ 14 + 1404040500 * eta * si2 ^ 16 + 23369820 * eta ^ 8 * si2 ^ 8 - 880334800 * eta ^ 6 * si2 ^ 10 - 2538597500 * eta ^ 4 * si2 ^ 12 - 340008000 * eta ^ 2 * si2 ^ 14 + 468013500 * si2 ^ 16 + 150664875 * eta ^ 7 * si2 ^ 8 - 720213200 * eta ^ 5 * si2 ^ 10 - 3573516300 * eta ^ 3 * si2 ^ 12 - 2089878000 * eta * si2 ^ 14 - 7066260 * eta ^ 8 * si2 ^ 6 + 384405245 * eta ^ 6 * si2 ^ 8 + 1640782000 * eta ^ 4 * si2 ^ 10 + 337581900 * eta ^ 2 * si2 ^ 12 - 696626000 * si2 ^ 14 - 44852280 * eta ^ 7 * si2 ^ 6 + 305271875 * eta ^ 5 * si2 ^ 8 + 2278642000 * eta ^ 3 * si2 ^ 10 + 1996254900 * eta * si2 ^ 12 + 1371504 * eta ^ 8 * si2 ^ 4 - 112409500 * eta ^ 6 * si2 ^ 6 - 719224795 * eta ^ 4 * si2 ^ 8 - 224550000 * eta ^ 2 * si2 ^ 10 + 665418300 * si2 ^ 12 + 8567268 * eta ^ 7 * si2 ^ 4 - 86316480 * eta ^ 5 * si2 ^ 6 - 984777735 * eta ^ 3 * si2 ^ 8 - 1277430000 * eta * si2 ^ 10 - 154308 * eta ^ 8 * si2 ^ 2 + 21076892 * eta ^ 6 * si2 ^ 4 + 211088100 * eta ^ 4 * si2 ^ 6 + 101288655 * eta ^ 2 * si2 ^ 8 - 425810000 * si2 ^ 10 - 948774 * eta ^ 7 * si2 ^ 2 + 15584580 * eta ^ 5 * si2 ^ 4 + 284777000 * eta ^ 3 * si2 ^ 6 + 554251545 * eta * si2 ^ 8 + 7644 * eta ^ 8 - 2290582 * eta ^ 6 * si2 ^ 2 - 39713412 * eta ^ 4 * si2 ^ 4 - 30586020 * eta ^ 2 * si2 ^ 6 + 184750515 * si2 ^ 8 + 46311 * eta ^ 7 - 1624078 * eta ^ 5 * si2 ^ 2 - 52758388 * eta ^ 3 * si2 ^ 4 - 160975920 * eta * si2 ^ 6 + 109745 * eta ^ 6 + 4329050 * eta ^ 4 * si2 ^ 2 + 5918388 * eta ^ 2 * si2 ^ 4 - 53658640 * si2 ^ 6 + 74303 * eta ^ 5 + 5660430 * eta ^ 3 * si2 ^ 2 + 29964876 * eta * si2 ^ 4 - 207943 * eta ^ 4 - 663138 * eta ^ 2 * si2 ^ 2 + 9988292 * si2 ^ 4 - 267507 * eta ^ 3 - 3231450 * eta * si2 ^ 2 + 32715 * eta ^ 2 - 1077150 * si2 ^ 2 + 153549 * eta + 51183) / (3840000 * L ^ 8 * eta ^ 11 * si2 ^ 16 + 11520000 * L ^ 8 * eta ^ 10 * si2 ^ 16 - 15360000 * L ^ 8 * eta ^ 11 * si2 ^ 14 + 11520000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 46080000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 3840000 * L ^ 8 * eta ^ 8 * si2 ^ 16 + 26112000 * L ^ 8 * eta ^ 11 * si2 ^ 12 - 46080000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 78336000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 15360000 * L ^ 8 * eta ^ 8 * si2 ^ 14 - 24576000 * L ^ 8 * eta ^ 11 * si2 ^ 10 + 78336000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 73728000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 26112000 * L ^ 8 * eta ^ 8 * si2 ^ 12 + 13977600 * L ^ 8 * eta ^ 11 * si2 ^ 8 - 73728000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 41932800 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 24576000 * L ^ 8 * eta ^ 8 * si2 ^ 10 - 4915200 * L ^ 8 * eta ^ 11 * si2 ^ 6 + 41932800 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 14745600 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 13977600 * L ^ 8 * eta ^ 8 * si2 ^ 8 + 1044480 * L ^ 8 * eta ^ 11 * si2 ^ 4 - 14745600 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 3133440 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 4915200 * L ^ 8 * eta ^ 8 * si2 ^ 6 - 122880 * L ^ 8 * eta ^ 11 * si2 ^ 2 + 3133440 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 368640 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 1044480 * L ^ 8 * eta ^ 8 * si2 ^ 4 + 6144 * L ^ 8 * eta ^ 11 - 368640 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 18432 * L ^ 8 * eta ^ 10 - 122880 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 18432 * L ^ 8 * eta ^ 9 + 6144 * L ^ 8 * eta ^ 8) * sin((4 * g))) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t23 = (-(16200 * ci2 ^ 14 * eta ^ 5 - 127800 * ci2 ^ 14 * eta ^ 4 - 78000 * ci2 ^ 14 * eta ^ 3 - 56700 * ci2 ^ 12 * eta ^ 5 + 141200 * ci2 ^ 14 * eta ^ 2 + 447300 * ci2 ^ 12 * eta ^ 4 - 40600 * ci2 ^ 14 * eta + 273000 * ci2 ^ 12 * eta ^ 3 + 73440 * ci2 ^ 10 * eta ^ 5 + 89000 * ci2 ^ 14 - 494200 * ci2 ^ 12 * eta ^ 2 - 683040 * ci2 ^ 10 * eta ^ 4 + 142100 * ci2 ^ 12 * eta - 381480 * ci2 ^ 10 * eta ^ 3 - 41850 * ci2 ^ 8 * eta ^ 5 - 311500 * ci2 ^ 12 + 782680 * ci2 ^ 10 * eta ^ 2 + 589350 * ci2 ^ 8 * eta ^ 4 - 224120 * ci2 ^ 10 * eta + 271200 * ci2 ^ 8 * eta ^ 3 + 7164 * ci2 ^ 6 * eta ^ 5 + 432520 * ci2 ^ 10 - 721200 * ci2 ^ 8 * eta ^ 2 - 307812 * ci2 ^ 6 * eta ^ 4 + 205050 * ci2 ^ 8 * eta - 101904 * ci2 ^ 6 * eta ^ 3 + 2754 * ci2 ^ 4 * eta ^ 5 - 302550 * ci2 ^ 8 + 407920 * ci2 ^ 6 * eta ^ 2 + 96018 * ci2 ^ 4 * eta ^ 4 - 115436 * ci2 ^ 6 * eta + 18156 * ci2 ^ 4 * eta ^ 3 - 1302 * ci2 ^ 2 * eta ^ 5 + 110068 * ci2 ^ 6 - 137780 * ci2 ^ 4 * eta ^ 2 - 16326 * ci2 ^ 2 * eta ^ 4 + 39154 * ci2 ^ 4 * eta - 768 * ci2 ^ 2 * eta ^ 3 + 147 * eta ^ 5 - 18302 * ci2 ^ 4 + 25168 * ci2 ^ 2 * eta ^ 2 + 1155 * eta ^ 4 - 7274 * ci2 ^ 2 * eta - 102 * eta ^ 3 + 502 * ci2 ^ 2 - 1894 * eta ^ 2 + 563 * eta + 131) * si2 / (38400 * L ^ 8 * ci2 ^ 9 * eta ^ 9 + 38400 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 76800 * L ^ 8 * ci2 ^ 7 * eta ^ 9 - 76800 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 53760 * L ^ 8 * ci2 ^ 5 * eta ^ 9 + 53760 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 15360 * L ^ 8 * ci2 ^ 3 * eta ^ 9 - 15360 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 1536 * L ^ 8 * ci2 * eta ^ 9 + 1536 * L ^ 8 * ci2 * eta ^ 8) * ch * cos((2 * g)) + (324000 * ci2 ^ 16 * eta ^ 6 + 1608000 * ci2 ^ 16 * eta ^ 5 + 1356000 * ci2 ^ 16 * eta ^ 4 - 1458000 * ci2 ^ 14 * eta ^ 6 - 4272000 * ci2 ^ 16 * eta ^ 3 - 7236000 * ci2 ^ 14 * eta ^ 5 - 2436000 * ci2 ^ 16 * eta ^ 2 - 6102000 * ci2 ^ 14 * eta ^ 4 + 2813400 * ci2 ^ 12 * eta ^ 6 + 2280000 * ci2 ^ 16 * eta + 19224000 * ci2 ^ 14 * eta ^ 3 + 13921200 * ci2 ^ 12 * eta ^ 5 + 1140000 * ci2 ^ 16 + 10962000 * ci2 ^ 14 * eta ^ 2 + 11676200 * ci2 ^ 12 * eta ^ 4 - 3042900 * ci2 ^ 10 * eta ^ 6 - 10260000 * ci2 ^ 14 * eta - 36943200 * ci2 ^ 12 * eta ^ 3 - 14956200 * ci2 ^ 10 * eta ^ 5 - 5130000 * ci2 ^ 14 - 21037400 * ci2 ^ 12 * eta ^ 2 - 12390700 * ci2 ^ 10 * eta ^ 4 + 2018700 * ci2 ^ 8 * eta ^ 6 + 19713200 * ci2 ^ 12 * eta + 39589200 * ci2 ^ 10 * eta ^ 3 + 9812760 * ci2 ^ 8 * eta ^ 5 + 9856600 * ci2 ^ 12 + 22474900 * ci2 ^ 10 * eta ^ 2 + 7962740 * ci2 ^ 8 * eta ^ 4 - 841500 * ci2 ^ 6 * eta ^ 6 - 21116200 * ci2 ^ 10 * eta - 25865520 * ci2 ^ 8 * eta ^ 3 - 4025400 * ci2 ^ 6 * eta ^ 5 - 10558100 * ci2 ^ 10 - 14608460 * ci2 ^ 8 * eta ^ 2 - 3168100 * ci2 ^ 6 * eta ^ 4 + 215322 * ci2 ^ 4 * eta ^ 6 + 13786520 * ci2 ^ 8 * eta + 10546800 * ci2 ^ 6 * eta ^ 3 + 1008180 * ci2 ^ 4 * eta ^ 5 + 6893260 * ci2 ^ 8 + 5911900 * ci2 ^ 6 * eta ^ 2 + 761062 * ci2 ^ 4 * eta ^ 4 - 30933 * ci2 ^ 2 * eta ^ 6 - 5615800 * ci2 ^ 6 * eta - 2620776 * ci2 ^ 4 * eta ^ 3 - 140970 * ci2 ^ 2 * eta ^ 5 - 2807900 * ci2 ^ 6 - 1454170 * ci2 ^ 4 * eta ^ 2 - 100843 * ci2 ^ 2 * eta ^ 4 + 1911 * eta ^ 6 + 1393588 * ci2 ^ 4 * eta + 362964 * ci2 ^ 2 * eta ^ 3 + 8430 * eta ^ 5 + 696794 * ci2 ^ 4 + 198805 * ci2 ^ 2 * eta ^ 2 + 5641 * eta ^ 4 - 192682 * ci2 ^ 2 * eta - 21468 * eta ^ 3 - 96341 * ci2 ^ 2 - 11575 * eta ^ 2 + 11374 * eta + 5687) * ci2 * si2 / (768000 * L ^ 8 * ci2 ^ 12 * eta ^ 10 + 1536000 * L ^ 8 * ci2 ^ 12 * eta ^ 9 + 768000 * L ^ 8 * ci2 ^ 12 * eta ^ 8 - 2304000 * L ^ 8 * ci2 ^ 10 * eta ^ 10 - 4608000 * L ^ 8 * ci2 ^ 10 * eta ^ 9 - 2304000 * L ^ 8 * ci2 ^ 10 * eta ^ 8 + 2764800 * L ^ 8 * ci2 ^ 8 * eta ^ 10 + 5529600 * L ^ 8 * ci2 ^ 8 * eta ^ 9 + 2764800 * L ^ 8 * ci2 ^ 8 * eta ^ 8 - 1689600 * L ^ 8 * ci2 ^ 6 * eta ^ 10 - 3379200 * L ^ 8 * ci2 ^ 6 * eta ^ 9 - 1689600 * L ^ 8 * ci2 ^ 6 * eta ^ 8 + 552960 * L ^ 8 * ci2 ^ 4 * eta ^ 10 + 1105920 * L ^ 8 * ci2 ^ 4 * eta ^ 9 + 552960 * L ^ 8 * ci2 ^ 4 * eta ^ 8 - 92160 * L ^ 8 * ci2 ^ 2 * eta ^ 10 - 184320 * L ^ 8 * ci2 ^ 2 * eta ^ 9 - 92160 * L ^ 8 * ci2 ^ 2 * eta ^ 8 + 6144 * L ^ 8 * eta ^ 10 + 12288 * L ^ 8 * eta ^ 9 + 6144 * L ^ 8 * eta ^ 8) * ch * cos((4 * g)) + (162000 * ci2 ^ 18 * eta ^ 5 - 1278000 * ci2 ^ 18 * eta ^ 4 - 780000 * ci2 ^ 18 * eta ^ 3 - 729000 * ci2 ^ 16 * eta ^ 5 + 1412000 * ci2 ^ 18 * eta ^ 2 + 5751000 * ci2 ^ 16 * eta ^ 4 - 406000 * ci2 ^ 18 * eta + 3510000 * ci2 ^ 16 * eta ^ 3 + 1363500 * ci2 ^ 14 * eta ^ 5 + 890000 * ci2 ^ 18 - 6354000 * ci2 ^ 16 * eta ^ 2 - 11274900 * ci2 ^ 14 * eta ^ 4 + 1827000 * ci2 ^ 16 * eta - 6704400 * ci2 ^ 14 * eta ^ 3 - 1370250 * ci2 ^ 12 * eta ^ 5 - 4005000 * ci2 ^ 16 + 12597200 * ci2 ^ 14 * eta ^ 2 + 12624150 * ci2 ^ 12 * eta ^ 4 - 3617500 * ci2 ^ 14 * eta + 7085400 * ci2 ^ 12 * eta ^ 3 + 791370 * ci2 ^ 10 * eta ^ 5 + 7636100 * ci2 ^ 14 - 14438200 * ci2 ^ 12 * eta ^ 2 - 8886870 * ci2 ^ 10 * eta ^ 4 + 4135250 * ci2 ^ 12 * eta - 4521240 * ci2 ^ 10 * eta ^ 3 - 253800 * ci2 ^ 8 * eta ^ 5 - 8036350 * ci2 ^ 12 + 10533240 * ci2 ^ 10 * eta ^ 2 + 4075800 * ci2 ^ 8 * eta ^ 4 - 3005010 * ci2 ^ 10 * eta + 1779600 * ci2 ^ 8 * eta ^ 3 + 34428 * ci2 ^ 6 * eta ^ 5 + 5088510 * ci2 ^ 10 - 5063600 * ci2 ^ 8 * eta ^ 2 - 1217604 * ci2 ^ 6 * eta ^ 4 + 1437400 * ci2 ^ 8 * eta - 419988 * ci2 ^ 6 * eta ^ 3 + 3033 * ci2 ^ 4 * eta ^ 5 - 1975400 * ci2 ^ 8 + 1600860 * ci2 ^ 6 * eta ^ 2 + 228681 * ci2 ^ 4 * eta ^ 4 - 452232 * ci2 ^ 6 * eta + 53082 * ci2 ^ 4 * eta ^ 3 - 1575 * ci2 ^ 2 * eta ^ 5 + 454536 * ci2 ^ 6 - 320790 * ci2 ^ 4 * eta ^ 2 - 24567 * ci2 ^ 2 * eta ^ 4 + 90573 * ci2 ^ 4 * eta - 2250 * ci2 ^ 2 * eta ^ 3 + 147 * eta ^ 5 - 54579 * ci2 ^ 4 + 37078 * ci2 ^ 2 * eta ^ 2 + 1155 * eta ^ 4 - 10607 * ci2 ^ 2 * eta - 102 * eta ^ 3 + 1921 * ci2 ^ 2 - 1894 * eta ^ 2 + 563 * eta + 131) * si2 / (192000 * L ^ 8 * ci2 ^ 13 * eta ^ 9 + 192000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 576000 * L ^ 8 * ci2 ^ 11 * eta ^ 9 - 576000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 691200 * L ^ 8 * ci2 ^ 9 * eta ^ 9 + 691200 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 422400 * L ^ 8 * ci2 ^ 7 * eta ^ 9 - 422400 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 138240 * L ^ 8 * ci2 ^ 5 * eta ^ 9 + 138240 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 23040 * L ^ 8 * ci2 ^ 3 * eta ^ 9 - 23040 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 1536 * L ^ 8 * ci2 * eta ^ 9 + 1536 * L ^ 8 * ci2 * eta ^ 8) * sh * sin((2 * g)) - si2 * ci2 * (3240000 * ci2 ^ 20 * eta ^ 6 + 16080000 * ci2 ^ 20 * eta ^ 5 + 13560000 * ci2 ^ 20 * eta ^ 4 - 17820000 * ci2 ^ 18 * eta ^ 6 - 42720000 * ci2 ^ 20 * eta ^ 3 - 88440000 * ci2 ^ 18 * eta ^ 5 - 24360000 * ci2 ^ 20 * eta ^ 2 - 74580000 * ci2 ^ 18 * eta ^ 4 + 43227000 * ci2 ^ 16 * eta ^ 6 + 22800000 * ci2 ^ 20 * eta + 234960000 * ci2 ^ 18 * eta ^ 3 + 214326000 * ci2 ^ 16 * eta ^ 5 + 11400000 * ci2 ^ 20 + 133980000 * ci2 ^ 18 * eta ^ 2 + 180421000 * ci2 ^ 16 * eta ^ 4 - 60871500 * ci2 ^ 14 * eta ^ 6 - 125400000 * ci2 ^ 18 * eta - 569196000 * ci2 ^ 16 * eta ^ 3 - 301167000 * ci2 ^ 14 * eta ^ 5 - 62700000 * ci2 ^ 18 - 324427000 * ci2 ^ 16 * eta ^ 2 - 252544500 * ci2 ^ 14 * eta ^ 4 + 55101600 * ci2 ^ 12 * eta ^ 6 + 303766000 * ci2 ^ 16 * eta + 799182000 * ci2 ^ 14 * eta ^ 3 + 271636800 * ci2 ^ 12 * eta ^ 5 + 151883000 * ci2 ^ 16 + 455071500 * ci2 ^ 14 * eta ^ 2 + 226280800 * ci2 ^ 12 * eta ^ 4 - 33528600 * ci2 ^ 10 * eta ^ 6 - 426447000 * ci2 ^ 14 * eta - 719836800 * ci2 ^ 12 * eta ^ 3 - 164362800 * ci2 ^ 10 * eta ^ 5 - 213223500 * ci2 ^ 14 - 409213600 * ci2 ^ 12 * eta ^ 2 - 135501800 * ci2 ^ 10 * eta ^ 4 + 13918290 * ci2 ^ 8 * eta ^ 6 + 384020800 * ci2 ^ 12 * eta + 434632800 * ci2 ^ 10 * eta ^ 3 + 67657380 * ci2 ^ 8 * eta ^ 5 + 192010400 * ci2 ^ 12 + 246440600 * ci2 ^ 10 * eta ^ 2 + 54897710 * ci2 ^ 8 * eta ^ 4 - 3907725 * ci2 ^ 6 * eta ^ 6 - 231786800 * ci2 ^ 10 * eta - 178334280 * ci2 ^ 8 * eta ^ 3 - 18759450 * ci2 ^ 6 * eta ^ 5 - 115893400 * ci2 ^ 10 - 100718930 * ci2 ^ 8 * eta ^ 2 - 14860275 * ci2 ^ 6 * eta ^ 4 + 714624 * ci2 ^ 4 * eta ^ 6 + 95053220 * ci2 ^ 8 * eta + 49211700 * ci2 ^ 6 * eta ^ 3 + 3367680 * ci2 ^ 4 * eta ^ 5 + 47526610 * ci2 ^ 8 + 27629325 * ci2 ^ 6 * eta ^ 2 + 2573184 * ci2 ^ 4 * eta ^ 4 - 77511 * ci2 ^ 2 * eta ^ 6 - 26209050 * ci2 ^ 6 * eta - 8773632 * ci2 ^ 4 * eta ^ 3 - 355470 * ci2 ^ 2 * eta ^ 5 - 13104525 * ci2 ^ 6 - 4882560 * ci2 ^ 4 * eta ^ 2 - 257401 * ci2 ^ 2 * eta ^ 4 + 3822 * eta ^ 6 + 4667136 * ci2 ^ 4 * eta + 917148 * ci2 ^ 2 * eta ^ 3 + 16860 * eta ^ 5 + 2333568 * ci2 ^ 4 + 503815 * ci2 ^ 2 * eta ^ 2 + 11282 * eta ^ 4 - 487054 * ci2 ^ 2 * eta - 42936 * eta ^ 3 - 243527 * ci2 ^ 2 - 23150 * eta ^ 2 + 22748 * eta + 11374) / (7680000 * L ^ 8 * ci2 ^ 16 * eta ^ 10 + 15360000 * L ^ 8 * ci2 ^ 16 * eta ^ 9 + 7680000 * L ^ 8 * ci2 ^ 16 * eta ^ 8 - 30720000 * L ^ 8 * ci2 ^ 14 * eta ^ 10 - 61440000 * L ^ 8 * ci2 ^ 14 * eta ^ 9 - 30720000 * L ^ 8 * ci2 ^ 14 * eta ^ 8 + 52224000 * L ^ 8 * ci2 ^ 12 * eta ^ 10 + 104448000 * L ^ 8 * ci2 ^ 12 * eta ^ 9 + 52224000 * L ^ 8 * ci2 ^ 12 * eta ^ 8 - 49152000 * L ^ 8 * ci2 ^ 10 * eta ^ 10 - 98304000 * L ^ 8 * ci2 ^ 10 * eta ^ 9 - 49152000 * L ^ 8 * ci2 ^ 10 * eta ^ 8 + 27955200 * L ^ 8 * ci2 ^ 8 * eta ^ 10 + 55910400 * L ^ 8 * ci2 ^ 8 * eta ^ 9 + 27955200 * L ^ 8 * ci2 ^ 8 * eta ^ 8 - 9830400 * L ^ 8 * ci2 ^ 6 * eta ^ 10 - 19660800 * L ^ 8 * ci2 ^ 6 * eta ^ 9 - 9830400 * L ^ 8 * ci2 ^ 6 * eta ^ 8 + 2088960 * L ^ 8 * ci2 ^ 4 * eta ^ 10 + 4177920 * L ^ 8 * ci2 ^ 4 * eta ^ 9 + 2088960 * L ^ 8 * ci2 ^ 4 * eta ^ 8 - 245760 * L ^ 8 * ci2 ^ 2 * eta ^ 10 - 491520 * L ^ 8 * ci2 ^ 2 * eta ^ 9 - 245760 * L ^ 8 * ci2 ^ 2 * eta ^ 8 + 12288 * L ^ 8 * eta ^ 10 + 24576 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * sh * sin((4 * g))) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t24 = (-(16200 * ci2 ^ 14 * eta ^ 5 - 127800 * ci2 ^ 14 * eta ^ 4 - 78000 * ci2 ^ 14 * eta ^ 3 - 56700 * ci2 ^ 12 * eta ^ 5 + 141200 * ci2 ^ 14 * eta ^ 2 + 447300 * ci2 ^ 12 * eta ^ 4 - 40600 * ci2 ^ 14 * eta + 273000 * ci2 ^ 12 * eta ^ 3 + 73440 * ci2 ^ 10 * eta ^ 5 + 89000 * ci2 ^ 14 - 494200 * ci2 ^ 12 * eta ^ 2 - 683040 * ci2 ^ 10 * eta ^ 4 + 142100 * ci2 ^ 12 * eta - 381480 * ci2 ^ 10 * eta ^ 3 - 41850 * ci2 ^ 8 * eta ^ 5 - 311500 * ci2 ^ 12 + 782680 * ci2 ^ 10 * eta ^ 2 + 589350 * ci2 ^ 8 * eta ^ 4 - 224120 * ci2 ^ 10 * eta + 271200 * ci2 ^ 8 * eta ^ 3 + 7164 * ci2 ^ 6 * eta ^ 5 + 432520 * ci2 ^ 10 - 721200 * ci2 ^ 8 * eta ^ 2 - 307812 * ci2 ^ 6 * eta ^ 4 + 205050 * ci2 ^ 8 * eta - 101904 * ci2 ^ 6 * eta ^ 3 + 2754 * ci2 ^ 4 * eta ^ 5 - 302550 * ci2 ^ 8 + 407920 * ci2 ^ 6 * eta ^ 2 + 96018 * ci2 ^ 4 * eta ^ 4 - 115436 * ci2 ^ 6 * eta + 18156 * ci2 ^ 4 * eta ^ 3 - 1302 * ci2 ^ 2 * eta ^ 5 + 110068 * ci2 ^ 6 - 137780 * ci2 ^ 4 * eta ^ 2 - 16326 * ci2 ^ 2 * eta ^ 4 + 39154 * ci2 ^ 4 * eta - 768 * ci2 ^ 2 * eta ^ 3 + 147 * eta ^ 5 - 18302 * ci2 ^ 4 + 25168 * ci2 ^ 2 * eta ^ 2 + 1155 * eta ^ 4 - 7274 * ci2 ^ 2 * eta - 102 * eta ^ 3 + 502 * ci2 ^ 2 - 1894 * eta ^ 2 + 563 * eta + 131) * si2 / (38400 * L ^ 8 * ci2 ^ 9 * eta ^ 9 + 38400 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 76800 * L ^ 8 * ci2 ^ 7 * eta ^ 9 - 76800 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 53760 * L ^ 8 * ci2 ^ 5 * eta ^ 9 + 53760 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 15360 * L ^ 8 * ci2 ^ 3 * eta ^ 9 - 15360 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 1536 * L ^ 8 * ci2 * eta ^ 9 + 1536 * L ^ 8 * ci2 * eta ^ 8) * sh * cos((2 * g)) + (324000 * ci2 ^ 16 * eta ^ 6 + 1608000 * ci2 ^ 16 * eta ^ 5 + 1356000 * ci2 ^ 16 * eta ^ 4 - 1458000 * ci2 ^ 14 * eta ^ 6 - 4272000 * ci2 ^ 16 * eta ^ 3 - 7236000 * ci2 ^ 14 * eta ^ 5 - 2436000 * ci2 ^ 16 * eta ^ 2 - 6102000 * ci2 ^ 14 * eta ^ 4 + 2813400 * ci2 ^ 12 * eta ^ 6 + 2280000 * ci2 ^ 16 * eta + 19224000 * ci2 ^ 14 * eta ^ 3 + 13921200 * ci2 ^ 12 * eta ^ 5 + 1140000 * ci2 ^ 16 + 10962000 * ci2 ^ 14 * eta ^ 2 + 11676200 * ci2 ^ 12 * eta ^ 4 - 3042900 * ci2 ^ 10 * eta ^ 6 - 10260000 * ci2 ^ 14 * eta - 36943200 * ci2 ^ 12 * eta ^ 3 - 14956200 * ci2 ^ 10 * eta ^ 5 - 5130000 * ci2 ^ 14 - 21037400 * ci2 ^ 12 * eta ^ 2 - 12390700 * ci2 ^ 10 * eta ^ 4 + 2018700 * ci2 ^ 8 * eta ^ 6 + 19713200 * ci2 ^ 12 * eta + 39589200 * ci2 ^ 10 * eta ^ 3 + 9812760 * ci2 ^ 8 * eta ^ 5 + 9856600 * ci2 ^ 12 + 22474900 * ci2 ^ 10 * eta ^ 2 + 7962740 * ci2 ^ 8 * eta ^ 4 - 841500 * ci2 ^ 6 * eta ^ 6 - 21116200 * ci2 ^ 10 * eta - 25865520 * ci2 ^ 8 * eta ^ 3 - 4025400 * ci2 ^ 6 * eta ^ 5 - 10558100 * ci2 ^ 10 - 14608460 * ci2 ^ 8 * eta ^ 2 - 3168100 * ci2 ^ 6 * eta ^ 4 + 215322 * ci2 ^ 4 * eta ^ 6 + 13786520 * ci2 ^ 8 * eta + 10546800 * ci2 ^ 6 * eta ^ 3 + 1008180 * ci2 ^ 4 * eta ^ 5 + 6893260 * ci2 ^ 8 + 5911900 * ci2 ^ 6 * eta ^ 2 + 761062 * ci2 ^ 4 * eta ^ 4 - 30933 * ci2 ^ 2 * eta ^ 6 - 5615800 * ci2 ^ 6 * eta - 2620776 * ci2 ^ 4 * eta ^ 3 - 140970 * ci2 ^ 2 * eta ^ 5 - 2807900 * ci2 ^ 6 - 1454170 * ci2 ^ 4 * eta ^ 2 - 100843 * ci2 ^ 2 * eta ^ 4 + 1911 * eta ^ 6 + 1393588 * ci2 ^ 4 * eta + 362964 * ci2 ^ 2 * eta ^ 3 + 8430 * eta ^ 5 + 696794 * ci2 ^ 4 + 198805 * ci2 ^ 2 * eta ^ 2 + 5641 * eta ^ 4 - 192682 * ci2 ^ 2 * eta - 21468 * eta ^ 3 - 96341 * ci2 ^ 2 - 11575 * eta ^ 2 + 11374 * eta + 5687) * ci2 * si2 / (768000 * L ^ 8 * ci2 ^ 12 * eta ^ 10 + 1536000 * L ^ 8 * ci2 ^ 12 * eta ^ 9 + 768000 * L ^ 8 * ci2 ^ 12 * eta ^ 8 - 2304000 * L ^ 8 * ci2 ^ 10 * eta ^ 10 - 4608000 * L ^ 8 * ci2 ^ 10 * eta ^ 9 - 2304000 * L ^ 8 * ci2 ^ 10 * eta ^ 8 + 2764800 * L ^ 8 * ci2 ^ 8 * eta ^ 10 + 5529600 * L ^ 8 * ci2 ^ 8 * eta ^ 9 + 2764800 * L ^ 8 * ci2 ^ 8 * eta ^ 8 - 1689600 * L ^ 8 * ci2 ^ 6 * eta ^ 10 - 3379200 * L ^ 8 * ci2 ^ 6 * eta ^ 9 - 1689600 * L ^ 8 * ci2 ^ 6 * eta ^ 8 + 552960 * L ^ 8 * ci2 ^ 4 * eta ^ 10 + 1105920 * L ^ 8 * ci2 ^ 4 * eta ^ 9 + 552960 * L ^ 8 * ci2 ^ 4 * eta ^ 8 - 92160 * L ^ 8 * ci2 ^ 2 * eta ^ 10 - 184320 * L ^ 8 * ci2 ^ 2 * eta ^ 9 - 92160 * L ^ 8 * ci2 ^ 2 * eta ^ 8 + 6144 * L ^ 8 * eta ^ 10 + 12288 * L ^ 8 * eta ^ 9 + 6144 * L ^ 8 * eta ^ 8) * sh * cos((4 * g)) - (162000 * ci2 ^ 18 * eta ^ 5 - 1278000 * ci2 ^ 18 * eta ^ 4 - 780000 * ci2 ^ 18 * eta ^ 3 - 729000 * ci2 ^ 16 * eta ^ 5 + 1412000 * ci2 ^ 18 * eta ^ 2 + 5751000 * ci2 ^ 16 * eta ^ 4 - 406000 * ci2 ^ 18 * eta + 3510000 * ci2 ^ 16 * eta ^ 3 + 1363500 * ci2 ^ 14 * eta ^ 5 + 890000 * ci2 ^ 18 - 6354000 * ci2 ^ 16 * eta ^ 2 - 11274900 * ci2 ^ 14 * eta ^ 4 + 1827000 * ci2 ^ 16 * eta - 6704400 * ci2 ^ 14 * eta ^ 3 - 1370250 * ci2 ^ 12 * eta ^ 5 - 4005000 * ci2 ^ 16 + 12597200 * ci2 ^ 14 * eta ^ 2 + 12624150 * ci2 ^ 12 * eta ^ 4 - 3617500 * ci2 ^ 14 * eta + 7085400 * ci2 ^ 12 * eta ^ 3 + 791370 * ci2 ^ 10 * eta ^ 5 + 7636100 * ci2 ^ 14 - 14438200 * ci2 ^ 12 * eta ^ 2 - 8886870 * ci2 ^ 10 * eta ^ 4 + 4135250 * ci2 ^ 12 * eta - 4521240 * ci2 ^ 10 * eta ^ 3 - 253800 * ci2 ^ 8 * eta ^ 5 - 8036350 * ci2 ^ 12 + 10533240 * ci2 ^ 10 * eta ^ 2 + 4075800 * ci2 ^ 8 * eta ^ 4 - 3005010 * ci2 ^ 10 * eta + 1779600 * ci2 ^ 8 * eta ^ 3 + 34428 * ci2 ^ 6 * eta ^ 5 + 5088510 * ci2 ^ 10 - 5063600 * ci2 ^ 8 * eta ^ 2 - 1217604 * ci2 ^ 6 * eta ^ 4 + 1437400 * ci2 ^ 8 * eta - 419988 * ci2 ^ 6 * eta ^ 3 + 3033 * ci2 ^ 4 * eta ^ 5 - 1975400 * ci2 ^ 8 + 1600860 * ci2 ^ 6 * eta ^ 2 + 228681 * ci2 ^ 4 * eta ^ 4 - 452232 * ci2 ^ 6 * eta + 53082 * ci2 ^ 4 * eta ^ 3 - 1575 * ci2 ^ 2 * eta ^ 5 + 454536 * ci2 ^ 6 - 320790 * ci2 ^ 4 * eta ^ 2 - 24567 * ci2 ^ 2 * eta ^ 4 + 90573 * ci2 ^ 4 * eta - 2250 * ci2 ^ 2 * eta ^ 3 + 147 * eta ^ 5 - 54579 * ci2 ^ 4 + 37078 * ci2 ^ 2 * eta ^ 2 + 1155 * eta ^ 4 - 10607 * ci2 ^ 2 * eta - 102 * eta ^ 3 + 1921 * ci2 ^ 2 - 1894 * eta ^ 2 + 563 * eta + 131) * si2 / (192000 * L ^ 8 * ci2 ^ 13 * eta ^ 9 + 192000 * L ^ 8 * ci2 ^ 13 * eta ^ 8 - 576000 * L ^ 8 * ci2 ^ 11 * eta ^ 9 - 576000 * L ^ 8 * ci2 ^ 11 * eta ^ 8 + 691200 * L ^ 8 * ci2 ^ 9 * eta ^ 9 + 691200 * L ^ 8 * ci2 ^ 9 * eta ^ 8 - 422400 * L ^ 8 * ci2 ^ 7 * eta ^ 9 - 422400 * L ^ 8 * ci2 ^ 7 * eta ^ 8 + 138240 * L ^ 8 * ci2 ^ 5 * eta ^ 9 + 138240 * L ^ 8 * ci2 ^ 5 * eta ^ 8 - 23040 * L ^ 8 * ci2 ^ 3 * eta ^ 9 - 23040 * L ^ 8 * ci2 ^ 3 * eta ^ 8 + 1536 * L ^ 8 * ci2 * eta ^ 9 + 1536 * L ^ 8 * ci2 * eta ^ 8) * ch * sin((2 * g)) + si2 * ci2 * (3240000 * ci2 ^ 20 * eta ^ 6 + 16080000 * ci2 ^ 20 * eta ^ 5 + 13560000 * ci2 ^ 20 * eta ^ 4 - 17820000 * ci2 ^ 18 * eta ^ 6 - 42720000 * ci2 ^ 20 * eta ^ 3 - 88440000 * ci2 ^ 18 * eta ^ 5 - 24360000 * ci2 ^ 20 * eta ^ 2 - 74580000 * ci2 ^ 18 * eta ^ 4 + 43227000 * ci2 ^ 16 * eta ^ 6 + 22800000 * ci2 ^ 20 * eta + 234960000 * ci2 ^ 18 * eta ^ 3 + 214326000 * ci2 ^ 16 * eta ^ 5 + 11400000 * ci2 ^ 20 + 133980000 * ci2 ^ 18 * eta ^ 2 + 180421000 * ci2 ^ 16 * eta ^ 4 - 60871500 * ci2 ^ 14 * eta ^ 6 - 125400000 * ci2 ^ 18 * eta - 569196000 * ci2 ^ 16 * eta ^ 3 - 301167000 * ci2 ^ 14 * eta ^ 5 - 62700000 * ci2 ^ 18 - 324427000 * ci2 ^ 16 * eta ^ 2 - 252544500 * ci2 ^ 14 * eta ^ 4 + 55101600 * ci2 ^ 12 * eta ^ 6 + 303766000 * ci2 ^ 16 * eta + 799182000 * ci2 ^ 14 * eta ^ 3 + 271636800 * ci2 ^ 12 * eta ^ 5 + 151883000 * ci2 ^ 16 + 455071500 * ci2 ^ 14 * eta ^ 2 + 226280800 * ci2 ^ 12 * eta ^ 4 - 33528600 * ci2 ^ 10 * eta ^ 6 - 426447000 * ci2 ^ 14 * eta - 719836800 * ci2 ^ 12 * eta ^ 3 - 164362800 * ci2 ^ 10 * eta ^ 5 - 213223500 * ci2 ^ 14 - 409213600 * ci2 ^ 12 * eta ^ 2 - 135501800 * ci2 ^ 10 * eta ^ 4 + 13918290 * ci2 ^ 8 * eta ^ 6 + 384020800 * ci2 ^ 12 * eta + 434632800 * ci2 ^ 10 * eta ^ 3 + 67657380 * ci2 ^ 8 * eta ^ 5 + 192010400 * ci2 ^ 12 + 246440600 * ci2 ^ 10 * eta ^ 2 + 54897710 * ci2 ^ 8 * eta ^ 4 - 3907725 * ci2 ^ 6 * eta ^ 6 - 231786800 * ci2 ^ 10 * eta - 178334280 * ci2 ^ 8 * eta ^ 3 - 18759450 * ci2 ^ 6 * eta ^ 5 - 115893400 * ci2 ^ 10 - 100718930 * ci2 ^ 8 * eta ^ 2 - 14860275 * ci2 ^ 6 * eta ^ 4 + 714624 * ci2 ^ 4 * eta ^ 6 + 95053220 * ci2 ^ 8 * eta + 49211700 * ci2 ^ 6 * eta ^ 3 + 3367680 * ci2 ^ 4 * eta ^ 5 + 47526610 * ci2 ^ 8 + 27629325 * ci2 ^ 6 * eta ^ 2 + 2573184 * ci2 ^ 4 * eta ^ 4 - 77511 * ci2 ^ 2 * eta ^ 6 - 26209050 * ci2 ^ 6 * eta - 8773632 * ci2 ^ 4 * eta ^ 3 - 355470 * ci2 ^ 2 * eta ^ 5 - 13104525 * ci2 ^ 6 - 4882560 * ci2 ^ 4 * eta ^ 2 - 257401 * ci2 ^ 2 * eta ^ 4 + 3822 * eta ^ 6 + 4667136 * ci2 ^ 4 * eta + 917148 * ci2 ^ 2 * eta ^ 3 + 16860 * eta ^ 5 + 2333568 * ci2 ^ 4 + 503815 * ci2 ^ 2 * eta ^ 2 + 11282 * eta ^ 4 - 487054 * ci2 ^ 2 * eta - 42936 * eta ^ 3 - 243527 * ci2 ^ 2 - 23150 * eta ^ 2 + 22748 * eta + 11374) / (7680000 * L ^ 8 * ci2 ^ 16 * eta ^ 10 + 15360000 * L ^ 8 * ci2 ^ 16 * eta ^ 9 + 7680000 * L ^ 8 * ci2 ^ 16 * eta ^ 8 - 30720000 * L ^ 8 * ci2 ^ 14 * eta ^ 10 - 61440000 * L ^ 8 * ci2 ^ 14 * eta ^ 9 - 30720000 * L ^ 8 * ci2 ^ 14 * eta ^ 8 + 52224000 * L ^ 8 * ci2 ^ 12 * eta ^ 10 + 104448000 * L ^ 8 * ci2 ^ 12 * eta ^ 9 + 52224000 * L ^ 8 * ci2 ^ 12 * eta ^ 8 - 49152000 * L ^ 8 * ci2 ^ 10 * eta ^ 10 - 98304000 * L ^ 8 * ci2 ^ 10 * eta ^ 9 - 49152000 * L ^ 8 * ci2 ^ 10 * eta ^ 8 + 27955200 * L ^ 8 * ci2 ^ 8 * eta ^ 10 + 55910400 * L ^ 8 * ci2 ^ 8 * eta ^ 9 + 27955200 * L ^ 8 * ci2 ^ 8 * eta ^ 8 - 9830400 * L ^ 8 * ci2 ^ 6 * eta ^ 10 - 19660800 * L ^ 8 * ci2 ^ 6 * eta ^ 9 - 9830400 * L ^ 8 * ci2 ^ 6 * eta ^ 8 + 2088960 * L ^ 8 * ci2 ^ 4 * eta ^ 10 + 4177920 * L ^ 8 * ci2 ^ 4 * eta ^ 9 + 2088960 * L ^ 8 * ci2 ^ 4 * eta ^ 8 - 245760 * L ^ 8 * ci2 ^ 2 * eta ^ 10 - 491520 * L ^ 8 * ci2 ^ 2 * eta ^ 9 - 245760 * L ^ 8 * ci2 ^ 2 * eta ^ 8 + 12288 * L ^ 8 * eta ^ 10 + 24576 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * ch * sin((4 * g))) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t25 = (-sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (202500 * eta ^ 5 * si2 ^ 18 - 1957500 * eta ^ 4 * si2 ^ 18 - 931500 * eta ^ 5 * si2 ^ 16 - 1086000 * eta ^ 3 * si2 ^ 18 + 9148500 * eta ^ 4 * si2 ^ 16 + 3298000 * eta ^ 2 * si2 ^ 18 + 1777950 * eta ^ 5 * si2 ^ 14 + 5040000 * eta ^ 3 * si2 ^ 16 - 792500 * eta * si2 ^ 18 - 18746850 * eta ^ 4 * si2 ^ 14 - 15784000 * eta ^ 2 * si2 ^ 16 + 2447500 * si2 ^ 18 - 1813050 * eta ^ 5 * si2 ^ 12 - 9785700 * eta ^ 3 * si2 ^ 14 + 3759500 * eta * si2 ^ 16 + 22126950 * eta ^ 4 * si2 ^ 12 + 33651900 * eta ^ 2 * si2 ^ 14 - 11792500 * si2 ^ 16 + 1045800 * eta ^ 5 * si2 ^ 10 + 10230600 * eta ^ 3 * si2 ^ 12 - 8101050 * eta * si2 ^ 14 - 16589400 * eta ^ 4 * si2 ^ 10 - 42077000 * eta ^ 2 * si2 ^ 12 + 24082950 * si2 ^ 14 - 317790 * eta ^ 5 * si2 ^ 8 - 6110520 * eta ^ 3 * si2 ^ 10 + 10474450 * eta * si2 ^ 12 + 8193090 * eta ^ 4 * si2 ^ 8 + 34002520 * eta ^ 2 * si2 ^ 10 - 27098750 * si2 ^ 12 + 27825 * eta ^ 5 * si2 ^ 6 + 1965240 * eta ^ 3 * si2 ^ 8 - 8937680 * eta * si2 ^ 10 - 2662383 * eta ^ 4 * si2 ^ 6 - 18341640 * eta ^ 2 * si2 ^ 8 + 18245920 * si2 ^ 10 + 11289 * eta ^ 5 * si2 ^ 4 - 215580 * eta ^ 3 * si2 ^ 6 + 5164710 * eta * si2 ^ 8 + 547689 * eta ^ 4 * si2 ^ 4 + 6554196 * eta ^ 2 * si2 ^ 6 - 7436730 * si2 ^ 8 - 3465 * eta ^ 5 * si2 ^ 2 - 55734 * eta ^ 3 * si2 ^ 4 - 1991061 * eta * si2 ^ 6 - 64569 * eta ^ 4 * si2 ^ 2 - 1482662 * eta ^ 2 * si2 ^ 4 + 1743579 * si2 ^ 6 + 294 * eta ^ 5 + 19506 * eta ^ 3 * si2 ^ 2 + 486781 * eta * si2 ^ 4 + 3318 * eta ^ 4 + 191250 * eta ^ 2 * si2 ^ 2 - 194915 * si2 ^ 4 - 1710 * eta ^ 3 - 67785 * eta * si2 ^ 2 - 10670 * eta ^ 2 + 1767 * si2 ^ 2 + 4072 * eta + 1048) / (192000 * L ^ 8 * eta ^ 9 * si2 ^ 12 + 192000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 576000 * L ^ 8 * eta ^ 9 * si2 ^ 10 - 576000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 691200 * L ^ 8 * eta ^ 9 * si2 ^ 8 + 691200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 422400 * L ^ 8 * eta ^ 9 * si2 ^ 6 - 422400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 138240 * L ^ 8 * eta ^ 9 * si2 ^ 4 + 138240 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 23040 * L ^ 8 * eta ^ 9 * si2 ^ 2 - 23040 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1536 * L ^ 8 * eta ^ 9 + 1536 * L ^ 8 * eta ^ 8) * ch * cos(g) + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (17010000 * eta ^ 6 * si2 ^ 22 - 100380000 * eta ^ 5 * si2 ^ 22 - 97200000 * eta ^ 6 * si2 ^ 20 - 190290000 * eta ^ 4 * si2 ^ 22 + 588000000 * eta ^ 5 * si2 ^ 20 - 11400000 * eta ^ 3 * si2 ^ 22 + 240367500 * eta ^ 6 * si2 ^ 18 + 1107360000 * eta ^ 4 * si2 ^ 20 + 26910000 * eta ^ 2 * si2 ^ 22 - 1563297000 * eta ^ 5 * si2 ^ 18 + 59680000 * eta ^ 3 * si2 ^ 20 + 128900000 * eta * si2 ^ 22 - 335826000 * eta ^ 6 * si2 ^ 16 - 2875483500 * eta ^ 4 * si2 ^ 18 - 153520000 * eta ^ 2 * si2 ^ 20 + 129250000 * si2 ^ 22 + 2492316000 * eta ^ 5 * si2 ^ 16 - 60406000 * eta ^ 3 * si2 ^ 18 - 752320000 * eta * si2 ^ 20 + 288956700 * eta ^ 6 * si2 ^ 14 + 4394090000 * eta ^ 4 * si2 ^ 16 + 426344500 * eta ^ 2 * si2 ^ 18 - 752000000 * si2 ^ 20 - 2646246600 * eta ^ 5 * si2 ^ 14 - 192504000 * eta ^ 3 * si2 ^ 16 + 1909863000 * eta * si2 ^ 18 - 154731600 * eta ^ 6 * si2 ^ 12 - 4386318300 * eta ^ 4 * si2 ^ 14 - 758078000 * eta ^ 2 * si2 ^ 16 + 1922611500 * si2 ^ 18 + 1960783200 * eta ^ 5 * si2 ^ 12 + 639018000 * eta ^ 3 * si2 ^ 14 - 2761764000 * eta * si2 ^ 16 + 47590515 * eta ^ 6 * si2 ^ 10 + 2999973200 * eta ^ 4 * si2 ^ 12 + 936728100 * eta ^ 2 * si2 ^ 14 - 2838234000 * si2 ^ 16 - 1030991130 * eta ^ 5 * si2 ^ 10 - 868491200 * eta ^ 3 * si2 ^ 12 + 2495993400 * eta * si2 ^ 14 - 5015160 * eta ^ 6 * si2 ^ 8 - 1432613115 * eta ^ 4 * si2 ^ 10 - 819802800 * eta ^ 2 * si2 ^ 12 + 2671868700 * si2 ^ 14 + 382991760 * eta ^ 5 * si2 ^ 8 + 687254820 * eta ^ 3 * si2 ^ 10 - 1447824800 * eta * si2 ^ 12 - 1830468 * eta ^ 6 * si2 ^ 6 + 476920720 * eta ^ 4 * si2 ^ 8 + 505880205 * eta ^ 2 * si2 ^ 10 - 1669906000 * si2 ^ 12 - 98064264 * eta ^ 5 * si2 ^ 6 - 343704560 * eta ^ 3 * si2 ^ 8 + 524948470 * eta * si2 ^ 10 + 791850 * eta ^ 6 * si2 ^ 4 - 108260588 * eta ^ 4 * si2 ^ 6 - 216581000 * eta ^ 2 * si2 ^ 8 + 697930235 * si2 ^ 10 + 16421844 * eta ^ 5 * si2 ^ 4 + 110171824 * eta ^ 3 * si2 ^ 6 - 103919520 * eta * si2 ^ 8 - 121569 * eta ^ 6 * si2 ^ 2 + 15924750 * eta ^ 4 * si2 ^ 4 + 62497924 * eta ^ 2 * si2 ^ 6 - 190692240 * si2 ^ 8 - 1614786 * eta ^ 5 * si2 ^ 2 - 21961656 * eta ^ 3 * si2 ^ 4 + 3681368 * eta * si2 ^ 6 + 7056 * eta ^ 6 - 1362855 * eta ^ 4 * si2 ^ 2 - 11537706 * eta ^ 2 * si2 ^ 4 + 31804204 * si2 ^ 6 + 70560 * eta ^ 5 + 2479988 * eta ^ 3 * si2 ^ 2 + 3026148 * eta * si2 ^ 4 + 51264 * eta ^ 4 + 1226401 * eta ^ 2 * si2 ^ 2 - 2665230 * si2 ^ 4 - 121248 * eta ^ 3 - 630578 * eta * si2 ^ 2 - 56976 * eta ^ 2 + 23399 * si2 ^ 2 + 40960 * eta + 8384) / (7680000 * L ^ 8 * eta ^ 10 * si2 ^ 16 + 15360000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 61440000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 52224000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 104448000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 49152000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 98304000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 27955200 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 55910400 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 9830400 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 19660800 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 2088960 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 4177920 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 245760 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 491520 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 12288 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 24576 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * ch * cos(0.3e1 * g) - sqrt((-eta ^ 2 + 1)) * (8910000 * eta ^ 7 * si2 ^ 20 + 55530000 * eta ^ 6 * si2 ^ 20 - 51840000 * eta ^ 7 * si2 ^ 18 + 87510000 * eta ^ 5 * si2 ^ 20 - 323520000 * eta ^ 6 * si2 ^ 18 - 92910000 * eta ^ 4 * si2 ^ 20 + 133285500 * eta ^ 7 * si2 ^ 16 - 510240000 * eta ^ 5 * si2 ^ 18 - 186630000 * eta ^ 3 * si2 ^ 20 + 831856500 * eta ^ 6 * si2 ^ 16 + 542880000 * eta ^ 4 * si2 ^ 18 + 2190000 * eta ^ 2 * si2 ^ 20 - 199314000 * eta ^ 7 * si2 ^ 14 + 1311077500 * eta ^ 5 * si2 ^ 16 + 1086240000 * eta ^ 3 * si2 ^ 18 + 94050000 * eta * si2 ^ 20 - 1242006000 * eta ^ 6 * si2 ^ 14 - 1399675500 * eta ^ 4 * si2 ^ 16 - 13920000 * eta ^ 2 * si2 ^ 18 + 31350000 * si2 ^ 20 + 191893500 * eta ^ 7 * si2 ^ 12 - 1952514000 * eta ^ 5 * si2 ^ 14 - 2787667500 * eta ^ 3 * si2 ^ 16 - 547200000 * eta * si2 ^ 18 + 1191462900 * eta ^ 6 * si2 ^ 12 + 2094890000 * eta ^ 4 * si2 ^ 14 + 39069500 * eta ^ 2 * si2 ^ 16 - 182400000 * si2 ^ 18 - 124261200 * eta ^ 7 * si2 ^ 10 + 1863864700 * eta ^ 5 * si2 ^ 12 + 4149226000 * eta ^ 3 * si2 ^ 14 + 1404040500 * eta * si2 ^ 16 - 766844400 * eta ^ 6 * si2 ^ 10 - 2013864300 * eta ^ 4 * si2 ^ 12 - 63778000 * eta ^ 2 * si2 ^ 14 + 468013500 * si2 ^ 16 + 54815475 * eta ^ 7 * si2 ^ 8 - 1190258000 * eta ^ 5 * si2 ^ 10 - 3962093100 * eta ^ 3 * si2 ^ 12 - 2089878000 * eta * si2 ^ 14 + 335226585 * eta ^ 6 * si2 ^ 8 + 1298349200 * eta ^ 4 * si2 ^ 10 + 67063100 * eta ^ 2 * si2 ^ 12 - 696626000 * si2 ^ 14 - 16273680 * eta ^ 7 * si2 ^ 6 + 514475315 * eta ^ 5 * si2 ^ 8 + 2533709200 * eta ^ 3 * si2 ^ 10 + 1996254900 * eta * si2 ^ 12 - 98287920 * eta ^ 6 * si2 ^ 6 - 568262655 * eta ^ 4 * si2 ^ 8 - 47454800 * eta ^ 2 * si2 ^ 10 + 665418300 * si2 ^ 12 + 3114756 * eta ^ 7 * si2 ^ 4 - 148554000 * eta ^ 5 * si2 ^ 6 - 1098131775 * eta ^ 3 * si2 ^ 8 - 1277430000 * eta * si2 ^ 10 + 18508044 * eta ^ 6 * si2 ^ 4 + 166726480 * eta ^ 4 * si2 ^ 6 + 22874995 * eta ^ 2 * si2 ^ 8 - 425810000 * si2 ^ 10 - 347550 * eta ^ 7 * si2 ^ 2 + 27427332 * eta ^ 5 * si2 ^ 4 + 318435920 * eta ^ 3 * si2 ^ 6 + 554251545 * eta * si2 ^ 8 - 2023386 * eta ^ 6 * si2 ^ 2 - 31398932 * eta ^ 4 * si2 ^ 4 - 7412240 * eta ^ 2 * si2 ^ 6 + 184750515 * si2 ^ 8 + 17199 * eta ^ 7 - 2925982 * eta ^ 5 * si2 ^ 2 - 59148628 * eta ^ 3 * si2 ^ 4 - 160975920 * eta * si2 ^ 6 + 97677 * eta ^ 6 + 3431190 * eta ^ 4 * si2 ^ 2 + 1544260 * eta ^ 2 * si2 ^ 4 - 53658640 * si2 ^ 6 + 137135 * eta ^ 5 + 6361110 * eta ^ 3 * si2 ^ 2 + 29964876 * eta * si2 ^ 4 - 165483 * eta ^ 4 - 186782 * eta ^ 2 * si2 ^ 2 + 9988292 * si2 ^ 4 - 301227 * eta ^ 3 - 3231450 * eta * si2 ^ 2 + 9967 * eta ^ 2 - 1077150 * si2 ^ 2 + 153549 * eta + 51183) * (si2 ^ 4) / (7680000 * L ^ 8 * eta ^ 11 * si2 ^ 16 + 23040000 * L ^ 8 * eta ^ 10 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 11 * si2 ^ 14 + 23040000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 92160000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 + 52224000 * L ^ 8 * eta ^ 11 * si2 ^ 12 - 92160000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 156672000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 - 49152000 * L ^ 8 * eta ^ 11 * si2 ^ 10 + 156672000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 147456000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 + 27955200 * L ^ 8 * eta ^ 11 * si2 ^ 8 - 147456000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 83865600 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 - 9830400 * L ^ 8 * eta ^ 11 * si2 ^ 6 + 83865600 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 29491200 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 + 2088960 * L ^ 8 * eta ^ 11 * si2 ^ 4 - 29491200 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 6266880 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 - 245760 * L ^ 8 * eta ^ 11 * si2 ^ 2 + 6266880 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 737280 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 + 12288 * L ^ 8 * eta ^ 11 - 737280 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * ch * cos(0.5e1 * g) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (202500 * eta ^ 5 * si2 ^ 18 - 1957500 * eta ^ 4 * si2 ^ 18 - 931500 * eta ^ 5 * si2 ^ 16 - 1086000 * eta ^ 3 * si2 ^ 18 + 9148500 * eta ^ 4 * si2 ^ 16 + 3298000 * eta ^ 2 * si2 ^ 18 + 1777950 * eta ^ 5 * si2 ^ 14 + 5040000 * eta ^ 3 * si2 ^ 16 - 792500 * eta * si2 ^ 18 - 18746850 * eta ^ 4 * si2 ^ 14 - 15784000 * eta ^ 2 * si2 ^ 16 + 2447500 * si2 ^ 18 - 1813050 * eta ^ 5 * si2 ^ 12 - 9785700 * eta ^ 3 * si2 ^ 14 + 3759500 * eta * si2 ^ 16 + 22126950 * eta ^ 4 * si2 ^ 12 + 33651900 * eta ^ 2 * si2 ^ 14 - 11792500 * si2 ^ 16 + 1045800 * eta ^ 5 * si2 ^ 10 + 10230600 * eta ^ 3 * si2 ^ 12 - 8101050 * eta * si2 ^ 14 - 16589400 * eta ^ 4 * si2 ^ 10 - 42077000 * eta ^ 2 * si2 ^ 12 + 24082950 * si2 ^ 14 - 317790 * eta ^ 5 * si2 ^ 8 - 6110520 * eta ^ 3 * si2 ^ 10 + 10474450 * eta * si2 ^ 12 + 8193090 * eta ^ 4 * si2 ^ 8 + 34002520 * eta ^ 2 * si2 ^ 10 - 27098750 * si2 ^ 12 + 27825 * eta ^ 5 * si2 ^ 6 + 1965240 * eta ^ 3 * si2 ^ 8 - 8937680 * eta * si2 ^ 10 - 2662383 * eta ^ 4 * si2 ^ 6 - 18341640 * eta ^ 2 * si2 ^ 8 + 18245920 * si2 ^ 10 + 11289 * eta ^ 5 * si2 ^ 4 - 215580 * eta ^ 3 * si2 ^ 6 + 5164710 * eta * si2 ^ 8 + 547689 * eta ^ 4 * si2 ^ 4 + 6554196 * eta ^ 2 * si2 ^ 6 - 7436730 * si2 ^ 8 - 3465 * eta ^ 5 * si2 ^ 2 - 55734 * eta ^ 3 * si2 ^ 4 - 1991061 * eta * si2 ^ 6 - 64569 * eta ^ 4 * si2 ^ 2 - 1482662 * eta ^ 2 * si2 ^ 4 + 1743579 * si2 ^ 6 + 294 * eta ^ 5 + 19506 * eta ^ 3 * si2 ^ 2 + 486781 * eta * si2 ^ 4 + 3318 * eta ^ 4 + 191250 * eta ^ 2 * si2 ^ 2 - 194915 * si2 ^ 4 - 1710 * eta ^ 3 - 67785 * eta * si2 ^ 2 - 10670 * eta ^ 2 + 1767 * si2 ^ 2 + 4072 * eta + 1048) / (192000 * L ^ 8 * eta ^ 9 * si2 ^ 12 + 192000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 576000 * L ^ 8 * eta ^ 9 * si2 ^ 10 - 576000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 691200 * L ^ 8 * eta ^ 9 * si2 ^ 8 + 691200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 422400 * L ^ 8 * eta ^ 9 * si2 ^ 6 - 422400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 138240 * L ^ 8 * eta ^ 9 * si2 ^ 4 + 138240 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 23040 * L ^ 8 * eta ^ 9 * si2 ^ 2 - 23040 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1536 * L ^ 8 * eta ^ 9 + 1536 * L ^ 8 * eta ^ 8) * sh * sin(g) - sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (12150000 * eta ^ 6 * si2 ^ 22 - 129300000 * eta ^ 5 * si2 ^ 22 - 71280000 * eta ^ 6 * si2 ^ 20 - 204870000 * eta ^ 4 * si2 ^ 22 + 745440000 * eta ^ 5 * si2 ^ 20 + 149640000 * eta ^ 3 * si2 ^ 22 + 179644500 * eta ^ 6 * si2 ^ 18 + 1181280000 * eta ^ 4 * si2 ^ 20 + 102330000 * eta ^ 2 * si2 ^ 22 - 1940487000 * eta ^ 5 * si2 ^ 18 - 863840000 * eta ^ 3 * si2 ^ 20 + 3500000 * eta * si2 ^ 22 - 253638000 * eta ^ 6 * si2 ^ 16 - 3037072500 * eta ^ 4 * si2 ^ 18 - 581680000 * eta ^ 2 * si2 ^ 20 + 66550000 * si2 ^ 22 + 3015540000 * eta ^ 5 * si2 ^ 16 + 2275846000 * eta ^ 3 * si2 ^ 18 - 22720000 * eta * si2 ^ 20 + 217836900 * eta ^ 6 * si2 ^ 14 + 4592614000 * eta ^ 4 * si2 ^ 16 + 1497675500 * eta ^ 2 * si2 ^ 18 - 387200000 * si2 ^ 20 - 3111353400 * eta ^ 5 * si2 ^ 14 - 3622168000 * eta ^ 3 * si2 ^ 16 + 37809000 * eta * si2 ^ 18 - 113598000 * eta ^ 6 * si2 ^ 12 - 4535542500 * eta ^ 4 * si2 ^ 14 - 2312106000 * eta ^ 2 * si2 ^ 16 + 986584500 * si2 ^ 18 + 2237661600 * eta ^ 5 * si2 ^ 12 + 3871506800 * eta ^ 3 * si2 ^ 14 + 24740000 * eta * si2 ^ 16 + 31438845 * eta ^ 6 * si2 ^ 10 + 3069377200 * eta ^ 4 * si2 ^ 12 + 2382199900 * eta ^ 2 * si2 ^ 14 - 1444982000 * si2 ^ 16 - 1142936070 * eta ^ 5 * si2 ^ 10 - 2910817600 * eta ^ 3 * si2 ^ 12 - 165679800 * eta * si2 ^ 14 - 732840 * eta ^ 6 * si2 ^ 8 - 1451313045 * eta ^ 4 * si2 ^ 10 - 1719752400 * eta ^ 2 * si2 ^ 12 + 1341032100 * si2 ^ 14 + 413444400 * eta ^ 5 * si2 ^ 8 + 1562957020 * eta ^ 3 * si2 ^ 10 + 255415200 * eta * si2 ^ 12 - 2573964 * eta ^ 6 * si2 ^ 6 + 479020400 * eta ^ 4 * si2 ^ 8 + 885477635 * eta ^ 2 * si2 ^ 10 - 818286000 * si2 ^ 12 - 103428120 * eta ^ 5 * si2 ^ 6 - 595376080 * eta ^ 3 * si2 ^ 8 - 214053590 * eta * si2 ^ 10 + 869718 * eta ^ 6 * si2 ^ 4 - 108031204 * eta ^ 4 * si2 ^ 6 - 323695960 * eta ^ 2 * si2 ^ 8 + 328429205 * si2 ^ 10 + 16978476 * eta ^ 5 * si2 ^ 4 + 156611408 * eta ^ 3 * si2 ^ 6 + 110715040 * eta * si2 ^ 8 - 125391 * eta ^ 6 * si2 ^ 2 + 15833298 * eta ^ 4 * si2 ^ 4 + 81866060 * eta ^ 2 * si2 ^ 6 - 83374960 * si2 ^ 8 - 1640862 * eta ^ 5 * si2 ^ 2 - 26937992 * eta ^ 3 * si2 ^ 4 - 36271800 * eta * si2 ^ 6 + 7056 * eta ^ 6 - 1355337 * eta ^ 4 * si2 ^ 2 - 13567318 * eta ^ 2 * si2 ^ 4 + 11827620 * si2 ^ 6 + 70560 * eta ^ 5 + 2715660 * eta ^ 3 * si2 ^ 2 + 7334748 * eta * si2 ^ 4 + 51264 * eta ^ 4 + 1320207 * eta ^ 2 * si2 ^ 2 - 510930 * si2 ^ 4 - 121248 * eta ^ 3 - 835310 * eta * si2 ^ 2 - 56976 * eta ^ 2 - 78967 * si2 ^ 2 + 40960 * eta + 8384) / (7680000 * L ^ 8 * eta ^ 10 * si2 ^ 16 + 15360000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 61440000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 52224000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 104448000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 49152000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 98304000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 27955200 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 55910400 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 9830400 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 19660800 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 2088960 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 4177920 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 245760 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 491520 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 12288 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 24576 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * sh * sin(0.3e1 * g) + sqrt((-eta ^ 2 + 1)) * (8910000 * eta ^ 7 * si2 ^ 20 + 55530000 * eta ^ 6 * si2 ^ 20 - 51840000 * eta ^ 7 * si2 ^ 18 + 87510000 * eta ^ 5 * si2 ^ 20 - 323520000 * eta ^ 6 * si2 ^ 18 - 92910000 * eta ^ 4 * si2 ^ 20 + 133285500 * eta ^ 7 * si2 ^ 16 - 510240000 * eta ^ 5 * si2 ^ 18 - 186630000 * eta ^ 3 * si2 ^ 20 + 831856500 * eta ^ 6 * si2 ^ 16 + 542880000 * eta ^ 4 * si2 ^ 18 + 2190000 * eta ^ 2 * si2 ^ 20 - 199314000 * eta ^ 7 * si2 ^ 14 + 1311077500 * eta ^ 5 * si2 ^ 16 + 1086240000 * eta ^ 3 * si2 ^ 18 + 94050000 * eta * si2 ^ 20 - 1242006000 * eta ^ 6 * si2 ^ 14 - 1399675500 * eta ^ 4 * si2 ^ 16 - 13920000 * eta ^ 2 * si2 ^ 18 + 31350000 * si2 ^ 20 + 191893500 * eta ^ 7 * si2 ^ 12 - 1952514000 * eta ^ 5 * si2 ^ 14 - 2787667500 * eta ^ 3 * si2 ^ 16 - 547200000 * eta * si2 ^ 18 + 1191462900 * eta ^ 6 * si2 ^ 12 + 2094890000 * eta ^ 4 * si2 ^ 14 + 39069500 * eta ^ 2 * si2 ^ 16 - 182400000 * si2 ^ 18 - 124261200 * eta ^ 7 * si2 ^ 10 + 1863864700 * eta ^ 5 * si2 ^ 12 + 4149226000 * eta ^ 3 * si2 ^ 14 + 1404040500 * eta * si2 ^ 16 - 766844400 * eta ^ 6 * si2 ^ 10 - 2013864300 * eta ^ 4 * si2 ^ 12 - 63778000 * eta ^ 2 * si2 ^ 14 + 468013500 * si2 ^ 16 + 54815475 * eta ^ 7 * si2 ^ 8 - 1190258000 * eta ^ 5 * si2 ^ 10 - 3962093100 * eta ^ 3 * si2 ^ 12 - 2089878000 * eta * si2 ^ 14 + 335226585 * eta ^ 6 * si2 ^ 8 + 1298349200 * eta ^ 4 * si2 ^ 10 + 67063100 * eta ^ 2 * si2 ^ 12 - 696626000 * si2 ^ 14 - 16273680 * eta ^ 7 * si2 ^ 6 + 514475315 * eta ^ 5 * si2 ^ 8 + 2533709200 * eta ^ 3 * si2 ^ 10 + 1996254900 * eta * si2 ^ 12 - 98287920 * eta ^ 6 * si2 ^ 6 - 568262655 * eta ^ 4 * si2 ^ 8 - 47454800 * eta ^ 2 * si2 ^ 10 + 665418300 * si2 ^ 12 + 3114756 * eta ^ 7 * si2 ^ 4 - 148554000 * eta ^ 5 * si2 ^ 6 - 1098131775 * eta ^ 3 * si2 ^ 8 - 1277430000 * eta * si2 ^ 10 + 18508044 * eta ^ 6 * si2 ^ 4 + 166726480 * eta ^ 4 * si2 ^ 6 + 22874995 * eta ^ 2 * si2 ^ 8 - 425810000 * si2 ^ 10 - 347550 * eta ^ 7 * si2 ^ 2 + 27427332 * eta ^ 5 * si2 ^ 4 + 318435920 * eta ^ 3 * si2 ^ 6 + 554251545 * eta * si2 ^ 8 - 2023386 * eta ^ 6 * si2 ^ 2 - 31398932 * eta ^ 4 * si2 ^ 4 - 7412240 * eta ^ 2 * si2 ^ 6 + 184750515 * si2 ^ 8 + 17199 * eta ^ 7 - 2925982 * eta ^ 5 * si2 ^ 2 - 59148628 * eta ^ 3 * si2 ^ 4 - 160975920 * eta * si2 ^ 6 + 97677 * eta ^ 6 + 3431190 * eta ^ 4 * si2 ^ 2 + 1544260 * eta ^ 2 * si2 ^ 4 - 53658640 * si2 ^ 6 + 137135 * eta ^ 5 + 6361110 * eta ^ 3 * si2 ^ 2 + 29964876 * eta * si2 ^ 4 - 165483 * eta ^ 4 - 186782 * eta ^ 2 * si2 ^ 2 + 9988292 * si2 ^ 4 - 301227 * eta ^ 3 - 3231450 * eta * si2 ^ 2 + 9967 * eta ^ 2 - 1077150 * si2 ^ 2 + 153549 * eta + 51183) * (si2 ^ 4) / (7680000 * L ^ 8 * eta ^ 11 * si2 ^ 16 + 23040000 * L ^ 8 * eta ^ 10 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 11 * si2 ^ 14 + 23040000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 92160000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 + 52224000 * L ^ 8 * eta ^ 11 * si2 ^ 12 - 92160000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 156672000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 - 49152000 * L ^ 8 * eta ^ 11 * si2 ^ 10 + 156672000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 147456000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 + 27955200 * L ^ 8 * eta ^ 11 * si2 ^ 8 - 147456000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 83865600 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 - 9830400 * L ^ 8 * eta ^ 11 * si2 ^ 6 + 83865600 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 29491200 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 + 2088960 * L ^ 8 * eta ^ 11 * si2 ^ 4 - 29491200 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 6266880 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 - 245760 * L ^ 8 * eta ^ 11 * si2 ^ 2 + 6266880 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 737280 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 + 12288 * L ^ 8 * eta ^ 11 - 737280 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * sh * sin(0.5e1 * g)) * J ^ 2 * R__e ^ 4 * mu ^ 4;
lp2t26 = (-sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (202500 * eta ^ 5 * si2 ^ 18 - 1957500 * eta ^ 4 * si2 ^ 18 - 931500 * eta ^ 5 * si2 ^ 16 - 1086000 * eta ^ 3 * si2 ^ 18 + 9148500 * eta ^ 4 * si2 ^ 16 + 3298000 * eta ^ 2 * si2 ^ 18 + 1777950 * eta ^ 5 * si2 ^ 14 + 5040000 * eta ^ 3 * si2 ^ 16 - 792500 * eta * si2 ^ 18 - 18746850 * eta ^ 4 * si2 ^ 14 - 15784000 * eta ^ 2 * si2 ^ 16 + 2447500 * si2 ^ 18 - 1813050 * eta ^ 5 * si2 ^ 12 - 9785700 * eta ^ 3 * si2 ^ 14 + 3759500 * eta * si2 ^ 16 + 22126950 * eta ^ 4 * si2 ^ 12 + 33651900 * eta ^ 2 * si2 ^ 14 - 11792500 * si2 ^ 16 + 1045800 * eta ^ 5 * si2 ^ 10 + 10230600 * eta ^ 3 * si2 ^ 12 - 8101050 * eta * si2 ^ 14 - 16589400 * eta ^ 4 * si2 ^ 10 - 42077000 * eta ^ 2 * si2 ^ 12 + 24082950 * si2 ^ 14 - 317790 * eta ^ 5 * si2 ^ 8 - 6110520 * eta ^ 3 * si2 ^ 10 + 10474450 * eta * si2 ^ 12 + 8193090 * eta ^ 4 * si2 ^ 8 + 34002520 * eta ^ 2 * si2 ^ 10 - 27098750 * si2 ^ 12 + 27825 * eta ^ 5 * si2 ^ 6 + 1965240 * eta ^ 3 * si2 ^ 8 - 8937680 * eta * si2 ^ 10 - 2662383 * eta ^ 4 * si2 ^ 6 - 18341640 * eta ^ 2 * si2 ^ 8 + 18245920 * si2 ^ 10 + 11289 * eta ^ 5 * si2 ^ 4 - 215580 * eta ^ 3 * si2 ^ 6 + 5164710 * eta * si2 ^ 8 + 547689 * eta ^ 4 * si2 ^ 4 + 6554196 * eta ^ 2 * si2 ^ 6 - 7436730 * si2 ^ 8 - 3465 * eta ^ 5 * si2 ^ 2 - 55734 * eta ^ 3 * si2 ^ 4 - 1991061 * eta * si2 ^ 6 - 64569 * eta ^ 4 * si2 ^ 2 - 1482662 * eta ^ 2 * si2 ^ 4 + 1743579 * si2 ^ 6 + 294 * eta ^ 5 + 19506 * eta ^ 3 * si2 ^ 2 + 486781 * eta * si2 ^ 4 + 3318 * eta ^ 4 + 191250 * eta ^ 2 * si2 ^ 2 - 194915 * si2 ^ 4 - 1710 * eta ^ 3 - 67785 * eta * si2 ^ 2 - 10670 * eta ^ 2 + 1767 * si2 ^ 2 + 4072 * eta + 1048) / (192000 * L ^ 8 * eta ^ 9 * si2 ^ 12 + 192000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 576000 * L ^ 8 * eta ^ 9 * si2 ^ 10 - 576000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 691200 * L ^ 8 * eta ^ 9 * si2 ^ 8 + 691200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 422400 * L ^ 8 * eta ^ 9 * si2 ^ 6 - 422400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 138240 * L ^ 8 * eta ^ 9 * si2 ^ 4 + 138240 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 23040 * L ^ 8 * eta ^ 9 * si2 ^ 2 - 23040 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1536 * L ^ 8 * eta ^ 9 + 1536 * L ^ 8 * eta ^ 8) * sh * cos(g) + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (17010000 * eta ^ 6 * si2 ^ 22 - 100380000 * eta ^ 5 * si2 ^ 22 - 97200000 * eta ^ 6 * si2 ^ 20 - 190290000 * eta ^ 4 * si2 ^ 22 + 588000000 * eta ^ 5 * si2 ^ 20 - 11400000 * eta ^ 3 * si2 ^ 22 + 240367500 * eta ^ 6 * si2 ^ 18 + 1107360000 * eta ^ 4 * si2 ^ 20 + 26910000 * eta ^ 2 * si2 ^ 22 - 1563297000 * eta ^ 5 * si2 ^ 18 + 59680000 * eta ^ 3 * si2 ^ 20 + 128900000 * eta * si2 ^ 22 - 335826000 * eta ^ 6 * si2 ^ 16 - 2875483500 * eta ^ 4 * si2 ^ 18 - 153520000 * eta ^ 2 * si2 ^ 20 + 129250000 * si2 ^ 22 + 2492316000 * eta ^ 5 * si2 ^ 16 - 60406000 * eta ^ 3 * si2 ^ 18 - 752320000 * eta * si2 ^ 20 + 288956700 * eta ^ 6 * si2 ^ 14 + 4394090000 * eta ^ 4 * si2 ^ 16 + 426344500 * eta ^ 2 * si2 ^ 18 - 752000000 * si2 ^ 20 - 2646246600 * eta ^ 5 * si2 ^ 14 - 192504000 * eta ^ 3 * si2 ^ 16 + 1909863000 * eta * si2 ^ 18 - 154731600 * eta ^ 6 * si2 ^ 12 - 4386318300 * eta ^ 4 * si2 ^ 14 - 758078000 * eta ^ 2 * si2 ^ 16 + 1922611500 * si2 ^ 18 + 1960783200 * eta ^ 5 * si2 ^ 12 + 639018000 * eta ^ 3 * si2 ^ 14 - 2761764000 * eta * si2 ^ 16 + 47590515 * eta ^ 6 * si2 ^ 10 + 2999973200 * eta ^ 4 * si2 ^ 12 + 936728100 * eta ^ 2 * si2 ^ 14 - 2838234000 * si2 ^ 16 - 1030991130 * eta ^ 5 * si2 ^ 10 - 868491200 * eta ^ 3 * si2 ^ 12 + 2495993400 * eta * si2 ^ 14 - 5015160 * eta ^ 6 * si2 ^ 8 - 1432613115 * eta ^ 4 * si2 ^ 10 - 819802800 * eta ^ 2 * si2 ^ 12 + 2671868700 * si2 ^ 14 + 382991760 * eta ^ 5 * si2 ^ 8 + 687254820 * eta ^ 3 * si2 ^ 10 - 1447824800 * eta * si2 ^ 12 - 1830468 * eta ^ 6 * si2 ^ 6 + 476920720 * eta ^ 4 * si2 ^ 8 + 505880205 * eta ^ 2 * si2 ^ 10 - 1669906000 * si2 ^ 12 - 98064264 * eta ^ 5 * si2 ^ 6 - 343704560 * eta ^ 3 * si2 ^ 8 + 524948470 * eta * si2 ^ 10 + 791850 * eta ^ 6 * si2 ^ 4 - 108260588 * eta ^ 4 * si2 ^ 6 - 216581000 * eta ^ 2 * si2 ^ 8 + 697930235 * si2 ^ 10 + 16421844 * eta ^ 5 * si2 ^ 4 + 110171824 * eta ^ 3 * si2 ^ 6 - 103919520 * eta * si2 ^ 8 - 121569 * eta ^ 6 * si2 ^ 2 + 15924750 * eta ^ 4 * si2 ^ 4 + 62497924 * eta ^ 2 * si2 ^ 6 - 190692240 * si2 ^ 8 - 1614786 * eta ^ 5 * si2 ^ 2 - 21961656 * eta ^ 3 * si2 ^ 4 + 3681368 * eta * si2 ^ 6 + 7056 * eta ^ 6 - 1362855 * eta ^ 4 * si2 ^ 2 - 11537706 * eta ^ 2 * si2 ^ 4 + 31804204 * si2 ^ 6 + 70560 * eta ^ 5 + 2479988 * eta ^ 3 * si2 ^ 2 + 3026148 * eta * si2 ^ 4 + 51264 * eta ^ 4 + 1226401 * eta ^ 2 * si2 ^ 2 - 2665230 * si2 ^ 4 - 121248 * eta ^ 3 - 630578 * eta * si2 ^ 2 - 56976 * eta ^ 2 + 23399 * si2 ^ 2 + 40960 * eta + 8384) / (7680000 * L ^ 8 * eta ^ 10 * si2 ^ 16 + 15360000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 61440000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 52224000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 104448000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 49152000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 98304000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 27955200 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 55910400 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 9830400 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 19660800 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 2088960 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 4177920 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 245760 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 491520 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 12288 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 24576 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * sh * cos(0.3e1 * g) - sqrt((-eta ^ 2 + 1)) * (8910000 * eta ^ 7 * si2 ^ 20 + 55530000 * eta ^ 6 * si2 ^ 20 - 51840000 * eta ^ 7 * si2 ^ 18 + 87510000 * eta ^ 5 * si2 ^ 20 - 323520000 * eta ^ 6 * si2 ^ 18 - 92910000 * eta ^ 4 * si2 ^ 20 + 133285500 * eta ^ 7 * si2 ^ 16 - 510240000 * eta ^ 5 * si2 ^ 18 - 186630000 * eta ^ 3 * si2 ^ 20 + 831856500 * eta ^ 6 * si2 ^ 16 + 542880000 * eta ^ 4 * si2 ^ 18 + 2190000 * eta ^ 2 * si2 ^ 20 - 199314000 * eta ^ 7 * si2 ^ 14 + 1311077500 * eta ^ 5 * si2 ^ 16 + 1086240000 * eta ^ 3 * si2 ^ 18 + 94050000 * eta * si2 ^ 20 - 1242006000 * eta ^ 6 * si2 ^ 14 - 1399675500 * eta ^ 4 * si2 ^ 16 - 13920000 * eta ^ 2 * si2 ^ 18 + 31350000 * si2 ^ 20 + 191893500 * eta ^ 7 * si2 ^ 12 - 1952514000 * eta ^ 5 * si2 ^ 14 - 2787667500 * eta ^ 3 * si2 ^ 16 - 547200000 * eta * si2 ^ 18 + 1191462900 * eta ^ 6 * si2 ^ 12 + 2094890000 * eta ^ 4 * si2 ^ 14 + 39069500 * eta ^ 2 * si2 ^ 16 - 182400000 * si2 ^ 18 - 124261200 * eta ^ 7 * si2 ^ 10 + 1863864700 * eta ^ 5 * si2 ^ 12 + 4149226000 * eta ^ 3 * si2 ^ 14 + 1404040500 * eta * si2 ^ 16 - 766844400 * eta ^ 6 * si2 ^ 10 - 2013864300 * eta ^ 4 * si2 ^ 12 - 63778000 * eta ^ 2 * si2 ^ 14 + 468013500 * si2 ^ 16 + 54815475 * eta ^ 7 * si2 ^ 8 - 1190258000 * eta ^ 5 * si2 ^ 10 - 3962093100 * eta ^ 3 * si2 ^ 12 - 2089878000 * eta * si2 ^ 14 + 335226585 * eta ^ 6 * si2 ^ 8 + 1298349200 * eta ^ 4 * si2 ^ 10 + 67063100 * eta ^ 2 * si2 ^ 12 - 696626000 * si2 ^ 14 - 16273680 * eta ^ 7 * si2 ^ 6 + 514475315 * eta ^ 5 * si2 ^ 8 + 2533709200 * eta ^ 3 * si2 ^ 10 + 1996254900 * eta * si2 ^ 12 - 98287920 * eta ^ 6 * si2 ^ 6 - 568262655 * eta ^ 4 * si2 ^ 8 - 47454800 * eta ^ 2 * si2 ^ 10 + 665418300 * si2 ^ 12 + 3114756 * eta ^ 7 * si2 ^ 4 - 148554000 * eta ^ 5 * si2 ^ 6 - 1098131775 * eta ^ 3 * si2 ^ 8 - 1277430000 * eta * si2 ^ 10 + 18508044 * eta ^ 6 * si2 ^ 4 + 166726480 * eta ^ 4 * si2 ^ 6 + 22874995 * eta ^ 2 * si2 ^ 8 - 425810000 * si2 ^ 10 - 347550 * eta ^ 7 * si2 ^ 2 + 27427332 * eta ^ 5 * si2 ^ 4 + 318435920 * eta ^ 3 * si2 ^ 6 + 554251545 * eta * si2 ^ 8 - 2023386 * eta ^ 6 * si2 ^ 2 - 31398932 * eta ^ 4 * si2 ^ 4 - 7412240 * eta ^ 2 * si2 ^ 6 + 184750515 * si2 ^ 8 + 17199 * eta ^ 7 - 2925982 * eta ^ 5 * si2 ^ 2 - 59148628 * eta ^ 3 * si2 ^ 4 - 160975920 * eta * si2 ^ 6 + 97677 * eta ^ 6 + 3431190 * eta ^ 4 * si2 ^ 2 + 1544260 * eta ^ 2 * si2 ^ 4 - 53658640 * si2 ^ 6 + 137135 * eta ^ 5 + 6361110 * eta ^ 3 * si2 ^ 2 + 29964876 * eta * si2 ^ 4 - 165483 * eta ^ 4 - 186782 * eta ^ 2 * si2 ^ 2 + 9988292 * si2 ^ 4 - 301227 * eta ^ 3 - 3231450 * eta * si2 ^ 2 + 9967 * eta ^ 2 - 1077150 * si2 ^ 2 + 153549 * eta + 51183) * (si2 ^ 4) / (7680000 * L ^ 8 * eta ^ 11 * si2 ^ 16 + 23040000 * L ^ 8 * eta ^ 10 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 11 * si2 ^ 14 + 23040000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 92160000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 + 52224000 * L ^ 8 * eta ^ 11 * si2 ^ 12 - 92160000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 156672000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 - 49152000 * L ^ 8 * eta ^ 11 * si2 ^ 10 + 156672000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 147456000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 + 27955200 * L ^ 8 * eta ^ 11 * si2 ^ 8 - 147456000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 83865600 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 - 9830400 * L ^ 8 * eta ^ 11 * si2 ^ 6 + 83865600 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 29491200 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 + 2088960 * L ^ 8 * eta ^ 11 * si2 ^ 4 - 29491200 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 6266880 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 - 245760 * L ^ 8 * eta ^ 11 * si2 ^ 2 + 6266880 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 737280 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 + 12288 * L ^ 8 * eta ^ 11 - 737280 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * sh * cos(0.5e1 * g) + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (202500 * eta ^ 5 * si2 ^ 18 - 1957500 * eta ^ 4 * si2 ^ 18 - 931500 * eta ^ 5 * si2 ^ 16 - 1086000 * eta ^ 3 * si2 ^ 18 + 9148500 * eta ^ 4 * si2 ^ 16 + 3298000 * eta ^ 2 * si2 ^ 18 + 1777950 * eta ^ 5 * si2 ^ 14 + 5040000 * eta ^ 3 * si2 ^ 16 - 792500 * eta * si2 ^ 18 - 18746850 * eta ^ 4 * si2 ^ 14 - 15784000 * eta ^ 2 * si2 ^ 16 + 2447500 * si2 ^ 18 - 1813050 * eta ^ 5 * si2 ^ 12 - 9785700 * eta ^ 3 * si2 ^ 14 + 3759500 * eta * si2 ^ 16 + 22126950 * eta ^ 4 * si2 ^ 12 + 33651900 * eta ^ 2 * si2 ^ 14 - 11792500 * si2 ^ 16 + 1045800 * eta ^ 5 * si2 ^ 10 + 10230600 * eta ^ 3 * si2 ^ 12 - 8101050 * eta * si2 ^ 14 - 16589400 * eta ^ 4 * si2 ^ 10 - 42077000 * eta ^ 2 * si2 ^ 12 + 24082950 * si2 ^ 14 - 317790 * eta ^ 5 * si2 ^ 8 - 6110520 * eta ^ 3 * si2 ^ 10 + 10474450 * eta * si2 ^ 12 + 8193090 * eta ^ 4 * si2 ^ 8 + 34002520 * eta ^ 2 * si2 ^ 10 - 27098750 * si2 ^ 12 + 27825 * eta ^ 5 * si2 ^ 6 + 1965240 * eta ^ 3 * si2 ^ 8 - 8937680 * eta * si2 ^ 10 - 2662383 * eta ^ 4 * si2 ^ 6 - 18341640 * eta ^ 2 * si2 ^ 8 + 18245920 * si2 ^ 10 + 11289 * eta ^ 5 * si2 ^ 4 - 215580 * eta ^ 3 * si2 ^ 6 + 5164710 * eta * si2 ^ 8 + 547689 * eta ^ 4 * si2 ^ 4 + 6554196 * eta ^ 2 * si2 ^ 6 - 7436730 * si2 ^ 8 - 3465 * eta ^ 5 * si2 ^ 2 - 55734 * eta ^ 3 * si2 ^ 4 - 1991061 * eta * si2 ^ 6 - 64569 * eta ^ 4 * si2 ^ 2 - 1482662 * eta ^ 2 * si2 ^ 4 + 1743579 * si2 ^ 6 + 294 * eta ^ 5 + 19506 * eta ^ 3 * si2 ^ 2 + 486781 * eta * si2 ^ 4 + 3318 * eta ^ 4 + 191250 * eta ^ 2 * si2 ^ 2 - 194915 * si2 ^ 4 - 1710 * eta ^ 3 - 67785 * eta * si2 ^ 2 - 10670 * eta ^ 2 + 1767 * si2 ^ 2 + 4072 * eta + 1048) / (192000 * L ^ 8 * eta ^ 9 * si2 ^ 12 + 192000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 576000 * L ^ 8 * eta ^ 9 * si2 ^ 10 - 576000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 691200 * L ^ 8 * eta ^ 9 * si2 ^ 8 + 691200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 422400 * L ^ 8 * eta ^ 9 * si2 ^ 6 - 422400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 138240 * L ^ 8 * eta ^ 9 * si2 ^ 4 + 138240 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 23040 * L ^ 8 * eta ^ 9 * si2 ^ 2 - 23040 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 1536 * L ^ 8 * eta ^ 9 + 1536 * L ^ 8 * eta ^ 8) * ch * sin(g) + sqrt((-eta ^ 2 + 1)) * (si2 ^ 2) * (12150000 * eta ^ 6 * si2 ^ 22 - 129300000 * eta ^ 5 * si2 ^ 22 - 71280000 * eta ^ 6 * si2 ^ 20 - 204870000 * eta ^ 4 * si2 ^ 22 + 745440000 * eta ^ 5 * si2 ^ 20 + 149640000 * eta ^ 3 * si2 ^ 22 + 179644500 * eta ^ 6 * si2 ^ 18 + 1181280000 * eta ^ 4 * si2 ^ 20 + 102330000 * eta ^ 2 * si2 ^ 22 - 1940487000 * eta ^ 5 * si2 ^ 18 - 863840000 * eta ^ 3 * si2 ^ 20 + 3500000 * eta * si2 ^ 22 - 253638000 * eta ^ 6 * si2 ^ 16 - 3037072500 * eta ^ 4 * si2 ^ 18 - 581680000 * eta ^ 2 * si2 ^ 20 + 66550000 * si2 ^ 22 + 3015540000 * eta ^ 5 * si2 ^ 16 + 2275846000 * eta ^ 3 * si2 ^ 18 - 22720000 * eta * si2 ^ 20 + 217836900 * eta ^ 6 * si2 ^ 14 + 4592614000 * eta ^ 4 * si2 ^ 16 + 1497675500 * eta ^ 2 * si2 ^ 18 - 387200000 * si2 ^ 20 - 3111353400 * eta ^ 5 * si2 ^ 14 - 3622168000 * eta ^ 3 * si2 ^ 16 + 37809000 * eta * si2 ^ 18 - 113598000 * eta ^ 6 * si2 ^ 12 - 4535542500 * eta ^ 4 * si2 ^ 14 - 2312106000 * eta ^ 2 * si2 ^ 16 + 986584500 * si2 ^ 18 + 2237661600 * eta ^ 5 * si2 ^ 12 + 3871506800 * eta ^ 3 * si2 ^ 14 + 24740000 * eta * si2 ^ 16 + 31438845 * eta ^ 6 * si2 ^ 10 + 3069377200 * eta ^ 4 * si2 ^ 12 + 2382199900 * eta ^ 2 * si2 ^ 14 - 1444982000 * si2 ^ 16 - 1142936070 * eta ^ 5 * si2 ^ 10 - 2910817600 * eta ^ 3 * si2 ^ 12 - 165679800 * eta * si2 ^ 14 - 732840 * eta ^ 6 * si2 ^ 8 - 1451313045 * eta ^ 4 * si2 ^ 10 - 1719752400 * eta ^ 2 * si2 ^ 12 + 1341032100 * si2 ^ 14 + 413444400 * eta ^ 5 * si2 ^ 8 + 1562957020 * eta ^ 3 * si2 ^ 10 + 255415200 * eta * si2 ^ 12 - 2573964 * eta ^ 6 * si2 ^ 6 + 479020400 * eta ^ 4 * si2 ^ 8 + 885477635 * eta ^ 2 * si2 ^ 10 - 818286000 * si2 ^ 12 - 103428120 * eta ^ 5 * si2 ^ 6 - 595376080 * eta ^ 3 * si2 ^ 8 - 214053590 * eta * si2 ^ 10 + 869718 * eta ^ 6 * si2 ^ 4 - 108031204 * eta ^ 4 * si2 ^ 6 - 323695960 * eta ^ 2 * si2 ^ 8 + 328429205 * si2 ^ 10 + 16978476 * eta ^ 5 * si2 ^ 4 + 156611408 * eta ^ 3 * si2 ^ 6 + 110715040 * eta * si2 ^ 8 - 125391 * eta ^ 6 * si2 ^ 2 + 15833298 * eta ^ 4 * si2 ^ 4 + 81866060 * eta ^ 2 * si2 ^ 6 - 83374960 * si2 ^ 8 - 1640862 * eta ^ 5 * si2 ^ 2 - 26937992 * eta ^ 3 * si2 ^ 4 - 36271800 * eta * si2 ^ 6 + 7056 * eta ^ 6 - 1355337 * eta ^ 4 * si2 ^ 2 - 13567318 * eta ^ 2 * si2 ^ 4 + 11827620 * si2 ^ 6 + 70560 * eta ^ 5 + 2715660 * eta ^ 3 * si2 ^ 2 + 7334748 * eta * si2 ^ 4 + 51264 * eta ^ 4 + 1320207 * eta ^ 2 * si2 ^ 2 - 510930 * si2 ^ 4 - 121248 * eta ^ 3 - 835310 * eta * si2 ^ 2 - 56976 * eta ^ 2 - 78967 * si2 ^ 2 + 40960 * eta + 8384) / (7680000 * L ^ 8 * eta ^ 10 * si2 ^ 16 + 15360000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 - 61440000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 52224000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 + 104448000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 49152000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 - 98304000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 27955200 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 + 55910400 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 9830400 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 - 19660800 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 2088960 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 + 4177920 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 245760 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 - 491520 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 12288 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 24576 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * ch * sin(0.3e1 * g) - sqrt((-eta ^ 2 + 1)) * (8910000 * eta ^ 7 * si2 ^ 20 + 55530000 * eta ^ 6 * si2 ^ 20 - 51840000 * eta ^ 7 * si2 ^ 18 + 87510000 * eta ^ 5 * si2 ^ 20 - 323520000 * eta ^ 6 * si2 ^ 18 - 92910000 * eta ^ 4 * si2 ^ 20 + 133285500 * eta ^ 7 * si2 ^ 16 - 510240000 * eta ^ 5 * si2 ^ 18 - 186630000 * eta ^ 3 * si2 ^ 20 + 831856500 * eta ^ 6 * si2 ^ 16 + 542880000 * eta ^ 4 * si2 ^ 18 + 2190000 * eta ^ 2 * si2 ^ 20 - 199314000 * eta ^ 7 * si2 ^ 14 + 1311077500 * eta ^ 5 * si2 ^ 16 + 1086240000 * eta ^ 3 * si2 ^ 18 + 94050000 * eta * si2 ^ 20 - 1242006000 * eta ^ 6 * si2 ^ 14 - 1399675500 * eta ^ 4 * si2 ^ 16 - 13920000 * eta ^ 2 * si2 ^ 18 + 31350000 * si2 ^ 20 + 191893500 * eta ^ 7 * si2 ^ 12 - 1952514000 * eta ^ 5 * si2 ^ 14 - 2787667500 * eta ^ 3 * si2 ^ 16 - 547200000 * eta * si2 ^ 18 + 1191462900 * eta ^ 6 * si2 ^ 12 + 2094890000 * eta ^ 4 * si2 ^ 14 + 39069500 * eta ^ 2 * si2 ^ 16 - 182400000 * si2 ^ 18 - 124261200 * eta ^ 7 * si2 ^ 10 + 1863864700 * eta ^ 5 * si2 ^ 12 + 4149226000 * eta ^ 3 * si2 ^ 14 + 1404040500 * eta * si2 ^ 16 - 766844400 * eta ^ 6 * si2 ^ 10 - 2013864300 * eta ^ 4 * si2 ^ 12 - 63778000 * eta ^ 2 * si2 ^ 14 + 468013500 * si2 ^ 16 + 54815475 * eta ^ 7 * si2 ^ 8 - 1190258000 * eta ^ 5 * si2 ^ 10 - 3962093100 * eta ^ 3 * si2 ^ 12 - 2089878000 * eta * si2 ^ 14 + 335226585 * eta ^ 6 * si2 ^ 8 + 1298349200 * eta ^ 4 * si2 ^ 10 + 67063100 * eta ^ 2 * si2 ^ 12 - 696626000 * si2 ^ 14 - 16273680 * eta ^ 7 * si2 ^ 6 + 514475315 * eta ^ 5 * si2 ^ 8 + 2533709200 * eta ^ 3 * si2 ^ 10 + 1996254900 * eta * si2 ^ 12 - 98287920 * eta ^ 6 * si2 ^ 6 - 568262655 * eta ^ 4 * si2 ^ 8 - 47454800 * eta ^ 2 * si2 ^ 10 + 665418300 * si2 ^ 12 + 3114756 * eta ^ 7 * si2 ^ 4 - 148554000 * eta ^ 5 * si2 ^ 6 - 1098131775 * eta ^ 3 * si2 ^ 8 - 1277430000 * eta * si2 ^ 10 + 18508044 * eta ^ 6 * si2 ^ 4 + 166726480 * eta ^ 4 * si2 ^ 6 + 22874995 * eta ^ 2 * si2 ^ 8 - 425810000 * si2 ^ 10 - 347550 * eta ^ 7 * si2 ^ 2 + 27427332 * eta ^ 5 * si2 ^ 4 + 318435920 * eta ^ 3 * si2 ^ 6 + 554251545 * eta * si2 ^ 8 - 2023386 * eta ^ 6 * si2 ^ 2 - 31398932 * eta ^ 4 * si2 ^ 4 - 7412240 * eta ^ 2 * si2 ^ 6 + 184750515 * si2 ^ 8 + 17199 * eta ^ 7 - 2925982 * eta ^ 5 * si2 ^ 2 - 59148628 * eta ^ 3 * si2 ^ 4 - 160975920 * eta * si2 ^ 6 + 97677 * eta ^ 6 + 3431190 * eta ^ 4 * si2 ^ 2 + 1544260 * eta ^ 2 * si2 ^ 4 - 53658640 * si2 ^ 6 + 137135 * eta ^ 5 + 6361110 * eta ^ 3 * si2 ^ 2 + 29964876 * eta * si2 ^ 4 - 165483 * eta ^ 4 - 186782 * eta ^ 2 * si2 ^ 2 + 9988292 * si2 ^ 4 - 301227 * eta ^ 3 - 3231450 * eta * si2 ^ 2 + 9967 * eta ^ 2 - 1077150 * si2 ^ 2 + 153549 * eta + 51183) * (si2 ^ 4) / (7680000 * L ^ 8 * eta ^ 11 * si2 ^ 16 + 23040000 * L ^ 8 * eta ^ 10 * si2 ^ 16 - 30720000 * L ^ 8 * eta ^ 11 * si2 ^ 14 + 23040000 * L ^ 8 * eta ^ 9 * si2 ^ 16 - 92160000 * L ^ 8 * eta ^ 10 * si2 ^ 14 + 7680000 * L ^ 8 * eta ^ 8 * si2 ^ 16 + 52224000 * L ^ 8 * eta ^ 11 * si2 ^ 12 - 92160000 * L ^ 8 * eta ^ 9 * si2 ^ 14 + 156672000 * L ^ 8 * eta ^ 10 * si2 ^ 12 - 30720000 * L ^ 8 * eta ^ 8 * si2 ^ 14 - 49152000 * L ^ 8 * eta ^ 11 * si2 ^ 10 + 156672000 * L ^ 8 * eta ^ 9 * si2 ^ 12 - 147456000 * L ^ 8 * eta ^ 10 * si2 ^ 10 + 52224000 * L ^ 8 * eta ^ 8 * si2 ^ 12 + 27955200 * L ^ 8 * eta ^ 11 * si2 ^ 8 - 147456000 * L ^ 8 * eta ^ 9 * si2 ^ 10 + 83865600 * L ^ 8 * eta ^ 10 * si2 ^ 8 - 49152000 * L ^ 8 * eta ^ 8 * si2 ^ 10 - 9830400 * L ^ 8 * eta ^ 11 * si2 ^ 6 + 83865600 * L ^ 8 * eta ^ 9 * si2 ^ 8 - 29491200 * L ^ 8 * eta ^ 10 * si2 ^ 6 + 27955200 * L ^ 8 * eta ^ 8 * si2 ^ 8 + 2088960 * L ^ 8 * eta ^ 11 * si2 ^ 4 - 29491200 * L ^ 8 * eta ^ 9 * si2 ^ 6 + 6266880 * L ^ 8 * eta ^ 10 * si2 ^ 4 - 9830400 * L ^ 8 * eta ^ 8 * si2 ^ 6 - 245760 * L ^ 8 * eta ^ 11 * si2 ^ 2 + 6266880 * L ^ 8 * eta ^ 9 * si2 ^ 4 - 737280 * L ^ 8 * eta ^ 10 * si2 ^ 2 + 2088960 * L ^ 8 * eta ^ 8 * si2 ^ 4 + 12288 * L ^ 8 * eta ^ 11 - 737280 * L ^ 8 * eta ^ 9 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 10 - 245760 * L ^ 8 * eta ^ 8 * si2 ^ 2 + 36864 * L ^ 8 * eta ^ 9 + 12288 * L ^ 8 * eta ^ 8) * ch * sin(0.5e1 * g)) * J ^ 2 * R__e ^ 4 * mu ^ 4;



J2_LPX2 = [ lp2t11 + O2Msign*lp2t21;
			lp2t12 + O2Msign*lp2t22;
			lp2t13 + O2Msign*lp2t23;
			lp2t14 + O2Msign*lp2t24;
			lp2t15 + O2Msign*lp2t25;
			lp2t16 + O2Msign*lp2t26];


% Total First Order LP contributions
EqLPX1 = J2_LPX1;

% Total Second Order LP contributions
EqLPX2 = J2_LPX2;

Eqlp = EqLPX1 + EqLPX2;

if JacobianOn == true
    % First-Order Dlp for J2

   
    D1 = [0 0 0 0 0 0];
	D2 = [0.75e2 / 0.2e1 * (ci2 + 1) * R__e ^ 2 * (ci2 - 1) * sin((2 * g)) * ((eta ^ 2 + 0.5e1 / 0.2e1 * eta + 0.5e1 / 0.2e1) * (ci2 ^ 10) + (-0.2e1 * eta ^ 2 - 0.11e2 / 0.2e1 * eta - 0.11e2 / 0.2e1) * (ci2 ^ 8) + (0.43e2 / 0.30e2 * eta ^ 2 + 0.91e2 / 0.20e2 * eta + 0.91e2 / 0.20e2) * (ci2 ^ 6) + (-0.13e2 / 0.30e2 * eta ^ 2 - 0.7e1 / 0.4e1 * eta - 0.7e1 / 0.4e1) * (ci2 ^ 4) + (0.7e1 / 0.150e3 * eta ^ 2 + 0.19e2 / 0.60e2 * eta + 0.19e2 / 0.60e2) * (ci2 ^ 2) - 0.7e1 / 0.300e3 * eta - 0.7e1 / 0.300e3) * J * (eta - 0.1e1) / a ^ 3 / eta ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 2) 0 0.375e3 / 0.2e1 * sqrt((-ci2 ^ 2 + 1)) * ((ci2 + 1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.7e1 / 0.5e1 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * (ci2 ^ 2) * eta ^ 2 + (0.5e1 / 0.2e1 * (ci2 ^ 14) - 0.31e2 / 0.4e1 * (ci2 ^ 12) + 0.39e2 / 0.4e1 * (ci2 ^ 10) - 0.257e3 / 0.40e2 * (ci2 ^ 8) + 0.1427e4 / 0.600e3 * (ci2 ^ 6) - 0.49e2 / 0.100e3 * (ci2 ^ 4) + 0.31e2 / 0.600e3 * (ci2 ^ 2) - 0.7e1 / 0.3000e4) * eta + 0.5e1 / 0.2e1 * (ci2 ^ 14) - 0.31e2 / 0.4e1 * (ci2 ^ 12) + 0.39e2 / 0.4e1 * (ci2 ^ 10) - 0.257e3 / 0.40e2 * (ci2 ^ 8) + 0.1427e4 / 0.600e3 * (ci2 ^ 6) - 0.49e2 / 0.100e3 * (ci2 ^ 4) + 0.31e2 / 0.600e3 * (ci2 ^ 2) - 0.7e1 / 0.3000e4) * (ci2 - 1) * sin((-h + 2 * g)) + sin((h + 2 * g)) * (((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.7e1 / 0.5e1 * (ci2 ^ 4) - 0.23e2 / 0.60e2 * (ci2 ^ 2) + 0.3e1 / 0.100e3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 ^ 4) * eta ^ 2 + (-0.45e2 / 0.8e1 * (ci2 ^ 10) + 0.13e2 / 0.120e3 * (ci2 ^ 6) + 0.19e2 / 0.2e1 * (ci2 ^ 12) - 0.31e2 / 0.4e1 * (ci2 ^ 14) + 0.49e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.3000e4 + 0.5e1 / 0.2e1 * (ci2 ^ 16) - 0.89e2 / 0.600e3 * (ci2 ^ 4) + 0.421e3 / 0.300e3 * (ci2 ^ 8)) * eta - 0.45e2 / 0.8e1 * (ci2 ^ 10) + 0.13e2 / 0.120e3 * (ci2 ^ 6) + 0.19e2 / 0.2e1 * (ci2 ^ 12) - 0.31e2 / 0.4e1 * (ci2 ^ 14) + 0.49e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.3000e4 + 0.5e1 / 0.2e1 * (ci2 ^ 16) - 0.89e2 / 0.600e3 * (ci2 ^ 4) + 0.421e3 / 0.300e3 * (ci2 ^ 8))) * (eta - 0.1e1) * R__e ^ 2 * J * ci2 / a ^ 2 / eta ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) 0.375e3 / 0.2e1 * (eta - 0.1e1) * R__e ^ 2 * sqrt((-ci2 ^ 2 + 1)) * J * ci2 * ((ci2 + 1) * (ci2 - 1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.7e1 / 0.5e1 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * (ci2 ^ 2) * eta ^ 2 + (0.5e1 / 0.2e1 * (ci2 ^ 14) - 0.31e2 / 0.4e1 * (ci2 ^ 12) + 0.39e2 / 0.4e1 * (ci2 ^ 10) - 0.257e3 / 0.40e2 * (ci2 ^ 8) + 0.1427e4 / 0.600e3 * (ci2 ^ 6) - 0.49e2 / 0.100e3 * (ci2 ^ 4) + 0.31e2 / 0.600e3 * (ci2 ^ 2) - 0.7e1 / 0.3000e4) * eta + 0.5e1 / 0.2e1 * (ci2 ^ 14) - 0.31e2 / 0.4e1 * (ci2 ^ 12) + 0.39e2 / 0.4e1 * (ci2 ^ 10) - 0.257e3 / 0.40e2 * (ci2 ^ 8) + 0.1427e4 / 0.600e3 * (ci2 ^ 6) - 0.49e2 / 0.100e3 * (ci2 ^ 4) + 0.31e2 / 0.600e3 * (ci2 ^ 2) - 0.7e1 / 0.3000e4) * cos((-h + 2 * g)) - (((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.7e1 / 0.5e1 * (ci2 ^ 4) - 0.23e2 / 0.60e2 * (ci2 ^ 2) + 0.3e1 / 0.100e3) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 ^ 4) * eta ^ 2 + (-0.45e2 / 0.8e1 * (ci2 ^ 10) + 0.13e2 / 0.120e3 * (ci2 ^ 6) + 0.19e2 / 0.2e1 * (ci2 ^ 12) - 0.31e2 / 0.4e1 * (ci2 ^ 14) + 0.49e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.3000e4 + 0.5e1 / 0.2e1 * (ci2 ^ 16) - 0.89e2 / 0.600e3 * (ci2 ^ 4) + 0.421e3 / 0.300e3 * (ci2 ^ 8)) * eta - 0.45e2 / 0.8e1 * (ci2 ^ 10) + 0.13e2 / 0.120e3 * (ci2 ^ 6) + 0.19e2 / 0.2e1 * (ci2 ^ 12) - 0.31e2 / 0.4e1 * (ci2 ^ 14) + 0.49e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.3000e4 + 0.5e1 / 0.2e1 * (ci2 ^ 16) - 0.89e2 / 0.600e3 * (ci2 ^ 4) + 0.421e3 / 0.300e3 * (ci2 ^ 8)) * cos((h + 2 * g))) / a ^ 2 / eta ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) 0.3e1 / 0.8e1 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 - 1) * R__e ^ 2 * J * (ci2 + 1) * (-0.3e1 * ((eta ^ 3 + 0.4e1 * eta ^ 2 + 0.20e2 / 0.3e1 * eta + 0.10e2 / 0.3e1) * (ci2 ^ 10) + (-0.2e1 * eta ^ 3 - 0.26e2 / 0.3e1 * eta ^ 2 - 0.44e2 / 0.3e1 * eta - 0.22e2 / 0.3e1) * (ci2 ^ 8) + (0.43e2 / 0.30e2 * eta ^ 3 + 0.316e3 / 0.45e2 * eta ^ 2 + 0.182e3 / 0.15e2 * eta + 0.91e2 / 0.15e2) * (ci2 ^ 6) + (-0.13e2 / 0.30e2 * eta ^ 3 - 0.118e3 / 0.45e2 * eta ^ 2 - 0.14e2 / 0.3e1 * eta - 0.7e1 / 0.3e1) * (ci2 ^ 4) + (0.7e1 / 0.150e3 * eta ^ 3 + 0.34e2 / 0.75e2 * eta ^ 2 + 0.38e2 / 0.45e2 * eta + 0.19e2 / 0.45e2) * (ci2 ^ 2) - 0.7e1 / 0.225e3 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * sin((3 * g + h)) + sin((g - h)) * ((eta ^ 4 + eta ^ 3 + 0.2e1 * eta ^ 2 + 0.10e2 * eta + 0.10e2) * (ci2 ^ 10) + (-0.2e1 * eta ^ 4 - 0.2e1 * eta ^ 3 - 0.4e1 * eta ^ 2 - 0.22e2 * eta - 0.22e2) * (ci2 ^ 8) + (0.91e2 / 0.5e1 * eta + 0.43e2 / 0.30e2 * eta ^ 4 + 0.43e2 / 0.30e2 * eta ^ 3 + 0.43e2 / 0.15e2 * eta ^ 2 + 0.91e2 / 0.5e1) * (ci2 ^ 6) + (-0.7e1 * eta - 0.13e2 / 0.30e2 * eta ^ 4 - 0.13e2 / 0.15e2 * eta ^ 2 - 0.13e2 / 0.30e2 * eta ^ 3 - 0.7e1) * (ci2 ^ 4) + (0.7e1 / 0.150e3 * eta ^ 3 + 0.19e2 / 0.15e2 * eta + 0.19e2 / 0.15e2 + 0.7e1 / 0.150e3 * eta ^ 4 + 0.7e1 / 0.75e2 * eta ^ 2) * (ci2 ^ 2) - 0.7e1 / 0.75e2 - 0.7e1 / 0.75e2 * eta)) / eta ^ 6 / a ^ 2 / (0.1e1 + eta) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2 0.3e1 / 0.8e1 * (ci2 - 1) * sqrt(-eta ^ 2 + 0.1e1) * R__e ^ 2 * J * (0.3e1 * (eta - 0.1e1) * ((eta ^ 3 + 0.4e1 * eta ^ 2 + 0.20e2 / 0.3e1 * eta + 0.10e2 / 0.3e1) * (ci2 ^ 10) + (-0.2e1 * eta ^ 3 - 0.26e2 / 0.3e1 * eta ^ 2 - 0.44e2 / 0.3e1 * eta - 0.22e2 / 0.3e1) * (ci2 ^ 8) + (0.43e2 / 0.30e2 * eta ^ 3 + 0.316e3 / 0.45e2 * eta ^ 2 + 0.182e3 / 0.15e2 * eta + 0.91e2 / 0.15e2) * (ci2 ^ 6) + (-0.13e2 / 0.30e2 * eta ^ 3 - 0.118e3 / 0.45e2 * eta ^ 2 - 0.14e2 / 0.3e1 * eta - 0.7e1 / 0.3e1) * (ci2 ^ 4) + (0.7e1 / 0.150e3 * eta ^ 3 + 0.34e2 / 0.75e2 * eta ^ 2 + 0.38e2 / 0.45e2 * eta + 0.19e2 / 0.45e2) * (ci2 ^ 2) - 0.7e1 / 0.225e3 * (0.1e1 + eta) ^ 2) * cos((3 * g + h)) + cos((g - h)) * ((eta ^ 4 + eta ^ 3 + 0.2e1 * eta ^ 2 + 0.10e2 * eta + 0.10e2) * (ci2 ^ 10) + (-0.2e1 * eta ^ 4 - 0.2e1 * eta ^ 3 - 0.4e1 * eta ^ 2 - 0.22e2 * eta - 0.22e2) * (ci2 ^ 8) + (0.91e2 / 0.5e1 * eta + 0.43e2 / 0.30e2 * eta ^ 4 + 0.43e2 / 0.30e2 * eta ^ 3 + 0.43e2 / 0.15e2 * eta ^ 2 + 0.91e2 / 0.5e1) * (ci2 ^ 6) + (-0.7e1 * eta - 0.13e2 / 0.30e2 * eta ^ 4 - 0.13e2 / 0.15e2 * eta ^ 2 - 0.13e2 / 0.30e2 * eta ^ 3 - 0.7e1) * (ci2 ^ 4) + (0.7e1 / 0.150e3 * eta ^ 3 + 0.19e2 / 0.15e2 * eta + 0.19e2 / 0.15e2 + 0.7e1 / 0.150e3 * eta ^ 4 + 0.7e1 / 0.75e2 * eta ^ 2) * (ci2 ^ 2) - 0.7e1 / 0.75e2 - 0.7e1 / 0.75e2 * eta)) * (ci2 + 1) / a ^ 2 / eta ^ 6 / (0.1e1 + eta) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2];
	D3 = [-0.3e1 / 0.4e1 * sqrt((-ci2 ^ 2 + 1)) * (eta - 1) * (1 + eta) * R__e ^ 2 * J * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (((ci2 ^ 4) / 0.60e2 - (ci2 ^ 2) / 0.60e2) * cos((-h + 2 * g)) + cos((h + 2 * g)) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3)) / a ^ 3 / (eta ^ 4) / ci2 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2 0 0.375e3 / 0.8e1 * (((ci2 ^ 16) - (3 * ci2 ^ 14) + 0.37e2 / 0.12e2 * (ci2 ^ 12) - 0.19e2 / 0.30e2 * (ci2 ^ 10) - 0.119e3 / 0.100e3 * (ci2 ^ 8) + 0.323e3 / 0.300e3 * (ci2 ^ 6) - 0.149e3 / 0.375e3 * (ci2 ^ 4) + 0.7e1 / 0.100e3 * (ci2 ^ 2) - 0.7e1 / 0.1500e4) * cos((2 * g + 2 * h)) + (-(ci2 + 1) * (ci2 - 1) * ((ci2 ^ 6) - 0.3e1 / 0.5e1 * (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((2 * g - 2 * h)) / 0.60e2 + cos((2 * g)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.41e2 / 0.30e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.3e1 + 0.1e1 / 0.75e2)) * (ci2 + 1) * (ci2 - 1) * (ci2 ^ 2)) * (eta - 1) * (1 + eta) * R__e ^ 2 * J / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) / a ^ 2 / (eta ^ 4) 0.375e3 / 0.8e1 * (eta - 1) * (1 + eta) * R__e ^ 2 * J * (((ci2 ^ 16) - (3 * ci2 ^ 14) + 0.37e2 / 0.12e2 * (ci2 ^ 12) - 0.19e2 / 0.30e2 * (ci2 ^ 10) - 0.119e3 / 0.100e3 * (ci2 ^ 8) + 0.323e3 / 0.300e3 * (ci2 ^ 6) - 0.149e3 / 0.375e3 * (ci2 ^ 4) + 0.7e1 / 0.100e3 * (ci2 ^ 2) - 0.7e1 / 0.1500e4) * sin((2 * g + 2 * h)) - (ci2 + 1) * (ci2 - 1) * (ci2 ^ 2) * (-(ci2 + 1) * (ci2 - 1) * ((ci2 ^ 6) - 0.3e1 / 0.5e1 * (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((2 * g - 2 * h)) / 0.60e2 + sin((2 * g)) * ((ci2 ^ 12) - (3 * ci2 ^ 10) + 0.18e2 / 0.5e1 * (ci2 ^ 8) - 0.67e2 / 0.30e2 * (ci2 ^ 6) + 0.3e1 / 0.4e1 * (ci2 ^ 4) - 0.37e2 / 0.300e3 * (ci2 ^ 2) + 0.3e1 / 0.500e3))) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) / a ^ 2 / (eta ^ 4) -((ci2 ^ 2) - 0.1e1 / 0.2e1) * R__e ^ 2 * sqrt((-eta ^ 2 + 1)) * J * sqrt((-ci2 ^ 2 + 1)) * (-0.60e2 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * (eta - 1) * (1 + eta) * cos((3 * g + 2 * h)) + (ci2 ^ 4 - ci2 ^ 2) * cos((g - 2 * h)) + ((-eta ^ 2 + 1) * ci2 ^ 4 + ci2 ^ 2 * (eta ^ 2 - 1)) * cos((3 * g)) + 0.60e2 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * cos(g)) / a ^ 2 / (eta ^ 6) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2 / ci2 / 0.80e2 ((ci2 ^ 2) - 0.1e1 / 0.2e1) * R__e ^ 2 * sqrt((-eta ^ 2 + 1)) * (0.60e2 * (eta - 1) * (1 + eta) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * sin((3 * g + 2 * h)) + (ci2 ^ 4 - ci2 ^ 2) * sin((g - 2 * h)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * sin((3 * g)) + 0.60e2 * sin(g) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3)) * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 6) / ci2 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2 / 0.80e2];
	D4 = [-0.3e1 / 0.4e1 * sqrt((-ci2 ^ 2 + 1)) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (eta - 1) * (1 + eta) * R__e ^ 2 * ((-(ci2 ^ 4) / 0.60e2 + (ci2 ^ 2) / 0.60e2) * sin((-h + 2 * g)) + sin((h + 2 * g)) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3)) * J / a ^ 3 / (eta ^ 4) / ci2 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2 0 0.375e3 / 0.8e1 * (((ci2 ^ 16) - (3 * ci2 ^ 14) + 0.37e2 / 0.12e2 * (ci2 ^ 12) - 0.19e2 / 0.30e2 * (ci2 ^ 10) - 0.119e3 / 0.100e3 * (ci2 ^ 8) + 0.323e3 / 0.300e3 * (ci2 ^ 6) - 0.149e3 / 0.375e3 * (ci2 ^ 4) + 0.7e1 / 0.100e3 * (ci2 ^ 2) - 0.7e1 / 0.1500e4) * sin((2 * g + 2 * h)) + (ci2 + 1) * (ci2 - 1) * (ci2 ^ 2) * ((ci2 + 1) * (ci2 - 1) * ((ci2 ^ 6) - 0.3e1 / 0.5e1 * (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((2 * g - 2 * h)) / 0.60e2 + sin((2 * g)) * ((ci2 ^ 12) - (3 * ci2 ^ 10) + 0.18e2 / 0.5e1 * (ci2 ^ 8) - 0.67e2 / 0.30e2 * (ci2 ^ 6) + 0.3e1 / 0.4e1 * (ci2 ^ 4) - 0.37e2 / 0.300e3 * (ci2 ^ 2) + 0.3e1 / 0.500e3))) * (eta - 1) * (1 + eta) * R__e ^ 2 * J / a ^ 2 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) -0.375e3 / 0.8e1 * (eta - 1) * (1 + eta) * R__e ^ 2 * J * (((ci2 ^ 16) - (3 * ci2 ^ 14) + 0.37e2 / 0.12e2 * (ci2 ^ 12) - 0.19e2 / 0.30e2 * (ci2 ^ 10) - 0.119e3 / 0.100e3 * (ci2 ^ 8) + 0.323e3 / 0.300e3 * (ci2 ^ 6) - 0.149e3 / 0.375e3 * (ci2 ^ 4) + 0.7e1 / 0.100e3 * (ci2 ^ 2) - 0.7e1 / 0.1500e4) * cos((2 * g + 2 * h)) - (ci2 + 1) * (ci2 - 1) * ((ci2 + 1) * (ci2 - 1) * ((ci2 ^ 6) - 0.3e1 / 0.5e1 * (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((2 * g - 2 * h)) / 0.60e2 + cos((2 * g)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.41e2 / 0.30e2 * (ci2 ^ 4) - (ci2 ^ 2) / 0.3e1 + 0.1e1 / 0.75e2)) * (ci2 ^ 2)) / a ^ 2 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) ((ci2 ^ 2) - 0.1e1 / 0.2e1) * R__e ^ 2 * sqrt((-eta ^ 2 + 1)) * (0.60e2 * (eta - 1) * (1 + eta) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * sin((3 * g + 2 * h)) + (ci2 ^ 4 - ci2 ^ 2) * sin((g - 2 * h)) + ((-eta ^ 2 + 1) * ci2 ^ 4 + ci2 ^ 2 * (eta ^ 2 - 1)) * sin((3 * g)) - 0.60e2 * sin(g) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3)) * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 6) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2 / ci2 / 0.80e2 (-0.60e2 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * (eta - 1) * (1 + eta) * cos((3 * g + 2 * h)) + (ci2 ^ 4 - ci2 ^ 2) * cos((g - 2 * h)) + ((eta ^ 2 - 1) * ci2 ^ 4 + (-eta ^ 2 + 1) * ci2 ^ 2) * cos((3 * g)) - 0.60e2 * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.17e2 / 0.12e2 * (ci2 ^ 4) - 0.5e1 / 0.12e2 * (ci2 ^ 2) + 0.7e1 / 0.150e3) * cos(g)) * R__e ^ 2 * sqrt((-eta ^ 2 + 1)) * J * sqrt((-ci2 ^ 2 + 1)) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) / a ^ 2 / (eta ^ 6) / ci2 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 2 / 0.80e2];
	D5 = [-0.75e2 / 0.8e1 * ((((eta ^ 2 - 5) * ci2 ^ 10) + ((-3 * eta ^ 2 + 11) * ci2 ^ 8) + (0.101e3 / 0.30e2 * (eta ^ 2) - 0.91e2 / 0.10e2) * (ci2 ^ 6) + (-0.53e2 / 0.30e2 * (eta ^ 2) + 0.7e1 / 0.2e1) * (ci2 ^ 4) + (0.67e2 / 0.150e3 * (eta ^ 2) - 0.19e2 / 0.30e2) * (ci2 ^ 2) - 0.7e1 / 0.150e3 * (eta ^ 2) + 0.7e1 / 0.150e3) * cos(g - h) - 0.5e1 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (eta - 1) * (1 + eta) * cos(0.3e1 * g + h)) * R__e ^ 2 * J * sqrt((-eta ^ 2 + 1)) * (ci2 - 1) * (ci2 + 1) / a ^ 3 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 2) 0 -0.375e3 / 0.8e1 * (-0.5e1 * ((ci2 ^ 16) - 0.31e2 / 0.10e2 * (ci2 ^ 14) + 0.19e2 / 0.5e1 * (ci2 ^ 12) - 0.9e1 / 0.4e1 * (ci2 ^ 10) + 0.421e3 / 0.750e3 * (ci2 ^ 8) + 0.13e2 / 0.300e3 * (ci2 ^ 6) - 0.89e2 / 0.1500e4 * (ci2 ^ 4) + 0.49e2 / 0.3750e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * (eta - 1) * (1 + eta) * cos(0.3e1 * g + 0.2e1 * h) + (ci2 + 1) * (ci2 - 1) * (((eta ^ 2 - 5) * ci2 ^ 14) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 12) + (0.51e2 / 0.10e2 * (eta ^ 2) - 0.39e2 / 0.2e1) * (ci2 ^ 10) + (-0.239e3 / 0.60e2 * (eta ^ 2) + 0.257e3 / 0.20e2) * (ci2 ^ 8) + (0.107e3 / 0.60e2 * (eta ^ 2) - 0.1427e4 / 0.300e3) * (ci2 ^ 6) + (-0.23e2 / 0.50e2 * (eta ^ 2) + 0.49e2 / 0.50e2) * (ci2 ^ 4) + (0.33e2 / 0.500e3 * (eta ^ 2) - 0.31e2 / 0.300e3) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4) * cos(g - 0.2e1 * h) - 0.5e1 * (eta - 1) * (ci2 + 1) * (1 + eta) * (ci2 - 1) * ((ci2 ^ 14) - 0.31e2 / 0.10e2 * (ci2 ^ 12) + 0.39e2 / 0.10e2 * (ci2 ^ 10) - 0.257e3 / 0.100e3 * (ci2 ^ 8) + 0.1427e4 / 0.1500e4 * (ci2 ^ 6) - 0.49e2 / 0.250e3 * (ci2 ^ 4) + 0.31e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * cos(0.3e1 * g) + cos(g) * (((eta ^ 2 - 5) * ci2 ^ 16) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 14) + (-0.19e2 + 0.23e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 12) + (0.45e2 / 0.4e1 - 0.151e3 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.421e3 / 0.150e3 + (eta ^ 2) / 0.30e2) * (ci2 ^ 8) + (-0.13e2 / 0.60e2 + 0.193e3 / 0.300e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.89e2 / 0.300e3 - 0.481e3 / 0.1500e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.49e2 / 0.750e3 + 0.49e2 / 0.750e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4)) * sqrt((-eta ^ 2 + 1)) * R__e ^ 2 * ci2 * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) 0.375e3 / 0.8e1 * (0.5e1 * (eta - 1) * (1 + eta) * ((ci2 ^ 16) - 0.31e2 / 0.10e2 * (ci2 ^ 14) + 0.19e2 / 0.5e1 * (ci2 ^ 12) - 0.9e1 / 0.4e1 * (ci2 ^ 10) + 0.421e3 / 0.750e3 * (ci2 ^ 8) + 0.13e2 / 0.300e3 * (ci2 ^ 6) - 0.89e2 / 0.1500e4 * (ci2 ^ 4) + 0.49e2 / 0.3750e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * sin(0.3e1 * g + 0.2e1 * h) + (ci2 + 1) * (((eta ^ 2 - 5) * ci2 ^ 14) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 12) + (0.51e2 / 0.10e2 * (eta ^ 2) - 0.39e2 / 0.2e1) * (ci2 ^ 10) + (-0.239e3 / 0.60e2 * (eta ^ 2) + 0.257e3 / 0.20e2) * (ci2 ^ 8) + (0.107e3 / 0.60e2 * (eta ^ 2) - 0.1427e4 / 0.300e3) * (ci2 ^ 6) + (-0.23e2 / 0.50e2 * (eta ^ 2) + 0.49e2 / 0.50e2) * (ci2 ^ 4) + (0.33e2 / 0.500e3 * (eta ^ 2) - 0.31e2 / 0.300e3) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4) * (ci2 - 1) * sin(g - 0.2e1 * h) - 0.5e1 * ((ci2 ^ 14) - 0.31e2 / 0.10e2 * (ci2 ^ 12) + 0.39e2 / 0.10e2 * (ci2 ^ 10) - 0.257e3 / 0.100e3 * (ci2 ^ 8) + 0.1427e4 / 0.1500e4 * (ci2 ^ 6) - 0.49e2 / 0.250e3 * (ci2 ^ 4) + 0.31e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * (ci2 + 1) * (eta - 1) * (1 + eta) * (ci2 - 1) * sin(0.3e1 * g) - (((eta ^ 2 - 5) * ci2 ^ 16) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 14) + (-0.19e2 + 0.23e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 12) + (0.45e2 / 0.4e1 - 0.151e3 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.421e3 / 0.150e3 + (eta ^ 2) / 0.30e2) * (ci2 ^ 8) + (-0.13e2 / 0.60e2 + 0.193e3 / 0.300e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.89e2 / 0.300e3 - 0.481e3 / 0.1500e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.49e2 / 0.750e3 + 0.49e2 / 0.750e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4) * sin(g)) * sqrt((-eta ^ 2 + 1)) * R__e ^ 2 * ci2 * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) 0.375e3 / 0.8e1 * (ci2 + 1) * R__e ^ 2 * J * (((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos(0.4e1 * g + 0.2e1 * h) - 0.3e1 / 0.5e1 * ((ci2 ^ 10) - 0.7e1 / 0.3e1 * (ci2 ^ 8) + 0.187e3 / 0.90e2 * (ci2 ^ 6) - 0.79e2 / 0.90e2 * (ci2 ^ 4) + 0.9e1 / 0.50e2 * (ci2 ^ 2) - 0.7e1 / 0.450e3) * (eta ^ 2) * (eta - 1) * (1 + eta) * cos(0.2e1 * g) + 0.3e1 / 0.5e1 * cos(0.2e1 * h) * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 10) + (-0.7e1 / 0.3e1 * (eta ^ 2) + 0.11e2 / 0.3e1) * (ci2 ^ 8) + (0.187e3 / 0.90e2 * (eta ^ 2) - 0.91e2 / 0.30e2) * (ci2 ^ 6) + (-0.79e2 / 0.90e2 * (eta ^ 2) + 0.7e1 / 0.6e1) * (ci2 ^ 4) + (0.9e1 / 0.50e2 * (eta ^ 2) - 0.19e2 / 0.90e2) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (eta ^ 2) + 0.7e1 / 0.450e3)) * (ci2 - 1) / (eta ^ 6) / a ^ 2 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 2) 0.375e3 / 0.8e1 * R__e ^ 2 * (ci2 + 1) * J * (ci2 - 1) * (((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * sin(0.4e1 * g + 0.2e1 * h) + 0.2e1 / 0.5e1 * (-0.7e1 / 0.150e3 + ((eta ^ 2 + 5) * ci2 ^ 10) + ((-2 * eta ^ 2 - 11) * ci2 ^ 8) + (0.43e2 / 0.30e2 * (eta ^ 2) + 0.91e2 / 0.10e2) * (ci2 ^ 6) + (-0.13e2 / 0.30e2 * (eta ^ 2) - 0.7e1 / 0.2e1) * (ci2 ^ 4) + (0.7e1 / 0.150e3 * (eta ^ 2) + 0.19e2 / 0.30e2) * (ci2 ^ 2)) * (eta - 1) * (1 + eta) * sin(0.2e1 * g) + 0.3e1 / 0.5e1 * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 10) + (-0.7e1 / 0.3e1 * (eta ^ 2) + 0.11e2 / 0.3e1) * (ci2 ^ 8) + (0.187e3 / 0.90e2 * (eta ^ 2) - 0.91e2 / 0.30e2) * (ci2 ^ 6) + (-0.79e2 / 0.90e2 * (eta ^ 2) + 0.7e1 / 0.6e1) * (ci2 ^ 4) + (0.9e1 / 0.50e2 * (eta ^ 2) - 0.19e2 / 0.90e2) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (eta ^ 2) + 0.7e1 / 0.450e3) * sin(0.2e1 * h)) / (eta ^ 6) / a ^ 2 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 2)];
	D6 = [0.75e2 / 0.8e1 * (ci2 + 1) * R__e ^ 2 * sqrt((-eta ^ 2 + 1)) * J * ((((eta ^ 2 - 5) * ci2 ^ 10) + ((-3 * eta ^ 2 + 11) * ci2 ^ 8) + (0.101e3 / 0.30e2 * (eta ^ 2) - 0.91e2 / 0.10e2) * (ci2 ^ 6) + (-0.53e2 / 0.30e2 * (eta ^ 2) + 0.7e1 / 0.2e1) * (ci2 ^ 4) + (0.67e2 / 0.150e3 * (eta ^ 2) - 0.19e2 / 0.30e2) * (ci2 ^ 2) - 0.7e1 / 0.150e3 * (eta ^ 2) + 0.7e1 / 0.150e3) * sin(g - h) + 0.5e1 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (eta - 1) * (1 + eta) * sin(0.3e1 * g + h)) * (ci2 - 1) / a ^ 3 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 2) 0 0.375e3 / 0.8e1 * (0.5e1 * (eta - 1) * (1 + eta) * ((ci2 ^ 16) - 0.31e2 / 0.10e2 * (ci2 ^ 14) + 0.19e2 / 0.5e1 * (ci2 ^ 12) - 0.9e1 / 0.4e1 * (ci2 ^ 10) + 0.421e3 / 0.750e3 * (ci2 ^ 8) + 0.13e2 / 0.300e3 * (ci2 ^ 6) - 0.89e2 / 0.1500e4 * (ci2 ^ 4) + 0.49e2 / 0.3750e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * sin(0.3e1 * g + 0.2e1 * h) + (ci2 + 1) * (((eta ^ 2 - 5) * ci2 ^ 14) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 12) + (0.51e2 / 0.10e2 * (eta ^ 2) - 0.39e2 / 0.2e1) * (ci2 ^ 10) + (-0.239e3 / 0.60e2 * (eta ^ 2) + 0.257e3 / 0.20e2) * (ci2 ^ 8) + (0.107e3 / 0.60e2 * (eta ^ 2) - 0.1427e4 / 0.300e3) * (ci2 ^ 6) + (-0.23e2 / 0.50e2 * (eta ^ 2) + 0.49e2 / 0.50e2) * (ci2 ^ 4) + (0.33e2 / 0.500e3 * (eta ^ 2) - 0.31e2 / 0.300e3) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4) * (ci2 - 1) * sin(g - 0.2e1 * h) + 0.5e1 * ((ci2 ^ 14) - 0.31e2 / 0.10e2 * (ci2 ^ 12) + 0.39e2 / 0.10e2 * (ci2 ^ 10) - 0.257e3 / 0.100e3 * (ci2 ^ 8) + 0.1427e4 / 0.1500e4 * (ci2 ^ 6) - 0.49e2 / 0.250e3 * (ci2 ^ 4) + 0.31e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * (ci2 + 1) * (eta - 1) * (1 + eta) * (ci2 - 1) * sin(0.3e1 * g) + (((eta ^ 2 - 5) * ci2 ^ 16) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 14) + (-0.19e2 + 0.23e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 12) + (0.45e2 / 0.4e1 - 0.151e3 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.421e3 / 0.150e3 + (eta ^ 2) / 0.30e2) * (ci2 ^ 8) + (-0.13e2 / 0.60e2 + 0.193e3 / 0.300e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.89e2 / 0.300e3 - 0.481e3 / 0.1500e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.49e2 / 0.750e3 + 0.49e2 / 0.750e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4) * sin(g)) * R__e ^ 2 * ci2 * J * sqrt((-ci2 ^ 2 + 1)) * sqrt((-eta ^ 2 + 1)) / a ^ 2 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) 0.375e3 / 0.8e1 * sqrt((-eta ^ 2 + 1)) * R__e ^ 2 * (-0.5e1 * ((ci2 ^ 16) - 0.31e2 / 0.10e2 * (ci2 ^ 14) + 0.19e2 / 0.5e1 * (ci2 ^ 12) - 0.9e1 / 0.4e1 * (ci2 ^ 10) + 0.421e3 / 0.750e3 * (ci2 ^ 8) + 0.13e2 / 0.300e3 * (ci2 ^ 6) - 0.89e2 / 0.1500e4 * (ci2 ^ 4) + 0.49e2 / 0.3750e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * (eta - 1) * (1 + eta) * cos(0.3e1 * g + 0.2e1 * h) + (ci2 + 1) * (ci2 - 1) * (((eta ^ 2 - 5) * ci2 ^ 14) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 12) + (0.51e2 / 0.10e2 * (eta ^ 2) - 0.39e2 / 0.2e1) * (ci2 ^ 10) + (-0.239e3 / 0.60e2 * (eta ^ 2) + 0.257e3 / 0.20e2) * (ci2 ^ 8) + (0.107e3 / 0.60e2 * (eta ^ 2) - 0.1427e4 / 0.300e3) * (ci2 ^ 6) + (-0.23e2 / 0.50e2 * (eta ^ 2) + 0.49e2 / 0.50e2) * (ci2 ^ 4) + (0.33e2 / 0.500e3 * (eta ^ 2) - 0.31e2 / 0.300e3) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4) * cos(g - 0.2e1 * h) + 0.5e1 * (eta - 1) * (ci2 + 1) * (1 + eta) * (ci2 - 1) * ((ci2 ^ 14) - 0.31e2 / 0.10e2 * (ci2 ^ 12) + 0.39e2 / 0.10e2 * (ci2 ^ 10) - 0.257e3 / 0.100e3 * (ci2 ^ 8) + 0.1427e4 / 0.1500e4 * (ci2 ^ 6) - 0.49e2 / 0.250e3 * (ci2 ^ 4) + 0.31e2 / 0.1500e4 * (ci2 ^ 2) - 0.7e1 / 0.7500e4) * cos(0.3e1 * g) - cos(g) * (((eta ^ 2 - 5) * ci2 ^ 16) + (-0.7e1 / 0.2e1 * (eta ^ 2) + 0.31e2 / 0.2e1) * (ci2 ^ 14) + (-0.19e2 + 0.23e2 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 12) + (0.45e2 / 0.4e1 - 0.151e3 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.421e3 / 0.150e3 + (eta ^ 2) / 0.30e2) * (ci2 ^ 8) + (-0.13e2 / 0.60e2 + 0.193e3 / 0.300e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.89e2 / 0.300e3 - 0.481e3 / 0.1500e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.49e2 / 0.750e3 + 0.49e2 / 0.750e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.7e1 / 0.1500e4 * (eta ^ 2) + 0.7e1 / 0.1500e4)) * ci2 * J * sqrt((-ci2 ^ 2 + 1)) / a ^ 2 / (eta ^ 4) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 3) 0.375e3 / 0.8e1 * (((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * sin(0.4e1 * g + 0.2e1 * h) - 0.2e1 / 0.5e1 * (-0.7e1 / 0.150e3 + ((eta ^ 2 + 5) * ci2 ^ 10) + ((-2 * eta ^ 2 - 11) * ci2 ^ 8) + (0.43e2 / 0.30e2 * (eta ^ 2) + 0.91e2 / 0.10e2) * (ci2 ^ 6) + (-0.13e2 / 0.30e2 * (eta ^ 2) - 0.7e1 / 0.2e1) * (ci2 ^ 4) + (0.7e1 / 0.150e3 * (eta ^ 2) + 0.19e2 / 0.30e2) * (ci2 ^ 2)) * (eta - 1) * (1 + eta) * sin(0.2e1 * g) + 0.3e1 / 0.5e1 * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 10) + (-0.7e1 / 0.3e1 * (eta ^ 2) + 0.11e2 / 0.3e1) * (ci2 ^ 8) + (0.187e3 / 0.90e2 * (eta ^ 2) - 0.91e2 / 0.30e2) * (ci2 ^ 6) + (-0.79e2 / 0.90e2 * (eta ^ 2) + 0.7e1 / 0.6e1) * (ci2 ^ 4) + (0.9e1 / 0.50e2 * (eta ^ 2) - 0.19e2 / 0.90e2) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (eta ^ 2) + 0.7e1 / 0.450e3) * sin(0.2e1 * h)) * R__e ^ 2 * (ci2 + 1) * J * (ci2 - 1) / a ^ 2 / (eta ^ 6) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 2) -0.375e3 / 0.8e1 * (ci2 + 1) * (((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * cos(0.4e1 * g + 0.2e1 * h) + 0.3e1 / 0.5e1 * ((ci2 ^ 10) - 0.7e1 / 0.3e1 * (ci2 ^ 8) + 0.187e3 / 0.90e2 * (ci2 ^ 6) - 0.79e2 / 0.90e2 * (ci2 ^ 4) + 0.9e1 / 0.50e2 * (ci2 ^ 2) - 0.7e1 / 0.450e3) * (eta ^ 2) * (eta - 1) * (1 + eta) * cos(0.2e1 * g) + 0.3e1 / 0.5e1 * cos(0.2e1 * h) * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 10) + (-0.7e1 / 0.3e1 * (eta ^ 2) + 0.11e2 / 0.3e1) * (ci2 ^ 8) + (0.187e3 / 0.90e2 * (eta ^ 2) - 0.91e2 / 0.30e2) * (ci2 ^ 6) + (-0.79e2 / 0.90e2 * (eta ^ 2) + 0.7e1 / 0.6e1) * (ci2 ^ 4) + (0.9e1 / 0.50e2 * (eta ^ 2) - 0.19e2 / 0.90e2) * (ci2 ^ 2) - 0.7e1 / 0.450e3 * (eta ^ 2) + 0.7e1 / 0.450e3)) * R__e ^ 2 * J * (ci2 - 1) / (eta ^ 6) / a ^ 2 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 2)];

    Dlp1J2 = O2Msign*[D1;D2;D3;D4;D5;D6];
	
    % Second-Order Dlp for J2 - Term-1 (associated with W1
	D1 = [0 0 0 0 0 0];
	D2 = [0.16875e5 / 0.32e2 * ((ci2 + 1) ^ 2) * R__e ^ 4 * ((ci2 - 1) ^ 2) * sin((4 * g)) * J ^ 2 * ((0.10e2 / 0.3e1 * eta + 0.5e1 / 0.3e1 + eta ^ 2) * (ci2 ^ 20) + (-0.20e2 / 0.3e1 - 0.4e1 * eta ^ 2 - 0.40e2 / 0.3e1 * eta) * (ci2 ^ 18) + (0.113e3 / 0.10e2 + 0.121e3 / 0.18e2 * eta ^ 2 + 0.113e3 / 0.5e1 * eta) * (ci2 ^ 16) + (-0.469e3 / 0.45e2 - 0.271e3 / 0.45e2 * eta ^ 2 - 0.938e3 / 0.45e2 * eta) * (ci2 ^ 14) + (0.2459e4 / 0.450e3 + 0.1942e4 / 0.675e3 * eta ^ 2 + 0.2459e4 / 0.225e3 * eta) * (ci2 ^ 12) + (-0.314e3 / 0.225e3 - 0.299e3 / 0.675e3 * eta ^ 2 - 0.628e3 / 0.225e3 * eta) * (ci2 ^ 10) + (-0.203e3 / 0.3375e4 - 0.1853e4 / 0.6750e4 * eta ^ 2 - 0.406e3 / 0.3375e4 * eta) * (ci2 ^ 8) + (0.1073e4 / 0.6750e4 + 0.251e3 / 0.1350e4 * eta ^ 2 + 0.1073e4 / 0.3375e4 * eta) * (ci2 ^ 6) + (-0.1319e4 / 0.27000e5 - 0.6791e4 / 0.135000e6 * eta ^ 2 - 0.1319e4 / 0.13500e5 * eta) * (ci2 ^ 4) + 0.91e2 / 0.13500e5 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2) - 0.49e2 / 0.135000e6 * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) ^ 2 / a ^ 5 / eta ^ 8 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) 0 0.84375e5 / 0.32e2 * (eta - 0.1e1) ^ 2 * (ci2 + 1) * R__e ^ 4 * (((0.10e2 / 0.3e1 * eta + 0.5e1 / 0.3e1 + eta ^ 2) * (ci2 ^ 24) + (-0.5e1 * eta ^ 2 - 0.50e2 / 0.3e1 * eta - 0.25e2 / 0.3e1) * (ci2 ^ 22) + (0.1973e4 / 0.180e3 * eta ^ 2 + 0.1099e4 / 0.60e2 + 0.1099e4 / 0.30e2 * eta) * (ci2 ^ 20) + (-0.1241e4 / 0.90e2 * eta ^ 2 - 0.418e3 / 0.9e1 * eta - 0.209e3 / 0.9e1) * (ci2 ^ 18) + (0.98e2 / 0.9e1 * eta ^ 2 + 0.1681e4 / 0.90e2 + 0.1681e4 / 0.45e2 * eta) * (ci2 ^ 16) + (-0.7393e4 / 0.1350e4 * eta ^ 2 - 0.353e3 / 0.18e2 * eta - 0.353e3 / 0.36e2) * (ci2 ^ 14) + (0.10937e5 / 0.6750e4 * eta ^ 2 + 0.22022e5 / 0.3375e4 * eta + 0.11011e5 / 0.3375e4) * (ci2 ^ 12) + (-0.283e3 / 0.1800e4 * eta ^ 2 - 0.3119e4 / 0.2700e4 * eta - 0.3119e4 / 0.5400e4) * (ci2 ^ 10) + (-0.589e3 / 0.7500e4 * eta ^ 2 - 0.67e2 / 0.3750e4 * eta - 0.67e2 / 0.7500e4) * (ci2 ^ 8) + (0.137e3 / 0.3600e4 * eta ^ 2 + 0.1691e4 / 0.27000e5 * eta + 0.1691e4 / 0.54000e5) * (ci2 ^ 6) + (-0.881e3 / 0.112500e6 * eta ^ 2 - 0.509e3 / 0.33750e5 * eta - 0.509e3 / 0.67500e5) * (ci2 ^ 4) + 0.14e2 / 0.16875e5 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2) - 0.49e2 / 0.1350000e7 * (0.1e1 + eta) ^ 2) * (ci2 + 1) * (ci2 - 1) * sin((-h + 4 * g)) + sin((h + 4 * g)) * ((0.10e2 / 0.3e1 * eta + 0.5e1 / 0.3e1 + eta ^ 2) * (ci2 ^ 26) + (-0.5e1 * eta ^ 2 - 0.50e2 / 0.3e1 * eta - 0.25e2 / 0.3e1) * (ci2 ^ 24) + (0.1973e4 / 0.180e3 * eta ^ 2 + 0.1099e4 / 0.60e2 + 0.1099e4 / 0.30e2 * eta) * (ci2 ^ 22) + (-0.2489e4 / 0.180e3 * eta ^ 2 - 0.4183e4 / 0.180e3 - 0.4183e4 / 0.90e2 * eta) * (ci2 ^ 20) + (0.167e3 / 0.15e2 * eta ^ 2 + 0.1696e4 / 0.45e2 * eta + 0.848e3 / 0.45e2) * (ci2 ^ 18) + (-0.4132e4 / 0.675e3 * eta ^ 2 - 0.3101e4 / 0.300e3 - 0.3101e4 / 0.150e3 * eta) * (ci2 ^ 16) + (0.8681e4 / 0.3375e4 * eta ^ 2 + 0.55669e5 / 0.6750e4 * eta + 0.55669e5 / 0.13500e5) * (ci2 ^ 14) + (-0.3101e4 / 0.3000e4 * eta ^ 2 - 0.38119e5 / 0.13500e5 * eta - 0.38119e5 / 0.27000e5) * (ci2 ^ 12) + (0.60823e5 / 0.135000e6 * eta ^ 2 + 0.68669e5 / 0.67500e5 * eta + 0.68669e5 / 0.135000e6) * (ci2 ^ 10) + (-0.15709e5 / 0.90000e5 * eta ^ 2 - 0.48491e5 / 0.135000e6 * eta - 0.48491e5 / 0.270000e6) * (ci2 ^ 8) + (0.65263e5 / 0.1350000e7 * eta ^ 2 + 0.13103e5 / 0.135000e6 * eta + 0.13103e5 / 0.270000e6) * (ci2 ^ 6) - 0.287e3 / 0.33750e5 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4) + 0.1141e4 / 0.1350000e7 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2) - 0.49e2 / 0.1350000e7 * (0.1e1 + eta) ^ 2)) * sqrt((-ci2 ^ 2 + 1)) * J ^ 2 * ci2 * (ci2 - 1) / eta ^ 8 / a ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) 0.84375e5 / 0.32e2 * (ci2 - 1) * sqrt((-ci2 ^ 2 + 1)) * (eta - 0.1e1) ^ 2 * R__e ^ 4 * (((0.10e2 / 0.3e1 * eta + 0.5e1 / 0.3e1 + eta ^ 2) * (ci2 ^ 24) + (-0.5e1 * eta ^ 2 - 0.50e2 / 0.3e1 * eta - 0.25e2 / 0.3e1) * (ci2 ^ 22) + (0.1973e4 / 0.180e3 * eta ^ 2 + 0.1099e4 / 0.60e2 + 0.1099e4 / 0.30e2 * eta) * (ci2 ^ 20) + (-0.1241e4 / 0.90e2 * eta ^ 2 - 0.418e3 / 0.9e1 * eta - 0.209e3 / 0.9e1) * (ci2 ^ 18) + (0.98e2 / 0.9e1 * eta ^ 2 + 0.1681e4 / 0.90e2 + 0.1681e4 / 0.45e2 * eta) * (ci2 ^ 16) + (-0.7393e4 / 0.1350e4 * eta ^ 2 - 0.353e3 / 0.18e2 * eta - 0.353e3 / 0.36e2) * (ci2 ^ 14) + (0.10937e5 / 0.6750e4 * eta ^ 2 + 0.22022e5 / 0.3375e4 * eta + 0.11011e5 / 0.3375e4) * (ci2 ^ 12) + (-0.283e3 / 0.1800e4 * eta ^ 2 - 0.3119e4 / 0.2700e4 * eta - 0.3119e4 / 0.5400e4) * (ci2 ^ 10) + (-0.589e3 / 0.7500e4 * eta ^ 2 - 0.67e2 / 0.3750e4 * eta - 0.67e2 / 0.7500e4) * (ci2 ^ 8) + (0.137e3 / 0.3600e4 * eta ^ 2 + 0.1691e4 / 0.27000e5 * eta + 0.1691e4 / 0.54000e5) * (ci2 ^ 6) + (-0.881e3 / 0.112500e6 * eta ^ 2 - 0.509e3 / 0.33750e5 * eta - 0.509e3 / 0.67500e5) * (ci2 ^ 4) + 0.14e2 / 0.16875e5 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2) - 0.49e2 / 0.1350000e7 * (0.1e1 + eta) ^ 2) * (ci2 - 1) * (ci2 + 1) * cos((-h + 4 * g)) - ((0.10e2 / 0.3e1 * eta + 0.5e1 / 0.3e1 + eta ^ 2) * (ci2 ^ 26) + (-0.5e1 * eta ^ 2 - 0.50e2 / 0.3e1 * eta - 0.25e2 / 0.3e1) * (ci2 ^ 24) + (0.1973e4 / 0.180e3 * eta ^ 2 + 0.1099e4 / 0.60e2 + 0.1099e4 / 0.30e2 * eta) * (ci2 ^ 22) + (-0.2489e4 / 0.180e3 * eta ^ 2 - 0.4183e4 / 0.180e3 - 0.4183e4 / 0.90e2 * eta) * (ci2 ^ 20) + (0.167e3 / 0.15e2 * eta ^ 2 + 0.1696e4 / 0.45e2 * eta + 0.848e3 / 0.45e2) * (ci2 ^ 18) + (-0.4132e4 / 0.675e3 * eta ^ 2 - 0.3101e4 / 0.300e3 - 0.3101e4 / 0.150e3 * eta) * (ci2 ^ 16) + (0.8681e4 / 0.3375e4 * eta ^ 2 + 0.55669e5 / 0.6750e4 * eta + 0.55669e5 / 0.13500e5) * (ci2 ^ 14) + (-0.3101e4 / 0.3000e4 * eta ^ 2 - 0.38119e5 / 0.13500e5 * eta - 0.38119e5 / 0.27000e5) * (ci2 ^ 12) + (0.60823e5 / 0.135000e6 * eta ^ 2 + 0.68669e5 / 0.67500e5 * eta + 0.68669e5 / 0.135000e6) * (ci2 ^ 10) + (-0.15709e5 / 0.90000e5 * eta ^ 2 - 0.48491e5 / 0.135000e6 * eta - 0.48491e5 / 0.270000e6) * (ci2 ^ 8) + (0.65263e5 / 0.1350000e7 * eta ^ 2 + 0.13103e5 / 0.135000e6 * eta + 0.13103e5 / 0.270000e6) * (ci2 ^ 6) - 0.287e3 / 0.33750e5 * (0.1e1 + eta) ^ 2 * (ci2 ^ 4) + 0.1141e4 / 0.1350000e7 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2) - 0.49e2 / 0.1350000e7 * (0.1e1 + eta) ^ 2) * cos((h + 4 * g))) * J ^ 2 * ci2 * (ci2 + 1) / eta ^ 8 / a ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) -0.27e2 / 0.32e2 * ((ci2 - 1) ^ 2) * sqrt(-eta ^ 2 + 0.1e1) * (eta - 0.1e1) * R__e ^ 4 * (((eta ^ 3 / 0.6e1 - 0.7e1 / 0.6e1 * eta ^ 2 - 0.10e2 / 0.3e1 * eta - 0.5e1 / 0.3e1) * (ci2 ^ 20) + (-0.2e1 / 0.3e1 * eta ^ 3 + 0.14e2 / 0.3e1 * eta ^ 2 + 0.20e2 / 0.3e1 + 0.40e2 / 0.3e1 * eta) * (ci2 ^ 18) + (-0.113e3 / 0.5e1 * eta - 0.113e3 / 0.10e2 + 0.103e3 / 0.90e2 * eta ^ 3 - 0.118e3 / 0.15e2 * eta ^ 2) * (ci2 ^ 16) + (0.938e3 / 0.45e2 * eta - 0.11e2 / 0.10e2 * eta ^ 3 + 0.641e3 / 0.90e2 * eta ^ 2 + 0.469e3 / 0.45e2) * (ci2 ^ 14) + (-0.2459e4 / 0.225e3 * eta - 0.2459e4 / 0.450e3 + 0.3493e4 / 0.5400e4 * eta ^ 3 - 0.6343e4 / 0.1800e4 * eta ^ 2) * (ci2 ^ 12) + (0.314e3 / 0.225e3 + 0.628e3 / 0.225e3 * eta - 0.643e3 / 0.2700e4 * eta ^ 3 + 0.613e3 / 0.900e3 * eta ^ 2) * (ci2 ^ 10) + (0.203e3 / 0.3375e4 + 0.406e3 / 0.3375e4 * eta + 0.1447e4 / 0.27000e5 * eta ^ 3 + 0.1193e4 / 0.5400e4 * eta ^ 2) * (ci2 ^ 8) + (-0.1073e4 / 0.6750e4 - 0.1073e4 / 0.3375e4 * eta - 0.91e2 / 0.13500e5 * eta ^ 3 - 0.2419e4 / 0.13500e5 * eta ^ 2) * (ci2 ^ 6) + (0.1319e4 / 0.27000e5 + 0.1319e4 / 0.13500e5 * eta + 0.49e2 / 0.135000e6 * eta ^ 3 + 0.3371e4 / 0.67500e5 * eta ^ 2) * (ci2 ^ 4) - 0.91e2 / 0.13500e5 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2) + 0.49e2 / 0.135000e6 * (0.1e1 + eta) ^ 2) * sin((3 * g - h)) + ((eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 + 0.5e1 * eta + 0.5e1 / 0.3e1) * (ci2 ^ 20) + (-0.4e1 * eta ^ 3 - 0.18e2 * eta ^ 2 - 0.20e2 / 0.3e1 - 0.20e2 * eta) * (ci2 ^ 18) + (0.339e3 / 0.10e2 * eta + 0.113e3 / 0.10e2 + 0.121e3 / 0.18e2 * eta ^ 3 + 0.457e3 / 0.15e2 * eta ^ 2) * (ci2 ^ 16) + (-0.469e3 / 0.15e2 * eta - 0.271e3 / 0.45e2 * eta ^ 3 - 0.839e3 / 0.30e2 * eta ^ 2 - 0.469e3 / 0.45e2) * (ci2 ^ 14) + (0.2459e4 / 0.150e3 * eta + 0.2459e4 / 0.450e3 + 0.1942e4 / 0.675e3 * eta ^ 3 + 0.5203e4 / 0.360e3 * eta ^ 2) * (ci2 ^ 12) + (-0.314e3 / 0.225e3 - 0.314e3 / 0.75e2 * eta - 0.299e3 / 0.675e3 * eta ^ 3 - 0.125e3 / 0.36e2 * eta ^ 2) * (ci2 ^ 10) + (-0.203e3 / 0.3375e4 - 0.203e3 / 0.1125e4 * eta - 0.1853e4 / 0.6750e4 * eta ^ 3 - 0.3071e4 / 0.9000e4 * eta ^ 2) * (ci2 ^ 8) + (0.1073e4 / 0.6750e4 + 0.1073e4 / 0.2250e4 * eta + 0.251e3 / 0.1350e4 * eta ^ 3 + 0.2237e4 / 0.4500e4 * eta ^ 2) * (ci2 ^ 6) + (-0.1319e4 / 0.27000e5 - 0.1319e4 / 0.9000e4 * eta - 0.6791e4 / 0.135000e6 * eta ^ 3 - 0.1661e4 / 0.11250e5 * eta ^ 2) * (ci2 ^ 4) + 0.91e2 / 0.13500e5 * (0.1e1 + eta) ^ 3 * (ci2 ^ 2) - 0.49e2 / 0.135000e6 * (0.1e1 + eta) ^ 3) * (eta - 0.1e1) * sin((5 * g + h))) * J ^ 2 * ((ci2 + 1) ^ 2) / a ^ 4 / eta ^ 10 / (0.1e1 + eta) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 4 0.27e2 / 0.32e2 * sqrt(-eta ^ 2 + 0.1e1) * ((ci2 + 1) ^ 2) * (((-eta ^ 3 / 0.6e1 + 0.7e1 / 0.6e1 * eta ^ 2 + 0.10e2 / 0.3e1 * eta + 0.5e1 / 0.3e1) * (ci2 ^ 20) + (0.2e1 / 0.3e1 * eta ^ 3 - 0.14e2 / 0.3e1 * eta ^ 2 - 0.40e2 / 0.3e1 * eta - 0.20e2 / 0.3e1) * (ci2 ^ 18) + (-0.103e3 / 0.90e2 * eta ^ 3 + 0.118e3 / 0.15e2 * eta ^ 2 + 0.113e3 / 0.5e1 * eta + 0.113e3 / 0.10e2) * (ci2 ^ 16) + (0.11e2 / 0.10e2 * eta ^ 3 - 0.641e3 / 0.90e2 * eta ^ 2 - 0.938e3 / 0.45e2 * eta - 0.469e3 / 0.45e2) * (ci2 ^ 14) + (-0.3493e4 / 0.5400e4 * eta ^ 3 + 0.6343e4 / 0.1800e4 * eta ^ 2 + 0.2459e4 / 0.225e3 * eta + 0.2459e4 / 0.450e3) * (ci2 ^ 12) + (0.643e3 / 0.2700e4 * eta ^ 3 - 0.613e3 / 0.900e3 * eta ^ 2 - 0.628e3 / 0.225e3 * eta - 0.314e3 / 0.225e3) * (ci2 ^ 10) + (-0.1447e4 / 0.27000e5 * eta ^ 3 - 0.1193e4 / 0.5400e4 * eta ^ 2 - 0.406e3 / 0.3375e4 * eta - 0.203e3 / 0.3375e4) * (ci2 ^ 8) + (0.91e2 / 0.13500e5 * eta ^ 3 + 0.2419e4 / 0.13500e5 * eta ^ 2 + 0.1073e4 / 0.3375e4 * eta + 0.1073e4 / 0.6750e4) * (ci2 ^ 6) + (-0.49e2 / 0.135000e6 * eta ^ 3 - 0.3371e4 / 0.67500e5 * eta ^ 2 - 0.1319e4 / 0.13500e5 * eta - 0.1319e4 / 0.27000e5) * (ci2 ^ 4) + 0.91e2 / 0.13500e5 * (0.1e1 + eta) ^ 2 * (ci2 ^ 2) - 0.49e2 / 0.135000e6 * (0.1e1 + eta) ^ 2) * cos((3 * g - h)) + ((eta ^ 3 + 0.9e1 / 0.2e1 * eta ^ 2 + 0.5e1 * eta + 0.5e1 / 0.3e1) * (ci2 ^ 20) + (-0.4e1 * eta ^ 3 - 0.18e2 * eta ^ 2 - 0.20e2 / 0.3e1 - 0.20e2 * eta) * (ci2 ^ 18) + (0.339e3 / 0.10e2 * eta + 0.113e3 / 0.10e2 + 0.121e3 / 0.18e2 * eta ^ 3 + 0.457e3 / 0.15e2 * eta ^ 2) * (ci2 ^ 16) + (-0.469e3 / 0.15e2 * eta - 0.271e3 / 0.45e2 * eta ^ 3 - 0.839e3 / 0.30e2 * eta ^ 2 - 0.469e3 / 0.45e2) * (ci2 ^ 14) + (0.2459e4 / 0.150e3 * eta + 0.2459e4 / 0.450e3 + 0.1942e4 / 0.675e3 * eta ^ 3 + 0.5203e4 / 0.360e3 * eta ^ 2) * (ci2 ^ 12) + (-0.314e3 / 0.225e3 - 0.314e3 / 0.75e2 * eta - 0.299e3 / 0.675e3 * eta ^ 3 - 0.125e3 / 0.36e2 * eta ^ 2) * (ci2 ^ 10) + (-0.203e3 / 0.3375e4 - 0.203e3 / 0.1125e4 * eta - 0.1853e4 / 0.6750e4 * eta ^ 3 - 0.3071e4 / 0.9000e4 * eta ^ 2) * (ci2 ^ 8) + (0.1073e4 / 0.6750e4 + 0.1073e4 / 0.2250e4 * eta + 0.251e3 / 0.1350e4 * eta ^ 3 + 0.2237e4 / 0.4500e4 * eta ^ 2) * (ci2 ^ 6) + (-0.1319e4 / 0.27000e5 - 0.1319e4 / 0.9000e4 * eta - 0.6791e4 / 0.135000e6 * eta ^ 3 - 0.1661e4 / 0.11250e5 * eta ^ 2) * (ci2 ^ 4) + 0.91e2 / 0.13500e5 * (0.1e1 + eta) ^ 3 * (ci2 ^ 2) - 0.49e2 / 0.135000e6 * (0.1e1 + eta) ^ 3) * (eta - 0.1e1) * cos((5 * g + h))) * (eta - 0.1e1) * R__e ^ 4 * ((ci2 - 1) ^ 2) * J ^ 2 / a ^ 4 / eta ^ 10 / (0.1e1 + eta) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 4];
	D3 = [-0.5625e4 / 0.32e2 * (-((ci2 + 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * cos((-h + 4 * g)) / 0.30e2 + (ci2 + 1) * (eta - 1) * (1 + eta) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * (ci2 - 1) * cos((h + 4 * g)) + 0.6e1 * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 20) + (-(5 * eta ^ 2) + 0.25e2 / 0.3e1) * (ci2 ^ 18) + (0.1967e4 / 0.180e3 * (eta ^ 2) - 0.3271e4 / 0.180e3) * (ci2 ^ 16) + (-0.2467e4 / 0.180e3 * (eta ^ 2) + 0.1361e4 / 0.60e2) * (ci2 ^ 14) + (0.58781e5 / 0.5400e4 * (eta ^ 2) - 0.32171e5 / 0.1800e4) * (ci2 ^ 12) + (-0.61541e5 / 0.10800e5 * (eta ^ 2) + 0.99773e5 / 0.10800e5) * (ci2 ^ 10) + (0.71387e5 / 0.36000e5 * (eta ^ 2) - 0.340193e6 / 0.108000e6) * (ci2 ^ 8) + (-0.677e3 / 0.1500e4 * (eta ^ 2) + 0.1039e4 / 0.1500e4) * (ci2 ^ 6) + (0.34651e5 / 0.540000e6 * (eta ^ 2) - 0.1111e4 / 0.12000e5) * (ci2 ^ 4) + (-0.1393e4 / 0.270000e6 * (eta ^ 2) + 0.119e3 / 0.18000e5) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 2) - 0.49e2 / 0.270000e6) * cos(h)) * (eta - 1) * (1 + eta) * R__e ^ 4 * J ^ 2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sqrt((-ci2 ^ 2 + 1)) / a ^ 5 / ci2 / (eta ^ 8) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) 0 0.9e1 / 0.64e2 * (eta - 1) * (1 + eta) * R__e ^ 4 * ((ci2 + 1) * (ci2 - 1) * ((ci2 ^ 24) - 0.71e2 / 0.15e2 * (ci2 ^ 22) + 0.46e2 / 0.5e1 * (ci2 ^ 20) - 0.5197e4 / 0.600e3 * (ci2 ^ 18) + 0.7901e4 / 0.3600e4 * (ci2 ^ 16) + 0.508e3 / 0.125e3 * (ci2 ^ 14) - 0.65899e5 / 0.12000e5 * (ci2 ^ 12) + 0.126599e6 / 0.36000e5 * (ci2 ^ 10) - 0.31339e5 / 0.22500e5 * (ci2 ^ 8) + 0.64231e5 / 0.180000e6 * (ci2 ^ 6) - 0.17311e5 / 0.300000e6 * (ci2 ^ 4) + 0.4823e4 / 0.900000e6 * (ci2 ^ 2) - 0.49e2 / 0.225000e6) * (eta - 1) * (1 + eta) * cos((4 * g + 2 * h)) - ((ci2 + 1) ^ 3) * ((ci2 ^ 14) - (5 * ci2 ^ 12) + 0.93e2 / 0.10e2 * (ci2 ^ 10) - 0.539e3 / 0.60e2 * (ci2 ^ 8) + 0.1517e4 / 0.300e3 * (ci2 ^ 6) - 0.1019e4 / 0.600e3 * (ci2 ^ 4) + 0.8e1 / 0.25e2 * (ci2 ^ 2) - 0.79e2 / 0.3000e4) * ((ci2 - 1) ^ 3) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * cos((-2 * h + 4 * g)) / 0.60e2 + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * ((ci2 ^ 22) - 0.21e2 / 0.4e1 * (ci2 ^ 20) + 0.731e3 / 0.60e2 * (ci2 ^ 18) - 0.991e3 / 0.60e2 * (ci2 ^ 16) + 0.2621e4 / 0.180e3 * (ci2 ^ 14) - 0.10549e5 / 0.1200e4 * (ci2 ^ 12) + 0.16763e5 / 0.4500e4 * (ci2 ^ 10) - 0.26761e5 / 0.24000e5 * (ci2 ^ 8) + 0.27949e5 / 0.120000e6 * (ci2 ^ 6) - 0.2347e4 / 0.72000e5 * (ci2 ^ 4) + 0.623e3 / 0.225000e6 * (ci2 ^ 2) - 0.49e2 / 0.450000e6) * cos((4 * g)) + 0.9e1 * (ci2 + 1) * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 24) + ((-6 * eta ^ 2 + 10) * ci2 ^ 22) + (-0.14581e5 / 0.540e3 + 0.8753e4 / 0.540e3 * (eta ^ 2)) * (ci2 ^ 20) + (0.4681e4 / 0.108e3 - 0.2813e4 / 0.108e3 * (eta ^ 2)) * (ci2 ^ 18) + (-0.20711e5 / 0.450e3 + 0.56099e5 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 16) + (0.137869e6 / 0.4050e4 - 0.16633e5 / 0.810e3 * (eta ^ 2)) * (ci2 ^ 14) + (-0.582577e6 / 0.32400e5 + 0.70457e5 / 0.6480e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.276859e6 / 0.40500e5 - 0.41951e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 10) + (-0.200681e6 / 0.108000e6 + 0.8119e4 / 0.7200e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.285599e6 / 0.810000e6 - 0.173059e6 / 0.810000e6 * (eta ^ 2)) * (ci2 ^ 6) + (-0.71893e5 / 0.1620000e7 + 0.216233e6 / 0.8100000e7 * (eta ^ 2)) * (ci2 ^ 4) + (0.2693e4 / 0.810000e6 - 0.7949e4 / 0.4050000e7 * (eta ^ 2)) * (ci2 ^ 2) + 0.511e3 / 0.8100000e7 * (eta ^ 2) - 0.301e3 / 0.2700000e7) * (ci2 - 1) * (ci2 ^ 2) * cos((2 * h)) + ((9 * eta ^ 2 - 15) * ci2 ^ 28) + ((-60 * eta ^ 2 + 100) * ci2 ^ 26) + (-0.18031e5 / 0.60e2 + 0.10823e5 / 0.60e2 * (eta ^ 2)) * (ci2 ^ 24) + (0.6451e4 / 0.12e2 - 0.3875e4 / 0.12e2 * (eta ^ 2)) * (ci2 ^ 22) + (-0.381887e6 / 0.600e3 + 0.688777e6 / 0.1800e4 * (eta ^ 2)) * (ci2 ^ 20) + (0.943633e6 / 0.1800e4 - 0.567649e6 / 0.1800e4 * (eta ^ 2)) * (ci2 ^ 18) + (-0.221021e6 / 0.720e3 + 0.44287e5 / 0.240e3 * (eta ^ 2)) * (ci2 ^ 16) + (0.1151923e7 / 0.9000e4 - 0.689263e6 / 0.9000e4 * (eta ^ 2)) * (ci2 ^ 14) + (-0.893587e6 / 0.24000e5 + 0.315781e6 / 0.14400e5 * (eta ^ 2)) * (ci2 ^ 12) + (0.512327e6 / 0.72000e5 - 0.476929e6 / 0.120000e6 * (eta ^ 2)) * (ci2 ^ 10) + (-0.33151e5 / 0.45000e5 + 0.71147e5 / 0.225000e6 * (eta ^ 2)) * (ci2 ^ 8) + (-0.383e3 / 0.120000e6 + 0.4319e4 / 0.120000e6 * (eta ^ 2)) * (ci2 ^ 6) + (0.20789e5 / 0.1800000e7 - 0.4561e4 / 0.360000e6 * (eta ^ 2)) * (ci2 ^ 4) + (-0.49e2 / 0.36000e5 + 0.49e2 / 0.36000e5 * (eta ^ 2)) * (ci2 ^ 2) - 0.49e2 / 0.900000e6 * (eta ^ 2) + 0.49e2 / 0.900000e6) * J ^ 2 / a ^ 4 / (eta ^ 8) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 5 0.9e1 / 0.64e2 * (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * R__e ^ 4 * ((eta - 1) * (1 + eta) * ((ci2 ^ 24) - 0.71e2 / 0.15e2 * (ci2 ^ 22) + 0.46e2 / 0.5e1 * (ci2 ^ 20) - 0.5197e4 / 0.600e3 * (ci2 ^ 18) + 0.7901e4 / 0.3600e4 * (ci2 ^ 16) + 0.508e3 / 0.125e3 * (ci2 ^ 14) - 0.65899e5 / 0.12000e5 * (ci2 ^ 12) + 0.126599e6 / 0.36000e5 * (ci2 ^ 10) - 0.31339e5 / 0.22500e5 * (ci2 ^ 8) + 0.64231e5 / 0.180000e6 * (ci2 ^ 6) - 0.17311e5 / 0.300000e6 * (ci2 ^ 4) + 0.4823e4 / 0.900000e6 * (ci2 ^ 2) - 0.49e2 / 0.225000e6) * sin((4 * g + 2 * h)) + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * ((ci2 ^ 14) - (5 * ci2 ^ 12) + 0.93e2 / 0.10e2 * (ci2 ^ 10) - 0.539e3 / 0.60e2 * (ci2 ^ 8) + 0.1517e4 / 0.300e3 * (ci2 ^ 6) - 0.1019e4 / 0.600e3 * (ci2 ^ 4) + 0.8e1 / 0.25e2 * (ci2 ^ 2) - 0.79e2 / 0.3000e4) * (ci2 ^ 4) * sin((-2 * h + 4 * g)) / 0.60e2 - (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * ((ci2 ^ 22) - 0.313e3 / 0.60e2 * (ci2 ^ 20) + 0.243e3 / 0.20e2 * (ci2 ^ 18) - 0.4987e4 / 0.300e3 * (ci2 ^ 16) + 0.8891e4 / 0.600e3 * (ci2 ^ 14) - 0.81293e5 / 0.9000e4 * (ci2 ^ 12) + 0.11539e5 / 0.3000e4 * (ci2 ^ 10) - 0.41347e5 / 0.36000e5 * (ci2 ^ 8) + 0.14251e5 / 0.60000e5 * (ci2 ^ 6) - 0.1969e4 / 0.60000e5 * (ci2 ^ 4) + 0.623e3 / 0.225000e6 * (ci2 ^ 2) - 0.49e2 / 0.450000e6) * sin((4 * g)) + 0.9e1 * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 24) + ((-6 * eta ^ 2 + 10) * ci2 ^ 22) + (-0.14581e5 / 0.540e3 + 0.8753e4 / 0.540e3 * (eta ^ 2)) * (ci2 ^ 20) + (0.4681e4 / 0.108e3 - 0.2813e4 / 0.108e3 * (eta ^ 2)) * (ci2 ^ 18) + (-0.20711e5 / 0.450e3 + 0.56099e5 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 16) + (0.137869e6 / 0.4050e4 - 0.16633e5 / 0.810e3 * (eta ^ 2)) * (ci2 ^ 14) + (-0.582577e6 / 0.32400e5 + 0.70457e5 / 0.6480e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.276859e6 / 0.40500e5 - 0.41951e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 10) + (-0.200681e6 / 0.108000e6 + 0.8119e4 / 0.7200e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.285599e6 / 0.810000e6 - 0.173059e6 / 0.810000e6 * (eta ^ 2)) * (ci2 ^ 6) + (-0.71893e5 / 0.1620000e7 + 0.216233e6 / 0.8100000e7 * (eta ^ 2)) * (ci2 ^ 4) + (0.2693e4 / 0.810000e6 - 0.7949e4 / 0.4050000e7 * (eta ^ 2)) * (ci2 ^ 2) + 0.511e3 / 0.8100000e7 * (eta ^ 2) - 0.301e3 / 0.2700000e7) * sin((2 * h)) * (ci2 ^ 2)) * J ^ 2 / a ^ 4 / (eta ^ 8) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 5 -0.375e3 / 0.64e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * J ^ 2 * sqrt((-ci2 ^ 2 + 1)) * (-0.30e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 + 1) * (ci2 - 1) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * cos((5 * g + 2 * h)) - (eta - 1) * (1 + eta) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * ((ci2 + 1) ^ 2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * cos((-2 * h + 3 * g)) + (((-90 * eta ^ 4 + 360 * eta ^ 2 - 300) * ci2 ^ 20) + ((450 * eta ^ 4 - 1800 * eta ^ 2 + 1500) * ci2 ^ 18) + (-0.3271e4 - 0.1967e4 / 0.2e1 * (eta ^ 4) + 0.7857e4 / 0.2e1 * (eta ^ 2)) * (ci2 ^ 16) + (0.4083e4 + 0.2467e4 / 0.2e1 * (eta ^ 4) - 0.9825e4 / 0.2e1 * (eta ^ 2)) * (ci2 ^ 14) + (-0.32171e5 / 0.10e2 - 0.58781e5 / 0.60e2 * (eta ^ 4) + 0.77647e5 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 12) + (0.99773e5 / 0.60e2 + 0.61541e5 / 0.120e3 * (eta ^ 4) - 0.80657e5 / 0.40e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.340193e6 / 0.600e3 - 0.71387e5 / 0.400e3 * (eta ^ 4) + 0.277177e6 / 0.400e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.3117e4 / 0.25e2 + 0.2031e4 / 0.50e2 * (eta ^ 4) - 0.3861e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 6) + (-0.3333e4 / 0.200e3 - 0.34651e5 / 0.6000e4 * (eta ^ 4) + 0.42323e5 / 0.2000e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.119e3 / 0.100e3 + 0.1393e4 / 0.3000e4 * (eta ^ 4) - 0.1589e4 / 0.1000e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.49e2 / 0.3000e4 * (eta ^ 4) - 0.49e2 / 0.1500e4 + 0.49e2 / 0.1000e4 * (eta ^ 2)) * cos((g + 2 * h)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * ((ci2 + 1) ^ 2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * cos((5 * g)) + 0.30e2 * (eta - 1) * (1 + eta) * (ci2 + 1) * (ci2 - 1) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * cos((3 * g)) - 0.90e2 * (((eta ^ 4) - (4 * eta ^ 2) + 0.10e2 / 0.3e1) * (ci2 ^ 20) + (-0.50e2 / 0.3e1 - (5 * eta ^ 4) + (20 * eta ^ 2)) * (ci2 ^ 18) + (0.3271e4 / 0.90e2 + 0.1967e4 / 0.180e3 * (eta ^ 4) - 0.873e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 16) + (-0.1361e4 / 0.30e2 - 0.2467e4 / 0.180e3 * (eta ^ 4) + 0.655e3 / 0.12e2 * (eta ^ 2)) * (ci2 ^ 14) + (0.32171e5 / 0.900e3 + 0.58781e5 / 0.5400e4 * (eta ^ 4) - 0.77647e5 / 0.1800e4 * (eta ^ 2)) * (ci2 ^ 12) + (-0.99773e5 / 0.5400e4 - 0.61541e5 / 0.10800e5 * (eta ^ 4) + 0.80657e5 / 0.3600e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.340193e6 / 0.54000e5 + 0.71387e5 / 0.36000e5 * (eta ^ 4) - 0.277177e6 / 0.36000e5 * (eta ^ 2)) * (ci2 ^ 8) + (-0.1039e4 / 0.750e3 - 0.677e3 / 0.1500e4 * (eta ^ 4) + 0.429e3 / 0.250e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.1111e4 / 0.6000e4 + 0.34651e5 / 0.540000e6 * (eta ^ 4) - 0.42323e5 / 0.180000e6 * (eta ^ 2)) * (ci2 ^ 4) + (-0.119e3 / 0.9000e4 - 0.1393e4 / 0.270000e6 * (eta ^ 4) + 0.1589e4 / 0.90000e5 * (eta ^ 2)) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 4) + 0.49e2 / 0.135000e6 - 0.49e2 / 0.90000e5 * (eta ^ 2)) * cos(g)) / a ^ 4 / ci2 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) -0.375e3 / 0.64e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * R__e ^ 4 * J ^ 2 * (-0.30e2 * (ci2 + 1) * (ci2 - 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * sin((5 * g + 2 * h)) + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * sin((-2 * h + 3 * g)) + (((-90 * eta ^ 4 + 360 * eta ^ 2 - 300) * ci2 ^ 20) + ((450 * eta ^ 4 - 1800 * eta ^ 2 + 1500) * ci2 ^ 18) + (-0.3271e4 - 0.1967e4 / 0.2e1 * (eta ^ 4) + 0.7857e4 / 0.2e1 * (eta ^ 2)) * (ci2 ^ 16) + (0.4083e4 + 0.2467e4 / 0.2e1 * (eta ^ 4) - 0.9825e4 / 0.2e1 * (eta ^ 2)) * (ci2 ^ 14) + (-0.32171e5 / 0.10e2 - 0.58781e5 / 0.60e2 * (eta ^ 4) + 0.77647e5 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 12) + (0.99773e5 / 0.60e2 + 0.61541e5 / 0.120e3 * (eta ^ 4) - 0.80657e5 / 0.40e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.340193e6 / 0.600e3 - 0.71387e5 / 0.400e3 * (eta ^ 4) + 0.277177e6 / 0.400e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.3117e4 / 0.25e2 + 0.2031e4 / 0.50e2 * (eta ^ 4) - 0.3861e4 / 0.25e2 * (eta ^ 2)) * (ci2 ^ 6) + (-0.3333e4 / 0.200e3 - 0.34651e5 / 0.6000e4 * (eta ^ 4) + 0.42323e5 / 0.2000e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.119e3 / 0.100e3 + 0.1393e4 / 0.3000e4 * (eta ^ 4) - 0.1589e4 / 0.1000e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.49e2 / 0.3000e4 * (eta ^ 4) - 0.49e2 / 0.1500e4 + 0.49e2 / 0.1000e4 * (eta ^ 2)) * sin((g + 2 * h)) + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * sin((5 * g)) - 0.30e2 * (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * sin((3 * g)) - 0.90e2 * (((eta ^ 4) - (4 * eta ^ 2) + 0.10e2 / 0.3e1) * (ci2 ^ 20) + (-0.50e2 / 0.3e1 - (5 * eta ^ 4) + (20 * eta ^ 2)) * (ci2 ^ 18) + (0.3271e4 / 0.90e2 + 0.1967e4 / 0.180e3 * (eta ^ 4) - 0.873e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 16) + (-0.1361e4 / 0.30e2 - 0.2467e4 / 0.180e3 * (eta ^ 4) + 0.655e3 / 0.12e2 * (eta ^ 2)) * (ci2 ^ 14) + (0.32171e5 / 0.900e3 + 0.58781e5 / 0.5400e4 * (eta ^ 4) - 0.77647e5 / 0.1800e4 * (eta ^ 2)) * (ci2 ^ 12) + (-0.99773e5 / 0.5400e4 - 0.61541e5 / 0.10800e5 * (eta ^ 4) + 0.80657e5 / 0.3600e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.340193e6 / 0.54000e5 + 0.71387e5 / 0.36000e5 * (eta ^ 4) - 0.277177e6 / 0.36000e5 * (eta ^ 2)) * (ci2 ^ 8) + (-0.1039e4 / 0.750e3 - 0.677e3 / 0.1500e4 * (eta ^ 4) + 0.429e3 / 0.250e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.1111e4 / 0.6000e4 + 0.34651e5 / 0.540000e6 * (eta ^ 4) - 0.42323e5 / 0.180000e6 * (eta ^ 2)) * (ci2 ^ 4) + (-0.119e3 / 0.9000e4 - 0.1393e4 / 0.270000e6 * (eta ^ 4) + 0.1589e4 / 0.90000e5 * (eta ^ 2)) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 4) + 0.49e2 / 0.135000e6 - 0.49e2 / 0.90000e5 * (eta ^ 2)) * sin(g)) * sqrt((-eta ^ 2 + 1)) * sqrt((-ci2 ^ 2 + 1)) / a ^ 4 / ci2 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4)];
	D4 = [-0.5625e4 / 0.32e2 * (((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * sin((-h + 4 * g)) / 0.30e2 + (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * sin((h + 4 * g)) + 0.6e1 * sin(h) * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 20) + (-(5 * eta ^ 2) + 0.25e2 / 0.3e1) * (ci2 ^ 18) + (0.1967e4 / 0.180e3 * (eta ^ 2) - 0.3271e4 / 0.180e3) * (ci2 ^ 16) + (-0.2467e4 / 0.180e3 * (eta ^ 2) + 0.1361e4 / 0.60e2) * (ci2 ^ 14) + (0.58781e5 / 0.5400e4 * (eta ^ 2) - 0.32171e5 / 0.1800e4) * (ci2 ^ 12) + (-0.61541e5 / 0.10800e5 * (eta ^ 2) + 0.99773e5 / 0.10800e5) * (ci2 ^ 10) + (0.71387e5 / 0.36000e5 * (eta ^ 2) - 0.340193e6 / 0.108000e6) * (ci2 ^ 8) + (-0.677e3 / 0.1500e4 * (eta ^ 2) + 0.1039e4 / 0.1500e4) * (ci2 ^ 6) + (0.34651e5 / 0.540000e6 * (eta ^ 2) - 0.1111e4 / 0.12000e5) * (ci2 ^ 4) + (-0.1393e4 / 0.270000e6 * (eta ^ 2) + 0.119e3 / 0.18000e5) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 2) - 0.49e2 / 0.270000e6)) * sqrt((-ci2 ^ 2 + 1)) * (eta - 1) * (1 + eta) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * R__e ^ 4 * J ^ 2 / a ^ 5 / ci2 / (eta ^ 8) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) 0 0.9e1 / 0.64e2 * (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * R__e ^ 4 * J ^ 2 * ((eta - 1) * (1 + eta) * ((ci2 ^ 24) - 0.71e2 / 0.15e2 * (ci2 ^ 22) + 0.46e2 / 0.5e1 * (ci2 ^ 20) - 0.5197e4 / 0.600e3 * (ci2 ^ 18) + 0.7901e4 / 0.3600e4 * (ci2 ^ 16) + 0.508e3 / 0.125e3 * (ci2 ^ 14) - 0.65899e5 / 0.12000e5 * (ci2 ^ 12) + 0.126599e6 / 0.36000e5 * (ci2 ^ 10) - 0.31339e5 / 0.22500e5 * (ci2 ^ 8) + 0.64231e5 / 0.180000e6 * (ci2 ^ 6) - 0.17311e5 / 0.300000e6 * (ci2 ^ 4) + 0.4823e4 / 0.900000e6 * (ci2 ^ 2) - 0.49e2 / 0.225000e6) * sin((4 * g + 2 * h)) + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * ((ci2 ^ 14) - (5 * ci2 ^ 12) + 0.93e2 / 0.10e2 * (ci2 ^ 10) - 0.539e3 / 0.60e2 * (ci2 ^ 8) + 0.1517e4 / 0.300e3 * (ci2 ^ 6) - 0.1019e4 / 0.600e3 * (ci2 ^ 4) + 0.8e1 / 0.25e2 * (ci2 ^ 2) - 0.79e2 / 0.3000e4) * (ci2 ^ 4) * sin((-2 * h + 4 * g)) / 0.60e2 + (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * ((ci2 ^ 22) - 0.313e3 / 0.60e2 * (ci2 ^ 20) + 0.243e3 / 0.20e2 * (ci2 ^ 18) - 0.4987e4 / 0.300e3 * (ci2 ^ 16) + 0.8891e4 / 0.600e3 * (ci2 ^ 14) - 0.81293e5 / 0.9000e4 * (ci2 ^ 12) + 0.11539e5 / 0.3000e4 * (ci2 ^ 10) - 0.41347e5 / 0.36000e5 * (ci2 ^ 8) + 0.14251e5 / 0.60000e5 * (ci2 ^ 6) - 0.1969e4 / 0.60000e5 * (ci2 ^ 4) + 0.623e3 / 0.225000e6 * (ci2 ^ 2) - 0.49e2 / 0.450000e6) * sin((4 * g)) + 0.9e1 * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 24) + ((-6 * eta ^ 2 + 10) * ci2 ^ 22) + (-0.14581e5 / 0.540e3 + 0.8753e4 / 0.540e3 * (eta ^ 2)) * (ci2 ^ 20) + (0.4681e4 / 0.108e3 - 0.2813e4 / 0.108e3 * (eta ^ 2)) * (ci2 ^ 18) + (-0.20711e5 / 0.450e3 + 0.56099e5 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 16) + (0.137869e6 / 0.4050e4 - 0.16633e5 / 0.810e3 * (eta ^ 2)) * (ci2 ^ 14) + (-0.582577e6 / 0.32400e5 + 0.70457e5 / 0.6480e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.276859e6 / 0.40500e5 - 0.41951e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 10) + (-0.200681e6 / 0.108000e6 + 0.8119e4 / 0.7200e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.285599e6 / 0.810000e6 - 0.173059e6 / 0.810000e6 * (eta ^ 2)) * (ci2 ^ 6) + (-0.71893e5 / 0.1620000e7 + 0.216233e6 / 0.8100000e7 * (eta ^ 2)) * (ci2 ^ 4) + (0.2693e4 / 0.810000e6 - 0.7949e4 / 0.4050000e7 * (eta ^ 2)) * (ci2 ^ 2) + 0.511e3 / 0.8100000e7 * (eta ^ 2) - 0.301e3 / 0.2700000e7) * sin((2 * h)) * (ci2 ^ 2)) / a ^ 4 / (eta ^ 8) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 5 -0.9e1 / 0.64e2 * ((ci2 + 1) * (ci2 - 1) * ((ci2 ^ 24) - 0.71e2 / 0.15e2 * (ci2 ^ 22) + 0.46e2 / 0.5e1 * (ci2 ^ 20) - 0.5197e4 / 0.600e3 * (ci2 ^ 18) + 0.7901e4 / 0.3600e4 * (ci2 ^ 16) + 0.508e3 / 0.125e3 * (ci2 ^ 14) - 0.65899e5 / 0.12000e5 * (ci2 ^ 12) + 0.126599e6 / 0.36000e5 * (ci2 ^ 10) - 0.31339e5 / 0.22500e5 * (ci2 ^ 8) + 0.64231e5 / 0.180000e6 * (ci2 ^ 6) - 0.17311e5 / 0.300000e6 * (ci2 ^ 4) + 0.4823e4 / 0.900000e6 * (ci2 ^ 2) - 0.49e2 / 0.225000e6) * (eta - 1) * (1 + eta) * cos((4 * g + 2 * h)) - ((ci2 + 1) ^ 3) * ((ci2 ^ 14) - (5 * ci2 ^ 12) + 0.93e2 / 0.10e2 * (ci2 ^ 10) - 0.539e3 / 0.60e2 * (ci2 ^ 8) + 0.1517e4 / 0.300e3 * (ci2 ^ 6) - 0.1019e4 / 0.600e3 * (ci2 ^ 4) + 0.8e1 / 0.25e2 * (ci2 ^ 2) - 0.79e2 / 0.3000e4) * ((ci2 - 1) ^ 3) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * cos((-2 * h + 4 * g)) / 0.60e2 - ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * ((ci2 ^ 22) - 0.21e2 / 0.4e1 * (ci2 ^ 20) + 0.731e3 / 0.60e2 * (ci2 ^ 18) - 0.991e3 / 0.60e2 * (ci2 ^ 16) + 0.2621e4 / 0.180e3 * (ci2 ^ 14) - 0.10549e5 / 0.1200e4 * (ci2 ^ 12) + 0.16763e5 / 0.4500e4 * (ci2 ^ 10) - 0.26761e5 / 0.24000e5 * (ci2 ^ 8) + 0.27949e5 / 0.120000e6 * (ci2 ^ 6) - 0.2347e4 / 0.72000e5 * (ci2 ^ 4) + 0.623e3 / 0.225000e6 * (ci2 ^ 2) - 0.49e2 / 0.450000e6) * cos((4 * g)) + 0.9e1 * (ci2 + 1) * (((eta ^ 2) - 0.5e1 / 0.3e1) * (ci2 ^ 24) + ((-6 * eta ^ 2 + 10) * ci2 ^ 22) + (-0.14581e5 / 0.540e3 + 0.8753e4 / 0.540e3 * (eta ^ 2)) * (ci2 ^ 20) + (0.4681e4 / 0.108e3 - 0.2813e4 / 0.108e3 * (eta ^ 2)) * (ci2 ^ 18) + (-0.20711e5 / 0.450e3 + 0.56099e5 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 16) + (0.137869e6 / 0.4050e4 - 0.16633e5 / 0.810e3 * (eta ^ 2)) * (ci2 ^ 14) + (-0.582577e6 / 0.32400e5 + 0.70457e5 / 0.6480e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.276859e6 / 0.40500e5 - 0.41951e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 10) + (-0.200681e6 / 0.108000e6 + 0.8119e4 / 0.7200e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.285599e6 / 0.810000e6 - 0.173059e6 / 0.810000e6 * (eta ^ 2)) * (ci2 ^ 6) + (-0.71893e5 / 0.1620000e7 + 0.216233e6 / 0.8100000e7 * (eta ^ 2)) * (ci2 ^ 4) + (0.2693e4 / 0.810000e6 - 0.7949e4 / 0.4050000e7 * (eta ^ 2)) * (ci2 ^ 2) + 0.511e3 / 0.8100000e7 * (eta ^ 2) - 0.301e3 / 0.2700000e7) * (ci2 - 1) * (ci2 ^ 2) * cos((2 * h)) + ((-9 * eta ^ 2 + 15) * ci2 ^ 28) + ((60 * eta ^ 2 - 100) * ci2 ^ 26) + (-0.10823e5 / 0.60e2 * (eta ^ 2) + 0.18031e5 / 0.60e2) * (ci2 ^ 24) + (0.3875e4 / 0.12e2 * (eta ^ 2) - 0.6451e4 / 0.12e2) * (ci2 ^ 22) + (-0.688777e6 / 0.1800e4 * (eta ^ 2) + 0.381887e6 / 0.600e3) * (ci2 ^ 20) + (0.567649e6 / 0.1800e4 * (eta ^ 2) - 0.943633e6 / 0.1800e4) * (ci2 ^ 18) + (-0.44287e5 / 0.240e3 * (eta ^ 2) + 0.221021e6 / 0.720e3) * (ci2 ^ 16) + (0.689263e6 / 0.9000e4 * (eta ^ 2) - 0.1151923e7 / 0.9000e4) * (ci2 ^ 14) + (-0.315781e6 / 0.14400e5 * (eta ^ 2) + 0.893587e6 / 0.24000e5) * (ci2 ^ 12) + (0.476929e6 / 0.120000e6 * (eta ^ 2) - 0.512327e6 / 0.72000e5) * (ci2 ^ 10) + (-0.71147e5 / 0.225000e6 * (eta ^ 2) + 0.33151e5 / 0.45000e5) * (ci2 ^ 8) + (-0.4319e4 / 0.120000e6 * (eta ^ 2) + 0.383e3 / 0.120000e6) * (ci2 ^ 6) + (0.4561e4 / 0.360000e6 * (eta ^ 2) - 0.20789e5 / 0.1800000e7) * (ci2 ^ 4) + (-0.49e2 / 0.36000e5 * (eta ^ 2) + 0.49e2 / 0.36000e5) * (ci2 ^ 2) - 0.49e2 / 0.900000e6 + 0.49e2 / 0.900000e6 * (eta ^ 2)) * (eta - 1) * (1 + eta) * R__e ^ 4 * J ^ 2 / a ^ 4 / (eta ^ 8) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 5 0.375e3 / 0.64e2 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * J ^ 2 * (0.30e2 * (ci2 + 1) * (ci2 - 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * sin((5 * g + 2 * h)) - ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 4) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * sin((-2 * h + 3 * g)) + (((90 * eta ^ 4 - 360 * eta ^ 2 + 300) * ci2 ^ 20) + ((-450 * eta ^ 4 + 1800 * eta ^ 2 - 1500) * ci2 ^ 18) + (0.1967e4 / 0.2e1 * (eta ^ 4) - 0.7857e4 / 0.2e1 * (eta ^ 2) + 0.3271e4) * (ci2 ^ 16) + (-0.2467e4 / 0.2e1 * (eta ^ 4) + 0.9825e4 / 0.2e1 * (eta ^ 2) - 0.4083e4) * (ci2 ^ 14) + (0.58781e5 / 0.60e2 * (eta ^ 4) - 0.77647e5 / 0.20e2 * (eta ^ 2) + 0.32171e5 / 0.10e2) * (ci2 ^ 12) + (-0.61541e5 / 0.120e3 * (eta ^ 4) + 0.80657e5 / 0.40e2 * (eta ^ 2) - 0.99773e5 / 0.60e2) * (ci2 ^ 10) + (0.71387e5 / 0.400e3 * (eta ^ 4) - 0.277177e6 / 0.400e3 * (eta ^ 2) + 0.340193e6 / 0.600e3) * (ci2 ^ 8) + (-0.2031e4 / 0.50e2 * (eta ^ 4) + 0.3861e4 / 0.25e2 * (eta ^ 2) - 0.3117e4 / 0.25e2) * (ci2 ^ 6) + (0.34651e5 / 0.6000e4 * (eta ^ 4) - 0.42323e5 / 0.2000e4 * (eta ^ 2) + 0.3333e4 / 0.200e3) * (ci2 ^ 4) + (-0.1393e4 / 0.3000e4 * (eta ^ 4) + 0.1589e4 / 0.1000e4 * (eta ^ 2) - 0.119e3 / 0.100e3) * (ci2 ^ 2) + 0.49e2 / 0.3000e4 * (eta ^ 4) - 0.49e2 / 0.1000e4 * (eta ^ 2) + 0.49e2 / 0.1500e4) * sin((g + 2 * h)) + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 4) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * sin((5 * g)) - 0.30e2 * (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * sin((3 * g)) - 0.90e2 * (((eta ^ 4) - (4 * eta ^ 2) + 0.10e2 / 0.3e1) * (ci2 ^ 20) + (-0.50e2 / 0.3e1 - (5 * eta ^ 4) + (20 * eta ^ 2)) * (ci2 ^ 18) + (0.3271e4 / 0.90e2 + 0.1967e4 / 0.180e3 * (eta ^ 4) - 0.873e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 16) + (-0.1361e4 / 0.30e2 - 0.2467e4 / 0.180e3 * (eta ^ 4) + 0.655e3 / 0.12e2 * (eta ^ 2)) * (ci2 ^ 14) + (0.32171e5 / 0.900e3 + 0.58781e5 / 0.5400e4 * (eta ^ 4) - 0.77647e5 / 0.1800e4 * (eta ^ 2)) * (ci2 ^ 12) + (-0.99773e5 / 0.5400e4 - 0.61541e5 / 0.10800e5 * (eta ^ 4) + 0.80657e5 / 0.3600e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.340193e6 / 0.54000e5 + 0.71387e5 / 0.36000e5 * (eta ^ 4) - 0.277177e6 / 0.36000e5 * (eta ^ 2)) * (ci2 ^ 8) + (-0.1039e4 / 0.750e3 - 0.677e3 / 0.1500e4 * (eta ^ 4) + 0.429e3 / 0.250e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.1111e4 / 0.6000e4 + 0.34651e5 / 0.540000e6 * (eta ^ 4) - 0.42323e5 / 0.180000e6 * (eta ^ 2)) * (ci2 ^ 4) + (-0.119e3 / 0.9000e4 - 0.1393e4 / 0.270000e6 * (eta ^ 4) + 0.1589e4 / 0.90000e5 * (eta ^ 2)) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 4) + 0.49e2 / 0.135000e6 - 0.49e2 / 0.90000e5 * (eta ^ 2)) * sin(g)) * sqrt((-ci2 ^ 2 + 1)) / a ^ 4 / ci2 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) -0.375e3 / 0.64e2 * (0.30e2 * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 + 1) * (ci2 - 1) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * cos((5 * g + 2 * h)) + (eta - 1) * (1 + eta) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * ((ci2 + 1) ^ 2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * cos((-2 * h + 3 * g)) + (((90 * eta ^ 4 - 360 * eta ^ 2 + 300) * ci2 ^ 20) + ((-450 * eta ^ 4 + 1800 * eta ^ 2 - 1500) * ci2 ^ 18) + (0.1967e4 / 0.2e1 * (eta ^ 4) - 0.7857e4 / 0.2e1 * (eta ^ 2) + 0.3271e4) * (ci2 ^ 16) + (-0.2467e4 / 0.2e1 * (eta ^ 4) + 0.9825e4 / 0.2e1 * (eta ^ 2) - 0.4083e4) * (ci2 ^ 14) + (0.58781e5 / 0.60e2 * (eta ^ 4) - 0.77647e5 / 0.20e2 * (eta ^ 2) + 0.32171e5 / 0.10e2) * (ci2 ^ 12) + (-0.61541e5 / 0.120e3 * (eta ^ 4) + 0.80657e5 / 0.40e2 * (eta ^ 2) - 0.99773e5 / 0.60e2) * (ci2 ^ 10) + (0.71387e5 / 0.400e3 * (eta ^ 4) - 0.277177e6 / 0.400e3 * (eta ^ 2) + 0.340193e6 / 0.600e3) * (ci2 ^ 8) + (-0.2031e4 / 0.50e2 * (eta ^ 4) + 0.3861e4 / 0.25e2 * (eta ^ 2) - 0.3117e4 / 0.25e2) * (ci2 ^ 6) + (0.34651e5 / 0.6000e4 * (eta ^ 4) - 0.42323e5 / 0.2000e4 * (eta ^ 2) + 0.3333e4 / 0.200e3) * (ci2 ^ 4) + (-0.1393e4 / 0.3000e4 * (eta ^ 4) + 0.1589e4 / 0.1000e4 * (eta ^ 2) - 0.119e3 / 0.100e3) * (ci2 ^ 2) + 0.49e2 / 0.3000e4 * (eta ^ 4) - 0.49e2 / 0.1000e4 * (eta ^ 2) + 0.49e2 / 0.1500e4) * cos((g + 2 * h)) + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 8) - (2 * ci2 ^ 6) + 0.3e1 / 0.2e1 * (ci2 ^ 4) - 0.61e2 / 0.120e3 * (ci2 ^ 2) + 0.79e2 / 0.1200e4) * ((ci2 + 1) ^ 2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * cos((5 * g)) + 0.30e2 * (eta - 1) * (1 + eta) * (ci2 + 1) * (ci2 - 1) * ((ci2 ^ 16) - 0.119e3 / 0.30e2 * (ci2 ^ 14) + 0.101e3 / 0.15e2 * (ci2 ^ 12) - 0.32e2 / 0.5e1 * (ci2 ^ 10) + 0.13441e5 / 0.3600e4 * (ci2 ^ 8) - 0.5489e4 / 0.4000e4 * (ci2 ^ 6) + 0.11191e5 / 0.36000e5 * (ci2 ^ 4) - 0.119e3 / 0.3000e4 * (ci2 ^ 2) + 0.49e2 / 0.22500e5) * cos((3 * g)) - 0.90e2 * (((eta ^ 4) - (4 * eta ^ 2) + 0.10e2 / 0.3e1) * (ci2 ^ 20) + (-0.50e2 / 0.3e1 - (5 * eta ^ 4) + (20 * eta ^ 2)) * (ci2 ^ 18) + (0.3271e4 / 0.90e2 + 0.1967e4 / 0.180e3 * (eta ^ 4) - 0.873e3 / 0.20e2 * (eta ^ 2)) * (ci2 ^ 16) + (-0.1361e4 / 0.30e2 - 0.2467e4 / 0.180e3 * (eta ^ 4) + 0.655e3 / 0.12e2 * (eta ^ 2)) * (ci2 ^ 14) + (0.32171e5 / 0.900e3 + 0.58781e5 / 0.5400e4 * (eta ^ 4) - 0.77647e5 / 0.1800e4 * (eta ^ 2)) * (ci2 ^ 12) + (-0.99773e5 / 0.5400e4 - 0.61541e5 / 0.10800e5 * (eta ^ 4) + 0.80657e5 / 0.3600e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.340193e6 / 0.54000e5 + 0.71387e5 / 0.36000e5 * (eta ^ 4) - 0.277177e6 / 0.36000e5 * (eta ^ 2)) * (ci2 ^ 8) + (-0.1039e4 / 0.750e3 - 0.677e3 / 0.1500e4 * (eta ^ 4) + 0.429e3 / 0.250e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.1111e4 / 0.6000e4 + 0.34651e5 / 0.540000e6 * (eta ^ 4) - 0.42323e5 / 0.180000e6 * (eta ^ 2)) * (ci2 ^ 4) + (-0.119e3 / 0.9000e4 - 0.1393e4 / 0.270000e6 * (eta ^ 4) + 0.1589e4 / 0.90000e5 * (eta ^ 2)) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 4) + 0.49e2 / 0.135000e6 - 0.49e2 / 0.90000e5 * (eta ^ 2)) * cos(g)) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * R__e ^ 4 * J ^ 2 * sqrt((-eta ^ 2 + 1)) * sqrt((-ci2 ^ 2 + 1)) / a ^ 4 / ci2 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4)];
	D5 = [-0.84375e5 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * ((eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 - 1) * (((ci2 ^ 18) - 0.14e2 / 0.3e1 * (ci2 ^ 16) + 0.143e3 / 0.15e2 * (ci2 ^ 14) - 0.502e3 / 0.45e2 * (ci2 ^ 12) + 0.22109e5 / 0.2700e4 * (ci2 ^ 10) - 0.209e3 / 0.54e2 * (ci2 ^ 8) + 0.5213e4 / 0.4500e4 * (ci2 ^ 6) - 0.692e3 / 0.3375e4 * (ci2 ^ 4) + 0.101e3 / 0.5625e4 * (ci2 ^ 2) - 0.7e1 / 0.16875e5) * (eta ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 18) + (50 * ci2 ^ 16) - 0.1399e4 / 0.15e2 * (ci2 ^ 14) + 0.4466e4 / 0.45e2 * (ci2 ^ 12) - 0.6631e4 / 0.100e3 * (ci2 ^ 10) + 0.12971e5 / 0.450e3 * (ci2 ^ 8) - 0.109991e6 / 0.13500e5 * (ci2 ^ 6) + 0.974e3 / 0.675e3 * (ci2 ^ 4) - 0.163e3 / 0.1125e4 * (ci2 ^ 2) + 0.7e1 / 0.1125e4) * (ci2 + 1) * cos((3 * g - h)) / 0.5e1 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 20) - 0.14e2 / 0.3e1 * (ci2 ^ 18) + 0.721e3 / 0.75e2 * (ci2 ^ 16) - 0.518e3 / 0.45e2 * (ci2 ^ 14) + 0.40007e5 / 0.4500e4 * (ci2 ^ 12) - 0.10459e5 / 0.2250e4 * (ci2 ^ 10) + 0.113239e6 / 0.67500e5 * (ci2 ^ 8) - 0.7016e4 / 0.16875e5 * (ci2 ^ 6) + 0.2297e4 / 0.33750e5 * (ci2 ^ 4) - 0.112e3 / 0.16875e5 * (ci2 ^ 2) + 0.49e2 / 0.168750e6) * (ci2 - 1) * (ci2 + 1) * cos((5 * g + h)) - 0.22e2 / 0.5e1 * cos((g + h)) * ((-0.49e2 / 0.742500e6 + (ci2 ^ 22) - 0.57e2 / 0.11e2 * (ci2 ^ 20) + 0.1178e4 / 0.99e2 * (ci2 ^ 18) - 0.718e3 / 0.45e2 * (ci2 ^ 16) + 0.137243e6 / 0.9900e4 * (ci2 ^ 14) - 0.81073e5 / 0.9900e4 * (ci2 ^ 12) + 0.99733e5 / 0.29700e5 * (ci2 ^ 10) - 0.47429e5 / 0.49500e5 * (ci2 ^ 8) + 0.139127e6 / 0.742500e6 * (ci2 ^ 6) - 0.663e3 / 0.27500e5 * (ci2 ^ 4) + 0.1379e4 / 0.742500e6 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 22) + 0.346e3 / 0.33e2 * (ci2 ^ 20) - 0.1336e4 / 0.55e2 * (ci2 ^ 18) + 0.16222e5 / 0.495e3 * (ci2 ^ 16) - 0.424201e6 / 0.14850e5 * (ci2 ^ 14) + 0.1519e4 / 0.90e2 * (ci2 ^ 12) - 0.170791e6 / 0.24750e5 * (ci2 ^ 10) + 0.48451e5 / 0.24750e5 * (ci2 ^ 8) - 0.141017e6 / 0.371250e6 * (ci2 ^ 6) + 0.17999e5 / 0.371250e6 * (ci2 ^ 4) - 0.1379e4 / 0.371250e6 * (ci2 ^ 2) + 0.49e2 / 0.371250e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * (ci2 - 1) * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) ^ 2 * (ci2 + 1))) * J ^ 2 * (ci2 - 1) * (ci2 + 1) / a ^ 5 / (eta ^ 8) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) 0 -0.421875e6 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * ci2 * J ^ 2 * (((ci2 ^ 26) - 0.11e2 / 0.2e1 * (ci2 ^ 24) + 0.2011e4 / 0.150e3 * (ci2 ^ 22) - 0.8531e4 / 0.450e3 * (ci2 ^ 20) + 0.7651e4 / 0.450e3 * (ci2 ^ 18) - 0.29339e5 / 0.3000e4 * (ci2 ^ 16) + 0.17663e5 / 0.5400e4 * (ci2 ^ 14) - 0.17111e5 / 0.67500e5 * (ci2 ^ 12) - 0.8249e4 / 0.25000e5 * (ci2 ^ 10) + 0.124561e6 / 0.675000e6 * (ci2 ^ 8) - 0.17107e5 / 0.337500e6 * (ci2 ^ 6) + 0.1379e4 / 0.168750e6 * (ci2 ^ 4) - 0.623e3 / 0.843750e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * (ci2 + 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * cos((5 * g + 2 * h)) + ((ci2 + 1) ^ 2) * (eta - 1) * (1 + eta) * (((ci2 ^ 22) - 0.11e2 / 0.2e1 * (ci2 ^ 20) + 0.203e3 / 0.15e2 * (ci2 ^ 18) - 0.1769e4 / 0.90e2 * (ci2 ^ 16) + 0.842e3 / 0.45e2 * (ci2 ^ 14) - 0.66101e5 / 0.5400e4 * (ci2 ^ 12) + 0.37793e5 / 0.6750e4 * (ci2 ^ 10) - 0.24031e5 / 0.13500e5 * (ci2 ^ 8) + 0.51413e5 / 0.135000e6 * (ci2 ^ 6) - 0.137e3 / 0.2700e4 * (ci2 ^ 4) + 0.1177e4 / 0.337500e6 * (ci2 ^ 2) - 0.7e1 / 0.112500e6) * (eta ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 22) + 0.365e3 / 0.6e1 * (ci2 ^ 20) - 0.2117e4 / 0.15e2 * (ci2 ^ 18) + 0.17299e5 / 0.90e2 * (ci2 ^ 16) - 0.7681e4 / 0.45e2 * (ci2 ^ 14) + 0.7471e4 / 0.72e2 * (ci2 ^ 12) - 0.297463e6 / 0.6750e4 * (ci2 ^ 10) + 0.176581e6 / 0.13500e5 * (ci2 ^ 8) - 0.359113e6 / 0.135000e6 * (ci2 ^ 6) + 0.953e3 / 0.2700e4 * (ci2 ^ 4) - 0.617e3 / 0.22500e5 * (ci2 ^ 2) + 0.7e1 / 0.7500e4) * ((ci2 - 1) ^ 2) * (ci2 ^ 2) * cos((-2 * h + 3 * g)) / 0.5e1 - 0.22e2 / 0.5e1 * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1)) * (ci2 ^ 2) * cos((g + 2 * h)) + (ci2 + 1) * (eta - 1) * (1 + eta) * (((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.401e3 / 0.30e2 * (ci2 ^ 20) - 0.1691e4 / 0.90e2 * (ci2 ^ 18) + 0.1507e4 / 0.90e2 * (ci2 ^ 16) - 0.52387e5 / 0.5400e4 * (ci2 ^ 14) + 0.31949e5 / 0.9000e4 * (ci2 ^ 12) - 0.9619e4 / 0.13500e5 * (ci2 ^ 10) + 0.1051e4 / 0.45000e5 * (ci2 ^ 8) + 0.3119e4 / 0.135000e6 * (ci2 ^ 6) - 0.869e3 / 0.168750e6 * (ci2 ^ 4) + 0.77e2 / 0.168750e6 * (ci2 ^ 2) - 0.7e1 / 0.337500e6) * (eta ^ 2) + 0.7e1 / 0.22500e5 - 0.77e2 / 0.11250e5 * (ci2 ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 24) + 0.365e3 / 0.6e1 * (ci2 ^ 22) - 0.1403e4 / 0.10e2 * (ci2 ^ 20) + 0.16897e5 / 0.90e2 * (ci2 ^ 18) - 0.2887e4 / 0.18e2 * (ci2 ^ 16) + 0.18049e5 / 0.200e3 * (ci2 ^ 14) - 0.886927e6 / 0.27000e5 * (ci2 ^ 12) + 0.93349e5 / 0.13500e5 * (ci2 ^ 10) - 0.51953e5 / 0.135000e6 * (ci2 ^ 8) - 0.9193e4 / 0.45000e5 * (ci2 ^ 6) + 0.1001e4 / 0.16875e5 * (ci2 ^ 4)) * (ci2 - 1) * (ci2 ^ 2) * cos((3 * g)) / 0.5e1 + ((ci2 + 1) ^ 2) * ((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.1018e4 / 0.75e2 * (ci2 ^ 20) - 0.8939e4 / 0.450e3 * (ci2 ^ 18) + 0.4319e4 / 0.225e3 * (ci2 ^ 16) - 0.1549e4 / 0.120e3 * (ci2 ^ 14) + 0.335e3 / 0.54e2 * (ci2 ^ 12) - 0.145391e6 / 0.67500e5 * (ci2 ^ 10) + 0.363937e6 / 0.675000e6 * (ci2 ^ 8) - 0.538e3 / 0.5625e4 * (ci2 ^ 6) + 0.3887e4 / 0.337500e6 * (ci2 ^ 4) - 0.287e3 / 0.337500e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * cos((5 * g)) - 0.22e2 / 0.5e1 * cos(g) * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1)) * (ci2 ^ 2)) * sqrt((-ci2 ^ 2 + 1)) / (eta ^ 8) / a ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) 0.421875e6 / 0.128e3 * (-(ci2 + 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 26) - 0.11e2 / 0.2e1 * (ci2 ^ 24) + 0.2011e4 / 0.150e3 * (ci2 ^ 22) - 0.8531e4 / 0.450e3 * (ci2 ^ 20) + 0.7651e4 / 0.450e3 * (ci2 ^ 18) - 0.29339e5 / 0.3000e4 * (ci2 ^ 16) + 0.17663e5 / 0.5400e4 * (ci2 ^ 14) - 0.17111e5 / 0.67500e5 * (ci2 ^ 12) - 0.8249e4 / 0.25000e5 * (ci2 ^ 10) + 0.124561e6 / 0.675000e6 * (ci2 ^ 8) - 0.17107e5 / 0.337500e6 * (ci2 ^ 6) + 0.1379e4 / 0.168750e6 * (ci2 ^ 4) - 0.623e3 / 0.843750e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * (ci2 - 1) * sin((5 * g + 2 * h)) + ((ci2 + 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (((ci2 ^ 22) - 0.11e2 / 0.2e1 * (ci2 ^ 20) + 0.203e3 / 0.15e2 * (ci2 ^ 18) - 0.1769e4 / 0.90e2 * (ci2 ^ 16) + 0.842e3 / 0.45e2 * (ci2 ^ 14) - 0.66101e5 / 0.5400e4 * (ci2 ^ 12) + 0.37793e5 / 0.6750e4 * (ci2 ^ 10) - 0.24031e5 / 0.13500e5 * (ci2 ^ 8) + 0.51413e5 / 0.135000e6 * (ci2 ^ 6) - 0.137e3 / 0.2700e4 * (ci2 ^ 4) + 0.1177e4 / 0.337500e6 * (ci2 ^ 2) - 0.7e1 / 0.112500e6) * (eta ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 22) + 0.365e3 / 0.6e1 * (ci2 ^ 20) - 0.2117e4 / 0.15e2 * (ci2 ^ 18) + 0.17299e5 / 0.90e2 * (ci2 ^ 16) - 0.7681e4 / 0.45e2 * (ci2 ^ 14) + 0.7471e4 / 0.72e2 * (ci2 ^ 12) - 0.297463e6 / 0.6750e4 * (ci2 ^ 10) + 0.176581e6 / 0.13500e5 * (ci2 ^ 8) - 0.359113e6 / 0.135000e6 * (ci2 ^ 6) + 0.953e3 / 0.2700e4 * (ci2 ^ 4) - 0.617e3 / 0.22500e5 * (ci2 ^ 2) + 0.7e1 / 0.7500e4) * ((ci2 - 1) ^ 2) * sin((-2 * h + 3 * g)) / 0.5e1 + 0.22e2 / 0.5e1 * (ci2 ^ 2) * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1)) * sin((g + 2 * h)) - (ci2 + 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 - 1) * (((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.401e3 / 0.30e2 * (ci2 ^ 20) - 0.1691e4 / 0.90e2 * (ci2 ^ 18) + 0.1507e4 / 0.90e2 * (ci2 ^ 16) - 0.52387e5 / 0.5400e4 * (ci2 ^ 14) + 0.31949e5 / 0.9000e4 * (ci2 ^ 12) - 0.9619e4 / 0.13500e5 * (ci2 ^ 10) + 0.1051e4 / 0.45000e5 * (ci2 ^ 8) + 0.3119e4 / 0.135000e6 * (ci2 ^ 6) - 0.869e3 / 0.168750e6 * (ci2 ^ 4) + 0.77e2 / 0.168750e6 * (ci2 ^ 2) - 0.7e1 / 0.337500e6) * (eta ^ 2) + 0.7e1 / 0.22500e5 - 0.77e2 / 0.11250e5 * (ci2 ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 24) + 0.365e3 / 0.6e1 * (ci2 ^ 22) - 0.1403e4 / 0.10e2 * (ci2 ^ 20) + 0.16897e5 / 0.90e2 * (ci2 ^ 18) - 0.2887e4 / 0.18e2 * (ci2 ^ 16) + 0.18049e5 / 0.200e3 * (ci2 ^ 14) - 0.886927e6 / 0.27000e5 * (ci2 ^ 12) + 0.93349e5 / 0.13500e5 * (ci2 ^ 10) - 0.51953e5 / 0.135000e6 * (ci2 ^ 8) - 0.9193e4 / 0.45000e5 * (ci2 ^ 6) + 0.1001e4 / 0.16875e5 * (ci2 ^ 4)) * sin((3 * g)) / 0.5e1 + ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.1018e4 / 0.75e2 * (ci2 ^ 20) - 0.8939e4 / 0.450e3 * (ci2 ^ 18) + 0.4319e4 / 0.225e3 * (ci2 ^ 16) - 0.1549e4 / 0.120e3 * (ci2 ^ 14) + 0.335e3 / 0.54e2 * (ci2 ^ 12) - 0.145391e6 / 0.67500e5 * (ci2 ^ 10) + 0.363937e6 / 0.675000e6 * (ci2 ^ 8) - 0.538e3 / 0.5625e4 * (ci2 ^ 6) + 0.3887e4 / 0.337500e6 * (ci2 ^ 4) - 0.287e3 / 0.337500e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * ((ci2 - 1) ^ 2) * sin((5 * g)) - 0.22e2 / 0.5e1 * sin(g) * (ci2 ^ 2) * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1))) * R__e ^ 4 * ci2 * sqrt((-eta ^ 2 + 1)) * J ^ 2 * sqrt((-ci2 ^ 2 + 1)) / (eta ^ 8) / a ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) 0.185625e6 / 0.128e3 * R__e ^ 4 * (ci2 + 1) * J ^ 2 * (ci2 - 1) * ((((eta ^ 4) - (3 * eta ^ 2) + 0.50e2 / 0.33e2) * (ci2 ^ 22) + (-0.57e2 / 0.11e2 * (eta ^ 4) + 0.173e3 / 0.11e2 * (eta ^ 2) - 0.90e2 / 0.11e2) * (ci2 ^ 20) + (0.1178e4 / 0.99e2 * (eta ^ 4) - 0.2004e4 / 0.55e2 * (eta ^ 2) + 0.644e3 / 0.33e2) * (ci2 ^ 18) + (-0.718e3 / 0.45e2 * (eta ^ 4) + 0.8111e4 / 0.165e3 * (eta ^ 2) - 0.4472e4 / 0.165e3) * (ci2 ^ 16) + (-0.424201e6 / 0.9900e4 * (eta ^ 2) + 0.137243e6 / 0.9900e4 * (eta ^ 4) + 0.120403e6 / 0.4950e4) * (ci2 ^ 14) + (-0.81073e5 / 0.9900e4 * (eta ^ 4) + 0.1519e4 / 0.60e2 * (eta ^ 2) - 0.73273e5 / 0.4950e4) * (ci2 ^ 12) + (0.99733e5 / 0.29700e5 * (eta ^ 4) - 0.170791e6 / 0.16500e5 * (eta ^ 2) + 0.30871e5 / 0.4950e4) * (ci2 ^ 10) + (-0.47429e5 / 0.49500e5 * (eta ^ 4) + 0.48451e5 / 0.16500e5 * (eta ^ 2) - 0.15043e5 / 0.8250e4) * (ci2 ^ 8) + (0.139127e6 / 0.742500e6 * (eta ^ 4) - 0.141017e6 / 0.247500e6 * (eta ^ 2) + 0.27047e5 / 0.74250e5) * (ci2 ^ 6) + (-0.663e3 / 0.27500e5 * (eta ^ 4) + 0.17999e5 / 0.247500e6 * (eta ^ 2) - 0.3541e4 / 0.74250e5) * (ci2 ^ 4) + 0.1379e4 / 0.742500e6 * (eta - 1) * (1 + eta) * (eta ^ 2 - 2) * (ci2 ^ 2) - 0.49e2 / 0.742500e6 * (eta ^ 4) - 0.49e2 / 0.371250e6 + 0.49e2 / 0.247500e6 * (eta ^ 2)) * (eta - 1) * (1 + eta) * cos((2 * g + 2 * h)) - 0.5e1 / 0.11e2 * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 + 1) * (ci2 - 1) * ((ci2 ^ 20) - 0.14e2 / 0.3e1 * (ci2 ^ 18) + 0.721e3 / 0.75e2 * (ci2 ^ 16) - 0.518e3 / 0.45e2 * (ci2 ^ 14) + 0.40007e5 / 0.4500e4 * (ci2 ^ 12) - 0.10459e5 / 0.2250e4 * (ci2 ^ 10) + 0.113239e6 / 0.67500e5 * (ci2 ^ 8) - 0.7016e4 / 0.16875e5 * (ci2 ^ 6) + 0.2297e4 / 0.33750e5 * (ci2 ^ 4) - 0.112e3 / 0.16875e5 * (ci2 ^ 2) + 0.49e2 / 0.168750e6) * cos((6 * g + 2 * h)) + (((eta ^ 2) - 0.35e2 / 0.11e2) * (ci2 ^ 18) + (-0.48e2 / 0.11e2 * (eta ^ 2) + 0.150e3 / 0.11e2) * (ci2 ^ 16) + (0.457e3 / 0.55e2 * (eta ^ 2) - 0.1399e4 / 0.55e2) * (ci2 ^ 14) + (-0.1493e4 / 0.165e3 * (eta ^ 2) + 0.406e3 / 0.15e2) * (ci2 ^ 12) + (0.20447e5 / 0.3300e4 * (eta ^ 2) - 0.19893e5 / 0.1100e4) * (ci2 ^ 10) + (-0.4549e4 / 0.1650e4 * (eta ^ 2) + 0.12971e5 / 0.1650e4) * (ci2 ^ 8) + (0.39227e5 / 0.49500e5 * (eta ^ 2) - 0.109991e6 / 0.49500e5) * (ci2 ^ 6) + (-0.3473e4 / 0.24750e5 * (eta ^ 2) + 0.974e3 / 0.2475e4) * (ci2 ^ 4) + (0.559e3 / 0.41250e5 * (eta ^ 2) - 0.163e3 / 0.4125e4) * (ci2 ^ 2) - 0.7e1 / 0.13750e5 * (eta ^ 2) + 0.7e1 / 0.4125e4) * (eta - 1) * (1 + eta) * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * cos((2 * g - 2 * h)) / 0.3e1 + ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 + 1) * (((eta ^ 2) + 0.100e3 / 0.3e1) * (ci2 ^ 20) + (-0.14e2 / 0.3e1 * (eta ^ 2) - 0.440e3 / 0.3e1) * (ci2 ^ 18) + (0.146e3 / 0.15e2 * (eta ^ 2) + 0.848e3 / 0.3e1) * (ci2 ^ 16) + (-0.542e3 / 0.45e2 * (eta ^ 2) - 0.1568e4 / 0.5e1) * (ci2 ^ 14) + (0.2983e4 / 0.300e3 * (eta ^ 2) + 0.49843e5 / 0.225e3) * (ci2 ^ 12) + (-0.2617e4 / 0.450e3 * (eta ^ 2) - 0.1562e4 / 0.15e2) * (ci2 ^ 10) + (0.33161e5 / 0.13500e5 * (eta ^ 2) + 0.7441e4 / 0.225e3) * (ci2 ^ 8) + (-0.494e3 / 0.675e3 * (eta ^ 2) - 0.7924e4 / 0.1125e4) * (ci2 ^ 6) + (0.9667e4 / 0.67500e5 * (eta ^ 2) + 0.131e3 / 0.135e3) * (ci2 ^ 4) + (-0.539e3 / 0.33750e5 * (eta ^ 2) - 0.266e3 / 0.3375e4) * (ci2 ^ 2) + 0.49e2 / 0.67500e5 * (eta ^ 2) + 0.49e2 / 0.16875e5) * (ci2 - 1) * cos((4 * g)) / 0.22e2 + ((eta ^ 6) / 0.2e1 - (3 * eta ^ 4) + 0.91e2 / 0.22e2 * (eta ^ 2) - 0.50e2 / 0.33e2) * (ci2 ^ 22) + (-0.57e2 / 0.22e2 * (eta ^ 6) + 0.47e2 / 0.3e1 * (eta ^ 4) - 0.481e3 / 0.22e2 * (eta ^ 2) + 0.90e2 / 0.11e2) * (ci2 ^ 20) + (0.589e3 / 0.99e2 * (eta ^ 6) - 0.17914e5 / 0.495e3 * (eta ^ 4) + 0.2809e4 / 0.55e2 * (eta ^ 2) - 0.644e3 / 0.33e2) * (ci2 ^ 18) + (-0.359e3 / 0.45e2 * (eta ^ 6) + 0.536e3 / 0.11e2 * (eta ^ 4) - 0.2293e4 / 0.33e2 * (eta ^ 2) + 0.4472e4 / 0.165e3) * (ci2 ^ 16) + (0.1209611e7 / 0.19800e5 * (eta ^ 2) + 0.137243e6 / 0.19800e5 * (eta ^ 6) - 0.1260131e7 / 0.29700e5 * (eta ^ 4) - 0.120403e6 / 0.4950e4) * (ci2 ^ 14) + (0.82721e5 / 0.3300e4 * (eta ^ 4) - 0.80121e5 / 0.2200e4 * (eta ^ 2) - 0.81073e5 / 0.19800e5 * (eta ^ 6) + 0.73273e5 / 0.4950e4) * (ci2 ^ 12) + (0.99733e5 / 0.59400e5 * (eta ^ 6) - 0.1523411e7 / 0.148500e6 * (eta ^ 4) + 0.495937e6 / 0.33000e5 * (eta ^ 2) - 0.30871e5 / 0.4950e4) * (ci2 ^ 10) + (-0.47429e5 / 0.99000e5 * (eta ^ 6) + 0.13121e5 / 0.4500e4 * (eta ^ 4) - 0.142031e6 / 0.33000e5 * (eta ^ 2) + 0.15043e5 / 0.8250e4) * (ci2 ^ 8) + (0.139127e6 / 0.1485000e7 * (eta ^ 6) - 0.140387e6 / 0.247500e6 * (eta ^ 4) + 0.417269e6 / 0.495000e6 * (eta ^ 2) - 0.27047e5 / 0.74250e5) * (ci2 ^ 6) + (-0.663e3 / 0.55000e5 * (eta ^ 6) + 0.53899e5 / 0.742500e6 * (eta ^ 4) - 0.5967e4 / 0.55000e5 * (eta ^ 2) + 0.3541e4 / 0.74250e5) * (ci2 ^ 4) + 0.1379e4 / 0.1485000e7 * (eta - 2) * (eta + 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2) - 0.49e2 / 0.1485000e7 * (eta - 2) * (eta + 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2)) / a ^ 4 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) 0.185625e6 / 0.128e3 * (ci2 + 1) * (eta - 1) * (1 + eta) * R__e ^ 4 * J ^ 2 * ((((eta ^ 4) - (3 * eta ^ 2) + 0.50e2 / 0.33e2) * (ci2 ^ 22) + (-0.57e2 / 0.11e2 * (eta ^ 4) + 0.173e3 / 0.11e2 * (eta ^ 2) - 0.90e2 / 0.11e2) * (ci2 ^ 20) + (0.1178e4 / 0.99e2 * (eta ^ 4) - 0.2004e4 / 0.55e2 * (eta ^ 2) + 0.644e3 / 0.33e2) * (ci2 ^ 18) + (-0.718e3 / 0.45e2 * (eta ^ 4) + 0.8111e4 / 0.165e3 * (eta ^ 2) - 0.4472e4 / 0.165e3) * (ci2 ^ 16) + (-0.424201e6 / 0.9900e4 * (eta ^ 2) + 0.137243e6 / 0.9900e4 * (eta ^ 4) + 0.120403e6 / 0.4950e4) * (ci2 ^ 14) + (-0.81073e5 / 0.9900e4 * (eta ^ 4) + 0.1519e4 / 0.60e2 * (eta ^ 2) - 0.73273e5 / 0.4950e4) * (ci2 ^ 12) + (0.99733e5 / 0.29700e5 * (eta ^ 4) - 0.170791e6 / 0.16500e5 * (eta ^ 2) + 0.30871e5 / 0.4950e4) * (ci2 ^ 10) + (-0.47429e5 / 0.49500e5 * (eta ^ 4) + 0.48451e5 / 0.16500e5 * (eta ^ 2) - 0.15043e5 / 0.8250e4) * (ci2 ^ 8) + (0.139127e6 / 0.742500e6 * (eta ^ 4) - 0.141017e6 / 0.247500e6 * (eta ^ 2) + 0.27047e5 / 0.74250e5) * (ci2 ^ 6) + (-0.663e3 / 0.27500e5 * (eta ^ 4) + 0.17999e5 / 0.247500e6 * (eta ^ 2) - 0.3541e4 / 0.74250e5) * (ci2 ^ 4) + 0.1379e4 / 0.742500e6 * (eta - 1) * (1 + eta) * (eta ^ 2 - 2) * (ci2 ^ 2) - 0.49e2 / 0.742500e6 * (eta ^ 4) - 0.49e2 / 0.371250e6 + 0.49e2 / 0.247500e6 * (eta ^ 2)) * sin((2 * g + 2 * h)) - 0.5e1 / 0.11e2 * (ci2 + 1) * (((ci2 ^ 20) - 0.14e2 / 0.3e1 * (ci2 ^ 18) + 0.721e3 / 0.75e2 * (ci2 ^ 16) - 0.518e3 / 0.45e2 * (ci2 ^ 14) + 0.40007e5 / 0.4500e4 * (ci2 ^ 12) - 0.10459e5 / 0.2250e4 * (ci2 ^ 10) + 0.113239e6 / 0.67500e5 * (ci2 ^ 8) - 0.7016e4 / 0.16875e5 * (ci2 ^ 6) + 0.2297e4 / 0.33750e5 * (ci2 ^ 4) - 0.112e3 / 0.16875e5 * (ci2 ^ 2) + 0.49e2 / 0.168750e6) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((6 * g + 2 * h)) + 0.11e2 / 0.15e2 * (ci2 ^ 2) * (((eta ^ 2) - 0.35e2 / 0.11e2) * (ci2 ^ 18) + (-0.48e2 / 0.11e2 * (eta ^ 2) + 0.150e3 / 0.11e2) * (ci2 ^ 16) + (0.457e3 / 0.55e2 * (eta ^ 2) - 0.1399e4 / 0.55e2) * (ci2 ^ 14) + (-0.1493e4 / 0.165e3 * (eta ^ 2) + 0.406e3 / 0.15e2) * (ci2 ^ 12) + (0.20447e5 / 0.3300e4 * (eta ^ 2) - 0.19893e5 / 0.1100e4) * (ci2 ^ 10) + (-0.4549e4 / 0.1650e4 * (eta ^ 2) + 0.12971e5 / 0.1650e4) * (ci2 ^ 8) + (0.39227e5 / 0.49500e5 * (eta ^ 2) - 0.109991e6 / 0.49500e5) * (ci2 ^ 6) + (-0.3473e4 / 0.24750e5 * (eta ^ 2) + 0.974e3 / 0.2475e4) * (ci2 ^ 4) + (0.559e3 / 0.41250e5 * (eta ^ 2) - 0.163e3 / 0.4125e4) * (ci2 ^ 2) - 0.7e1 / 0.13750e5 * (eta ^ 2) + 0.7e1 / 0.4125e4) * sin((2 * g - 2 * h)) + 0.2e1 / 0.5e1 * (eta - 1) * (1 + eta) * sin((4 * g)) * (((eta ^ 2) - 0.10e2 / 0.3e1) * (ci2 ^ 20) + (-0.14e2 / 0.3e1 * (eta ^ 2) + 0.40e2 / 0.3e1) * (ci2 ^ 18) + (0.115e3 / 0.12e2 * (eta ^ 2) - 0.113e3 / 0.5e1) * (ci2 ^ 16) + (-0.512e3 / 0.45e2 * (eta ^ 2) + 0.938e3 / 0.45e2) * (ci2 ^ 14) + (0.15529e5 / 0.1800e4 * (eta ^ 2) - 0.2459e4 / 0.225e3) * (ci2 ^ 12) + (-0.1307e4 / 0.300e3 * (eta ^ 2) + 0.628e3 / 0.225e3) * (ci2 ^ 10) + (0.40039e5 / 0.27000e5 * (eta ^ 2) + 0.406e3 / 0.3375e4) * (ci2 ^ 8) + (-0.2273e4 / 0.6750e4 * (eta ^ 2) - 0.1073e4 / 0.3375e4) * (ci2 ^ 6) + (0.13303e5 / 0.270000e6 * (eta ^ 2) + 0.1319e4 / 0.13500e5) * (ci2 ^ 4) + (-0.581e3 / 0.135000e6 * (eta ^ 2) - 0.91e2 / 0.6750e4) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 2) + 0.49e2 / 0.67500e5)) * (ci2 - 1)) * (ci2 - 1) / a ^ 4 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4)];
	D6 = [-0.84375e5 / 0.128e3 * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * (-(ci2 + 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (((ci2 ^ 18) - 0.14e2 / 0.3e1 * (ci2 ^ 16) + 0.143e3 / 0.15e2 * (ci2 ^ 14) - 0.502e3 / 0.45e2 * (ci2 ^ 12) + 0.22109e5 / 0.2700e4 * (ci2 ^ 10) - 0.209e3 / 0.54e2 * (ci2 ^ 8) + 0.5213e4 / 0.4500e4 * (ci2 ^ 6) - 0.692e3 / 0.3375e4 * (ci2 ^ 4) + 0.101e3 / 0.5625e4 * (ci2 ^ 2) - 0.7e1 / 0.16875e5) * (eta ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 18) + (50 * ci2 ^ 16) - 0.1399e4 / 0.15e2 * (ci2 ^ 14) + 0.4466e4 / 0.45e2 * (ci2 ^ 12) - 0.6631e4 / 0.100e3 * (ci2 ^ 10) + 0.12971e5 / 0.450e3 * (ci2 ^ 8) - 0.109991e6 / 0.13500e5 * (ci2 ^ 6) + 0.974e3 / 0.675e3 * (ci2 ^ 4) - 0.163e3 / 0.1125e4 * (ci2 ^ 2) + 0.7e1 / 0.1125e4) * (ci2 - 1) * sin((3 * g - h)) / 0.5e1 + (ci2 + 1) * ((ci2 ^ 20) - 0.14e2 / 0.3e1 * (ci2 ^ 18) + 0.721e3 / 0.75e2 * (ci2 ^ 16) - 0.518e3 / 0.45e2 * (ci2 ^ 14) + 0.40007e5 / 0.4500e4 * (ci2 ^ 12) - 0.10459e5 / 0.2250e4 * (ci2 ^ 10) + 0.113239e6 / 0.67500e5 * (ci2 ^ 8) - 0.7016e4 / 0.16875e5 * (ci2 ^ 6) + 0.2297e4 / 0.33750e5 * (ci2 ^ 4) - 0.112e3 / 0.16875e5 * (ci2 ^ 2) + 0.49e2 / 0.168750e6) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * sin((5 * g + h)) - 0.22e2 / 0.5e1 * sin((g + h)) * ((-0.49e2 / 0.742500e6 + (ci2 ^ 22) - 0.57e2 / 0.11e2 * (ci2 ^ 20) + 0.1178e4 / 0.99e2 * (ci2 ^ 18) - 0.718e3 / 0.45e2 * (ci2 ^ 16) + 0.137243e6 / 0.9900e4 * (ci2 ^ 14) - 0.81073e5 / 0.9900e4 * (ci2 ^ 12) + 0.99733e5 / 0.29700e5 * (ci2 ^ 10) - 0.47429e5 / 0.49500e5 * (ci2 ^ 8) + 0.139127e6 / 0.742500e6 * (ci2 ^ 6) - 0.663e3 / 0.27500e5 * (ci2 ^ 4) + 0.1379e4 / 0.742500e6 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 22) + 0.346e3 / 0.33e2 * (ci2 ^ 20) - 0.1336e4 / 0.55e2 * (ci2 ^ 18) + 0.16222e5 / 0.495e3 * (ci2 ^ 16) - 0.424201e6 / 0.14850e5 * (ci2 ^ 14) + 0.1519e4 / 0.90e2 * (ci2 ^ 12) - 0.170791e6 / 0.24750e5 * (ci2 ^ 10) + 0.48451e5 / 0.24750e5 * (ci2 ^ 8) - 0.141017e6 / 0.371250e6 * (ci2 ^ 6) + 0.17999e5 / 0.371250e6 * (ci2 ^ 4) - 0.1379e4 / 0.371250e6 * (ci2 ^ 2) + 0.49e2 / 0.371250e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * (ci2 - 1) * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) ^ 2 * (ci2 + 1))) * J ^ 2 * (ci2 - 1) / a ^ 5 / (eta ^ 8) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) 0 -0.421875e6 / 0.128e3 * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * ((ci2 + 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 26) - 0.11e2 / 0.2e1 * (ci2 ^ 24) + 0.2011e4 / 0.150e3 * (ci2 ^ 22) - 0.8531e4 / 0.450e3 * (ci2 ^ 20) + 0.7651e4 / 0.450e3 * (ci2 ^ 18) - 0.29339e5 / 0.3000e4 * (ci2 ^ 16) + 0.17663e5 / 0.5400e4 * (ci2 ^ 14) - 0.17111e5 / 0.67500e5 * (ci2 ^ 12) - 0.8249e4 / 0.25000e5 * (ci2 ^ 10) + 0.124561e6 / 0.675000e6 * (ci2 ^ 8) - 0.17107e5 / 0.337500e6 * (ci2 ^ 6) + 0.1379e4 / 0.168750e6 * (ci2 ^ 4) - 0.623e3 / 0.843750e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * (ci2 - 1) * sin((5 * g + 2 * h)) - ((ci2 + 1) ^ 2) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (((ci2 ^ 22) - 0.11e2 / 0.2e1 * (ci2 ^ 20) + 0.203e3 / 0.15e2 * (ci2 ^ 18) - 0.1769e4 / 0.90e2 * (ci2 ^ 16) + 0.842e3 / 0.45e2 * (ci2 ^ 14) - 0.66101e5 / 0.5400e4 * (ci2 ^ 12) + 0.37793e5 / 0.6750e4 * (ci2 ^ 10) - 0.24031e5 / 0.13500e5 * (ci2 ^ 8) + 0.51413e5 / 0.135000e6 * (ci2 ^ 6) - 0.137e3 / 0.2700e4 * (ci2 ^ 4) + 0.1177e4 / 0.337500e6 * (ci2 ^ 2) - 0.7e1 / 0.112500e6) * (eta ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 22) + 0.365e3 / 0.6e1 * (ci2 ^ 20) - 0.2117e4 / 0.15e2 * (ci2 ^ 18) + 0.17299e5 / 0.90e2 * (ci2 ^ 16) - 0.7681e4 / 0.45e2 * (ci2 ^ 14) + 0.7471e4 / 0.72e2 * (ci2 ^ 12) - 0.297463e6 / 0.6750e4 * (ci2 ^ 10) + 0.176581e6 / 0.13500e5 * (ci2 ^ 8) - 0.359113e6 / 0.135000e6 * (ci2 ^ 6) + 0.953e3 / 0.2700e4 * (ci2 ^ 4) - 0.617e3 / 0.22500e5 * (ci2 ^ 2) + 0.7e1 / 0.7500e4) * ((ci2 - 1) ^ 2) * sin((-2 * h + 3 * g)) / 0.5e1 - 0.22e2 / 0.5e1 * (ci2 ^ 2) * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1)) * sin((g + 2 * h)) - (ci2 + 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 - 1) * (((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.401e3 / 0.30e2 * (ci2 ^ 20) - 0.1691e4 / 0.90e2 * (ci2 ^ 18) + 0.1507e4 / 0.90e2 * (ci2 ^ 16) - 0.52387e5 / 0.5400e4 * (ci2 ^ 14) + 0.31949e5 / 0.9000e4 * (ci2 ^ 12) - 0.9619e4 / 0.13500e5 * (ci2 ^ 10) + 0.1051e4 / 0.45000e5 * (ci2 ^ 8) + 0.3119e4 / 0.135000e6 * (ci2 ^ 6) - 0.869e3 / 0.168750e6 * (ci2 ^ 4) + 0.77e2 / 0.168750e6 * (ci2 ^ 2) - 0.7e1 / 0.337500e6) * (eta ^ 2) + 0.7e1 / 0.22500e5 - 0.77e2 / 0.11250e5 * (ci2 ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 24) + 0.365e3 / 0.6e1 * (ci2 ^ 22) - 0.1403e4 / 0.10e2 * (ci2 ^ 20) + 0.16897e5 / 0.90e2 * (ci2 ^ 18) - 0.2887e4 / 0.18e2 * (ci2 ^ 16) + 0.18049e5 / 0.200e3 * (ci2 ^ 14) - 0.886927e6 / 0.27000e5 * (ci2 ^ 12) + 0.93349e5 / 0.13500e5 * (ci2 ^ 10) - 0.51953e5 / 0.135000e6 * (ci2 ^ 8) - 0.9193e4 / 0.45000e5 * (ci2 ^ 6) + 0.1001e4 / 0.16875e5 * (ci2 ^ 4)) * sin((3 * g)) / 0.5e1 + ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.1018e4 / 0.75e2 * (ci2 ^ 20) - 0.8939e4 / 0.450e3 * (ci2 ^ 18) + 0.4319e4 / 0.225e3 * (ci2 ^ 16) - 0.1549e4 / 0.120e3 * (ci2 ^ 14) + 0.335e3 / 0.54e2 * (ci2 ^ 12) - 0.145391e6 / 0.67500e5 * (ci2 ^ 10) + 0.363937e6 / 0.675000e6 * (ci2 ^ 8) - 0.538e3 / 0.5625e4 * (ci2 ^ 6) + 0.3887e4 / 0.337500e6 * (ci2 ^ 4) - 0.287e3 / 0.337500e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * ((ci2 - 1) ^ 2) * sin((5 * g)) - 0.22e2 / 0.5e1 * sin(g) * (ci2 ^ 2) * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1))) * ci2 * J ^ 2 * sqrt((-ci2 ^ 2 + 1)) / (eta ^ 8) / a ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) -0.421875e6 / 0.128e3 * R__e ^ 4 * ci2 * J ^ 2 * (-((ci2 ^ 26) - 0.11e2 / 0.2e1 * (ci2 ^ 24) + 0.2011e4 / 0.150e3 * (ci2 ^ 22) - 0.8531e4 / 0.450e3 * (ci2 ^ 20) + 0.7651e4 / 0.450e3 * (ci2 ^ 18) - 0.29339e5 / 0.3000e4 * (ci2 ^ 16) + 0.17663e5 / 0.5400e4 * (ci2 ^ 14) - 0.17111e5 / 0.67500e5 * (ci2 ^ 12) - 0.8249e4 / 0.25000e5 * (ci2 ^ 10) + 0.124561e6 / 0.675000e6 * (ci2 ^ 8) - 0.17107e5 / 0.337500e6 * (ci2 ^ 6) + 0.1379e4 / 0.168750e6 * (ci2 ^ 4) - 0.623e3 / 0.843750e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * (ci2 + 1) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 - 1) * cos((5 * g + 2 * h)) - ((ci2 + 1) ^ 2) * (eta - 1) * (1 + eta) * (((ci2 ^ 22) - 0.11e2 / 0.2e1 * (ci2 ^ 20) + 0.203e3 / 0.15e2 * (ci2 ^ 18) - 0.1769e4 / 0.90e2 * (ci2 ^ 16) + 0.842e3 / 0.45e2 * (ci2 ^ 14) - 0.66101e5 / 0.5400e4 * (ci2 ^ 12) + 0.37793e5 / 0.6750e4 * (ci2 ^ 10) - 0.24031e5 / 0.13500e5 * (ci2 ^ 8) + 0.51413e5 / 0.135000e6 * (ci2 ^ 6) - 0.137e3 / 0.2700e4 * (ci2 ^ 4) + 0.1177e4 / 0.337500e6 * (ci2 ^ 2) - 0.7e1 / 0.112500e6) * (eta ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 22) + 0.365e3 / 0.6e1 * (ci2 ^ 20) - 0.2117e4 / 0.15e2 * (ci2 ^ 18) + 0.17299e5 / 0.90e2 * (ci2 ^ 16) - 0.7681e4 / 0.45e2 * (ci2 ^ 14) + 0.7471e4 / 0.72e2 * (ci2 ^ 12) - 0.297463e6 / 0.6750e4 * (ci2 ^ 10) + 0.176581e6 / 0.13500e5 * (ci2 ^ 8) - 0.359113e6 / 0.135000e6 * (ci2 ^ 6) + 0.953e3 / 0.2700e4 * (ci2 ^ 4) - 0.617e3 / 0.22500e5 * (ci2 ^ 2) + 0.7e1 / 0.7500e4) * ((ci2 - 1) ^ 2) * (ci2 ^ 2) * cos((-2 * h + 3 * g)) / 0.5e1 + 0.22e2 / 0.5e1 * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1)) * (ci2 ^ 2) * cos((g + 2 * h)) + (ci2 + 1) * (eta - 1) * (1 + eta) * (((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.401e3 / 0.30e2 * (ci2 ^ 20) - 0.1691e4 / 0.90e2 * (ci2 ^ 18) + 0.1507e4 / 0.90e2 * (ci2 ^ 16) - 0.52387e5 / 0.5400e4 * (ci2 ^ 14) + 0.31949e5 / 0.9000e4 * (ci2 ^ 12) - 0.9619e4 / 0.13500e5 * (ci2 ^ 10) + 0.1051e4 / 0.45000e5 * (ci2 ^ 8) + 0.3119e4 / 0.135000e6 * (ci2 ^ 6) - 0.869e3 / 0.168750e6 * (ci2 ^ 4) + 0.77e2 / 0.168750e6 * (ci2 ^ 2) - 0.7e1 / 0.337500e6) * (eta ^ 2) + 0.7e1 / 0.22500e5 - 0.77e2 / 0.11250e5 * (ci2 ^ 2) - 0.35e2 / 0.3e1 * (ci2 ^ 24) + 0.365e3 / 0.6e1 * (ci2 ^ 22) - 0.1403e4 / 0.10e2 * (ci2 ^ 20) + 0.16897e5 / 0.90e2 * (ci2 ^ 18) - 0.2887e4 / 0.18e2 * (ci2 ^ 16) + 0.18049e5 / 0.200e3 * (ci2 ^ 14) - 0.886927e6 / 0.27000e5 * (ci2 ^ 12) + 0.93349e5 / 0.13500e5 * (ci2 ^ 10) - 0.51953e5 / 0.135000e6 * (ci2 ^ 8) - 0.9193e4 / 0.45000e5 * (ci2 ^ 6) + 0.1001e4 / 0.16875e5 * (ci2 ^ 4)) * (ci2 - 1) * (ci2 ^ 2) * cos((3 * g)) / 0.5e1 + ((ci2 + 1) ^ 2) * ((ci2 ^ 24) - 0.11e2 / 0.2e1 * (ci2 ^ 22) + 0.1018e4 / 0.75e2 * (ci2 ^ 20) - 0.8939e4 / 0.450e3 * (ci2 ^ 18) + 0.4319e4 / 0.225e3 * (ci2 ^ 16) - 0.1549e4 / 0.120e3 * (ci2 ^ 14) + 0.335e3 / 0.54e2 * (ci2 ^ 12) - 0.145391e6 / 0.67500e5 * (ci2 ^ 10) + 0.363937e6 / 0.675000e6 * (ci2 ^ 8) - 0.538e3 / 0.5625e4 * (ci2 ^ 6) + 0.3887e4 / 0.337500e6 * (ci2 ^ 4) - 0.287e3 / 0.337500e6 * (ci2 ^ 2) + 0.49e2 / 0.1687500e7) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * ((ci2 - 1) ^ 2) * cos((5 * g)) - 0.22e2 / 0.5e1 * cos(g) * ((-0.28e2 / 0.928125e6 + (ci2 ^ 26) - 0.73e2 / 0.11e2 * (ci2 ^ 24) + 0.19759e5 / 0.990e3 * (ci2 ^ 22) - 0.2375e4 / 0.66e2 * (ci2 ^ 20) + 0.8585e4 / 0.198e3 * (ci2 ^ 18) - 0.921e3 / 0.25e2 * (ci2 ^ 16) + 0.3369893e7 / 0.148500e6 * (ci2 ^ 14) - 0.60913e5 / 0.5940e4 * (ci2 ^ 12) + 0.630692e6 / 0.185625e6 * (ci2 ^ 10) - 0.40327e5 / 0.49500e5 * (ci2 ^ 8) + 0.509677e6 / 0.3712500e7 * (ci2 ^ 6) - 0.14269e5 / 0.928125e6 * (ci2 ^ 4) + 0.23e2 / 0.22500e5 * (ci2 ^ 2)) * (eta ^ 4) + (-(2 * ci2 ^ 26) + 0.147e3 / 0.11e2 * (ci2 ^ 24) - 0.2224e4 / 0.55e2 * (ci2 ^ 22) + 0.72563e5 / 0.990e3 * (ci2 ^ 20) - 0.87829e5 / 0.990e3 * (ci2 ^ 18) + 0.374491e6 / 0.4950e4 * (ci2 ^ 16) - 0.3469583e7 / 0.74250e5 * (ci2 ^ 14) + 0.57107e5 / 0.2700e4 * (ci2 ^ 12) - 0.1041079e7 / 0.148500e6 * (ci2 ^ 10) + 0.49871e5 / 0.29700e5 * (ci2 ^ 8) - 0.15869e5 / 0.56250e5 * (ci2 ^ 6) + 0.2651e4 / 0.84375e5 * (ci2 ^ 4) - 0.1922e4 / 0.928125e6 * (ci2 ^ 2) + 0.56e2 / 0.928125e6) * (eta ^ 2) + 0.25e2 / 0.33e2 * ((ci2 ^ 10) - 0.11e2 / 0.5e1 * (ci2 ^ 8) + 0.91e2 / 0.50e2 * (ci2 ^ 6) - 0.7e1 / 0.10e2 * (ci2 ^ 4) + 0.19e2 / 0.150e3 * (ci2 ^ 2) - 0.7e1 / 0.750e3) * (ci2 + 1) * ((ci2 ^ 14) - 0.18e2 / 0.5e1 * (ci2 ^ 12) + 0.27e2 / 0.5e1 * (ci2 ^ 10) - 0.109e3 / 0.25e2 * (ci2 ^ 8) + 0.1531e4 / 0.750e3 * (ci2 ^ 6) - 0.69e2 / 0.125e3 * (ci2 ^ 4) + 0.59e2 / 0.750e3 * (ci2 ^ 2) - 0.8e1 / 0.1875e4) * (ci2 - 1)) * (ci2 ^ 2)) * sqrt((-ci2 ^ 2 + 1)) * sqrt((-eta ^ 2 + 1)) / (eta ^ 8) / a ^ 4 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) 0.185625e6 / 0.128e3 * (ci2 + 1) * ((((eta ^ 4) - (3 * eta ^ 2) + 0.50e2 / 0.33e2) * (ci2 ^ 22) + (-0.57e2 / 0.11e2 * (eta ^ 4) + 0.173e3 / 0.11e2 * (eta ^ 2) - 0.90e2 / 0.11e2) * (ci2 ^ 20) + (0.1178e4 / 0.99e2 * (eta ^ 4) - 0.2004e4 / 0.55e2 * (eta ^ 2) + 0.644e3 / 0.33e2) * (ci2 ^ 18) + (-0.718e3 / 0.45e2 * (eta ^ 4) + 0.8111e4 / 0.165e3 * (eta ^ 2) - 0.4472e4 / 0.165e3) * (ci2 ^ 16) + (-0.424201e6 / 0.9900e4 * (eta ^ 2) + 0.137243e6 / 0.9900e4 * (eta ^ 4) + 0.120403e6 / 0.4950e4) * (ci2 ^ 14) + (-0.81073e5 / 0.9900e4 * (eta ^ 4) + 0.1519e4 / 0.60e2 * (eta ^ 2) - 0.73273e5 / 0.4950e4) * (ci2 ^ 12) + (0.99733e5 / 0.29700e5 * (eta ^ 4) - 0.170791e6 / 0.16500e5 * (eta ^ 2) + 0.30871e5 / 0.4950e4) * (ci2 ^ 10) + (-0.47429e5 / 0.49500e5 * (eta ^ 4) + 0.48451e5 / 0.16500e5 * (eta ^ 2) - 0.15043e5 / 0.8250e4) * (ci2 ^ 8) + (0.139127e6 / 0.742500e6 * (eta ^ 4) - 0.141017e6 / 0.247500e6 * (eta ^ 2) + 0.27047e5 / 0.74250e5) * (ci2 ^ 6) + (-0.663e3 / 0.27500e5 * (eta ^ 4) + 0.17999e5 / 0.247500e6 * (eta ^ 2) - 0.3541e4 / 0.74250e5) * (ci2 ^ 4) + 0.1379e4 / 0.742500e6 * (eta - 1) * (1 + eta) * (eta ^ 2 - 2) * (ci2 ^ 2) - 0.49e2 / 0.742500e6 * (eta ^ 4) - 0.49e2 / 0.371250e6 + 0.49e2 / 0.247500e6 * (eta ^ 2)) * sin((2 * g + 2 * h)) - 0.5e1 / 0.11e2 * (ci2 + 1) * (((ci2 ^ 20) - 0.14e2 / 0.3e1 * (ci2 ^ 18) + 0.721e3 / 0.75e2 * (ci2 ^ 16) - 0.518e3 / 0.45e2 * (ci2 ^ 14) + 0.40007e5 / 0.4500e4 * (ci2 ^ 12) - 0.10459e5 / 0.2250e4 * (ci2 ^ 10) + 0.113239e6 / 0.67500e5 * (ci2 ^ 8) - 0.7016e4 / 0.16875e5 * (ci2 ^ 6) + 0.2297e4 / 0.33750e5 * (ci2 ^ 4) - 0.112e3 / 0.16875e5 * (ci2 ^ 2) + 0.49e2 / 0.168750e6) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * sin((6 * g + 2 * h)) + 0.11e2 / 0.15e2 * (ci2 ^ 2) * (((eta ^ 2) - 0.35e2 / 0.11e2) * (ci2 ^ 18) + (-0.48e2 / 0.11e2 * (eta ^ 2) + 0.150e3 / 0.11e2) * (ci2 ^ 16) + (0.457e3 / 0.55e2 * (eta ^ 2) - 0.1399e4 / 0.55e2) * (ci2 ^ 14) + (-0.1493e4 / 0.165e3 * (eta ^ 2) + 0.406e3 / 0.15e2) * (ci2 ^ 12) + (0.20447e5 / 0.3300e4 * (eta ^ 2) - 0.19893e5 / 0.1100e4) * (ci2 ^ 10) + (-0.4549e4 / 0.1650e4 * (eta ^ 2) + 0.12971e5 / 0.1650e4) * (ci2 ^ 8) + (0.39227e5 / 0.49500e5 * (eta ^ 2) - 0.109991e6 / 0.49500e5) * (ci2 ^ 6) + (-0.3473e4 / 0.24750e5 * (eta ^ 2) + 0.974e3 / 0.2475e4) * (ci2 ^ 4) + (0.559e3 / 0.41250e5 * (eta ^ 2) - 0.163e3 / 0.4125e4) * (ci2 ^ 2) - 0.7e1 / 0.13750e5 * (eta ^ 2) + 0.7e1 / 0.4125e4) * sin((2 * g - 2 * h)) - 0.2e1 / 0.5e1 * (eta - 1) * (1 + eta) * sin((4 * g)) * (((eta ^ 2) - 0.10e2 / 0.3e1) * (ci2 ^ 20) + (-0.14e2 / 0.3e1 * (eta ^ 2) + 0.40e2 / 0.3e1) * (ci2 ^ 18) + (0.115e3 / 0.12e2 * (eta ^ 2) - 0.113e3 / 0.5e1) * (ci2 ^ 16) + (-0.512e3 / 0.45e2 * (eta ^ 2) + 0.938e3 / 0.45e2) * (ci2 ^ 14) + (0.15529e5 / 0.1800e4 * (eta ^ 2) - 0.2459e4 / 0.225e3) * (ci2 ^ 12) + (-0.1307e4 / 0.300e3 * (eta ^ 2) + 0.628e3 / 0.225e3) * (ci2 ^ 10) + (0.40039e5 / 0.27000e5 * (eta ^ 2) + 0.406e3 / 0.3375e4) * (ci2 ^ 8) + (-0.2273e4 / 0.6750e4 * (eta ^ 2) - 0.1073e4 / 0.3375e4) * (ci2 ^ 6) + (0.13303e5 / 0.270000e6 * (eta ^ 2) + 0.1319e4 / 0.13500e5) * (ci2 ^ 4) + (-0.581e3 / 0.135000e6 * (eta ^ 2) - 0.91e2 / 0.6750e4) * (ci2 ^ 2) + 0.49e2 / 0.270000e6 * (eta ^ 2) + 0.49e2 / 0.67500e5)) * (ci2 - 1)) * (eta - 1) * (1 + eta) * R__e ^ 4 * J ^ 2 * (ci2 - 1) / a ^ 4 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) -0.185625e6 / 0.128e3 * ((((eta ^ 4) - (3 * eta ^ 2) + 0.50e2 / 0.33e2) * (ci2 ^ 22) + (-0.57e2 / 0.11e2 * (eta ^ 4) + 0.173e3 / 0.11e2 * (eta ^ 2) - 0.90e2 / 0.11e2) * (ci2 ^ 20) + (0.1178e4 / 0.99e2 * (eta ^ 4) - 0.2004e4 / 0.55e2 * (eta ^ 2) + 0.644e3 / 0.33e2) * (ci2 ^ 18) + (-0.718e3 / 0.45e2 * (eta ^ 4) + 0.8111e4 / 0.165e3 * (eta ^ 2) - 0.4472e4 / 0.165e3) * (ci2 ^ 16) + (-0.424201e6 / 0.9900e4 * (eta ^ 2) + 0.137243e6 / 0.9900e4 * (eta ^ 4) + 0.120403e6 / 0.4950e4) * (ci2 ^ 14) + (-0.81073e5 / 0.9900e4 * (eta ^ 4) + 0.1519e4 / 0.60e2 * (eta ^ 2) - 0.73273e5 / 0.4950e4) * (ci2 ^ 12) + (0.99733e5 / 0.29700e5 * (eta ^ 4) - 0.170791e6 / 0.16500e5 * (eta ^ 2) + 0.30871e5 / 0.4950e4) * (ci2 ^ 10) + (-0.47429e5 / 0.49500e5 * (eta ^ 4) + 0.48451e5 / 0.16500e5 * (eta ^ 2) - 0.15043e5 / 0.8250e4) * (ci2 ^ 8) + (0.139127e6 / 0.742500e6 * (eta ^ 4) - 0.141017e6 / 0.247500e6 * (eta ^ 2) + 0.27047e5 / 0.74250e5) * (ci2 ^ 6) + (-0.663e3 / 0.27500e5 * (eta ^ 4) + 0.17999e5 / 0.247500e6 * (eta ^ 2) - 0.3541e4 / 0.74250e5) * (ci2 ^ 4) + 0.1379e4 / 0.742500e6 * (eta - 1) * (1 + eta) * (eta ^ 2 - 2) * (ci2 ^ 2) - 0.49e2 / 0.742500e6 * (eta ^ 4) - 0.49e2 / 0.371250e6 + 0.49e2 / 0.247500e6 * (eta ^ 2)) * (eta - 1) * (1 + eta) * cos((2 * g + 2 * h)) - 0.5e1 / 0.11e2 * ((eta - 1) ^ 3) * ((1 + eta) ^ 3) * (ci2 + 1) * (ci2 - 1) * ((ci2 ^ 20) - 0.14e2 / 0.3e1 * (ci2 ^ 18) + 0.721e3 / 0.75e2 * (ci2 ^ 16) - 0.518e3 / 0.45e2 * (ci2 ^ 14) + 0.40007e5 / 0.4500e4 * (ci2 ^ 12) - 0.10459e5 / 0.2250e4 * (ci2 ^ 10) + 0.113239e6 / 0.67500e5 * (ci2 ^ 8) - 0.7016e4 / 0.16875e5 * (ci2 ^ 6) + 0.2297e4 / 0.33750e5 * (ci2 ^ 4) - 0.112e3 / 0.16875e5 * (ci2 ^ 2) + 0.49e2 / 0.168750e6) * cos((6 * g + 2 * h)) + (((eta ^ 2) - 0.35e2 / 0.11e2) * (ci2 ^ 18) + (-0.48e2 / 0.11e2 * (eta ^ 2) + 0.150e3 / 0.11e2) * (ci2 ^ 16) + (0.457e3 / 0.55e2 * (eta ^ 2) - 0.1399e4 / 0.55e2) * (ci2 ^ 14) + (-0.1493e4 / 0.165e3 * (eta ^ 2) + 0.406e3 / 0.15e2) * (ci2 ^ 12) + (0.20447e5 / 0.3300e4 * (eta ^ 2) - 0.19893e5 / 0.1100e4) * (ci2 ^ 10) + (-0.4549e4 / 0.1650e4 * (eta ^ 2) + 0.12971e5 / 0.1650e4) * (ci2 ^ 8) + (0.39227e5 / 0.49500e5 * (eta ^ 2) - 0.109991e6 / 0.49500e5) * (ci2 ^ 6) + (-0.3473e4 / 0.24750e5 * (eta ^ 2) + 0.974e3 / 0.2475e4) * (ci2 ^ 4) + (0.559e3 / 0.41250e5 * (eta ^ 2) - 0.163e3 / 0.4125e4) * (ci2 ^ 2) - 0.7e1 / 0.13750e5 * (eta ^ 2) + 0.7e1 / 0.4125e4) * (eta - 1) * (1 + eta) * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * cos((2 * g - 2 * h)) / 0.3e1 - ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 + 1) * (((eta ^ 2) + 0.100e3 / 0.3e1) * (ci2 ^ 20) + (-0.14e2 / 0.3e1 * (eta ^ 2) - 0.440e3 / 0.3e1) * (ci2 ^ 18) + (0.146e3 / 0.15e2 * (eta ^ 2) + 0.848e3 / 0.3e1) * (ci2 ^ 16) + (-0.542e3 / 0.45e2 * (eta ^ 2) - 0.1568e4 / 0.5e1) * (ci2 ^ 14) + (0.2983e4 / 0.300e3 * (eta ^ 2) + 0.49843e5 / 0.225e3) * (ci2 ^ 12) + (-0.2617e4 / 0.450e3 * (eta ^ 2) - 0.1562e4 / 0.15e2) * (ci2 ^ 10) + (0.33161e5 / 0.13500e5 * (eta ^ 2) + 0.7441e4 / 0.225e3) * (ci2 ^ 8) + (-0.494e3 / 0.675e3 * (eta ^ 2) - 0.7924e4 / 0.1125e4) * (ci2 ^ 6) + (0.9667e4 / 0.67500e5 * (eta ^ 2) + 0.131e3 / 0.135e3) * (ci2 ^ 4) + (-0.539e3 / 0.33750e5 * (eta ^ 2) - 0.266e3 / 0.3375e4) * (ci2 ^ 2) + 0.49e2 / 0.67500e5 * (eta ^ 2) + 0.49e2 / 0.16875e5) * (ci2 - 1) * cos((4 * g)) / 0.22e2 + (0.50e2 / 0.33e2 - (eta ^ 6) / 0.2e1 + (3 * eta ^ 4) - 0.91e2 / 0.22e2 * (eta ^ 2)) * (ci2 ^ 22) + (-0.90e2 / 0.11e2 + 0.57e2 / 0.22e2 * (eta ^ 6) - 0.47e2 / 0.3e1 * (eta ^ 4) + 0.481e3 / 0.22e2 * (eta ^ 2)) * (ci2 ^ 20) + (0.644e3 / 0.33e2 - 0.589e3 / 0.99e2 * (eta ^ 6) + 0.17914e5 / 0.495e3 * (eta ^ 4) - 0.2809e4 / 0.55e2 * (eta ^ 2)) * (ci2 ^ 18) + (-0.4472e4 / 0.165e3 + 0.359e3 / 0.45e2 * (eta ^ 6) - 0.536e3 / 0.11e2 * (eta ^ 4) + 0.2293e4 / 0.33e2 * (eta ^ 2)) * (ci2 ^ 16) + (0.120403e6 / 0.4950e4 - 0.137243e6 / 0.19800e5 * (eta ^ 6) + 0.1260131e7 / 0.29700e5 * (eta ^ 4) - 0.1209611e7 / 0.19800e5 * (eta ^ 2)) * (ci2 ^ 14) + (-0.73273e5 / 0.4950e4 + 0.81073e5 / 0.19800e5 * (eta ^ 6) - 0.82721e5 / 0.3300e4 * (eta ^ 4) + 0.80121e5 / 0.2200e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.30871e5 / 0.4950e4 - 0.99733e5 / 0.59400e5 * (eta ^ 6) + 0.1523411e7 / 0.148500e6 * (eta ^ 4) - 0.495937e6 / 0.33000e5 * (eta ^ 2)) * (ci2 ^ 10) + (-0.15043e5 / 0.8250e4 + 0.47429e5 / 0.99000e5 * (eta ^ 6) - 0.13121e5 / 0.4500e4 * (eta ^ 4) + 0.142031e6 / 0.33000e5 * (eta ^ 2)) * (ci2 ^ 8) + (0.27047e5 / 0.74250e5 - 0.417269e6 / 0.495000e6 * (eta ^ 2) - 0.139127e6 / 0.1485000e7 * (eta ^ 6) + 0.140387e6 / 0.247500e6 * (eta ^ 4)) * (ci2 ^ 6) + (-0.3541e4 / 0.74250e5 - 0.53899e5 / 0.742500e6 * (eta ^ 4) + 0.5967e4 / 0.55000e5 * (eta ^ 2) + 0.663e3 / 0.55000e5 * (eta ^ 6)) * (ci2 ^ 4) - 0.1379e4 / 0.1485000e7 * (eta - 2) * (eta + 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2) * (ci2 ^ 2) + 0.49e2 / 0.1485000e7 * (eta - 2) * (eta + 2) * ((eta - 1) ^ 2) * ((1 + eta) ^ 2)) * (ci2 + 1) * R__e ^ 4 * J ^ 2 * (ci2 - 1) / a ^ 4 / (eta ^ 10) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4)];

	Dlp2t1J2 = [D1;D2;D3;D4;D5;D6];
	
    % Second-Order Dlp for J2 - Term-2 (associated with W2)
    D1 = [0 0 0 0 0 0];
	D2 = [0.16875e5 / 0.4e1 * (ci2 + 1) * R__e ^ 4 * (ci2 - 1) * sin((2 * g)) * ((ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * ((0.1045e4 / 0.108e3 + eta ^ 6 + 0.323e3 / 0.36e2 * eta ^ 5 + 0.437e3 / 0.12e2 * eta ^ 4 + 0.1469e4 / 0.18e2 * eta ^ 3 + 0.1643e4 / 0.18e2 * eta ^ 2 + 0.5225e4 / 0.108e3 * eta) * (ci2 ^ 18) + (-0.2185e4 / 0.54e2 - 0.4e1 * eta ^ 6 - 0.655e3 / 0.18e2 * eta ^ 5 - 0.8081e4 / 0.54e2 * eta ^ 4 - 0.9139e4 / 0.27e2 * eta ^ 3 - 0.10279e5 / 0.27e2 * eta ^ 2 - 0.10925e5 / 0.54e2 * eta) * (ci2 ^ 16) + (0.52703e5 / 0.720e3 + 0.413e3 / 0.60e2 * eta ^ 6 + 0.15269e5 / 0.240e3 * eta ^ 5 + 0.1720859e7 / 0.6480e4 * eta ^ 4 + 0.655297e6 / 0.1080e4 * eta ^ 3 + 0.741619e6 / 0.1080e4 * eta ^ 2 + 0.52703e5 / 0.144e3 * eta) * (ci2 ^ 14) + (-0.121541e6 / 0.1620e4 - 0.133e3 / 0.20e2 * eta ^ 6 - 0.11281e5 / 0.180e3 * eta ^ 5 - 0.143797e6 / 0.540e3 * eta ^ 4 - 0.99703e5 / 0.162e3 * eta ^ 3 - 0.126263e6 / 0.180e3 * eta ^ 2 - 0.121541e6 / 0.324e3 * eta) * (ci2 ^ 12) + (0.1553143e7 / 0.32400e5 + 0.887e3 / 0.225e3 * eta ^ 6 + 0.3051e4 / 0.80e2 * eta ^ 5 + 0.596683e6 / 0.3600e4 * eta ^ 4 + 0.6292387e7 / 0.16200e5 * eta ^ 3 + 0.2410681e7 / 0.5400e4 * eta ^ 2 + 0.1553143e7 / 0.6480e4 * eta) * (ci2 ^ 10) + (-0.320549e6 / 0.16200e5 - 0.1321e4 / 0.900e3 * eta ^ 6 - 0.26581e5 / 0.1800e4 * eta ^ 5 - 0.1072421e7 / 0.16200e5 * eta ^ 4 - 0.1279181e7 / 0.8100e4 * eta ^ 3 - 0.247579e6 / 0.1350e4 * eta ^ 2 - 0.320549e6 / 0.3240e4 * eta) * (ci2 ^ 8) + (0.3422003e7 / 0.648000e6 + 0.18097e5 / 0.54000e5 * eta ^ 6 + 0.86489e5 / 0.24000e5 * eta ^ 5 + 0.1217999e7 / 0.72000e5 * eta ^ 4 + 0.13396727e8 / 0.324000e6 * eta ^ 3 + 0.1751581e7 / 0.36000e5 * eta ^ 2 + 0.3422003e7 / 0.129600e6 * eta) * (ci2 ^ 6) + (-0.142771e6 / 0.162000e6 - 0.2317e4 / 0.54000e5 * eta ^ 6 - 0.28421e5 / 0.54000e5 * eta ^ 5 - 0.143683e6 / 0.54000e5 * eta ^ 4 - 0.545293e6 / 0.81000e5 * eta ^ 3 - 0.435223e6 / 0.54000e5 * eta ^ 2 - 0.142771e6 / 0.32400e5 * eta) * (ci2 ^ 4) + (0.15109e5 / 0.180000e6 + 0.637e3 / 0.270000e6 * eta ^ 6 + 0.21911e5 / 0.540000e6 * eta ^ 5 + 0.55909e5 / 0.90000e5 * eta ^ 3 + 0.15133e5 / 0.64800e5 * eta ^ 4 + 0.8557e4 / 0.11250e5 * eta ^ 2 + 0.15109e5 / 0.36000e5 * eta) * (ci2 ^ 2) - 0.637e3 / 0.540000e6 * (0.1e1 + eta) * (eta ^ 4 + 0.4084e4 / 0.637e3 * eta ^ 3 + 0.28234e5 / 0.1911e4 * eta ^ 2 + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 0.1e1) * cos((2 * g)) - ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (0.1e1 + eta) * ((-0.4895e4 / 0.324e3 + eta ^ 6 - 0.23e2 / 0.12e2 * eta ^ 5 - 0.2861e4 / 0.108e3 * eta ^ 4 - 0.8515e4 / 0.162e3 * eta ^ 3 - 0.5839e4 / 0.162e3 * eta ^ 2 - 0.2735e4 / 0.108e3 * eta) * (ci2 ^ 18) + (0.10235e5 / 0.162e3 - 0.4e1 * eta ^ 6 + 0.43e2 / 0.6e1 * eta ^ 5 + 0.5881e4 / 0.54e2 * eta ^ 4 + 0.17783e5 / 0.81e2 * eta ^ 3 + 0.4091e4 / 0.27e2 * eta ^ 2 + 0.5699e4 / 0.54e2 * eta) * (ci2 ^ 16) + (-0.357059e6 / 0.3240e4 + 0.187e3 / 0.30e2 * eta ^ 6 - 0.5243e4 / 0.360e3 * eta ^ 5 - 0.43123e5 / 0.216e3 * eta ^ 4 - 0.323993e6 / 0.810e3 * eta ^ 3 - 0.217961e6 / 0.810e3 * eta ^ 2 - 0.194339e6 / 0.1080e4 * eta) * (ci2 ^ 14) + (0.56273e5 / 0.540e3 - 0.47e2 / 0.10e2 * eta ^ 6 + 0.393e3 / 0.20e2 * eta ^ 5 + 0.115139e6 / 0.540e3 * eta ^ 4 + 0.336827e6 / 0.810e3 * eta ^ 3 + 0.213439e6 / 0.810e3 * eta ^ 2 + 0.29141e5 / 0.180e3 * eta) * (ci2 ^ 12) + (-0.940037e6 / 0.16200e5 + 0.356e3 / 0.225e3 * eta ^ 6 - 0.30823e5 / 0.1800e4 * eta ^ 5 - 0.780707e6 / 0.5400e4 * eta ^ 4 - 0.2189969e7 / 0.8100e4 * eta ^ 3 - 0.420511e6 / 0.2700e4 * eta ^ 2 - 0.442157e6 / 0.5400e4 * eta) * (ci2 ^ 10) + (0.312487e6 / 0.16200e5 + eta ^ 6 / 0.450e3 + 0.1843e4 / 0.200e3 * eta ^ 5 + 0.114229e6 / 0.1800e4 * eta ^ 4 + 0.229061e6 / 0.2025e4 * eta ^ 3 + 0.115793e6 / 0.2025e4 * eta ^ 2 + 0.24107e5 / 0.1080e4 * eta) * (ci2 ^ 8) + (-0.594109e6 / 0.162000e6 - 0.2171e4 / 0.13500e5 * eta ^ 6 - 0.158417e6 / 0.54000e5 * eta ^ 5 - 0.63629e5 / 0.3600e4 * eta ^ 4 - 0.2442763e7 / 0.81000e5 * eta ^ 3 - 0.349297e6 / 0.27000e5 * eta ^ 2 - 0.131149e6 / 0.54000e5 * eta) * (ci2 ^ 6) + (0.27671e5 / 0.81000e5 + 0.581e3 / 0.13500e5 * eta ^ 6 + 0.1543e4 / 0.3000e4 * eta ^ 5 + 0.26543e5 / 0.9000e4 * eta ^ 4 + 0.197939e6 / 0.40500e5 * eta ^ 3 + 0.11629e5 / 0.6750e4 * eta ^ 2 - 0.5593e4 / 0.27000e5 * eta) * (ci2 ^ 4) + (-0.251e3 / 0.40500e5 - 0.49e2 / 0.13500e5 * eta ^ 6 - 0.21e2 / 0.500e3 * eta ^ 5 - 0.8731e4 / 0.20250e5 * eta ^ 3 - 0.3523e4 / 0.13500e5 * eta ^ 4 - 0.973e3 / 0.8100e4 * eta ^ 2 + 0.1009e4 / 0.13500e5 * eta) * (ci2 ^ 2) + 0.49e2 / 0.54000e5 * (0.1e1 + eta) * (eta ^ 4 + 0.62e2 / 0.7e1 * eta ^ 3 + 0.400e3 / 0.49e2 * eta ^ 2 - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3))) * J ^ 2 * (eta - 0.1e1) / a ^ 5 / eta ^ 8 / (0.1e1 + eta) ^ 3 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) 0 -0.84375e5 / 0.4e1 * (eta - 0.1e1) * R__e ^ 4 * sqrt((-ci2 ^ 2 + 1)) * J ^ 2 * ((0.1e1 + eta) * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((-0.4895e4 / 0.324e3 + eta ^ 6 - 0.23e2 / 0.12e2 * eta ^ 5 - 0.2861e4 / 0.108e3 * eta ^ 4 - 0.8515e4 / 0.162e3 * eta ^ 3 - 0.5839e4 / 0.162e3 * eta ^ 2 - 0.2735e4 / 0.108e3 * eta) * (ci2 ^ 22) + (0.55313e5 / 0.432e3 * eta ^ 4 + 0.166303e6 / 0.648e3 * eta ^ 3 + 0.114511e6 / 0.648e3 * eta ^ 2 + 0.95675e5 / 0.1296e4 - 0.19e2 / 0.4e1 * eta ^ 6 + 0.419e3 / 0.48e2 * eta ^ 5 + 0.53339e5 / 0.432e3 * eta) * (ci2 ^ 20) + (-0.119417e6 / 0.432e3 * eta ^ 4 - 0.450029e6 / 0.810e3 * eta ^ 3 - 0.307673e6 / 0.810e3 * eta ^ 2 + 0.577e3 / 0.60e2 * eta ^ 6 - 0.13673e5 / 0.720e3 * eta ^ 5 - 0.563629e6 / 0.2160e4 * eta - 0.1020109e7 / 0.6480e4) * (ci2 ^ 18) + (0.1520069e7 / 0.4320e4 * eta ^ 4 + 0.379481e6 / 0.540e3 * eta ^ 3 + 0.762079e6 / 0.1620e4 * eta ^ 2 + 0.2491393e7 / 0.12960e5 - 0.323e3 / 0.30e2 * eta ^ 6 + 0.37933e5 / 0.1440e4 * eta ^ 5 + 0.270341e6 / 0.864e3 * eta) * (ci2 ^ 16) + (-0.26377e5 / 0.90e2 * eta ^ 4 - 0.2332121e7 / 0.4050e4 * eta ^ 3 - 0.18557e5 / 0.50e2 * eta ^ 2 + 0.1079e4 / 0.150e3 * eta ^ 6 - 0.5732e4 / 0.225e3 * eta ^ 5 - 0.315727e6 / 0.1350e4 * eta - 0.600577e6 / 0.4050e4) * (ci2 ^ 14) + (0.180569e6 / 0.1080e4 * eta ^ 4 + 0.10369241e8 / 0.32400e5 * eta ^ 3 + 0.2103191e7 / 0.10800e5 * eta ^ 2 - 0.2549e4 / 0.900e3 * eta ^ 6 + 0.209e3 / 0.12e2 * eta ^ 5 + 0.1214929e7 / 0.10800e5 * eta + 0.487109e6 / 0.6480e4) * (ci2 ^ 12) + (-0.2385559e7 / 0.36000e5 * eta ^ 4 - 0.19859491e8 / 0.162000e6 * eta ^ 3 - 0.11153027e8 / 0.162000e6 * eta ^ 2 + 0.14957e5 / 0.27000e5 * eta ^ 6 - 0.894007e6 / 0.108000e6 * eta ^ 5 - 0.414127e6 / 0.12000e5 * eta - 0.302629e6 / 0.12000e5) * (ci2 ^ 10) + (0.114541e6 / 0.43200e5 * eta ^ 5 + 0.1301177e7 / 0.72000e5 * eta ^ 4 + 0.3472523e7 / 0.108000e6 * eta ^ 3 + 0.5260967e7 / 0.324000e6 * eta ^ 2 + 0.1370057e7 / 0.216000e6 * eta + 0.229e3 / 0.27000e5 * eta ^ 6 + 0.3552953e7 / 0.648000e6) * (ci2 ^ 8) + (-0.147077e6 / 0.270000e6 * eta ^ 5 - 0.35359e5 / 0.10800e5 * eta ^ 4 - 0.2268143e7 / 0.405000e6 * eta ^ 3 - 0.999241e6 / 0.405000e6 * eta ^ 2 - 0.50443e5 / 0.90000e5 * eta - 0.196363e6 / 0.270000e6 - 0.107e3 / 0.3750e4 * eta ^ 6) * (ci2 ^ 6) + (0.70757e5 / 0.1080000e7 * eta ^ 5 + 0.395239e6 / 0.1080000e7 * eta ^ 4 + 0.981739e6 / 0.1620000e7 * eta ^ 3 + 0.749e3 / 0.135000e6 * eta ^ 6 + 0.121223e6 / 0.540000e6 * eta ^ 2 - 0.6503e4 / 0.1080000e7 * eta + 0.164281e6 / 0.3240000e7) * (ci2 ^ 4) + (-0.2023e4 / 0.540000e6 * eta ^ 5 - 0.11677e5 / 0.540000e6 * eta ^ 4 - 0.28669e5 / 0.810000e6 * eta ^ 3 - 0.49e2 / 0.135000e6 * eta ^ 6 - 0.553e3 / 0.540000e6 - 0.1693e4 / 0.162000e6 * eta ^ 2 + 0.887e3 / 0.180000e6 * eta) * (ci2 ^ 2) + 0.49e2 / 0.1080000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.62e2 / 0.7e1 * eta ^ 3 + 0.400e3 / 0.49e2 * eta ^ 2 - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 - 1) * sin((-h + 2 * g)) - (eta - 0.1e1) * ((ci2 + 1) ^ 2) * (ci2 ^ 2) * ((0.1045e4 / 0.108e3 + eta ^ 6 + 0.323e3 / 0.36e2 * eta ^ 5 + 0.437e3 / 0.12e2 * eta ^ 4 + 0.1469e4 / 0.18e2 * eta ^ 3 + 0.1643e4 / 0.18e2 * eta ^ 2 + 0.5225e4 / 0.108e3 * eta) * (ci2 ^ 22) + (-0.13325e5 / 0.72e2 * eta ^ 4 - 0.5005e4 / 0.12e2 * eta ^ 3 - 0.5617e4 / 0.12e2 * eta ^ 2 - 0.10735e5 / 0.216e3 - 0.5e1 * eta ^ 6 - 0.3257e4 / 0.72e2 * eta ^ 5 - 0.53675e5 / 0.216e3 * eta) * (ci2 ^ 20) + (0.1079611e7 / 0.2592e4 * eta ^ 4 + 0.15115e5 / 0.16e2 * eta ^ 3 + 0.153265e6 / 0.144e3 * eta ^ 2 + 0.265e3 / 0.24e2 * eta ^ 6 + 0.145259e6 / 0.1440e4 * eta ^ 5 + 0.489089e6 / 0.864e3 * eta + 0.489089e6 / 0.4320e4) * (ci2 ^ 18) + (-0.2364017e7 / 0.4320e4 * eta ^ 4 - 0.8101051e7 / 0.6480e4 * eta ^ 3 - 0.1527961e7 / 0.1080e4 * eta ^ 2 - 0.1954483e7 / 0.12960e5 - 0.227e3 / 0.16e2 * eta ^ 6 - 0.188803e6 / 0.1440e4 * eta ^ 5 - 0.1954483e7 / 0.2592e4 * eta) * (ci2 ^ 16) + (0.6034769e7 / 0.12960e5 * eta ^ 4 + 0.6951041e7 / 0.6480e4 * eta ^ 3 + 0.658891e6 / 0.540e3 * eta ^ 2 + 0.2821e4 / 0.240e3 * eta ^ 6 + 0.158617e6 / 0.1440e4 * eta ^ 5 + 0.1689737e7 / 0.2592e4 * eta + 0.1689737e7 / 0.12960e5) * (ci2 ^ 14) + (-0.17432911e8 / 0.64800e5 * eta ^ 4 - 0.751069e6 / 0.1200e4 * eta ^ 3 - 0.515687e6 / 0.720e3 * eta ^ 2 - 0.5911e4 / 0.900e3 * eta ^ 6 - 0.451067e6 / 0.7200e4 * eta ^ 5 - 0.331565e6 / 0.864e3 * eta - 0.66313e5 / 0.864e3) * (ci2 ^ 12) + (0.46435207e8 / 0.432000e6 * eta ^ 4 + 0.6561293e7 / 0.25920e5 * eta ^ 3 + 0.63025633e8 / 0.216000e6 * eta ^ 2 + 0.271097e6 / 0.108000e6 * eta ^ 6 + 0.392457e6 / 0.16000e5 * eta ^ 5 + 0.1626449e7 / 0.10368e5 * eta + 0.1626449e7 / 0.51840e5) * (ci2 ^ 10) + (-0.315631e6 / 0.48000e5 * eta ^ 5 - 0.7680697e7 / 0.259200e6 * eta ^ 4 - 0.45942037e8 / 0.648000e6 * eta ^ 3 - 0.8906749e7 / 0.108000e6 * eta ^ 2 - 0.11540749e8 / 0.259200e6 * eta - 0.140207e6 / 0.216000e6 * eta ^ 6 - 0.11540749e8 / 0.1296000e7) * (ci2 ^ 8) + (0.843923e6 / 0.720000e6 * eta ^ 5 + 0.35683163e8 / 0.6480000e7 * eta ^ 4 + 0.43630387e8 / 0.3240000e7 * eta ^ 3 + 0.2139859e7 / 0.135000e6 * eta ^ 2 + 0.2229959e7 / 0.259200e6 * eta + 0.2229959e7 / 0.1296000e7 + 0.117619e6 / 0.1080000e7 * eta ^ 6) * (ci2 ^ 6) + (-0.1249e4 / 0.9600e4 * eta ^ 5 - 0.6281e4 / 0.9600e4 * eta ^ 4 - 0.118927e6 / 0.72000e5 * eta ^ 3 - 0.2317e4 / 0.216000e6 * eta ^ 6 - 0.23707e5 / 0.12000e5 * eta ^ 2 - 0.691e3 / 0.640e3 * eta - 0.691e3 / 0.3200e4) * (ci2 ^ 4) + (0.28153e5 / 0.3600000e7 * eta ^ 5 + 0.288497e6 / 0.6480000e7 * eta ^ 4 + 0.1911509e7 / 0.16200000e8 * eta ^ 3 + 0.637e3 / 0.1350000e7 * eta ^ 6 + 0.515489e6 / 0.32400000e8 + 0.778987e6 / 0.5400000e7 * eta ^ 2 + 0.515489e6 / 0.6480000e7 * eta) * (ci2 ^ 2) - 0.637e3 / 0.3600000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.4084e4 / 0.637e3 * eta ^ 3 + 0.28234e5 / 0.1911e4 * eta ^ 2 + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ((ci2 - 1) ^ 2) * sin((-h + 4 * g)) / 0.2e1 + ((-0.4895e4 / 0.324e3 + eta ^ 6 - 0.23e2 / 0.12e2 * eta ^ 5 - 0.2861e4 / 0.108e3 * eta ^ 4 - 0.8515e4 / 0.162e3 * eta ^ 3 - 0.5839e4 / 0.162e3 * eta ^ 2 - 0.2735e4 / 0.108e3 * eta) * (ci2 ^ 24) + (0.20345e5 / 0.144e3 * eta ^ 4 + 0.61111e5 / 0.216e3 * eta ^ 3 + 0.14021e5 / 0.72e2 * eta ^ 2 - 0.21e2 / 0.4e1 * eta ^ 6 + 0.155e3 / 0.16e2 * eta ^ 5 + 0.19603e5 / 0.144e3 * eta + 0.35155e5 / 0.432e3) * (ci2 ^ 22) + (-0.36371e5 / 0.108e3 * eta ^ 4 - 0.2190821e7 / 0.3240e4 * eta ^ 3 - 0.499799e6 / 0.1080e4 * eta ^ 2 - 0.622417e6 / 0.3240e4 + 0.178e3 / 0.15e2 * eta ^ 6 - 0.1043e4 / 0.45e2 * eta ^ 5 - 0.344497e6 / 0.1080e4 * eta) * (ci2 ^ 20) + (0.135755e6 / 0.288e3 * eta ^ 4 + 0.1528163e7 / 0.1620e4 * eta ^ 3 + 0.206179e6 / 0.324e3 * eta ^ 2 - 0.91e2 / 0.6e1 * eta ^ 6 + 0.49357e5 / 0.1440e4 * eta ^ 5 + 0.370277e6 / 0.864e3 * eta + 0.3388513e7 / 0.12960e5) * (ci2 ^ 18) + (-0.205259e6 / 0.480e3 * eta ^ 4 - 0.2291509e7 / 0.2700e4 * eta ^ 3 - 0.4536899e7 / 0.8100e4 * eta ^ 2 - 0.14709827e8 / 0.64800e5 + 0.907e3 / 0.75e2 * eta ^ 6 - 0.244759e6 / 0.7200e4 * eta ^ 5 - 0.7890347e7 / 0.21600e5 * eta) * (ci2 ^ 16) + (0.1411609e7 / 0.5400e4 * eta ^ 4 + 0.16613759e8 / 0.32400e5 * eta ^ 3 + 0.10670819e8 / 0.32400e5 * eta ^ 2 - 0.1127e4 / 0.180e3 * eta ^ 6 + 0.5186e4 / 0.225e3 * eta ^ 5 + 0.2230019e7 / 0.10800e5 * eta + 0.170195e6 / 0.1296e4) * (ci2 ^ 14) + (-0.11676857e8 / 0.108000e6 * eta ^ 4 - 0.5651171e7 / 0.27000e5 * eta ^ 3 - 0.10592531e8 / 0.81000e5 * eta ^ 2 + 0.57407e5 / 0.27000e5 * eta ^ 6 - 0.1140487e7 / 0.108000e6 * eta ^ 5 - 0.8501053e7 / 0.108000e6 * eta - 0.16624813e8 / 0.324000e6) * (ci2 ^ 12) + (0.6331447e7 / 0.216000e6 * eta ^ 4 + 0.6055423e7 / 0.108000e6 * eta ^ 3 + 0.11161667e8 / 0.324000e6 * eta ^ 2 - 0.4219e4 / 0.9000e4 * eta ^ 6 + 0.75421e5 / 0.24000e5 * eta ^ 5 + 0.4382717e7 / 0.216000e6 * eta + 0.8696813e7 / 0.648000e6) * (ci2 ^ 10) + (-0.594703e6 / 0.1080000e7 * eta ^ 5 - 0.1012577e7 / 0.216000e6 * eta ^ 4 - 0.14449127e8 / 0.1620000e7 * eta ^ 3 - 0.9163969e7 / 0.1620000e7 * eta ^ 2 - 0.1281757e7 / 0.360000e6 * eta + 0.977e3 / 0.15000e5 * eta ^ 6 - 0.2458957e7 / 0.1080000e7) * (ci2 ^ 8) + (0.13937e5 / 0.360000e6 * eta ^ 5 + 0.288769e6 / 0.1080000e7 * eta ^ 4 + 0.172153e6 / 0.324000e6 * eta ^ 3 + 0.257357e6 / 0.540000e6 * eta ^ 2 + 0.97747e5 / 0.216000e6 * eta + 0.768959e6 / 0.3240000e7 - 0.2e1 / 0.375e3 * eta ^ 6) * (ci2 ^ 6) + (0.29e2 / 0.8000e4 * eta ^ 5 + 0.45673e5 / 0.1080000e7 * eta ^ 4 + 0.38143e5 / 0.540000e6 * eta ^ 3 + 0.7e1 / 0.33750e5 * eta ^ 6 - 0.1673e4 / 0.1620000e7 * eta ^ 2 - 0.53657e5 / 0.1080000e7 * eta - 0.9637e4 / 0.648000e6) * (ci2 ^ 4) - 0.931e3 / 0.1080000e7 * (eta ^ 4 + 0.62e2 / 0.7e1 * eta ^ 3 + 0.400e3 / 0.49e2 * eta ^ 2 - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (0.1e1 + eta) * (ci2 ^ 2) + 0.49e2 / 0.1080000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.62e2 / 0.7e1 * eta ^ 3 + 0.400e3 / 0.49e2 * eta ^ 2 - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (0.1e1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((h + 2 * g)) - sin((h + 4 * g)) * ((0.1045e4 / 0.108e3 + eta ^ 6 + 0.323e3 / 0.36e2 * eta ^ 5 + 0.437e3 / 0.12e2 * eta ^ 4 + 0.1469e4 / 0.18e2 * eta ^ 3 + 0.1643e4 / 0.18e2 * eta ^ 2 + 0.5225e4 / 0.108e3 * eta) * (ci2 ^ 24) + (-0.13325e5 / 0.72e2 * eta ^ 4 - 0.5005e4 / 0.12e2 * eta ^ 3 - 0.5617e4 / 0.12e2 * eta ^ 2 - 0.10735e5 / 0.216e3 - 0.5e1 * eta ^ 6 - 0.3257e4 / 0.72e2 * eta ^ 5 - 0.53675e5 / 0.216e3 * eta) * (ci2 ^ 22) + (0.1077031e7 / 0.2592e4 * eta ^ 4 + 0.406805e6 / 0.432e3 * eta ^ 3 + 0.458111e6 / 0.432e3 * eta ^ 2 + 0.487189e6 / 0.4320e4 + 0.265e3 / 0.24e2 * eta ^ 6 + 0.145079e6 / 0.1440e4 * eta ^ 5 + 0.487189e6 / 0.864e3 * eta) * (ci2 ^ 20) + (-0.1753639e7 / 0.3240e4 * eta ^ 4 - 0.1997929e7 / 0.1620e4 * eta ^ 3 - 0.3009907e7 / 0.2160e4 * eta ^ 2 - 0.679e3 / 0.48e2 * eta ^ 6 - 0.7811e4 / 0.60e2 * eta ^ 5 - 0.60113e5 / 0.81e2 * eta - 0.60113e5 / 0.405e3) * (ci2 ^ 18) + (0.2923043e7 / 0.6480e4 * eta ^ 4 + 0.3346759e7 / 0.3240e4 * eta ^ 3 + 0.210719e6 / 0.180e3 * eta ^ 2 + 0.809179e6 / 0.6480e4 + 0.1393e4 / 0.120e3 * eta ^ 6 + 0.77539e5 / 0.720e3 * eta ^ 5 + 0.809179e6 / 0.1296e4 * eta) * (ci2 ^ 16) + (-0.1010569e7 / 0.4050e4 * eta ^ 4 - 0.387019e6 / 0.675e3 * eta ^ 3 - 0.1406549e7 / 0.2160e4 * eta ^ 2 - 0.22871e5 / 0.3600e4 * eta ^ 6 - 0.11853e5 / 0.200e3 * eta ^ 5 - 0.25031e5 / 0.72e2 * eta - 0.25031e5 / 0.360e3) * (ci2 ^ 14) + (0.118341721e9 / 0.1296000e7 * eta ^ 4 + 0.5432689e7 / 0.25920e5 * eta ^ 3 + 0.51388733e8 / 0.216000e6 * eta ^ 2 + 0.252497e6 / 0.108000e6 * eta ^ 6 + 0.3130213e7 / 0.144000e6 * eta ^ 5 + 0.1316581e7 / 0.10368e5 * eta + 0.1316581e7 / 0.51840e5) * (ci2 ^ 12) + (-0.6757567e7 / 0.324000e6 * eta ^ 4 - 0.7626833e7 / 0.162000e6 * eta ^ 3 - 0.423391e6 / 0.8000e4 * eta ^ 2 - 0.122669e6 / 0.216000e6 * eta ^ 6 - 0.5744e4 / 0.1125e4 * eta ^ 5 - 0.911113e6 / 0.32400e5 * eta - 0.911113e6 / 0.162000e6) * (ci2 ^ 10) + (0.717437e6 / 0.1080000e7 * eta ^ 5 + 0.7522519e7 / 0.3240000e7 * eta ^ 4 + 0.7613551e7 / 0.1620000e7 * eta ^ 3 + 0.221743e6 / 0.45000e5 * eta ^ 2 + 0.13115e5 / 0.5184e4 * eta + 0.46667e5 / 0.540000e6 * eta ^ 6 + 0.2623e4 / 0.5184e4) * (ci2 ^ 8) + (-0.7877e4 / 0.540000e6 * eta ^ 5 + 0.189101e6 / 0.1620000e7 * eta ^ 4 + 0.408949e6 / 0.810000e6 * eta ^ 3 + 0.65243e5 / 0.90000e5 * eta ^ 2 + 0.5497e4 / 0.12960e5 * eta + 0.5497e4 / 0.64800e5 - 0.991e3 / 0.135000e6 * eta ^ 6) * (ci2 ^ 6) + (-0.12277e5 / 0.1350000e7 * eta ^ 5 - 0.122543e6 / 0.1620000e7 * eta ^ 4 - 0.33427e5 / 0.150000e6 * eta ^ 3 + 0.1393e4 / 0.5400000e7 * eta ^ 6 - 0.511541e6 / 0.1800000e7 * eta ^ 2 - 0.7169e4 / 0.45000e5 * eta - 0.7169e4 / 0.225000e6) * (ci2 ^ 4) + 0.7007e4 / 0.5400000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.4084e4 / 0.637e3 * eta ^ 3 + 0.28234e5 / 0.1911e4 * eta ^ 2 + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4) * (ci2 ^ 2) - 0.637e3 / 0.10800000e8 * (0.1e1 + eta) * (eta ^ 4 + 0.4084e4 / 0.637e3 * eta ^ 3 + 0.28234e5 / 0.1911e4 * eta ^ 2 + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 0.1e1) * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) / 0.2e1) * ci2 / eta ^ 8 / a ^ 4 / (0.1e1 + eta) ^ 3 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) 0.84375e5 / 0.4e1 * (-(ci2 - 1) * ((-0.4895e4 / 0.324e3 + eta ^ 6 - 0.23e2 / 0.12e2 * eta ^ 5 - 0.2861e4 / 0.108e3 * eta ^ 4 - 0.8515e4 / 0.162e3 * eta ^ 3 - 0.5839e4 / 0.162e3 * eta ^ 2 - 0.2735e4 / 0.108e3 * eta) * (ci2 ^ 22) + (0.55313e5 / 0.432e3 * eta ^ 4 + 0.166303e6 / 0.648e3 * eta ^ 3 + 0.114511e6 / 0.648e3 * eta ^ 2 + 0.95675e5 / 0.1296e4 - 0.19e2 / 0.4e1 * eta ^ 6 + 0.419e3 / 0.48e2 * eta ^ 5 + 0.53339e5 / 0.432e3 * eta) * (ci2 ^ 20) + (-0.119417e6 / 0.432e3 * eta ^ 4 - 0.450029e6 / 0.810e3 * eta ^ 3 - 0.307673e6 / 0.810e3 * eta ^ 2 + 0.577e3 / 0.60e2 * eta ^ 6 - 0.13673e5 / 0.720e3 * eta ^ 5 - 0.563629e6 / 0.2160e4 * eta - 0.1020109e7 / 0.6480e4) * (ci2 ^ 18) + (0.1520069e7 / 0.4320e4 * eta ^ 4 + 0.379481e6 / 0.540e3 * eta ^ 3 + 0.762079e6 / 0.1620e4 * eta ^ 2 + 0.2491393e7 / 0.12960e5 - 0.323e3 / 0.30e2 * eta ^ 6 + 0.37933e5 / 0.1440e4 * eta ^ 5 + 0.270341e6 / 0.864e3 * eta) * (ci2 ^ 16) + (-0.26377e5 / 0.90e2 * eta ^ 4 - 0.2332121e7 / 0.4050e4 * eta ^ 3 - 0.18557e5 / 0.50e2 * eta ^ 2 + 0.1079e4 / 0.150e3 * eta ^ 6 - 0.5732e4 / 0.225e3 * eta ^ 5 - 0.315727e6 / 0.1350e4 * eta - 0.600577e6 / 0.4050e4) * (ci2 ^ 14) + (0.180569e6 / 0.1080e4 * eta ^ 4 + 0.10369241e8 / 0.32400e5 * eta ^ 3 + 0.2103191e7 / 0.10800e5 * eta ^ 2 - 0.2549e4 / 0.900e3 * eta ^ 6 + 0.209e3 / 0.12e2 * eta ^ 5 + 0.1214929e7 / 0.10800e5 * eta + 0.487109e6 / 0.6480e4) * (ci2 ^ 12) + (-0.2385559e7 / 0.36000e5 * eta ^ 4 - 0.19859491e8 / 0.162000e6 * eta ^ 3 - 0.11153027e8 / 0.162000e6 * eta ^ 2 + 0.14957e5 / 0.27000e5 * eta ^ 6 - 0.894007e6 / 0.108000e6 * eta ^ 5 - 0.414127e6 / 0.12000e5 * eta - 0.302629e6 / 0.12000e5) * (ci2 ^ 10) + (0.114541e6 / 0.43200e5 * eta ^ 5 + 0.1301177e7 / 0.72000e5 * eta ^ 4 + 0.3472523e7 / 0.108000e6 * eta ^ 3 + 0.5260967e7 / 0.324000e6 * eta ^ 2 + 0.1370057e7 / 0.216000e6 * eta + 0.229e3 / 0.27000e5 * eta ^ 6 + 0.3552953e7 / 0.648000e6) * (ci2 ^ 8) + (-0.147077e6 / 0.270000e6 * eta ^ 5 - 0.35359e5 / 0.10800e5 * eta ^ 4 - 0.2268143e7 / 0.405000e6 * eta ^ 3 - 0.999241e6 / 0.405000e6 * eta ^ 2 - 0.50443e5 / 0.90000e5 * eta - 0.196363e6 / 0.270000e6 - 0.107e3 / 0.3750e4 * eta ^ 6) * (ci2 ^ 6) + (0.70757e5 / 0.1080000e7 * eta ^ 5 + 0.395239e6 / 0.1080000e7 * eta ^ 4 + 0.981739e6 / 0.1620000e7 * eta ^ 3 + 0.749e3 / 0.135000e6 * eta ^ 6 + 0.121223e6 / 0.540000e6 * eta ^ 2 - 0.6503e4 / 0.1080000e7 * eta + 0.164281e6 / 0.3240000e7) * (ci2 ^ 4) + (-0.2023e4 / 0.540000e6 * eta ^ 5 - 0.11677e5 / 0.540000e6 * eta ^ 4 - 0.28669e5 / 0.810000e6 * eta ^ 3 - 0.49e2 / 0.135000e6 * eta ^ 6 - 0.553e3 / 0.540000e6 - 0.1693e4 / 0.162000e6 * eta ^ 2 + 0.887e3 / 0.180000e6 * eta) * (ci2 ^ 2) + 0.49e2 / 0.1080000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.62e2 / 0.7e1 * eta ^ 3 + 0.400e3 / 0.49e2 * eta ^ 2 - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (0.1e1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (ci2 + 1) * cos((-h + 2 * g)) + ((ci2 - 1) ^ 2) * (eta - 0.1e1) * ((0.1045e4 / 0.108e3 + eta ^ 6 + 0.323e3 / 0.36e2 * eta ^ 5 + 0.437e3 / 0.12e2 * eta ^ 4 + 0.1469e4 / 0.18e2 * eta ^ 3 + 0.1643e4 / 0.18e2 * eta ^ 2 + 0.5225e4 / 0.108e3 * eta) * (ci2 ^ 22) + (-0.13325e5 / 0.72e2 * eta ^ 4 - 0.5005e4 / 0.12e2 * eta ^ 3 - 0.5617e4 / 0.12e2 * eta ^ 2 - 0.10735e5 / 0.216e3 - 0.5e1 * eta ^ 6 - 0.3257e4 / 0.72e2 * eta ^ 5 - 0.53675e5 / 0.216e3 * eta) * (ci2 ^ 20) + (0.1079611e7 / 0.2592e4 * eta ^ 4 + 0.15115e5 / 0.16e2 * eta ^ 3 + 0.153265e6 / 0.144e3 * eta ^ 2 + 0.265e3 / 0.24e2 * eta ^ 6 + 0.145259e6 / 0.1440e4 * eta ^ 5 + 0.489089e6 / 0.864e3 * eta + 0.489089e6 / 0.4320e4) * (ci2 ^ 18) + (-0.2364017e7 / 0.4320e4 * eta ^ 4 - 0.8101051e7 / 0.6480e4 * eta ^ 3 - 0.1527961e7 / 0.1080e4 * eta ^ 2 - 0.1954483e7 / 0.12960e5 - 0.227e3 / 0.16e2 * eta ^ 6 - 0.188803e6 / 0.1440e4 * eta ^ 5 - 0.1954483e7 / 0.2592e4 * eta) * (ci2 ^ 16) + (0.6034769e7 / 0.12960e5 * eta ^ 4 + 0.6951041e7 / 0.6480e4 * eta ^ 3 + 0.658891e6 / 0.540e3 * eta ^ 2 + 0.2821e4 / 0.240e3 * eta ^ 6 + 0.158617e6 / 0.1440e4 * eta ^ 5 + 0.1689737e7 / 0.2592e4 * eta + 0.1689737e7 / 0.12960e5) * (ci2 ^ 14) + (-0.17432911e8 / 0.64800e5 * eta ^ 4 - 0.751069e6 / 0.1200e4 * eta ^ 3 - 0.515687e6 / 0.720e3 * eta ^ 2 - 0.5911e4 / 0.900e3 * eta ^ 6 - 0.451067e6 / 0.7200e4 * eta ^ 5 - 0.331565e6 / 0.864e3 * eta - 0.66313e5 / 0.864e3) * (ci2 ^ 12) + (0.46435207e8 / 0.432000e6 * eta ^ 4 + 0.6561293e7 / 0.25920e5 * eta ^ 3 + 0.63025633e8 / 0.216000e6 * eta ^ 2 + 0.271097e6 / 0.108000e6 * eta ^ 6 + 0.392457e6 / 0.16000e5 * eta ^ 5 + 0.1626449e7 / 0.10368e5 * eta + 0.1626449e7 / 0.51840e5) * (ci2 ^ 10) + (-0.315631e6 / 0.48000e5 * eta ^ 5 - 0.7680697e7 / 0.259200e6 * eta ^ 4 - 0.45942037e8 / 0.648000e6 * eta ^ 3 - 0.8906749e7 / 0.108000e6 * eta ^ 2 - 0.11540749e8 / 0.259200e6 * eta - 0.140207e6 / 0.216000e6 * eta ^ 6 - 0.11540749e8 / 0.1296000e7) * (ci2 ^ 8) + (0.843923e6 / 0.720000e6 * eta ^ 5 + 0.35683163e8 / 0.6480000e7 * eta ^ 4 + 0.43630387e8 / 0.3240000e7 * eta ^ 3 + 0.2139859e7 / 0.135000e6 * eta ^ 2 + 0.2229959e7 / 0.259200e6 * eta + 0.2229959e7 / 0.1296000e7 + 0.117619e6 / 0.1080000e7 * eta ^ 6) * (ci2 ^ 6) + (-0.1249e4 / 0.9600e4 * eta ^ 5 - 0.6281e4 / 0.9600e4 * eta ^ 4 - 0.118927e6 / 0.72000e5 * eta ^ 3 - 0.2317e4 / 0.216000e6 * eta ^ 6 - 0.23707e5 / 0.12000e5 * eta ^ 2 - 0.691e3 / 0.640e3 * eta - 0.691e3 / 0.3200e4) * (ci2 ^ 4) + (0.28153e5 / 0.3600000e7 * eta ^ 5 + 0.288497e6 / 0.6480000e7 * eta ^ 4 + 0.1911509e7 / 0.16200000e8 * eta ^ 3 + 0.637e3 / 0.1350000e7 * eta ^ 6 + 0.515489e6 / 0.32400000e8 + 0.778987e6 / 0.5400000e7 * eta ^ 2 + 0.515489e6 / 0.6480000e7 * eta) * (ci2 ^ 2) - 0.637e3 / 0.3600000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.4084e4 / 0.637e3 * eta ^ 3 + 0.28234e5 / 0.1911e4 * eta ^ 2 + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 ^ 2) * ((ci2 + 1) ^ 2) * cos((-h + 4 * g)) / 0.2e1 + (0.1e1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((-0.4895e4 / 0.324e3 + eta ^ 6 - 0.23e2 / 0.12e2 * eta ^ 5 - 0.2861e4 / 0.108e3 * eta ^ 4 - 0.8515e4 / 0.162e3 * eta ^ 3 - 0.5839e4 / 0.162e3 * eta ^ 2 - 0.2735e4 / 0.108e3 * eta) * (ci2 ^ 24) + (0.20345e5 / 0.144e3 * eta ^ 4 + 0.61111e5 / 0.216e3 * eta ^ 3 + 0.14021e5 / 0.72e2 * eta ^ 2 - 0.21e2 / 0.4e1 * eta ^ 6 + 0.155e3 / 0.16e2 * eta ^ 5 + 0.19603e5 / 0.144e3 * eta + 0.35155e5 / 0.432e3) * (ci2 ^ 22) + (-0.36371e5 / 0.108e3 * eta ^ 4 - 0.2190821e7 / 0.3240e4 * eta ^ 3 - 0.499799e6 / 0.1080e4 * eta ^ 2 - 0.622417e6 / 0.3240e4 + 0.178e3 / 0.15e2 * eta ^ 6 - 0.1043e4 / 0.45e2 * eta ^ 5 - 0.344497e6 / 0.1080e4 * eta) * (ci2 ^ 20) + (0.135755e6 / 0.288e3 * eta ^ 4 + 0.1528163e7 / 0.1620e4 * eta ^ 3 + 0.206179e6 / 0.324e3 * eta ^ 2 - 0.91e2 / 0.6e1 * eta ^ 6 + 0.49357e5 / 0.1440e4 * eta ^ 5 + 0.370277e6 / 0.864e3 * eta + 0.3388513e7 / 0.12960e5) * (ci2 ^ 18) + (-0.205259e6 / 0.480e3 * eta ^ 4 - 0.2291509e7 / 0.2700e4 * eta ^ 3 - 0.4536899e7 / 0.8100e4 * eta ^ 2 - 0.14709827e8 / 0.64800e5 + 0.907e3 / 0.75e2 * eta ^ 6 - 0.244759e6 / 0.7200e4 * eta ^ 5 - 0.7890347e7 / 0.21600e5 * eta) * (ci2 ^ 16) + (0.1411609e7 / 0.5400e4 * eta ^ 4 + 0.16613759e8 / 0.32400e5 * eta ^ 3 + 0.10670819e8 / 0.32400e5 * eta ^ 2 - 0.1127e4 / 0.180e3 * eta ^ 6 + 0.5186e4 / 0.225e3 * eta ^ 5 + 0.2230019e7 / 0.10800e5 * eta + 0.170195e6 / 0.1296e4) * (ci2 ^ 14) + (-0.11676857e8 / 0.108000e6 * eta ^ 4 - 0.5651171e7 / 0.27000e5 * eta ^ 3 - 0.10592531e8 / 0.81000e5 * eta ^ 2 + 0.57407e5 / 0.27000e5 * eta ^ 6 - 0.1140487e7 / 0.108000e6 * eta ^ 5 - 0.8501053e7 / 0.108000e6 * eta - 0.16624813e8 / 0.324000e6) * (ci2 ^ 12) + (0.6331447e7 / 0.216000e6 * eta ^ 4 + 0.6055423e7 / 0.108000e6 * eta ^ 3 + 0.11161667e8 / 0.324000e6 * eta ^ 2 - 0.4219e4 / 0.9000e4 * eta ^ 6 + 0.75421e5 / 0.24000e5 * eta ^ 5 + 0.4382717e7 / 0.216000e6 * eta + 0.8696813e7 / 0.648000e6) * (ci2 ^ 10) + (-0.594703e6 / 0.1080000e7 * eta ^ 5 - 0.1012577e7 / 0.216000e6 * eta ^ 4 - 0.14449127e8 / 0.1620000e7 * eta ^ 3 - 0.9163969e7 / 0.1620000e7 * eta ^ 2 - 0.1281757e7 / 0.360000e6 * eta + 0.977e3 / 0.15000e5 * eta ^ 6 - 0.2458957e7 / 0.1080000e7) * (ci2 ^ 8) + (0.13937e5 / 0.360000e6 * eta ^ 5 + 0.288769e6 / 0.1080000e7 * eta ^ 4 + 0.172153e6 / 0.324000e6 * eta ^ 3 + 0.257357e6 / 0.540000e6 * eta ^ 2 + 0.97747e5 / 0.216000e6 * eta + 0.768959e6 / 0.3240000e7 - 0.2e1 / 0.375e3 * eta ^ 6) * (ci2 ^ 6) + (0.29e2 / 0.8000e4 * eta ^ 5 + 0.45673e5 / 0.1080000e7 * eta ^ 4 + 0.38143e5 / 0.540000e6 * eta ^ 3 + 0.7e1 / 0.33750e5 * eta ^ 6 - 0.1673e4 / 0.1620000e7 * eta ^ 2 - 0.53657e5 / 0.1080000e7 * eta - 0.9637e4 / 0.648000e6) * (ci2 ^ 4) - 0.931e3 / 0.1080000e7 * (eta ^ 4 + 0.62e2 / 0.7e1 * eta ^ 3 + 0.400e3 / 0.49e2 * eta ^ 2 - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (0.1e1 + eta) * (ci2 ^ 2) + 0.49e2 / 0.1080000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.62e2 / 0.7e1 * eta ^ 3 + 0.400e3 / 0.49e2 * eta ^ 2 - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * cos((h + 2 * g)) - cos((h + 4 * g)) * (ci2 - 1) * (eta - 0.1e1) * ((0.1045e4 / 0.108e3 + eta ^ 6 + 0.323e3 / 0.36e2 * eta ^ 5 + 0.437e3 / 0.12e2 * eta ^ 4 + 0.1469e4 / 0.18e2 * eta ^ 3 + 0.1643e4 / 0.18e2 * eta ^ 2 + 0.5225e4 / 0.108e3 * eta) * (ci2 ^ 24) + (-0.13325e5 / 0.72e2 * eta ^ 4 - 0.5005e4 / 0.12e2 * eta ^ 3 - 0.5617e4 / 0.12e2 * eta ^ 2 - 0.10735e5 / 0.216e3 - 0.5e1 * eta ^ 6 - 0.3257e4 / 0.72e2 * eta ^ 5 - 0.53675e5 / 0.216e3 * eta) * (ci2 ^ 22) + (0.1077031e7 / 0.2592e4 * eta ^ 4 + 0.406805e6 / 0.432e3 * eta ^ 3 + 0.458111e6 / 0.432e3 * eta ^ 2 + 0.487189e6 / 0.4320e4 + 0.265e3 / 0.24e2 * eta ^ 6 + 0.145079e6 / 0.1440e4 * eta ^ 5 + 0.487189e6 / 0.864e3 * eta) * (ci2 ^ 20) + (-0.1753639e7 / 0.3240e4 * eta ^ 4 - 0.1997929e7 / 0.1620e4 * eta ^ 3 - 0.3009907e7 / 0.2160e4 * eta ^ 2 - 0.679e3 / 0.48e2 * eta ^ 6 - 0.7811e4 / 0.60e2 * eta ^ 5 - 0.60113e5 / 0.81e2 * eta - 0.60113e5 / 0.405e3) * (ci2 ^ 18) + (0.2923043e7 / 0.6480e4 * eta ^ 4 + 0.3346759e7 / 0.3240e4 * eta ^ 3 + 0.210719e6 / 0.180e3 * eta ^ 2 + 0.809179e6 / 0.6480e4 + 0.1393e4 / 0.120e3 * eta ^ 6 + 0.77539e5 / 0.720e3 * eta ^ 5 + 0.809179e6 / 0.1296e4 * eta) * (ci2 ^ 16) + (-0.1010569e7 / 0.4050e4 * eta ^ 4 - 0.387019e6 / 0.675e3 * eta ^ 3 - 0.1406549e7 / 0.2160e4 * eta ^ 2 - 0.22871e5 / 0.3600e4 * eta ^ 6 - 0.11853e5 / 0.200e3 * eta ^ 5 - 0.25031e5 / 0.72e2 * eta - 0.25031e5 / 0.360e3) * (ci2 ^ 14) + (0.118341721e9 / 0.1296000e7 * eta ^ 4 + 0.5432689e7 / 0.25920e5 * eta ^ 3 + 0.51388733e8 / 0.216000e6 * eta ^ 2 + 0.252497e6 / 0.108000e6 * eta ^ 6 + 0.3130213e7 / 0.144000e6 * eta ^ 5 + 0.1316581e7 / 0.10368e5 * eta + 0.1316581e7 / 0.51840e5) * (ci2 ^ 12) + (-0.6757567e7 / 0.324000e6 * eta ^ 4 - 0.7626833e7 / 0.162000e6 * eta ^ 3 - 0.423391e6 / 0.8000e4 * eta ^ 2 - 0.122669e6 / 0.216000e6 * eta ^ 6 - 0.5744e4 / 0.1125e4 * eta ^ 5 - 0.911113e6 / 0.32400e5 * eta - 0.911113e6 / 0.162000e6) * (ci2 ^ 10) + (0.717437e6 / 0.1080000e7 * eta ^ 5 + 0.7522519e7 / 0.3240000e7 * eta ^ 4 + 0.7613551e7 / 0.1620000e7 * eta ^ 3 + 0.221743e6 / 0.45000e5 * eta ^ 2 + 0.13115e5 / 0.5184e4 * eta + 0.46667e5 / 0.540000e6 * eta ^ 6 + 0.2623e4 / 0.5184e4) * (ci2 ^ 8) + (-0.7877e4 / 0.540000e6 * eta ^ 5 + 0.189101e6 / 0.1620000e7 * eta ^ 4 + 0.408949e6 / 0.810000e6 * eta ^ 3 + 0.65243e5 / 0.90000e5 * eta ^ 2 + 0.5497e4 / 0.12960e5 * eta + 0.5497e4 / 0.64800e5 - 0.991e3 / 0.135000e6 * eta ^ 6) * (ci2 ^ 6) + (-0.12277e5 / 0.1350000e7 * eta ^ 5 - 0.122543e6 / 0.1620000e7 * eta ^ 4 - 0.33427e5 / 0.150000e6 * eta ^ 3 + 0.1393e4 / 0.5400000e7 * eta ^ 6 - 0.511541e6 / 0.1800000e7 * eta ^ 2 - 0.7169e4 / 0.45000e5 * eta - 0.7169e4 / 0.225000e6) * (ci2 ^ 4) + 0.7007e4 / 0.5400000e7 * (0.1e1 + eta) * (eta ^ 4 + 0.4084e4 / 0.637e3 * eta ^ 3 + 0.28234e5 / 0.1911e4 * eta ^ 2 + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4) * (ci2 ^ 2) - 0.637e3 / 0.10800000e8 * (0.1e1 + eta) * (eta ^ 4 + 0.4084e4 / 0.637e3 * eta ^ 3 + 0.28234e5 / 0.1911e4 * eta ^ 2 + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 ^ 2) * (ci2 + 1) / 0.2e1) * sqrt((-ci2 ^ 2 + 1)) * (eta - 0.1e1) * R__e ^ 4 * J ^ 2 * ci2 / eta ^ 8 / a ^ 4 / (0.1e1 + eta) ^ 3 / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) 0.135e3 / 0.32e2 * (ci2 - 1) * ((ci2 - 1) * ((0.2519e4 / 0.9e1 * eta ^ 4 + 0.18115e5 / 0.27e2 * eta ^ 3 + 0.20012e5 / 0.27e2 * eta ^ 2 + 0.2090e4 / 0.27e2 + 0.10450e5 / 0.27e2 * eta + 0.412e3 / 0.9e1 * eta ^ 5 + eta ^ 8 + 0.5e1 * eta ^ 7 + 0.94e2 / 0.9e1 * eta ^ 6) * (ci2 ^ 18) + (-0.43700e5 / 0.27e2 * eta - 0.8740e4 / 0.27e2 - 0.10340e5 / 0.9e1 * eta ^ 4 - 0.8360e4 / 0.3e1 * eta ^ 3 - 0.83524e5 / 0.27e2 * eta ^ 2 - 0.1624e4 / 0.9e1 * eta ^ 5 - 0.4e1 * eta ^ 8 - 0.20e2 * eta ^ 7 - 0.1088e4 / 0.27e2 * eta ^ 6) * (ci2 ^ 16) + (0.52703e5 / 0.18e2 * eta + 0.3298301e7 / 0.1620e4 * eta ^ 4 + 0.540349e6 / 0.108e3 * eta ^ 3 + 0.502567e6 / 0.90e2 * eta ^ 2 + 0.24719e5 / 0.81e2 * eta ^ 5 + 0.413e3 / 0.60e2 * eta ^ 8 + 0.413e3 / 0.12e2 * eta ^ 7 + 0.26854e5 / 0.405e3 * eta ^ 6 + 0.52703e5 / 0.90e2) * (ci2 ^ 14) + (-0.243082e6 / 0.81e2 * eta - 0.243082e6 / 0.405e3 - 0.3301613e7 / 0.1620e4 * eta ^ 4 - 0.1647233e7 / 0.324e3 * eta ^ 3 - 0.4624511e7 / 0.810e3 * eta ^ 2 - 0.233741e6 / 0.810e3 * eta ^ 5 - 0.133e3 / 0.20e2 * eta ^ 8 - 0.133e3 / 0.4e1 * eta ^ 7 - 0.1630e4 / 0.27e2 * eta ^ 6) * (ci2 ^ 12) + (0.1553143e7 / 0.4050e4 + 0.1553143e7 / 0.810e3 * eta + 0.205061e6 / 0.162e3 * eta ^ 4 + 0.1302268e7 / 0.405e3 * eta ^ 3 + 0.7365461e7 / 0.2025e4 * eta ^ 2 + 0.673519e6 / 0.4050e4 * eta ^ 5 + 0.887e3 / 0.225e3 * eta ^ 8 + 0.887e3 / 0.45e2 * eta ^ 7 + 0.2462e4 / 0.75e2 * eta ^ 6) * (ci2 ^ 10) + (-0.320549e6 / 0.2025e4 - 0.320549e6 / 0.405e3 * eta - 0.163373e6 / 0.324e3 * eta ^ 4 - 0.2123557e7 / 0.1620e4 * eta ^ 3 - 0.6059167e7 / 0.4050e4 * eta ^ 2 - 0.240767e6 / 0.4050e4 * eta ^ 5 - 0.1321e4 / 0.900e3 * eta ^ 8 - 0.1321e4 / 0.180e3 * eta ^ 7 - 0.4282e4 / 0.405e3 * eta ^ 6) * (ci2 ^ 8) + (0.3422003e7 / 0.81000e5 + 0.3422003e7 / 0.16200e5 * eta + 0.4161493e7 / 0.32400e5 * eta ^ 4 + 0.446339e6 / 0.1296e4 * eta ^ 3 + 0.32201351e8 / 0.81000e5 * eta ^ 2 + 0.514291e6 / 0.40500e5 * eta ^ 5 + 0.18097e5 / 0.54000e5 * eta ^ 8 + 0.18097e5 / 0.10800e5 * eta ^ 7 + 0.5981e4 / 0.3375e4 * eta ^ 6) * (ci2 ^ 6) + (-0.142771e6 / 0.20250e5 - 0.142771e6 / 0.4050e4 * eta - 0.3260119e7 / 0.162000e6 * eta ^ 4 - 0.1825171e7 / 0.32400e5 * eta ^ 3 - 0.5344717e7 / 0.81000e5 * eta ^ 2 - 0.114931e6 / 0.81000e5 * eta ^ 5 - 0.2317e4 / 0.54000e5 * eta ^ 8 - 0.2317e4 / 0.10800e5 * eta ^ 7 - 0.191e3 / 0.3375e4 * eta ^ 6) * (ci2 ^ 4) + (0.15109e5 / 0.4500e4 * eta + 0.15109e5 / 0.22500e5 + 0.94147e5 / 0.18000e5 * eta ^ 3 + 0.280913e6 / 0.45000e5 * eta ^ 2 + 0.761e3 / 0.16200e5 * eta ^ 5 + 0.1424243e7 / 0.810000e6 * eta ^ 4 + 0.637e3 / 0.270000e6 * eta ^ 8 + 0.637e3 / 0.54000e5 * eta ^ 7 - 0.1313e4 / 0.50625e5 * eta ^ 6) * (ci2 ^ 2) + 0.16e2 / 0.5625e4 * (eta ^ 4 - 0.599e3 / 0.576e3 * eta ^ 3 - 0.1405e4 / 0.64e2 * eta ^ 2 - 0.5687e4 / 0.192e3 * eta - 0.5687e4 / 0.576e3) * (0.1e1 + eta) ^ 2) * (eta - 0.1e1) * (ci2 ^ 2) * (ci2 + 1) * sin((3 * g - h)) / 0.10e2 + (0.1e1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((0.6758e4 / 0.81e2 * eta ^ 4 + 0.35477e5 / 0.162e3 * eta ^ 3 + 0.30209e5 / 0.162e3 * eta ^ 2 + 0.9790e4 / 0.81e2 + 0.6010e4 / 0.27e2 * eta - 0.10127e5 / 0.81e2 * eta ^ 5 + eta ^ 8 - 0.41e2 / 0.6e1 * eta ^ 7 - 0.1363e4 / 0.18e2 * eta ^ 6) * (ci2 ^ 18) + (-0.25064e5 / 0.27e2 * eta - 0.40940e5 / 0.81e2 - 0.1010e4 / 0.3e1 * eta ^ 4 - 0.74443e5 / 0.81e2 * eta ^ 3 - 0.63461e5 / 0.81e2 * eta ^ 2 + 0.42926e5 / 0.81e2 * eta ^ 5 - 0.4e1 * eta ^ 8 + 0.79e2 / 0.3e1 * eta ^ 7 + 0.2819e4 / 0.9e1 * eta ^ 6) * (ci2 ^ 16) + (0.214679e6 / 0.135e3 * eta + 0.529019e6 / 0.810e3 * eta ^ 4 + 0.559729e6 / 0.324e3 * eta ^ 3 + 0.2240351e7 / 0.1620e4 * eta ^ 2 - 0.387724e6 / 0.405e3 * eta ^ 5 + 0.187e3 / 0.30e2 * eta ^ 8 - 0.8609e4 / 0.180e3 * eta ^ 7 - 0.102187e6 / 0.180e3 * eta ^ 6 + 0.357059e6 / 0.405e3) * (ci2 ^ 14) + (-0.13013e5 / 0.9e1 * eta - 0.112546e6 / 0.135e3 - 0.63412e5 / 0.81e2 * eta ^ 4 - 0.307529e6 / 0.162e3 * eta ^ 3 - 0.361057e6 / 0.270e3 * eta ^ 2 + 0.781433e6 / 0.810e3 * eta ^ 5 - 0.47e2 / 0.10e2 * eta ^ 8 + 0.267e3 / 0.5e1 * eta ^ 7 + 0.5311e4 / 0.9e1 * eta ^ 6) * (ci2 ^ 12) + (0.940037e6 / 0.2025e4 + 0.504392e6 / 0.675e3 * eta + 0.412207e6 / 0.675e3 * eta ^ 4 + 0.10755031e8 / 0.8100e4 * eta ^ 3 + 0.250751e6 / 0.324e3 * eta ^ 2 - 0.1207646e7 / 0.2025e4 * eta ^ 5 + 0.356e3 / 0.225e3 * eta ^ 8 - 0.7019e4 / 0.180e3 * eta ^ 7 - 0.346967e6 / 0.900e3 * eta ^ 6) * (ci2 ^ 10) + (-0.312487e6 / 0.2025e4 - 0.144529e6 / 0.675e3 * eta - 0.1244497e7 / 0.4050e4 * eta ^ 4 - 0.4885921e7 / 0.8100e4 * eta ^ 3 - 0.445547e6 / 0.1620e4 * eta ^ 2 + 0.94948e5 / 0.405e3 * eta ^ 5 + eta ^ 8 / 0.450e3 + 0.5527e4 / 0.300e3 * eta ^ 7 + 0.146459e6 / 0.900e3 * eta ^ 6) * (ci2 ^ 8) + (0.594109e6 / 0.20250e5 + 0.189019e6 / 0.6750e4 * eta + 0.651287e6 / 0.6750e4 * eta ^ 4 + 0.14177147e8 / 0.81000e5 * eta ^ 3 + 0.959627e6 / 0.16200e5 * eta ^ 2 - 0.2381609e7 / 0.40500e5 * eta ^ 5 - 0.2171e4 / 0.13500e5 * eta ^ 8 - 0.145391e6 / 0.27000e5 * eta ^ 7 - 0.1185343e7 / 0.27000e5 * eta ^ 6) * (ci2 ^ 6) + (-0.27671e5 / 0.10125e5 + 0.287e3 / 0.675e3 * eta - 0.240907e6 / 0.13500e5 * eta ^ 4 - 0.624677e6 / 0.20250e5 * eta ^ 3 - 0.296627e6 / 0.40500e5 * eta ^ 2 + 0.185467e6 / 0.20250e5 * eta ^ 5 + 0.581e3 / 0.13500e5 * eta ^ 8 + 0.1012e4 / 0.1125e4 * eta ^ 7 + 0.97451e5 / 0.13500e5 * eta ^ 6) * (ci2 ^ 4) + (-0.1703e4 / 0.3375e4 * eta + 0.502e3 / 0.10125e5 + 0.120067e6 / 0.40500e5 * eta ^ 3 + 0.4588e4 / 0.10125e5 * eta ^ 2 - 0.16519e5 / 0.20250e5 * eta ^ 5 + 0.70337e5 / 0.40500e5 * eta ^ 4 - 0.49e2 / 0.13500e5 * eta ^ 8 - 0.329e3 / 0.4500e4 * eta ^ 7 - 0.877e3 / 0.1350e4 * eta ^ 6) * (ci2 ^ 2) + 0.49e2 / 0.27000e5 * (eta ^ 5 + 0.79e2 / 0.7e1 * eta ^ 4 - 0.285e3 / 0.49e2 * eta ^ 3 - 0.5335e4 / 0.147e3 * eta ^ 2 + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3) * (0.1e1 + eta) ^ 2) * sin((g - h)) / 0.5e1 + (eta - 0.1e1) * ((0.1e1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((-0.42643e5 / 0.405e3 * eta ^ 4 - 0.47563e5 / 0.405e3 * eta ^ 3 - 0.939e3 / 0.10e2 * eta ^ 2 - 0.1958e4 / 0.81e2 - 0.5564e4 / 0.81e2 * eta - 0.5162e4 / 0.135e3 * eta ^ 5 + eta ^ 7 - 0.19e2 / 0.10e2 * eta ^ 6) * (ci2 ^ 18) + (0.116132e6 / 0.405e3 * eta + 0.8188e4 / 0.81e2 + 0.35510e5 / 0.81e2 * eta ^ 4 + 0.199372e6 / 0.405e3 * eta ^ 3 + 0.53041e5 / 0.135e3 * eta ^ 2 + 0.21164e5 / 0.135e3 * eta ^ 5 - 0.4e1 * eta ^ 7 + 0.7e1 * eta ^ 6) * (ci2 ^ 16) + (-0.1001096e7 / 0.2025e4 * eta - 0.3238789e7 / 0.4050e4 * eta ^ 4 - 0.1790807e7 / 0.2025e4 * eta ^ 3 - 0.614513e6 / 0.900e3 * eta ^ 2 - 0.389123e6 / 0.1350e4 * eta ^ 5 + 0.187e3 / 0.30e2 * eta ^ 7 - 0.899e3 / 0.60e2 * eta ^ 6 - 0.357059e6 / 0.2025e4) * (ci2 ^ 14) + (0.307741e6 / 0.675e3 * eta + 0.112546e6 / 0.675e3 + 0.67709e5 / 0.81e2 * eta ^ 4 + 0.1802543e7 / 0.2025e4 * eta ^ 3 + 0.863993e6 / 0.1350e4 * eta ^ 2 + 0.418903e6 / 0.1350e4 * eta ^ 5 - 0.47e2 / 0.10e2 * eta ^ 7 + 0.217e3 / 0.10e2 * eta ^ 6) * (ci2 ^ 12) + (-0.940037e6 / 0.10125e5 - 0.2453213e7 / 0.10125e5 * eta - 0.11101997e8 / 0.20250e5 * eta ^ 4 - 0.11151821e8 / 0.20250e5 * eta ^ 3 - 0.4733851e7 / 0.13500e5 * eta ^ 2 - 0.1435589e7 / 0.6750e4 * eta ^ 5 + 0.356e3 / 0.225e3 * eta ^ 7 - 0.89621e5 / 0.4500e4 * eta ^ 6) * (ci2 ^ 10) + (0.312487e6 / 0.10125e5 + 0.746074e6 / 0.10125e5 * eta + 0.4693037e7 / 0.20250e5 * eta ^ 4 + 0.2187442e7 / 0.10125e5 * eta ^ 3 + 0.169891e6 / 0.1500e4 * eta ^ 2 + 0.212341e6 / 0.2250e4 * eta ^ 5 + eta ^ 7 / 0.450e3 + 0.9953e4 / 0.900e3 * eta ^ 6) * (ci2 ^ 8) + (-0.594109e6 / 0.101250e6 - 0.580583e6 / 0.50625e5 * eta - 0.12634357e8 / 0.202500e6 * eta ^ 4 - 0.10822417e8 / 0.202500e6 * eta ^ 3 - 0.2751527e7 / 0.135000e6 * eta ^ 2 - 0.33131e5 / 0.1250e4 * eta ^ 5 - 0.2171e4 / 0.13500e5 * eta ^ 7 - 0.96787e5 / 0.27000e5 * eta ^ 6) * (ci2 ^ 6) + (0.27671e5 / 0.50625e5 + 0.23366e5 / 0.50625e5 * eta + 0.1030643e7 / 0.101250e6 * eta ^ 4 + 0.1617661e7 / 0.202500e6 * eta ^ 3 + 0.111583e6 / 0.67500e5 * eta ^ 2 + 0.24961e5 / 0.5625e4 * eta ^ 5 + 0.581e3 / 0.13500e5 * eta ^ 7 + 0.42823e5 / 0.67500e5 * eta ^ 6) * (ci2 ^ 4) + (0.4607e4 / 0.50625e5 * eta - 0.502e3 / 0.50625e5 - 0.26219e5 / 0.40500e5 * eta ^ 3 + 0.2e1 / 0.375e3 * eta ^ 2 - 0.13181e5 / 0.33750e5 * eta ^ 5 - 0.45493e5 / 0.50625e5 * eta ^ 4 - 0.49e2 / 0.13500e5 * eta ^ 7 - 0.7e1 / 0.135e3 * eta ^ 6) * (ci2 ^ 2) + 0.49e2 / 0.45000e5 * (eta ^ 5 + 0.11e2 * eta ^ 4 + 0.895e3 / 0.49e2 * eta ^ 3 + 0.53e2 / 0.49e2 * eta ^ 2 - 0.1028e4 / 0.147e3 * eta - 0.524e3 / 0.441e3) * (0.1e1 + eta)) * sin((3 * g + h)) - 0.7e1 / 0.10e2 * (ci2 - 1) * sin((5 * g + h)) * ((0.8656e4 / 0.63e2 * eta ^ 4 + 0.12709e5 / 0.63e2 * eta ^ 3 + 0.10154e5 / 0.63e2 * eta ^ 2 + 0.2090e4 / 0.189e3 + 0.4180e4 / 0.63e2 * eta + 0.152e3 / 0.3e1 * eta ^ 5 + eta ^ 7 + 0.664e3 / 0.63e2 * eta ^ 6) * (ci2 ^ 18) + (-0.17480e5 / 0.63e2 * eta - 0.8740e4 / 0.189e3 - 0.107552e6 / 0.189e3 * eta ^ 4 - 0.158764e6 / 0.189e3 * eta ^ 3 - 0.4712e4 / 0.7e1 * eta ^ 2 - 0.208e3 * eta ^ 5 - 0.4e1 * eta ^ 7 - 0.2692e4 / 0.63e2 * eta ^ 6) * (ci2 ^ 16) + (0.7529e4 / 0.15e2 * eta + 0.5775157e7 / 0.5670e4 * eta ^ 4 + 0.5717147e7 / 0.3780e4 * eta ^ 3 + 0.383041e6 / 0.315e3 * eta ^ 2 + 0.46457e5 / 0.126e3 * eta ^ 5 + 0.413e3 / 0.60e2 * eta ^ 7 + 0.7841e4 / 0.105e3 * eta ^ 6 + 0.7529e4 / 0.90e2) * (ci2 ^ 14) + (-0.69452e5 / 0.135e3 * eta - 0.34726e5 / 0.405e3 - 0.2923966e7 / 0.2835e4 * eta ^ 4 - 0.17485187e8 / 0.11340e5 * eta ^ 3 - 0.2351777e7 / 0.1890e4 * eta ^ 2 - 0.11077e5 / 0.30e2 * eta ^ 5 - 0.133e3 / 0.20e2 * eta ^ 7 - 0.46321e5 / 0.630e3 * eta ^ 6) * (ci2 ^ 12) + (0.1553143e7 / 0.28350e5 + 0.1553143e7 / 0.4725e4 * eta + 0.2630863e7 / 0.4050e4 * eta ^ 4 + 0.13876801e8 / 0.14175e5 * eta ^ 3 + 0.7498879e7 / 0.9450e4 * eta ^ 2 + 0.40153e5 / 0.175e3 * eta ^ 5 + 0.887e3 / 0.225e3 * eta ^ 7 + 0.140843e6 / 0.3150e4 * eta ^ 6) * (ci2 ^ 10) + (-0.320549e6 / 0.14175e5 - 0.641098e6 / 0.4725e4 * eta - 0.414907e6 / 0.1575e4 * eta ^ 4 - 0.3248017e7 / 0.8100e4 * eta ^ 3 - 0.3088219e7 / 0.9450e4 * eta ^ 2 - 0.288041e6 / 0.3150e4 * eta ^ 5 - 0.1321e4 / 0.900e3 * eta ^ 7 - 0.18161e5 / 0.1050e4 * eta ^ 6) * (ci2 ^ 8) + (0.3422003e7 / 0.567000e6 + 0.3422003e7 / 0.94500e5 * eta + 0.38972813e8 / 0.567000e6 * eta ^ 4 + 0.120195077e9 / 0.1134000e7 * eta ^ 3 + 0.8218561e7 / 0.94500e5 * eta ^ 2 + 0.163061e6 / 0.7000e4 * eta ^ 5 + 0.18097e5 / 0.54000e5 * eta ^ 7 + 0.398249e6 / 0.94500e5 * eta ^ 6) * (ci2 ^ 6) + (-0.142771e6 / 0.141750e6 - 0.142771e6 / 0.23625e5 * eta - 0.1578757e7 / 0.141750e6 * eta ^ 4 - 0.19815289e8 / 0.1134000e7 * eta ^ 3 - 0.2733379e7 / 0.189000e6 * eta ^ 2 - 0.45947e5 / 0.12600e5 * eta ^ 5 - 0.2317e4 / 0.54000e5 * eta ^ 7 - 0.12889e5 / 0.21000e5 * eta ^ 6) * (ci2 ^ 4) + (0.15109e5 / 0.26250e5 * eta + 0.15109e5 / 0.157500e6 + 0.114729e6 / 0.70000e5 * eta ^ 3 + 0.144001e6 / 0.105000e6 * eta ^ 2 + 0.33353e5 / 0.105000e6 * eta ^ 5 + 0.289423e6 / 0.283500e6 * eta ^ 4 + 0.637e3 / 0.270000e6 * eta ^ 7 + 0.44459e5 / 0.945000e6 * eta ^ 6) * (ci2 ^ 2) - 0.91e2 / 0.67500e5 * (0.1e1 + eta) * (eta ^ 5 + 0.4913e4 / 0.637e3 * eta ^ 4 + 0.42950e5 / 0.1911e4 * eta ^ 3 + 0.52454e5 / 0.1911e4 * eta ^ 2 + 0.28435e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 0.1e1) * (ci2 ^ 2) * (ci2 + 1))) * R__e ^ 4 * J ^ 2 * sqrt(-eta ^ 2 + 0.1e1) * (ci2 + 1) / a ^ 4 / eta ^ 10 / (0.1e1 + eta) ^ 4 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 4 -0.135e3 / 0.32e2 * (ci2 + 1) / (0.1e1 + eta) ^ 4 * (-(ci2 + 1) * (eta - 0.1e1) * (ci2 ^ 2) * (ci2 - 1) * ((0.2519e4 / 0.9e1 * eta ^ 4 + 0.18115e5 / 0.27e2 * eta ^ 3 + 0.20012e5 / 0.27e2 * eta ^ 2 + 0.2090e4 / 0.27e2 + 0.10450e5 / 0.27e2 * eta + 0.412e3 / 0.9e1 * eta ^ 5 + eta ^ 8 + 0.5e1 * eta ^ 7 + 0.94e2 / 0.9e1 * eta ^ 6) * (ci2 ^ 18) + (-0.43700e5 / 0.27e2 * eta - 0.8740e4 / 0.27e2 - 0.10340e5 / 0.9e1 * eta ^ 4 - 0.8360e4 / 0.3e1 * eta ^ 3 - 0.83524e5 / 0.27e2 * eta ^ 2 - 0.1624e4 / 0.9e1 * eta ^ 5 - 0.4e1 * eta ^ 8 - 0.20e2 * eta ^ 7 - 0.1088e4 / 0.27e2 * eta ^ 6) * (ci2 ^ 16) + (0.52703e5 / 0.18e2 * eta + 0.3298301e7 / 0.1620e4 * eta ^ 4 + 0.540349e6 / 0.108e3 * eta ^ 3 + 0.502567e6 / 0.90e2 * eta ^ 2 + 0.24719e5 / 0.81e2 * eta ^ 5 + 0.413e3 / 0.60e2 * eta ^ 8 + 0.413e3 / 0.12e2 * eta ^ 7 + 0.26854e5 / 0.405e3 * eta ^ 6 + 0.52703e5 / 0.90e2) * (ci2 ^ 14) + (-0.243082e6 / 0.81e2 * eta - 0.243082e6 / 0.405e3 - 0.3301613e7 / 0.1620e4 * eta ^ 4 - 0.1647233e7 / 0.324e3 * eta ^ 3 - 0.4624511e7 / 0.810e3 * eta ^ 2 - 0.233741e6 / 0.810e3 * eta ^ 5 - 0.133e3 / 0.20e2 * eta ^ 8 - 0.133e3 / 0.4e1 * eta ^ 7 - 0.1630e4 / 0.27e2 * eta ^ 6) * (ci2 ^ 12) + (0.1553143e7 / 0.4050e4 + 0.1553143e7 / 0.810e3 * eta + 0.205061e6 / 0.162e3 * eta ^ 4 + 0.1302268e7 / 0.405e3 * eta ^ 3 + 0.7365461e7 / 0.2025e4 * eta ^ 2 + 0.673519e6 / 0.4050e4 * eta ^ 5 + 0.887e3 / 0.225e3 * eta ^ 8 + 0.887e3 / 0.45e2 * eta ^ 7 + 0.2462e4 / 0.75e2 * eta ^ 6) * (ci2 ^ 10) + (-0.320549e6 / 0.2025e4 - 0.320549e6 / 0.405e3 * eta - 0.163373e6 / 0.324e3 * eta ^ 4 - 0.2123557e7 / 0.1620e4 * eta ^ 3 - 0.6059167e7 / 0.4050e4 * eta ^ 2 - 0.240767e6 / 0.4050e4 * eta ^ 5 - 0.1321e4 / 0.900e3 * eta ^ 8 - 0.1321e4 / 0.180e3 * eta ^ 7 - 0.4282e4 / 0.405e3 * eta ^ 6) * (ci2 ^ 8) + (0.3422003e7 / 0.81000e5 + 0.3422003e7 / 0.16200e5 * eta + 0.4161493e7 / 0.32400e5 * eta ^ 4 + 0.446339e6 / 0.1296e4 * eta ^ 3 + 0.32201351e8 / 0.81000e5 * eta ^ 2 + 0.514291e6 / 0.40500e5 * eta ^ 5 + 0.18097e5 / 0.54000e5 * eta ^ 8 + 0.18097e5 / 0.10800e5 * eta ^ 7 + 0.5981e4 / 0.3375e4 * eta ^ 6) * (ci2 ^ 6) + (-0.142771e6 / 0.20250e5 - 0.142771e6 / 0.4050e4 * eta - 0.3260119e7 / 0.162000e6 * eta ^ 4 - 0.1825171e7 / 0.32400e5 * eta ^ 3 - 0.5344717e7 / 0.81000e5 * eta ^ 2 - 0.114931e6 / 0.81000e5 * eta ^ 5 - 0.2317e4 / 0.54000e5 * eta ^ 8 - 0.2317e4 / 0.10800e5 * eta ^ 7 - 0.191e3 / 0.3375e4 * eta ^ 6) * (ci2 ^ 4) + (0.15109e5 / 0.4500e4 * eta + 0.15109e5 / 0.22500e5 + 0.94147e5 / 0.18000e5 * eta ^ 3 + 0.280913e6 / 0.45000e5 * eta ^ 2 + 0.761e3 / 0.16200e5 * eta ^ 5 + 0.1424243e7 / 0.810000e6 * eta ^ 4 + 0.637e3 / 0.270000e6 * eta ^ 8 + 0.637e3 / 0.54000e5 * eta ^ 7 - 0.1313e4 / 0.50625e5 * eta ^ 6) * (ci2 ^ 2) + 0.16e2 / 0.5625e4 * (eta ^ 4 - 0.599e3 / 0.576e3 * eta ^ 3 - 0.1405e4 / 0.64e2 * eta ^ 2 - 0.5687e4 / 0.192e3 * eta - 0.5687e4 / 0.576e3) * (0.1e1 + eta) ^ 2) * cos((3 * g - h)) / 0.10e2 - ((0.6758e4 / 0.81e2 * eta ^ 4 + 0.35477e5 / 0.162e3 * eta ^ 3 + 0.30209e5 / 0.162e3 * eta ^ 2 + 0.9790e4 / 0.81e2 + 0.6010e4 / 0.27e2 * eta - 0.10127e5 / 0.81e2 * eta ^ 5 + eta ^ 8 - 0.41e2 / 0.6e1 * eta ^ 7 - 0.1363e4 / 0.18e2 * eta ^ 6) * (ci2 ^ 18) + (-0.25064e5 / 0.27e2 * eta - 0.40940e5 / 0.81e2 - 0.1010e4 / 0.3e1 * eta ^ 4 - 0.74443e5 / 0.81e2 * eta ^ 3 - 0.63461e5 / 0.81e2 * eta ^ 2 + 0.42926e5 / 0.81e2 * eta ^ 5 - 0.4e1 * eta ^ 8 + 0.79e2 / 0.3e1 * eta ^ 7 + 0.2819e4 / 0.9e1 * eta ^ 6) * (ci2 ^ 16) + (0.214679e6 / 0.135e3 * eta + 0.529019e6 / 0.810e3 * eta ^ 4 + 0.559729e6 / 0.324e3 * eta ^ 3 + 0.2240351e7 / 0.1620e4 * eta ^ 2 - 0.387724e6 / 0.405e3 * eta ^ 5 + 0.187e3 / 0.30e2 * eta ^ 8 - 0.8609e4 / 0.180e3 * eta ^ 7 - 0.102187e6 / 0.180e3 * eta ^ 6 + 0.357059e6 / 0.405e3) * (ci2 ^ 14) + (-0.13013e5 / 0.9e1 * eta - 0.112546e6 / 0.135e3 - 0.63412e5 / 0.81e2 * eta ^ 4 - 0.307529e6 / 0.162e3 * eta ^ 3 - 0.361057e6 / 0.270e3 * eta ^ 2 + 0.781433e6 / 0.810e3 * eta ^ 5 - 0.47e2 / 0.10e2 * eta ^ 8 + 0.267e3 / 0.5e1 * eta ^ 7 + 0.5311e4 / 0.9e1 * eta ^ 6) * (ci2 ^ 12) + (0.940037e6 / 0.2025e4 + 0.504392e6 / 0.675e3 * eta + 0.412207e6 / 0.675e3 * eta ^ 4 + 0.10755031e8 / 0.8100e4 * eta ^ 3 + 0.250751e6 / 0.324e3 * eta ^ 2 - 0.1207646e7 / 0.2025e4 * eta ^ 5 + 0.356e3 / 0.225e3 * eta ^ 8 - 0.7019e4 / 0.180e3 * eta ^ 7 - 0.346967e6 / 0.900e3 * eta ^ 6) * (ci2 ^ 10) + (-0.312487e6 / 0.2025e4 - 0.144529e6 / 0.675e3 * eta - 0.1244497e7 / 0.4050e4 * eta ^ 4 - 0.4885921e7 / 0.8100e4 * eta ^ 3 - 0.445547e6 / 0.1620e4 * eta ^ 2 + 0.94948e5 / 0.405e3 * eta ^ 5 + eta ^ 8 / 0.450e3 + 0.5527e4 / 0.300e3 * eta ^ 7 + 0.146459e6 / 0.900e3 * eta ^ 6) * (ci2 ^ 8) + (0.594109e6 / 0.20250e5 + 0.189019e6 / 0.6750e4 * eta + 0.651287e6 / 0.6750e4 * eta ^ 4 + 0.14177147e8 / 0.81000e5 * eta ^ 3 + 0.959627e6 / 0.16200e5 * eta ^ 2 - 0.2381609e7 / 0.40500e5 * eta ^ 5 - 0.2171e4 / 0.13500e5 * eta ^ 8 - 0.145391e6 / 0.27000e5 * eta ^ 7 - 0.1185343e7 / 0.27000e5 * eta ^ 6) * (ci2 ^ 6) + (-0.27671e5 / 0.10125e5 + 0.287e3 / 0.675e3 * eta - 0.240907e6 / 0.13500e5 * eta ^ 4 - 0.624677e6 / 0.20250e5 * eta ^ 3 - 0.296627e6 / 0.40500e5 * eta ^ 2 + 0.185467e6 / 0.20250e5 * eta ^ 5 + 0.581e3 / 0.13500e5 * eta ^ 8 + 0.1012e4 / 0.1125e4 * eta ^ 7 + 0.97451e5 / 0.13500e5 * eta ^ 6) * (ci2 ^ 4) + (-0.1703e4 / 0.3375e4 * eta + 0.502e3 / 0.10125e5 + 0.120067e6 / 0.40500e5 * eta ^ 3 + 0.4588e4 / 0.10125e5 * eta ^ 2 - 0.16519e5 / 0.20250e5 * eta ^ 5 + 0.70337e5 / 0.40500e5 * eta ^ 4 - 0.49e2 / 0.13500e5 * eta ^ 8 - 0.329e3 / 0.4500e4 * eta ^ 7 - 0.877e3 / 0.1350e4 * eta ^ 6) * (ci2 ^ 2) + 0.49e2 / 0.27000e5 * (eta ^ 5 + 0.79e2 / 0.7e1 * eta ^ 4 - 0.285e3 / 0.49e2 * eta ^ 3 - 0.5335e4 / 0.147e3 * eta ^ 2 + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3) * (0.1e1 + eta) ^ 2) * (0.1e1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((g - h)) / 0.5e1 + (eta - 0.1e1) * (((-0.42643e5 / 0.405e3 * eta ^ 4 - 0.47563e5 / 0.405e3 * eta ^ 3 - 0.939e3 / 0.10e2 * eta ^ 2 - 0.1958e4 / 0.81e2 - 0.5564e4 / 0.81e2 * eta - 0.5162e4 / 0.135e3 * eta ^ 5 + eta ^ 7 - 0.19e2 / 0.10e2 * eta ^ 6) * (ci2 ^ 18) + (0.116132e6 / 0.405e3 * eta + 0.8188e4 / 0.81e2 + 0.35510e5 / 0.81e2 * eta ^ 4 + 0.199372e6 / 0.405e3 * eta ^ 3 + 0.53041e5 / 0.135e3 * eta ^ 2 + 0.21164e5 / 0.135e3 * eta ^ 5 - 0.4e1 * eta ^ 7 + 0.7e1 * eta ^ 6) * (ci2 ^ 16) + (-0.1001096e7 / 0.2025e4 * eta - 0.3238789e7 / 0.4050e4 * eta ^ 4 - 0.1790807e7 / 0.2025e4 * eta ^ 3 - 0.614513e6 / 0.900e3 * eta ^ 2 - 0.389123e6 / 0.1350e4 * eta ^ 5 + 0.187e3 / 0.30e2 * eta ^ 7 - 0.899e3 / 0.60e2 * eta ^ 6 - 0.357059e6 / 0.2025e4) * (ci2 ^ 14) + (0.307741e6 / 0.675e3 * eta + 0.112546e6 / 0.675e3 + 0.67709e5 / 0.81e2 * eta ^ 4 + 0.1802543e7 / 0.2025e4 * eta ^ 3 + 0.863993e6 / 0.1350e4 * eta ^ 2 + 0.418903e6 / 0.1350e4 * eta ^ 5 - 0.47e2 / 0.10e2 * eta ^ 7 + 0.217e3 / 0.10e2 * eta ^ 6) * (ci2 ^ 12) + (-0.940037e6 / 0.10125e5 - 0.2453213e7 / 0.10125e5 * eta - 0.11101997e8 / 0.20250e5 * eta ^ 4 - 0.11151821e8 / 0.20250e5 * eta ^ 3 - 0.4733851e7 / 0.13500e5 * eta ^ 2 - 0.1435589e7 / 0.6750e4 * eta ^ 5 + 0.356e3 / 0.225e3 * eta ^ 7 - 0.89621e5 / 0.4500e4 * eta ^ 6) * (ci2 ^ 10) + (0.312487e6 / 0.10125e5 + 0.746074e6 / 0.10125e5 * eta + 0.4693037e7 / 0.20250e5 * eta ^ 4 + 0.2187442e7 / 0.10125e5 * eta ^ 3 + 0.169891e6 / 0.1500e4 * eta ^ 2 + 0.212341e6 / 0.2250e4 * eta ^ 5 + eta ^ 7 / 0.450e3 + 0.9953e4 / 0.900e3 * eta ^ 6) * (ci2 ^ 8) + (-0.594109e6 / 0.101250e6 - 0.580583e6 / 0.50625e5 * eta - 0.12634357e8 / 0.202500e6 * eta ^ 4 - 0.10822417e8 / 0.202500e6 * eta ^ 3 - 0.2751527e7 / 0.135000e6 * eta ^ 2 - 0.33131e5 / 0.1250e4 * eta ^ 5 - 0.2171e4 / 0.13500e5 * eta ^ 7 - 0.96787e5 / 0.27000e5 * eta ^ 6) * (ci2 ^ 6) + (0.27671e5 / 0.50625e5 + 0.23366e5 / 0.50625e5 * eta + 0.1030643e7 / 0.101250e6 * eta ^ 4 + 0.1617661e7 / 0.202500e6 * eta ^ 3 + 0.111583e6 / 0.67500e5 * eta ^ 2 + 0.24961e5 / 0.5625e4 * eta ^ 5 + 0.581e3 / 0.13500e5 * eta ^ 7 + 0.42823e5 / 0.67500e5 * eta ^ 6) * (ci2 ^ 4) + (0.4607e4 / 0.50625e5 * eta - 0.502e3 / 0.50625e5 - 0.26219e5 / 0.40500e5 * eta ^ 3 + 0.2e1 / 0.375e3 * eta ^ 2 - 0.13181e5 / 0.33750e5 * eta ^ 5 - 0.45493e5 / 0.50625e5 * eta ^ 4 - 0.49e2 / 0.13500e5 * eta ^ 7 - 0.7e1 / 0.135e3 * eta ^ 6) * (ci2 ^ 2) + 0.49e2 / 0.45000e5 * (eta ^ 5 + 0.11e2 * eta ^ 4 + 0.895e3 / 0.49e2 * eta ^ 3 + 0.53e2 / 0.49e2 * eta ^ 2 - 0.1028e4 / 0.147e3 * eta - 0.524e3 / 0.441e3) * (0.1e1 + eta)) * (0.1e1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((3 * g + h)) - 0.7e1 / 0.10e2 * cos((5 * g + h)) * (ci2 + 1) * (eta - 0.1e1) * (ci2 ^ 2) * (ci2 - 1) * ((0.8656e4 / 0.63e2 * eta ^ 4 + 0.12709e5 / 0.63e2 * eta ^ 3 + 0.10154e5 / 0.63e2 * eta ^ 2 + 0.2090e4 / 0.189e3 + 0.4180e4 / 0.63e2 * eta + 0.152e3 / 0.3e1 * eta ^ 5 + eta ^ 7 + 0.664e3 / 0.63e2 * eta ^ 6) * (ci2 ^ 18) + (-0.17480e5 / 0.63e2 * eta - 0.8740e4 / 0.189e3 - 0.107552e6 / 0.189e3 * eta ^ 4 - 0.158764e6 / 0.189e3 * eta ^ 3 - 0.4712e4 / 0.7e1 * eta ^ 2 - 0.208e3 * eta ^ 5 - 0.4e1 * eta ^ 7 - 0.2692e4 / 0.63e2 * eta ^ 6) * (ci2 ^ 16) + (0.7529e4 / 0.15e2 * eta + 0.5775157e7 / 0.5670e4 * eta ^ 4 + 0.5717147e7 / 0.3780e4 * eta ^ 3 + 0.383041e6 / 0.315e3 * eta ^ 2 + 0.46457e5 / 0.126e3 * eta ^ 5 + 0.413e3 / 0.60e2 * eta ^ 7 + 0.7841e4 / 0.105e3 * eta ^ 6 + 0.7529e4 / 0.90e2) * (ci2 ^ 14) + (-0.69452e5 / 0.135e3 * eta - 0.34726e5 / 0.405e3 - 0.2923966e7 / 0.2835e4 * eta ^ 4 - 0.17485187e8 / 0.11340e5 * eta ^ 3 - 0.2351777e7 / 0.1890e4 * eta ^ 2 - 0.11077e5 / 0.30e2 * eta ^ 5 - 0.133e3 / 0.20e2 * eta ^ 7 - 0.46321e5 / 0.630e3 * eta ^ 6) * (ci2 ^ 12) + (0.1553143e7 / 0.28350e5 + 0.1553143e7 / 0.4725e4 * eta + 0.2630863e7 / 0.4050e4 * eta ^ 4 + 0.13876801e8 / 0.14175e5 * eta ^ 3 + 0.7498879e7 / 0.9450e4 * eta ^ 2 + 0.40153e5 / 0.175e3 * eta ^ 5 + 0.887e3 / 0.225e3 * eta ^ 7 + 0.140843e6 / 0.3150e4 * eta ^ 6) * (ci2 ^ 10) + (-0.320549e6 / 0.14175e5 - 0.641098e6 / 0.4725e4 * eta - 0.414907e6 / 0.1575e4 * eta ^ 4 - 0.3248017e7 / 0.8100e4 * eta ^ 3 - 0.3088219e7 / 0.9450e4 * eta ^ 2 - 0.288041e6 / 0.3150e4 * eta ^ 5 - 0.1321e4 / 0.900e3 * eta ^ 7 - 0.18161e5 / 0.1050e4 * eta ^ 6) * (ci2 ^ 8) + (0.3422003e7 / 0.567000e6 + 0.3422003e7 / 0.94500e5 * eta + 0.38972813e8 / 0.567000e6 * eta ^ 4 + 0.120195077e9 / 0.1134000e7 * eta ^ 3 + 0.8218561e7 / 0.94500e5 * eta ^ 2 + 0.163061e6 / 0.7000e4 * eta ^ 5 + 0.18097e5 / 0.54000e5 * eta ^ 7 + 0.398249e6 / 0.94500e5 * eta ^ 6) * (ci2 ^ 6) + (-0.142771e6 / 0.141750e6 - 0.142771e6 / 0.23625e5 * eta - 0.1578757e7 / 0.141750e6 * eta ^ 4 - 0.19815289e8 / 0.1134000e7 * eta ^ 3 - 0.2733379e7 / 0.189000e6 * eta ^ 2 - 0.45947e5 / 0.12600e5 * eta ^ 5 - 0.2317e4 / 0.54000e5 * eta ^ 7 - 0.12889e5 / 0.21000e5 * eta ^ 6) * (ci2 ^ 4) + (0.15109e5 / 0.26250e5 * eta + 0.15109e5 / 0.157500e6 + 0.114729e6 / 0.70000e5 * eta ^ 3 + 0.144001e6 / 0.105000e6 * eta ^ 2 + 0.33353e5 / 0.105000e6 * eta ^ 5 + 0.289423e6 / 0.283500e6 * eta ^ 4 + 0.637e3 / 0.270000e6 * eta ^ 7 + 0.44459e5 / 0.945000e6 * eta ^ 6) * (ci2 ^ 2) - 0.91e2 / 0.67500e5 * (0.1e1 + eta) * (eta ^ 5 + 0.4913e4 / 0.637e3 * eta ^ 4 + 0.42950e5 / 0.1911e4 * eta ^ 3 + 0.52454e5 / 0.1911e4 * eta ^ 2 + 0.28435e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)))) * R__e ^ 4 * (ci2 - 1) * J ^ 2 * sqrt(-eta ^ 2 + 0.1e1) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 4 / a ^ 4 / eta ^ 10];
	D3 = [0.81e2 / 0.32e2 * (-(ci2 + 1) * (1 + eta) * (ci2 ^ 2) * (ci2 - 1) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 12) + (0.62e2 / 0.3e1 * (eta ^ 3) + 0.316e3 / 0.9e1 * (eta ^ 2) + 0.242e3 / 0.27e2 * eta - (3 * eta ^ 4) + 0.445e3 / 0.27e2) * (ci2 ^ 10) + (-0.124e3 / 0.5e1 * (eta ^ 3) - 0.632e3 / 0.15e2 * (eta ^ 2) - 0.484e3 / 0.45e2 * eta + 0.18e2 / 0.5e1 * (eta ^ 4) - 0.178e3 / 0.9e1) * (ci2 ^ 8) + (0.682e3 / 0.45e2 * (eta ^ 3) + 0.3476e4 / 0.135e3 * (eta ^ 2) + 0.2662e4 / 0.405e3 * eta - 0.11e2 / 0.5e1 * (eta ^ 4) + 0.979e3 / 0.81e2) * (ci2 ^ 6) + (-0.3328e4 / 0.675e3 * (eta ^ 3) - 0.1141e4 / 0.135e3 * (eta ^ 2) - 0.1502e4 / 0.675e3 * eta + 0.166e3 / 0.225e3 * (eta ^ 4) - 0.539e3 / 0.135e3) * (ci2 ^ 4) + (0.538e3 / 0.675e3 * (eta ^ 3) + 0.193e3 / 0.135e3 * (eta ^ 2) + 0.292e3 / 0.675e3 * eta - 0.31e2 / 0.225e3 * (eta ^ 4) + 0.94e2 / 0.135e3) * (ci2 ^ 2) + 0.77e2 / 0.6750e4 * (eta ^ 4) - 0.167e3 / 0.3375e4 * (eta ^ 3) - 0.1037e4 / 0.20250e5 - 0.389e3 / 0.10125e5 * eta - 0.37e2 / 0.375e3 * (eta ^ 2)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((-h + 2 * g)) / 0.3e1 - ((ci2 + 1) ^ 2) * ((0.244e3 / 0.45e2 * (eta ^ 3) + 0.1402e4 / 0.135e3 * (eta ^ 2) + 0.1052e4 / 0.135e3 * eta + (eta ^ 4) + 0.263e3 / 0.135e3) * (ci2 ^ 8) + (-0.488e3 / 0.45e2 * (eta ^ 3) - 0.2804e4 / 0.135e3 * (eta ^ 2) - 0.2104e4 / 0.135e3 * eta - (2 * eta ^ 4) - 0.526e3 / 0.135e3) * (ci2 ^ 6) + (0.1756e4 / 0.225e3 * (eta ^ 3) + 0.2006e4 / 0.135e3 * (eta ^ 2) + 0.7508e4 / 0.675e3 * eta + 0.109e3 / 0.75e2 * (eta ^ 4) + 0.1877e4 / 0.675e3) * (ci2 ^ 4) + (-0.536e3 / 0.225e3 * (eta ^ 3) - 0.604e3 / 0.135e3 * (eta ^ 2) - 0.2248e4 / 0.675e3 * eta - 0.34e2 / 0.75e2 * (eta ^ 4) - 0.562e3 / 0.675e3) * (ci2 ^ 2) + 0.77e2 / 0.1500e4 * (eta ^ 4) + 0.59e2 / 0.225e3 * (eta ^ 3) + 0.241e3 / 0.675e3 * eta + 0.3263e4 / 0.6750e4 * (eta ^ 2) + 0.241e3 / 0.2700e4) * (eta - 1) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * cos((-h + 4 * g)) / 0.72e2 + (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 16) + (0.248e3 / 0.9e1 * (eta ^ 3) + 0.1264e4 / 0.27e2 * (eta ^ 2) + 0.968e3 / 0.81e2 * eta - (4 * eta ^ 4) + 0.1780e4 / 0.81e2) * (ci2 ^ 14) + (-0.3892e4 / 0.81e2 * (eta ^ 3) - 0.32318e5 / 0.405e3 * (eta ^ 2) - 0.4504e4 / 0.243e3 * eta + 0.286e3 / 0.45e2 * (eta ^ 4) - 0.43876e5 / 0.1215e4) * (ci2 ^ 12) + (0.1288e4 / 0.27e2 * (eta ^ 3) + 0.10198e5 / 0.135e3 * (eta ^ 2) + 0.124e3 / 0.9e1 * eta - 0.76e2 / 0.15e2 * (eta ^ 4) + 0.1414e4 / 0.45e2) * (ci2 ^ 10) + (-0.59582e5 / 0.2025e4 * (eta ^ 3) - 0.87799e5 / 0.2025e4 * (eta ^ 2) - 0.2996e4 / 0.675e3 * eta + 0.1373e4 / 0.675e3 * (eta ^ 4) - 0.10462e5 / 0.675e3) * (ci2 ^ 8) + (0.23264e5 / 0.2025e4 * (eta ^ 3) + 0.3472e4 / 0.225e3 * (eta ^ 2) - 0.872e3 / 0.6075e4 * eta - 0.196e3 / 0.675e3 * (eta ^ 4) + 0.25916e5 / 0.6075e4) * (ci2 ^ 6) + (-0.27916e5 / 0.10125e5 * (eta ^ 3) - 0.33644e5 / 0.10125e5 * (eta ^ 2) + 0.5156e4 / 0.10125e5 * eta - 0.194e3 / 0.3375e4 * (eta ^ 4) - 0.5846e4 / 0.10125e5) * (ci2 ^ 4) + (0.1252e4 / 0.3375e4 * (eta ^ 3) + 0.1333e4 / 0.3375e4 * (eta ^ 2) - 0.1346e4 / 0.10125e5 * eta + 0.28e2 / 0.1125e4 * (eta ^ 4) + 0.191e3 / 0.10125e5) * (ci2 ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 4) - 0.217e3 / 0.10125e5 * (eta ^ 3) + 0.347e3 / 0.30375e5 * eta + 0.131e3 / 0.60750e5 - 0.8e1 / 0.405e3 * (eta ^ 2)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((h + 2 * g)) - 0.2e1 / 0.3e1 * cos((h + 4 * g)) * (ci2 + 1) * (eta - 1) * (ci2 ^ 2) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * (ci2 ^ 16) + (-0.752e3 / 0.27e2 * (eta ^ 3) - 0.616e3 / 0.9e1 * (eta ^ 2) - 0.1520e4 / 0.27e2 * eta - (4 * eta ^ 4) - 0.380e3 / 0.27e2) * (ci2 ^ 14) + (0.25751e5 / 0.540e3 * (eta ^ 3) + 0.25273e5 / 0.216e3 * (eta ^ 2) + 0.51943e5 / 0.540e3 * eta + 0.549e3 / 0.80e2 * (eta ^ 4) + 0.51943e5 / 0.2160e4) * (ci2 ^ 12) + (-0.24613e5 / 0.540e3 * (eta ^ 3) - 0.2675e4 / 0.24e2 * (eta ^ 2) - 0.49429e5 / 0.540e3 * eta - 0.527e3 / 0.80e2 * (eta ^ 4) - 0.49429e5 / 0.2160e4) * (ci2 ^ 10) + (0.23933e5 / 0.900e3 * (eta ^ 3) + 0.1047671e7 / 0.16200e5 * (eta ^ 2) + 0.429461e6 / 0.8100e4 * eta + 0.13933e5 / 0.3600e4 * (eta ^ 4) + 0.429461e6 / 0.32400e5) * (ci2 ^ 8) + (-0.8741e4 / 0.900e3 * (eta ^ 3) - 0.379567e6 / 0.16200e5 * (eta ^ 2) - 0.155197e6 / 0.8100e4 * eta - 0.5141e4 / 0.3600e4 * (eta ^ 4) - 0.155197e6 / 0.32400e5) * (ci2 ^ 6) + (0.117541e6 / 0.54000e5 * (eta ^ 3) + 0.1682477e7 / 0.324000e6 * (eta ^ 2) + 0.685487e6 / 0.162000e6 * eta + 0.70117e5 / 0.216000e6 * (eta ^ 4) + 0.685487e6 / 0.648000e6) * (ci2 ^ 4) + (-0.14861e5 / 0.54000e5 * (eta ^ 3) - 0.209557e6 / 0.324000e6 * (eta ^ 2) - 0.84967e5 / 0.162000e6 * eta - 0.9037e4 / 0.216000e6 * (eta ^ 4) - 0.84967e5 / 0.648000e6) * (ci2 ^ 2) + 0.637e3 / 0.270000e6 * (eta ^ 4) + 0.5687e4 / 0.810000e6 + 0.1021e4 / 0.67500e5 * (eta ^ 3) + 0.5687e4 / 0.202500e6 * eta + 0.14117e5 / 0.405000e6 * (eta ^ 2)) * (ci2 - 1)) * (eta - 1) / ((1 + eta) ^ 2) * R__e ^ 4 * J ^ 2 * sqrt((-ci2 ^ 2 + 1)) * ((ci2 ^ 2) - 0.1e1 / 0.2e1) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 4 / a ^ 5 / (eta ^ 8) / ci2 0 0.81e2 / 0.128e3 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 5 * (eta - 1) / ((1 + eta) ^ 2) * R__e ^ 4 * J ^ 2 * (-0.3e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 24) + (0.7565e4 / 0.243e3 + 0.5372e4 / 0.81e2 * (eta ^ 2) - 0.17e2 / 0.3e1 * (eta ^ 4) + 0.1054e4 / 0.27e2 * (eta ^ 3) + 0.4114e4 / 0.243e3 * eta) * (ci2 ^ 22) + (-0.152474e6 / 0.3645e4 * eta - 0.282841e6 / 0.3645e4 - 0.40402e5 / 0.243e3 * (eta ^ 2) + 0.1897e4 / 0.135e3 * (eta ^ 4) - 0.119342e6 / 0.1215e4 * (eta ^ 3)) * (ci2 ^ 20) + (0.216404e6 / 0.3645e4 * eta + 0.407794e6 / 0.3645e4 + 0.294224e6 / 0.1215e4 * (eta ^ 2) - 0.542e3 / 0.27e2 * (eta ^ 4) + 0.174932e6 / 0.1215e4 * (eta ^ 3)) * (ci2 ^ 18) + (-0.326897e6 / 0.6075e4 * eta - 0.1253861e7 / 0.12150e5 - 0.1372112e7 / 0.6075e4 * (eta ^ 2) + 0.74231e5 / 0.4050e4 * (eta ^ 4) - 0.821383e6 / 0.6075e4 * (eta ^ 3)) * (ci2 ^ 16) + (0.120292e6 / 0.3645e4 * eta + 0.1159222e7 / 0.18225e5 + 0.282847e6 / 0.2025e4 * (eta ^ 2) - 0.22811e5 / 0.2025e4 * (eta ^ 4) + 0.101786e6 / 0.1215e4 * (eta ^ 3)) * (ci2 ^ 14) + (-0.438328e6 / 0.30375e5 * eta + 0.5438e4 / 0.1125e4 * (eta ^ 4) - 0.338764e6 / 0.10125e5 * (eta ^ 3) - 0.807332e6 / 0.30375e5 - 0.574966e6 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 12) + (0.49264e5 / 0.10125e5 * eta - 0.5134e4 / 0.3375e4 * (eta ^ 4) + 0.76196e5 / 0.10125e5 * (eta ^ 3) + 0.75968e5 / 0.10125e5 + 0.142462e6 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 10) + (-0.212252e6 / 0.151875e6 * eta + 0.57989e5 / 0.151875e6 * (eta ^ 4) - 0.39878e5 / 0.151875e6 * (eta ^ 3) - 0.214828e6 / 0.151875e6 - 0.74689e5 / 0.50625e5 * (eta ^ 2)) * (ci2 ^ 8) + (0.6349e4 / 0.18225e5 * eta - 0.5003e4 / 0.60750e5 * (eta ^ 4) - 0.11323e5 / 0.30375e5 * (eta ^ 3) + 0.1313e4 / 0.7290e4 - 0.28e2 / 0.125e3 * (eta ^ 2)) * (ci2 ^ 6) + (-0.10009e5 / 0.151875e6 * eta + 0.1451e4 / 0.101250e6 * (eta ^ 4) + 0.17041e5 / 0.151875e6 * (eta ^ 3) - 0.5257e4 / 0.303750e6 + 0.14972e5 / 0.151875e6 * (eta ^ 2)) * (ci2 ^ 4) + (0.694e3 / 0.91125e5 * eta - 0.49e2 / 0.30375e5 * (eta ^ 4) - 0.434e3 / 0.30375e5 * (eta ^ 3) + 0.131e3 / 0.91125e5 - 0.16e2 / 0.1215e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.49e2 / 0.607500e6 * (eta ^ 4) + 0.217e3 / 0.303750e6 * (eta ^ 3) - 0.131e3 / 0.1822500e7 - 0.347e3 / 0.911250e6 * eta + 0.4e1 / 0.6075e4 * (eta ^ 2)) * cos((2 * g + 2 * h)) + (ci2 + 1) * (ci2 - 1) * (ci2 ^ 2) * ((ci2 + 1) * (ci2 - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 18) + (0.3146e4 / 0.243e3 * eta + 0.5785e4 / 0.243e3 + 0.4108e4 / 0.81e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) + 0.806e3 / 0.27e2 * (eta ^ 3)) * (ci2 ^ 16) + (-0.29524e5 / 0.1215e4 * eta - 0.10858e5 / 0.243e3 - 0.38552e5 / 0.405e3 * (eta ^ 2) + 0.122e3 / 0.15e2 * (eta ^ 4) - 0.7564e4 / 0.135e3 * (eta ^ 3)) * (ci2 ^ 14) + (0.6292e4 / 0.243e3 * eta - 0.26e2 / 0.3e1 * (eta ^ 4) + 0.1612e4 / 0.27e2 * (eta ^ 3) + 0.11570e5 / 0.243e3 + 0.8216e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 12) + (-0.104636e6 / 0.6075e4 * eta + 0.3893e4 / 0.675e3 * (eta ^ 4) - 0.80558e5 / 0.2025e4 * (eta ^ 3) - 0.38522e5 / 0.1215e4 - 0.136811e6 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.45104e5 / 0.6075e4 * eta - 0.1679e4 / 0.675e3 * (eta ^ 4) + 0.34802e5 / 0.2025e4 * (eta ^ 3) + 0.16628e5 / 0.1215e4 + 0.2363e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.63713e5 / 0.30375e5 * eta + 0.4733e4 / 0.6750e4 * (eta ^ 4) - 0.48689e5 / 0.10125e5 * (eta ^ 3) - 0.233489e6 / 0.60750e5 - 0.82826e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 6) + (0.11738e5 / 0.30375e5 * eta - 0.1291e4 / 0.10125e5 * (eta ^ 4) + 0.8474e4 / 0.10125e5 * (eta ^ 3) + 0.20773e5 / 0.30375e5 + 0.4868e4 / 0.3375e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.13529e5 / 0.303750e6 * eta + 0.2867e4 / 0.202500e6 * (eta ^ 4) - 0.8237e4 / 0.101250e6 * (eta ^ 3) - 0.43337e5 / 0.607500e6 - 0.2468e4 / 0.16875e5 * (eta ^ 2)) * (ci2 ^ 2) - 0.77e2 / 0.101250e6 * (eta ^ 4) + 0.167e3 / 0.50625e5 * (eta ^ 3) + 0.1037e4 / 0.303750e6 + 0.389e3 / 0.151875e6 * eta + 0.37e2 / 0.5625e4 * (eta ^ 2)) * cos((2 * g - 2 * h)) + 0.2e1 * (eta - 1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * (ci2 ^ 24) + (-0.1520e4 / 0.81e2 - 0.2464e4 / 0.27e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * (eta ^ 4) - 0.3008e4 / 0.81e2 * (eta ^ 3) - 0.6080e4 / 0.81e2 * eta) * (ci2 ^ 22) + (0.285263e6 / 0.1620e4 * eta + 0.285263e6 / 0.6480e4 + 0.693701e6 / 0.3240e4 * (eta ^ 2) + 0.601e3 / 0.48e2 * (eta ^ 4) + 0.1743e4 / 0.20e2 * (eta ^ 3)) * (ci2 ^ 20) + (-0.384589e6 / 0.1620e4 * eta - 0.384589e6 / 0.6480e4 - 0.103927e6 / 0.360e3 * (eta ^ 2) - 0.811e3 / 0.48e2 * (eta ^ 4) - 0.190429e6 / 0.1620e4 * (eta ^ 3)) * (ci2 ^ 18) + (0.243809e6 / 0.1215e4 * eta + 0.243809e6 / 0.4860e4 + 0.2964691e7 / 0.12150e5 * (eta ^ 2) + 0.38549e5 / 0.2700e4 * (eta ^ 4) + 0.8047e4 / 0.81e2 * (eta ^ 3)) * (ci2 ^ 16) + (-0.43486e5 / 0.405e3 * eta - 0.21743e5 / 0.810e3 - 0.264221e6 / 0.2025e4 * (eta ^ 2) - 0.3419e4 / 0.450e3 * (eta ^ 4) - 0.4294e4 / 0.81e2 * (eta ^ 3)) * (ci2 ^ 14) + (0.16117127e8 / 0.486000e6 * eta + 0.54743e5 / 0.24000e5 * (eta ^ 4) + 0.871823e6 / 0.54000e5 * (eta ^ 3) + 0.16117127e8 / 0.1944000e7 + 0.39042197e8 / 0.972000e6 * (eta ^ 2)) * (ci2 ^ 12) + (-0.1384439e7 / 0.486000e6 * eta - 0.85117e5 / 0.648000e6 * (eta ^ 4) - 0.188413e6 / 0.162000e6 * (eta ^ 3) - 0.1384439e7 / 0.1944000e7 - 0.3227429e7 / 0.972000e6 * (eta ^ 2)) * (ci2 ^ 10) + (-0.513733e6 / 0.243000e6 * eta - 0.20381e5 / 0.108000e6 * (eta ^ 4) - 0.95479e5 / 0.81000e5 * (eta ^ 3) - 0.513733e6 / 0.972000e6 - 0.1286623e7 / 0.486000e6 * (eta ^ 2)) * (ci2 ^ 8) + (0.482927e6 / 0.486000e6 * eta + 0.54053e5 / 0.648000e6 * (eta ^ 4) + 0.28919e5 / 0.54000e5 * (eta ^ 3) + 0.482927e6 / 0.1944000e7 + 0.1199021e7 / 0.972000e6 * (eta ^ 2)) * (ci2 ^ 6) + (-0.828277e6 / 0.4050000e7 * eta - 0.92327e5 / 0.5400000e7 * (eta ^ 4) - 0.148391e6 / 0.1350000e7 * (eta ^ 3) - 0.828277e6 / 0.16200000e8 - 0.2055007e7 / 0.8100000e7 * (eta ^ 2)) * (ci2 ^ 4) + (0.130801e6 / 0.6075000e7 * eta + 0.14651e5 / 0.8100000e7 * (eta ^ 4) + 0.23483e5 / 0.2025000e7 * (eta ^ 3) + 0.130801e6 / 0.24300000e8 + 0.324691e6 / 0.12150000e8 * (eta ^ 2)) * (ci2 ^ 2) - 0.637e3 / 0.8100000e7 * (eta ^ 4) - 0.1021e4 / 0.2025000e7 * (eta ^ 3) - 0.5687e4 / 0.6075000e7 * eta - 0.14117e5 / 0.12150000e8 * (eta ^ 2) - 0.5687e4 / 0.24300000e8) * cos((4 * g + 2 * h)) + ((0.244e3 / 0.45e2 * (eta ^ 3) + 0.1402e4 / 0.135e3 * (eta ^ 2) + 0.1052e4 / 0.135e3 * eta + (eta ^ 4) + 0.263e3 / 0.135e3) * (ci2 ^ 14) + (-0.1052e4 / 0.27e2 * eta - (5 * eta ^ 4) - 0.244e3 / 0.9e1 * (eta ^ 3) - 0.263e3 / 0.27e2 - 0.1402e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 12) + (0.1972e4 / 0.27e2 * eta + 0.701e3 / 0.75e2 * (eta ^ 4) + 0.2284e4 / 0.45e2 * (eta ^ 3) + 0.493e3 / 0.27e2 + 0.65678e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 10) + (-0.1052e4 / 0.15e2 * eta - (9 * eta ^ 4) - 0.244e3 / 0.5e1 * (eta ^ 3) - 0.263e3 / 0.15e2 - 0.1402e4 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.128921e6 / 0.3375e4 * eta + 0.7441e4 / 0.1500e4 * (eta ^ 4) + 0.30067e5 / 0.1125e4 * (eta ^ 3) + 0.128921e6 / 0.13500e5 + 0.344171e6 / 0.6750e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.40427e5 / 0.3375e4 * eta - 0.2387e4 / 0.1500e4 * (eta ^ 4) - 0.9529e4 / 0.1125e4 * (eta ^ 3) - 0.40427e5 / 0.13500e5 - 0.108257e6 / 0.6750e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.91e2 / 0.45e2 * eta + 0.139e3 / 0.500e3 * (eta ^ 4) + 0.109e3 / 0.75e2 * (eta ^ 3) + 0.91e2 / 0.180e3 + 0.6121e4 / 0.2250e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.77e2 / 0.3750e4 * (eta ^ 4) - 0.118e3 / 0.1125e4 * (eta ^ 3) - 0.241e3 / 0.6750e4 - 0.482e3 / 0.3375e4 * eta - 0.3263e4 / 0.16875e5 * (eta ^ 2)) * ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * (ci2 ^ 2) * cos((-2 * h + 4 * g)) / 0.72e2 - 0.2e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 16) + (0.3146e4 / 0.243e3 * eta + 0.5785e4 / 0.243e3 + 0.4108e4 / 0.81e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) + 0.806e3 / 0.27e2 * (eta ^ 3)) * (ci2 ^ 14) + (-0.28079e5 / 0.1215e4 * eta + 0.703e3 / 0.90e2 * (eta ^ 4) - 0.22657e5 / 0.405e3 * (eta ^ 3) - 0.105731e6 / 0.2430e4 - 0.12707e5 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 12) + (0.2987e4 / 0.135e3 * eta - 0.229e3 / 0.30e2 * (eta ^ 4) + 0.7963e4 / 0.135e3 * (eta ^ 3) + 0.11807e5 / 0.270e3 + 0.13157e5 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 10) + (-0.75296e5 / 0.6075e4 * eta + 0.2983e4 / 0.675e3 * (eta ^ 4) - 0.77098e5 / 0.2025e4 * (eta ^ 3) - 0.160444e6 / 0.6075e4 - 0.41449e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.25453e5 / 0.6075e4 * eta - 0.703e3 / 0.450e3 * (eta ^ 4) + 0.30989e5 / 0.2025e4 * (eta ^ 3) + 0.119521e6 / 0.12150e5 + 0.16238e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 6) + (-0.5851e4 / 0.6750e4 * eta + 0.4559e4 / 0.13500e5 * (eta ^ 4) - 0.25049e5 / 0.6750e4 * (eta ^ 3) - 0.30043e5 / 0.13500e5 - 0.19303e5 / 0.3375e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.6667e4 / 0.60750e5 * eta - 0.1741e4 / 0.40500e5 * (eta ^ 4) + 0.9971e4 / 0.20250e5 * (eta ^ 3) + 0.34531e5 / 0.121500e6 + 0.7657e4 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 2) + 0.7e1 / 0.2700e4 * (eta ^ 4) - 0.551e3 / 0.20250e5 * (eta ^ 3) - 0.1943e4 / 0.121500e6 - 0.431e3 / 0.60750e5 * eta - 0.433e3 / 0.10125e5 * (eta ^ 2)) * cos((2 * g)) - (ci2 + 1) * (ci2 - 1) * (eta - 1) * cos((4 * g)) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * (ci2 ^ 18) + (-0.4940e4 / 0.81e2 * eta - 0.1235e4 / 0.81e2 - 0.2002e4 / 0.27e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) - 0.2444e4 / 0.81e2 * (eta ^ 3)) * (ci2 ^ 16) + (0.139343e6 / 0.1215e4 * eta + 0.139343e6 / 0.4860e4 + 0.67777e5 / 0.486e3 * (eta ^ 2) + 0.1469e4 / 0.180e3 * (eta ^ 4) + 0.22997e5 / 0.405e3 * (eta ^ 3)) * (ci2 ^ 14) + (-0.49663e5 / 0.405e3 * eta - 0.35e2 / 0.4e1 * (eta ^ 4) - 0.24623e5 / 0.405e3 * (eta ^ 3) - 0.49663e5 / 0.1620e4 - 0.120821e6 / 0.810e3 * (eta ^ 2)) * (ci2 ^ 12) + (0.498862e6 / 0.6075e4 * eta + 0.7943e4 / 0.1350e4 * (eta ^ 4) + 0.82618e5 / 0.2025e4 * (eta ^ 3) + 0.249431e6 / 0.12150e5 + 0.607121e6 / 0.6075e4 * (eta ^ 2)) * (ci2 ^ 10) + (-0.217334e6 / 0.6075e4 * eta - 0.129e3 / 0.50e2 * (eta ^ 4) - 0.12038e5 / 0.675e3 * (eta ^ 3) - 0.108667e6 / 0.12150e5 - 0.264709e6 / 0.6075e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.137551e6 / 0.13500e5 * eta + 0.13381e5 / 0.18000e5 * (eta ^ 4) + 0.206957e6 / 0.40500e5 * (eta ^ 3) + 0.137551e6 / 0.54000e5 + 0.1006663e7 / 0.81000e5 * (eta ^ 2)) * (ci2 ^ 6) + (-0.224257e6 / 0.121500e6 * eta - 0.4463e4 / 0.32400e5 * (eta ^ 4) - 0.37931e5 / 0.40500e5 * (eta ^ 3) - 0.224257e6 / 0.486000e6 - 0.548611e6 / 0.243000e6 * (eta ^ 2)) * (ci2 ^ 4) + (0.118751e6 / 0.607500e6 * eta + 0.12341e5 / 0.810000e6 * (eta ^ 4) + 0.20533e5 / 0.202500e6 * (eta ^ 3) + 0.118751e6 / 0.2430000e7 + 0.292061e6 / 0.1215000e7 * (eta ^ 2)) * (ci2 ^ 2) - 0.637e3 / 0.810000e6 * (eta ^ 4) - 0.1021e4 / 0.202500e6 * (eta ^ 3) - 0.5687e4 / 0.607500e6 * eta - 0.14117e5 / 0.1215000e7 * (eta ^ 2) - 0.5687e4 / 0.2430000e7)))) / a ^ 4 / (eta ^ 8) -0.81e2 / 0.128e3 * (0.3e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 24) + (0.7565e4 / 0.243e3 + 0.5372e4 / 0.81e2 * (eta ^ 2) - 0.17e2 / 0.3e1 * (eta ^ 4) + 0.1054e4 / 0.27e2 * (eta ^ 3) + 0.4114e4 / 0.243e3 * eta) * (ci2 ^ 22) + (-0.152474e6 / 0.3645e4 * eta - 0.282841e6 / 0.3645e4 - 0.40402e5 / 0.243e3 * (eta ^ 2) + 0.1897e4 / 0.135e3 * (eta ^ 4) - 0.119342e6 / 0.1215e4 * (eta ^ 3)) * (ci2 ^ 20) + (0.216404e6 / 0.3645e4 * eta + 0.407794e6 / 0.3645e4 + 0.294224e6 / 0.1215e4 * (eta ^ 2) - 0.542e3 / 0.27e2 * (eta ^ 4) + 0.174932e6 / 0.1215e4 * (eta ^ 3)) * (ci2 ^ 18) + (-0.326897e6 / 0.6075e4 * eta - 0.1253861e7 / 0.12150e5 - 0.1372112e7 / 0.6075e4 * (eta ^ 2) + 0.74231e5 / 0.4050e4 * (eta ^ 4) - 0.821383e6 / 0.6075e4 * (eta ^ 3)) * (ci2 ^ 16) + (0.120292e6 / 0.3645e4 * eta + 0.1159222e7 / 0.18225e5 + 0.282847e6 / 0.2025e4 * (eta ^ 2) - 0.22811e5 / 0.2025e4 * (eta ^ 4) + 0.101786e6 / 0.1215e4 * (eta ^ 3)) * (ci2 ^ 14) + (-0.438328e6 / 0.30375e5 * eta + 0.5438e4 / 0.1125e4 * (eta ^ 4) - 0.338764e6 / 0.10125e5 * (eta ^ 3) - 0.807332e6 / 0.30375e5 - 0.574966e6 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 12) + (0.49264e5 / 0.10125e5 * eta - 0.5134e4 / 0.3375e4 * (eta ^ 4) + 0.76196e5 / 0.10125e5 * (eta ^ 3) + 0.75968e5 / 0.10125e5 + 0.142462e6 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 10) + (-0.212252e6 / 0.151875e6 * eta + 0.57989e5 / 0.151875e6 * (eta ^ 4) - 0.39878e5 / 0.151875e6 * (eta ^ 3) - 0.214828e6 / 0.151875e6 - 0.74689e5 / 0.50625e5 * (eta ^ 2)) * (ci2 ^ 8) + (0.6349e4 / 0.18225e5 * eta - 0.5003e4 / 0.60750e5 * (eta ^ 4) - 0.11323e5 / 0.30375e5 * (eta ^ 3) + 0.1313e4 / 0.7290e4 - 0.28e2 / 0.125e3 * (eta ^ 2)) * (ci2 ^ 6) + (-0.10009e5 / 0.151875e6 * eta + 0.1451e4 / 0.101250e6 * (eta ^ 4) + 0.17041e5 / 0.151875e6 * (eta ^ 3) - 0.5257e4 / 0.303750e6 + 0.14972e5 / 0.151875e6 * (eta ^ 2)) * (ci2 ^ 4) + (0.694e3 / 0.91125e5 * eta - 0.49e2 / 0.30375e5 * (eta ^ 4) - 0.434e3 / 0.30375e5 * (eta ^ 3) + 0.131e3 / 0.91125e5 - 0.16e2 / 0.1215e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.49e2 / 0.607500e6 * (eta ^ 4) + 0.217e3 / 0.303750e6 * (eta ^ 3) - 0.131e3 / 0.1822500e7 - 0.347e3 / 0.911250e6 * eta + 0.4e1 / 0.6075e4 * (eta ^ 2)) * sin((2 * g + 2 * h)) + (ci2 + 1) * (ci2 - 1) * ((ci2 + 1) * (ci2 - 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 18) + (0.3146e4 / 0.243e3 * eta + 0.5785e4 / 0.243e3 + 0.4108e4 / 0.81e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) + 0.806e3 / 0.27e2 * (eta ^ 3)) * (ci2 ^ 16) + (-0.29524e5 / 0.1215e4 * eta - 0.10858e5 / 0.243e3 - 0.38552e5 / 0.405e3 * (eta ^ 2) + 0.122e3 / 0.15e2 * (eta ^ 4) - 0.7564e4 / 0.135e3 * (eta ^ 3)) * (ci2 ^ 14) + (0.6292e4 / 0.243e3 * eta - 0.26e2 / 0.3e1 * (eta ^ 4) + 0.1612e4 / 0.27e2 * (eta ^ 3) + 0.11570e5 / 0.243e3 + 0.8216e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 12) + (-0.104636e6 / 0.6075e4 * eta + 0.3893e4 / 0.675e3 * (eta ^ 4) - 0.80558e5 / 0.2025e4 * (eta ^ 3) - 0.38522e5 / 0.1215e4 - 0.136811e6 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.45104e5 / 0.6075e4 * eta - 0.1679e4 / 0.675e3 * (eta ^ 4) + 0.34802e5 / 0.2025e4 * (eta ^ 3) + 0.16628e5 / 0.1215e4 + 0.2363e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 8) + (-0.63713e5 / 0.30375e5 * eta + 0.4733e4 / 0.6750e4 * (eta ^ 4) - 0.48689e5 / 0.10125e5 * (eta ^ 3) - 0.233489e6 / 0.60750e5 - 0.82826e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 6) + (0.11738e5 / 0.30375e5 * eta - 0.1291e4 / 0.10125e5 * (eta ^ 4) + 0.8474e4 / 0.10125e5 * (eta ^ 3) + 0.20773e5 / 0.30375e5 + 0.4868e4 / 0.3375e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.13529e5 / 0.303750e6 * eta + 0.2867e4 / 0.202500e6 * (eta ^ 4) - 0.8237e4 / 0.101250e6 * (eta ^ 3) - 0.43337e5 / 0.607500e6 - 0.2468e4 / 0.16875e5 * (eta ^ 2)) * (ci2 ^ 2) - 0.77e2 / 0.101250e6 * (eta ^ 4) + 0.167e3 / 0.50625e5 * (eta ^ 3) + 0.1037e4 / 0.303750e6 + 0.389e3 / 0.151875e6 * eta + 0.37e2 / 0.5625e4 * (eta ^ 2)) * sin((2 * g - 2 * h)) - 0.2e1 * (eta - 1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * (ci2 ^ 24) + (-0.1520e4 / 0.81e2 - 0.2464e4 / 0.27e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * (eta ^ 4) - 0.3008e4 / 0.81e2 * (eta ^ 3) - 0.6080e4 / 0.81e2 * eta) * (ci2 ^ 22) + (0.285263e6 / 0.1620e4 * eta + 0.285263e6 / 0.6480e4 + 0.693701e6 / 0.3240e4 * (eta ^ 2) + 0.601e3 / 0.48e2 * (eta ^ 4) + 0.1743e4 / 0.20e2 * (eta ^ 3)) * (ci2 ^ 20) + (-0.384589e6 / 0.1620e4 * eta - 0.384589e6 / 0.6480e4 - 0.103927e6 / 0.360e3 * (eta ^ 2) - 0.811e3 / 0.48e2 * (eta ^ 4) - 0.190429e6 / 0.1620e4 * (eta ^ 3)) * (ci2 ^ 18) + (0.243809e6 / 0.1215e4 * eta + 0.243809e6 / 0.4860e4 + 0.2964691e7 / 0.12150e5 * (eta ^ 2) + 0.38549e5 / 0.2700e4 * (eta ^ 4) + 0.8047e4 / 0.81e2 * (eta ^ 3)) * (ci2 ^ 16) + (-0.43486e5 / 0.405e3 * eta - 0.21743e5 / 0.810e3 - 0.264221e6 / 0.2025e4 * (eta ^ 2) - 0.3419e4 / 0.450e3 * (eta ^ 4) - 0.4294e4 / 0.81e2 * (eta ^ 3)) * (ci2 ^ 14) + (0.16117127e8 / 0.486000e6 * eta + 0.54743e5 / 0.24000e5 * (eta ^ 4) + 0.871823e6 / 0.54000e5 * (eta ^ 3) + 0.16117127e8 / 0.1944000e7 + 0.39042197e8 / 0.972000e6 * (eta ^ 2)) * (ci2 ^ 12) + (-0.1384439e7 / 0.486000e6 * eta - 0.85117e5 / 0.648000e6 * (eta ^ 4) - 0.188413e6 / 0.162000e6 * (eta ^ 3) - 0.1384439e7 / 0.1944000e7 - 0.3227429e7 / 0.972000e6 * (eta ^ 2)) * (ci2 ^ 10) + (-0.513733e6 / 0.243000e6 * eta - 0.20381e5 / 0.108000e6 * (eta ^ 4) - 0.95479e5 / 0.81000e5 * (eta ^ 3) - 0.513733e6 / 0.972000e6 - 0.1286623e7 / 0.486000e6 * (eta ^ 2)) * (ci2 ^ 8) + (0.482927e6 / 0.486000e6 * eta + 0.54053e5 / 0.648000e6 * (eta ^ 4) + 0.28919e5 / 0.54000e5 * (eta ^ 3) + 0.482927e6 / 0.1944000e7 + 0.1199021e7 / 0.972000e6 * (eta ^ 2)) * (ci2 ^ 6) + (-0.828277e6 / 0.4050000e7 * eta - 0.92327e5 / 0.5400000e7 * (eta ^ 4) - 0.148391e6 / 0.1350000e7 * (eta ^ 3) - 0.828277e6 / 0.16200000e8 - 0.2055007e7 / 0.8100000e7 * (eta ^ 2)) * (ci2 ^ 4) + (0.130801e6 / 0.6075000e7 * eta + 0.14651e5 / 0.8100000e7 * (eta ^ 4) + 0.23483e5 / 0.2025000e7 * (eta ^ 3) + 0.130801e6 / 0.24300000e8 + 0.324691e6 / 0.12150000e8 * (eta ^ 2)) * (ci2 ^ 2) - 0.637e3 / 0.8100000e7 * (eta ^ 4) - 0.1021e4 / 0.2025000e7 * (eta ^ 3) - 0.5687e4 / 0.6075000e7 * eta - 0.14117e5 / 0.12150000e8 * (eta ^ 2) - 0.5687e4 / 0.24300000e8) * sin((4 * g + 2 * h)) + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * ((0.244e3 / 0.45e2 * (eta ^ 3) + 0.1402e4 / 0.135e3 * (eta ^ 2) + 0.1052e4 / 0.135e3 * eta + (eta ^ 4) + 0.263e3 / 0.135e3) * (ci2 ^ 14) + (-0.1052e4 / 0.27e2 * eta - (5 * eta ^ 4) - 0.244e3 / 0.9e1 * (eta ^ 3) - 0.263e3 / 0.27e2 - 0.1402e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 12) + (0.1972e4 / 0.27e2 * eta + 0.701e3 / 0.75e2 * (eta ^ 4) + 0.2284e4 / 0.45e2 * (eta ^ 3) + 0.493e3 / 0.27e2 + 0.65678e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 10) + (-0.1052e4 / 0.15e2 * eta - (9 * eta ^ 4) - 0.244e3 / 0.5e1 * (eta ^ 3) - 0.263e3 / 0.15e2 - 0.1402e4 / 0.15e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.128921e6 / 0.3375e4 * eta + 0.7441e4 / 0.1500e4 * (eta ^ 4) + 0.30067e5 / 0.1125e4 * (eta ^ 3) + 0.128921e6 / 0.13500e5 + 0.344171e6 / 0.6750e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.40427e5 / 0.3375e4 * eta - 0.2387e4 / 0.1500e4 * (eta ^ 4) - 0.9529e4 / 0.1125e4 * (eta ^ 3) - 0.40427e5 / 0.13500e5 - 0.108257e6 / 0.6750e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.91e2 / 0.45e2 * eta + 0.139e3 / 0.500e3 * (eta ^ 4) + 0.109e3 / 0.75e2 * (eta ^ 3) + 0.91e2 / 0.180e3 + 0.6121e4 / 0.2250e4 * (eta ^ 2)) * (ci2 ^ 2) - 0.77e2 / 0.3750e4 * (eta ^ 4) - 0.118e3 / 0.1125e4 * (eta ^ 3) - 0.241e3 / 0.6750e4 - 0.482e3 / 0.3375e4 * eta - 0.3263e4 / 0.16875e5 * (eta ^ 2)) * (eta - 1) * (ci2 ^ 2) * sin((-2 * h + 4 * g)) / 0.72e2 - 0.4e1 * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 20) + (0.3509e4 / 0.243e3 * eta - 0.29e2 / 0.6e1 * (eta ^ 4) + 0.899e3 / 0.27e2 * (eta ^ 3) + 0.12905e5 / 0.486e3 + 0.4582e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 18) + (-0.36727e5 / 0.1215e4 * eta + 0.457e3 / 0.45e2 * (eta ^ 4) - 0.28766e5 / 0.405e3 * (eta ^ 3) - 0.136303e6 / 0.2430e4 - 0.10819e5 / 0.90e2 * (eta ^ 2)) * (ci2 ^ 16) + (0.43574e5 / 0.1215e4 * eta - 0.547e3 / 0.45e2 * (eta ^ 4) + 0.35642e5 / 0.405e3 * (eta ^ 3) + 0.82591e5 / 0.1215e4 + 0.11962e5 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 14) + (-0.160928e6 / 0.6075e4 * eta + 0.2053e4 / 0.225e3 * (eta ^ 4) - 0.141974e6 / 0.2025e4 * (eta ^ 3) - 0.316876e6 / 0.6075e4 - 0.234887e6 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.76388e5 / 0.6075e4 * eta - 0.6011e4 / 0.1350e4 * (eta ^ 4) + 0.75989e5 / 0.2025e4 * (eta ^ 3) + 0.160288e6 / 0.6075e4 + 0.246259e6 / 0.4050e4 * (eta ^ 2)) * (ci2 ^ 10) + (-0.462347e6 / 0.121500e6 * eta + 0.38177e5 / 0.27000e5 * (eta ^ 4) - 0.553681e6 / 0.40500e5 * (eta ^ 3) - 0.2156651e7 / 0.243000e6 - 0.290693e6 / 0.13500e5 * (eta ^ 2)) * (ci2 ^ 8) + (0.21206e5 / 0.30375e5 * eta - 0.2872e4 / 0.10125e5 * (eta ^ 4) + 0.33908e5 / 0.10125e5 * (eta ^ 3) + 0.59311e5 / 0.30375e5 + 0.17171e5 / 0.3375e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.41983e5 / 0.607500e6 * eta + 0.4553e4 / 0.135000e6 * (eta ^ 4) - 0.35603e5 / 0.67500e5 * (eta ^ 3) - 0.326239e6 / 0.1215000e7 - 0.155681e6 / 0.202500e6 * (eta ^ 2)) * (ci2 ^ 4) + (0.91e2 / 0.30375e5 * eta - 0.22e2 / 0.10125e5 * (eta ^ 4) + 0.6e1 / 0.125e3 * (eta ^ 3) + 0.1279e4 / 0.60750e5 + 0.91e2 / 0.1350e4 * (eta ^ 2)) * (ci2 ^ 2) + 0.7e1 / 0.101250e6 * (eta ^ 4) - 0.32e2 / 0.16875e5 * (eta ^ 3) - 0.7e1 / 0.101250e6 * eta - 0.533e3 / 0.202500e6 * (eta ^ 2) - 0.151e3 / 0.202500e6) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (1 + eta) * sin((2 * g)) + 0.2e1 * (ci2 + 1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * (ci2 ^ 22) + (-0.1520e4 / 0.81e2 - 0.2464e4 / 0.27e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * (eta ^ 4) - 0.3008e4 / 0.81e2 * (eta ^ 3) - 0.6080e4 / 0.81e2 * eta) * (ci2 ^ 20) + (0.433463e6 / 0.2430e4 * eta + 0.913e3 / 0.72e2 * (eta ^ 4) + 0.71501e5 / 0.810e3 * (eta ^ 3) + 0.433463e6 / 0.9720e4 + 0.1054061e7 / 0.4860e4 * (eta ^ 2)) * (ci2 ^ 18) + (-0.606041e6 / 0.2430e4 * eta - 0.1279e4 / 0.72e2 * (eta ^ 4) - 0.100067e6 / 0.810e3 * (eta ^ 3) - 0.606041e6 / 0.9720e4 - 0.1474067e7 / 0.4860e4 * (eta ^ 2)) * (ci2 ^ 16) + (0.221633e6 / 0.972e3 * eta + 0.11743e5 / 0.720e3 * (eta ^ 4) + 0.183367e6 / 0.1620e4 * (eta ^ 3) + 0.221633e6 / 0.3888e4 + 0.2696743e7 / 0.9720e4 * (eta ^ 2)) * (ci2 ^ 14) + (-0.695969e6 / 0.4860e4 * eta - 0.111421e6 / 0.10800e5 * (eta ^ 4) - 0.115579e6 / 0.1620e4 * (eta ^ 3) - 0.695969e6 / 0.19440e5 - 0.8475559e7 / 0.48600e5 * (eta ^ 2)) * (ci2 ^ 12) + (0.5109851e7 / 0.81000e5 * eta + 0.496073e6 / 0.108000e6 * (eta ^ 4) + 0.2559451e7 / 0.81000e5 * (eta ^ 3) + 0.5109851e7 / 0.324000e6 + 0.12461521e8 / 0.162000e6 * (eta ^ 2)) * (ci2 ^ 10) + (-0.4741771e7 / 0.243000e6 * eta - 0.467033e6 / 0.324000e6 * (eta ^ 4) - 0.797497e6 / 0.81000e5 * (eta ^ 3) - 0.4741771e7 / 0.972000e6 - 0.11584081e8 / 0.486000e6 * (eta ^ 2)) * (ci2 ^ 8) + (0.2022187e7 / 0.486000e6 * eta + 0.202937e6 / 0.648000e6 * (eta ^ 4) + 0.114451e6 / 0.54000e5 * (eta ^ 3) + 0.2022187e7 / 0.1944000e7 + 0.4951489e7 / 0.972000e6 * (eta ^ 2)) * (ci2 ^ 6) + (-0.284017e6 / 0.486000e6 * eta - 0.146023e6 / 0.3240000e7 * (eta ^ 4) - 0.48827e5 / 0.162000e6 * (eta ^ 3) - 0.284017e6 / 0.1944000e7 - 0.3487679e7 / 0.4860000e7 * (eta ^ 2)) * (ci2 ^ 4) + (0.594769e6 / 0.12150000e8 * eta + 0.63259e5 / 0.16200000e8 * (eta ^ 4) + 0.104027e6 / 0.4050000e7 * (eta ^ 3) + 0.594769e6 / 0.48600000e8 + 0.1466899e7 / 0.24300000e8 * (eta ^ 2)) * (ci2 ^ 2) - 0.637e3 / 0.4050000e7 * (eta ^ 4) - 0.1021e4 / 0.1012500e7 * (eta ^ 3) - 0.5687e4 / 0.3037500e7 * eta - 0.14117e5 / 0.6075000e7 * (eta ^ 2) - 0.5687e4 / 0.12150000e8) * (ci2 - 1) * (eta - 1) * sin((4 * g))) * (ci2 ^ 2)) * (eta - 1) / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 5 / ((1 + eta) ^ 2) * R__e ^ 4 * J ^ 2 / a ^ 4 / (eta ^ 8) 0.9e1 / 0.256e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * (-0.54e2 * (eta - 1) * ((-0.1024e4 / 0.81e2 * eta - 0.1780e4 / 0.243e3 - 0.1729e4 / 0.81e2 * (eta ^ 3) + (eta ^ 5) - 0.199e3 / 0.27e2 * (eta ^ 4) - 0.437e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 16) + (0.4096e4 / 0.81e2 * eta + 0.7120e4 / 0.243e3 + 0.6916e4 / 0.81e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.796e3 / 0.27e2 * (eta ^ 4) + 0.1748e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 14) + (-0.19880e5 / 0.243e3 * eta - 0.175504e6 / 0.3645e4 - 0.177922e6 / 0.1215e4 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.62962e5 / 0.1215e4 * (eta ^ 4) - 0.538e3 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 12) + (0.616e3 / 0.9e1 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) + 0.5656e4 / 0.135e3 + 0.18964e5 / 0.135e3 * (eta ^ 3) + 0.21172e5 / 0.405e3 * (eta ^ 4) + 0.12988e5 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 10) + (-0.20932e5 / 0.675e3 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) - 0.41848e5 / 0.2025e4 - 0.166717e6 / 0.2025e4 * (eta ^ 3) - 0.200299e6 / 0.6075e4 * (eta ^ 4) - 0.101281e6 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.42176e5 / 0.6075e4 * eta + 0.183152e6 / 0.6075e4 * (eta ^ 3) + 0.103664e6 / 0.18225e5 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.80248e5 / 0.6075e4 * (eta ^ 4) + 0.30812e5 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.3728e4 / 0.10125e5 * eta - 0.68122e5 / 0.10125e5 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) - 0.23384e5 / 0.30375e5 - 0.19774e5 / 0.6075e4 * (eta ^ 4) - 0.5182e4 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1252e4 / 0.10125e5 * eta + 0.8462e4 / 0.10125e5 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) + 0.764e3 / 0.30375e5 + 0.182e3 / 0.405e3 * (eta ^ 4) + 0.44e2 / 0.225e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.539e3 / 0.20250e5 * (eta ^ 4) - 0.179e3 / 0.4050e4 * (eta ^ 3) + 0.262e3 / 0.91125e5 + 0.514e3 / 0.30375e5 * eta - 0.53e2 / 0.20250e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((3 * g + 2 * h)) + 0.48e2 * ((0.475e3 / 0.27e2 * eta + 0.95e2 / 0.27e2 + 0.695e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) + 0.25e2 / 0.3e1 * (eta ^ 4) + 0.869e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 16) + (-0.1900e4 / 0.27e2 * eta - 0.380e3 / 0.27e2 - 0.2780e4 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) - 0.100e3 / 0.3e1 * (eta ^ 4) - 0.3476e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 14) + (0.51943e5 / 0.432e3 * eta + 0.51943e5 / 0.2160e4 + 0.38029e5 / 0.216e3 * (eta ^ 3) + 0.549e3 / 0.80e2 * (eta ^ 5) + 0.13699e5 / 0.240e3 * (eta ^ 4) + 0.237617e6 / 0.1080e4 * (eta ^ 2)) * (ci2 ^ 12) + (-0.49429e5 / 0.432e3 * eta - 0.527e3 / 0.80e2 * (eta ^ 5) - 0.49429e5 / 0.2160e4 - 0.36247e5 / 0.216e3 * (eta ^ 3) - 0.13097e5 / 0.240e3 * (eta ^ 4) - 0.226211e6 / 0.1080e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.429461e6 / 0.6480e4 * eta + 0.13933e5 / 0.3600e4 * (eta ^ 5) + 0.429461e6 / 0.32400e5 + 0.315767e6 / 0.3240e4 * (eta ^ 3) + 0.22933e5 / 0.720e3 * (eta ^ 4) + 0.1966771e7 / 0.16200e5 * (eta ^ 2)) * (ci2 ^ 8) + (-0.155197e6 / 0.6480e4 * eta - 0.114559e6 / 0.3240e4 * (eta ^ 3) - 0.155197e6 / 0.32400e5 - 0.5141e4 / 0.3600e4 * (eta ^ 5) - 0.8381e4 / 0.720e3 * (eta ^ 4) - 0.711467e6 / 0.16200e5 * (eta ^ 2)) * (ci2 ^ 6) + (0.685487e6 / 0.129600e6 * eta + 0.20351e5 / 0.2592e4 * (eta ^ 3) + 0.70117e5 / 0.216000e6 * (eta ^ 5) + 0.685487e6 / 0.648000e6 + 0.563993e6 / 0.216000e6 * (eta ^ 4) + 0.3146947e7 / 0.324000e6 * (eta ^ 2)) * (ci2 ^ 4) + (-0.84967e5 / 0.129600e6 * eta - 0.12707e5 / 0.12960e5 * (eta ^ 3) - 0.9037e4 / 0.216000e6 * (eta ^ 5) - 0.84967e5 / 0.648000e6 - 0.71393e5 / 0.216000e6 * (eta ^ 4) - 0.390827e6 / 0.324000e6 * (eta ^ 2)) * (ci2 ^ 2) + 0.4913e4 / 0.270000e6 * (eta ^ 4) + 0.859e3 / 0.16200e5 * (eta ^ 3) + 0.5687e4 / 0.810000e6 + 0.5687e4 / 0.162000e6 * eta + 0.26227e5 / 0.405000e6 * (eta ^ 2) + 0.637e3 / 0.270000e6 * (eta ^ 5)) * ((eta - 1) ^ 2) * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * cos((5 * g + 2 * h)) + 0.8e1 / 0.45e2 * (((eta ^ 3) - 0.131e3 / 0.24e2 * (eta ^ 2) - 0.263e3 / 0.12e2 * eta - 0.263e3 / 0.24e2) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.131e3 / 0.12e2 * (eta ^ 2) + 0.263e3 / 0.6e1 * eta + 0.263e3 / 0.12e2) * (ci2 ^ 6) + (0.7e1 / 0.5e1 * (eta ^ 3) - 0.953e3 / 0.120e3 * (eta ^ 2) - 0.1877e4 / 0.60e2 * eta - 0.1877e4 / 0.120e3) * (ci2 ^ 4) + (-0.2e1 / 0.5e1 * (eta ^ 3) + 0.149e3 / 0.60e2 * (eta ^ 2) + 0.281e3 / 0.30e2 * eta + 0.281e3 / 0.60e2) * (ci2 ^ 2) + (eta ^ 3) / 0.25e2 - 0.677e3 / 0.2400e4 * (eta ^ 2) - 0.241e3 / 0.240e3 * eta - 0.241e3 / 0.480e3) * (eta - 1) * ((1 + eta) ^ 2) * ((ci2 + 1) ^ 2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * cos((-2 * h + 3 * g)) + 0.6e1 * ((1 + eta) ^ 2) * (ci2 + 1) * (ci2 ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 12) + (0.488e3 / 0.27e2 * eta - (3 * eta ^ 5) - 0.1780e4 / 0.27e2 + 0.167e3 / 0.9e1 * (eta ^ 3) + (37 * eta ^ 4) - 0.2239e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.976e3 / 0.45e2 * eta + 0.18e2 / 0.5e1 * (eta ^ 5) + 0.712e3 / 0.9e1 - 0.334e3 / 0.15e2 * (eta ^ 3) - 0.222e3 / 0.5e1 * (eta ^ 4) + 0.4478e4 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.5368e4 / 0.405e3 * eta + 0.1837e4 / 0.135e3 * (eta ^ 3) - 0.3916e4 / 0.81e2 - 0.11e2 / 0.5e1 * (eta ^ 5) + 0.407e3 / 0.15e2 * (eta ^ 4) - 0.24629e5 / 0.405e3 * (eta ^ 2)) * (ci2 ^ 6) + (-0.2828e4 / 0.675e3 * eta - 0.206e3 / 0.45e2 * (eta ^ 3) + 0.166e3 / 0.225e3 * (eta ^ 5) + 0.2156e4 / 0.135e3 - 0.1996e4 / 0.225e3 * (eta ^ 4) + 0.2672e4 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 4) + (0.388e3 / 0.675e3 * eta + 0.13e2 / 0.15e2 * (eta ^ 3) - 0.31e2 / 0.225e3 * (eta ^ 5) - 0.376e3 / 0.135e3 + 0.331e3 / 0.225e3 * (eta ^ 4) - 0.433e3 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.131e3 / 0.1350e4 * (eta ^ 4) - 0.497e3 / 0.6750e4 * (eta ^ 3) + 0.2074e4 / 0.10125e5 - 0.194e3 / 0.10125e5 * eta + 0.4049e4 / 0.20250e5 * (eta ^ 2) + 0.77e2 / 0.6750e4 * (eta ^ 5)) * (ci2 - 1) * cos((g - 2 * h)) + 0.18e2 * (eta - 1) * (1 + eta) * ((-0.3304e4 / 0.81e2 * eta - 0.4060e4 / 0.243e3 - 0.1745e4 / 0.81e2 * (eta ^ 3) + (eta ^ 5) - 0.517e3 / 0.81e2 * (eta ^ 4) - 0.109e3 / 0.3e1 * (eta ^ 2)) * (ci2 ^ 16) + (0.13216e5 / 0.81e2 * eta + 0.16240e5 / 0.243e3 + 0.6980e4 / 0.81e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.2068e4 / 0.81e2 * (eta ^ 4) + 0.436e3 / 0.3e1 * (eta ^ 2)) * (ci2 ^ 14) + (-0.225461e6 / 0.810e3 * eta - 0.276869e6 / 0.2430e4 - 0.39589e5 / 0.270e3 * (eta ^ 3) + 0.34e2 / 0.5e1 * (eta ^ 5) - 0.17566e5 / 0.405e3 * (eta ^ 4) - 0.22309e5 / 0.90e2 * (eta ^ 2)) * (ci2 ^ 12) + (0.213823e6 / 0.810e3 * eta - 0.32e2 / 0.5e1 * (eta ^ 5) + 0.262207e6 / 0.2430e4 + 0.112001e6 / 0.810e3 * (eta ^ 3) + 0.16508e5 / 0.405e3 * (eta ^ 4) + 0.7049e4 / 0.30e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.616429e6 / 0.4050e4 * eta + 0.823e3 / 0.225e3 * (eta ^ 5) - 0.754021e6 / 0.12150e5 - 0.958799e6 / 0.12150e5 * (eta ^ 3) - 0.46733e5 / 0.2025e4 * (eta ^ 4) - 0.182753e6 / 0.1350e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.221933e6 / 0.4050e4 * eta + 0.339073e6 / 0.12150e5 * (eta ^ 3) + 0.270317e6 / 0.12150e5 - 0.296e3 / 0.225e3 * (eta ^ 5) + 0.16216e5 / 0.2025e4 * (eta ^ 4) + 0.65731e5 / 0.1350e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.980767e6 / 0.81000e5 * eta - 0.1454267e7 / 0.243000e6 * (eta ^ 3) + 0.2003e4 / 0.6750e4 * (eta ^ 5) - 0.1186399e7 / 0.243000e6 - 0.33361e5 / 0.20250e5 * (eta ^ 4) - 0.10747e5 / 0.1000e4 * (eta ^ 2)) * (ci2 ^ 4) + (0.40829e5 / 0.27000e5 * eta + 0.173587e6 / 0.243000e6 * (eta ^ 3) - 0.263e3 / 0.6750e4 * (eta ^ 5) + 0.48893e5 / 0.81000e5 + 0.409e3 / 0.2250e4 * (eta ^ 4) + 0.36209e5 / 0.27000e5 * (eta ^ 2)) * (ci2 ^ 2) - 0.823e3 / 0.101250e6 * (eta ^ 4) - 0.5548e4 / 0.151875e6 * (eta ^ 3) - 0.8323e4 / 0.101250e6 * eta - 0.82e2 / 0.1125e4 * (eta ^ 2) - 0.1967e4 / 0.60750e5 + 0.77e2 / 0.33750e5 * (eta ^ 5)) * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * cos((3 * g)) + ((0.263e3 / 0.27e2 * eta + (eta ^ 5) + 0.263e3 / 0.135e3 + 0.442e3 / 0.27e2 * (eta ^ 3) + 0.33e2 / 0.5e1 * (eta ^ 4) + 0.2498e4 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.526e3 / 0.27e2 * eta - 0.884e3 / 0.27e2 * (eta ^ 3) - 0.526e3 / 0.135e3 - (2 * eta ^ 5) - 0.66e2 / 0.5e1 * (eta ^ 4) - 0.4996e4 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.1877e4 / 0.135e3 * eta + 0.3166e4 / 0.135e3 * (eta ^ 3) + 0.109e3 / 0.75e2 * (eta ^ 5) + 0.1877e4 / 0.675e3 + 0.713e3 / 0.75e2 * (eta ^ 4) + 0.17846e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.562e3 / 0.135e3 * eta - 0.956e3 / 0.135e3 * (eta ^ 3) - 0.34e2 / 0.75e2 * (eta ^ 5) - 0.562e3 / 0.675e3 - 0.218e3 / 0.75e2 * (eta ^ 4) - 0.5356e4 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.481e3 / 0.1500e4 * (eta ^ 4) + 0.1037e4 / 0.1350e4 * (eta ^ 3) + 0.241e3 / 0.540e3 * eta + 0.5761e4 / 0.6750e4 * (eta ^ 2) + 0.241e3 / 0.2700e4 + 0.77e2 / 0.1500e4 * (eta ^ 5)) * ((eta - 1) ^ 2) * ((ci2 + 1) ^ 2) * (ci2 ^ 4) * ((ci2 - 1) ^ 2) * cos((5 * g)) - 0.18e2 * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 16) + (0.1952e4 / 0.81e2 * eta - 0.7120e4 / 0.81e2 + 0.668e3 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.148e3 / 0.3e1 * (eta ^ 4) - 0.8956e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 14) + (-0.52808e5 / 0.1215e4 * eta + 0.175504e6 / 0.1215e4 - 0.15986e5 / 0.405e3 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.11446e5 / 0.135e3 * (eta ^ 4) + 0.234562e6 / 0.1215e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.2072e4 / 0.45e2 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) - 0.5656e4 / 0.45e2 + 0.1432e4 / 0.45e2 * (eta ^ 3) + 0.3676e4 / 0.45e2 * (eta ^ 4) - 0.8648e4 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.836e3 / 0.27e2 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) + 0.41848e5 / 0.675e3 - 0.8881e4 / 0.675e3 * (eta ^ 3) - 0.32537e5 / 0.675e3 * (eta ^ 4) + 0.80309e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.3232e4 / 0.243e3 * eta + 0.4336e4 / 0.2025e4 * (eta ^ 3) - 0.103664e6 / 0.6075e4 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.1336e4 / 0.75e2 * (eta ^ 4) - 0.283412e6 / 0.6075e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.35584e5 / 0.10125e5 * eta + 0.278e3 / 0.1125e4 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) + 0.23384e5 / 0.10125e5 - 0.2714e4 / 0.675e3 * (eta ^ 4) + 0.113822e6 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 4) + (0.5284e4 / 0.10125e5 * eta - 0.464e3 / 0.3375e4 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) - 0.764e3 / 0.10125e5 + 0.38e2 / 0.75e2 * (eta ^ 4) - 0.15362e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 2) - 0.553e3 / 0.20250e5 * (eta ^ 4) + 0.19e2 / 0.1350e4 * (eta ^ 3) - 0.1018e4 / 0.30375e5 * eta - 0.262e3 / 0.30375e5 + 0.1067e4 / 0.12150e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * ((1 + eta) ^ 2) * cos(g) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1)) * sqrt((-ci2 ^ 2 + 1)) / ((1 + eta) ^ 3) * R__e ^ 4 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 4 * J ^ 2 * sqrt((-eta ^ 2 + 1)) / a ^ 4 / (eta ^ 10) / ci2 0.9e1 / 0.256e3 * ((ci2 ^ 2) - 0.1e1 / 0.2e1) * sqrt((-ci2 ^ 2 + 1)) / ((1 + eta) ^ 3) * R__e ^ 4 * J ^ 2 / ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) ^ 4 * sqrt((-eta ^ 2 + 1)) * (-0.54e2 * (eta - 1) * (1 + eta) * ((-0.1024e4 / 0.81e2 * eta - 0.1780e4 / 0.243e3 - 0.1729e4 / 0.81e2 * (eta ^ 3) + (eta ^ 5) - 0.199e3 / 0.27e2 * (eta ^ 4) - 0.437e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 16) + (0.4096e4 / 0.81e2 * eta + 0.7120e4 / 0.243e3 + 0.6916e4 / 0.81e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.796e3 / 0.27e2 * (eta ^ 4) + 0.1748e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 14) + (-0.19880e5 / 0.243e3 * eta - 0.175504e6 / 0.3645e4 - 0.177922e6 / 0.1215e4 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.62962e5 / 0.1215e4 * (eta ^ 4) - 0.538e3 / 0.5e1 * (eta ^ 2)) * (ci2 ^ 12) + (0.616e3 / 0.9e1 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) + 0.5656e4 / 0.135e3 + 0.18964e5 / 0.135e3 * (eta ^ 3) + 0.21172e5 / 0.405e3 * (eta ^ 4) + 0.12988e5 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 10) + (-0.20932e5 / 0.675e3 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) - 0.41848e5 / 0.2025e4 - 0.166717e6 / 0.2025e4 * (eta ^ 3) - 0.200299e6 / 0.6075e4 * (eta ^ 4) - 0.101281e6 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 8) + (0.42176e5 / 0.6075e4 * eta + 0.183152e6 / 0.6075e4 * (eta ^ 3) + 0.103664e6 / 0.18225e5 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.80248e5 / 0.6075e4 * (eta ^ 4) + 0.30812e5 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.3728e4 / 0.10125e5 * eta - 0.68122e5 / 0.10125e5 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) - 0.23384e5 / 0.30375e5 - 0.19774e5 / 0.6075e4 * (eta ^ 4) - 0.5182e4 / 0.2025e4 * (eta ^ 2)) * (ci2 ^ 4) + (-0.1252e4 / 0.10125e5 * eta + 0.8462e4 / 0.10125e5 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) + 0.764e3 / 0.30375e5 + 0.182e3 / 0.405e3 * (eta ^ 4) + 0.44e2 / 0.225e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.539e3 / 0.20250e5 * (eta ^ 4) - 0.179e3 / 0.4050e4 * (eta ^ 3) + 0.262e3 / 0.91125e5 + 0.514e3 / 0.30375e5 * eta - 0.53e2 / 0.20250e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((3 * g + 2 * h)) + 0.48e2 * (ci2 + 1) * (ci2 - 1) * ((eta - 1) ^ 2) * (ci2 ^ 2) * ((0.475e3 / 0.27e2 * eta + 0.95e2 / 0.27e2 + 0.695e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) + 0.25e2 / 0.3e1 * (eta ^ 4) + 0.869e3 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 16) + (-0.1900e4 / 0.27e2 * eta - 0.380e3 / 0.27e2 - 0.2780e4 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) - 0.100e3 / 0.3e1 * (eta ^ 4) - 0.3476e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 14) + (0.51943e5 / 0.432e3 * eta + 0.51943e5 / 0.2160e4 + 0.38029e5 / 0.216e3 * (eta ^ 3) + 0.549e3 / 0.80e2 * (eta ^ 5) + 0.13699e5 / 0.240e3 * (eta ^ 4) + 0.237617e6 / 0.1080e4 * (eta ^ 2)) * (ci2 ^ 12) + (-0.49429e5 / 0.432e3 * eta - 0.527e3 / 0.80e2 * (eta ^ 5) - 0.49429e5 / 0.2160e4 - 0.36247e5 / 0.216e3 * (eta ^ 3) - 0.13097e5 / 0.240e3 * (eta ^ 4) - 0.226211e6 / 0.1080e4 * (eta ^ 2)) * (ci2 ^ 10) + (0.429461e6 / 0.6480e4 * eta + 0.13933e5 / 0.3600e4 * (eta ^ 5) + 0.429461e6 / 0.32400e5 + 0.315767e6 / 0.3240e4 * (eta ^ 3) + 0.22933e5 / 0.720e3 * (eta ^ 4) + 0.1966771e7 / 0.16200e5 * (eta ^ 2)) * (ci2 ^ 8) + (-0.155197e6 / 0.6480e4 * eta - 0.114559e6 / 0.3240e4 * (eta ^ 3) - 0.155197e6 / 0.32400e5 - 0.5141e4 / 0.3600e4 * (eta ^ 5) - 0.8381e4 / 0.720e3 * (eta ^ 4) - 0.711467e6 / 0.16200e5 * (eta ^ 2)) * (ci2 ^ 6) + (0.685487e6 / 0.129600e6 * eta + 0.20351e5 / 0.2592e4 * (eta ^ 3) + 0.70117e5 / 0.216000e6 * (eta ^ 5) + 0.685487e6 / 0.648000e6 + 0.563993e6 / 0.216000e6 * (eta ^ 4) + 0.3146947e7 / 0.324000e6 * (eta ^ 2)) * (ci2 ^ 4) + (-0.84967e5 / 0.129600e6 * eta - 0.12707e5 / 0.12960e5 * (eta ^ 3) - 0.9037e4 / 0.216000e6 * (eta ^ 5) - 0.84967e5 / 0.648000e6 - 0.71393e5 / 0.216000e6 * (eta ^ 4) - 0.390827e6 / 0.324000e6 * (eta ^ 2)) * (ci2 ^ 2) + 0.4913e4 / 0.270000e6 * (eta ^ 4) + 0.859e3 / 0.16200e5 * (eta ^ 3) + 0.5687e4 / 0.810000e6 + 0.5687e4 / 0.162000e6 * eta + 0.26227e5 / 0.405000e6 * (eta ^ 2) + 0.637e3 / 0.270000e6 * (eta ^ 5)) * sin((5 * g + 2 * h)) - 0.8e1 / 0.45e2 * ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * (eta - 1) * ((1 + eta) ^ 2) * (((eta ^ 3) - 0.131e3 / 0.24e2 * (eta ^ 2) - 0.263e3 / 0.12e2 * eta - 0.263e3 / 0.24e2) * (ci2 ^ 8) + (-(2 * eta ^ 3) + 0.131e3 / 0.12e2 * (eta ^ 2) + 0.263e3 / 0.6e1 * eta + 0.263e3 / 0.12e2) * (ci2 ^ 6) + (0.7e1 / 0.5e1 * (eta ^ 3) - 0.953e3 / 0.120e3 * (eta ^ 2) - 0.1877e4 / 0.60e2 * eta - 0.1877e4 / 0.120e3) * (ci2 ^ 4) + (-0.2e1 / 0.5e1 * (eta ^ 3) + 0.149e3 / 0.60e2 * (eta ^ 2) + 0.281e3 / 0.30e2 * eta + 0.281e3 / 0.60e2) * (ci2 ^ 2) + (eta ^ 3) / 0.25e2 - 0.677e3 / 0.2400e4 * (eta ^ 2) - 0.241e3 / 0.240e3 * eta - 0.241e3 / 0.480e3) * (ci2 ^ 4) * sin((-2 * h + 3 * g)) - 0.6e1 * (ci2 + 1) * (ci2 - 1) * ((1 + eta) ^ 2) * (ci2 ^ 2) * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 12) + (0.488e3 / 0.27e2 * eta - (3 * eta ^ 5) - 0.1780e4 / 0.27e2 + 0.167e3 / 0.9e1 * (eta ^ 3) + (37 * eta ^ 4) - 0.2239e4 / 0.27e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.976e3 / 0.45e2 * eta + 0.18e2 / 0.5e1 * (eta ^ 5) + 0.712e3 / 0.9e1 - 0.334e3 / 0.15e2 * (eta ^ 3) - 0.222e3 / 0.5e1 * (eta ^ 4) + 0.4478e4 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 8) + (0.5368e4 / 0.405e3 * eta + 0.1837e4 / 0.135e3 * (eta ^ 3) - 0.3916e4 / 0.81e2 - 0.11e2 / 0.5e1 * (eta ^ 5) + 0.407e3 / 0.15e2 * (eta ^ 4) - 0.24629e5 / 0.405e3 * (eta ^ 2)) * (ci2 ^ 6) + (-0.2828e4 / 0.675e3 * eta - 0.206e3 / 0.45e2 * (eta ^ 3) + 0.166e3 / 0.225e3 * (eta ^ 5) + 0.2156e4 / 0.135e3 - 0.1996e4 / 0.225e3 * (eta ^ 4) + 0.2672e4 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 4) + (0.388e3 / 0.675e3 * eta + 0.13e2 / 0.15e2 * (eta ^ 3) - 0.31e2 / 0.225e3 * (eta ^ 5) - 0.376e3 / 0.135e3 + 0.331e3 / 0.225e3 * (eta ^ 4) - 0.433e3 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 2) - 0.131e3 / 0.1350e4 * (eta ^ 4) - 0.497e3 / 0.6750e4 * (eta ^ 3) + 0.2074e4 / 0.10125e5 - 0.194e3 / 0.10125e5 * eta + 0.4049e4 / 0.20250e5 * (eta ^ 2) + 0.77e2 / 0.6750e4 * (eta ^ 5)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((g - 2 * h)) + 0.18e2 * (ci2 + 1) * (ci2 - 1) * (eta - 1) * (1 + eta) * (((eta ^ 5) - 0.571e3 / 0.27e2 * (eta ^ 3) + 0.1256e4 / 0.81e2 * eta - 0.677e3 / 0.81e2 * (eta ^ 4) + 0.107e3 / 0.27e2 * (eta ^ 2) + 0.500e3 / 0.243e3) * (ci2 ^ 16) + (-(4 * eta ^ 5) + 0.2284e4 / 0.27e2 * (eta ^ 3) - 0.5024e4 / 0.81e2 * eta + 0.2708e4 / 0.81e2 * (eta ^ 4) - 0.428e3 / 0.27e2 * (eta ^ 2) - 0.2000e4 / 0.243e3) * (ci2 ^ 14) + (0.34e2 / 0.5e1 * (eta ^ 5) - 0.116377e6 / 0.810e3 * (eta ^ 3) + 0.86197e5 / 0.810e3 * eta - 0.4606e4 / 0.81e2 * (eta ^ 4) + 0.1499e4 / 0.54e2 * (eta ^ 2) + 0.34789e5 / 0.2430e4) * (ci2 ^ 12) + (0.36437e5 / 0.270e3 * (eta ^ 3) - 0.82751e5 / 0.810e3 * eta + 0.4340e4 / 0.81e2 * (eta ^ 4) - 0.1501e4 / 0.54e2 * (eta ^ 2) - 0.34367e5 / 0.2430e4 - 0.32e2 / 0.5e1 * (eta ^ 5)) * (ci2 ^ 10) + (0.823e3 / 0.225e3 * (eta ^ 5) - 0.185897e6 / 0.2430e4 * (eta ^ 3) + 0.80831e5 / 0.1350e4 * eta - 0.61733e5 / 0.2025e4 * (eta ^ 4) + 0.23317e5 / 0.1350e4 * (eta ^ 2) + 0.34967e5 / 0.4050e4) * (ci2 ^ 8) + (-0.296e3 / 0.225e3 * (eta ^ 5) + 0.65059e5 / 0.2430e4 * (eta ^ 3) - 0.9829e4 / 0.450e3 * eta + 0.21616e5 / 0.2025e4 * (eta ^ 4) - 0.9059e4 / 0.1350e4 * (eta ^ 2) - 0.4453e4 / 0.1350e4) * (ci2 ^ 6) + (-0.1373629e7 / 0.243000e6 * (eta ^ 3) + 0.130069e6 / 0.27000e5 * eta - 0.45217e5 / 0.20250e5 * (eta ^ 4) + 0.42161e5 / 0.27000e5 * (eta ^ 2) + 0.2461e4 / 0.3240e4 + 0.2003e4 / 0.6750e4 * (eta ^ 5)) * (ci2 ^ 4) + (0.160229e6 / 0.243000e6 * (eta ^ 3) - 0.47447e5 / 0.81000e5 * eta + 0.5137e4 / 0.20250e5 * (eta ^ 4) - 0.5321e4 / 0.27000e5 * (eta ^ 2) - 0.4651e4 / 0.48600e5 - 0.263e3 / 0.6750e4 * (eta ^ 5)) * (ci2 ^ 2) - 0.1207e4 / 0.101250e6 * (eta ^ 4) + 0.19e2 / 0.3750e4 + 0.113e3 / 0.3750e4 * eta + 0.7e1 / 0.675e3 * (eta ^ 2) - 0.4949e4 / 0.151875e6 * (eta ^ 3) + 0.77e2 / 0.33750e5 * (eta ^ 5)) * (ci2 ^ 2) * sin((3 * g)) + ((ci2 + 1) ^ 2) * ((ci2 - 1) ^ 2) * ((eta - 1) ^ 2) * (ci2 ^ 4) * ((0.263e3 / 0.27e2 * eta + (eta ^ 5) + 0.263e3 / 0.135e3 + 0.442e3 / 0.27e2 * (eta ^ 3) + 0.33e2 / 0.5e1 * (eta ^ 4) + 0.2498e4 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 8) + (-0.526e3 / 0.27e2 * eta - 0.884e3 / 0.27e2 * (eta ^ 3) - 0.526e3 / 0.135e3 - (2 * eta ^ 5) - 0.66e2 / 0.5e1 * (eta ^ 4) - 0.4996e4 / 0.135e3 * (eta ^ 2)) * (ci2 ^ 6) + (0.1877e4 / 0.135e3 * eta + 0.3166e4 / 0.135e3 * (eta ^ 3) + 0.109e3 / 0.75e2 * (eta ^ 5) + 0.1877e4 / 0.675e3 + 0.713e3 / 0.75e2 * (eta ^ 4) + 0.17846e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 4) + (-0.562e3 / 0.135e3 * eta - 0.956e3 / 0.135e3 * (eta ^ 3) - 0.34e2 / 0.75e2 * (eta ^ 5) - 0.562e3 / 0.675e3 - 0.218e3 / 0.75e2 * (eta ^ 4) - 0.5356e4 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 2) + 0.481e3 / 0.1500e4 * (eta ^ 4) + 0.1037e4 / 0.1350e4 * (eta ^ 3) + 0.241e3 / 0.540e3 * eta + 0.5761e4 / 0.6750e4 * (eta ^ 2) + 0.241e3 / 0.2700e4 + 0.77e2 / 0.1500e4 * (eta ^ 5)) * sin((5 * g)) + 0.18e2 * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 16) + (0.1952e4 / 0.81e2 * eta - 0.7120e4 / 0.81e2 + 0.668e3 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.148e3 / 0.3e1 * (eta ^ 4) - 0.8956e4 / 0.81e2 * (eta ^ 2)) * (ci2 ^ 14) + (-0.52808e5 / 0.1215e4 * eta + 0.175504e6 / 0.1215e4 - 0.15986e5 / 0.405e3 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.11446e5 / 0.135e3 * (eta ^ 4) + 0.234562e6 / 0.1215e4 * (eta ^ 2)) * (ci2 ^ 12) + (0.2072e4 / 0.45e2 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) - 0.5656e4 / 0.45e2 + 0.1432e4 / 0.45e2 * (eta ^ 3) + 0.3676e4 / 0.45e2 * (eta ^ 4) - 0.8648e4 / 0.45e2 * (eta ^ 2)) * (ci2 ^ 10) + (-0.836e3 / 0.27e2 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) + 0.41848e5 / 0.675e3 - 0.8881e4 / 0.675e3 * (eta ^ 3) - 0.32537e5 / 0.675e3 * (eta ^ 4) + 0.80309e5 / 0.675e3 * (eta ^ 2)) * (ci2 ^ 8) + (0.3232e4 / 0.243e3 * eta + 0.4336e4 / 0.2025e4 * (eta ^ 3) - 0.103664e6 / 0.6075e4 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.1336e4 / 0.75e2 * (eta ^ 4) - 0.283412e6 / 0.6075e4 * (eta ^ 2)) * (ci2 ^ 6) + (-0.35584e5 / 0.10125e5 * eta + 0.278e3 / 0.1125e4 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) + 0.23384e5 / 0.10125e5 - 0.2714e4 / 0.675e3 * (eta ^ 4) + 0.113822e6 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 4) + (0.5284e4 / 0.10125e5 * eta - 0.464e3 / 0.3375e4 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) - 0.764e3 / 0.10125e5 + 0.38e2 / 0.75e2 * (eta ^ 4) - 0.15362e5 / 0.10125e5 * (eta ^ 2)) * (ci2 ^ 2) - 0.553e3 / 0.20250e5 * (eta ^ 4) + 0.19e2 / 0.1350e4 * (eta ^ 3) - 0.1018e4 / 0.30375e5 * eta - 0.262e3 / 0.30375e5 + 0.1067e4 / 0.12150e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * ((1 + eta) ^ 2) * sin(g) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1)) / a ^ 4 / (eta ^ 10) / ci2];
	D4 = [0.81e2 / 0.32e2 * (eta - 1) / ((1 + eta) ^ 2) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * ((ci2 + 0.1e1) * (ci2 - 0.1e1) * (1 + eta) * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 12 + (0.62e2 / 0.3e1 * (eta ^ 3) + 0.316e3 / 0.9e1 * (eta ^ 2) + 0.242e3 / 0.27e2 * eta - (3 * eta ^ 4) + 0.445e3 / 0.27e2) * ci2 ^ 10 + (-0.124e3 / 0.5e1 * (eta ^ 3) - 0.632e3 / 0.15e2 * (eta ^ 2) - 0.484e3 / 0.45e2 * eta + 0.18e2 / 0.5e1 * (eta ^ 4) - 0.178e3 / 0.9e1) * ci2 ^ 8 + (0.682e3 / 0.45e2 * (eta ^ 3) + 0.3476e4 / 0.135e3 * (eta ^ 2) + 0.2662e4 / 0.405e3 * eta - 0.11e2 / 0.5e1 * (eta ^ 4) + 0.979e3 / 0.81e2) * ci2 ^ 6 + (-0.3328e4 / 0.675e3 * (eta ^ 3) - 0.1141e4 / 0.135e3 * (eta ^ 2) - 0.1502e4 / 0.675e3 * eta + 0.166e3 / 0.225e3 * (eta ^ 4) - 0.539e3 / 0.135e3) * ci2 ^ 4 + (0.538e3 / 0.675e3 * (eta ^ 3) + 0.193e3 / 0.135e3 * (eta ^ 2) + 0.292e3 / 0.675e3 * eta - 0.31e2 / 0.225e3 * (eta ^ 4) + 0.94e2 / 0.135e3) * ci2 ^ 2 + 0.77e2 / 0.6750e4 * (eta ^ 4) - 0.167e3 / 0.3375e4 * (eta ^ 3) - 0.1037e4 / 0.20250e5 - 0.389e3 / 0.10125e5 * eta - 0.37e2 / 0.375e3 * (eta ^ 2)) * sin((-h + 2 * g)) / 0.3e1 + (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * (eta - 1) * ((0.244e3 / 0.45e2 * (eta ^ 3) + 0.1402e4 / 0.135e3 * (eta ^ 2) + 0.1052e4 / 0.135e3 * eta + (eta ^ 4) + 0.263e3 / 0.135e3) * ci2 ^ 8 + (-0.488e3 / 0.45e2 * (eta ^ 3) - 0.2804e4 / 0.135e3 * (eta ^ 2) - 0.2104e4 / 0.135e3 * eta - (2 * eta ^ 4) - 0.526e3 / 0.135e3) * ci2 ^ 6 + (0.1756e4 / 0.225e3 * (eta ^ 3) + 0.2006e4 / 0.135e3 * (eta ^ 2) + 0.7508e4 / 0.675e3 * eta + 0.109e3 / 0.75e2 * (eta ^ 4) + 0.1877e4 / 0.675e3) * ci2 ^ 4 + (-0.536e3 / 0.225e3 * (eta ^ 3) - 0.604e3 / 0.135e3 * (eta ^ 2) - 0.2248e4 / 0.675e3 * eta - 0.34e2 / 0.75e2 * (eta ^ 4) - 0.562e3 / 0.675e3) * ci2 ^ 2 + 0.77e2 / 0.1500e4 * (eta ^ 4) + 0.59e2 / 0.225e3 * (eta ^ 3) + 0.241e3 / 0.675e3 * eta + 0.3263e4 / 0.6750e4 * (eta ^ 2) + 0.241e3 / 0.2700e4) * ci2 ^ 4 * sin((-h + 4 * g)) / 0.72e2 + ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 16 + (0.248e3 / 0.9e1 * (eta ^ 3) + 0.1264e4 / 0.27e2 * (eta ^ 2) + 0.968e3 / 0.81e2 * eta - (4 * eta ^ 4) + 0.1780e4 / 0.81e2) * ci2 ^ 14 + (-0.3892e4 / 0.81e2 * (eta ^ 3) - 0.32318e5 / 0.405e3 * (eta ^ 2) - 0.4504e4 / 0.243e3 * eta + 0.286e3 / 0.45e2 * (eta ^ 4) - 0.43876e5 / 0.1215e4) * ci2 ^ 12 + (0.1288e4 / 0.27e2 * (eta ^ 3) + 0.10198e5 / 0.135e3 * (eta ^ 2) + 0.124e3 / 0.9e1 * eta - 0.76e2 / 0.15e2 * (eta ^ 4) + 0.1414e4 / 0.45e2) * ci2 ^ 10 + (-0.59582e5 / 0.2025e4 * (eta ^ 3) - 0.87799e5 / 0.2025e4 * (eta ^ 2) - 0.2996e4 / 0.675e3 * eta + 0.1373e4 / 0.675e3 * (eta ^ 4) - 0.10462e5 / 0.675e3) * ci2 ^ 8 + (0.23264e5 / 0.2025e4 * (eta ^ 3) + 0.3472e4 / 0.225e3 * (eta ^ 2) - 0.872e3 / 0.6075e4 * eta - 0.196e3 / 0.675e3 * (eta ^ 4) + 0.25916e5 / 0.6075e4) * ci2 ^ 6 + (-0.27916e5 / 0.10125e5 * (eta ^ 3) - 0.33644e5 / 0.10125e5 * (eta ^ 2) + 0.5156e4 / 0.10125e5 * eta - 0.194e3 / 0.3375e4 * (eta ^ 4) - 0.5846e4 / 0.10125e5) * ci2 ^ 4 + (0.1252e4 / 0.3375e4 * (eta ^ 3) + 0.1333e4 / 0.3375e4 * (eta ^ 2) - 0.1346e4 / 0.10125e5 * eta + 0.28e2 / 0.1125e4 * (eta ^ 4) + 0.191e3 / 0.10125e5) * ci2 ^ 2 - 0.49e2 / 0.20250e5 * (eta ^ 4) - 0.217e3 / 0.10125e5 * (eta ^ 3) + 0.347e3 / 0.30375e5 * eta + 0.131e3 / 0.60750e5 - 0.8e1 / 0.405e3 * (eta ^ 2)) * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((h + 2 * g)) - 0.2e1 / 0.3e1 * (ci2 + 0.1e1) * sin((h + 4 * g)) * (ci2 - 0.1e1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * ci2 ^ 16 + (-0.752e3 / 0.27e2 * (eta ^ 3) - 0.616e3 / 0.9e1 * (eta ^ 2) - 0.1520e4 / 0.27e2 * eta - (4 * eta ^ 4) - 0.380e3 / 0.27e2) * ci2 ^ 14 + (0.25751e5 / 0.540e3 * (eta ^ 3) + 0.25273e5 / 0.216e3 * (eta ^ 2) + 0.51943e5 / 0.540e3 * eta + 0.549e3 / 0.80e2 * (eta ^ 4) + 0.51943e5 / 0.2160e4) * ci2 ^ 12 + (-0.24613e5 / 0.540e3 * (eta ^ 3) - 0.2675e4 / 0.24e2 * (eta ^ 2) - 0.49429e5 / 0.540e3 * eta - 0.527e3 / 0.80e2 * (eta ^ 4) - 0.49429e5 / 0.2160e4) * ci2 ^ 10 + (0.23933e5 / 0.900e3 * (eta ^ 3) + 0.1047671e7 / 0.16200e5 * (eta ^ 2) + 0.429461e6 / 0.8100e4 * eta + 0.13933e5 / 0.3600e4 * (eta ^ 4) + 0.429461e6 / 0.32400e5) * ci2 ^ 8 + (-0.8741e4 / 0.900e3 * (eta ^ 3) - 0.379567e6 / 0.16200e5 * (eta ^ 2) - 0.155197e6 / 0.8100e4 * eta - 0.5141e4 / 0.3600e4 * (eta ^ 4) - 0.155197e6 / 0.32400e5) * ci2 ^ 6 + (0.117541e6 / 0.54000e5 * (eta ^ 3) + 0.1682477e7 / 0.324000e6 * (eta ^ 2) + 0.685487e6 / 0.162000e6 * eta + 0.70117e5 / 0.216000e6 * (eta ^ 4) + 0.685487e6 / 0.648000e6) * ci2 ^ 4 + (-0.14861e5 / 0.54000e5 * (eta ^ 3) - 0.209557e6 / 0.324000e6 * (eta ^ 2) - 0.84967e5 / 0.162000e6 * eta - 0.9037e4 / 0.216000e6 * (eta ^ 4) - 0.84967e5 / 0.648000e6) * ci2 ^ 2 + 0.637e3 / 0.270000e6 * (eta ^ 4) + 0.5687e4 / 0.810000e6 + 0.1021e4 / 0.67500e5 * (eta ^ 3) + 0.5687e4 / 0.202500e6 * eta + 0.14117e5 / 0.405000e6 * (eta ^ 2)) * (eta - 1) * ci2 ^ 2) * R__e ^ 4 * J ^ 2 * sqrt(-ci2 ^ 2 + 0.1e1) / (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) ^ 4 / a ^ 5 / (eta ^ 8) / ci2 0 -0.81e2 / 0.128e3 * (0.3e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 24 + (0.7565e4 / 0.243e3 + 0.5372e4 / 0.81e2 * (eta ^ 2) - 0.17e2 / 0.3e1 * (eta ^ 4) + 0.1054e4 / 0.27e2 * (eta ^ 3) + 0.4114e4 / 0.243e3 * eta) * ci2 ^ 22 + (-0.152474e6 / 0.3645e4 * eta - 0.282841e6 / 0.3645e4 - 0.40402e5 / 0.243e3 * (eta ^ 2) + 0.1897e4 / 0.135e3 * (eta ^ 4) - 0.119342e6 / 0.1215e4 * (eta ^ 3)) * ci2 ^ 20 + (0.216404e6 / 0.3645e4 * eta + 0.407794e6 / 0.3645e4 + 0.294224e6 / 0.1215e4 * (eta ^ 2) - 0.542e3 / 0.27e2 * (eta ^ 4) + 0.174932e6 / 0.1215e4 * (eta ^ 3)) * ci2 ^ 18 + (-0.326897e6 / 0.6075e4 * eta - 0.1253861e7 / 0.12150e5 - 0.1372112e7 / 0.6075e4 * (eta ^ 2) + 0.74231e5 / 0.4050e4 * (eta ^ 4) - 0.821383e6 / 0.6075e4 * (eta ^ 3)) * ci2 ^ 16 + (0.120292e6 / 0.3645e4 * eta + 0.1159222e7 / 0.18225e5 + 0.282847e6 / 0.2025e4 * (eta ^ 2) - 0.22811e5 / 0.2025e4 * (eta ^ 4) + 0.101786e6 / 0.1215e4 * (eta ^ 3)) * ci2 ^ 14 + (-0.438328e6 / 0.30375e5 * eta + 0.5438e4 / 0.1125e4 * (eta ^ 4) - 0.338764e6 / 0.10125e5 * (eta ^ 3) - 0.807332e6 / 0.30375e5 - 0.574966e6 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 12 + (0.49264e5 / 0.10125e5 * eta - 0.5134e4 / 0.3375e4 * (eta ^ 4) + 0.76196e5 / 0.10125e5 * (eta ^ 3) + 0.75968e5 / 0.10125e5 + 0.142462e6 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 10 + (-0.212252e6 / 0.151875e6 * eta + 0.57989e5 / 0.151875e6 * (eta ^ 4) - 0.39878e5 / 0.151875e6 * (eta ^ 3) - 0.214828e6 / 0.151875e6 - 0.74689e5 / 0.50625e5 * (eta ^ 2)) * ci2 ^ 8 + (0.6349e4 / 0.18225e5 * eta - 0.5003e4 / 0.60750e5 * (eta ^ 4) - 0.11323e5 / 0.30375e5 * (eta ^ 3) + 0.1313e4 / 0.7290e4 - 0.28e2 / 0.125e3 * (eta ^ 2)) * ci2 ^ 6 + (-0.10009e5 / 0.151875e6 * eta + 0.1451e4 / 0.101250e6 * (eta ^ 4) + 0.17041e5 / 0.151875e6 * (eta ^ 3) - 0.5257e4 / 0.303750e6 + 0.14972e5 / 0.151875e6 * (eta ^ 2)) * ci2 ^ 4 + (0.694e3 / 0.91125e5 * eta - 0.49e2 / 0.30375e5 * (eta ^ 4) - 0.434e3 / 0.30375e5 * (eta ^ 3) + 0.131e3 / 0.91125e5 - 0.16e2 / 0.1215e4 * (eta ^ 2)) * ci2 ^ 2 + 0.49e2 / 0.607500e6 * (eta ^ 4) + 0.217e3 / 0.303750e6 * (eta ^ 3) - 0.131e3 / 0.1822500e7 - 0.347e3 / 0.911250e6 * eta + 0.4e1 / 0.6075e4 * (eta ^ 2)) * sin((2 * g + 2 * h)) + (ci2 + 0.1e1) * (ci2 - 0.1e1) * ((ci2 + 0.1e1) * (ci2 - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 18 + (0.3146e4 / 0.243e3 * eta + 0.5785e4 / 0.243e3 + 0.4108e4 / 0.81e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) + 0.806e3 / 0.27e2 * (eta ^ 3)) * ci2 ^ 16 + (-0.29524e5 / 0.1215e4 * eta - 0.10858e5 / 0.243e3 - 0.38552e5 / 0.405e3 * (eta ^ 2) + 0.122e3 / 0.15e2 * (eta ^ 4) - 0.7564e4 / 0.135e3 * (eta ^ 3)) * ci2 ^ 14 + (0.6292e4 / 0.243e3 * eta - 0.26e2 / 0.3e1 * (eta ^ 4) + 0.1612e4 / 0.27e2 * (eta ^ 3) + 0.11570e5 / 0.243e3 + 0.8216e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 12 + (-0.104636e6 / 0.6075e4 * eta + 0.3893e4 / 0.675e3 * (eta ^ 4) - 0.80558e5 / 0.2025e4 * (eta ^ 3) - 0.38522e5 / 0.1215e4 - 0.136811e6 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 10 + (0.45104e5 / 0.6075e4 * eta - 0.1679e4 / 0.675e3 * (eta ^ 4) + 0.34802e5 / 0.2025e4 * (eta ^ 3) + 0.16628e5 / 0.1215e4 + 0.2363e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 8 + (-0.63713e5 / 0.30375e5 * eta + 0.4733e4 / 0.6750e4 * (eta ^ 4) - 0.48689e5 / 0.10125e5 * (eta ^ 3) - 0.233489e6 / 0.60750e5 - 0.82826e5 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 6 + (0.11738e5 / 0.30375e5 * eta - 0.1291e4 / 0.10125e5 * (eta ^ 4) + 0.8474e4 / 0.10125e5 * (eta ^ 3) + 0.20773e5 / 0.30375e5 + 0.4868e4 / 0.3375e4 * (eta ^ 2)) * ci2 ^ 4 + (-0.13529e5 / 0.303750e6 * eta + 0.2867e4 / 0.202500e6 * (eta ^ 4) - 0.8237e4 / 0.101250e6 * (eta ^ 3) - 0.43337e5 / 0.607500e6 - 0.2468e4 / 0.16875e5 * (eta ^ 2)) * ci2 ^ 2 - 0.77e2 / 0.101250e6 * (eta ^ 4) + 0.167e3 / 0.50625e5 * (eta ^ 3) + 0.1037e4 / 0.303750e6 + 0.389e3 / 0.151875e6 * eta + 0.37e2 / 0.5625e4 * (eta ^ 2)) * sin((2 * g - 2 * h)) - 0.2e1 * (eta - 1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * ci2 ^ 24 + (-0.1520e4 / 0.81e2 - 0.2464e4 / 0.27e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * (eta ^ 4) - 0.3008e4 / 0.81e2 * (eta ^ 3) - 0.6080e4 / 0.81e2 * eta) * ci2 ^ 22 + (0.285263e6 / 0.1620e4 * eta + 0.285263e6 / 0.6480e4 + 0.693701e6 / 0.3240e4 * (eta ^ 2) + 0.601e3 / 0.48e2 * (eta ^ 4) + 0.1743e4 / 0.20e2 * (eta ^ 3)) * ci2 ^ 20 + (-0.384589e6 / 0.1620e4 * eta - 0.384589e6 / 0.6480e4 - 0.103927e6 / 0.360e3 * (eta ^ 2) - 0.811e3 / 0.48e2 * (eta ^ 4) - 0.190429e6 / 0.1620e4 * (eta ^ 3)) * ci2 ^ 18 + (0.243809e6 / 0.1215e4 * eta + 0.243809e6 / 0.4860e4 + 0.2964691e7 / 0.12150e5 * (eta ^ 2) + 0.38549e5 / 0.2700e4 * (eta ^ 4) + 0.8047e4 / 0.81e2 * (eta ^ 3)) * ci2 ^ 16 + (-0.43486e5 / 0.405e3 * eta - 0.21743e5 / 0.810e3 - 0.264221e6 / 0.2025e4 * (eta ^ 2) - 0.3419e4 / 0.450e3 * (eta ^ 4) - 0.4294e4 / 0.81e2 * (eta ^ 3)) * ci2 ^ 14 + (0.16117127e8 / 0.486000e6 * eta + 0.54743e5 / 0.24000e5 * (eta ^ 4) + 0.871823e6 / 0.54000e5 * (eta ^ 3) + 0.16117127e8 / 0.1944000e7 + 0.39042197e8 / 0.972000e6 * (eta ^ 2)) * ci2 ^ 12 + (-0.1384439e7 / 0.486000e6 * eta - 0.85117e5 / 0.648000e6 * (eta ^ 4) - 0.188413e6 / 0.162000e6 * (eta ^ 3) - 0.1384439e7 / 0.1944000e7 - 0.3227429e7 / 0.972000e6 * (eta ^ 2)) * ci2 ^ 10 + (-0.513733e6 / 0.243000e6 * eta - 0.20381e5 / 0.108000e6 * (eta ^ 4) - 0.95479e5 / 0.81000e5 * (eta ^ 3) - 0.513733e6 / 0.972000e6 - 0.1286623e7 / 0.486000e6 * (eta ^ 2)) * ci2 ^ 8 + (0.482927e6 / 0.486000e6 * eta + 0.54053e5 / 0.648000e6 * (eta ^ 4) + 0.28919e5 / 0.54000e5 * (eta ^ 3) + 0.482927e6 / 0.1944000e7 + 0.1199021e7 / 0.972000e6 * (eta ^ 2)) * ci2 ^ 6 + (-0.828277e6 / 0.4050000e7 * eta - 0.92327e5 / 0.5400000e7 * (eta ^ 4) - 0.148391e6 / 0.1350000e7 * (eta ^ 3) - 0.828277e6 / 0.16200000e8 - 0.2055007e7 / 0.8100000e7 * (eta ^ 2)) * ci2 ^ 4 + (0.130801e6 / 0.6075000e7 * eta + 0.14651e5 / 0.8100000e7 * (eta ^ 4) + 0.23483e5 / 0.2025000e7 * (eta ^ 3) + 0.130801e6 / 0.24300000e8 + 0.324691e6 / 0.12150000e8 * (eta ^ 2)) * ci2 ^ 2 - 0.637e3 / 0.8100000e7 * (eta ^ 4) - 0.1021e4 / 0.2025000e7 * (eta ^ 3) - 0.5687e4 / 0.6075000e7 * eta - 0.14117e5 / 0.12150000e8 * (eta ^ 2) - 0.5687e4 / 0.24300000e8) * sin((4 * g + 2 * h)) + (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * ((0.244e3 / 0.45e2 * (eta ^ 3) + 0.1402e4 / 0.135e3 * (eta ^ 2) + 0.1052e4 / 0.135e3 * eta + (eta ^ 4) + 0.263e3 / 0.135e3) * ci2 ^ 14 + (-0.1052e4 / 0.27e2 * eta - (5 * eta ^ 4) - 0.244e3 / 0.9e1 * (eta ^ 3) - 0.263e3 / 0.27e2 - 0.1402e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 12 + (0.1972e4 / 0.27e2 * eta + 0.701e3 / 0.75e2 * (eta ^ 4) + 0.2284e4 / 0.45e2 * (eta ^ 3) + 0.493e3 / 0.27e2 + 0.65678e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 10 + (-0.1052e4 / 0.15e2 * eta - (9 * eta ^ 4) - 0.244e3 / 0.5e1 * (eta ^ 3) - 0.263e3 / 0.15e2 - 0.1402e4 / 0.15e2 * (eta ^ 2)) * ci2 ^ 8 + (0.128921e6 / 0.3375e4 * eta + 0.7441e4 / 0.1500e4 * (eta ^ 4) + 0.30067e5 / 0.1125e4 * (eta ^ 3) + 0.128921e6 / 0.13500e5 + 0.344171e6 / 0.6750e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.40427e5 / 0.3375e4 * eta - 0.2387e4 / 0.1500e4 * (eta ^ 4) - 0.9529e4 / 0.1125e4 * (eta ^ 3) - 0.40427e5 / 0.13500e5 - 0.108257e6 / 0.6750e4 * (eta ^ 2)) * ci2 ^ 4 + (0.91e2 / 0.45e2 * eta + 0.139e3 / 0.500e3 * (eta ^ 4) + 0.109e3 / 0.75e2 * (eta ^ 3) + 0.91e2 / 0.180e3 + 0.6121e4 / 0.2250e4 * (eta ^ 2)) * ci2 ^ 2 - 0.77e2 / 0.3750e4 * (eta ^ 4) - 0.118e3 / 0.1125e4 * (eta ^ 3) - 0.241e3 / 0.6750e4 - 0.482e3 / 0.3375e4 * eta - 0.3263e4 / 0.16875e5 * (eta ^ 2)) * (eta - 1) * ci2 ^ 2 * sin((-2 * h + 4 * g)) / 0.72e2 + 0.4e1 * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 20 + (0.3509e4 / 0.243e3 * eta - 0.29e2 / 0.6e1 * (eta ^ 4) + 0.899e3 / 0.27e2 * (eta ^ 3) + 0.12905e5 / 0.486e3 + 0.4582e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 18 + (-0.36727e5 / 0.1215e4 * eta + 0.457e3 / 0.45e2 * (eta ^ 4) - 0.28766e5 / 0.405e3 * (eta ^ 3) - 0.136303e6 / 0.2430e4 - 0.10819e5 / 0.90e2 * (eta ^ 2)) * ci2 ^ 16 + (0.43574e5 / 0.1215e4 * eta - 0.547e3 / 0.45e2 * (eta ^ 4) + 0.35642e5 / 0.405e3 * (eta ^ 3) + 0.82591e5 / 0.1215e4 + 0.11962e5 / 0.81e2 * (eta ^ 2)) * ci2 ^ 14 + (-0.160928e6 / 0.6075e4 * eta + 0.2053e4 / 0.225e3 * (eta ^ 4) - 0.141974e6 / 0.2025e4 * (eta ^ 3) - 0.316876e6 / 0.6075e4 - 0.234887e6 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 12 + (0.76388e5 / 0.6075e4 * eta - 0.6011e4 / 0.1350e4 * (eta ^ 4) + 0.75989e5 / 0.2025e4 * (eta ^ 3) + 0.160288e6 / 0.6075e4 + 0.246259e6 / 0.4050e4 * (eta ^ 2)) * ci2 ^ 10 + (-0.462347e6 / 0.121500e6 * eta + 0.38177e5 / 0.27000e5 * (eta ^ 4) - 0.553681e6 / 0.40500e5 * (eta ^ 3) - 0.2156651e7 / 0.243000e6 - 0.290693e6 / 0.13500e5 * (eta ^ 2)) * ci2 ^ 8 + (0.21206e5 / 0.30375e5 * eta - 0.2872e4 / 0.10125e5 * (eta ^ 4) + 0.33908e5 / 0.10125e5 * (eta ^ 3) + 0.59311e5 / 0.30375e5 + 0.17171e5 / 0.3375e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.41983e5 / 0.607500e6 * eta + 0.4553e4 / 0.135000e6 * (eta ^ 4) - 0.35603e5 / 0.67500e5 * (eta ^ 3) - 0.326239e6 / 0.1215000e7 - 0.155681e6 / 0.202500e6 * (eta ^ 2)) * ci2 ^ 4 + (0.91e2 / 0.30375e5 * eta - 0.22e2 / 0.10125e5 * (eta ^ 4) + 0.6e1 / 0.125e3 * (eta ^ 3) + 0.1279e4 / 0.60750e5 + 0.91e2 / 0.1350e4 * (eta ^ 2)) * ci2 ^ 2 + 0.7e1 / 0.101250e6 * (eta ^ 4) - 0.32e2 / 0.16875e5 * (eta ^ 3) - 0.7e1 / 0.101250e6 * eta - 0.533e3 / 0.202500e6 * (eta ^ 2) - 0.151e3 / 0.202500e6) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * sin((2 * g)) - 0.2e1 * (ci2 + 0.1e1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * ci2 ^ 22 + (-0.1520e4 / 0.81e2 - 0.2464e4 / 0.27e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * (eta ^ 4) - 0.3008e4 / 0.81e2 * (eta ^ 3) - 0.6080e4 / 0.81e2 * eta) * ci2 ^ 20 + (0.433463e6 / 0.2430e4 * eta + 0.913e3 / 0.72e2 * (eta ^ 4) + 0.71501e5 / 0.810e3 * (eta ^ 3) + 0.433463e6 / 0.9720e4 + 0.1054061e7 / 0.4860e4 * (eta ^ 2)) * ci2 ^ 18 + (-0.606041e6 / 0.2430e4 * eta - 0.1279e4 / 0.72e2 * (eta ^ 4) - 0.100067e6 / 0.810e3 * (eta ^ 3) - 0.606041e6 / 0.9720e4 - 0.1474067e7 / 0.4860e4 * (eta ^ 2)) * ci2 ^ 16 + (0.221633e6 / 0.972e3 * eta + 0.11743e5 / 0.720e3 * (eta ^ 4) + 0.183367e6 / 0.1620e4 * (eta ^ 3) + 0.221633e6 / 0.3888e4 + 0.2696743e7 / 0.9720e4 * (eta ^ 2)) * ci2 ^ 14 + (-0.695969e6 / 0.4860e4 * eta - 0.111421e6 / 0.10800e5 * (eta ^ 4) - 0.115579e6 / 0.1620e4 * (eta ^ 3) - 0.695969e6 / 0.19440e5 - 0.8475559e7 / 0.48600e5 * (eta ^ 2)) * ci2 ^ 12 + (0.5109851e7 / 0.81000e5 * eta + 0.496073e6 / 0.108000e6 * (eta ^ 4) + 0.2559451e7 / 0.81000e5 * (eta ^ 3) + 0.5109851e7 / 0.324000e6 + 0.12461521e8 / 0.162000e6 * (eta ^ 2)) * ci2 ^ 10 + (-0.4741771e7 / 0.243000e6 * eta - 0.467033e6 / 0.324000e6 * (eta ^ 4) - 0.797497e6 / 0.81000e5 * (eta ^ 3) - 0.4741771e7 / 0.972000e6 - 0.11584081e8 / 0.486000e6 * (eta ^ 2)) * ci2 ^ 8 + (0.2022187e7 / 0.486000e6 * eta + 0.202937e6 / 0.648000e6 * (eta ^ 4) + 0.114451e6 / 0.54000e5 * (eta ^ 3) + 0.2022187e7 / 0.1944000e7 + 0.4951489e7 / 0.972000e6 * (eta ^ 2)) * ci2 ^ 6 + (-0.284017e6 / 0.486000e6 * eta - 0.146023e6 / 0.3240000e7 * (eta ^ 4) - 0.48827e5 / 0.162000e6 * (eta ^ 3) - 0.284017e6 / 0.1944000e7 - 0.3487679e7 / 0.4860000e7 * (eta ^ 2)) * ci2 ^ 4 + (0.594769e6 / 0.12150000e8 * eta + 0.63259e5 / 0.16200000e8 * (eta ^ 4) + 0.104027e6 / 0.4050000e7 * (eta ^ 3) + 0.594769e6 / 0.48600000e8 + 0.1466899e7 / 0.24300000e8 * (eta ^ 2)) * ci2 ^ 2 - 0.637e3 / 0.4050000e7 * (eta ^ 4) - 0.1021e4 / 0.1012500e7 * (eta ^ 3) - 0.5687e4 / 0.3037500e7 * eta - 0.14117e5 / 0.6075000e7 * (eta ^ 2) - 0.5687e4 / 0.12150000e8) * (ci2 - 0.1e1) * (eta - 1) * sin((4 * g))) * ci2 ^ 2) / (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) ^ 5 * (eta - 1) / ((1 + eta) ^ 2) * R__e ^ 4 * J ^ 2 / a ^ 4 / (eta ^ 8) -0.81e2 / 0.128e3 / (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) ^ 5 * (eta - 1) / ((1 + eta) ^ 2) * R__e ^ 4 * (-0.3e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 24 + (0.7565e4 / 0.243e3 + 0.5372e4 / 0.81e2 * (eta ^ 2) - 0.17e2 / 0.3e1 * (eta ^ 4) + 0.1054e4 / 0.27e2 * (eta ^ 3) + 0.4114e4 / 0.243e3 * eta) * ci2 ^ 22 + (-0.152474e6 / 0.3645e4 * eta - 0.282841e6 / 0.3645e4 - 0.40402e5 / 0.243e3 * (eta ^ 2) + 0.1897e4 / 0.135e3 * (eta ^ 4) - 0.119342e6 / 0.1215e4 * (eta ^ 3)) * ci2 ^ 20 + (0.216404e6 / 0.3645e4 * eta + 0.407794e6 / 0.3645e4 + 0.294224e6 / 0.1215e4 * (eta ^ 2) - 0.542e3 / 0.27e2 * (eta ^ 4) + 0.174932e6 / 0.1215e4 * (eta ^ 3)) * ci2 ^ 18 + (-0.326897e6 / 0.6075e4 * eta - 0.1253861e7 / 0.12150e5 - 0.1372112e7 / 0.6075e4 * (eta ^ 2) + 0.74231e5 / 0.4050e4 * (eta ^ 4) - 0.821383e6 / 0.6075e4 * (eta ^ 3)) * ci2 ^ 16 + (0.120292e6 / 0.3645e4 * eta + 0.1159222e7 / 0.18225e5 + 0.282847e6 / 0.2025e4 * (eta ^ 2) - 0.22811e5 / 0.2025e4 * (eta ^ 4) + 0.101786e6 / 0.1215e4 * (eta ^ 3)) * ci2 ^ 14 + (-0.438328e6 / 0.30375e5 * eta + 0.5438e4 / 0.1125e4 * (eta ^ 4) - 0.338764e6 / 0.10125e5 * (eta ^ 3) - 0.807332e6 / 0.30375e5 - 0.574966e6 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 12 + (0.49264e5 / 0.10125e5 * eta - 0.5134e4 / 0.3375e4 * (eta ^ 4) + 0.76196e5 / 0.10125e5 * (eta ^ 3) + 0.75968e5 / 0.10125e5 + 0.142462e6 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 10 + (-0.212252e6 / 0.151875e6 * eta + 0.57989e5 / 0.151875e6 * (eta ^ 4) - 0.39878e5 / 0.151875e6 * (eta ^ 3) - 0.214828e6 / 0.151875e6 - 0.74689e5 / 0.50625e5 * (eta ^ 2)) * ci2 ^ 8 + (0.6349e4 / 0.18225e5 * eta - 0.5003e4 / 0.60750e5 * (eta ^ 4) - 0.11323e5 / 0.30375e5 * (eta ^ 3) + 0.1313e4 / 0.7290e4 - 0.28e2 / 0.125e3 * (eta ^ 2)) * ci2 ^ 6 + (-0.10009e5 / 0.151875e6 * eta + 0.1451e4 / 0.101250e6 * (eta ^ 4) + 0.17041e5 / 0.151875e6 * (eta ^ 3) - 0.5257e4 / 0.303750e6 + 0.14972e5 / 0.151875e6 * (eta ^ 2)) * ci2 ^ 4 + (0.694e3 / 0.91125e5 * eta - 0.49e2 / 0.30375e5 * (eta ^ 4) - 0.434e3 / 0.30375e5 * (eta ^ 3) + 0.131e3 / 0.91125e5 - 0.16e2 / 0.1215e4 * (eta ^ 2)) * ci2 ^ 2 + 0.49e2 / 0.607500e6 * (eta ^ 4) + 0.217e3 / 0.303750e6 * (eta ^ 3) - 0.131e3 / 0.1822500e7 - 0.347e3 / 0.911250e6 * eta + 0.4e1 / 0.6075e4 * (eta ^ 2)) * cos((2 * g + 2 * h)) + (ci2 + 0.1e1) * (ci2 - 0.1e1) * ci2 ^ 2 * ((ci2 + 0.1e1) * (ci2 - 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 18 + (0.3146e4 / 0.243e3 * eta + 0.5785e4 / 0.243e3 + 0.4108e4 / 0.81e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) + 0.806e3 / 0.27e2 * (eta ^ 3)) * ci2 ^ 16 + (-0.29524e5 / 0.1215e4 * eta - 0.10858e5 / 0.243e3 - 0.38552e5 / 0.405e3 * (eta ^ 2) + 0.122e3 / 0.15e2 * (eta ^ 4) - 0.7564e4 / 0.135e3 * (eta ^ 3)) * ci2 ^ 14 + (0.6292e4 / 0.243e3 * eta - 0.26e2 / 0.3e1 * (eta ^ 4) + 0.1612e4 / 0.27e2 * (eta ^ 3) + 0.11570e5 / 0.243e3 + 0.8216e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 12 + (-0.104636e6 / 0.6075e4 * eta + 0.3893e4 / 0.675e3 * (eta ^ 4) - 0.80558e5 / 0.2025e4 * (eta ^ 3) - 0.38522e5 / 0.1215e4 - 0.136811e6 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 10 + (0.45104e5 / 0.6075e4 * eta - 0.1679e4 / 0.675e3 * (eta ^ 4) + 0.34802e5 / 0.2025e4 * (eta ^ 3) + 0.16628e5 / 0.1215e4 + 0.2363e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 8 + (-0.63713e5 / 0.30375e5 * eta + 0.4733e4 / 0.6750e4 * (eta ^ 4) - 0.48689e5 / 0.10125e5 * (eta ^ 3) - 0.233489e6 / 0.60750e5 - 0.82826e5 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 6 + (0.11738e5 / 0.30375e5 * eta - 0.1291e4 / 0.10125e5 * (eta ^ 4) + 0.8474e4 / 0.10125e5 * (eta ^ 3) + 0.20773e5 / 0.30375e5 + 0.4868e4 / 0.3375e4 * (eta ^ 2)) * ci2 ^ 4 + (-0.13529e5 / 0.303750e6 * eta + 0.2867e4 / 0.202500e6 * (eta ^ 4) - 0.8237e4 / 0.101250e6 * (eta ^ 3) - 0.43337e5 / 0.607500e6 - 0.2468e4 / 0.16875e5 * (eta ^ 2)) * ci2 ^ 2 - 0.77e2 / 0.101250e6 * (eta ^ 4) + 0.167e3 / 0.50625e5 * (eta ^ 3) + 0.1037e4 / 0.303750e6 + 0.389e3 / 0.151875e6 * eta + 0.37e2 / 0.5625e4 * (eta ^ 2)) * cos((2 * g - 2 * h)) + 0.2e1 * (eta - 1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * ci2 ^ 24 + (-0.1520e4 / 0.81e2 - 0.2464e4 / 0.27e2 * (eta ^ 2) - 0.16e2 / 0.3e1 * (eta ^ 4) - 0.3008e4 / 0.81e2 * (eta ^ 3) - 0.6080e4 / 0.81e2 * eta) * ci2 ^ 22 + (0.285263e6 / 0.1620e4 * eta + 0.285263e6 / 0.6480e4 + 0.693701e6 / 0.3240e4 * (eta ^ 2) + 0.601e3 / 0.48e2 * (eta ^ 4) + 0.1743e4 / 0.20e2 * (eta ^ 3)) * ci2 ^ 20 + (-0.384589e6 / 0.1620e4 * eta - 0.384589e6 / 0.6480e4 - 0.103927e6 / 0.360e3 * (eta ^ 2) - 0.811e3 / 0.48e2 * (eta ^ 4) - 0.190429e6 / 0.1620e4 * (eta ^ 3)) * ci2 ^ 18 + (0.243809e6 / 0.1215e4 * eta + 0.243809e6 / 0.4860e4 + 0.2964691e7 / 0.12150e5 * (eta ^ 2) + 0.38549e5 / 0.2700e4 * (eta ^ 4) + 0.8047e4 / 0.81e2 * (eta ^ 3)) * ci2 ^ 16 + (-0.43486e5 / 0.405e3 * eta - 0.21743e5 / 0.810e3 - 0.264221e6 / 0.2025e4 * (eta ^ 2) - 0.3419e4 / 0.450e3 * (eta ^ 4) - 0.4294e4 / 0.81e2 * (eta ^ 3)) * ci2 ^ 14 + (0.16117127e8 / 0.486000e6 * eta + 0.54743e5 / 0.24000e5 * (eta ^ 4) + 0.871823e6 / 0.54000e5 * (eta ^ 3) + 0.16117127e8 / 0.1944000e7 + 0.39042197e8 / 0.972000e6 * (eta ^ 2)) * ci2 ^ 12 + (-0.1384439e7 / 0.486000e6 * eta - 0.85117e5 / 0.648000e6 * (eta ^ 4) - 0.188413e6 / 0.162000e6 * (eta ^ 3) - 0.1384439e7 / 0.1944000e7 - 0.3227429e7 / 0.972000e6 * (eta ^ 2)) * ci2 ^ 10 + (-0.513733e6 / 0.243000e6 * eta - 0.20381e5 / 0.108000e6 * (eta ^ 4) - 0.95479e5 / 0.81000e5 * (eta ^ 3) - 0.513733e6 / 0.972000e6 - 0.1286623e7 / 0.486000e6 * (eta ^ 2)) * ci2 ^ 8 + (0.482927e6 / 0.486000e6 * eta + 0.54053e5 / 0.648000e6 * (eta ^ 4) + 0.28919e5 / 0.54000e5 * (eta ^ 3) + 0.482927e6 / 0.1944000e7 + 0.1199021e7 / 0.972000e6 * (eta ^ 2)) * ci2 ^ 6 + (-0.828277e6 / 0.4050000e7 * eta - 0.92327e5 / 0.5400000e7 * (eta ^ 4) - 0.148391e6 / 0.1350000e7 * (eta ^ 3) - 0.828277e6 / 0.16200000e8 - 0.2055007e7 / 0.8100000e7 * (eta ^ 2)) * ci2 ^ 4 + (0.130801e6 / 0.6075000e7 * eta + 0.14651e5 / 0.8100000e7 * (eta ^ 4) + 0.23483e5 / 0.2025000e7 * (eta ^ 3) + 0.130801e6 / 0.24300000e8 + 0.324691e6 / 0.12150000e8 * (eta ^ 2)) * ci2 ^ 2 - 0.637e3 / 0.8100000e7 * (eta ^ 4) - 0.1021e4 / 0.2025000e7 * (eta ^ 3) - 0.5687e4 / 0.6075000e7 * eta - 0.14117e5 / 0.12150000e8 * (eta ^ 2) - 0.5687e4 / 0.24300000e8) * cos((4 * g + 2 * h)) + ((0.244e3 / 0.45e2 * (eta ^ 3) + 0.1402e4 / 0.135e3 * (eta ^ 2) + 0.1052e4 / 0.135e3 * eta + (eta ^ 4) + 0.263e3 / 0.135e3) * ci2 ^ 14 + (-0.1052e4 / 0.27e2 * eta - (5 * eta ^ 4) - 0.244e3 / 0.9e1 * (eta ^ 3) - 0.263e3 / 0.27e2 - 0.1402e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 12 + (0.1972e4 / 0.27e2 * eta + 0.701e3 / 0.75e2 * (eta ^ 4) + 0.2284e4 / 0.45e2 * (eta ^ 3) + 0.493e3 / 0.27e2 + 0.65678e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 10 + (-0.1052e4 / 0.15e2 * eta - (9 * eta ^ 4) - 0.244e3 / 0.5e1 * (eta ^ 3) - 0.263e3 / 0.15e2 - 0.1402e4 / 0.15e2 * (eta ^ 2)) * ci2 ^ 8 + (0.128921e6 / 0.3375e4 * eta + 0.7441e4 / 0.1500e4 * (eta ^ 4) + 0.30067e5 / 0.1125e4 * (eta ^ 3) + 0.128921e6 / 0.13500e5 + 0.344171e6 / 0.6750e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.40427e5 / 0.3375e4 * eta - 0.2387e4 / 0.1500e4 * (eta ^ 4) - 0.9529e4 / 0.1125e4 * (eta ^ 3) - 0.40427e5 / 0.13500e5 - 0.108257e6 / 0.6750e4 * (eta ^ 2)) * ci2 ^ 4 + (0.91e2 / 0.45e2 * eta + 0.139e3 / 0.500e3 * (eta ^ 4) + 0.109e3 / 0.75e2 * (eta ^ 3) + 0.91e2 / 0.180e3 + 0.6121e4 / 0.2250e4 * (eta ^ 2)) * ci2 ^ 2 - 0.77e2 / 0.3750e4 * (eta ^ 4) - 0.118e3 / 0.1125e4 * (eta ^ 3) - 0.241e3 / 0.6750e4 - 0.482e3 / 0.3375e4 * eta - 0.3263e4 / 0.16875e5 * (eta ^ 2)) * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * (eta - 1) * ci2 ^ 2 * cos((-2 * h + 4 * g)) / 0.72e2 + 0.2e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 16 + (0.3146e4 / 0.243e3 * eta + 0.5785e4 / 0.243e3 + 0.4108e4 / 0.81e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) + 0.806e3 / 0.27e2 * (eta ^ 3)) * ci2 ^ 14 + (-0.28079e5 / 0.1215e4 * eta + 0.703e3 / 0.90e2 * (eta ^ 4) - 0.22657e5 / 0.405e3 * (eta ^ 3) - 0.105731e6 / 0.2430e4 - 0.12707e5 / 0.135e3 * (eta ^ 2)) * ci2 ^ 12 + (0.2987e4 / 0.135e3 * eta - 0.229e3 / 0.30e2 * (eta ^ 4) + 0.7963e4 / 0.135e3 * (eta ^ 3) + 0.11807e5 / 0.270e3 + 0.13157e5 / 0.135e3 * (eta ^ 2)) * ci2 ^ 10 + (-0.75296e5 / 0.6075e4 * eta + 0.2983e4 / 0.675e3 * (eta ^ 4) - 0.77098e5 / 0.2025e4 * (eta ^ 3) - 0.160444e6 / 0.6075e4 - 0.41449e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 8 + (0.25453e5 / 0.6075e4 * eta - 0.703e3 / 0.450e3 * (eta ^ 4) + 0.30989e5 / 0.2025e4 * (eta ^ 3) + 0.119521e6 / 0.12150e5 + 0.16238e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 6 + (-0.5851e4 / 0.6750e4 * eta + 0.4559e4 / 0.13500e5 * (eta ^ 4) - 0.25049e5 / 0.6750e4 * (eta ^ 3) - 0.30043e5 / 0.13500e5 - 0.19303e5 / 0.3375e4 * (eta ^ 2)) * ci2 ^ 4 + (0.6667e4 / 0.60750e5 * eta - 0.1741e4 / 0.40500e5 * (eta ^ 4) + 0.9971e4 / 0.20250e5 * (eta ^ 3) + 0.34531e5 / 0.121500e6 + 0.7657e4 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 2 + 0.7e1 / 0.2700e4 * (eta ^ 4) - 0.551e3 / 0.20250e5 * (eta ^ 3) - 0.1943e4 / 0.121500e6 - 0.431e3 / 0.60750e5 * eta - 0.433e3 / 0.10125e5 * (eta ^ 2)) * cos((2 * g)) - (ci2 + 0.1e1) * (ci2 - 0.1e1) * (eta - 1) * cos((4 * g)) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * ci2 ^ 18 + (-0.4940e4 / 0.81e2 * eta - 0.1235e4 / 0.81e2 - 0.2002e4 / 0.27e2 * (eta ^ 2) - 0.13e2 / 0.3e1 * (eta ^ 4) - 0.2444e4 / 0.81e2 * (eta ^ 3)) * ci2 ^ 16 + (0.139343e6 / 0.1215e4 * eta + 0.139343e6 / 0.4860e4 + 0.67777e5 / 0.486e3 * (eta ^ 2) + 0.1469e4 / 0.180e3 * (eta ^ 4) + 0.22997e5 / 0.405e3 * (eta ^ 3)) * ci2 ^ 14 + (-0.49663e5 / 0.405e3 * eta - 0.35e2 / 0.4e1 * (eta ^ 4) - 0.24623e5 / 0.405e3 * (eta ^ 3) - 0.49663e5 / 0.1620e4 - 0.120821e6 / 0.810e3 * (eta ^ 2)) * ci2 ^ 12 + (0.498862e6 / 0.6075e4 * eta + 0.7943e4 / 0.1350e4 * (eta ^ 4) + 0.82618e5 / 0.2025e4 * (eta ^ 3) + 0.249431e6 / 0.12150e5 + 0.607121e6 / 0.6075e4 * (eta ^ 2)) * ci2 ^ 10 + (-0.217334e6 / 0.6075e4 * eta - 0.129e3 / 0.50e2 * (eta ^ 4) - 0.12038e5 / 0.675e3 * (eta ^ 3) - 0.108667e6 / 0.12150e5 - 0.264709e6 / 0.6075e4 * (eta ^ 2)) * ci2 ^ 8 + (0.137551e6 / 0.13500e5 * eta + 0.13381e5 / 0.18000e5 * (eta ^ 4) + 0.206957e6 / 0.40500e5 * (eta ^ 3) + 0.137551e6 / 0.54000e5 + 0.1006663e7 / 0.81000e5 * (eta ^ 2)) * ci2 ^ 6 + (-0.224257e6 / 0.121500e6 * eta - 0.4463e4 / 0.32400e5 * (eta ^ 4) - 0.37931e5 / 0.40500e5 * (eta ^ 3) - 0.224257e6 / 0.486000e6 - 0.548611e6 / 0.243000e6 * (eta ^ 2)) * ci2 ^ 4 + (0.118751e6 / 0.607500e6 * eta + 0.12341e5 / 0.810000e6 * (eta ^ 4) + 0.20533e5 / 0.202500e6 * (eta ^ 3) + 0.118751e6 / 0.2430000e7 + 0.292061e6 / 0.1215000e7 * (eta ^ 2)) * ci2 ^ 2 - 0.637e3 / 0.810000e6 * (eta ^ 4) - 0.1021e4 / 0.202500e6 * (eta ^ 3) - 0.5687e4 / 0.607500e6 * eta - 0.14117e5 / 0.1215000e7 * (eta ^ 2) - 0.5687e4 / 0.2430000e7)))) * J ^ 2 / a ^ 4 / (eta ^ 8) -0.9e1 / 0.256e3 * (ci2 ^ 2 - 0.1e1 / 0.2e1) * sqrt(-ci2 ^ 2 + 0.1e1) / ((1 + eta) ^ 3) * R__e ^ 4 * J ^ 2 * (0.54e2 * (eta - 1) * (1 + eta) * ((-0.1024e4 / 0.81e2 * eta - 0.1780e4 / 0.243e3 - 0.1729e4 / 0.81e2 * (eta ^ 3) + (eta ^ 5) - 0.199e3 / 0.27e2 * (eta ^ 4) - 0.437e3 / 0.27e2 * (eta ^ 2)) * ci2 ^ 16 + (0.4096e4 / 0.81e2 * eta + 0.7120e4 / 0.243e3 + 0.6916e4 / 0.81e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.796e3 / 0.27e2 * (eta ^ 4) + 0.1748e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 14 + (-0.19880e5 / 0.243e3 * eta - 0.175504e6 / 0.3645e4 - 0.177922e6 / 0.1215e4 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.62962e5 / 0.1215e4 * (eta ^ 4) - 0.538e3 / 0.5e1 * (eta ^ 2)) * ci2 ^ 12 + (0.616e3 / 0.9e1 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) + 0.5656e4 / 0.135e3 + 0.18964e5 / 0.135e3 * (eta ^ 3) + 0.21172e5 / 0.405e3 * (eta ^ 4) + 0.12988e5 / 0.135e3 * (eta ^ 2)) * ci2 ^ 10 + (-0.20932e5 / 0.675e3 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) - 0.41848e5 / 0.2025e4 - 0.166717e6 / 0.2025e4 * (eta ^ 3) - 0.200299e6 / 0.6075e4 * (eta ^ 4) - 0.101281e6 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 8 + (0.42176e5 / 0.6075e4 * eta + 0.183152e6 / 0.6075e4 * (eta ^ 3) + 0.103664e6 / 0.18225e5 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.80248e5 / 0.6075e4 * (eta ^ 4) + 0.30812e5 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.3728e4 / 0.10125e5 * eta - 0.68122e5 / 0.10125e5 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) - 0.23384e5 / 0.30375e5 - 0.19774e5 / 0.6075e4 * (eta ^ 4) - 0.5182e4 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 4 + (-0.1252e4 / 0.10125e5 * eta + 0.8462e4 / 0.10125e5 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) + 0.764e3 / 0.30375e5 + 0.182e3 / 0.405e3 * (eta ^ 4) + 0.44e2 / 0.225e3 * (eta ^ 2)) * ci2 ^ 2 - 0.539e3 / 0.20250e5 * (eta ^ 4) - 0.179e3 / 0.4050e4 * (eta ^ 3) + 0.262e3 / 0.91125e5 + 0.514e3 / 0.30375e5 * eta - 0.53e2 / 0.20250e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((3 * g + 2 * h)) - 0.48e2 * (ci2 + 0.1e1) * (ci2 - 0.1e1) * ((eta - 1) ^ 2) * ci2 ^ 2 * ((0.475e3 / 0.27e2 * eta + 0.95e2 / 0.27e2 + 0.695e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) + 0.25e2 / 0.3e1 * (eta ^ 4) + 0.869e3 / 0.27e2 * (eta ^ 2)) * ci2 ^ 16 + (-0.1900e4 / 0.27e2 * eta - 0.380e3 / 0.27e2 - 0.2780e4 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) - 0.100e3 / 0.3e1 * (eta ^ 4) - 0.3476e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 14 + (0.51943e5 / 0.432e3 * eta + 0.51943e5 / 0.2160e4 + 0.38029e5 / 0.216e3 * (eta ^ 3) + 0.549e3 / 0.80e2 * (eta ^ 5) + 0.13699e5 / 0.240e3 * (eta ^ 4) + 0.237617e6 / 0.1080e4 * (eta ^ 2)) * ci2 ^ 12 + (-0.49429e5 / 0.432e3 * eta - 0.527e3 / 0.80e2 * (eta ^ 5) - 0.49429e5 / 0.2160e4 - 0.36247e5 / 0.216e3 * (eta ^ 3) - 0.13097e5 / 0.240e3 * (eta ^ 4) - 0.226211e6 / 0.1080e4 * (eta ^ 2)) * ci2 ^ 10 + (0.429461e6 / 0.6480e4 * eta + 0.13933e5 / 0.3600e4 * (eta ^ 5) + 0.429461e6 / 0.32400e5 + 0.315767e6 / 0.3240e4 * (eta ^ 3) + 0.22933e5 / 0.720e3 * (eta ^ 4) + 0.1966771e7 / 0.16200e5 * (eta ^ 2)) * ci2 ^ 8 + (-0.155197e6 / 0.6480e4 * eta - 0.114559e6 / 0.3240e4 * (eta ^ 3) - 0.155197e6 / 0.32400e5 - 0.5141e4 / 0.3600e4 * (eta ^ 5) - 0.8381e4 / 0.720e3 * (eta ^ 4) - 0.711467e6 / 0.16200e5 * (eta ^ 2)) * ci2 ^ 6 + (0.685487e6 / 0.129600e6 * eta + 0.20351e5 / 0.2592e4 * (eta ^ 3) + 0.70117e5 / 0.216000e6 * (eta ^ 5) + 0.685487e6 / 0.648000e6 + 0.563993e6 / 0.216000e6 * (eta ^ 4) + 0.3146947e7 / 0.324000e6 * (eta ^ 2)) * ci2 ^ 4 + (-0.84967e5 / 0.129600e6 * eta - 0.12707e5 / 0.12960e5 * (eta ^ 3) - 0.9037e4 / 0.216000e6 * (eta ^ 5) - 0.84967e5 / 0.648000e6 - 0.71393e5 / 0.216000e6 * (eta ^ 4) - 0.390827e6 / 0.324000e6 * (eta ^ 2)) * ci2 ^ 2 + 0.4913e4 / 0.270000e6 * (eta ^ 4) + 0.859e3 / 0.16200e5 * (eta ^ 3) + 0.5687e4 / 0.810000e6 + 0.5687e4 / 0.162000e6 * eta + 0.26227e5 / 0.405000e6 * (eta ^ 2) + 0.637e3 / 0.270000e6 * (eta ^ 5)) * sin((5 * g + 2 * h)) + 0.8e1 / 0.45e2 * (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * (eta - 1) * ((1 + eta) ^ 2) * (((eta ^ 3) - 0.131e3 / 0.24e2 * (eta ^ 2) - 0.263e3 / 0.12e2 * eta - 0.263e3 / 0.24e2) * ci2 ^ 8 + (-(2 * eta ^ 3) + 0.131e3 / 0.12e2 * (eta ^ 2) + 0.263e3 / 0.6e1 * eta + 0.263e3 / 0.12e2) * ci2 ^ 6 + (0.7e1 / 0.5e1 * (eta ^ 3) - 0.953e3 / 0.120e3 * (eta ^ 2) - 0.1877e4 / 0.60e2 * eta - 0.1877e4 / 0.120e3) * ci2 ^ 4 + (-0.2e1 / 0.5e1 * (eta ^ 3) + 0.149e3 / 0.60e2 * (eta ^ 2) + 0.281e3 / 0.30e2 * eta + 0.281e3 / 0.60e2) * ci2 ^ 2 + (eta ^ 3) / 0.25e2 - 0.677e3 / 0.2400e4 * (eta ^ 2) - 0.241e3 / 0.240e3 * eta - 0.241e3 / 0.480e3) * ci2 ^ 4 * sin((-2 * h + 3 * g)) + 0.6e1 * (ci2 + 0.1e1) * (ci2 - 0.1e1) * ((1 + eta) ^ 2) * ci2 ^ 2 * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 12 + (0.488e3 / 0.27e2 * eta - (3 * eta ^ 5) - 0.1780e4 / 0.27e2 + 0.167e3 / 0.9e1 * (eta ^ 3) + (37 * eta ^ 4) - 0.2239e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 10 + (-0.976e3 / 0.45e2 * eta + 0.18e2 / 0.5e1 * (eta ^ 5) + 0.712e3 / 0.9e1 - 0.334e3 / 0.15e2 * (eta ^ 3) - 0.222e3 / 0.5e1 * (eta ^ 4) + 0.4478e4 / 0.45e2 * (eta ^ 2)) * ci2 ^ 8 + (0.5368e4 / 0.405e3 * eta + 0.1837e4 / 0.135e3 * (eta ^ 3) - 0.3916e4 / 0.81e2 - 0.11e2 / 0.5e1 * (eta ^ 5) + 0.407e3 / 0.15e2 * (eta ^ 4) - 0.24629e5 / 0.405e3 * (eta ^ 2)) * ci2 ^ 6 + (-0.2828e4 / 0.675e3 * eta - 0.206e3 / 0.45e2 * (eta ^ 3) + 0.166e3 / 0.225e3 * (eta ^ 5) + 0.2156e4 / 0.135e3 - 0.1996e4 / 0.225e3 * (eta ^ 4) + 0.2672e4 / 0.135e3 * (eta ^ 2)) * ci2 ^ 4 + (0.388e3 / 0.675e3 * eta + 0.13e2 / 0.15e2 * (eta ^ 3) - 0.31e2 / 0.225e3 * (eta ^ 5) - 0.376e3 / 0.135e3 + 0.331e3 / 0.225e3 * (eta ^ 4) - 0.433e3 / 0.135e3 * (eta ^ 2)) * ci2 ^ 2 - 0.131e3 / 0.1350e4 * (eta ^ 4) - 0.497e3 / 0.6750e4 * (eta ^ 3) + 0.2074e4 / 0.10125e5 - 0.194e3 / 0.10125e5 * eta + 0.4049e4 / 0.20250e5 * (eta ^ 2) + 0.77e2 / 0.6750e4 * (eta ^ 5)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * sin((g - 2 * h)) + 0.18e2 * (ci2 + 0.1e1) * (ci2 - 0.1e1) * (eta - 1) * (1 + eta) * (((eta ^ 5) - 0.571e3 / 0.27e2 * (eta ^ 3) + 0.1256e4 / 0.81e2 * eta - 0.677e3 / 0.81e2 * (eta ^ 4) + 0.107e3 / 0.27e2 * (eta ^ 2) + 0.500e3 / 0.243e3) * ci2 ^ 16 + (-(4 * eta ^ 5) + 0.2284e4 / 0.27e2 * (eta ^ 3) - 0.5024e4 / 0.81e2 * eta + 0.2708e4 / 0.81e2 * (eta ^ 4) - 0.428e3 / 0.27e2 * (eta ^ 2) - 0.2000e4 / 0.243e3) * ci2 ^ 14 + (0.34e2 / 0.5e1 * (eta ^ 5) - 0.116377e6 / 0.810e3 * (eta ^ 3) + 0.86197e5 / 0.810e3 * eta - 0.4606e4 / 0.81e2 * (eta ^ 4) + 0.1499e4 / 0.54e2 * (eta ^ 2) + 0.34789e5 / 0.2430e4) * ci2 ^ 12 + (0.36437e5 / 0.270e3 * (eta ^ 3) - 0.82751e5 / 0.810e3 * eta + 0.4340e4 / 0.81e2 * (eta ^ 4) - 0.1501e4 / 0.54e2 * (eta ^ 2) - 0.34367e5 / 0.2430e4 - 0.32e2 / 0.5e1 * (eta ^ 5)) * ci2 ^ 10 + (0.823e3 / 0.225e3 * (eta ^ 5) - 0.185897e6 / 0.2430e4 * (eta ^ 3) + 0.80831e5 / 0.1350e4 * eta - 0.61733e5 / 0.2025e4 * (eta ^ 4) + 0.23317e5 / 0.1350e4 * (eta ^ 2) + 0.34967e5 / 0.4050e4) * ci2 ^ 8 + (-0.296e3 / 0.225e3 * (eta ^ 5) + 0.65059e5 / 0.2430e4 * (eta ^ 3) - 0.9829e4 / 0.450e3 * eta + 0.21616e5 / 0.2025e4 * (eta ^ 4) - 0.9059e4 / 0.1350e4 * (eta ^ 2) - 0.4453e4 / 0.1350e4) * ci2 ^ 6 + (-0.1373629e7 / 0.243000e6 * (eta ^ 3) + 0.130069e6 / 0.27000e5 * eta - 0.45217e5 / 0.20250e5 * (eta ^ 4) + 0.42161e5 / 0.27000e5 * (eta ^ 2) + 0.2461e4 / 0.3240e4 + 0.2003e4 / 0.6750e4 * (eta ^ 5)) * ci2 ^ 4 + (0.160229e6 / 0.243000e6 * (eta ^ 3) - 0.47447e5 / 0.81000e5 * eta + 0.5137e4 / 0.20250e5 * (eta ^ 4) - 0.5321e4 / 0.27000e5 * (eta ^ 2) - 0.4651e4 / 0.48600e5 - 0.263e3 / 0.6750e4 * (eta ^ 5)) * ci2 ^ 2 - 0.1207e4 / 0.101250e6 * (eta ^ 4) + 0.19e2 / 0.3750e4 + 0.113e3 / 0.3750e4 * eta + 0.7e1 / 0.675e3 * (eta ^ 2) - 0.4949e4 / 0.151875e6 * (eta ^ 3) + 0.77e2 / 0.33750e5 * (eta ^ 5)) * ci2 ^ 2 * sin((3 * g)) + (ci2 + 0.1e1) ^ 2 * (ci2 - 0.1e1) ^ 2 * ((eta - 1) ^ 2) * ci2 ^ 4 * ((0.263e3 / 0.27e2 * eta + (eta ^ 5) + 0.263e3 / 0.135e3 + 0.442e3 / 0.27e2 * (eta ^ 3) + 0.33e2 / 0.5e1 * (eta ^ 4) + 0.2498e4 / 0.135e3 * (eta ^ 2)) * ci2 ^ 8 + (-0.526e3 / 0.27e2 * eta - 0.884e3 / 0.27e2 * (eta ^ 3) - 0.526e3 / 0.135e3 - (2 * eta ^ 5) - 0.66e2 / 0.5e1 * (eta ^ 4) - 0.4996e4 / 0.135e3 * (eta ^ 2)) * ci2 ^ 6 + (0.1877e4 / 0.135e3 * eta + 0.3166e4 / 0.135e3 * (eta ^ 3) + 0.109e3 / 0.75e2 * (eta ^ 5) + 0.1877e4 / 0.675e3 + 0.713e3 / 0.75e2 * (eta ^ 4) + 0.17846e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 4 + (-0.562e3 / 0.135e3 * eta - 0.956e3 / 0.135e3 * (eta ^ 3) - 0.34e2 / 0.75e2 * (eta ^ 5) - 0.562e3 / 0.675e3 - 0.218e3 / 0.75e2 * (eta ^ 4) - 0.5356e4 / 0.675e3 * (eta ^ 2)) * ci2 ^ 2 + 0.481e3 / 0.1500e4 * (eta ^ 4) + 0.1037e4 / 0.1350e4 * (eta ^ 3) + 0.241e3 / 0.540e3 * eta + 0.5761e4 / 0.6750e4 * (eta ^ 2) + 0.241e3 / 0.2700e4 + 0.77e2 / 0.1500e4 * (eta ^ 5)) * sin((5 * g)) + 0.18e2 * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 16 + (0.1952e4 / 0.81e2 * eta - 0.7120e4 / 0.81e2 + 0.668e3 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.148e3 / 0.3e1 * (eta ^ 4) - 0.8956e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 14 + (-0.52808e5 / 0.1215e4 * eta + 0.175504e6 / 0.1215e4 - 0.15986e5 / 0.405e3 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.11446e5 / 0.135e3 * (eta ^ 4) + 0.234562e6 / 0.1215e4 * (eta ^ 2)) * ci2 ^ 12 + (0.2072e4 / 0.45e2 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) - 0.5656e4 / 0.45e2 + 0.1432e4 / 0.45e2 * (eta ^ 3) + 0.3676e4 / 0.45e2 * (eta ^ 4) - 0.8648e4 / 0.45e2 * (eta ^ 2)) * ci2 ^ 10 + (-0.836e3 / 0.27e2 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) + 0.41848e5 / 0.675e3 - 0.8881e4 / 0.675e3 * (eta ^ 3) - 0.32537e5 / 0.675e3 * (eta ^ 4) + 0.80309e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 8 + (0.3232e4 / 0.243e3 * eta + 0.4336e4 / 0.2025e4 * (eta ^ 3) - 0.103664e6 / 0.6075e4 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.1336e4 / 0.75e2 * (eta ^ 4) - 0.283412e6 / 0.6075e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.35584e5 / 0.10125e5 * eta + 0.278e3 / 0.1125e4 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) + 0.23384e5 / 0.10125e5 - 0.2714e4 / 0.675e3 * (eta ^ 4) + 0.113822e6 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 4 + (0.5284e4 / 0.10125e5 * eta - 0.464e3 / 0.3375e4 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) - 0.764e3 / 0.10125e5 + 0.38e2 / 0.75e2 * (eta ^ 4) - 0.15362e5 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 2 - 0.553e3 / 0.20250e5 * (eta ^ 4) + 0.19e2 / 0.1350e4 * (eta ^ 3) - 0.1018e4 / 0.30375e5 * eta - 0.262e3 / 0.30375e5 + 0.1067e4 / 0.12150e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * ((1 + eta) ^ 2) * sin(g) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1)) * sqrt((-eta ^ 2 + 1)) / (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) ^ 4 / a ^ 4 / (eta ^ 10) / ci2 0.9e1 / 0.256e3 / (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) ^ 4 * sqrt(-ci2 ^ 2 + 0.1e1) / ((1 + eta) ^ 3) * (ci2 ^ 2 - 0.1e1 / 0.2e1) * R__e ^ 4 * J ^ 2 * (0.54e2 * (eta - 1) * ((-0.1024e4 / 0.81e2 * eta - 0.1780e4 / 0.243e3 - 0.1729e4 / 0.81e2 * (eta ^ 3) + (eta ^ 5) - 0.199e3 / 0.27e2 * (eta ^ 4) - 0.437e3 / 0.27e2 * (eta ^ 2)) * ci2 ^ 16 + (0.4096e4 / 0.81e2 * eta + 0.7120e4 / 0.243e3 + 0.6916e4 / 0.81e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.796e3 / 0.27e2 * (eta ^ 4) + 0.1748e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 14 + (-0.19880e5 / 0.243e3 * eta - 0.175504e6 / 0.3645e4 - 0.177922e6 / 0.1215e4 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.62962e5 / 0.1215e4 * (eta ^ 4) - 0.538e3 / 0.5e1 * (eta ^ 2)) * ci2 ^ 12 + (0.616e3 / 0.9e1 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) + 0.5656e4 / 0.135e3 + 0.18964e5 / 0.135e3 * (eta ^ 3) + 0.21172e5 / 0.405e3 * (eta ^ 4) + 0.12988e5 / 0.135e3 * (eta ^ 2)) * ci2 ^ 10 + (-0.20932e5 / 0.675e3 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) - 0.41848e5 / 0.2025e4 - 0.166717e6 / 0.2025e4 * (eta ^ 3) - 0.200299e6 / 0.6075e4 * (eta ^ 4) - 0.101281e6 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 8 + (0.42176e5 / 0.6075e4 * eta + 0.183152e6 / 0.6075e4 * (eta ^ 3) + 0.103664e6 / 0.18225e5 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.80248e5 / 0.6075e4 * (eta ^ 4) + 0.30812e5 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.3728e4 / 0.10125e5 * eta - 0.68122e5 / 0.10125e5 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) - 0.23384e5 / 0.30375e5 - 0.19774e5 / 0.6075e4 * (eta ^ 4) - 0.5182e4 / 0.2025e4 * (eta ^ 2)) * ci2 ^ 4 + (-0.1252e4 / 0.10125e5 * eta + 0.8462e4 / 0.10125e5 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) + 0.764e3 / 0.30375e5 + 0.182e3 / 0.405e3 * (eta ^ 4) + 0.44e2 / 0.225e3 * (eta ^ 2)) * ci2 ^ 2 - 0.539e3 / 0.20250e5 * (eta ^ 4) - 0.179e3 / 0.4050e4 * (eta ^ 3) + 0.262e3 / 0.91125e5 + 0.514e3 / 0.30375e5 * eta - 0.53e2 / 0.20250e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * (1 + eta) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((3 * g + 2 * h)) - 0.48e2 * ((0.475e3 / 0.27e2 * eta + 0.95e2 / 0.27e2 + 0.695e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) + 0.25e2 / 0.3e1 * (eta ^ 4) + 0.869e3 / 0.27e2 * (eta ^ 2)) * ci2 ^ 16 + (-0.1900e4 / 0.27e2 * eta - 0.380e3 / 0.27e2 - 0.2780e4 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) - 0.100e3 / 0.3e1 * (eta ^ 4) - 0.3476e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 14 + (0.51943e5 / 0.432e3 * eta + 0.51943e5 / 0.2160e4 + 0.38029e5 / 0.216e3 * (eta ^ 3) + 0.549e3 / 0.80e2 * (eta ^ 5) + 0.13699e5 / 0.240e3 * (eta ^ 4) + 0.237617e6 / 0.1080e4 * (eta ^ 2)) * ci2 ^ 12 + (-0.49429e5 / 0.432e3 * eta - 0.527e3 / 0.80e2 * (eta ^ 5) - 0.49429e5 / 0.2160e4 - 0.36247e5 / 0.216e3 * (eta ^ 3) - 0.13097e5 / 0.240e3 * (eta ^ 4) - 0.226211e6 / 0.1080e4 * (eta ^ 2)) * ci2 ^ 10 + (0.429461e6 / 0.6480e4 * eta + 0.13933e5 / 0.3600e4 * (eta ^ 5) + 0.429461e6 / 0.32400e5 + 0.315767e6 / 0.3240e4 * (eta ^ 3) + 0.22933e5 / 0.720e3 * (eta ^ 4) + 0.1966771e7 / 0.16200e5 * (eta ^ 2)) * ci2 ^ 8 + (-0.155197e6 / 0.6480e4 * eta - 0.114559e6 / 0.3240e4 * (eta ^ 3) - 0.155197e6 / 0.32400e5 - 0.5141e4 / 0.3600e4 * (eta ^ 5) - 0.8381e4 / 0.720e3 * (eta ^ 4) - 0.711467e6 / 0.16200e5 * (eta ^ 2)) * ci2 ^ 6 + (0.685487e6 / 0.129600e6 * eta + 0.20351e5 / 0.2592e4 * (eta ^ 3) + 0.70117e5 / 0.216000e6 * (eta ^ 5) + 0.685487e6 / 0.648000e6 + 0.563993e6 / 0.216000e6 * (eta ^ 4) + 0.3146947e7 / 0.324000e6 * (eta ^ 2)) * ci2 ^ 4 + (-0.84967e5 / 0.129600e6 * eta - 0.12707e5 / 0.12960e5 * (eta ^ 3) - 0.9037e4 / 0.216000e6 * (eta ^ 5) - 0.84967e5 / 0.648000e6 - 0.71393e5 / 0.216000e6 * (eta ^ 4) - 0.390827e6 / 0.324000e6 * (eta ^ 2)) * ci2 ^ 2 + 0.4913e4 / 0.270000e6 * (eta ^ 4) + 0.859e3 / 0.16200e5 * (eta ^ 3) + 0.5687e4 / 0.810000e6 + 0.5687e4 / 0.162000e6 * eta + 0.26227e5 / 0.405000e6 * (eta ^ 2) + 0.637e3 / 0.270000e6 * (eta ^ 5)) * ((eta - 1) ^ 2) * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((5 * g + 2 * h)) - 0.8e1 / 0.45e2 * (((eta ^ 3) - 0.131e3 / 0.24e2 * (eta ^ 2) - 0.263e3 / 0.12e2 * eta - 0.263e3 / 0.24e2) * ci2 ^ 8 + (-(2 * eta ^ 3) + 0.131e3 / 0.12e2 * (eta ^ 2) + 0.263e3 / 0.6e1 * eta + 0.263e3 / 0.12e2) * ci2 ^ 6 + (0.7e1 / 0.5e1 * (eta ^ 3) - 0.953e3 / 0.120e3 * (eta ^ 2) - 0.1877e4 / 0.60e2 * eta - 0.1877e4 / 0.120e3) * ci2 ^ 4 + (-0.2e1 / 0.5e1 * (eta ^ 3) + 0.149e3 / 0.60e2 * (eta ^ 2) + 0.281e3 / 0.30e2 * eta + 0.281e3 / 0.60e2) * ci2 ^ 2 + (eta ^ 3) / 0.25e2 - 0.677e3 / 0.2400e4 * (eta ^ 2) - 0.241e3 / 0.240e3 * eta - 0.241e3 / 0.480e3) * (eta - 1) * ((1 + eta) ^ 2) * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * cos((-2 * h + 3 * g)) - 0.6e1 * ((1 + eta) ^ 2) * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 12 + (0.488e3 / 0.27e2 * eta - (3 * eta ^ 5) - 0.1780e4 / 0.27e2 + 0.167e3 / 0.9e1 * (eta ^ 3) + (37 * eta ^ 4) - 0.2239e4 / 0.27e2 * (eta ^ 2)) * ci2 ^ 10 + (-0.976e3 / 0.45e2 * eta + 0.18e2 / 0.5e1 * (eta ^ 5) + 0.712e3 / 0.9e1 - 0.334e3 / 0.15e2 * (eta ^ 3) - 0.222e3 / 0.5e1 * (eta ^ 4) + 0.4478e4 / 0.45e2 * (eta ^ 2)) * ci2 ^ 8 + (0.5368e4 / 0.405e3 * eta + 0.1837e4 / 0.135e3 * (eta ^ 3) - 0.3916e4 / 0.81e2 - 0.11e2 / 0.5e1 * (eta ^ 5) + 0.407e3 / 0.15e2 * (eta ^ 4) - 0.24629e5 / 0.405e3 * (eta ^ 2)) * ci2 ^ 6 + (-0.2828e4 / 0.675e3 * eta - 0.206e3 / 0.45e2 * (eta ^ 3) + 0.166e3 / 0.225e3 * (eta ^ 5) + 0.2156e4 / 0.135e3 - 0.1996e4 / 0.225e3 * (eta ^ 4) + 0.2672e4 / 0.135e3 * (eta ^ 2)) * ci2 ^ 4 + (0.388e3 / 0.675e3 * eta + 0.13e2 / 0.15e2 * (eta ^ 3) - 0.31e2 / 0.225e3 * (eta ^ 5) - 0.376e3 / 0.135e3 + 0.331e3 / 0.225e3 * (eta ^ 4) - 0.433e3 / 0.135e3 * (eta ^ 2)) * ci2 ^ 2 - 0.131e3 / 0.1350e4 * (eta ^ 4) - 0.497e3 / 0.6750e4 * (eta ^ 3) + 0.2074e4 / 0.10125e5 - 0.194e3 / 0.10125e5 * eta + 0.4049e4 / 0.20250e5 * (eta ^ 2) + 0.77e2 / 0.6750e4 * (eta ^ 5)) * (ci2 - 0.1e1) * cos((g - 2 * h)) + 0.18e2 * (eta - 1) * (1 + eta) * ((-0.3304e4 / 0.81e2 * eta - 0.4060e4 / 0.243e3 - 0.1745e4 / 0.81e2 * (eta ^ 3) + (eta ^ 5) - 0.517e3 / 0.81e2 * (eta ^ 4) - 0.109e3 / 0.3e1 * (eta ^ 2)) * ci2 ^ 16 + (0.13216e5 / 0.81e2 * eta + 0.16240e5 / 0.243e3 + 0.6980e4 / 0.81e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.2068e4 / 0.81e2 * (eta ^ 4) + 0.436e3 / 0.3e1 * (eta ^ 2)) * ci2 ^ 14 + (-0.225461e6 / 0.810e3 * eta - 0.276869e6 / 0.2430e4 - 0.39589e5 / 0.270e3 * (eta ^ 3) + 0.34e2 / 0.5e1 * (eta ^ 5) - 0.17566e5 / 0.405e3 * (eta ^ 4) - 0.22309e5 / 0.90e2 * (eta ^ 2)) * ci2 ^ 12 + (0.213823e6 / 0.810e3 * eta - 0.32e2 / 0.5e1 * (eta ^ 5) + 0.262207e6 / 0.2430e4 + 0.112001e6 / 0.810e3 * (eta ^ 3) + 0.16508e5 / 0.405e3 * (eta ^ 4) + 0.7049e4 / 0.30e2 * (eta ^ 2)) * ci2 ^ 10 + (-0.616429e6 / 0.4050e4 * eta + 0.823e3 / 0.225e3 * (eta ^ 5) - 0.754021e6 / 0.12150e5 - 0.958799e6 / 0.12150e5 * (eta ^ 3) - 0.46733e5 / 0.2025e4 * (eta ^ 4) - 0.182753e6 / 0.1350e4 * (eta ^ 2)) * ci2 ^ 8 + (0.221933e6 / 0.4050e4 * eta + 0.339073e6 / 0.12150e5 * (eta ^ 3) + 0.270317e6 / 0.12150e5 - 0.296e3 / 0.225e3 * (eta ^ 5) + 0.16216e5 / 0.2025e4 * (eta ^ 4) + 0.65731e5 / 0.1350e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.980767e6 / 0.81000e5 * eta - 0.1454267e7 / 0.243000e6 * (eta ^ 3) + 0.2003e4 / 0.6750e4 * (eta ^ 5) - 0.1186399e7 / 0.243000e6 - 0.33361e5 / 0.20250e5 * (eta ^ 4) - 0.10747e5 / 0.1000e4 * (eta ^ 2)) * ci2 ^ 4 + (0.40829e5 / 0.27000e5 * eta + 0.173587e6 / 0.243000e6 * (eta ^ 3) - 0.263e3 / 0.6750e4 * (eta ^ 5) + 0.48893e5 / 0.81000e5 + 0.409e3 / 0.2250e4 * (eta ^ 4) + 0.36209e5 / 0.27000e5 * (eta ^ 2)) * ci2 ^ 2 - 0.823e3 / 0.101250e6 * (eta ^ 4) - 0.5548e4 / 0.151875e6 * (eta ^ 3) - 0.8323e4 / 0.101250e6 * eta - 0.82e2 / 0.1125e4 * (eta ^ 2) - 0.1967e4 / 0.60750e5 + 0.77e2 / 0.33750e5 * (eta ^ 5)) * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((3 * g)) + ((0.263e3 / 0.27e2 * eta + (eta ^ 5) + 0.263e3 / 0.135e3 + 0.442e3 / 0.27e2 * (eta ^ 3) + 0.33e2 / 0.5e1 * (eta ^ 4) + 0.2498e4 / 0.135e3 * (eta ^ 2)) * ci2 ^ 8 + (-0.526e3 / 0.27e2 * eta - 0.884e3 / 0.27e2 * (eta ^ 3) - 0.526e3 / 0.135e3 - (2 * eta ^ 5) - 0.66e2 / 0.5e1 * (eta ^ 4) - 0.4996e4 / 0.135e3 * (eta ^ 2)) * ci2 ^ 6 + (0.1877e4 / 0.135e3 * eta + 0.3166e4 / 0.135e3 * (eta ^ 3) + 0.109e3 / 0.75e2 * (eta ^ 5) + 0.1877e4 / 0.675e3 + 0.713e3 / 0.75e2 * (eta ^ 4) + 0.17846e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 4 + (-0.562e3 / 0.135e3 * eta - 0.956e3 / 0.135e3 * (eta ^ 3) - 0.34e2 / 0.75e2 * (eta ^ 5) - 0.562e3 / 0.675e3 - 0.218e3 / 0.75e2 * (eta ^ 4) - 0.5356e4 / 0.675e3 * (eta ^ 2)) * ci2 ^ 2 + 0.481e3 / 0.1500e4 * (eta ^ 4) + 0.1037e4 / 0.1350e4 * (eta ^ 3) + 0.241e3 / 0.540e3 * eta + 0.5761e4 / 0.6750e4 * (eta ^ 2) + 0.241e3 / 0.2700e4 + 0.77e2 / 0.1500e4 * (eta ^ 5)) * ((eta - 1) ^ 2) * (ci2 + 0.1e1) ^ 2 * ci2 ^ 4 * (ci2 - 0.1e1) ^ 2 * cos((5 * g)) - 0.18e2 * ((-0.488e3 / 0.81e2 * eta + 0.1780e4 / 0.81e2 - 0.167e3 / 0.27e2 * (eta ^ 3) + (eta ^ 5) - 0.37e2 / 0.3e1 * (eta ^ 4) + 0.2239e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 16 + (0.1952e4 / 0.81e2 * eta - 0.7120e4 / 0.81e2 + 0.668e3 / 0.27e2 * (eta ^ 3) - (4 * eta ^ 5) + 0.148e3 / 0.3e1 * (eta ^ 4) - 0.8956e4 / 0.81e2 * (eta ^ 2)) * ci2 ^ 14 + (-0.52808e5 / 0.1215e4 * eta + 0.175504e6 / 0.1215e4 - 0.15986e5 / 0.405e3 * (eta ^ 3) + 0.286e3 / 0.45e2 * (eta ^ 5) - 0.11446e5 / 0.135e3 * (eta ^ 4) + 0.234562e6 / 0.1215e4 * (eta ^ 2)) * ci2 ^ 12 + (0.2072e4 / 0.45e2 * eta - 0.76e2 / 0.15e2 * (eta ^ 5) - 0.5656e4 / 0.45e2 + 0.1432e4 / 0.45e2 * (eta ^ 3) + 0.3676e4 / 0.45e2 * (eta ^ 4) - 0.8648e4 / 0.45e2 * (eta ^ 2)) * ci2 ^ 10 + (-0.836e3 / 0.27e2 * eta + 0.1373e4 / 0.675e3 * (eta ^ 5) + 0.41848e5 / 0.675e3 - 0.8881e4 / 0.675e3 * (eta ^ 3) - 0.32537e5 / 0.675e3 * (eta ^ 4) + 0.80309e5 / 0.675e3 * (eta ^ 2)) * ci2 ^ 8 + (0.3232e4 / 0.243e3 * eta + 0.4336e4 / 0.2025e4 * (eta ^ 3) - 0.103664e6 / 0.6075e4 - 0.196e3 / 0.675e3 * (eta ^ 5) + 0.1336e4 / 0.75e2 * (eta ^ 4) - 0.283412e6 / 0.6075e4 * (eta ^ 2)) * ci2 ^ 6 + (-0.35584e5 / 0.10125e5 * eta + 0.278e3 / 0.1125e4 * (eta ^ 3) - 0.194e3 / 0.3375e4 * (eta ^ 5) + 0.23384e5 / 0.10125e5 - 0.2714e4 / 0.675e3 * (eta ^ 4) + 0.113822e6 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 4 + (0.5284e4 / 0.10125e5 * eta - 0.464e3 / 0.3375e4 * (eta ^ 3) + 0.28e2 / 0.1125e4 * (eta ^ 5) - 0.764e3 / 0.10125e5 + 0.38e2 / 0.75e2 * (eta ^ 4) - 0.15362e5 / 0.10125e5 * (eta ^ 2)) * ci2 ^ 2 - 0.553e3 / 0.20250e5 * (eta ^ 4) + 0.19e2 / 0.1350e4 * (eta ^ 3) - 0.1018e4 / 0.30375e5 * eta - 0.262e3 / 0.30375e5 + 0.1067e4 / 0.12150e5 * (eta ^ 2) - 0.49e2 / 0.20250e5 * (eta ^ 5)) * ((1 + eta) ^ 2) * cos(g) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1)) * sqrt((-eta ^ 2 + 1)) / a ^ 4 / (eta ^ 10) / ci2];
	D5 = [-0.151875e6 / 0.32e2 * sqrt((-eta ^ 2 + 1)) * (((0.563e3 / 0.81e2 * (eta ^ 4) - 0.626e3 / 0.27e2 * (eta ^ 2) - 0.1045e4 / 0.81e2 + (eta ^ 5) + 0.806e3 / 0.81e2 * (eta ^ 3) - 0.1045e4 / 0.27e2 * eta) * ci2 ^ 18 + (-0.286e3 / 0.9e1 * (eta ^ 4) + 0.7676e4 / 0.81e2 * (eta ^ 2) + 0.4370e4 / 0.81e2 - 0.14e2 / 0.3e1 * (eta ^ 5) - 0.3772e4 / 0.81e2 * (eta ^ 3) + 0.4370e4 / 0.27e2 * eta) * ci2 ^ 16 + (0.11399e5 / 0.180e3 * (eta ^ 4) - 0.81119e5 / 0.486e3 * (eta ^ 2) - 0.52703e5 / 0.540e3 + 0.1709e4 / 0.180e3 * (eta ^ 5) + 0.76697e5 / 0.810e3 * (eta ^ 3) - 0.52703e5 / 0.180e3 * eta) * ci2 ^ 14 + (-0.9737e4 / 0.135e3 * (eta ^ 4) + 0.201308e6 / 0.1215e4 * (eta ^ 2) + 0.121541e6 / 0.1215e4 + 0.121541e6 / 0.405e3 * eta - 0.497e3 / 0.45e2 * (eta ^ 5) - 0.26660e5 / 0.243e3 * (eta ^ 3)) * ci2 ^ 12 + (0.419111e6 / 0.8100e4 * (eta ^ 4) - 0.247291e6 / 0.2430e4 * (eta ^ 2) - 0.1553143e7 / 0.24300e5 - 0.1553143e7 / 0.8100e4 * eta + 0.21871e5 / 0.2700e4 * (eta ^ 5) + 0.970087e6 / 0.12150e5 * (eta ^ 3)) * ci2 ^ 10 + (-0.98353e5 / 0.4050e4 * (eta ^ 4) + 0.242687e6 / 0.6075e4 * (eta ^ 2) + 0.320549e6 / 0.12150e5 + 0.320549e6 / 0.4050e4 * eta - 0.5257e4 / 0.1350e4 * (eta ^ 5) - 0.230231e6 / 0.6075e4 * (eta ^ 3)) * ci2 ^ 8 + (0.1212187e7 / 0.162000e6 * (eta ^ 4) - 0.2425183e7 / 0.243000e6 * (eta ^ 2) - 0.3422003e7 / 0.486000e6 - 0.3422003e7 / 0.162000e6 * eta + 0.66563e5 / 0.54000e5 * (eta ^ 5) + 0.2858927e7 / 0.243000e6 * (eta ^ 3)) * ci2 ^ 6 + (-0.59429e5 / 0.40500e5 * (eta ^ 4) + 0.46261e5 / 0.30375e5 * (eta ^ 2) + 0.142771e6 / 0.121500e6 + 0.142771e6 / 0.40500e5 * eta - 0.10103e5 / 0.40500e5 * (eta ^ 5) - 0.70247e5 / 0.30375e5 * (eta ^ 3)) * ci2 ^ 4 + (0.7529e4 / 0.45000e5 * (eta ^ 4) - 0.77867e5 / 0.607500e6 * (eta ^ 2) - 0.15109e5 / 0.135000e6 - 0.15109e5 / 0.45000e5 * eta + 0.11963e5 / 0.405000e6 * (eta ^ 5) + 0.53137e5 / 0.202500e6 * (eta ^ 3)) * ci2 ^ 2 - 0.637e3 / 0.405000e6 * (eta - 1) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 1) * (1 + eta) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) * cos((3 * g - h)) / 0.6e1 - 0.5e1 / 0.9e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((1 + eta) ^ 2) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * ci2 ^ 18 + (0.1882e4 / 0.45e2 * (eta ^ 4) - 0.27796e5 / 0.405e3 * (eta ^ 2) - 0.4094e4 / 0.81e2 - 0.22e2 / 0.5e1 * (eta ^ 5) + 0.1052e4 / 0.45e2 * (eta ^ 3) + 0.6746e4 / 0.405e3 * eta) * ci2 ^ 16 + (-0.106859e6 / 0.1350e4 * (eta ^ 4) + 0.261079e6 / 0.2025e4 * (eta ^ 2) + 0.357059e6 / 0.4050e4 + 0.399e3 / 0.50e2 * (eta ^ 5) - 0.1057e4 / 0.25e2 * (eta ^ 3) - 0.131101e6 / 0.4050e4 * eta) * ci2 ^ 14 + (0.11582e5 / 0.135e3 * (eta ^ 4) - 0.95221e5 / 0.675e3 * (eta ^ 2) - 0.56273e5 / 0.675e3 + 0.25123e5 / 0.675e3 * eta - 0.578e3 / 0.75e2 * (eta ^ 5) + 0.27911e5 / 0.675e3 * (eta ^ 3)) * ci2 ^ 12 + (-0.78937e5 / 0.1350e4 * (eta ^ 4) + 0.993721e6 / 0.10125e5 * (eta ^ 2) + 0.940037e6 / 0.20250e5 - 0.553603e6 / 0.20250e5 * eta + 0.1901e4 / 0.450e3 * (eta ^ 5) - 0.80377e5 / 0.3375e4 * (eta ^ 3)) * ci2 ^ 10 + (0.174647e6 / 0.6750e4 * (eta ^ 4) - 0.450023e6 / 0.10125e5 * (eta ^ 2) - 0.312487e6 / 0.20250e5 + 0.263369e6 / 0.20250e5 * eta - 0.2819e4 / 0.2250e4 * (eta ^ 5) + 0.27731e5 / 0.3375e4 * (eta ^ 3)) * ci2 ^ 8 + (-0.499591e6 / 0.67500e5 * (eta ^ 4) + 0.654334e6 / 0.50625e5 * (eta ^ 2) + 0.594109e6 / 0.202500e6 - 0.794771e6 / 0.202500e6 * eta + 0.1861e4 / 0.13500e5 * (eta ^ 5) - 0.5522e4 / 0.3375e4 * (eta ^ 3)) * ci2 ^ 6 + (0.4442e4 / 0.3375e4 * (eta ^ 4) - 0.233093e6 / 0.101250e6 * (eta ^ 2) - 0.27671e5 / 0.101250e6 + 0.72121e5 / 0.101250e6 * eta + 0.398e3 / 0.16875e5 * (eta ^ 5) + 0.5489e4 / 0.33750e5 * (eta ^ 3)) * ci2 ^ 4 + (-0.33e2 / 0.250e3 * (eta ^ 4) + 0.22927e5 / 0.101250e6 * (eta ^ 2) + 0.251e3 / 0.50625e5 - 0.3529e4 / 0.50625e5 * eta - 0.287e3 / 0.33750e5 * (eta ^ 5) - 0.107e3 / 0.33750e5 * (eta ^ 3)) * ci2 ^ 2 + 0.49e2 / 0.67500e5 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * cos((g - h)) + ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.557e3 / 0.81e2 * (eta ^ 4) - 0.3812e4 / 0.243e3 * (eta ^ 2) - 0.4895e4 / 0.729e3 + (eta ^ 5) - 0.4964e4 / 0.243e3 * (eta ^ 3) - 0.2735e4 / 0.243e3 * eta) * ci2 ^ 18 + (0.778e3 / 0.27e2 * (eta ^ 4) + 0.48124e5 / 0.729e3 * (eta ^ 2) + 0.20470e5 / 0.729e3 - 0.38e2 / 0.9e1 * (eta ^ 5) + 0.20860e5 / 0.243e3 * (eta ^ 3) + 0.11398e5 / 0.243e3 * eta) * ci2 ^ 16 + (-0.131869e6 / 0.2430e4 * (eta ^ 4) - 0.28577e5 / 0.243e3 * (eta ^ 2) - 0.357059e6 / 0.7290e4 + 0.389e3 / 0.54e2 * (eta ^ 5) - 0.191683e6 / 0.1215e4 * (eta ^ 3) - 0.194339e6 / 0.2430e4 * eta) * ci2 ^ 14 + (0.14564e5 / 0.243e3 * (eta ^ 4) + 0.422017e6 / 0.3645e4 * (eta ^ 2) + 0.56273e5 / 0.1215e4 + 0.29141e5 / 0.405e3 * eta - 0.172e3 / 0.27e2 * (eta ^ 5) + 0.7463e4 / 0.45e2 * (eta ^ 3)) * ci2 ^ 12 + (-0.57023e5 / 0.1350e4 * (eta ^ 4) - 0.1256959e7 / 0.18225e5 * (eta ^ 2) - 0.940037e6 / 0.36450e5 - 0.442157e6 / 0.12150e5 * eta + 0.12353e5 / 0.4050e4 * (eta ^ 5) - 0.663751e6 / 0.6075e4 * (eta ^ 3)) * ci2 ^ 10 + (0.235337e6 / 0.12150e5 * (eta ^ 4) + 0.51811e5 / 0.2025e4 * (eta ^ 2) + 0.312487e6 / 0.36450e5 + 0.24107e5 / 0.2430e4 * eta - 0.563e3 / 0.810e3 * (eta ^ 5) + 0.281879e6 / 0.6075e4 * (eta ^ 3)) * ci2 ^ 8 + (-0.690137e6 / 0.121500e6 * (eta ^ 4) - 0.534064e6 / 0.91125e5 * (eta ^ 2) - 0.594109e6 / 0.364500e6 - 0.131149e6 / 0.121500e6 * eta + 0.23e2 / 0.4500e4 * (eta ^ 5) - 0.42446e5 / 0.3375e4 * (eta ^ 3)) * ci2 ^ 6 + (0.2051e4 / 0.2025e4 * (eta ^ 4) + 0.5759e4 / 0.7290e4 * (eta ^ 2) + 0.27671e5 / 0.182250e6 - 0.5593e4 / 0.60750e5 * eta + 0.979e3 / 0.30375e5 * (eta ^ 5) + 0.126103e6 / 0.60750e5 * (eta ^ 3)) * ci2 ^ 4 + (-0.1199e4 / 0.12150e5 * (eta ^ 4) - 0.3359e4 / 0.60750e5 * (eta ^ 2) - 0.251e3 / 0.91125e5 + 0.1009e4 / 0.30375e5 * eta - 0.77e2 / 0.12150e5 * (eta ^ 5) - 0.11357e5 / 0.60750e5 * (eta ^ 3)) * ci2 ^ 2 + 0.49e2 / 0.121500e6 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * cos((3 * g + h)) - 0.11e2 / 0.18e2 * cos((5 * g + h)) * (eta - 1) * ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * ci2 ^ 18 + (-0.10210e5 / 0.297e3 * (eta ^ 4) - 0.39596e5 / 0.297e3 * (eta ^ 2) - 0.4370e4 / 0.297e3 - 0.46e2 / 0.11e2 * (eta ^ 5) - 0.31340e5 / 0.297e3 * (eta ^ 3) - 0.21850e5 / 0.297e3 * eta) * ci2 ^ 16 + (0.8213e4 / 0.132e3 * (eta ^ 4) + 0.2146811e7 / 0.8910e4 * (eta ^ 2) + 0.52703e5 / 0.1980e4 + 0.1671e4 / 0.220e3 * (eta ^ 5) + 0.1697947e7 / 0.8910e4 * (eta ^ 3) + 0.52703e5 / 0.396e3 * eta) * ci2 ^ 14 + (-0.94931e5 / 0.1485e4 * (eta ^ 4) - 0.11102e5 / 0.45e2 * (eta ^ 2) - 0.121541e6 / 0.4455e4 - 0.121541e6 / 0.891e3 * eta - 0.259e3 / 0.33e2 * (eta ^ 5) - 0.868954e6 / 0.4455e4 * (eta ^ 3)) * ci2 ^ 12 + (0.406091e6 / 0.9900e4 * (eta ^ 4) + 0.259817e6 / 0.1650e4 * (eta ^ 2) + 0.1553143e7 / 0.89100e5 + 0.1553143e7 / 0.17820e5 * eta + 0.10051e5 / 0.1980e4 * (eta ^ 5) + 0.1109111e7 / 0.8910e4 * (eta ^ 3)) * ci2 ^ 10 + (-0.252931e6 / 0.14850e5 * (eta ^ 4) - 0.289213e6 / 0.4455e4 * (eta ^ 2) - 0.320549e6 / 0.44550e5 - 0.320549e6 / 0.8910e4 * eta - 0.10541e5 / 0.4950e4 * (eta ^ 5) - 0.381083e6 / 0.7425e4 * (eta ^ 3)) * ci2 ^ 8 + (0.906823e6 / 0.198000e6 * (eta ^ 4) + 0.1712807e7 / 0.99000e5 * (eta ^ 2) + 0.3422003e7 / 0.1782000e7 + 0.3422003e7 / 0.356400e6 * eta + 0.6263e4 / 0.10800e5 * (eta ^ 5) + 0.12189791e8 / 0.891000e6 * (eta ^ 3)) * ci2 ^ 6 + (-0.114581e6 / 0.148500e6 * (eta ^ 4) - 0.214021e6 / 0.74250e5 * (eta ^ 2) - 0.142771e6 / 0.445500e6 - 0.142771e6 / 0.89100e5 * eta - 0.14737e5 / 0.148500e6 * (eta ^ 5) - 0.507919e6 / 0.222750e6 * (eta ^ 3)) * ci2 ^ 4 + (0.36857e5 / 0.495000e6 * (eta ^ 4) + 0.610417e6 / 0.2227500e7 * (eta ^ 2) + 0.15109e5 / 0.495000e6 + 0.15109e5 / 0.99000e5 * eta + 0.4837e4 / 0.495000e6 * (eta ^ 5) + 0.483377e6 / 0.2227500e7 * (eta ^ 3)) * ci2 ^ 2 - 0.637e3 / 0.1485000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ci2 ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1)) * (eta - 1)) * R__e ^ 4 * J ^ 2 * (ci2 - 0.1e1) * (ci2 + 0.1e1) / (0.5e1 * ci2 ^ 4 - 0.5e1 * ci2 ^ 2 + 0.1e1) ^ 4 / ((1 + eta) ^ 3) / a ^ 5 / (eta ^ 8) 0 0.928125e6 / 0.64e2 * sqrt(-ci2 ^ 2 + 0.1e1) * sqrt((-eta ^ 2 + 1)) * (-0.18e2 / 0.11e2 * (eta - 1) * (1 + eta) * ((-0.557e3 / 0.81e2 * (eta ^ 4) - 0.3812e4 / 0.243e3 * (eta ^ 2) - 0.4895e4 / 0.729e3 + (eta ^ 5) - 0.4964e4 / 0.243e3 * (eta ^ 3) - 0.2735e4 / 0.243e3 * eta) * ci2 ^ 24 + (0.445e3 / 0.12e2 * (eta ^ 4) + 0.20608e5 / 0.243e3 * (eta ^ 2) - 0.65e2 / 0.12e2 * (eta ^ 5) + 0.8938e4 / 0.81e2 * (eta ^ 3) + 0.19603e5 / 0.324e3 * eta + 0.35155e5 / 0.972e3) * ci2 ^ 22 + (-0.108856e6 / 0.1215e4 * (eta ^ 4) - 0.294191e6 / 0.1458e4 * (eta ^ 2) - 0.643603e6 / 0.2430e4 * (eta ^ 3) - 0.344497e6 / 0.2430e4 * eta + 0.344e3 / 0.27e2 * (eta ^ 5) - 0.622417e6 / 0.7290e4) * ci2 ^ 20 + (0.1237837e7 / 0.9720e4 * (eta ^ 4) + 0.37522e5 / 0.135e3 * (eta ^ 2) + 0.451142e6 / 0.1215e4 * (eta ^ 3) + 0.370277e6 / 0.1944e4 * eta - 0.6163e4 / 0.360e3 * (eta ^ 5) + 0.3388513e7 / 0.29160e5) * ci2 ^ 18 + (-0.7890347e7 / 0.48600e5 * eta - 0.5707727e7 / 0.48600e5 * (eta ^ 4) - 0.893683e6 / 0.3645e4 * (eta ^ 2) + 0.15703e5 / 0.1080e4 * (eta ^ 5) - 0.2040331e7 / 0.6075e4 * (eta ^ 3) - 0.14709827e8 / 0.145800e6) * ci2 ^ 16 + (0.2230019e7 / 0.24300e5 * eta + 0.886241e6 / 0.12150e5 * (eta ^ 4) + 0.3512293e7 / 0.24300e5 * (eta ^ 2) - 0.33067e5 / 0.4050e4 * (eta ^ 5) + 0.4957487e7 / 0.24300e5 * (eta ^ 3) + 0.170195e6 / 0.2916e4) * ci2 ^ 14 + (-0.8501053e7 / 0.243000e6 * eta - 0.1483891e7 / 0.48600e5 * (eta ^ 4) - 0.20977351e8 / 0.364500e6 * (eta ^ 2) + 0.250601e6 / 0.81000e5 * (eta ^ 5) - 0.10165363e8 / 0.121500e6 * (eta ^ 3) - 0.16624813e8 / 0.729000e6) * ci2 ^ 12 + (0.4382717e7 / 0.486000e6 * eta + 0.803887e6 / 0.97200e5 * (eta ^ 4) + 0.11082353e8 / 0.729000e6 * (eta ^ 2) + 0.1091681e7 / 0.48600e5 * (eta ^ 3) + 0.8696813e7 / 0.1458000e7 - 0.43423e5 / 0.54000e5 * (eta ^ 5)) * ci2 ^ 10 + (-0.1281757e7 / 0.810000e6 * eta - 0.113099e6 / 0.90000e5 * (eta ^ 4) - 0.9119927e7 / 0.3645000e7 * (eta ^ 2) - 0.4312627e7 / 0.1215000e7 * (eta ^ 3) - 0.2458957e7 / 0.2430000e7 + 0.366029e6 / 0.2430000e7 * (eta ^ 5)) * ci2 ^ 8 + (0.3227e4 / 0.90000e5 * (eta ^ 4) + 0.769411e6 / 0.3645000e7 * (eta ^ 2) + 0.47483e5 / 0.243000e6 * (eta ^ 3) + 0.97747e5 / 0.486000e6 * eta + 0.768959e6 / 0.7290000e7 - 0.18943e5 / 0.810000e6 * (eta ^ 5)) * ci2 ^ 6 + (0.10909e5 / 0.486000e6 * (eta ^ 4) - 0.1589e4 / 0.3645000e7 * (eta ^ 2) + 0.40303e5 / 0.1215000e7 * (eta ^ 3) - 0.53657e5 / 0.2430000e7 * eta - 0.9637e4 / 0.1458000e7 + 0.8299e4 / 0.2430000e7 * (eta ^ 5)) * ci2 ^ 4 - 0.931e3 / 0.2430000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (1 + eta) * ci2 ^ 2 + 0.49e2 / 0.2430000e7 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((3 * g + 2 * h)) + ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * ci2 ^ 24 + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * ci2 ^ 22 + (0.6901e4 / 0.72e2 * (eta ^ 4) + 0.601849e6 / 0.1620e4 * (eta ^ 2) + 0.5239507e7 / 0.17820e5 * (eta ^ 3) + 0.487189e6 / 0.2376e4 * eta + 0.1027e4 / 0.88e2 * (eta ^ 5) + 0.487189e6 / 0.11880e5) * ci2 ^ 20 + (-0.187384e6 / 0.1485e4 * (eta ^ 4) - 0.435434e6 / 0.891e3 * (eta ^ 2) - 0.17398e5 / 0.45e2 * (eta ^ 3) - 0.240452e6 / 0.891e3 * eta - 0.508e3 / 0.33e2 * (eta ^ 5) - 0.240452e6 / 0.4455e4) * ci2 ^ 18 + (0.809179e6 / 0.3564e4 * eta + 0.630917e6 / 0.5940e4 * (eta ^ 4) + 0.3661667e7 / 0.8910e4 * (eta ^ 2) + 0.779e3 / 0.60e2 * (eta ^ 5) + 0.2895971e7 / 0.8910e4 * (eta ^ 3) + 0.809179e6 / 0.17820e5) * ci2 ^ 16 + (-0.25031e5 / 0.198e3 * eta - 0.878473e6 / 0.14850e5 * (eta ^ 4) - 0.1019087e7 / 0.4455e4 * (eta ^ 2) - 0.35839e5 / 0.4950e4 * (eta ^ 5) - 0.4028987e7 / 0.22275e5 * (eta ^ 3) - 0.25031e5 / 0.990e3) * ci2 ^ 14 + (0.1316581e7 / 0.28512e5 * eta + 0.8546953e7 / 0.396000e6 * (eta ^ 4) + 0.148892881e9 / 0.1782000e7 * (eta ^ 2) + 0.626771e6 / 0.237600e6 * (eta ^ 5) + 0.4359427e7 / 0.66000e5 * (eta ^ 3) + 0.1316581e7 / 0.142560e6) * ci2 ^ 12 + (-0.911113e6 / 0.89100e5 * eta - 0.705151e6 / 0.148500e6 * (eta ^ 4) - 0.4125761e7 / 0.222750e6 * (eta ^ 2) - 0.3260417e7 / 0.222750e6 * (eta ^ 3) - 0.911113e6 / 0.445500e6 - 0.85219e5 / 0.148500e6 * (eta ^ 5)) * ci2 ^ 10 + (0.13115e5 / 0.14256e5 * eta + 0.12211e5 / 0.30000e5 * (eta ^ 4) + 0.7483963e7 / 0.4455000e7 * (eta ^ 2) + 0.393557e6 / 0.297000e6 * (eta ^ 3) + 0.2623e4 / 0.14256e5 + 0.133093e6 / 0.2970000e7 * (eta ^ 5)) * ci2 ^ 8 + (0.119831e6 / 0.1485000e7 * (eta ^ 4) + 0.609197e6 / 0.2227500e7 * (eta ^ 2) + 0.96841e5 / 0.445500e6 * (eta ^ 3) + 0.5497e4 / 0.35640e5 * eta + 0.5497e4 / 0.178200e6 + 0.17387e5 / 0.1485000e7 * (eta ^ 5)) * ci2 ^ 6 + (-0.53711e5 / 0.1856250e7 * (eta ^ 4) - 0.288787e6 / 0.2784375e7 * (eta ^ 2) - 0.229187e6 / 0.2784375e7 * (eta ^ 3) - 0.7169e4 / 0.123750e6 * eta - 0.7169e4 / 0.618750e6 - 0.7291e4 / 0.1856250e7 * (eta ^ 5)) * ci2 ^ 4 + 0.637e3 / 0.1350000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4) * ci2 ^ 2 - 0.637e3 / 0.29700000e8 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 + 0.1e1) * ((eta - 1) ^ 2) * (ci2 - 0.1e1) * ci2 ^ 2 * cos((5 * g + 2 * h)) - 0.3e1 / 0.11e2 * (ci2 + 0.1e1) ^ 2 * ((0.563e3 / 0.81e2 * (eta ^ 4) - 0.626e3 / 0.27e2 * (eta ^ 2) - 0.1045e4 / 0.81e2 + (eta ^ 5) + 0.806e3 / 0.81e2 * (eta ^ 3) - 0.1045e4 / 0.27e2 * eta) * ci2 ^ 22 + (-0.6113e4 / 0.162e3 * (eta ^ 4) + 0.1057e4 / 0.9e1 * (eta ^ 2) - 0.4441e4 / 0.81e2 * (eta ^ 3) + 0.10735e5 / 0.54e2 * eta - 0.11e2 / 0.2e1 * (eta ^ 5) + 0.10735e5 / 0.162e3) * ci2 ^ 20 + (0.98761e5 / 0.1080e4 * (eta ^ 4) - 0.1279183e7 / 0.4860e4 * (eta ^ 2) + 0.218389e6 / 0.1620e4 * (eta ^ 3) - 0.489089e6 / 0.1080e4 * eta + 0.973e3 / 0.72e2 * (eta ^ 5) - 0.489089e6 / 0.3240e4) * ci2 ^ 18 + (0.1954483e7 / 0.3240e4 * eta - 0.140941e6 / 0.1080e4 * (eta ^ 4) + 0.1671401e7 / 0.4860e4 * (eta ^ 2) - 0.1409e4 / 0.72e2 * (eta ^ 5) - 0.948049e6 / 0.4860e4 * (eta ^ 3) + 0.1954483e7 / 0.9720e4) * ci2 ^ 16 + (-0.1689737e7 / 0.3240e4 * eta + 0.131567e6 / 0.1080e4 * (eta ^ 4) - 0.282427e6 / 0.972e3 * (eta ^ 2) + 0.6679e4 / 0.360e3 * (eta ^ 5) + 0.896591e6 / 0.4860e4 * (eta ^ 3) - 0.1689737e7 / 0.9720e4) * ci2 ^ 14 + (0.66313e5 / 0.216e3 * eta - 0.421889e6 / 0.5400e4 * (eta ^ 4) + 0.808399e6 / 0.4860e4 * (eta ^ 2) - 0.65323e5 / 0.5400e4 * (eta ^ 5) - 0.969881e6 / 0.8100e4 * (eta ^ 3) + 0.66313e5 / 0.648e3) * ci2 ^ 12 + (-0.1626449e7 / 0.12960e5 * eta + 0.11394769e8 / 0.324000e6 * (eta ^ 4) - 0.31919317e8 / 0.486000e6 * (eta ^ 2) + 0.1059053e7 / 0.19440e5 * (eta ^ 3) - 0.1626449e7 / 0.38880e5 + 0.598793e6 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 10 + (0.11540749e8 / 0.324000e6 * eta - 0.3609497e7 / 0.324000e6 * (eta ^ 4) + 0.2888429e7 / 0.162000e6 * (eta ^ 2) - 0.8462431e7 / 0.486000e6 * (eta ^ 3) + 0.11540749e8 / 0.972000e6 - 0.193553e6 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 8 + (0.3959807e7 / 0.1620000e7 * (eta ^ 4) - 0.876589e6 / 0.270000e6 * (eta ^ 2) + 0.9344077e7 / 0.2430000e7 * (eta ^ 3) - 0.2229959e7 / 0.324000e6 * eta - 0.2229959e7 / 0.972000e6 + 0.43483e5 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 6 + (-0.115411e6 / 0.324000e6 * (eta ^ 4) + 0.60767e5 / 0.162000e6 * (eta ^ 2) - 0.10111e5 / 0.18000e5 * (eta ^ 3) + 0.691e3 / 0.800e3 * eta + 0.691e3 / 0.2400e4 - 0.6523e4 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 4 + (0.28201e5 / 0.900000e6 * (eta ^ 4) - 0.99251e5 / 0.4050000e7 * (eta ^ 2) + 0.597689e6 / 0.12150000e8 * (eta ^ 3) - 0.515489e6 / 0.8100000e7 * eta - 0.515489e6 / 0.24300000e8 + 0.4963e4 / 0.900000e6 * (eta ^ 5)) * ci2 ^ 2 - 0.637e3 / 0.2700000e7 * (eta - 1) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) ^ 2 * ci2 ^ 2 * cos((-2 * h + 3 * g)) + 0.10e2 / 0.11e2 * (ci2 + 0.1e1) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * ci2 ^ 22 + (0.2897e4 / 0.60e2 * (eta ^ 4) - 0.6478e4 / 0.81e2 * (eta ^ 2) + 0.3634e4 / 0.135e3 * (eta ^ 3) + 0.31333e5 / 0.1620e4 * eta - 0.101e3 / 0.20e2 * (eta ^ 5) - 0.19135e5 / 0.324e3) * ci2 ^ 20 + (-0.289289e6 / 0.2700e4 * (eta ^ 4) + 0.710999e6 / 0.4050e4 * (eta ^ 2) - 0.79499e5 / 0.1350e4 * (eta ^ 3) - 0.349331e6 / 0.8100e4 * eta + 0.1109e4 / 0.100e3 * (eta ^ 5) + 0.1020109e7 / 0.8100e4) * ci2 ^ 18 + (0.927671e6 / 0.16200e5 * eta + 0.83527e5 / 0.600e3 * (eta ^ 4) - 0.920611e6 / 0.4050e4 * (eta ^ 2) - 0.8329e4 / 0.600e3 * (eta ^ 5) + 0.19901e5 / 0.270e3 * (eta ^ 3) - 0.2491393e7 / 0.16200e5) * ci2 ^ 16 + (-0.507946e6 / 0.10125e5 * eta - 0.396409e6 / 0.3375e4 * (eta ^ 4) + 0.1950473e7 / 0.10125e5 * (eta ^ 2) + 0.4087e4 / 0.375e3 * (eta ^ 5) - 0.196633e6 / 0.3375e4 * (eta ^ 3) + 0.1201154e7 / 0.10125e5) * ci2 ^ 14 + (0.1226303e7 / 0.40500e5 * eta + 0.151679e6 / 0.2250e4 * (eta ^ 4) - 0.4530781e7 / 0.40500e5 * (eta ^ 2) - 0.12493e5 / 0.2250e4 * (eta ^ 5) + 0.136259e6 / 0.4500e4 * (eta ^ 3) - 0.487109e6 / 0.8100e4) * ci2 ^ 12 + (-0.191131e6 / 0.15000e5 * eta - 0.3614989e7 / 0.135000e6 * (eta ^ 4) + 0.762824e6 / 0.16875e5 * (eta ^ 2) - 0.58696e5 / 0.5625e4 * (eta ^ 3) + 0.302629e6 / 0.15000e5 + 0.49271e5 / 0.27000e5 * (eta ^ 5)) * ci2 ^ 10 + (0.599147e6 / 0.162000e6 * eta + 0.219949e6 / 0.30000e5 * (eta ^ 4) - 0.5109619e7 / 0.405000e6 * (eta ^ 2) + 0.316063e6 / 0.135000e6 * (eta ^ 3) - 0.3552953e7 / 0.810000e6 - 0.98651e5 / 0.270000e6 * (eta ^ 5)) * ci2 ^ 8 + (-0.455041e6 / 0.337500e6 * (eta ^ 4) + 0.398011e6 / 0.168750e6 * (eta ^ 2) - 0.10937e5 / 0.33750e5 * (eta ^ 3) - 0.241397e6 / 0.337500e6 * eta + 0.196363e6 / 0.337500e6 + 0.487e3 / 0.13500e5 * (eta ^ 5)) * ci2 ^ 6 + (0.42469e5 / 0.270000e6 * (eta ^ 4) - 0.560969e6 / 0.2025000e7 * (eta ^ 2) + 0.16357e5 / 0.675000e6 * (eta ^ 3) + 0.348071e6 / 0.4050000e7 * eta - 0.164281e6 / 0.4050000e7 + 0.227e3 / 0.450000e6 * (eta ^ 5)) * ci2 ^ 4 + (-0.1397e4 / 0.135000e6 * (eta ^ 4) + 0.1516e4 / 0.84375e5 * (eta ^ 2) - 0.16e2 / 0.28125e5 * (eta ^ 3) - 0.3767e4 / 0.675000e6 * eta + 0.553e3 / 0.675000e6 - 0.329e3 / 0.675000e6 * (eta ^ 5)) * ci2 ^ 2 + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * cos((g - 2 * h)) - 0.21e2 / 0.11e2 * ((-0.397e3 / 0.81e2 * (eta ^ 4) - 0.9502e4 / 0.567e3 * (eta ^ 2) - 0.8605e4 / 0.567e3 * eta + (eta ^ 5) - 0.9122e4 / 0.567e3 * (eta ^ 3) - 0.12925e5 / 0.1701e4) * ci2 ^ 26 + (0.16637e5 / 0.567e3 * (eta ^ 4) + 0.54541e5 / 0.567e3 * (eta ^ 2) + 0.54151e5 / 0.567e3 * (eta ^ 3) + 0.48242e5 / 0.567e3 * eta - 0.41e2 / 0.7e1 * (eta ^ 5) + 0.73730e5 / 0.1701e4) * ci2 ^ 24 + (-0.260327e6 / 0.3240e4 * (eta ^ 4) - 0.8443231e7 / 0.34020e5 * (eta ^ 2) + 0.12799e5 / 0.840e3 * (eta ^ 5) - 0.582991e6 / 0.2268e4 * (eta ^ 3) - 0.4826623e7 / 0.22680e5 * eta - 0.7533823e7 / 0.68040e5) * ci2 ^ 22 + (0.302095e6 / 0.2268e4 * (eta ^ 4) + 0.2155457e7 / 0.5670e4 * (eta ^ 2) + 0.7057849e7 / 0.17010e5 * (eta ^ 3) + 0.131387e6 / 0.420e3 * eta - 0.9733e4 / 0.420e3 * (eta ^ 5) + 0.210547e6 / 0.1260e4) * ci2 ^ 20 + (-0.422249e6 / 0.2835e4 * (eta ^ 4) - 0.6542903e7 / 0.17010e5 * (eta ^ 2) - 0.1522669e7 / 0.3402e4 * (eta ^ 3) - 0.1698331e7 / 0.5670e4 * eta + 0.479e3 / 0.21e2 * (eta ^ 5) - 0.2815231e7 / 0.17010e5) * ci2 ^ 18 + (0.2217197e7 / 0.11340e5 * eta + 0.2236291e7 / 0.18900e5 * (eta ^ 4) + 0.2302289e7 / 0.8505e4 * (eta ^ 2) - 0.13651e5 / 0.900e3 * (eta ^ 5) + 0.1607219e7 / 0.4725e4 * (eta ^ 3) + 0.3844901e7 / 0.34020e5) * ci2 ^ 16 + (-0.40067809e8 / 0.453600e6 * eta - 0.51743569e8 / 0.756000e6 * (eta ^ 4) - 0.92435773e8 / 0.680400e6 * (eta ^ 2) + 0.5201381e7 / 0.756000e6 * (eta ^ 5) - 0.636020543e9 / 0.3402000e7 * (eta ^ 3) - 0.73999969e8 / 0.1360800e7) * ci2 ^ 14 + (0.3101257e7 / 0.113400e6 * eta + 0.2744519e7 / 0.94500e5 * (eta ^ 4) + 0.3971117e7 / 0.81000e5 * (eta ^ 2) - 0.196523e6 / 0.94500e5 * (eta ^ 5) + 0.127591979e9 / 0.1701000e7 * (eta ^ 3) + 0.1258373e7 / 0.68040e5) * ci2 ^ 12 + (-0.3495461e7 / 0.630000e6 * eta - 0.10186931e8 / 0.1134000e7 * (eta ^ 4) - 0.15372053e8 / 0.1215000e7 * (eta ^ 2) - 0.186041957e9 / 0.8505000e7 * (eta ^ 3) - 0.2761687e7 / 0.630000e6 + 0.435023e6 / 0.1134000e7 * (eta ^ 5)) * ci2 ^ 10 + (0.52327e5 / 0.81000e5 * eta + 0.803737e6 / 0.405000e6 * (eta ^ 4) + 0.3243301e7 / 0.1417500e7 * (eta ^ 2) + 0.2764327e7 / 0.607500e6 * (eta ^ 3) + 0.1187233e7 / 0.1701000e7 - 0.16543e5 / 0.567000e6 * (eta ^ 5)) * ci2 ^ 8 + (-0.533479e6 / 0.1771875e7 * (eta ^ 4) - 0.11841433e8 / 0.42525000e8 * (eta ^ 2) - 0.204709e6 / 0.315000e6 * (eta ^ 3) - 0.288107e6 / 0.14175000e8 * eta - 0.2936267e7 / 0.42525000e8 - 0.2137e4 / 0.590625e6 * (eta ^ 5)) * ci2 ^ 6 + (0.828557e6 / 0.28350000e8 * (eta ^ 4) + 0.899027e6 / 0.42525000e8 * (eta ^ 2) + 0.14419e5 / 0.243000e6 * (eta ^ 3) - 0.131533e6 / 0.28350000e8 * eta + 0.2383e4 / 0.680400e6 + 0.31343e5 / 0.28350000e8 * (eta ^ 5)) * ci2 ^ 4 + (-0.89707e5 / 0.56700000e8 * (eta ^ 4) - 0.24271e5 / 0.28350000e8 * (eta ^ 2) - 0.255539e6 / 0.85050000e8 * (eta ^ 3) + 0.433e3 / 0.756000e6 * eta - 0.331e3 / 0.11340000e8 - 0.277e3 / 0.2700000e7 * (eta ^ 5)) * ci2 ^ 2 + 0.7e1 / 0.2025000e7 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 + 0.1e1) * (eta - 1) * (1 + eta) * (ci2 - 0.1e1) * cos((3 * g)) + ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * ci2 ^ 22 + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * ci2 ^ 20 + (0.228593e6 / 0.2376e4 * (eta ^ 4) + 0.6645599e7 / 0.17820e5 * (eta ^ 2) + 0.5259007e7 / 0.17820e5 * (eta ^ 3) + 0.489089e6 / 0.2376e4 * eta + 0.1031e4 / 0.88e2 * (eta ^ 5) + 0.489089e6 / 0.11880e5) * ci2 ^ 18 + (-0.1954483e7 / 0.7128e4 * eta - 0.1523237e7 / 0.11880e5 * (eta ^ 4) - 0.327637e6 / 0.660e3 * (eta ^ 2) - 0.4133e4 / 0.264e3 * (eta ^ 5) - 0.1399403e7 / 0.3564e4 * (eta ^ 3) - 0.1954483e7 / 0.35640e5) * ci2 ^ 16 + (0.1689737e7 / 0.7128e4 * eta + 0.263779e6 / 0.2376e4 * (eta ^ 4) + 0.7642301e7 / 0.17820e5 * (eta ^ 2) + 0.1633e4 / 0.120e3 * (eta ^ 5) + 0.671413e6 / 0.1980e4 * (eta ^ 3) + 0.1689737e7 / 0.35640e5) * ci2 ^ 14 + (-0.331565e6 / 0.2376e4 * eta - 0.3892373e7 / 0.59400e5 * (eta ^ 4) - 0.4495187e7 / 0.17820e5 * (eta ^ 2) - 0.159899e6 / 0.19800e5 * (eta ^ 5) - 0.17768447e8 / 0.89100e5 * (eta ^ 3) - 0.66313e5 / 0.2376e4) * ci2 ^ 12 + (0.147859e6 / 0.2592e4 * eta + 0.3549751e7 / 0.132000e6 * (eta ^ 4) + 0.61196527e8 / 0.594000e6 * (eta ^ 2) + 0.145134029e9 / 0.1782000e7 * (eta ^ 3) + 0.147859e6 / 0.12960e5 + 0.793031e6 / 0.237600e6 * (eta ^ 5)) * ci2 ^ 10 + (-0.1049159e7 / 0.64800e5 * eta - 0.828641e6 / 0.108000e6 * (eta ^ 4) - 0.10410541e8 / 0.356400e6 * (eta ^ 2) - 0.41153249e8 / 0.1782000e7 * (eta ^ 3) - 0.1049159e7 / 0.324000e6 - 0.1141487e7 / 0.1188000e7 * (eta ^ 5)) * ci2 ^ 8 + (0.805903e6 / 0.540000e6 * (eta ^ 4) + 0.50224751e8 / 0.8910000e7 * (eta ^ 2) + 0.7943011e7 / 0.1782000e7 * (eta ^ 3) + 0.2229959e7 / 0.712800e6 * eta + 0.2229959e7 / 0.3564000e7 + 0.1122721e7 / 0.5940000e7 * (eta ^ 5)) * ci2 ^ 6 + (-0.224441e6 / 0.1188000e7 * (eta ^ 4) - 0.83909e5 / 0.118800e6 * (eta ^ 2) - 0.66373e5 / 0.118800e6 * (eta ^ 3) - 0.691e3 / 0.1760e4 * eta - 0.691e3 / 0.8800e4 - 0.28837e5 / 0.1188000e7 * (eta ^ 5)) * ci2 ^ 4 + (0.418679e6 / 0.29700000e8 * (eta ^ 4) + 0.210383e6 / 0.4050000e7 * (eta ^ 2) + 0.1832293e7 / 0.44550000e8 * (eta ^ 3) + 0.515489e6 / 0.17820000e8 * eta + 0.515489e6 / 0.89100000e8 + 0.54859e5 / 0.29700000e8 * (eta ^ 5)) * ci2 ^ 2 - 0.637e3 / 0.9900000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 + 0.1e1) ^ 2 * ((eta - 1) ^ 2) * (ci2 - 0.1e1) ^ 2 * ci2 ^ 2 * cos((5 * g)) + 0.10e2 / 0.11e2 * ((1 + eta) ^ 2) * cos(g) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * ci2 ^ 24 + (0.3187e4 / 0.60e2 * (eta ^ 4) - 0.11896e5 / 0.135e3 * (eta ^ 2) - 0.111e3 / 0.20e2 * (eta ^ 5) + 0.148e3 / 0.5e1 * (eta ^ 3) + 0.11501e5 / 0.540e3 * eta - 0.7031e4 / 0.108e3) * ci2 ^ 22 + (-0.87536e5 / 0.675e3 * (eta ^ 4) + 0.862939e6 / 0.4050e4 * (eta ^ 2) - 0.96439e5 / 0.1350e4 * (eta ^ 3) - 0.211343e6 / 0.4050e4 * eta + 0.336e3 / 0.25e2 * (eta ^ 5) + 0.622417e6 / 0.4050e4) * ci2 ^ 20 + (0.332821e6 / 0.1800e4 * (eta ^ 4) - 0.244991e6 / 0.810e3 * (eta ^ 2) + 0.133961e6 / 0.1350e4 * (eta ^ 3) + 0.1222871e7 / 0.16200e5 * eta - 0.11209e5 / 0.600e3 * (eta ^ 5) - 0.3388513e7 / 0.16200e5) * ci2 ^ 18 + (-0.5748613e7 / 0.81000e5 * eta - 0.4590277e7 / 0.27000e5 * (eta ^ 4) + 0.5631311e7 / 0.20250e5 * (eta ^ 2) + 0.16497e5 / 0.1000e4 * (eta ^ 5) - 0.197587e6 / 0.2250e4 * (eta ^ 3) + 0.14709827e8 / 0.81000e5) * ci2 ^ 16 + (0.1819693e7 / 0.40500e5 * eta + 0.707533e6 / 0.6750e4 * (eta ^ 4) - 0.6966443e7 / 0.40500e5 * (eta ^ 2) - 0.21797e5 / 0.2250e4 * (eta ^ 5) + 0.232789e6 / 0.4500e4 * (eta ^ 3) - 0.34039e5 / 0.324e3) * ci2 ^ 14 + (-0.7746467e7 / 0.405000e6 * eta - 0.5864209e7 / 0.135000e6 * (eta ^ 4) + 0.14513723e8 / 0.202500e6 * (eta ^ 2) + 0.20887e5 / 0.5400e4 * (eta ^ 5) - 0.1388047e7 / 0.67500e5 * (eta ^ 3) + 0.16624813e8 / 0.405000e6) * ci2 ^ 12 + (0.169819e6 / 0.32400e5 * eta + 0.1046219e7 / 0.90000e5 * (eta ^ 4) - 0.1564943e7 / 0.81000e5 * (eta ^ 2) + 0.738199e6 / 0.135000e6 * (eta ^ 3) - 0.8696813e7 / 0.810000e6 - 0.96517e5 / 0.90000e5 * (eta ^ 5)) * ci2 ^ 10 + (-0.1072643e7 / 0.1350000e7 * eta - 0.2340619e7 / 0.1350000e7 * (eta ^ 4) + 0.1968719e7 / 0.675000e6 * (eta ^ 2) - 0.127469e6 / 0.135000e6 * (eta ^ 3) + 0.2458957e7 / 0.1350000e7 + 0.59137e5 / 0.270000e6 * (eta ^ 5)) * ci2 ^ 8 + (0.6203e4 / 0.150000e6 * (eta ^ 4) - 0.31913e5 / 0.405000e6 * (eta ^ 2) + 0.7633e4 / 0.75000e5 * (eta ^ 3) + 0.71713e5 / 0.4050000e7 * eta - 0.768959e6 / 0.4050000e7 - 0.17023e5 / 0.450000e6 * (eta ^ 5)) * ci2 ^ 6 + (0.8863e4 / 0.270000e6 * (eta ^ 4) - 0.107573e6 / 0.2025000e7 * (eta ^ 2) - 0.1621e4 / 0.225000e6 * (eta ^ 3) + 0.64601e5 / 0.4050000e7 * eta + 0.9637e4 / 0.810000e6 + 0.323e3 / 0.54000e5 * (eta ^ 5)) * ci2 ^ 4 - 0.931e3 / 0.1350000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (eta - 1) * ci2 ^ 2 + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1)) * R__e ^ 4 * ci2 * J ^ 2 / ((1 + eta) ^ 3) / (0.5e1 * ci2 ^ 4 - 0.5e1 * ci2 ^ 2 + 0.1e1) ^ 5 / a ^ 4 / (eta ^ 8) -0.928125e6 / 0.64e2 * sqrt(-ci2 ^ 2 + 0.1e1) * R__e ^ 4 * (0.18e2 / 0.11e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (eta - 1) * (1 + eta) * ((-0.557e3 / 0.81e2 * (eta ^ 4) - 0.3812e4 / 0.243e3 * (eta ^ 2) - 0.4895e4 / 0.729e3 + (eta ^ 5) - 0.4964e4 / 0.243e3 * (eta ^ 3) - 0.2735e4 / 0.243e3 * eta) * ci2 ^ 24 + (0.445e3 / 0.12e2 * (eta ^ 4) + 0.20608e5 / 0.243e3 * (eta ^ 2) - 0.65e2 / 0.12e2 * (eta ^ 5) + 0.8938e4 / 0.81e2 * (eta ^ 3) + 0.19603e5 / 0.324e3 * eta + 0.35155e5 / 0.972e3) * ci2 ^ 22 + (-0.108856e6 / 0.1215e4 * (eta ^ 4) - 0.294191e6 / 0.1458e4 * (eta ^ 2) - 0.643603e6 / 0.2430e4 * (eta ^ 3) - 0.344497e6 / 0.2430e4 * eta + 0.344e3 / 0.27e2 * (eta ^ 5) - 0.622417e6 / 0.7290e4) * ci2 ^ 20 + (0.1237837e7 / 0.9720e4 * (eta ^ 4) + 0.37522e5 / 0.135e3 * (eta ^ 2) + 0.451142e6 / 0.1215e4 * (eta ^ 3) + 0.370277e6 / 0.1944e4 * eta - 0.6163e4 / 0.360e3 * (eta ^ 5) + 0.3388513e7 / 0.29160e5) * ci2 ^ 18 + (-0.7890347e7 / 0.48600e5 * eta - 0.5707727e7 / 0.48600e5 * (eta ^ 4) - 0.893683e6 / 0.3645e4 * (eta ^ 2) + 0.15703e5 / 0.1080e4 * (eta ^ 5) - 0.2040331e7 / 0.6075e4 * (eta ^ 3) - 0.14709827e8 / 0.145800e6) * ci2 ^ 16 + (0.2230019e7 / 0.24300e5 * eta + 0.886241e6 / 0.12150e5 * (eta ^ 4) + 0.3512293e7 / 0.24300e5 * (eta ^ 2) - 0.33067e5 / 0.4050e4 * (eta ^ 5) + 0.4957487e7 / 0.24300e5 * (eta ^ 3) + 0.170195e6 / 0.2916e4) * ci2 ^ 14 + (-0.8501053e7 / 0.243000e6 * eta - 0.1483891e7 / 0.48600e5 * (eta ^ 4) - 0.20977351e8 / 0.364500e6 * (eta ^ 2) + 0.250601e6 / 0.81000e5 * (eta ^ 5) - 0.10165363e8 / 0.121500e6 * (eta ^ 3) - 0.16624813e8 / 0.729000e6) * ci2 ^ 12 + (0.4382717e7 / 0.486000e6 * eta + 0.803887e6 / 0.97200e5 * (eta ^ 4) + 0.11082353e8 / 0.729000e6 * (eta ^ 2) + 0.1091681e7 / 0.48600e5 * (eta ^ 3) + 0.8696813e7 / 0.1458000e7 - 0.43423e5 / 0.54000e5 * (eta ^ 5)) * ci2 ^ 10 + (-0.1281757e7 / 0.810000e6 * eta - 0.113099e6 / 0.90000e5 * (eta ^ 4) - 0.9119927e7 / 0.3645000e7 * (eta ^ 2) - 0.4312627e7 / 0.1215000e7 * (eta ^ 3) - 0.2458957e7 / 0.2430000e7 + 0.366029e6 / 0.2430000e7 * (eta ^ 5)) * ci2 ^ 8 + (0.3227e4 / 0.90000e5 * (eta ^ 4) + 0.769411e6 / 0.3645000e7 * (eta ^ 2) + 0.47483e5 / 0.243000e6 * (eta ^ 3) + 0.97747e5 / 0.486000e6 * eta + 0.768959e6 / 0.7290000e7 - 0.18943e5 / 0.810000e6 * (eta ^ 5)) * ci2 ^ 6 + (0.10909e5 / 0.486000e6 * (eta ^ 4) - 0.1589e4 / 0.3645000e7 * (eta ^ 2) + 0.40303e5 / 0.1215000e7 * (eta ^ 3) - 0.53657e5 / 0.2430000e7 * eta - 0.9637e4 / 0.1458000e7 + 0.8299e4 / 0.2430000e7 * (eta ^ 5)) * ci2 ^ 4 - 0.931e3 / 0.2430000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (1 + eta) * ci2 ^ 2 + 0.49e2 / 0.2430000e7 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * sin((3 * g + 2 * h)) - (ci2 + 0.1e1) * ((eta - 1) ^ 2) * ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * ci2 ^ 24 + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * ci2 ^ 22 + (0.6901e4 / 0.72e2 * (eta ^ 4) + 0.601849e6 / 0.1620e4 * (eta ^ 2) + 0.5239507e7 / 0.17820e5 * (eta ^ 3) + 0.487189e6 / 0.2376e4 * eta + 0.1027e4 / 0.88e2 * (eta ^ 5) + 0.487189e6 / 0.11880e5) * ci2 ^ 20 + (-0.187384e6 / 0.1485e4 * (eta ^ 4) - 0.435434e6 / 0.891e3 * (eta ^ 2) - 0.17398e5 / 0.45e2 * (eta ^ 3) - 0.240452e6 / 0.891e3 * eta - 0.508e3 / 0.33e2 * (eta ^ 5) - 0.240452e6 / 0.4455e4) * ci2 ^ 18 + (0.809179e6 / 0.3564e4 * eta + 0.630917e6 / 0.5940e4 * (eta ^ 4) + 0.3661667e7 / 0.8910e4 * (eta ^ 2) + 0.779e3 / 0.60e2 * (eta ^ 5) + 0.2895971e7 / 0.8910e4 * (eta ^ 3) + 0.809179e6 / 0.17820e5) * ci2 ^ 16 + (-0.25031e5 / 0.198e3 * eta - 0.878473e6 / 0.14850e5 * (eta ^ 4) - 0.1019087e7 / 0.4455e4 * (eta ^ 2) - 0.35839e5 / 0.4950e4 * (eta ^ 5) - 0.4028987e7 / 0.22275e5 * (eta ^ 3) - 0.25031e5 / 0.990e3) * ci2 ^ 14 + (0.1316581e7 / 0.28512e5 * eta + 0.8546953e7 / 0.396000e6 * (eta ^ 4) + 0.148892881e9 / 0.1782000e7 * (eta ^ 2) + 0.626771e6 / 0.237600e6 * (eta ^ 5) + 0.4359427e7 / 0.66000e5 * (eta ^ 3) + 0.1316581e7 / 0.142560e6) * ci2 ^ 12 + (-0.911113e6 / 0.89100e5 * eta - 0.705151e6 / 0.148500e6 * (eta ^ 4) - 0.4125761e7 / 0.222750e6 * (eta ^ 2) - 0.3260417e7 / 0.222750e6 * (eta ^ 3) - 0.911113e6 / 0.445500e6 - 0.85219e5 / 0.148500e6 * (eta ^ 5)) * ci2 ^ 10 + (0.13115e5 / 0.14256e5 * eta + 0.12211e5 / 0.30000e5 * (eta ^ 4) + 0.7483963e7 / 0.4455000e7 * (eta ^ 2) + 0.393557e6 / 0.297000e6 * (eta ^ 3) + 0.2623e4 / 0.14256e5 + 0.133093e6 / 0.2970000e7 * (eta ^ 5)) * ci2 ^ 8 + (0.119831e6 / 0.1485000e7 * (eta ^ 4) + 0.609197e6 / 0.2227500e7 * (eta ^ 2) + 0.96841e5 / 0.445500e6 * (eta ^ 3) + 0.5497e4 / 0.35640e5 * eta + 0.5497e4 / 0.178200e6 + 0.17387e5 / 0.1485000e7 * (eta ^ 5)) * ci2 ^ 6 + (-0.53711e5 / 0.1856250e7 * (eta ^ 4) - 0.288787e6 / 0.2784375e7 * (eta ^ 2) - 0.229187e6 / 0.2784375e7 * (eta ^ 3) - 0.7169e4 / 0.123750e6 * eta - 0.7169e4 / 0.618750e6 - 0.7291e4 / 0.1856250e7 * (eta ^ 5)) * ci2 ^ 4 + 0.637e3 / 0.1350000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4) * ci2 ^ 2 - 0.637e3 / 0.29700000e8 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((5 * g + 2 * h)) - 0.3e1 / 0.11e2 * (ci2 + 0.1e1) ^ 2 * ((0.563e3 / 0.81e2 * (eta ^ 4) - 0.626e3 / 0.27e2 * (eta ^ 2) - 0.1045e4 / 0.81e2 + (eta ^ 5) + 0.806e3 / 0.81e2 * (eta ^ 3) - 0.1045e4 / 0.27e2 * eta) * ci2 ^ 22 + (-0.6113e4 / 0.162e3 * (eta ^ 4) + 0.1057e4 / 0.9e1 * (eta ^ 2) - 0.4441e4 / 0.81e2 * (eta ^ 3) + 0.10735e5 / 0.54e2 * eta - 0.11e2 / 0.2e1 * (eta ^ 5) + 0.10735e5 / 0.162e3) * ci2 ^ 20 + (0.98761e5 / 0.1080e4 * (eta ^ 4) - 0.1279183e7 / 0.4860e4 * (eta ^ 2) + 0.218389e6 / 0.1620e4 * (eta ^ 3) - 0.489089e6 / 0.1080e4 * eta + 0.973e3 / 0.72e2 * (eta ^ 5) - 0.489089e6 / 0.3240e4) * ci2 ^ 18 + (0.1954483e7 / 0.3240e4 * eta - 0.140941e6 / 0.1080e4 * (eta ^ 4) + 0.1671401e7 / 0.4860e4 * (eta ^ 2) - 0.1409e4 / 0.72e2 * (eta ^ 5) - 0.948049e6 / 0.4860e4 * (eta ^ 3) + 0.1954483e7 / 0.9720e4) * ci2 ^ 16 + (-0.1689737e7 / 0.3240e4 * eta + 0.131567e6 / 0.1080e4 * (eta ^ 4) - 0.282427e6 / 0.972e3 * (eta ^ 2) + 0.6679e4 / 0.360e3 * (eta ^ 5) + 0.896591e6 / 0.4860e4 * (eta ^ 3) - 0.1689737e7 / 0.9720e4) * ci2 ^ 14 + (0.66313e5 / 0.216e3 * eta - 0.421889e6 / 0.5400e4 * (eta ^ 4) + 0.808399e6 / 0.4860e4 * (eta ^ 2) - 0.65323e5 / 0.5400e4 * (eta ^ 5) - 0.969881e6 / 0.8100e4 * (eta ^ 3) + 0.66313e5 / 0.648e3) * ci2 ^ 12 + (-0.1626449e7 / 0.12960e5 * eta + 0.11394769e8 / 0.324000e6 * (eta ^ 4) - 0.31919317e8 / 0.486000e6 * (eta ^ 2) + 0.1059053e7 / 0.19440e5 * (eta ^ 3) - 0.1626449e7 / 0.38880e5 + 0.598793e6 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 10 + (0.11540749e8 / 0.324000e6 * eta - 0.3609497e7 / 0.324000e6 * (eta ^ 4) + 0.2888429e7 / 0.162000e6 * (eta ^ 2) - 0.8462431e7 / 0.486000e6 * (eta ^ 3) + 0.11540749e8 / 0.972000e6 - 0.193553e6 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 8 + (0.3959807e7 / 0.1620000e7 * (eta ^ 4) - 0.876589e6 / 0.270000e6 * (eta ^ 2) + 0.9344077e7 / 0.2430000e7 * (eta ^ 3) - 0.2229959e7 / 0.324000e6 * eta - 0.2229959e7 / 0.972000e6 + 0.43483e5 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 6 + (-0.115411e6 / 0.324000e6 * (eta ^ 4) + 0.60767e5 / 0.162000e6 * (eta ^ 2) - 0.10111e5 / 0.18000e5 * (eta ^ 3) + 0.691e3 / 0.800e3 * eta + 0.691e3 / 0.2400e4 - 0.6523e4 / 0.108000e6 * (eta ^ 5)) * ci2 ^ 4 + (0.28201e5 / 0.900000e6 * (eta ^ 4) - 0.99251e5 / 0.4050000e7 * (eta ^ 2) + 0.597689e6 / 0.12150000e8 * (eta ^ 3) - 0.515489e6 / 0.8100000e7 * eta - 0.515489e6 / 0.24300000e8 + 0.4963e4 / 0.900000e6 * (eta ^ 5)) * ci2 ^ 2 - 0.637e3 / 0.2700000e7 * (eta - 1) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 1) * (1 + eta) * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * sin((-2 * h + 3 * g)) + 0.10e2 / 0.11e2 * (ci2 + 0.1e1) * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * ci2 ^ 22 + (0.2897e4 / 0.60e2 * (eta ^ 4) - 0.6478e4 / 0.81e2 * (eta ^ 2) + 0.3634e4 / 0.135e3 * (eta ^ 3) + 0.31333e5 / 0.1620e4 * eta - 0.101e3 / 0.20e2 * (eta ^ 5) - 0.19135e5 / 0.324e3) * ci2 ^ 20 + (-0.289289e6 / 0.2700e4 * (eta ^ 4) + 0.710999e6 / 0.4050e4 * (eta ^ 2) - 0.79499e5 / 0.1350e4 * (eta ^ 3) - 0.349331e6 / 0.8100e4 * eta + 0.1109e4 / 0.100e3 * (eta ^ 5) + 0.1020109e7 / 0.8100e4) * ci2 ^ 18 + (0.927671e6 / 0.16200e5 * eta + 0.83527e5 / 0.600e3 * (eta ^ 4) - 0.920611e6 / 0.4050e4 * (eta ^ 2) - 0.8329e4 / 0.600e3 * (eta ^ 5) + 0.19901e5 / 0.270e3 * (eta ^ 3) - 0.2491393e7 / 0.16200e5) * ci2 ^ 16 + (-0.507946e6 / 0.10125e5 * eta - 0.396409e6 / 0.3375e4 * (eta ^ 4) + 0.1950473e7 / 0.10125e5 * (eta ^ 2) + 0.4087e4 / 0.375e3 * (eta ^ 5) - 0.196633e6 / 0.3375e4 * (eta ^ 3) + 0.1201154e7 / 0.10125e5) * ci2 ^ 14 + (0.1226303e7 / 0.40500e5 * eta + 0.151679e6 / 0.2250e4 * (eta ^ 4) - 0.4530781e7 / 0.40500e5 * (eta ^ 2) - 0.12493e5 / 0.2250e4 * (eta ^ 5) + 0.136259e6 / 0.4500e4 * (eta ^ 3) - 0.487109e6 / 0.8100e4) * ci2 ^ 12 + (-0.191131e6 / 0.15000e5 * eta - 0.3614989e7 / 0.135000e6 * (eta ^ 4) + 0.762824e6 / 0.16875e5 * (eta ^ 2) - 0.58696e5 / 0.5625e4 * (eta ^ 3) + 0.302629e6 / 0.15000e5 + 0.49271e5 / 0.27000e5 * (eta ^ 5)) * ci2 ^ 10 + (0.599147e6 / 0.162000e6 * eta + 0.219949e6 / 0.30000e5 * (eta ^ 4) - 0.5109619e7 / 0.405000e6 * (eta ^ 2) + 0.316063e6 / 0.135000e6 * (eta ^ 3) - 0.3552953e7 / 0.810000e6 - 0.98651e5 / 0.270000e6 * (eta ^ 5)) * ci2 ^ 8 + (-0.455041e6 / 0.337500e6 * (eta ^ 4) + 0.398011e6 / 0.168750e6 * (eta ^ 2) - 0.10937e5 / 0.33750e5 * (eta ^ 3) - 0.241397e6 / 0.337500e6 * eta + 0.196363e6 / 0.337500e6 + 0.487e3 / 0.13500e5 * (eta ^ 5)) * ci2 ^ 6 + (0.42469e5 / 0.270000e6 * (eta ^ 4) - 0.560969e6 / 0.2025000e7 * (eta ^ 2) + 0.16357e5 / 0.675000e6 * (eta ^ 3) + 0.348071e6 / 0.4050000e7 * eta - 0.164281e6 / 0.4050000e7 + 0.227e3 / 0.450000e6 * (eta ^ 5)) * ci2 ^ 4 + (-0.1397e4 / 0.135000e6 * (eta ^ 4) + 0.1516e4 / 0.84375e5 * (eta ^ 2) - 0.16e2 / 0.28125e5 * (eta ^ 3) - 0.3767e4 / 0.675000e6 * eta + 0.553e3 / 0.675000e6 - 0.329e3 / 0.675000e6 * (eta ^ 5)) * ci2 ^ 2 + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((1 + eta) ^ 2) * (ci2 - 0.1e1) * sin((g - 2 * h)) - 0.15e2 / 0.11e2 * (ci2 + 0.1e1) * (eta - 1) * (1 + eta) * (((eta ^ 5) - 0.467e3 / 0.81e2 * eta - 0.781e3 / 0.81e2 * (eta ^ 4) - 0.5746e4 / 0.405e3 * (eta ^ 2) - 0.3578e4 / 0.135e3 * (eta ^ 3) - 0.1331e4 / 0.243e3) * ci2 ^ 26 + (0.21011e5 / 0.135e3 * (eta ^ 3) + 0.16037e5 / 0.405e3 * eta + 0.4550e4 / 0.81e2 * (eta ^ 4) + 0.7103e4 / 0.81e2 * (eta ^ 2) - (6 * eta ^ 5) + 0.8305e4 / 0.243e3) * ci2 ^ 24 + (0.28787e5 / 0.1800e4 * (eta ^ 5) - 0.3346253e7 / 0.8100e4 * (eta ^ 3) - 0.1903489e7 / 0.16200e5 * eta - 0.160561e6 / 0.1080e4 * (eta ^ 4) - 0.1177957e7 / 0.4860e4 * (eta ^ 2) - 0.4610689e7 / 0.48600e5) * ci2 ^ 22 + (-0.22459e5 / 0.900e3 * (eta ^ 5) + 0.383387e6 / 0.1620e4 * (eta ^ 4) + 0.4810073e7 / 0.12150e5 * (eta ^ 2) + 0.7964891e7 / 0.12150e5 * (eta ^ 3) + 0.1623833e7 / 0.8100e4 * eta + 0.3761153e7 / 0.24300e5) * ci2 ^ 20 + (0.3791e4 / 0.150e3 * (eta ^ 5) - 0.1023529e7 / 0.4050e4 * (eta ^ 4) - 0.5167901e7 / 0.12150e5 * (eta ^ 2) - 0.8419339e7 / 0.12150e5 * (eta ^ 3) - 0.148192e6 / 0.675e3 * eta - 0.334342e6 / 0.2025e4) * ci2 ^ 18 + (0.7736201e7 / 0.40500e5 * (eta ^ 4) + 0.71224e5 / 0.225e3 * (eta ^ 2) + 0.5209364e7 / 0.10125e5 * (eta ^ 3) + 0.1316081e7 / 0.8100e4 * eta - 0.234799e6 / 0.13500e5 * (eta ^ 5) + 0.588757e6 / 0.4860e4) * ci2 ^ 16 + (-0.11335603e8 / 0.108000e6 * (eta ^ 4) - 0.1673317e7 / 0.10000e5 * (eta ^ 2) - 0.669586993e9 / 0.2430000e7 * (eta ^ 3) - 0.2989111e7 / 0.36000e5 * eta + 0.297253e6 / 0.36000e5 * (eta ^ 5) - 0.751039e6 / 0.12000e5) * ci2 ^ 14 + (0.2143312e7 / 0.50625e5 * (eta ^ 4) + 0.25655273e8 / 0.405000e6 * (eta ^ 2) + 0.26126741e8 / 0.243000e6 * (eta ^ 3) + 0.11861833e8 / 0.405000e6 * eta - 0.602e3 / 0.225e3 * (eta ^ 5) + 0.27814873e8 / 0.1215000e7) * ci2 ^ 12 + (-0.50574677e8 / 0.4050000e7 * (eta ^ 4) - 0.6917087e7 / 0.405000e6 * (eta ^ 2) - 0.185070679e9 / 0.6075000e7 * (eta ^ 3) - 0.28180399e8 / 0.4050000e7 * eta + 0.50717e5 / 0.90000e5 * (eta ^ 5) - 0.71286799e8 / 0.12150000e8) * ci2 ^ 10 + (0.5358301e7 / 0.2025000e7 * (eta ^ 4) + 0.3253619e7 / 0.1012500e7 * (eta ^ 2) + 0.18717191e8 / 0.3037500e7 * (eta ^ 3) + 0.421259e6 / 0.405000e6 * eta - 0.26669e5 / 0.405000e6 * (eta ^ 5) + 0.1242203e7 / 0.1215000e7) * ci2 ^ 8 + (-0.656119e6 / 0.1687500e7 * (eta ^ 4) - 0.819949e6 / 0.2025000e7 * (eta ^ 2) - 0.8696843e7 / 0.10125000e8 * (eta ^ 3) - 0.32171e5 / 0.405000e6 * eta + 0.4913e4 / 0.5062500e7 * (eta ^ 5) - 0.690487e6 / 0.6075000e7) * ci2 ^ 6 + (0.752723e6 / 0.20250000e8 * (eta ^ 4) + 0.106597e6 / 0.3375000e7 * (eta ^ 2) + 0.2347523e7 / 0.30375000e8 * (eta ^ 3) - 0.6419e4 / 0.20250000e8 * eta + 0.17329e5 / 0.20250000e8 * (eta ^ 5) + 0.422989e6 / 0.60750000e8) * ci2 ^ 4 + (-0.82813e5 / 0.40500000e8 * (eta ^ 4) - 0.78299e5 / 0.60750000e8 * (eta ^ 2) - 0.239557e6 / 0.60750000e8 * (eta ^ 3) + 0.21101e5 / 0.40500000e8 * eta - 0.4543e4 / 0.40500000e8 * (eta ^ 5) - 0.16339e5 / 0.121500000e9) * ci2 ^ 2 + 0.49e2 / 0.10125000e8 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 - 0.1e1) * sin((3 * g)) + (ci2 + 0.1e1) ^ 2 * ((eta - 1) ^ 2) * ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * ci2 ^ 22 + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * ci2 ^ 20 + (0.228593e6 / 0.2376e4 * (eta ^ 4) + 0.6645599e7 / 0.17820e5 * (eta ^ 2) + 0.5259007e7 / 0.17820e5 * (eta ^ 3) + 0.489089e6 / 0.2376e4 * eta + 0.1031e4 / 0.88e2 * (eta ^ 5) + 0.489089e6 / 0.11880e5) * ci2 ^ 18 + (-0.1954483e7 / 0.7128e4 * eta - 0.1523237e7 / 0.11880e5 * (eta ^ 4) - 0.327637e6 / 0.660e3 * (eta ^ 2) - 0.4133e4 / 0.264e3 * (eta ^ 5) - 0.1399403e7 / 0.3564e4 * (eta ^ 3) - 0.1954483e7 / 0.35640e5) * ci2 ^ 16 + (0.1689737e7 / 0.7128e4 * eta + 0.263779e6 / 0.2376e4 * (eta ^ 4) + 0.7642301e7 / 0.17820e5 * (eta ^ 2) + 0.1633e4 / 0.120e3 * (eta ^ 5) + 0.671413e6 / 0.1980e4 * (eta ^ 3) + 0.1689737e7 / 0.35640e5) * ci2 ^ 14 + (-0.331565e6 / 0.2376e4 * eta - 0.3892373e7 / 0.59400e5 * (eta ^ 4) - 0.4495187e7 / 0.17820e5 * (eta ^ 2) - 0.159899e6 / 0.19800e5 * (eta ^ 5) - 0.17768447e8 / 0.89100e5 * (eta ^ 3) - 0.66313e5 / 0.2376e4) * ci2 ^ 12 + (0.147859e6 / 0.2592e4 * eta + 0.3549751e7 / 0.132000e6 * (eta ^ 4) + 0.61196527e8 / 0.594000e6 * (eta ^ 2) + 0.145134029e9 / 0.1782000e7 * (eta ^ 3) + 0.147859e6 / 0.12960e5 + 0.793031e6 / 0.237600e6 * (eta ^ 5)) * ci2 ^ 10 + (-0.1049159e7 / 0.64800e5 * eta - 0.828641e6 / 0.108000e6 * (eta ^ 4) - 0.10410541e8 / 0.356400e6 * (eta ^ 2) - 0.41153249e8 / 0.1782000e7 * (eta ^ 3) - 0.1049159e7 / 0.324000e6 - 0.1141487e7 / 0.1188000e7 * (eta ^ 5)) * ci2 ^ 8 + (0.805903e6 / 0.540000e6 * (eta ^ 4) + 0.50224751e8 / 0.8910000e7 * (eta ^ 2) + 0.7943011e7 / 0.1782000e7 * (eta ^ 3) + 0.2229959e7 / 0.712800e6 * eta + 0.2229959e7 / 0.3564000e7 + 0.1122721e7 / 0.5940000e7 * (eta ^ 5)) * ci2 ^ 6 + (-0.224441e6 / 0.1188000e7 * (eta ^ 4) - 0.83909e5 / 0.118800e6 * (eta ^ 2) - 0.66373e5 / 0.118800e6 * (eta ^ 3) - 0.691e3 / 0.1760e4 * eta - 0.691e3 / 0.8800e4 - 0.28837e5 / 0.1188000e7 * (eta ^ 5)) * ci2 ^ 4 + (0.418679e6 / 0.29700000e8 * (eta ^ 4) + 0.210383e6 / 0.4050000e7 * (eta ^ 2) + 0.1832293e7 / 0.44550000e8 * (eta ^ 3) + 0.515489e6 / 0.17820000e8 * eta + 0.515489e6 / 0.89100000e8 + 0.54859e5 / 0.29700000e8 * (eta ^ 5)) * ci2 ^ 2 - 0.637e3 / 0.9900000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ci2 ^ 2 * (ci2 - 0.1e1) ^ 2 * sin((5 * g)) - 0.10e2 / 0.11e2 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * ci2 ^ 24 + (0.3187e4 / 0.60e2 * (eta ^ 4) - 0.11896e5 / 0.135e3 * (eta ^ 2) - 0.111e3 / 0.20e2 * (eta ^ 5) + 0.148e3 / 0.5e1 * (eta ^ 3) + 0.11501e5 / 0.540e3 * eta - 0.7031e4 / 0.108e3) * ci2 ^ 22 + (-0.87536e5 / 0.675e3 * (eta ^ 4) + 0.862939e6 / 0.4050e4 * (eta ^ 2) - 0.96439e5 / 0.1350e4 * (eta ^ 3) - 0.211343e6 / 0.4050e4 * eta + 0.336e3 / 0.25e2 * (eta ^ 5) + 0.622417e6 / 0.4050e4) * ci2 ^ 20 + (0.332821e6 / 0.1800e4 * (eta ^ 4) - 0.244991e6 / 0.810e3 * (eta ^ 2) + 0.133961e6 / 0.1350e4 * (eta ^ 3) + 0.1222871e7 / 0.16200e5 * eta - 0.11209e5 / 0.600e3 * (eta ^ 5) - 0.3388513e7 / 0.16200e5) * ci2 ^ 18 + (-0.5748613e7 / 0.81000e5 * eta - 0.4590277e7 / 0.27000e5 * (eta ^ 4) + 0.5631311e7 / 0.20250e5 * (eta ^ 2) + 0.16497e5 / 0.1000e4 * (eta ^ 5) - 0.197587e6 / 0.2250e4 * (eta ^ 3) + 0.14709827e8 / 0.81000e5) * ci2 ^ 16 + (0.1819693e7 / 0.40500e5 * eta + 0.707533e6 / 0.6750e4 * (eta ^ 4) - 0.6966443e7 / 0.40500e5 * (eta ^ 2) - 0.21797e5 / 0.2250e4 * (eta ^ 5) + 0.232789e6 / 0.4500e4 * (eta ^ 3) - 0.34039e5 / 0.324e3) * ci2 ^ 14 + (-0.7746467e7 / 0.405000e6 * eta - 0.5864209e7 / 0.135000e6 * (eta ^ 4) + 0.14513723e8 / 0.202500e6 * (eta ^ 2) + 0.20887e5 / 0.5400e4 * (eta ^ 5) - 0.1388047e7 / 0.67500e5 * (eta ^ 3) + 0.16624813e8 / 0.405000e6) * ci2 ^ 12 + (0.169819e6 / 0.32400e5 * eta + 0.1046219e7 / 0.90000e5 * (eta ^ 4) - 0.1564943e7 / 0.81000e5 * (eta ^ 2) + 0.738199e6 / 0.135000e6 * (eta ^ 3) - 0.8696813e7 / 0.810000e6 - 0.96517e5 / 0.90000e5 * (eta ^ 5)) * ci2 ^ 10 + (-0.1072643e7 / 0.1350000e7 * eta - 0.2340619e7 / 0.1350000e7 * (eta ^ 4) + 0.1968719e7 / 0.675000e6 * (eta ^ 2) - 0.127469e6 / 0.135000e6 * (eta ^ 3) + 0.2458957e7 / 0.1350000e7 + 0.59137e5 / 0.270000e6 * (eta ^ 5)) * ci2 ^ 8 + (0.6203e4 / 0.150000e6 * (eta ^ 4) - 0.31913e5 / 0.405000e6 * (eta ^ 2) + 0.7633e4 / 0.75000e5 * (eta ^ 3) + 0.71713e5 / 0.4050000e7 * eta - 0.768959e6 / 0.4050000e7 - 0.17023e5 / 0.450000e6 * (eta ^ 5)) * ci2 ^ 6 + (0.8863e4 / 0.270000e6 * (eta ^ 4) - 0.107573e6 / 0.2025000e7 * (eta ^ 2) - 0.1621e4 / 0.225000e6 * (eta ^ 3) + 0.64601e5 / 0.4050000e7 * eta + 0.9637e4 / 0.810000e6 + 0.323e3 / 0.54000e5 * (eta ^ 5)) * ci2 ^ 4 - 0.931e3 / 0.1350000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (eta - 1) * ci2 ^ 2 + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((1 + eta) ^ 2) * sin(g)) * ci2 * sqrt((-eta ^ 2 + 1)) * J ^ 2 / (0.5e1 * ci2 ^ 4 - 0.5e1 * ci2 ^ 2 + 0.1e1) ^ 5 / ((1 + eta) ^ 3) / a ^ 4 / (eta ^ 8) 0.84375e5 / 0.128e3 * R__e ^ 4 * (ci2 + 0.1e1) * J ^ 2 * (ci2 - 0.1e1) * (-0.27e2 / 0.5e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((eta - 1) ^ 2) * (1 + eta) * ((-0.1828e4 / 0.243e3 * (eta ^ 5) - 0.29564e5 / 0.729e3 * (eta ^ 3) - 0.55640e5 / 0.2187e4 * eta + (eta ^ 6) - 0.23198e5 / 0.729e3 * (eta ^ 4) - 0.25111e5 / 0.729e3 * (eta ^ 2) - 0.19580e5 / 0.2187e4) * ci2 ^ 18 + (0.2552e4 / 0.81e2 * (eta ^ 5) + 0.124336e6 / 0.729e3 * (eta ^ 3) + 0.232264e6 / 0.2187e4 * eta - 0.38e2 / 0.9e1 * (eta ^ 6) + 0.97444e5 / 0.729e3 * (eta ^ 4) + 0.35038e5 / 0.243e3 * (eta ^ 2) + 0.81880e5 / 0.2187e4) * ci2 ^ 16 + (-0.365801e6 / 0.1458e4 * (eta ^ 2) - 0.224438e6 / 0.729e3 * (eta ^ 3) - 0.217642e6 / 0.3645e4 * (eta ^ 5) - 0.2002192e7 / 0.10935e5 * eta + 0.389e3 / 0.54e2 * (eta ^ 6) - 0.898601e6 / 0.3645e4 * (eta ^ 4) - 0.714118e6 / 0.10935e5) * ci2 ^ 14 + (0.951644e6 / 0.3645e4 * (eta ^ 4) + 0.859132e6 / 0.3645e4 * (eta ^ 2) + 0.378926e6 / 0.1215e4 * (eta ^ 3) + 0.615482e6 / 0.3645e4 * eta + 0.48652e5 / 0.729e3 * (eta ^ 5) - 0.172e3 / 0.27e2 * (eta ^ 6) + 0.225092e6 / 0.3645e4) * ci2 ^ 12 + (0.12353e5 / 0.4050e4 * (eta ^ 6) - 0.3168211e7 / 0.18225e5 * (eta ^ 4) - 0.174989e6 / 0.1350e4 * (eta ^ 2) - 0.4906426e7 / 0.54675e5 * eta - 0.3544816e7 / 0.18225e5 * (eta ^ 3) - 0.32234e5 / 0.675e3 * (eta ^ 5) - 0.1880074e7 / 0.54675e5) * ci2 ^ 10 + (-0.563e3 / 0.810e3 * (eta ^ 6) + 0.1362853e7 / 0.18225e5 * (eta ^ 4) + 0.1535273e7 / 0.36450e5 * (eta ^ 2) + 0.1492148e7 / 0.54675e5 * eta + 0.1404146e7 / 0.18225e5 * (eta ^ 3) + 0.405506e6 / 0.18225e5 * (eta ^ 5) + 0.624974e6 / 0.54675e5) * ci2 ^ 8 + (0.23e2 / 0.4500e4 * (eta ^ 6) - 0.3746249e7 / 0.182250e6 * (eta ^ 4) - 0.930667e6 / 0.121500e6 * (eta ^ 2) - 0.1161166e7 / 0.273375e6 * eta - 0.585377e6 / 0.30375e5 * (eta ^ 3) - 0.603637e6 / 0.91125e5 * (eta ^ 5) - 0.594109e6 / 0.273375e6) * ci2 ^ 6 + (0.979e3 / 0.30375e5 * (eta ^ 6) + 0.313736e6 / 0.91125e5 * (eta ^ 4) + 0.1289e4 / 0.2025e4 * (eta ^ 2) + 0.46732e5 / 0.273375e6 * eta + 0.53122e5 / 0.18225e5 * (eta ^ 3) + 0.36382e5 / 0.30375e5 * (eta ^ 5) + 0.55342e5 / 0.273375e6) * ci2 ^ 4 + (-0.77e2 / 0.12150e5 * (eta ^ 6) - 0.28709e5 / 0.91125e5 * (eta ^ 4) + 0.13e2 / 0.182250e6 * (eta ^ 2) + 0.9214e4 / 0.273375e6 * eta - 0.21754e5 / 0.91125e5 * (eta ^ 3) - 0.2156e4 / 0.18225e5 * (eta ^ 5) - 0.1004e4 / 0.273375e6) * ci2 ^ 2 + 0.49e2 / 0.121500e6 * ((eta ^ 5) + (11 * eta ^ 4) + 0.895e3 / 0.49e2 * (eta ^ 3) + 0.53e2 / 0.49e2 * (eta ^ 2) - 0.1028e4 / 0.147e3 * eta - 0.524e3 / 0.441e3) * (1 + eta)) * cos((4 * g + 2 * h)) + 0.22e2 / 0.5e1 * ((0.106e3 / 0.11e2 * (eta ^ 5) + 0.17726e5 / 0.297e3 * (eta ^ 3) + 0.190e3 / 0.9e1 * eta + (eta ^ 6) + 0.10610e5 / 0.297e3 * (eta ^ 4) + 0.4982e4 / 0.99e2 * (eta ^ 2) + 0.95e2 / 0.27e2) * ci2 ^ 18 + (-0.1328e4 / 0.33e2 * (eta ^ 5) - 0.74032e5 / 0.297e3 * (eta ^ 3) - 0.8740e4 / 0.99e2 * eta - 0.46e2 / 0.11e2 * (eta ^ 6) - 0.1640e4 / 0.11e2 * (eta ^ 4) - 0.20824e5 / 0.99e2 * (eta ^ 2) - 0.4370e4 / 0.297e3) * ci2 ^ 16 + (0.2259223e7 / 0.5940e4 * (eta ^ 2) + 0.222949e6 / 0.495e3 * (eta ^ 3) + 0.8013e4 / 0.110e3 * (eta ^ 5) + 0.52703e5 / 0.330e3 * eta + 0.1671e4 / 0.220e3 * (eta ^ 6) + 0.87259e5 / 0.324e3 * (eta ^ 4) + 0.52703e5 / 0.1980e4) * ci2 ^ 14 + (-0.1228589e7 / 0.4455e4 * (eta ^ 4) - 0.578627e6 / 0.1485e4 * (eta ^ 2) - 0.2054356e7 / 0.4455e4 * (eta ^ 3) - 0.243082e6 / 0.1485e4 * eta - 0.12352e5 / 0.165e3 * (eta ^ 5) - 0.259e3 / 0.33e2 * (eta ^ 6) - 0.121541e6 / 0.4455e4) * ci2 ^ 12 + (0.10051e5 / 0.1980e4 * (eta ^ 6) + 0.15691297e8 / 0.89100e5 * (eta ^ 4) + 0.7390387e7 / 0.29700e5 * (eta ^ 2) + 0.1553143e7 / 0.14850e5 * eta + 0.6555839e7 / 0.22275e5 * (eta ^ 3) + 0.79283e5 / 0.1650e4 * (eta ^ 5) + 0.1553143e7 / 0.89100e5) * ci2 ^ 10 + (-0.10541e5 / 0.4950e4 * (eta ^ 6) - 0.1079173e7 / 0.14850e5 * (eta ^ 4) - 0.101627e6 / 0.990e3 * (eta ^ 2) - 0.320549e6 / 0.7425e4 * eta - 0.540574e6 / 0.4455e4 * (eta ^ 3) - 0.499e3 / 0.25e2 * (eta ^ 5) - 0.320549e6 / 0.44550e5) * ci2 ^ 8 + (0.6263e4 / 0.10800e5 * (eta ^ 6) + 0.34555181e8 / 0.1782000e7 * (eta ^ 4) + 0.16262639e8 / 0.594000e6 * (eta ^ 2) + 0.3422003e7 / 0.297000e6 * eta + 0.14407303e8 / 0.445500e6 * (eta ^ 3) + 0.531617e6 / 0.99000e5 * (eta ^ 5) + 0.3422003e7 / 0.1782000e7) * ci2 ^ 6 + (-0.14737e5 / 0.148500e6 * (eta ^ 6) - 0.1441669e7 / 0.445500e6 * (eta ^ 4) - 0.677959e6 / 0.148500e6 * (eta ^ 2) - 0.142771e6 / 0.74250e5 * eta - 0.600143e6 / 0.111375e6 * (eta ^ 3) - 0.4481e4 / 0.4950e4 * (eta ^ 5) - 0.142771e6 / 0.445500e6) * ci2 ^ 4 + (0.4837e4 / 0.495000e6 * (eta ^ 6) + 0.1374299e7 / 0.4455000e7 * (eta ^ 4) + 0.58651e5 / 0.135000e6 * (eta ^ 2) + 0.15109e5 / 0.82500e5 * eta + 0.63413e5 / 0.123750e6 * (eta ^ 3) + 0.7213e4 / 0.82500e5 * (eta ^ 5) + 0.15109e5 / 0.495000e6) * ci2 ^ 2 - 0.637e3 / 0.1485000e7 * (1 + eta) * ((eta ^ 5) + 0.4913e4 / 0.637e3 * (eta ^ 4) + 0.42950e5 / 0.1911e4 * (eta ^ 3) + 0.52454e5 / 0.1911e4 * (eta ^ 2) + 0.28435e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ((eta - 1) ^ 3) * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((6 * g + 2 * h)) + (-0.16e2 / 0.27e2 * (((eta ^ 5) - 0.151e3 / 0.5e1 * (eta ^ 3) + 0.209e3 / 0.4e1 * eta - (2 * eta ^ 4) - 0.159e3 / 0.40e2 * (eta ^ 2) + 0.209e3 / 0.8e1) * ci2 ^ 18 + (-0.9e1 / 0.2e1 * (eta ^ 5) + 0.1309e4 / 0.10e2 * (eta ^ 3) - 0.437e3 / 0.2e1 * eta + 0.43e2 / 0.5e1 * (eta ^ 4) + 0.399e3 / 0.20e2 * (eta ^ 2) - 0.437e3 / 0.4e1) * ci2 ^ 16 + (-0.17183e5 / 0.400e3 * (eta ^ 2) - 0.19727e5 / 0.80e2 * (eta ^ 3) + 0.441e3 / 0.50e2 * (eta ^ 5) + 0.158109e6 / 0.400e3 * eta - 0.12947e5 / 0.800e3 * (eta ^ 4) + 0.158109e6 / 0.800e3) * ci2 ^ 14 + (0.20983e5 / 0.1200e4 * (eta ^ 4) + 0.20887e5 / 0.400e3 * (eta ^ 2) + 0.158803e6 / 0.600e3 * (eta ^ 3) - 0.121541e6 / 0.300e3 * eta - 0.987e3 / 0.100e3 * (eta ^ 5) - 0.121541e6 / 0.600e3) * ci2 ^ 12 + (-0.143623e6 / 0.12000e5 * (eta ^ 4) - 0.19793e5 / 0.500e3 * (eta ^ 2) + 0.1553143e7 / 0.6000e4 * eta - 0.42799e5 / 0.240e3 * (eta ^ 3) + 0.3473e4 / 0.500e3 * (eta ^ 5) + 0.1553143e7 / 0.12000e5) * ci2 ^ 10 + (0.16207e5 / 0.3000e4 * (eta ^ 4) + 0.38931e5 / 0.2000e4 * (eta ^ 2) - 0.320549e6 / 0.3000e4 * eta + 0.117451e6 / 0.1500e4 * (eta ^ 3) - 0.319e3 / 0.100e3 * (eta ^ 5) - 0.320549e6 / 0.6000e4) * ci2 ^ 8 + (-0.388817e6 / 0.240000e6 * (eta ^ 4) - 0.49841e5 / 0.8000e4 * (eta ^ 2) + 0.3422003e7 / 0.120000e6 * eta - 0.2696273e7 / 0.120000e6 * (eta ^ 3) + 0.479e3 / 0.500e3 * (eta ^ 5) + 0.3422003e7 / 0.240000e6) * ci2 ^ 6 + (0.37793e5 / 0.120000e6 * (eta ^ 4) + 0.50249e5 / 0.40000e5 * (eta ^ 2) - 0.142771e6 / 0.30000e5 * eta + 0.245009e6 / 0.60000e5 * (eta ^ 3) - 0.91e2 / 0.500e3 * (eta ^ 5) - 0.142771e6 / 0.60000e5) * ci2 ^ 4 + (-0.457e3 / 0.12500e5 * (eta ^ 4) - 0.29057e5 / 0.200000e6 * (eta ^ 2) + 0.45327e5 / 0.100000e6 * eta - 0.1342e4 / 0.3125e4 * (eta ^ 3) + 0.249e3 / 0.12500e5 * (eta ^ 5) + 0.45327e5 / 0.200000e6) * ci2 ^ 2 - 0.3e1 / 0.3125e4 * ((eta ^ 4) - 0.599e3 / 0.576e3 * (eta ^ 3) - 0.1405e4 / 0.64e2 * (eta ^ 2) - 0.5687e4 / 0.192e3 * eta - 0.5687e4 / 0.576e3) * (eta - 1)) * (eta - 1) * (1 + eta) * (ci2 + 0.1e1) * ci2 ^ 2 * (ci2 - 0.1e1) * cos((2 * g - 2 * h)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((1 + eta) ^ 2) * ((-(16 * eta ^ 5) + 0.4384e4 / 0.81e2 * (eta ^ 3) + (56 * eta) + (eta ^ 6) + 0.1162e4 / 0.135e3 * (eta ^ 4) - 0.303e3 / 0.5e1 * (eta ^ 2) - 0.3916e4 / 0.81e2) * ci2 ^ 18 + (0.208e3 / 0.3e1 * (eta ^ 5) - 0.18632e5 / 0.81e2 * (eta ^ 3) - 0.1176e4 / 0.5e1 * eta - 0.22e2 / 0.5e1 * (eta ^ 6) - 0.332e3 / 0.9e1 * (eta ^ 4) + 0.3838e4 / 0.15e2 * (eta ^ 2) + 0.16376e5 / 0.81e2) * ci2 ^ 16 + (-0.217753e6 / 0.450e3 * (eta ^ 2) + 0.173348e6 / 0.405e3 * (eta ^ 3) - 0.29408e5 / 0.225e3 * (eta ^ 5) + 0.6328e4 / 0.15e2 * eta + 0.399e3 / 0.50e2 * (eta ^ 6) + 0.49781e5 / 0.675e3 * (eta ^ 4) - 0.714118e6 / 0.2025e4) * ci2 ^ 14 + (-0.59998e5 / 0.675e3 * (eta ^ 4) + 0.120344e6 / 0.225e3 * (eta ^ 2) - 0.20522e5 / 0.45e2 * (eta ^ 3) - 0.31654e5 / 0.75e2 * eta + 0.31556e5 / 0.225e3 * (eta ^ 5) - 0.578e3 / 0.75e2 * (eta ^ 6) + 0.225092e6 / 0.675e3) * ci2 ^ 12 + (0.1901e4 / 0.450e3 * (eta ^ 6) + 0.77977e5 / 0.1125e4 * (eta ^ 4) - 0.169403e6 / 0.450e3 * (eta ^ 2) + 0.6454e4 / 0.25e2 * eta + 0.617426e6 / 0.2025e4 * (eta ^ 3) - 0.4232e4 / 0.45e2 * (eta ^ 5) - 0.1880074e7 / 0.10125e5) * ci2 ^ 10 + (-0.2819e4 / 0.2250e4 * (eta ^ 6) - 0.23837e5 / 0.675e3 * (eta ^ 4) + 0.77561e5 / 0.450e3 * (eta ^ 2) - 0.37324e5 / 0.375e3 * eta - 0.266608e6 / 0.2025e4 * (eta ^ 3) + 0.45776e5 / 0.1125e4 * (eta ^ 5) + 0.624974e6 / 0.10125e5) * ci2 ^ 8 + (0.1861e4 / 0.13500e5 * (eta ^ 6) + 0.14413e5 / 0.1250e4 * (eta ^ 4) - 0.379123e6 / 0.7500e4 * (eta ^ 2) + 0.9002e4 / 0.375e3 * eta + 0.368582e6 / 0.10125e5 * (eta ^ 3) - 0.7068e4 / 0.625e3 * (eta ^ 5) - 0.594109e6 / 0.50625e5) * ci2 ^ 6 + (0.398e3 / 0.16875e5 * (eta ^ 6) - 0.12977e5 / 0.5625e4 * (eta ^ 4) + 0.50869e5 / 0.5625e4 * (eta ^ 2) - 0.2156e4 / 0.625e3 * eta - 0.12478e5 / 0.2025e4 * (eta ^ 3) + 0.10906e5 / 0.5625e4 * (eta ^ 5) + 0.55342e5 / 0.50625e5) * ci2 ^ 4 + (-0.287e3 / 0.33750e5 * (eta ^ 6) + 0.4348e4 / 0.16875e5 * (eta ^ 4) - 0.1999e4 / 0.2250e4 * (eta ^ 2) + 0.98e2 / 0.375e3 * eta + 0.5812e4 / 0.10125e5 * (eta ^ 3) - 0.1042e4 / 0.5625e4 * (eta ^ 5) - 0.1004e4 / 0.50625e5) * ci2 ^ 2 + 0.49e2 / 0.67500e5 * (eta - 1) * ((eta ^ 5) + 0.79e2 / 0.7e1 * (eta ^ 4) - 0.285e3 / 0.49e2 * (eta ^ 3) - 0.5335e4 / 0.147e3 * (eta ^ 2) + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3)) * cos((2 * h)) + 0.2e1 * (eta ^ 2) * (eta - 1) * ((ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * ci2 ^ 18 + (0.1364e4 / 0.45e2 * (eta ^ 3) + 0.5324e4 / 0.405e3 * eta - 0.22e2 / 0.5e1 * (eta ^ 4) + 0.6952e4 / 0.135e3 * (eta ^ 2) + 0.1958e4 / 0.81e2) * ci2 ^ 16 + (-0.66331e5 / 0.675e3 * (eta ^ 2) - 0.4411e4 / 0.75e2 * (eta ^ 3) - 0.47453e5 / 0.2025e4 * eta + 0.399e3 / 0.50e2 * (eta ^ 4) - 0.181913e6 / 0.4050e4) * ci2 ^ 14 + (-0.578e3 / 0.75e2 * (eta ^ 4) + 0.71846e5 / 0.675e3 * (eta ^ 2) + 0.44476e5 / 0.675e3 * (eta ^ 3) + 0.14624e5 / 0.675e3 * eta + 0.1240e4 / 0.27e2) * ci2 ^ 12 + (0.1901e4 / 0.450e3 * (eta ^ 4) - 0.242636e6 / 0.3375e4 * (eta ^ 2) - 0.108749e6 / 0.10125e5 * eta - 0.157937e6 / 0.3375e4 * (eta ^ 3) - 0.570449e6 / 0.20250e5) * ci2 ^ 10 + (-0.2819e4 / 0.2250e4 * (eta ^ 4) + 0.105649e6 / 0.3375e4 * (eta ^ 2) + 0.23773e5 / 0.10125e5 * eta + 0.73399e5 / 0.3375e4 * (eta ^ 3) + 0.213961e6 / 0.20250e5) * ci2 ^ 8 + (0.1861e4 / 0.13500e5 * (eta ^ 4) - 0.9856e4 / 0.1125e4 * (eta ^ 2) + 0.3817e4 / 0.20250e5 * eta - 0.4939e4 / 0.750e3 * (eta ^ 3) - 0.18979e5 / 0.8100e4) * ci2 ^ 6 + (0.398e3 / 0.16875e5 * (eta ^ 4) + 0.8522e4 / 0.5625e4 * (eta ^ 2) - 0.11212e5 / 0.50625e5 * eta + 0.21104e5 / 0.16875e5 * (eta ^ 3) + 0.13672e5 / 0.50625e5) * ci2 ^ 4 + (-0.287e3 / 0.33750e5 * (eta ^ 4) - 0.274e3 / 0.1875e4 * (eta ^ 2) + 0.469e3 / 0.10125e5 * eta - 0.2287e4 / 0.16875e5 * (eta ^ 3) - 0.179e3 / 0.20250e5) * ci2 ^ 2 + 0.49e2 / 0.67500e5 * (eta ^ 4) - 0.131e3 / 0.202500e6 - 0.347e3 / 0.101250e6 * eta + 0.4e1 / 0.675e3 * (eta ^ 2) + 0.217e3 / 0.33750e5 * (eta ^ 3)) * cos((2 * g)) - (eta - 1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * ci2 ^ 18 + (-0.4136e4 / 0.135e3 * (eta ^ 3) - 0.1672e4 / 0.27e2 * eta - 0.22e2 / 0.5e1 * (eta ^ 4) - 0.3388e4 / 0.45e2 * (eta ^ 2) - 0.418e3 / 0.27e2) * ci2 ^ 16 + (0.194741e6 / 0.1350e4 * (eta ^ 2) + 0.1469e4 / 0.25e2 * (eta ^ 3) + 0.80063e5 / 0.675e3 * eta + 0.169e3 / 0.20e2 * (eta ^ 4) + 0.80063e5 / 0.2700e4) * ci2 ^ 14 + (-0.1393e4 / 0.150e3 * (eta ^ 4) - 0.319513e6 / 0.2025e4 * (eta ^ 2) - 0.43474e5 / 0.675e3 * (eta ^ 3) - 0.10502e5 / 0.81e2 * eta - 0.5251e4 / 0.162e3) * ci2 ^ 12 + (0.28967e5 / 0.4500e4 * (eta ^ 4) + 0.17585e5 / 0.162e3 * (eta ^ 2) + 0.902191e6 / 0.10125e5 * eta + 0.150037e6 / 0.3375e4 * (eta ^ 3) + 0.902191e6 / 0.40500e5) * ci2 ^ 10 + (-0.3289e4 / 0.1125e4 * (eta ^ 4) - 0.493694e6 / 0.10125e5 * (eta ^ 2) - 0.404644e6 / 0.10125e5 * eta - 0.67724e5 / 0.3375e4 * (eta ^ 3) - 0.101161e6 / 0.10125e5) * ci2 ^ 8 + (0.235883e6 / 0.270000e6 * (eta ^ 4) + 0.5808419e7 / 0.405000e6 * (eta ^ 2) + 0.475021e6 / 0.40500e5 * eta + 0.80239e5 / 0.13500e5 * (eta ^ 3) + 0.475021e6 / 0.162000e6) * ci2 ^ 6 + (-0.22523e5 / 0.135000e6 * (eta ^ 4) - 0.542003e6 / 0.202500e6 * (eta ^ 2) - 0.220913e6 / 0.101250e6 * eta - 0.37819e5 / 0.33750e5 * (eta ^ 3) - 0.220913e6 / 0.405000e6) * ci2 ^ 4 + (0.7e1 / 0.375e3 * (eta ^ 4) + 0.4886e4 / 0.16875e5 * (eta ^ 2) + 0.3964e4 / 0.16875e5 * eta + 0.692e3 / 0.5625e4 * (eta ^ 3) + 0.991e3 / 0.16875e5) * ci2 ^ 2 - 0.637e3 / 0.675000e6 * (eta ^ 4) - 0.5687e4 / 0.2025000e7 - 0.5687e4 / 0.506250e6 * eta - 0.14117e5 / 0.1012500e7 * (eta ^ 2) - 0.1021e4 / 0.168750e6 * (eta ^ 3)) * (ci2 + 0.1e1) * cos((4 * g)) * ci2 ^ 2 * (ci2 - 0.1e1))) * (1 + eta)) / (0.5e1 * ci2 ^ 4 - 0.5e1 * ci2 ^ 2 + 0.1e1) ^ 4 / ((1 + eta) ^ 3) / a ^ 4 / (eta ^ 10) 0.84375e5 / 0.128e3 * (ci2 + 0.1e1) * R__e ^ 4 * (-0.27e2 / 0.5e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((eta - 1) ^ 2) * (1 + eta) * ((-0.1828e4 / 0.243e3 * (eta ^ 5) - 0.29564e5 / 0.729e3 * (eta ^ 3) - 0.55640e5 / 0.2187e4 * eta + (eta ^ 6) - 0.23198e5 / 0.729e3 * (eta ^ 4) - 0.25111e5 / 0.729e3 * (eta ^ 2) - 0.19580e5 / 0.2187e4) * ci2 ^ 18 + (0.2552e4 / 0.81e2 * (eta ^ 5) + 0.124336e6 / 0.729e3 * (eta ^ 3) + 0.232264e6 / 0.2187e4 * eta - 0.38e2 / 0.9e1 * (eta ^ 6) + 0.97444e5 / 0.729e3 * (eta ^ 4) + 0.35038e5 / 0.243e3 * (eta ^ 2) + 0.81880e5 / 0.2187e4) * ci2 ^ 16 + (-0.365801e6 / 0.1458e4 * (eta ^ 2) - 0.224438e6 / 0.729e3 * (eta ^ 3) - 0.217642e6 / 0.3645e4 * (eta ^ 5) - 0.2002192e7 / 0.10935e5 * eta + 0.389e3 / 0.54e2 * (eta ^ 6) - 0.898601e6 / 0.3645e4 * (eta ^ 4) - 0.714118e6 / 0.10935e5) * ci2 ^ 14 + (0.951644e6 / 0.3645e4 * (eta ^ 4) + 0.859132e6 / 0.3645e4 * (eta ^ 2) + 0.378926e6 / 0.1215e4 * (eta ^ 3) + 0.615482e6 / 0.3645e4 * eta + 0.48652e5 / 0.729e3 * (eta ^ 5) - 0.172e3 / 0.27e2 * (eta ^ 6) + 0.225092e6 / 0.3645e4) * ci2 ^ 12 + (0.12353e5 / 0.4050e4 * (eta ^ 6) - 0.3168211e7 / 0.18225e5 * (eta ^ 4) - 0.174989e6 / 0.1350e4 * (eta ^ 2) - 0.4906426e7 / 0.54675e5 * eta - 0.3544816e7 / 0.18225e5 * (eta ^ 3) - 0.32234e5 / 0.675e3 * (eta ^ 5) - 0.1880074e7 / 0.54675e5) * ci2 ^ 10 + (-0.563e3 / 0.810e3 * (eta ^ 6) + 0.1362853e7 / 0.18225e5 * (eta ^ 4) + 0.1535273e7 / 0.36450e5 * (eta ^ 2) + 0.1492148e7 / 0.54675e5 * eta + 0.1404146e7 / 0.18225e5 * (eta ^ 3) + 0.405506e6 / 0.18225e5 * (eta ^ 5) + 0.624974e6 / 0.54675e5) * ci2 ^ 8 + (0.23e2 / 0.4500e4 * (eta ^ 6) - 0.3746249e7 / 0.182250e6 * (eta ^ 4) - 0.930667e6 / 0.121500e6 * (eta ^ 2) - 0.1161166e7 / 0.273375e6 * eta - 0.585377e6 / 0.30375e5 * (eta ^ 3) - 0.603637e6 / 0.91125e5 * (eta ^ 5) - 0.594109e6 / 0.273375e6) * ci2 ^ 6 + (0.979e3 / 0.30375e5 * (eta ^ 6) + 0.313736e6 / 0.91125e5 * (eta ^ 4) + 0.1289e4 / 0.2025e4 * (eta ^ 2) + 0.46732e5 / 0.273375e6 * eta + 0.53122e5 / 0.18225e5 * (eta ^ 3) + 0.36382e5 / 0.30375e5 * (eta ^ 5) + 0.55342e5 / 0.273375e6) * ci2 ^ 4 + (-0.77e2 / 0.12150e5 * (eta ^ 6) - 0.28709e5 / 0.91125e5 * (eta ^ 4) + 0.13e2 / 0.182250e6 * (eta ^ 2) + 0.9214e4 / 0.273375e6 * eta - 0.21754e5 / 0.91125e5 * (eta ^ 3) - 0.2156e4 / 0.18225e5 * (eta ^ 5) - 0.1004e4 / 0.273375e6) * ci2 ^ 2 + 0.49e2 / 0.121500e6 * ((eta ^ 5) + (11 * eta ^ 4) + 0.895e3 / 0.49e2 * (eta ^ 3) + 0.53e2 / 0.49e2 * (eta ^ 2) - 0.1028e4 / 0.147e3 * eta - 0.524e3 / 0.441e3) * (1 + eta)) * sin((4 * g + 2 * h)) + 0.22e2 / 0.5e1 * (ci2 + 0.1e1) * ((eta - 1) ^ 3) * ((0.106e3 / 0.11e2 * (eta ^ 5) + 0.17726e5 / 0.297e3 * (eta ^ 3) + 0.190e3 / 0.9e1 * eta + (eta ^ 6) + 0.10610e5 / 0.297e3 * (eta ^ 4) + 0.4982e4 / 0.99e2 * (eta ^ 2) + 0.95e2 / 0.27e2) * ci2 ^ 18 + (-0.1328e4 / 0.33e2 * (eta ^ 5) - 0.74032e5 / 0.297e3 * (eta ^ 3) - 0.8740e4 / 0.99e2 * eta - 0.46e2 / 0.11e2 * (eta ^ 6) - 0.1640e4 / 0.11e2 * (eta ^ 4) - 0.20824e5 / 0.99e2 * (eta ^ 2) - 0.4370e4 / 0.297e3) * ci2 ^ 16 + (0.2259223e7 / 0.5940e4 * (eta ^ 2) + 0.222949e6 / 0.495e3 * (eta ^ 3) + 0.8013e4 / 0.110e3 * (eta ^ 5) + 0.52703e5 / 0.330e3 * eta + 0.1671e4 / 0.220e3 * (eta ^ 6) + 0.87259e5 / 0.324e3 * (eta ^ 4) + 0.52703e5 / 0.1980e4) * ci2 ^ 14 + (-0.1228589e7 / 0.4455e4 * (eta ^ 4) - 0.578627e6 / 0.1485e4 * (eta ^ 2) - 0.2054356e7 / 0.4455e4 * (eta ^ 3) - 0.243082e6 / 0.1485e4 * eta - 0.12352e5 / 0.165e3 * (eta ^ 5) - 0.259e3 / 0.33e2 * (eta ^ 6) - 0.121541e6 / 0.4455e4) * ci2 ^ 12 + (0.10051e5 / 0.1980e4 * (eta ^ 6) + 0.15691297e8 / 0.89100e5 * (eta ^ 4) + 0.7390387e7 / 0.29700e5 * (eta ^ 2) + 0.1553143e7 / 0.14850e5 * eta + 0.6555839e7 / 0.22275e5 * (eta ^ 3) + 0.79283e5 / 0.1650e4 * (eta ^ 5) + 0.1553143e7 / 0.89100e5) * ci2 ^ 10 + (-0.10541e5 / 0.4950e4 * (eta ^ 6) - 0.1079173e7 / 0.14850e5 * (eta ^ 4) - 0.101627e6 / 0.990e3 * (eta ^ 2) - 0.320549e6 / 0.7425e4 * eta - 0.540574e6 / 0.4455e4 * (eta ^ 3) - 0.499e3 / 0.25e2 * (eta ^ 5) - 0.320549e6 / 0.44550e5) * ci2 ^ 8 + (0.6263e4 / 0.10800e5 * (eta ^ 6) + 0.34555181e8 / 0.1782000e7 * (eta ^ 4) + 0.16262639e8 / 0.594000e6 * (eta ^ 2) + 0.3422003e7 / 0.297000e6 * eta + 0.14407303e8 / 0.445500e6 * (eta ^ 3) + 0.531617e6 / 0.99000e5 * (eta ^ 5) + 0.3422003e7 / 0.1782000e7) * ci2 ^ 6 + (-0.14737e5 / 0.148500e6 * (eta ^ 6) - 0.1441669e7 / 0.445500e6 * (eta ^ 4) - 0.677959e6 / 0.148500e6 * (eta ^ 2) - 0.142771e6 / 0.74250e5 * eta - 0.600143e6 / 0.111375e6 * (eta ^ 3) - 0.4481e4 / 0.4950e4 * (eta ^ 5) - 0.142771e6 / 0.445500e6) * ci2 ^ 4 + (0.4837e4 / 0.495000e6 * (eta ^ 6) + 0.1374299e7 / 0.4455000e7 * (eta ^ 4) + 0.58651e5 / 0.135000e6 * (eta ^ 2) + 0.15109e5 / 0.82500e5 * eta + 0.63413e5 / 0.123750e6 * (eta ^ 3) + 0.7213e4 / 0.82500e5 * (eta ^ 5) + 0.15109e5 / 0.495000e6) * ci2 ^ 2 - 0.637e3 / 0.1485000e7 * (1 + eta) * ((eta ^ 5) + 0.4913e4 / 0.637e3 * (eta ^ 4) + 0.42950e5 / 0.1911e4 * (eta ^ 3) + 0.52454e5 / 0.1911e4 * (eta ^ 2) + 0.28435e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((6 * g + 2 * h)) + (1 + eta) * (0.16e2 / 0.27e2 * (ci2 + 0.1e1) * (((eta ^ 5) - 0.151e3 / 0.5e1 * (eta ^ 3) + 0.209e3 / 0.4e1 * eta - (2 * eta ^ 4) - 0.159e3 / 0.40e2 * (eta ^ 2) + 0.209e3 / 0.8e1) * ci2 ^ 18 + (-0.9e1 / 0.2e1 * (eta ^ 5) + 0.1309e4 / 0.10e2 * (eta ^ 3) - 0.437e3 / 0.2e1 * eta + 0.43e2 / 0.5e1 * (eta ^ 4) + 0.399e3 / 0.20e2 * (eta ^ 2) - 0.437e3 / 0.4e1) * ci2 ^ 16 + (-0.17183e5 / 0.400e3 * (eta ^ 2) - 0.19727e5 / 0.80e2 * (eta ^ 3) + 0.441e3 / 0.50e2 * (eta ^ 5) + 0.158109e6 / 0.400e3 * eta - 0.12947e5 / 0.800e3 * (eta ^ 4) + 0.158109e6 / 0.800e3) * ci2 ^ 14 + (0.20983e5 / 0.1200e4 * (eta ^ 4) + 0.20887e5 / 0.400e3 * (eta ^ 2) + 0.158803e6 / 0.600e3 * (eta ^ 3) - 0.121541e6 / 0.300e3 * eta - 0.987e3 / 0.100e3 * (eta ^ 5) - 0.121541e6 / 0.600e3) * ci2 ^ 12 + (-0.143623e6 / 0.12000e5 * (eta ^ 4) - 0.19793e5 / 0.500e3 * (eta ^ 2) + 0.1553143e7 / 0.6000e4 * eta - 0.42799e5 / 0.240e3 * (eta ^ 3) + 0.3473e4 / 0.500e3 * (eta ^ 5) + 0.1553143e7 / 0.12000e5) * ci2 ^ 10 + (0.16207e5 / 0.3000e4 * (eta ^ 4) + 0.38931e5 / 0.2000e4 * (eta ^ 2) - 0.320549e6 / 0.3000e4 * eta + 0.117451e6 / 0.1500e4 * (eta ^ 3) - 0.319e3 / 0.100e3 * (eta ^ 5) - 0.320549e6 / 0.6000e4) * ci2 ^ 8 + (-0.388817e6 / 0.240000e6 * (eta ^ 4) - 0.49841e5 / 0.8000e4 * (eta ^ 2) + 0.3422003e7 / 0.120000e6 * eta - 0.2696273e7 / 0.120000e6 * (eta ^ 3) + 0.479e3 / 0.500e3 * (eta ^ 5) + 0.3422003e7 / 0.240000e6) * ci2 ^ 6 + (0.37793e5 / 0.120000e6 * (eta ^ 4) + 0.50249e5 / 0.40000e5 * (eta ^ 2) - 0.142771e6 / 0.30000e5 * eta + 0.245009e6 / 0.60000e5 * (eta ^ 3) - 0.91e2 / 0.500e3 * (eta ^ 5) - 0.142771e6 / 0.60000e5) * ci2 ^ 4 + (-0.457e3 / 0.12500e5 * (eta ^ 4) - 0.29057e5 / 0.200000e6 * (eta ^ 2) + 0.45327e5 / 0.100000e6 * eta - 0.1342e4 / 0.3125e4 * (eta ^ 3) + 0.249e3 / 0.12500e5 * (eta ^ 5) + 0.45327e5 / 0.200000e6) * ci2 ^ 2 - 0.3e1 / 0.3125e4 * ((eta ^ 4) - 0.599e3 / 0.576e3 * (eta ^ 3) - 0.1405e4 / 0.64e2 * (eta ^ 2) - 0.5687e4 / 0.192e3 * eta - 0.5687e4 / 0.576e3) * (eta - 1)) * (eta - 1) * (1 + eta) * ci2 ^ 2 * (ci2 - 0.1e1) * sin((2 * g - 2 * h)) + 0.2e1 * (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * (((eta ^ 6) - 0.3202e4 / 0.135e3 * (eta ^ 4) + 0.15673e5 / 0.405e3 * (eta ^ 2) + 0.3296e4 / 0.81e2 * eta + 0.18866e5 / 0.405e3 * (eta ^ 3) + 0.3916e4 / 0.81e2 - 0.142e3 / 0.9e1 * (eta ^ 5)) * ci2 ^ 18 + (-0.22e2 / 0.5e1 * (eta ^ 6) + 0.13808e5 / 0.135e3 * (eta ^ 4) - 0.66194e5 / 0.405e3 * (eta ^ 2) - 0.68504e5 / 0.405e3 * eta - 0.15788e5 / 0.81e2 * (eta ^ 3) - 0.16376e5 / 0.81e2 + 0.3044e4 / 0.45e2 * (eta ^ 5)) * ci2 ^ 16 + (0.399e3 / 0.50e2 * (eta ^ 6) - 0.25229e5 / 0.135e3 * (eta ^ 4) + 0.1223983e7 / 0.4050e4 * (eta ^ 2) + 0.573956e6 / 0.2025e4 * eta + 0.747187e6 / 0.2025e4 * (eta ^ 3) + 0.714118e6 / 0.2025e4 - 0.17159e5 / 0.135e3 * (eta ^ 5)) * ci2 ^ 14 + (-0.578e3 / 0.75e2 * (eta ^ 6) + 0.42569e5 / 0.225e3 * (eta ^ 4) - 0.24019e5 / 0.75e2 * (eta ^ 2) - 0.225092e6 / 0.675e3 - 0.55624e5 / 0.135e3 * (eta ^ 3) - 0.165298e6 / 0.675e3 * eta + 0.30832e5 / 0.225e3 * (eta ^ 5)) * ci2 ^ 12 + (0.1901e4 / 0.450e3 * (eta ^ 6) - 0.26212e5 / 0.225e3 * (eta ^ 4) + 0.4318363e7 / 0.20250e5 * (eta ^ 2) + 0.1880074e7 / 0.10125e5 + 0.1146278e7 / 0.10125e5 * eta + 0.596789e6 / 0.2025e4 * (eta ^ 3) - 0.314033e6 / 0.3375e4 * (eta ^ 5)) * ci2 ^ 10 + (-0.1860623e7 / 0.20250e5 * (eta ^ 2) - 0.2819e4 / 0.2250e4 * (eta ^ 6) + 0.152191e6 / 0.3375e4 * (eta ^ 4) - 0.624974e6 / 0.10125e5 - 0.9688e4 / 0.405e3 * eta - 0.1390871e7 / 0.10125e5 * (eta ^ 3) + 0.46189e5 / 0.1125e4 * (eta ^ 5)) * ci2 ^ 8 + (-0.369571e6 / 0.33750e5 * (eta ^ 4) + 0.5147399e7 / 0.202500e6 * (eta ^ 2) + 0.1861e4 / 0.13500e5 * (eta ^ 6) + 0.594109e6 / 0.50625e5 - 0.27052e5 / 0.50625e5 * eta + 0.4147103e7 / 0.101250e6 * (eta ^ 3) - 0.79051e5 / 0.6750e4 * (eta ^ 5)) * ci2 ^ 6 + (0.398e3 / 0.16875e5 * (eta ^ 6) + 0.2167e4 / 0.1350e4 * (eta ^ 4) - 0.438139e6 / 0.101250e6 * (eta ^ 2) - 0.55342e5 / 0.50625e5 + 0.63952e5 / 0.50625e5 * eta - 0.376117e6 / 0.50625e5 * (eta ^ 3) + 0.35018e5 / 0.16875e5 * (eta ^ 5)) * ci2 ^ 4 + (-0.287e3 / 0.33750e5 * (eta ^ 6) - 0.1433e4 / 0.11250e5 * (eta ^ 4) + 0.20722e5 / 0.50625e5 * (eta ^ 2) + 0.1004e4 / 0.50625e5 - 0.11222e5 / 0.50625e5 * eta + 0.37376e5 / 0.50625e5 * (eta ^ 3) - 0.3497e4 / 0.16875e5 * (eta ^ 5)) * ci2 ^ 2 + 0.49e2 / 0.67500e5 * ((eta ^ 5) + 0.79e2 / 0.7e1 * (eta ^ 4) - 0.285e3 / 0.49e2 * (eta ^ 3) - 0.5335e4 / 0.147e3 * (eta ^ 2) + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3) * (1 + eta)) * (eta - 1) * (1 + eta) * sin((2 * g)) + (ci2 ^ 4 - ci2 ^ 2 + 0.1e1 / 0.5e1) * ((1 + eta) ^ 2) * ((-(16 * eta ^ 5) + 0.4384e4 / 0.81e2 * (eta ^ 3) + (56 * eta) + (eta ^ 6) + 0.1162e4 / 0.135e3 * (eta ^ 4) - 0.303e3 / 0.5e1 * (eta ^ 2) - 0.3916e4 / 0.81e2) * ci2 ^ 18 + (0.208e3 / 0.3e1 * (eta ^ 5) - 0.18632e5 / 0.81e2 * (eta ^ 3) - 0.1176e4 / 0.5e1 * eta - 0.22e2 / 0.5e1 * (eta ^ 6) - 0.332e3 / 0.9e1 * (eta ^ 4) + 0.3838e4 / 0.15e2 * (eta ^ 2) + 0.16376e5 / 0.81e2) * ci2 ^ 16 + (-0.217753e6 / 0.450e3 * (eta ^ 2) + 0.173348e6 / 0.405e3 * (eta ^ 3) - 0.29408e5 / 0.225e3 * (eta ^ 5) + 0.6328e4 / 0.15e2 * eta + 0.399e3 / 0.50e2 * (eta ^ 6) + 0.49781e5 / 0.675e3 * (eta ^ 4) - 0.714118e6 / 0.2025e4) * ci2 ^ 14 + (-0.59998e5 / 0.675e3 * (eta ^ 4) + 0.120344e6 / 0.225e3 * (eta ^ 2) - 0.20522e5 / 0.45e2 * (eta ^ 3) - 0.31654e5 / 0.75e2 * eta + 0.31556e5 / 0.225e3 * (eta ^ 5) - 0.578e3 / 0.75e2 * (eta ^ 6) + 0.225092e6 / 0.675e3) * ci2 ^ 12 + (0.1901e4 / 0.450e3 * (eta ^ 6) + 0.77977e5 / 0.1125e4 * (eta ^ 4) - 0.169403e6 / 0.450e3 * (eta ^ 2) + 0.6454e4 / 0.25e2 * eta + 0.617426e6 / 0.2025e4 * (eta ^ 3) - 0.4232e4 / 0.45e2 * (eta ^ 5) - 0.1880074e7 / 0.10125e5) * ci2 ^ 10 + (-0.2819e4 / 0.2250e4 * (eta ^ 6) - 0.23837e5 / 0.675e3 * (eta ^ 4) + 0.77561e5 / 0.450e3 * (eta ^ 2) - 0.37324e5 / 0.375e3 * eta - 0.266608e6 / 0.2025e4 * (eta ^ 3) + 0.45776e5 / 0.1125e4 * (eta ^ 5) + 0.624974e6 / 0.10125e5) * ci2 ^ 8 + (0.1861e4 / 0.13500e5 * (eta ^ 6) + 0.14413e5 / 0.1250e4 * (eta ^ 4) - 0.379123e6 / 0.7500e4 * (eta ^ 2) + 0.9002e4 / 0.375e3 * eta + 0.368582e6 / 0.10125e5 * (eta ^ 3) - 0.7068e4 / 0.625e3 * (eta ^ 5) - 0.594109e6 / 0.50625e5) * ci2 ^ 6 + (0.398e3 / 0.16875e5 * (eta ^ 6) - 0.12977e5 / 0.5625e4 * (eta ^ 4) + 0.50869e5 / 0.5625e4 * (eta ^ 2) - 0.2156e4 / 0.625e3 * eta - 0.12478e5 / 0.2025e4 * (eta ^ 3) + 0.10906e5 / 0.5625e4 * (eta ^ 5) + 0.55342e5 / 0.50625e5) * ci2 ^ 4 + (-0.287e3 / 0.33750e5 * (eta ^ 6) + 0.4348e4 / 0.16875e5 * (eta ^ 4) - 0.1999e4 / 0.2250e4 * (eta ^ 2) + 0.98e2 / 0.375e3 * eta + 0.5812e4 / 0.10125e5 * (eta ^ 3) - 0.1042e4 / 0.5625e4 * (eta ^ 5) - 0.1004e4 / 0.50625e5) * ci2 ^ 2 + 0.49e2 / 0.67500e5 * (eta - 1) * ((eta ^ 5) + 0.79e2 / 0.7e1 * (eta ^ 4) - 0.285e3 / 0.49e2 * (eta ^ 3) - 0.5335e4 / 0.147e3 * (eta ^ 2) + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3)) * sin((2 * h)) + (ci2 + 0.1e1) * (((eta ^ 6) + (10 * eta ^ 4) + 0.22259e5 / 0.27e2 * (eta ^ 2) + 0.16720e5 / 0.27e2 * eta + 0.3412e4 / 0.9e1 * (eta ^ 3) + 0.4180e4 / 0.27e2 - 0.212e3 / 0.27e2 * (eta ^ 5)) * ci2 ^ 18 + (-(2 * eta ^ 6) - 0.92e2 / 0.27e2 * (eta ^ 4) - 0.92758e5 / 0.27e2 * (eta ^ 2) - 0.69920e5 / 0.27e2 * eta - 0.4648e4 / 0.3e1 * (eta ^ 3) - 0.17480e5 / 0.27e2 + 0.1304e4 / 0.27e2 * (eta ^ 5)) * ci2 ^ 16 + (-0.19e2 / 0.20e2 * (eta ^ 6) - 0.19897e5 / 0.270e3 * (eta ^ 4) + 0.123813e6 / 0.20e2 * (eta ^ 2) + 0.210812e6 / 0.45e2 * eta + 0.40939e5 / 0.15e2 * (eta ^ 3) + 0.52703e5 / 0.45e2 - 0.1801e4 / 0.15e2 * (eta ^ 5)) * ci2 ^ 14 + (0.98e2 / 0.15e2 * (eta ^ 6) + 0.13888e5 / 0.81e2 * (eta ^ 4) - 0.2558314e7 / 0.405e3 * (eta ^ 2) - 0.486164e6 / 0.405e3 - 0.365912e6 / 0.135e3 * (eta ^ 3) - 0.1944656e7 / 0.405e3 * eta + 0.4400e4 / 0.27e2 * (eta ^ 5)) * ci2 ^ 12 + (-0.7679e4 / 0.900e3 * (eta ^ 6) - 0.741431e6 / 0.4050e4 * (eta ^ 4) + 0.32520257e8 / 0.8100e4 * (eta ^ 2) + 0.1553143e7 / 0.2025e4 + 0.6212572e7 / 0.2025e4 * eta + 0.1124599e7 / 0.675e3 * (eta ^ 3) - 0.91253e5 / 0.675e3 * (eta ^ 5)) * ci2 ^ 10 + (-0.6669001e7 / 0.4050e4 * (eta ^ 2) + 0.523e3 / 0.90e2 * (eta ^ 6) + 0.45719e5 / 0.405e3 * (eta ^ 4) - 0.641098e6 / 0.2025e4 - 0.2564392e7 / 0.2025e4 * eta - 0.441934e6 / 0.675e3 * (eta ^ 3) + 0.16166e5 / 0.225e3 * (eta ^ 5)) * ci2 ^ 8 + (-0.3455431e7 / 0.81000e5 * (eta ^ 4) + 0.70631353e8 / 0.162000e6 * (eta ^ 2) - 0.127301e6 / 0.54000e5 * (eta ^ 6) + 0.3422003e7 / 0.40500e5 + 0.3422003e7 / 0.10125e5 * eta + 0.2211071e7 / 0.13500e5 * (eta ^ 3) - 0.333157e6 / 0.13500e5 * (eta ^ 5)) * ci2 ^ 6 + (0.3893e4 / 0.6750e4 * (eta ^ 6) + 0.19826e5 / 0.2025e4 * (eta ^ 4) - 0.291761e6 / 0.4050e4 * (eta ^ 2) - 0.142771e6 / 0.10125e5 - 0.571084e6 / 0.10125e5 * eta - 0.16898e5 / 0.675e3 * (eta ^ 3) + 0.1198e4 / 0.225e3 * (eta ^ 5)) * ci2 ^ 4 + (-0.3563e4 / 0.45000e5 * (eta ^ 6) - 0.84869e5 / 0.67500e5 * (eta ^ 4) + 0.304973e6 / 0.45000e5 * (eta ^ 2) + 0.15109e5 / 0.11250e5 + 0.30218e5 / 0.5625e4 * eta + 0.23753e5 / 0.11250e5 * (eta ^ 3) - 0.2473e4 / 0.3750e4 * (eta ^ 5)) * ci2 ^ 2 + 0.14071e5 / 0.202500e6 * (eta ^ 4) + 0.1213e4 / 0.33750e5 * (eta ^ 5) - 0.2519e4 / 0.33750e5 * (eta ^ 3) + 0.637e3 / 0.135000e6 * (eta ^ 6) - 0.5687e4 / 0.101250e6 - 0.11374e5 / 0.50625e5 * eta - 0.113137e6 / 0.405000e6 * (eta ^ 2)) * ((eta - 1) ^ 2) * sin((4 * g)) * ci2 ^ 2 * (ci2 - 0.1e1) / 0.5e1)) * J ^ 2 * (ci2 - 0.1e1) / (0.5e1 * ci2 ^ 4 - 0.5e1 * ci2 ^ 2 + 0.1e1) ^ 4 / ((1 + eta) ^ 3) / a ^ 4 / (eta ^ 10)];
	D6 = [-0.151875e6 / 0.32e2 * (ci2 + 1) * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * J ^ 2 * (-(ci2 + 1) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * ((0.563e3 / 0.81e2 * (eta ^ 4) - 0.626e3 / 0.27e2 * (eta ^ 2) - 0.1045e4 / 0.81e2 + (eta ^ 5) + 0.806e3 / 0.81e2 * (eta ^ 3) - 0.1045e4 / 0.27e2 * eta) * (ci2 ^ 18) + (-0.286e3 / 0.9e1 * (eta ^ 4) + 0.7676e4 / 0.81e2 * (eta ^ 2) + 0.4370e4 / 0.81e2 - 0.14e2 / 0.3e1 * (eta ^ 5) - 0.3772e4 / 0.81e2 * (eta ^ 3) + 0.4370e4 / 0.27e2 * eta) * (ci2 ^ 16) + (0.11399e5 / 0.180e3 * (eta ^ 4) - 0.81119e5 / 0.486e3 * (eta ^ 2) - 0.52703e5 / 0.540e3 + 0.1709e4 / 0.180e3 * (eta ^ 5) + 0.76697e5 / 0.810e3 * (eta ^ 3) - 0.52703e5 / 0.180e3 * eta) * (ci2 ^ 14) + (-0.9737e4 / 0.135e3 * (eta ^ 4) + 0.201308e6 / 0.1215e4 * (eta ^ 2) + 0.121541e6 / 0.1215e4 + 0.121541e6 / 0.405e3 * eta - 0.497e3 / 0.45e2 * (eta ^ 5) - 0.26660e5 / 0.243e3 * (eta ^ 3)) * (ci2 ^ 12) + (0.419111e6 / 0.8100e4 * (eta ^ 4) - 0.247291e6 / 0.2430e4 * (eta ^ 2) - 0.1553143e7 / 0.24300e5 - 0.1553143e7 / 0.8100e4 * eta + 0.21871e5 / 0.2700e4 * (eta ^ 5) + 0.970087e6 / 0.12150e5 * (eta ^ 3)) * (ci2 ^ 10) + (-0.98353e5 / 0.4050e4 * (eta ^ 4) + 0.242687e6 / 0.6075e4 * (eta ^ 2) + 0.320549e6 / 0.12150e5 + 0.320549e6 / 0.4050e4 * eta - 0.5257e4 / 0.1350e4 * (eta ^ 5) - 0.230231e6 / 0.6075e4 * (eta ^ 3)) * (ci2 ^ 8) + (0.1212187e7 / 0.162000e6 * (eta ^ 4) - 0.2425183e7 / 0.243000e6 * (eta ^ 2) - 0.3422003e7 / 0.486000e6 - 0.3422003e7 / 0.162000e6 * eta + 0.66563e5 / 0.54000e5 * (eta ^ 5) + 0.2858927e7 / 0.243000e6 * (eta ^ 3)) * (ci2 ^ 6) + (-0.59429e5 / 0.40500e5 * (eta ^ 4) + 0.46261e5 / 0.30375e5 * (eta ^ 2) + 0.142771e6 / 0.121500e6 + 0.142771e6 / 0.40500e5 * eta - 0.10103e5 / 0.40500e5 * (eta ^ 5) - 0.70247e5 / 0.30375e5 * (eta ^ 3)) * (ci2 ^ 4) + (0.7529e4 / 0.45000e5 * (eta ^ 4) - 0.77867e5 / 0.607500e6 * (eta ^ 2) - 0.15109e5 / 0.135000e6 - 0.15109e5 / 0.45000e5 * eta + 0.11963e5 / 0.405000e6 * (eta ^ 5) + 0.53137e5 / 0.202500e6 * (eta ^ 3)) * (ci2 ^ 2) - 0.637e3 / 0.405000e6 * (eta - 1) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 - 1) * sin((3 * g - h)) / 0.6e1 + 0.5e1 / 0.9e1 * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * (ci2 ^ 18) + (0.1882e4 / 0.45e2 * (eta ^ 4) - 0.27796e5 / 0.405e3 * (eta ^ 2) - 0.4094e4 / 0.81e2 - 0.22e2 / 0.5e1 * (eta ^ 5) + 0.1052e4 / 0.45e2 * (eta ^ 3) + 0.6746e4 / 0.405e3 * eta) * (ci2 ^ 16) + (-0.106859e6 / 0.1350e4 * (eta ^ 4) + 0.261079e6 / 0.2025e4 * (eta ^ 2) + 0.357059e6 / 0.4050e4 + 0.399e3 / 0.50e2 * (eta ^ 5) - 0.1057e4 / 0.25e2 * (eta ^ 3) - 0.131101e6 / 0.4050e4 * eta) * (ci2 ^ 14) + (0.11582e5 / 0.135e3 * (eta ^ 4) - 0.95221e5 / 0.675e3 * (eta ^ 2) - 0.56273e5 / 0.675e3 + 0.25123e5 / 0.675e3 * eta - 0.578e3 / 0.75e2 * (eta ^ 5) + 0.27911e5 / 0.675e3 * (eta ^ 3)) * (ci2 ^ 12) + (-0.78937e5 / 0.1350e4 * (eta ^ 4) + 0.993721e6 / 0.10125e5 * (eta ^ 2) + 0.940037e6 / 0.20250e5 - 0.553603e6 / 0.20250e5 * eta + 0.1901e4 / 0.450e3 * (eta ^ 5) - 0.80377e5 / 0.3375e4 * (eta ^ 3)) * (ci2 ^ 10) + (0.174647e6 / 0.6750e4 * (eta ^ 4) - 0.450023e6 / 0.10125e5 * (eta ^ 2) - 0.312487e6 / 0.20250e5 + 0.263369e6 / 0.20250e5 * eta - 0.2819e4 / 0.2250e4 * (eta ^ 5) + 0.27731e5 / 0.3375e4 * (eta ^ 3)) * (ci2 ^ 8) + (-0.499591e6 / 0.67500e5 * (eta ^ 4) + 0.654334e6 / 0.50625e5 * (eta ^ 2) + 0.594109e6 / 0.202500e6 - 0.794771e6 / 0.202500e6 * eta + 0.1861e4 / 0.13500e5 * (eta ^ 5) - 0.5522e4 / 0.3375e4 * (eta ^ 3)) * (ci2 ^ 6) + (0.4442e4 / 0.3375e4 * (eta ^ 4) - 0.233093e6 / 0.101250e6 * (eta ^ 2) - 0.27671e5 / 0.101250e6 + 0.72121e5 / 0.101250e6 * eta + 0.398e3 / 0.16875e5 * (eta ^ 5) + 0.5489e4 / 0.33750e5 * (eta ^ 3)) * (ci2 ^ 4) + (-0.33e2 / 0.250e3 * (eta ^ 4) + 0.22927e5 / 0.101250e6 * (eta ^ 2) + 0.251e3 / 0.50625e5 - 0.3529e4 / 0.50625e5 * eta - 0.287e3 / 0.33750e5 * (eta ^ 5) - 0.107e3 / 0.33750e5 * (eta ^ 3)) * (ci2 ^ 2) + 0.49e2 / 0.67500e5 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((1 + eta) ^ 2) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((g - h)) + (((-0.557e3 / 0.81e2 * (eta ^ 4) - 0.3812e4 / 0.243e3 * (eta ^ 2) - 0.4895e4 / 0.729e3 + (eta ^ 5) - 0.4964e4 / 0.243e3 * (eta ^ 3) - 0.2735e4 / 0.243e3 * eta) * (ci2 ^ 18) + (0.778e3 / 0.27e2 * (eta ^ 4) + 0.48124e5 / 0.729e3 * (eta ^ 2) + 0.20470e5 / 0.729e3 - 0.38e2 / 0.9e1 * (eta ^ 5) + 0.20860e5 / 0.243e3 * (eta ^ 3) + 0.11398e5 / 0.243e3 * eta) * (ci2 ^ 16) + (-0.131869e6 / 0.2430e4 * (eta ^ 4) - 0.28577e5 / 0.243e3 * (eta ^ 2) - 0.357059e6 / 0.7290e4 + 0.389e3 / 0.54e2 * (eta ^ 5) - 0.191683e6 / 0.1215e4 * (eta ^ 3) - 0.194339e6 / 0.2430e4 * eta) * (ci2 ^ 14) + (0.14564e5 / 0.243e3 * (eta ^ 4) + 0.422017e6 / 0.3645e4 * (eta ^ 2) + 0.56273e5 / 0.1215e4 + 0.29141e5 / 0.405e3 * eta - 0.172e3 / 0.27e2 * (eta ^ 5) + 0.7463e4 / 0.45e2 * (eta ^ 3)) * (ci2 ^ 12) + (-0.57023e5 / 0.1350e4 * (eta ^ 4) - 0.1256959e7 / 0.18225e5 * (eta ^ 2) - 0.940037e6 / 0.36450e5 - 0.442157e6 / 0.12150e5 * eta + 0.12353e5 / 0.4050e4 * (eta ^ 5) - 0.663751e6 / 0.6075e4 * (eta ^ 3)) * (ci2 ^ 10) + (0.235337e6 / 0.12150e5 * (eta ^ 4) + 0.51811e5 / 0.2025e4 * (eta ^ 2) + 0.312487e6 / 0.36450e5 + 0.24107e5 / 0.2430e4 * eta - 0.563e3 / 0.810e3 * (eta ^ 5) + 0.281879e6 / 0.6075e4 * (eta ^ 3)) * (ci2 ^ 8) + (-0.690137e6 / 0.121500e6 * (eta ^ 4) - 0.534064e6 / 0.91125e5 * (eta ^ 2) - 0.594109e6 / 0.364500e6 - 0.131149e6 / 0.121500e6 * eta + 0.23e2 / 0.4500e4 * (eta ^ 5) - 0.42446e5 / 0.3375e4 * (eta ^ 3)) * (ci2 ^ 6) + (0.2051e4 / 0.2025e4 * (eta ^ 4) + 0.5759e4 / 0.7290e4 * (eta ^ 2) + 0.27671e5 / 0.182250e6 - 0.5593e4 / 0.60750e5 * eta + 0.979e3 / 0.30375e5 * (eta ^ 5) + 0.126103e6 / 0.60750e5 * (eta ^ 3)) * (ci2 ^ 4) + (-0.1199e4 / 0.12150e5 * (eta ^ 4) - 0.3359e4 / 0.60750e5 * (eta ^ 2) - 0.251e3 / 0.91125e5 + 0.1009e4 / 0.30375e5 * eta - 0.77e2 / 0.12150e5 * (eta ^ 5) - 0.11357e5 / 0.60750e5 * (eta ^ 3)) * (ci2 ^ 2) + 0.49e2 / 0.121500e6 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (1 + eta) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * sin((3 * g + h)) - 0.11e2 / 0.18e2 * (ci2 + 1) * ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * (ci2 ^ 18) + (-0.10210e5 / 0.297e3 * (eta ^ 4) - 0.39596e5 / 0.297e3 * (eta ^ 2) - 0.4370e4 / 0.297e3 - 0.46e2 / 0.11e2 * (eta ^ 5) - 0.31340e5 / 0.297e3 * (eta ^ 3) - 0.21850e5 / 0.297e3 * eta) * (ci2 ^ 16) + (0.8213e4 / 0.132e3 * (eta ^ 4) + 0.2146811e7 / 0.8910e4 * (eta ^ 2) + 0.52703e5 / 0.1980e4 + 0.1671e4 / 0.220e3 * (eta ^ 5) + 0.1697947e7 / 0.8910e4 * (eta ^ 3) + 0.52703e5 / 0.396e3 * eta) * (ci2 ^ 14) + (-0.94931e5 / 0.1485e4 * (eta ^ 4) - 0.11102e5 / 0.45e2 * (eta ^ 2) - 0.121541e6 / 0.4455e4 - 0.121541e6 / 0.891e3 * eta - 0.259e3 / 0.33e2 * (eta ^ 5) - 0.868954e6 / 0.4455e4 * (eta ^ 3)) * (ci2 ^ 12) + (0.406091e6 / 0.9900e4 * (eta ^ 4) + 0.259817e6 / 0.1650e4 * (eta ^ 2) + 0.1553143e7 / 0.89100e5 + 0.1553143e7 / 0.17820e5 * eta + 0.10051e5 / 0.1980e4 * (eta ^ 5) + 0.1109111e7 / 0.8910e4 * (eta ^ 3)) * (ci2 ^ 10) + (-0.252931e6 / 0.14850e5 * (eta ^ 4) - 0.289213e6 / 0.4455e4 * (eta ^ 2) - 0.320549e6 / 0.44550e5 - 0.320549e6 / 0.8910e4 * eta - 0.10541e5 / 0.4950e4 * (eta ^ 5) - 0.381083e6 / 0.7425e4 * (eta ^ 3)) * (ci2 ^ 8) + (0.906823e6 / 0.198000e6 * (eta ^ 4) + 0.1712807e7 / 0.99000e5 * (eta ^ 2) + 0.3422003e7 / 0.1782000e7 + 0.3422003e7 / 0.356400e6 * eta + 0.6263e4 / 0.10800e5 * (eta ^ 5) + 0.12189791e8 / 0.891000e6 * (eta ^ 3)) * (ci2 ^ 6) + (-0.114581e6 / 0.148500e6 * (eta ^ 4) - 0.214021e6 / 0.74250e5 * (eta ^ 2) - 0.142771e6 / 0.445500e6 - 0.142771e6 / 0.89100e5 * eta - 0.14737e5 / 0.148500e6 * (eta ^ 5) - 0.507919e6 / 0.222750e6 * (eta ^ 3)) * (ci2 ^ 4) + (0.36857e5 / 0.495000e6 * (eta ^ 4) + 0.610417e6 / 0.2227500e7 * (eta ^ 2) + 0.15109e5 / 0.495000e6 + 0.15109e5 / 0.99000e5 * eta + 0.4837e4 / 0.495000e6 * (eta ^ 5) + 0.483377e6 / 0.2227500e7 * (eta ^ 3)) * (ci2 ^ 2) - 0.637e3 / 0.1485000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * sin((5 * g + h)) * (eta - 1) * (ci2 ^ 2) * (ci2 - 1)) * (eta - 1)) * (ci2 - 1) / ((1 + eta) ^ 3) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) / a ^ 5 / (eta ^ 8) 0 0.928125e6 / 0.64e2 * sqrt((-ci2 ^ 2 + 1)) * sqrt((-eta ^ 2 + 1)) * R__e ^ 4 * ci2 * J ^ 2 * (-0.18e2 / 0.11e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (eta - 1) * (1 + eta) * ((-0.557e3 / 0.81e2 * (eta ^ 4) - 0.3812e4 / 0.243e3 * (eta ^ 2) - 0.4895e4 / 0.729e3 + (eta ^ 5) - 0.4964e4 / 0.243e3 * (eta ^ 3) - 0.2735e4 / 0.243e3 * eta) * (ci2 ^ 24) + (0.445e3 / 0.12e2 * (eta ^ 4) + 0.20608e5 / 0.243e3 * (eta ^ 2) - 0.65e2 / 0.12e2 * (eta ^ 5) + 0.8938e4 / 0.81e2 * (eta ^ 3) + 0.19603e5 / 0.324e3 * eta + 0.35155e5 / 0.972e3) * (ci2 ^ 22) + (-0.108856e6 / 0.1215e4 * (eta ^ 4) - 0.294191e6 / 0.1458e4 * (eta ^ 2) - 0.643603e6 / 0.2430e4 * (eta ^ 3) - 0.344497e6 / 0.2430e4 * eta + 0.344e3 / 0.27e2 * (eta ^ 5) - 0.622417e6 / 0.7290e4) * (ci2 ^ 20) + (0.1237837e7 / 0.9720e4 * (eta ^ 4) + 0.37522e5 / 0.135e3 * (eta ^ 2) + 0.451142e6 / 0.1215e4 * (eta ^ 3) + 0.370277e6 / 0.1944e4 * eta - 0.6163e4 / 0.360e3 * (eta ^ 5) + 0.3388513e7 / 0.29160e5) * (ci2 ^ 18) + (-0.7890347e7 / 0.48600e5 * eta - 0.5707727e7 / 0.48600e5 * (eta ^ 4) - 0.893683e6 / 0.3645e4 * (eta ^ 2) + 0.15703e5 / 0.1080e4 * (eta ^ 5) - 0.2040331e7 / 0.6075e4 * (eta ^ 3) - 0.14709827e8 / 0.145800e6) * (ci2 ^ 16) + (0.2230019e7 / 0.24300e5 * eta + 0.886241e6 / 0.12150e5 * (eta ^ 4) + 0.3512293e7 / 0.24300e5 * (eta ^ 2) - 0.33067e5 / 0.4050e4 * (eta ^ 5) + 0.4957487e7 / 0.24300e5 * (eta ^ 3) + 0.170195e6 / 0.2916e4) * (ci2 ^ 14) + (-0.8501053e7 / 0.243000e6 * eta - 0.1483891e7 / 0.48600e5 * (eta ^ 4) - 0.20977351e8 / 0.364500e6 * (eta ^ 2) + 0.250601e6 / 0.81000e5 * (eta ^ 5) - 0.10165363e8 / 0.121500e6 * (eta ^ 3) - 0.16624813e8 / 0.729000e6) * (ci2 ^ 12) + (0.4382717e7 / 0.486000e6 * eta + 0.803887e6 / 0.97200e5 * (eta ^ 4) + 0.11082353e8 / 0.729000e6 * (eta ^ 2) + 0.1091681e7 / 0.48600e5 * (eta ^ 3) + 0.8696813e7 / 0.1458000e7 - 0.43423e5 / 0.54000e5 * (eta ^ 5)) * (ci2 ^ 10) + (-0.1281757e7 / 0.810000e6 * eta - 0.113099e6 / 0.90000e5 * (eta ^ 4) - 0.9119927e7 / 0.3645000e7 * (eta ^ 2) - 0.4312627e7 / 0.1215000e7 * (eta ^ 3) - 0.2458957e7 / 0.2430000e7 + 0.366029e6 / 0.2430000e7 * (eta ^ 5)) * (ci2 ^ 8) + (0.3227e4 / 0.90000e5 * (eta ^ 4) + 0.769411e6 / 0.3645000e7 * (eta ^ 2) + 0.47483e5 / 0.243000e6 * (eta ^ 3) + 0.97747e5 / 0.486000e6 * eta + 0.768959e6 / 0.7290000e7 - 0.18943e5 / 0.810000e6 * (eta ^ 5)) * (ci2 ^ 6) + (0.10909e5 / 0.486000e6 * (eta ^ 4) - 0.1589e4 / 0.3645000e7 * (eta ^ 2) + 0.40303e5 / 0.1215000e7 * (eta ^ 3) - 0.53657e5 / 0.2430000e7 * eta - 0.9637e4 / 0.1458000e7 + 0.8299e4 / 0.2430000e7 * (eta ^ 5)) * (ci2 ^ 4) - 0.931e3 / 0.2430000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (1 + eta) * (ci2 ^ 2) + 0.49e2 / 0.2430000e7 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * sin((3 * g + 2 * h)) + (ci2 + 1) * ((eta - 1) ^ 2) * ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * (ci2 ^ 24) + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * (ci2 ^ 22) + (0.6901e4 / 0.72e2 * (eta ^ 4) + 0.601849e6 / 0.1620e4 * (eta ^ 2) + 0.5239507e7 / 0.17820e5 * (eta ^ 3) + 0.487189e6 / 0.2376e4 * eta + 0.1027e4 / 0.88e2 * (eta ^ 5) + 0.487189e6 / 0.11880e5) * (ci2 ^ 20) + (-0.187384e6 / 0.1485e4 * (eta ^ 4) - 0.435434e6 / 0.891e3 * (eta ^ 2) - 0.17398e5 / 0.45e2 * (eta ^ 3) - 0.240452e6 / 0.891e3 * eta - 0.508e3 / 0.33e2 * (eta ^ 5) - 0.240452e6 / 0.4455e4) * (ci2 ^ 18) + (0.809179e6 / 0.3564e4 * eta + 0.630917e6 / 0.5940e4 * (eta ^ 4) + 0.3661667e7 / 0.8910e4 * (eta ^ 2) + 0.779e3 / 0.60e2 * (eta ^ 5) + 0.2895971e7 / 0.8910e4 * (eta ^ 3) + 0.809179e6 / 0.17820e5) * (ci2 ^ 16) + (-0.25031e5 / 0.198e3 * eta - 0.878473e6 / 0.14850e5 * (eta ^ 4) - 0.1019087e7 / 0.4455e4 * (eta ^ 2) - 0.35839e5 / 0.4950e4 * (eta ^ 5) - 0.4028987e7 / 0.22275e5 * (eta ^ 3) - 0.25031e5 / 0.990e3) * (ci2 ^ 14) + (0.1316581e7 / 0.28512e5 * eta + 0.8546953e7 / 0.396000e6 * (eta ^ 4) + 0.148892881e9 / 0.1782000e7 * (eta ^ 2) + 0.626771e6 / 0.237600e6 * (eta ^ 5) + 0.4359427e7 / 0.66000e5 * (eta ^ 3) + 0.1316581e7 / 0.142560e6) * (ci2 ^ 12) + (-0.911113e6 / 0.89100e5 * eta - 0.705151e6 / 0.148500e6 * (eta ^ 4) - 0.4125761e7 / 0.222750e6 * (eta ^ 2) - 0.3260417e7 / 0.222750e6 * (eta ^ 3) - 0.911113e6 / 0.445500e6 - 0.85219e5 / 0.148500e6 * (eta ^ 5)) * (ci2 ^ 10) + (0.13115e5 / 0.14256e5 * eta + 0.12211e5 / 0.30000e5 * (eta ^ 4) + 0.7483963e7 / 0.4455000e7 * (eta ^ 2) + 0.393557e6 / 0.297000e6 * (eta ^ 3) + 0.2623e4 / 0.14256e5 + 0.133093e6 / 0.2970000e7 * (eta ^ 5)) * (ci2 ^ 8) + (0.119831e6 / 0.1485000e7 * (eta ^ 4) + 0.609197e6 / 0.2227500e7 * (eta ^ 2) + 0.96841e5 / 0.445500e6 * (eta ^ 3) + 0.5497e4 / 0.35640e5 * eta + 0.5497e4 / 0.178200e6 + 0.17387e5 / 0.1485000e7 * (eta ^ 5)) * (ci2 ^ 6) + (-0.53711e5 / 0.1856250e7 * (eta ^ 4) - 0.288787e6 / 0.2784375e7 * (eta ^ 2) - 0.229187e6 / 0.2784375e7 * (eta ^ 3) - 0.7169e4 / 0.123750e6 * eta - 0.7169e4 / 0.618750e6 - 0.7291e4 / 0.1856250e7 * (eta ^ 5)) * (ci2 ^ 4) + 0.637e3 / 0.1350000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4) * (ci2 ^ 2) - 0.637e3 / 0.29700000e8 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 ^ 2) * (ci2 - 1) * sin((5 * g + 2 * h)) + 0.3e1 / 0.11e2 * ((ci2 + 1) ^ 2) * ((0.563e3 / 0.81e2 * (eta ^ 4) - 0.626e3 / 0.27e2 * (eta ^ 2) - 0.1045e4 / 0.81e2 + (eta ^ 5) + 0.806e3 / 0.81e2 * (eta ^ 3) - 0.1045e4 / 0.27e2 * eta) * (ci2 ^ 22) + (-0.6113e4 / 0.162e3 * (eta ^ 4) + 0.1057e4 / 0.9e1 * (eta ^ 2) - 0.4441e4 / 0.81e2 * (eta ^ 3) + 0.10735e5 / 0.54e2 * eta - 0.11e2 / 0.2e1 * (eta ^ 5) + 0.10735e5 / 0.162e3) * (ci2 ^ 20) + (0.98761e5 / 0.1080e4 * (eta ^ 4) - 0.1279183e7 / 0.4860e4 * (eta ^ 2) + 0.218389e6 / 0.1620e4 * (eta ^ 3) - 0.489089e6 / 0.1080e4 * eta + 0.973e3 / 0.72e2 * (eta ^ 5) - 0.489089e6 / 0.3240e4) * (ci2 ^ 18) + (0.1954483e7 / 0.3240e4 * eta - 0.140941e6 / 0.1080e4 * (eta ^ 4) + 0.1671401e7 / 0.4860e4 * (eta ^ 2) - 0.1409e4 / 0.72e2 * (eta ^ 5) - 0.948049e6 / 0.4860e4 * (eta ^ 3) + 0.1954483e7 / 0.9720e4) * (ci2 ^ 16) + (-0.1689737e7 / 0.3240e4 * eta + 0.131567e6 / 0.1080e4 * (eta ^ 4) - 0.282427e6 / 0.972e3 * (eta ^ 2) + 0.6679e4 / 0.360e3 * (eta ^ 5) + 0.896591e6 / 0.4860e4 * (eta ^ 3) - 0.1689737e7 / 0.9720e4) * (ci2 ^ 14) + (0.66313e5 / 0.216e3 * eta - 0.421889e6 / 0.5400e4 * (eta ^ 4) + 0.808399e6 / 0.4860e4 * (eta ^ 2) - 0.65323e5 / 0.5400e4 * (eta ^ 5) - 0.969881e6 / 0.8100e4 * (eta ^ 3) + 0.66313e5 / 0.648e3) * (ci2 ^ 12) + (-0.1626449e7 / 0.12960e5 * eta + 0.11394769e8 / 0.324000e6 * (eta ^ 4) - 0.31919317e8 / 0.486000e6 * (eta ^ 2) + 0.1059053e7 / 0.19440e5 * (eta ^ 3) - 0.1626449e7 / 0.38880e5 + 0.598793e6 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 10) + (0.11540749e8 / 0.324000e6 * eta - 0.3609497e7 / 0.324000e6 * (eta ^ 4) + 0.2888429e7 / 0.162000e6 * (eta ^ 2) - 0.8462431e7 / 0.486000e6 * (eta ^ 3) + 0.11540749e8 / 0.972000e6 - 0.193553e6 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 8) + (0.3959807e7 / 0.1620000e7 * (eta ^ 4) - 0.876589e6 / 0.270000e6 * (eta ^ 2) + 0.9344077e7 / 0.2430000e7 * (eta ^ 3) - 0.2229959e7 / 0.324000e6 * eta - 0.2229959e7 / 0.972000e6 + 0.43483e5 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 6) + (-0.115411e6 / 0.324000e6 * (eta ^ 4) + 0.60767e5 / 0.162000e6 * (eta ^ 2) - 0.10111e5 / 0.18000e5 * (eta ^ 3) + 0.691e3 / 0.800e3 * eta + 0.691e3 / 0.2400e4 - 0.6523e4 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 4) + (0.28201e5 / 0.900000e6 * (eta ^ 4) - 0.99251e5 / 0.4050000e7 * (eta ^ 2) + 0.597689e6 / 0.12150000e8 * (eta ^ 3) - 0.515489e6 / 0.8100000e7 * eta - 0.515489e6 / 0.24300000e8 + 0.4963e4 / 0.900000e6 * (eta ^ 5)) * (ci2 ^ 2) - 0.637e3 / 0.2700000e7 * (eta - 1) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * sin((-2 * h + 3 * g)) - 0.10e2 / 0.11e2 * (ci2 + 1) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * (ci2 ^ 22) + (0.2897e4 / 0.60e2 * (eta ^ 4) - 0.6478e4 / 0.81e2 * (eta ^ 2) + 0.3634e4 / 0.135e3 * (eta ^ 3) + 0.31333e5 / 0.1620e4 * eta - 0.101e3 / 0.20e2 * (eta ^ 5) - 0.19135e5 / 0.324e3) * (ci2 ^ 20) + (-0.289289e6 / 0.2700e4 * (eta ^ 4) + 0.710999e6 / 0.4050e4 * (eta ^ 2) - 0.79499e5 / 0.1350e4 * (eta ^ 3) - 0.349331e6 / 0.8100e4 * eta + 0.1109e4 / 0.100e3 * (eta ^ 5) + 0.1020109e7 / 0.8100e4) * (ci2 ^ 18) + (0.927671e6 / 0.16200e5 * eta + 0.83527e5 / 0.600e3 * (eta ^ 4) - 0.920611e6 / 0.4050e4 * (eta ^ 2) - 0.8329e4 / 0.600e3 * (eta ^ 5) + 0.19901e5 / 0.270e3 * (eta ^ 3) - 0.2491393e7 / 0.16200e5) * (ci2 ^ 16) + (-0.507946e6 / 0.10125e5 * eta - 0.396409e6 / 0.3375e4 * (eta ^ 4) + 0.1950473e7 / 0.10125e5 * (eta ^ 2) + 0.4087e4 / 0.375e3 * (eta ^ 5) - 0.196633e6 / 0.3375e4 * (eta ^ 3) + 0.1201154e7 / 0.10125e5) * (ci2 ^ 14) + (0.1226303e7 / 0.40500e5 * eta + 0.151679e6 / 0.2250e4 * (eta ^ 4) - 0.4530781e7 / 0.40500e5 * (eta ^ 2) - 0.12493e5 / 0.2250e4 * (eta ^ 5) + 0.136259e6 / 0.4500e4 * (eta ^ 3) - 0.487109e6 / 0.8100e4) * (ci2 ^ 12) + (-0.191131e6 / 0.15000e5 * eta - 0.3614989e7 / 0.135000e6 * (eta ^ 4) + 0.762824e6 / 0.16875e5 * (eta ^ 2) - 0.58696e5 / 0.5625e4 * (eta ^ 3) + 0.302629e6 / 0.15000e5 + 0.49271e5 / 0.27000e5 * (eta ^ 5)) * (ci2 ^ 10) + (0.599147e6 / 0.162000e6 * eta + 0.219949e6 / 0.30000e5 * (eta ^ 4) - 0.5109619e7 / 0.405000e6 * (eta ^ 2) + 0.316063e6 / 0.135000e6 * (eta ^ 3) - 0.3552953e7 / 0.810000e6 - 0.98651e5 / 0.270000e6 * (eta ^ 5)) * (ci2 ^ 8) + (-0.455041e6 / 0.337500e6 * (eta ^ 4) + 0.398011e6 / 0.168750e6 * (eta ^ 2) - 0.10937e5 / 0.33750e5 * (eta ^ 3) - 0.241397e6 / 0.337500e6 * eta + 0.196363e6 / 0.337500e6 + 0.487e3 / 0.13500e5 * (eta ^ 5)) * (ci2 ^ 6) + (0.42469e5 / 0.270000e6 * (eta ^ 4) - 0.560969e6 / 0.2025000e7 * (eta ^ 2) + 0.16357e5 / 0.675000e6 * (eta ^ 3) + 0.348071e6 / 0.4050000e7 * eta - 0.164281e6 / 0.4050000e7 + 0.227e3 / 0.450000e6 * (eta ^ 5)) * (ci2 ^ 4) + (-0.1397e4 / 0.135000e6 * (eta ^ 4) + 0.1516e4 / 0.84375e5 * (eta ^ 2) - 0.16e2 / 0.28125e5 * (eta ^ 3) - 0.3767e4 / 0.675000e6 * eta + 0.553e3 / 0.675000e6 - 0.329e3 / 0.675000e6 * (eta ^ 5)) * (ci2 ^ 2) + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((1 + eta) ^ 2) * (ci2 - 1) * sin((g - 2 * h)) - 0.15e2 / 0.11e2 * (ci2 + 1) * (eta - 1) * (1 + eta) * (((eta ^ 5) - 0.467e3 / 0.81e2 * eta - 0.781e3 / 0.81e2 * (eta ^ 4) - 0.5746e4 / 0.405e3 * (eta ^ 2) - 0.3578e4 / 0.135e3 * (eta ^ 3) - 0.1331e4 / 0.243e3) * (ci2 ^ 26) + (0.21011e5 / 0.135e3 * (eta ^ 3) + 0.16037e5 / 0.405e3 * eta + 0.4550e4 / 0.81e2 * (eta ^ 4) + 0.7103e4 / 0.81e2 * (eta ^ 2) - (6 * eta ^ 5) + 0.8305e4 / 0.243e3) * (ci2 ^ 24) + (0.28787e5 / 0.1800e4 * (eta ^ 5) - 0.3346253e7 / 0.8100e4 * (eta ^ 3) - 0.1903489e7 / 0.16200e5 * eta - 0.160561e6 / 0.1080e4 * (eta ^ 4) - 0.1177957e7 / 0.4860e4 * (eta ^ 2) - 0.4610689e7 / 0.48600e5) * (ci2 ^ 22) + (-0.22459e5 / 0.900e3 * (eta ^ 5) + 0.383387e6 / 0.1620e4 * (eta ^ 4) + 0.4810073e7 / 0.12150e5 * (eta ^ 2) + 0.7964891e7 / 0.12150e5 * (eta ^ 3) + 0.1623833e7 / 0.8100e4 * eta + 0.3761153e7 / 0.24300e5) * (ci2 ^ 20) + (0.3791e4 / 0.150e3 * (eta ^ 5) - 0.1023529e7 / 0.4050e4 * (eta ^ 4) - 0.5167901e7 / 0.12150e5 * (eta ^ 2) - 0.8419339e7 / 0.12150e5 * (eta ^ 3) - 0.148192e6 / 0.675e3 * eta - 0.334342e6 / 0.2025e4) * (ci2 ^ 18) + (0.7736201e7 / 0.40500e5 * (eta ^ 4) + 0.71224e5 / 0.225e3 * (eta ^ 2) + 0.5209364e7 / 0.10125e5 * (eta ^ 3) + 0.1316081e7 / 0.8100e4 * eta - 0.234799e6 / 0.13500e5 * (eta ^ 5) + 0.588757e6 / 0.4860e4) * (ci2 ^ 16) + (-0.11335603e8 / 0.108000e6 * (eta ^ 4) - 0.1673317e7 / 0.10000e5 * (eta ^ 2) - 0.669586993e9 / 0.2430000e7 * (eta ^ 3) - 0.2989111e7 / 0.36000e5 * eta + 0.297253e6 / 0.36000e5 * (eta ^ 5) - 0.751039e6 / 0.12000e5) * (ci2 ^ 14) + (0.2143312e7 / 0.50625e5 * (eta ^ 4) + 0.25655273e8 / 0.405000e6 * (eta ^ 2) + 0.26126741e8 / 0.243000e6 * (eta ^ 3) + 0.11861833e8 / 0.405000e6 * eta - 0.602e3 / 0.225e3 * (eta ^ 5) + 0.27814873e8 / 0.1215000e7) * (ci2 ^ 12) + (-0.50574677e8 / 0.4050000e7 * (eta ^ 4) - 0.6917087e7 / 0.405000e6 * (eta ^ 2) - 0.185070679e9 / 0.6075000e7 * (eta ^ 3) - 0.28180399e8 / 0.4050000e7 * eta + 0.50717e5 / 0.90000e5 * (eta ^ 5) - 0.71286799e8 / 0.12150000e8) * (ci2 ^ 10) + (0.5358301e7 / 0.2025000e7 * (eta ^ 4) + 0.3253619e7 / 0.1012500e7 * (eta ^ 2) + 0.18717191e8 / 0.3037500e7 * (eta ^ 3) + 0.421259e6 / 0.405000e6 * eta - 0.26669e5 / 0.405000e6 * (eta ^ 5) + 0.1242203e7 / 0.1215000e7) * (ci2 ^ 8) + (-0.656119e6 / 0.1687500e7 * (eta ^ 4) - 0.819949e6 / 0.2025000e7 * (eta ^ 2) - 0.8696843e7 / 0.10125000e8 * (eta ^ 3) - 0.32171e5 / 0.405000e6 * eta + 0.4913e4 / 0.5062500e7 * (eta ^ 5) - 0.690487e6 / 0.6075000e7) * (ci2 ^ 6) + (0.752723e6 / 0.20250000e8 * (eta ^ 4) + 0.106597e6 / 0.3375000e7 * (eta ^ 2) + 0.2347523e7 / 0.30375000e8 * (eta ^ 3) - 0.6419e4 / 0.20250000e8 * eta + 0.17329e5 / 0.20250000e8 * (eta ^ 5) + 0.422989e6 / 0.60750000e8) * (ci2 ^ 4) + (-0.82813e5 / 0.40500000e8 * (eta ^ 4) - 0.78299e5 / 0.60750000e8 * (eta ^ 2) - 0.239557e6 / 0.60750000e8 * (eta ^ 3) + 0.21101e5 / 0.40500000e8 * eta - 0.4543e4 / 0.40500000e8 * (eta ^ 5) - 0.16339e5 / 0.121500000e9) * (ci2 ^ 2) + 0.49e2 / 0.10125000e8 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 - 1) * sin((3 * g)) + ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * (ci2 ^ 22) + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * (ci2 ^ 20) + (0.228593e6 / 0.2376e4 * (eta ^ 4) + 0.6645599e7 / 0.17820e5 * (eta ^ 2) + 0.5259007e7 / 0.17820e5 * (eta ^ 3) + 0.489089e6 / 0.2376e4 * eta + 0.1031e4 / 0.88e2 * (eta ^ 5) + 0.489089e6 / 0.11880e5) * (ci2 ^ 18) + (-0.1954483e7 / 0.7128e4 * eta - 0.1523237e7 / 0.11880e5 * (eta ^ 4) - 0.327637e6 / 0.660e3 * (eta ^ 2) - 0.4133e4 / 0.264e3 * (eta ^ 5) - 0.1399403e7 / 0.3564e4 * (eta ^ 3) - 0.1954483e7 / 0.35640e5) * (ci2 ^ 16) + (0.1689737e7 / 0.7128e4 * eta + 0.263779e6 / 0.2376e4 * (eta ^ 4) + 0.7642301e7 / 0.17820e5 * (eta ^ 2) + 0.1633e4 / 0.120e3 * (eta ^ 5) + 0.671413e6 / 0.1980e4 * (eta ^ 3) + 0.1689737e7 / 0.35640e5) * (ci2 ^ 14) + (-0.331565e6 / 0.2376e4 * eta - 0.3892373e7 / 0.59400e5 * (eta ^ 4) - 0.4495187e7 / 0.17820e5 * (eta ^ 2) - 0.159899e6 / 0.19800e5 * (eta ^ 5) - 0.17768447e8 / 0.89100e5 * (eta ^ 3) - 0.66313e5 / 0.2376e4) * (ci2 ^ 12) + (0.147859e6 / 0.2592e4 * eta + 0.3549751e7 / 0.132000e6 * (eta ^ 4) + 0.61196527e8 / 0.594000e6 * (eta ^ 2) + 0.145134029e9 / 0.1782000e7 * (eta ^ 3) + 0.147859e6 / 0.12960e5 + 0.793031e6 / 0.237600e6 * (eta ^ 5)) * (ci2 ^ 10) + (-0.1049159e7 / 0.64800e5 * eta - 0.828641e6 / 0.108000e6 * (eta ^ 4) - 0.10410541e8 / 0.356400e6 * (eta ^ 2) - 0.41153249e8 / 0.1782000e7 * (eta ^ 3) - 0.1049159e7 / 0.324000e6 - 0.1141487e7 / 0.1188000e7 * (eta ^ 5)) * (ci2 ^ 8) + (0.805903e6 / 0.540000e6 * (eta ^ 4) + 0.50224751e8 / 0.8910000e7 * (eta ^ 2) + 0.7943011e7 / 0.1782000e7 * (eta ^ 3) + 0.2229959e7 / 0.712800e6 * eta + 0.2229959e7 / 0.3564000e7 + 0.1122721e7 / 0.5940000e7 * (eta ^ 5)) * (ci2 ^ 6) + (-0.224441e6 / 0.1188000e7 * (eta ^ 4) - 0.83909e5 / 0.118800e6 * (eta ^ 2) - 0.66373e5 / 0.118800e6 * (eta ^ 3) - 0.691e3 / 0.1760e4 * eta - 0.691e3 / 0.8800e4 - 0.28837e5 / 0.1188000e7 * (eta ^ 5)) * (ci2 ^ 4) + (0.418679e6 / 0.29700000e8 * (eta ^ 4) + 0.210383e6 / 0.4050000e7 * (eta ^ 2) + 0.1832293e7 / 0.44550000e8 * (eta ^ 3) + 0.515489e6 / 0.17820000e8 * eta + 0.515489e6 / 0.89100000e8 + 0.54859e5 / 0.29700000e8 * (eta ^ 5)) * (ci2 ^ 2) - 0.637e3 / 0.9900000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 ^ 2) * ((ci2 - 1) ^ 2) * sin((5 * g)) - 0.10e2 / 0.11e2 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * (ci2 ^ 24) + (0.3187e4 / 0.60e2 * (eta ^ 4) - 0.11896e5 / 0.135e3 * (eta ^ 2) - 0.111e3 / 0.20e2 * (eta ^ 5) + 0.148e3 / 0.5e1 * (eta ^ 3) + 0.11501e5 / 0.540e3 * eta - 0.7031e4 / 0.108e3) * (ci2 ^ 22) + (-0.87536e5 / 0.675e3 * (eta ^ 4) + 0.862939e6 / 0.4050e4 * (eta ^ 2) - 0.96439e5 / 0.1350e4 * (eta ^ 3) - 0.211343e6 / 0.4050e4 * eta + 0.336e3 / 0.25e2 * (eta ^ 5) + 0.622417e6 / 0.4050e4) * (ci2 ^ 20) + (0.332821e6 / 0.1800e4 * (eta ^ 4) - 0.244991e6 / 0.810e3 * (eta ^ 2) + 0.133961e6 / 0.1350e4 * (eta ^ 3) + 0.1222871e7 / 0.16200e5 * eta - 0.11209e5 / 0.600e3 * (eta ^ 5) - 0.3388513e7 / 0.16200e5) * (ci2 ^ 18) + (-0.5748613e7 / 0.81000e5 * eta - 0.4590277e7 / 0.27000e5 * (eta ^ 4) + 0.5631311e7 / 0.20250e5 * (eta ^ 2) + 0.16497e5 / 0.1000e4 * (eta ^ 5) - 0.197587e6 / 0.2250e4 * (eta ^ 3) + 0.14709827e8 / 0.81000e5) * (ci2 ^ 16) + (0.1819693e7 / 0.40500e5 * eta + 0.707533e6 / 0.6750e4 * (eta ^ 4) - 0.6966443e7 / 0.40500e5 * (eta ^ 2) - 0.21797e5 / 0.2250e4 * (eta ^ 5) + 0.232789e6 / 0.4500e4 * (eta ^ 3) - 0.34039e5 / 0.324e3) * (ci2 ^ 14) + (-0.7746467e7 / 0.405000e6 * eta - 0.5864209e7 / 0.135000e6 * (eta ^ 4) + 0.14513723e8 / 0.202500e6 * (eta ^ 2) + 0.20887e5 / 0.5400e4 * (eta ^ 5) - 0.1388047e7 / 0.67500e5 * (eta ^ 3) + 0.16624813e8 / 0.405000e6) * (ci2 ^ 12) + (0.169819e6 / 0.32400e5 * eta + 0.1046219e7 / 0.90000e5 * (eta ^ 4) - 0.1564943e7 / 0.81000e5 * (eta ^ 2) + 0.738199e6 / 0.135000e6 * (eta ^ 3) - 0.8696813e7 / 0.810000e6 - 0.96517e5 / 0.90000e5 * (eta ^ 5)) * (ci2 ^ 10) + (-0.1072643e7 / 0.1350000e7 * eta - 0.2340619e7 / 0.1350000e7 * (eta ^ 4) + 0.1968719e7 / 0.675000e6 * (eta ^ 2) - 0.127469e6 / 0.135000e6 * (eta ^ 3) + 0.2458957e7 / 0.1350000e7 + 0.59137e5 / 0.270000e6 * (eta ^ 5)) * (ci2 ^ 8) + (0.6203e4 / 0.150000e6 * (eta ^ 4) - 0.31913e5 / 0.405000e6 * (eta ^ 2) + 0.7633e4 / 0.75000e5 * (eta ^ 3) + 0.71713e5 / 0.4050000e7 * eta - 0.768959e6 / 0.4050000e7 - 0.17023e5 / 0.450000e6 * (eta ^ 5)) * (ci2 ^ 6) + (0.8863e4 / 0.270000e6 * (eta ^ 4) - 0.107573e6 / 0.2025000e7 * (eta ^ 2) - 0.1621e4 / 0.225000e6 * (eta ^ 3) + 0.64601e5 / 0.4050000e7 * eta + 0.9637e4 / 0.810000e6 + 0.323e3 / 0.54000e5 * (eta ^ 5)) * (ci2 ^ 4) - 0.931e3 / 0.1350000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (eta - 1) * (ci2 ^ 2) + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((1 + eta) ^ 2) * sin(g)) / ((1 + eta) ^ 3) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) / a ^ 4 / (eta ^ 8) 0.928125e6 / 0.64e2 * sqrt((-ci2 ^ 2 + 1)) * R__e ^ 4 * ci2 * J ^ 2 * sqrt((-eta ^ 2 + 1)) * (0.18e2 / 0.11e2 * (eta - 1) * (1 + eta) * ((-0.557e3 / 0.81e2 * (eta ^ 4) - 0.3812e4 / 0.243e3 * (eta ^ 2) - 0.4895e4 / 0.729e3 + (eta ^ 5) - 0.4964e4 / 0.243e3 * (eta ^ 3) - 0.2735e4 / 0.243e3 * eta) * (ci2 ^ 24) + (0.445e3 / 0.12e2 * (eta ^ 4) + 0.20608e5 / 0.243e3 * (eta ^ 2) - 0.65e2 / 0.12e2 * (eta ^ 5) + 0.8938e4 / 0.81e2 * (eta ^ 3) + 0.19603e5 / 0.324e3 * eta + 0.35155e5 / 0.972e3) * (ci2 ^ 22) + (-0.108856e6 / 0.1215e4 * (eta ^ 4) - 0.294191e6 / 0.1458e4 * (eta ^ 2) - 0.643603e6 / 0.2430e4 * (eta ^ 3) - 0.344497e6 / 0.2430e4 * eta + 0.344e3 / 0.27e2 * (eta ^ 5) - 0.622417e6 / 0.7290e4) * (ci2 ^ 20) + (0.1237837e7 / 0.9720e4 * (eta ^ 4) + 0.37522e5 / 0.135e3 * (eta ^ 2) + 0.451142e6 / 0.1215e4 * (eta ^ 3) + 0.370277e6 / 0.1944e4 * eta - 0.6163e4 / 0.360e3 * (eta ^ 5) + 0.3388513e7 / 0.29160e5) * (ci2 ^ 18) + (-0.7890347e7 / 0.48600e5 * eta - 0.5707727e7 / 0.48600e5 * (eta ^ 4) - 0.893683e6 / 0.3645e4 * (eta ^ 2) + 0.15703e5 / 0.1080e4 * (eta ^ 5) - 0.2040331e7 / 0.6075e4 * (eta ^ 3) - 0.14709827e8 / 0.145800e6) * (ci2 ^ 16) + (0.2230019e7 / 0.24300e5 * eta + 0.886241e6 / 0.12150e5 * (eta ^ 4) + 0.3512293e7 / 0.24300e5 * (eta ^ 2) - 0.33067e5 / 0.4050e4 * (eta ^ 5) + 0.4957487e7 / 0.24300e5 * (eta ^ 3) + 0.170195e6 / 0.2916e4) * (ci2 ^ 14) + (-0.8501053e7 / 0.243000e6 * eta - 0.1483891e7 / 0.48600e5 * (eta ^ 4) - 0.20977351e8 / 0.364500e6 * (eta ^ 2) + 0.250601e6 / 0.81000e5 * (eta ^ 5) - 0.10165363e8 / 0.121500e6 * (eta ^ 3) - 0.16624813e8 / 0.729000e6) * (ci2 ^ 12) + (0.4382717e7 / 0.486000e6 * eta + 0.803887e6 / 0.97200e5 * (eta ^ 4) + 0.11082353e8 / 0.729000e6 * (eta ^ 2) + 0.1091681e7 / 0.48600e5 * (eta ^ 3) + 0.8696813e7 / 0.1458000e7 - 0.43423e5 / 0.54000e5 * (eta ^ 5)) * (ci2 ^ 10) + (-0.1281757e7 / 0.810000e6 * eta - 0.113099e6 / 0.90000e5 * (eta ^ 4) - 0.9119927e7 / 0.3645000e7 * (eta ^ 2) - 0.4312627e7 / 0.1215000e7 * (eta ^ 3) - 0.2458957e7 / 0.2430000e7 + 0.366029e6 / 0.2430000e7 * (eta ^ 5)) * (ci2 ^ 8) + (0.3227e4 / 0.90000e5 * (eta ^ 4) + 0.769411e6 / 0.3645000e7 * (eta ^ 2) + 0.47483e5 / 0.243000e6 * (eta ^ 3) + 0.97747e5 / 0.486000e6 * eta + 0.768959e6 / 0.7290000e7 - 0.18943e5 / 0.810000e6 * (eta ^ 5)) * (ci2 ^ 6) + (0.10909e5 / 0.486000e6 * (eta ^ 4) - 0.1589e4 / 0.3645000e7 * (eta ^ 2) + 0.40303e5 / 0.1215000e7 * (eta ^ 3) - 0.53657e5 / 0.2430000e7 * eta - 0.9637e4 / 0.1458000e7 + 0.8299e4 / 0.2430000e7 * (eta ^ 5)) * (ci2 ^ 4) - 0.931e3 / 0.2430000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (1 + eta) * (ci2 ^ 2) + 0.49e2 / 0.2430000e7 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((3 * g + 2 * h)) - ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * (ci2 ^ 24) + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * (ci2 ^ 22) + (0.6901e4 / 0.72e2 * (eta ^ 4) + 0.601849e6 / 0.1620e4 * (eta ^ 2) + 0.5239507e7 / 0.17820e5 * (eta ^ 3) + 0.487189e6 / 0.2376e4 * eta + 0.1027e4 / 0.88e2 * (eta ^ 5) + 0.487189e6 / 0.11880e5) * (ci2 ^ 20) + (-0.187384e6 / 0.1485e4 * (eta ^ 4) - 0.435434e6 / 0.891e3 * (eta ^ 2) - 0.17398e5 / 0.45e2 * (eta ^ 3) - 0.240452e6 / 0.891e3 * eta - 0.508e3 / 0.33e2 * (eta ^ 5) - 0.240452e6 / 0.4455e4) * (ci2 ^ 18) + (0.809179e6 / 0.3564e4 * eta + 0.630917e6 / 0.5940e4 * (eta ^ 4) + 0.3661667e7 / 0.8910e4 * (eta ^ 2) + 0.779e3 / 0.60e2 * (eta ^ 5) + 0.2895971e7 / 0.8910e4 * (eta ^ 3) + 0.809179e6 / 0.17820e5) * (ci2 ^ 16) + (-0.25031e5 / 0.198e3 * eta - 0.878473e6 / 0.14850e5 * (eta ^ 4) - 0.1019087e7 / 0.4455e4 * (eta ^ 2) - 0.35839e5 / 0.4950e4 * (eta ^ 5) - 0.4028987e7 / 0.22275e5 * (eta ^ 3) - 0.25031e5 / 0.990e3) * (ci2 ^ 14) + (0.1316581e7 / 0.28512e5 * eta + 0.8546953e7 / 0.396000e6 * (eta ^ 4) + 0.148892881e9 / 0.1782000e7 * (eta ^ 2) + 0.626771e6 / 0.237600e6 * (eta ^ 5) + 0.4359427e7 / 0.66000e5 * (eta ^ 3) + 0.1316581e7 / 0.142560e6) * (ci2 ^ 12) + (-0.911113e6 / 0.89100e5 * eta - 0.705151e6 / 0.148500e6 * (eta ^ 4) - 0.4125761e7 / 0.222750e6 * (eta ^ 2) - 0.3260417e7 / 0.222750e6 * (eta ^ 3) - 0.911113e6 / 0.445500e6 - 0.85219e5 / 0.148500e6 * (eta ^ 5)) * (ci2 ^ 10) + (0.13115e5 / 0.14256e5 * eta + 0.12211e5 / 0.30000e5 * (eta ^ 4) + 0.7483963e7 / 0.4455000e7 * (eta ^ 2) + 0.393557e6 / 0.297000e6 * (eta ^ 3) + 0.2623e4 / 0.14256e5 + 0.133093e6 / 0.2970000e7 * (eta ^ 5)) * (ci2 ^ 8) + (0.119831e6 / 0.1485000e7 * (eta ^ 4) + 0.609197e6 / 0.2227500e7 * (eta ^ 2) + 0.96841e5 / 0.445500e6 * (eta ^ 3) + 0.5497e4 / 0.35640e5 * eta + 0.5497e4 / 0.178200e6 + 0.17387e5 / 0.1485000e7 * (eta ^ 5)) * (ci2 ^ 6) + (-0.53711e5 / 0.1856250e7 * (eta ^ 4) - 0.288787e6 / 0.2784375e7 * (eta ^ 2) - 0.229187e6 / 0.2784375e7 * (eta ^ 3) - 0.7169e4 / 0.123750e6 * eta - 0.7169e4 / 0.618750e6 - 0.7291e4 / 0.1856250e7 * (eta ^ 5)) * (ci2 ^ 4) + 0.637e3 / 0.1350000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4) * (ci2 ^ 2) - 0.637e3 / 0.29700000e8 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 + 1) * ((eta - 1) ^ 2) * (ci2 - 1) * (ci2 ^ 2) * cos((5 * g + 2 * h)) + 0.3e1 / 0.11e2 * ((ci2 + 1) ^ 2) * ((0.563e3 / 0.81e2 * (eta ^ 4) - 0.626e3 / 0.27e2 * (eta ^ 2) - 0.1045e4 / 0.81e2 + (eta ^ 5) + 0.806e3 / 0.81e2 * (eta ^ 3) - 0.1045e4 / 0.27e2 * eta) * (ci2 ^ 22) + (-0.6113e4 / 0.162e3 * (eta ^ 4) + 0.1057e4 / 0.9e1 * (eta ^ 2) - 0.4441e4 / 0.81e2 * (eta ^ 3) + 0.10735e5 / 0.54e2 * eta - 0.11e2 / 0.2e1 * (eta ^ 5) + 0.10735e5 / 0.162e3) * (ci2 ^ 20) + (0.98761e5 / 0.1080e4 * (eta ^ 4) - 0.1279183e7 / 0.4860e4 * (eta ^ 2) + 0.218389e6 / 0.1620e4 * (eta ^ 3) - 0.489089e6 / 0.1080e4 * eta + 0.973e3 / 0.72e2 * (eta ^ 5) - 0.489089e6 / 0.3240e4) * (ci2 ^ 18) + (0.1954483e7 / 0.3240e4 * eta - 0.140941e6 / 0.1080e4 * (eta ^ 4) + 0.1671401e7 / 0.4860e4 * (eta ^ 2) - 0.1409e4 / 0.72e2 * (eta ^ 5) - 0.948049e6 / 0.4860e4 * (eta ^ 3) + 0.1954483e7 / 0.9720e4) * (ci2 ^ 16) + (-0.1689737e7 / 0.3240e4 * eta + 0.131567e6 / 0.1080e4 * (eta ^ 4) - 0.282427e6 / 0.972e3 * (eta ^ 2) + 0.6679e4 / 0.360e3 * (eta ^ 5) + 0.896591e6 / 0.4860e4 * (eta ^ 3) - 0.1689737e7 / 0.9720e4) * (ci2 ^ 14) + (0.66313e5 / 0.216e3 * eta - 0.421889e6 / 0.5400e4 * (eta ^ 4) + 0.808399e6 / 0.4860e4 * (eta ^ 2) - 0.65323e5 / 0.5400e4 * (eta ^ 5) - 0.969881e6 / 0.8100e4 * (eta ^ 3) + 0.66313e5 / 0.648e3) * (ci2 ^ 12) + (-0.1626449e7 / 0.12960e5 * eta + 0.11394769e8 / 0.324000e6 * (eta ^ 4) - 0.31919317e8 / 0.486000e6 * (eta ^ 2) + 0.1059053e7 / 0.19440e5 * (eta ^ 3) - 0.1626449e7 / 0.38880e5 + 0.598793e6 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 10) + (0.11540749e8 / 0.324000e6 * eta - 0.3609497e7 / 0.324000e6 * (eta ^ 4) + 0.2888429e7 / 0.162000e6 * (eta ^ 2) - 0.8462431e7 / 0.486000e6 * (eta ^ 3) + 0.11540749e8 / 0.972000e6 - 0.193553e6 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 8) + (0.3959807e7 / 0.1620000e7 * (eta ^ 4) - 0.876589e6 / 0.270000e6 * (eta ^ 2) + 0.9344077e7 / 0.2430000e7 * (eta ^ 3) - 0.2229959e7 / 0.324000e6 * eta - 0.2229959e7 / 0.972000e6 + 0.43483e5 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 6) + (-0.115411e6 / 0.324000e6 * (eta ^ 4) + 0.60767e5 / 0.162000e6 * (eta ^ 2) - 0.10111e5 / 0.18000e5 * (eta ^ 3) + 0.691e3 / 0.800e3 * eta + 0.691e3 / 0.2400e4 - 0.6523e4 / 0.108000e6 * (eta ^ 5)) * (ci2 ^ 4) + (0.28201e5 / 0.900000e6 * (eta ^ 4) - 0.99251e5 / 0.4050000e7 * (eta ^ 2) + 0.597689e6 / 0.12150000e8 * (eta ^ 3) - 0.515489e6 / 0.8100000e7 * eta - 0.515489e6 / 0.24300000e8 + 0.4963e4 / 0.900000e6 * (eta ^ 5)) * (ci2 ^ 2) - 0.637e3 / 0.2700000e7 * (eta - 1) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (eta - 1) * (1 + eta) * ((ci2 - 1) ^ 2) * (ci2 ^ 2) * cos((-2 * h + 3 * g)) - 0.10e2 / 0.11e2 * (ci2 + 1) * ((1 + eta) ^ 2) * (ci2 - 1) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * (ci2 ^ 22) + (0.2897e4 / 0.60e2 * (eta ^ 4) - 0.6478e4 / 0.81e2 * (eta ^ 2) + 0.3634e4 / 0.135e3 * (eta ^ 3) + 0.31333e5 / 0.1620e4 * eta - 0.101e3 / 0.20e2 * (eta ^ 5) - 0.19135e5 / 0.324e3) * (ci2 ^ 20) + (-0.289289e6 / 0.2700e4 * (eta ^ 4) + 0.710999e6 / 0.4050e4 * (eta ^ 2) - 0.79499e5 / 0.1350e4 * (eta ^ 3) - 0.349331e6 / 0.8100e4 * eta + 0.1109e4 / 0.100e3 * (eta ^ 5) + 0.1020109e7 / 0.8100e4) * (ci2 ^ 18) + (0.927671e6 / 0.16200e5 * eta + 0.83527e5 / 0.600e3 * (eta ^ 4) - 0.920611e6 / 0.4050e4 * (eta ^ 2) - 0.8329e4 / 0.600e3 * (eta ^ 5) + 0.19901e5 / 0.270e3 * (eta ^ 3) - 0.2491393e7 / 0.16200e5) * (ci2 ^ 16) + (-0.507946e6 / 0.10125e5 * eta - 0.396409e6 / 0.3375e4 * (eta ^ 4) + 0.1950473e7 / 0.10125e5 * (eta ^ 2) + 0.4087e4 / 0.375e3 * (eta ^ 5) - 0.196633e6 / 0.3375e4 * (eta ^ 3) + 0.1201154e7 / 0.10125e5) * (ci2 ^ 14) + (0.1226303e7 / 0.40500e5 * eta + 0.151679e6 / 0.2250e4 * (eta ^ 4) - 0.4530781e7 / 0.40500e5 * (eta ^ 2) - 0.12493e5 / 0.2250e4 * (eta ^ 5) + 0.136259e6 / 0.4500e4 * (eta ^ 3) - 0.487109e6 / 0.8100e4) * (ci2 ^ 12) + (-0.191131e6 / 0.15000e5 * eta - 0.3614989e7 / 0.135000e6 * (eta ^ 4) + 0.762824e6 / 0.16875e5 * (eta ^ 2) - 0.58696e5 / 0.5625e4 * (eta ^ 3) + 0.302629e6 / 0.15000e5 + 0.49271e5 / 0.27000e5 * (eta ^ 5)) * (ci2 ^ 10) + (0.599147e6 / 0.162000e6 * eta + 0.219949e6 / 0.30000e5 * (eta ^ 4) - 0.5109619e7 / 0.405000e6 * (eta ^ 2) + 0.316063e6 / 0.135000e6 * (eta ^ 3) - 0.3552953e7 / 0.810000e6 - 0.98651e5 / 0.270000e6 * (eta ^ 5)) * (ci2 ^ 8) + (-0.455041e6 / 0.337500e6 * (eta ^ 4) + 0.398011e6 / 0.168750e6 * (eta ^ 2) - 0.10937e5 / 0.33750e5 * (eta ^ 3) - 0.241397e6 / 0.337500e6 * eta + 0.196363e6 / 0.337500e6 + 0.487e3 / 0.13500e5 * (eta ^ 5)) * (ci2 ^ 6) + (0.42469e5 / 0.270000e6 * (eta ^ 4) - 0.560969e6 / 0.2025000e7 * (eta ^ 2) + 0.16357e5 / 0.675000e6 * (eta ^ 3) + 0.348071e6 / 0.4050000e7 * eta - 0.164281e6 / 0.4050000e7 + 0.227e3 / 0.450000e6 * (eta ^ 5)) * (ci2 ^ 4) + (-0.1397e4 / 0.135000e6 * (eta ^ 4) + 0.1516e4 / 0.84375e5 * (eta ^ 2) - 0.16e2 / 0.28125e5 * (eta ^ 3) - 0.3767e4 / 0.675000e6 * eta + 0.553e3 / 0.675000e6 - 0.329e3 / 0.675000e6 * (eta ^ 5)) * (ci2 ^ 2) + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * cos((g - 2 * h)) - 0.21e2 / 0.11e2 * ((-0.397e3 / 0.81e2 * (eta ^ 4) - 0.9502e4 / 0.567e3 * (eta ^ 2) - 0.8605e4 / 0.567e3 * eta + (eta ^ 5) - 0.9122e4 / 0.567e3 * (eta ^ 3) - 0.12925e5 / 0.1701e4) * (ci2 ^ 26) + (0.16637e5 / 0.567e3 * (eta ^ 4) + 0.54541e5 / 0.567e3 * (eta ^ 2) + 0.54151e5 / 0.567e3 * (eta ^ 3) + 0.48242e5 / 0.567e3 * eta - 0.41e2 / 0.7e1 * (eta ^ 5) + 0.73730e5 / 0.1701e4) * (ci2 ^ 24) + (-0.260327e6 / 0.3240e4 * (eta ^ 4) - 0.8443231e7 / 0.34020e5 * (eta ^ 2) + 0.12799e5 / 0.840e3 * (eta ^ 5) - 0.582991e6 / 0.2268e4 * (eta ^ 3) - 0.4826623e7 / 0.22680e5 * eta - 0.7533823e7 / 0.68040e5) * (ci2 ^ 22) + (0.302095e6 / 0.2268e4 * (eta ^ 4) + 0.2155457e7 / 0.5670e4 * (eta ^ 2) + 0.7057849e7 / 0.17010e5 * (eta ^ 3) + 0.131387e6 / 0.420e3 * eta - 0.9733e4 / 0.420e3 * (eta ^ 5) + 0.210547e6 / 0.1260e4) * (ci2 ^ 20) + (-0.422249e6 / 0.2835e4 * (eta ^ 4) - 0.6542903e7 / 0.17010e5 * (eta ^ 2) - 0.1522669e7 / 0.3402e4 * (eta ^ 3) - 0.1698331e7 / 0.5670e4 * eta + 0.479e3 / 0.21e2 * (eta ^ 5) - 0.2815231e7 / 0.17010e5) * (ci2 ^ 18) + (0.2217197e7 / 0.11340e5 * eta + 0.2236291e7 / 0.18900e5 * (eta ^ 4) + 0.2302289e7 / 0.8505e4 * (eta ^ 2) - 0.13651e5 / 0.900e3 * (eta ^ 5) + 0.1607219e7 / 0.4725e4 * (eta ^ 3) + 0.3844901e7 / 0.34020e5) * (ci2 ^ 16) + (-0.40067809e8 / 0.453600e6 * eta - 0.51743569e8 / 0.756000e6 * (eta ^ 4) - 0.92435773e8 / 0.680400e6 * (eta ^ 2) + 0.5201381e7 / 0.756000e6 * (eta ^ 5) - 0.636020543e9 / 0.3402000e7 * (eta ^ 3) - 0.73999969e8 / 0.1360800e7) * (ci2 ^ 14) + (0.3101257e7 / 0.113400e6 * eta + 0.2744519e7 / 0.94500e5 * (eta ^ 4) + 0.3971117e7 / 0.81000e5 * (eta ^ 2) - 0.196523e6 / 0.94500e5 * (eta ^ 5) + 0.127591979e9 / 0.1701000e7 * (eta ^ 3) + 0.1258373e7 / 0.68040e5) * (ci2 ^ 12) + (-0.3495461e7 / 0.630000e6 * eta - 0.10186931e8 / 0.1134000e7 * (eta ^ 4) - 0.15372053e8 / 0.1215000e7 * (eta ^ 2) - 0.186041957e9 / 0.8505000e7 * (eta ^ 3) - 0.2761687e7 / 0.630000e6 + 0.435023e6 / 0.1134000e7 * (eta ^ 5)) * (ci2 ^ 10) + (0.52327e5 / 0.81000e5 * eta + 0.803737e6 / 0.405000e6 * (eta ^ 4) + 0.3243301e7 / 0.1417500e7 * (eta ^ 2) + 0.2764327e7 / 0.607500e6 * (eta ^ 3) + 0.1187233e7 / 0.1701000e7 - 0.16543e5 / 0.567000e6 * (eta ^ 5)) * (ci2 ^ 8) + (-0.533479e6 / 0.1771875e7 * (eta ^ 4) - 0.11841433e8 / 0.42525000e8 * (eta ^ 2) - 0.204709e6 / 0.315000e6 * (eta ^ 3) - 0.288107e6 / 0.14175000e8 * eta - 0.2936267e7 / 0.42525000e8 - 0.2137e4 / 0.590625e6 * (eta ^ 5)) * (ci2 ^ 6) + (0.828557e6 / 0.28350000e8 * (eta ^ 4) + 0.899027e6 / 0.42525000e8 * (eta ^ 2) + 0.14419e5 / 0.243000e6 * (eta ^ 3) - 0.131533e6 / 0.28350000e8 * eta + 0.2383e4 / 0.680400e6 + 0.31343e5 / 0.28350000e8 * (eta ^ 5)) * (ci2 ^ 4) + (-0.89707e5 / 0.56700000e8 * (eta ^ 4) - 0.24271e5 / 0.28350000e8 * (eta ^ 2) - 0.255539e6 / 0.85050000e8 * (eta ^ 3) + 0.433e3 / 0.756000e6 * eta - 0.331e3 / 0.11340000e8 - 0.277e3 / 0.2700000e7 * (eta ^ 5)) * (ci2 ^ 2) + 0.7e1 / 0.2025000e7 * (1 + eta) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * (ci2 + 1) * (eta - 1) * (1 + eta) * (ci2 - 1) * cos((3 * g)) + ((0.815e3 / 0.99e2 * (eta ^ 4) + 0.9478e4 / 0.297e3 * (eta ^ 2) + 0.95e2 / 0.27e2 + (eta ^ 5) + 0.7510e4 / 0.297e3 * (eta ^ 3) + 0.475e3 / 0.27e2 * eta) * (ci2 ^ 22) + (-0.8365e4 / 0.198e3 * (eta ^ 4) - 0.4423e4 / 0.27e2 * (eta ^ 2) - 0.113e3 / 0.22e2 * (eta ^ 5) - 0.38525e5 / 0.297e3 * (eta ^ 3) - 0.53675e5 / 0.594e3 * eta - 0.10735e5 / 0.594e3) * (ci2 ^ 20) + (0.228593e6 / 0.2376e4 * (eta ^ 4) + 0.6645599e7 / 0.17820e5 * (eta ^ 2) + 0.5259007e7 / 0.17820e5 * (eta ^ 3) + 0.489089e6 / 0.2376e4 * eta + 0.1031e4 / 0.88e2 * (eta ^ 5) + 0.489089e6 / 0.11880e5) * (ci2 ^ 18) + (-0.1954483e7 / 0.7128e4 * eta - 0.1523237e7 / 0.11880e5 * (eta ^ 4) - 0.327637e6 / 0.660e3 * (eta ^ 2) - 0.4133e4 / 0.264e3 * (eta ^ 5) - 0.1399403e7 / 0.3564e4 * (eta ^ 3) - 0.1954483e7 / 0.35640e5) * (ci2 ^ 16) + (0.1689737e7 / 0.7128e4 * eta + 0.263779e6 / 0.2376e4 * (eta ^ 4) + 0.7642301e7 / 0.17820e5 * (eta ^ 2) + 0.1633e4 / 0.120e3 * (eta ^ 5) + 0.671413e6 / 0.1980e4 * (eta ^ 3) + 0.1689737e7 / 0.35640e5) * (ci2 ^ 14) + (-0.331565e6 / 0.2376e4 * eta - 0.3892373e7 / 0.59400e5 * (eta ^ 4) - 0.4495187e7 / 0.17820e5 * (eta ^ 2) - 0.159899e6 / 0.19800e5 * (eta ^ 5) - 0.17768447e8 / 0.89100e5 * (eta ^ 3) - 0.66313e5 / 0.2376e4) * (ci2 ^ 12) + (0.147859e6 / 0.2592e4 * eta + 0.3549751e7 / 0.132000e6 * (eta ^ 4) + 0.61196527e8 / 0.594000e6 * (eta ^ 2) + 0.145134029e9 / 0.1782000e7 * (eta ^ 3) + 0.147859e6 / 0.12960e5 + 0.793031e6 / 0.237600e6 * (eta ^ 5)) * (ci2 ^ 10) + (-0.1049159e7 / 0.64800e5 * eta - 0.828641e6 / 0.108000e6 * (eta ^ 4) - 0.10410541e8 / 0.356400e6 * (eta ^ 2) - 0.41153249e8 / 0.1782000e7 * (eta ^ 3) - 0.1049159e7 / 0.324000e6 - 0.1141487e7 / 0.1188000e7 * (eta ^ 5)) * (ci2 ^ 8) + (0.805903e6 / 0.540000e6 * (eta ^ 4) + 0.50224751e8 / 0.8910000e7 * (eta ^ 2) + 0.7943011e7 / 0.1782000e7 * (eta ^ 3) + 0.2229959e7 / 0.712800e6 * eta + 0.2229959e7 / 0.3564000e7 + 0.1122721e7 / 0.5940000e7 * (eta ^ 5)) * (ci2 ^ 6) + (-0.224441e6 / 0.1188000e7 * (eta ^ 4) - 0.83909e5 / 0.118800e6 * (eta ^ 2) - 0.66373e5 / 0.118800e6 * (eta ^ 3) - 0.691e3 / 0.1760e4 * eta - 0.691e3 / 0.8800e4 - 0.28837e5 / 0.1188000e7 * (eta ^ 5)) * (ci2 ^ 4) + (0.418679e6 / 0.29700000e8 * (eta ^ 4) + 0.210383e6 / 0.4050000e7 * (eta ^ 2) + 0.1832293e7 / 0.44550000e8 * (eta ^ 3) + 0.515489e6 / 0.17820000e8 * eta + 0.515489e6 / 0.89100000e8 + 0.54859e5 / 0.29700000e8 * (eta ^ 5)) * (ci2 ^ 2) - 0.637e3 / 0.9900000e7 * (1 + eta) * ((eta ^ 4) + 0.4084e4 / 0.637e3 * (eta ^ 3) + 0.28234e5 / 0.1911e4 * (eta ^ 2) + 0.22748e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ((ci2 + 1) ^ 2) * ((eta - 1) ^ 2) * ((ci2 - 1) ^ 2) * (ci2 ^ 2) * cos((5 * g)) + 0.10e2 / 0.11e2 * ((1 + eta) ^ 2) * cos(g) * ((-0.29e2 / 0.3e1 * (eta ^ 4) + 0.6596e4 / 0.405e3 * (eta ^ 2) + 0.979e3 / 0.81e2 + (eta ^ 5) - 0.724e3 / 0.135e3 * (eta ^ 3) - 0.317e3 / 0.81e2 * eta) * (ci2 ^ 24) + (0.3187e4 / 0.60e2 * (eta ^ 4) - 0.11896e5 / 0.135e3 * (eta ^ 2) - 0.111e3 / 0.20e2 * (eta ^ 5) + 0.148e3 / 0.5e1 * (eta ^ 3) + 0.11501e5 / 0.540e3 * eta - 0.7031e4 / 0.108e3) * (ci2 ^ 22) + (-0.87536e5 / 0.675e3 * (eta ^ 4) + 0.862939e6 / 0.4050e4 * (eta ^ 2) - 0.96439e5 / 0.1350e4 * (eta ^ 3) - 0.211343e6 / 0.4050e4 * eta + 0.336e3 / 0.25e2 * (eta ^ 5) + 0.622417e6 / 0.4050e4) * (ci2 ^ 20) + (0.332821e6 / 0.1800e4 * (eta ^ 4) - 0.244991e6 / 0.810e3 * (eta ^ 2) + 0.133961e6 / 0.1350e4 * (eta ^ 3) + 0.1222871e7 / 0.16200e5 * eta - 0.11209e5 / 0.600e3 * (eta ^ 5) - 0.3388513e7 / 0.16200e5) * (ci2 ^ 18) + (-0.5748613e7 / 0.81000e5 * eta - 0.4590277e7 / 0.27000e5 * (eta ^ 4) + 0.5631311e7 / 0.20250e5 * (eta ^ 2) + 0.16497e5 / 0.1000e4 * (eta ^ 5) - 0.197587e6 / 0.2250e4 * (eta ^ 3) + 0.14709827e8 / 0.81000e5) * (ci2 ^ 16) + (0.1819693e7 / 0.40500e5 * eta + 0.707533e6 / 0.6750e4 * (eta ^ 4) - 0.6966443e7 / 0.40500e5 * (eta ^ 2) - 0.21797e5 / 0.2250e4 * (eta ^ 5) + 0.232789e6 / 0.4500e4 * (eta ^ 3) - 0.34039e5 / 0.324e3) * (ci2 ^ 14) + (-0.7746467e7 / 0.405000e6 * eta - 0.5864209e7 / 0.135000e6 * (eta ^ 4) + 0.14513723e8 / 0.202500e6 * (eta ^ 2) + 0.20887e5 / 0.5400e4 * (eta ^ 5) - 0.1388047e7 / 0.67500e5 * (eta ^ 3) + 0.16624813e8 / 0.405000e6) * (ci2 ^ 12) + (0.169819e6 / 0.32400e5 * eta + 0.1046219e7 / 0.90000e5 * (eta ^ 4) - 0.1564943e7 / 0.81000e5 * (eta ^ 2) + 0.738199e6 / 0.135000e6 * (eta ^ 3) - 0.8696813e7 / 0.810000e6 - 0.96517e5 / 0.90000e5 * (eta ^ 5)) * (ci2 ^ 10) + (-0.1072643e7 / 0.1350000e7 * eta - 0.2340619e7 / 0.1350000e7 * (eta ^ 4) + 0.1968719e7 / 0.675000e6 * (eta ^ 2) - 0.127469e6 / 0.135000e6 * (eta ^ 3) + 0.2458957e7 / 0.1350000e7 + 0.59137e5 / 0.270000e6 * (eta ^ 5)) * (ci2 ^ 8) + (0.6203e4 / 0.150000e6 * (eta ^ 4) - 0.31913e5 / 0.405000e6 * (eta ^ 2) + 0.7633e4 / 0.75000e5 * (eta ^ 3) + 0.71713e5 / 0.4050000e7 * eta - 0.768959e6 / 0.4050000e7 - 0.17023e5 / 0.450000e6 * (eta ^ 5)) * (ci2 ^ 6) + (0.8863e4 / 0.270000e6 * (eta ^ 4) - 0.107573e6 / 0.2025000e7 * (eta ^ 2) - 0.1621e4 / 0.225000e6 * (eta ^ 3) + 0.64601e5 / 0.4050000e7 * eta + 0.9637e4 / 0.810000e6 + 0.323e3 / 0.54000e5 * (eta ^ 5)) * (ci2 ^ 4) - 0.931e3 / 0.1350000e7 * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3) * (eta - 1) * (ci2 ^ 2) + 0.49e2 / 0.1350000e7 * (eta - 1) * ((eta ^ 4) + 0.62e2 / 0.7e1 * (eta ^ 3) + 0.400e3 / 0.49e2 * (eta ^ 2) - 0.694e3 / 0.147e3 * eta - 0.131e3 / 0.147e3)) * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1)) / ((1 + eta) ^ 3) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 5) / a ^ 4 / (eta ^ 8) 0.84375e5 / 0.128e3 * (ci2 + 1) * (-0.27e2 / 0.5e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((eta - 1) ^ 2) * (1 + eta) * ((-0.1828e4 / 0.243e3 * (eta ^ 5) - 0.29564e5 / 0.729e3 * (eta ^ 3) - 0.55640e5 / 0.2187e4 * eta + (eta ^ 6) - 0.23198e5 / 0.729e3 * (eta ^ 4) - 0.25111e5 / 0.729e3 * (eta ^ 2) - 0.19580e5 / 0.2187e4) * (ci2 ^ 18) + (0.2552e4 / 0.81e2 * (eta ^ 5) + 0.124336e6 / 0.729e3 * (eta ^ 3) + 0.232264e6 / 0.2187e4 * eta - 0.38e2 / 0.9e1 * (eta ^ 6) + 0.97444e5 / 0.729e3 * (eta ^ 4) + 0.35038e5 / 0.243e3 * (eta ^ 2) + 0.81880e5 / 0.2187e4) * (ci2 ^ 16) + (-0.365801e6 / 0.1458e4 * (eta ^ 2) - 0.224438e6 / 0.729e3 * (eta ^ 3) - 0.217642e6 / 0.3645e4 * (eta ^ 5) - 0.2002192e7 / 0.10935e5 * eta + 0.389e3 / 0.54e2 * (eta ^ 6) - 0.898601e6 / 0.3645e4 * (eta ^ 4) - 0.714118e6 / 0.10935e5) * (ci2 ^ 14) + (0.951644e6 / 0.3645e4 * (eta ^ 4) + 0.859132e6 / 0.3645e4 * (eta ^ 2) + 0.378926e6 / 0.1215e4 * (eta ^ 3) + 0.615482e6 / 0.3645e4 * eta + 0.48652e5 / 0.729e3 * (eta ^ 5) - 0.172e3 / 0.27e2 * (eta ^ 6) + 0.225092e6 / 0.3645e4) * (ci2 ^ 12) + (0.12353e5 / 0.4050e4 * (eta ^ 6) - 0.3168211e7 / 0.18225e5 * (eta ^ 4) - 0.174989e6 / 0.1350e4 * (eta ^ 2) - 0.4906426e7 / 0.54675e5 * eta - 0.3544816e7 / 0.18225e5 * (eta ^ 3) - 0.32234e5 / 0.675e3 * (eta ^ 5) - 0.1880074e7 / 0.54675e5) * (ci2 ^ 10) + (-0.563e3 / 0.810e3 * (eta ^ 6) + 0.1362853e7 / 0.18225e5 * (eta ^ 4) + 0.1535273e7 / 0.36450e5 * (eta ^ 2) + 0.1492148e7 / 0.54675e5 * eta + 0.1404146e7 / 0.18225e5 * (eta ^ 3) + 0.405506e6 / 0.18225e5 * (eta ^ 5) + 0.624974e6 / 0.54675e5) * (ci2 ^ 8) + (0.23e2 / 0.4500e4 * (eta ^ 6) - 0.3746249e7 / 0.182250e6 * (eta ^ 4) - 0.930667e6 / 0.121500e6 * (eta ^ 2) - 0.1161166e7 / 0.273375e6 * eta - 0.585377e6 / 0.30375e5 * (eta ^ 3) - 0.603637e6 / 0.91125e5 * (eta ^ 5) - 0.594109e6 / 0.273375e6) * (ci2 ^ 6) + (0.979e3 / 0.30375e5 * (eta ^ 6) + 0.313736e6 / 0.91125e5 * (eta ^ 4) + 0.1289e4 / 0.2025e4 * (eta ^ 2) + 0.46732e5 / 0.273375e6 * eta + 0.53122e5 / 0.18225e5 * (eta ^ 3) + 0.36382e5 / 0.30375e5 * (eta ^ 5) + 0.55342e5 / 0.273375e6) * (ci2 ^ 4) + (-0.77e2 / 0.12150e5 * (eta ^ 6) - 0.28709e5 / 0.91125e5 * (eta ^ 4) + 0.13e2 / 0.182250e6 * (eta ^ 2) + 0.9214e4 / 0.273375e6 * eta - 0.21754e5 / 0.91125e5 * (eta ^ 3) - 0.2156e4 / 0.18225e5 * (eta ^ 5) - 0.1004e4 / 0.273375e6) * (ci2 ^ 2) + 0.49e2 / 0.121500e6 * ((eta ^ 5) + (11 * eta ^ 4) + 0.895e3 / 0.49e2 * (eta ^ 3) + 0.53e2 / 0.49e2 * (eta ^ 2) - 0.1028e4 / 0.147e3 * eta - 0.524e3 / 0.441e3) * (1 + eta)) * sin((4 * g + 2 * h)) + 0.22e2 / 0.5e1 * (ci2 + 1) * ((eta - 1) ^ 3) * ((0.106e3 / 0.11e2 * (eta ^ 5) + 0.17726e5 / 0.297e3 * (eta ^ 3) + 0.190e3 / 0.9e1 * eta + (eta ^ 6) + 0.10610e5 / 0.297e3 * (eta ^ 4) + 0.4982e4 / 0.99e2 * (eta ^ 2) + 0.95e2 / 0.27e2) * (ci2 ^ 18) + (-0.1328e4 / 0.33e2 * (eta ^ 5) - 0.74032e5 / 0.297e3 * (eta ^ 3) - 0.8740e4 / 0.99e2 * eta - 0.46e2 / 0.11e2 * (eta ^ 6) - 0.1640e4 / 0.11e2 * (eta ^ 4) - 0.20824e5 / 0.99e2 * (eta ^ 2) - 0.4370e4 / 0.297e3) * (ci2 ^ 16) + (0.2259223e7 / 0.5940e4 * (eta ^ 2) + 0.222949e6 / 0.495e3 * (eta ^ 3) + 0.8013e4 / 0.110e3 * (eta ^ 5) + 0.52703e5 / 0.330e3 * eta + 0.1671e4 / 0.220e3 * (eta ^ 6) + 0.87259e5 / 0.324e3 * (eta ^ 4) + 0.52703e5 / 0.1980e4) * (ci2 ^ 14) + (-0.1228589e7 / 0.4455e4 * (eta ^ 4) - 0.578627e6 / 0.1485e4 * (eta ^ 2) - 0.2054356e7 / 0.4455e4 * (eta ^ 3) - 0.243082e6 / 0.1485e4 * eta - 0.12352e5 / 0.165e3 * (eta ^ 5) - 0.259e3 / 0.33e2 * (eta ^ 6) - 0.121541e6 / 0.4455e4) * (ci2 ^ 12) + (0.10051e5 / 0.1980e4 * (eta ^ 6) + 0.15691297e8 / 0.89100e5 * (eta ^ 4) + 0.7390387e7 / 0.29700e5 * (eta ^ 2) + 0.1553143e7 / 0.14850e5 * eta + 0.6555839e7 / 0.22275e5 * (eta ^ 3) + 0.79283e5 / 0.1650e4 * (eta ^ 5) + 0.1553143e7 / 0.89100e5) * (ci2 ^ 10) + (-0.10541e5 / 0.4950e4 * (eta ^ 6) - 0.1079173e7 / 0.14850e5 * (eta ^ 4) - 0.101627e6 / 0.990e3 * (eta ^ 2) - 0.320549e6 / 0.7425e4 * eta - 0.540574e6 / 0.4455e4 * (eta ^ 3) - 0.499e3 / 0.25e2 * (eta ^ 5) - 0.320549e6 / 0.44550e5) * (ci2 ^ 8) + (0.6263e4 / 0.10800e5 * (eta ^ 6) + 0.34555181e8 / 0.1782000e7 * (eta ^ 4) + 0.16262639e8 / 0.594000e6 * (eta ^ 2) + 0.3422003e7 / 0.297000e6 * eta + 0.14407303e8 / 0.445500e6 * (eta ^ 3) + 0.531617e6 / 0.99000e5 * (eta ^ 5) + 0.3422003e7 / 0.1782000e7) * (ci2 ^ 6) + (-0.14737e5 / 0.148500e6 * (eta ^ 6) - 0.1441669e7 / 0.445500e6 * (eta ^ 4) - 0.677959e6 / 0.148500e6 * (eta ^ 2) - 0.142771e6 / 0.74250e5 * eta - 0.600143e6 / 0.111375e6 * (eta ^ 3) - 0.4481e4 / 0.4950e4 * (eta ^ 5) - 0.142771e6 / 0.445500e6) * (ci2 ^ 4) + (0.4837e4 / 0.495000e6 * (eta ^ 6) + 0.1374299e7 / 0.4455000e7 * (eta ^ 4) + 0.58651e5 / 0.135000e6 * (eta ^ 2) + 0.15109e5 / 0.82500e5 * eta + 0.63413e5 / 0.123750e6 * (eta ^ 3) + 0.7213e4 / 0.82500e5 * (eta ^ 5) + 0.15109e5 / 0.495000e6) * (ci2 ^ 2) - 0.637e3 / 0.1485000e7 * (1 + eta) * ((eta ^ 5) + 0.4913e4 / 0.637e3 * (eta ^ 4) + 0.42950e5 / 0.1911e4 * (eta ^ 3) + 0.52454e5 / 0.1911e4 * (eta ^ 2) + 0.28435e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * (ci2 ^ 2) * (ci2 - 1) * sin((6 * g + 2 * h)) + (1 + eta) * (0.16e2 / 0.27e2 * (ci2 + 1) * (((eta ^ 5) - 0.151e3 / 0.5e1 * (eta ^ 3) + 0.209e3 / 0.4e1 * eta - (2 * eta ^ 4) - 0.159e3 / 0.40e2 * (eta ^ 2) + 0.209e3 / 0.8e1) * (ci2 ^ 18) + (-0.9e1 / 0.2e1 * (eta ^ 5) + 0.1309e4 / 0.10e2 * (eta ^ 3) - 0.437e3 / 0.2e1 * eta + 0.43e2 / 0.5e1 * (eta ^ 4) + 0.399e3 / 0.20e2 * (eta ^ 2) - 0.437e3 / 0.4e1) * (ci2 ^ 16) + (-0.17183e5 / 0.400e3 * (eta ^ 2) - 0.19727e5 / 0.80e2 * (eta ^ 3) + 0.441e3 / 0.50e2 * (eta ^ 5) + 0.158109e6 / 0.400e3 * eta - 0.12947e5 / 0.800e3 * (eta ^ 4) + 0.158109e6 / 0.800e3) * (ci2 ^ 14) + (0.20983e5 / 0.1200e4 * (eta ^ 4) + 0.20887e5 / 0.400e3 * (eta ^ 2) + 0.158803e6 / 0.600e3 * (eta ^ 3) - 0.121541e6 / 0.300e3 * eta - 0.987e3 / 0.100e3 * (eta ^ 5) - 0.121541e6 / 0.600e3) * (ci2 ^ 12) + (-0.143623e6 / 0.12000e5 * (eta ^ 4) - 0.19793e5 / 0.500e3 * (eta ^ 2) + 0.1553143e7 / 0.6000e4 * eta - 0.42799e5 / 0.240e3 * (eta ^ 3) + 0.3473e4 / 0.500e3 * (eta ^ 5) + 0.1553143e7 / 0.12000e5) * (ci2 ^ 10) + (0.16207e5 / 0.3000e4 * (eta ^ 4) + 0.38931e5 / 0.2000e4 * (eta ^ 2) - 0.320549e6 / 0.3000e4 * eta + 0.117451e6 / 0.1500e4 * (eta ^ 3) - 0.319e3 / 0.100e3 * (eta ^ 5) - 0.320549e6 / 0.6000e4) * (ci2 ^ 8) + (-0.388817e6 / 0.240000e6 * (eta ^ 4) - 0.49841e5 / 0.8000e4 * (eta ^ 2) + 0.3422003e7 / 0.120000e6 * eta - 0.2696273e7 / 0.120000e6 * (eta ^ 3) + 0.479e3 / 0.500e3 * (eta ^ 5) + 0.3422003e7 / 0.240000e6) * (ci2 ^ 6) + (0.37793e5 / 0.120000e6 * (eta ^ 4) + 0.50249e5 / 0.40000e5 * (eta ^ 2) - 0.142771e6 / 0.30000e5 * eta + 0.245009e6 / 0.60000e5 * (eta ^ 3) - 0.91e2 / 0.500e3 * (eta ^ 5) - 0.142771e6 / 0.60000e5) * (ci2 ^ 4) + (-0.457e3 / 0.12500e5 * (eta ^ 4) - 0.29057e5 / 0.200000e6 * (eta ^ 2) + 0.45327e5 / 0.100000e6 * eta - 0.1342e4 / 0.3125e4 * (eta ^ 3) + 0.249e3 / 0.12500e5 * (eta ^ 5) + 0.45327e5 / 0.200000e6) * (ci2 ^ 2) - 0.3e1 / 0.3125e4 * ((eta ^ 4) - 0.599e3 / 0.576e3 * (eta ^ 3) - 0.1405e4 / 0.64e2 * (eta ^ 2) - 0.5687e4 / 0.192e3 * eta - 0.5687e4 / 0.576e3) * (eta - 1)) * (eta - 1) * (1 + eta) * (ci2 ^ 2) * (ci2 - 1) * sin((2 * g - 2 * h)) - 0.2e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (((eta ^ 6) - 0.3202e4 / 0.135e3 * (eta ^ 4) + 0.15673e5 / 0.405e3 * (eta ^ 2) + 0.3296e4 / 0.81e2 * eta + 0.18866e5 / 0.405e3 * (eta ^ 3) + 0.3916e4 / 0.81e2 - 0.142e3 / 0.9e1 * (eta ^ 5)) * (ci2 ^ 18) + (-0.22e2 / 0.5e1 * (eta ^ 6) + 0.13808e5 / 0.135e3 * (eta ^ 4) - 0.66194e5 / 0.405e3 * (eta ^ 2) - 0.68504e5 / 0.405e3 * eta - 0.15788e5 / 0.81e2 * (eta ^ 3) - 0.16376e5 / 0.81e2 + 0.3044e4 / 0.45e2 * (eta ^ 5)) * (ci2 ^ 16) + (0.399e3 / 0.50e2 * (eta ^ 6) - 0.25229e5 / 0.135e3 * (eta ^ 4) + 0.1223983e7 / 0.4050e4 * (eta ^ 2) + 0.573956e6 / 0.2025e4 * eta + 0.747187e6 / 0.2025e4 * (eta ^ 3) + 0.714118e6 / 0.2025e4 - 0.17159e5 / 0.135e3 * (eta ^ 5)) * (ci2 ^ 14) + (-0.578e3 / 0.75e2 * (eta ^ 6) + 0.42569e5 / 0.225e3 * (eta ^ 4) - 0.24019e5 / 0.75e2 * (eta ^ 2) - 0.225092e6 / 0.675e3 - 0.55624e5 / 0.135e3 * (eta ^ 3) - 0.165298e6 / 0.675e3 * eta + 0.30832e5 / 0.225e3 * (eta ^ 5)) * (ci2 ^ 12) + (0.1901e4 / 0.450e3 * (eta ^ 6) - 0.26212e5 / 0.225e3 * (eta ^ 4) + 0.4318363e7 / 0.20250e5 * (eta ^ 2) + 0.1880074e7 / 0.10125e5 + 0.1146278e7 / 0.10125e5 * eta + 0.596789e6 / 0.2025e4 * (eta ^ 3) - 0.314033e6 / 0.3375e4 * (eta ^ 5)) * (ci2 ^ 10) + (-0.1860623e7 / 0.20250e5 * (eta ^ 2) - 0.2819e4 / 0.2250e4 * (eta ^ 6) + 0.152191e6 / 0.3375e4 * (eta ^ 4) - 0.624974e6 / 0.10125e5 - 0.9688e4 / 0.405e3 * eta - 0.1390871e7 / 0.10125e5 * (eta ^ 3) + 0.46189e5 / 0.1125e4 * (eta ^ 5)) * (ci2 ^ 8) + (-0.369571e6 / 0.33750e5 * (eta ^ 4) + 0.5147399e7 / 0.202500e6 * (eta ^ 2) + 0.1861e4 / 0.13500e5 * (eta ^ 6) + 0.594109e6 / 0.50625e5 - 0.27052e5 / 0.50625e5 * eta + 0.4147103e7 / 0.101250e6 * (eta ^ 3) - 0.79051e5 / 0.6750e4 * (eta ^ 5)) * (ci2 ^ 6) + (0.398e3 / 0.16875e5 * (eta ^ 6) + 0.2167e4 / 0.1350e4 * (eta ^ 4) - 0.438139e6 / 0.101250e6 * (eta ^ 2) - 0.55342e5 / 0.50625e5 + 0.63952e5 / 0.50625e5 * eta - 0.376117e6 / 0.50625e5 * (eta ^ 3) + 0.35018e5 / 0.16875e5 * (eta ^ 5)) * (ci2 ^ 4) + (-0.287e3 / 0.33750e5 * (eta ^ 6) - 0.1433e4 / 0.11250e5 * (eta ^ 4) + 0.20722e5 / 0.50625e5 * (eta ^ 2) + 0.1004e4 / 0.50625e5 - 0.11222e5 / 0.50625e5 * eta + 0.37376e5 / 0.50625e5 * (eta ^ 3) - 0.3497e4 / 0.16875e5 * (eta ^ 5)) * (ci2 ^ 2) + 0.49e2 / 0.67500e5 * ((eta ^ 5) + 0.79e2 / 0.7e1 * (eta ^ 4) - 0.285e3 / 0.49e2 * (eta ^ 3) - 0.5335e4 / 0.147e3 * (eta ^ 2) + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3) * (1 + eta)) * (eta - 1) * (1 + eta) * sin((2 * g)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((1 + eta) ^ 2) * ((-(16 * eta ^ 5) + 0.4384e4 / 0.81e2 * (eta ^ 3) + (56 * eta) + (eta ^ 6) + 0.1162e4 / 0.135e3 * (eta ^ 4) - 0.303e3 / 0.5e1 * (eta ^ 2) - 0.3916e4 / 0.81e2) * (ci2 ^ 18) + (0.208e3 / 0.3e1 * (eta ^ 5) - 0.18632e5 / 0.81e2 * (eta ^ 3) - 0.1176e4 / 0.5e1 * eta - 0.22e2 / 0.5e1 * (eta ^ 6) - 0.332e3 / 0.9e1 * (eta ^ 4) + 0.3838e4 / 0.15e2 * (eta ^ 2) + 0.16376e5 / 0.81e2) * (ci2 ^ 16) + (-0.217753e6 / 0.450e3 * (eta ^ 2) + 0.173348e6 / 0.405e3 * (eta ^ 3) - 0.29408e5 / 0.225e3 * (eta ^ 5) + 0.6328e4 / 0.15e2 * eta + 0.399e3 / 0.50e2 * (eta ^ 6) + 0.49781e5 / 0.675e3 * (eta ^ 4) - 0.714118e6 / 0.2025e4) * (ci2 ^ 14) + (-0.59998e5 / 0.675e3 * (eta ^ 4) + 0.120344e6 / 0.225e3 * (eta ^ 2) - 0.20522e5 / 0.45e2 * (eta ^ 3) - 0.31654e5 / 0.75e2 * eta + 0.31556e5 / 0.225e3 * (eta ^ 5) - 0.578e3 / 0.75e2 * (eta ^ 6) + 0.225092e6 / 0.675e3) * (ci2 ^ 12) + (0.1901e4 / 0.450e3 * (eta ^ 6) + 0.77977e5 / 0.1125e4 * (eta ^ 4) - 0.169403e6 / 0.450e3 * (eta ^ 2) + 0.6454e4 / 0.25e2 * eta + 0.617426e6 / 0.2025e4 * (eta ^ 3) - 0.4232e4 / 0.45e2 * (eta ^ 5) - 0.1880074e7 / 0.10125e5) * (ci2 ^ 10) + (-0.2819e4 / 0.2250e4 * (eta ^ 6) - 0.23837e5 / 0.675e3 * (eta ^ 4) + 0.77561e5 / 0.450e3 * (eta ^ 2) - 0.37324e5 / 0.375e3 * eta - 0.266608e6 / 0.2025e4 * (eta ^ 3) + 0.45776e5 / 0.1125e4 * (eta ^ 5) + 0.624974e6 / 0.10125e5) * (ci2 ^ 8) + (0.1861e4 / 0.13500e5 * (eta ^ 6) + 0.14413e5 / 0.1250e4 * (eta ^ 4) - 0.379123e6 / 0.7500e4 * (eta ^ 2) + 0.9002e4 / 0.375e3 * eta + 0.368582e6 / 0.10125e5 * (eta ^ 3) - 0.7068e4 / 0.625e3 * (eta ^ 5) - 0.594109e6 / 0.50625e5) * (ci2 ^ 6) + (0.398e3 / 0.16875e5 * (eta ^ 6) - 0.12977e5 / 0.5625e4 * (eta ^ 4) + 0.50869e5 / 0.5625e4 * (eta ^ 2) - 0.2156e4 / 0.625e3 * eta - 0.12478e5 / 0.2025e4 * (eta ^ 3) + 0.10906e5 / 0.5625e4 * (eta ^ 5) + 0.55342e5 / 0.50625e5) * (ci2 ^ 4) + (-0.287e3 / 0.33750e5 * (eta ^ 6) + 0.4348e4 / 0.16875e5 * (eta ^ 4) - 0.1999e4 / 0.2250e4 * (eta ^ 2) + 0.98e2 / 0.375e3 * eta + 0.5812e4 / 0.10125e5 * (eta ^ 3) - 0.1042e4 / 0.5625e4 * (eta ^ 5) - 0.1004e4 / 0.50625e5) * (ci2 ^ 2) + 0.49e2 / 0.67500e5 * (eta - 1) * ((eta ^ 5) + 0.79e2 / 0.7e1 * (eta ^ 4) - 0.285e3 / 0.49e2 * (eta ^ 3) - 0.5335e4 / 0.147e3 * (eta ^ 2) + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3)) * sin((2 * h)) - (ci2 + 1) * (((eta ^ 6) + (10 * eta ^ 4) + 0.22259e5 / 0.27e2 * (eta ^ 2) + 0.16720e5 / 0.27e2 * eta + 0.3412e4 / 0.9e1 * (eta ^ 3) + 0.4180e4 / 0.27e2 - 0.212e3 / 0.27e2 * (eta ^ 5)) * (ci2 ^ 18) + (-(2 * eta ^ 6) - 0.92e2 / 0.27e2 * (eta ^ 4) - 0.92758e5 / 0.27e2 * (eta ^ 2) - 0.69920e5 / 0.27e2 * eta - 0.4648e4 / 0.3e1 * (eta ^ 3) - 0.17480e5 / 0.27e2 + 0.1304e4 / 0.27e2 * (eta ^ 5)) * (ci2 ^ 16) + (-0.19e2 / 0.20e2 * (eta ^ 6) - 0.19897e5 / 0.270e3 * (eta ^ 4) + 0.123813e6 / 0.20e2 * (eta ^ 2) + 0.210812e6 / 0.45e2 * eta + 0.40939e5 / 0.15e2 * (eta ^ 3) + 0.52703e5 / 0.45e2 - 0.1801e4 / 0.15e2 * (eta ^ 5)) * (ci2 ^ 14) + (0.98e2 / 0.15e2 * (eta ^ 6) + 0.13888e5 / 0.81e2 * (eta ^ 4) - 0.2558314e7 / 0.405e3 * (eta ^ 2) - 0.486164e6 / 0.405e3 - 0.365912e6 / 0.135e3 * (eta ^ 3) - 0.1944656e7 / 0.405e3 * eta + 0.4400e4 / 0.27e2 * (eta ^ 5)) * (ci2 ^ 12) + (-0.7679e4 / 0.900e3 * (eta ^ 6) - 0.741431e6 / 0.4050e4 * (eta ^ 4) + 0.32520257e8 / 0.8100e4 * (eta ^ 2) + 0.1553143e7 / 0.2025e4 + 0.6212572e7 / 0.2025e4 * eta + 0.1124599e7 / 0.675e3 * (eta ^ 3) - 0.91253e5 / 0.675e3 * (eta ^ 5)) * (ci2 ^ 10) + (-0.6669001e7 / 0.4050e4 * (eta ^ 2) + 0.523e3 / 0.90e2 * (eta ^ 6) + 0.45719e5 / 0.405e3 * (eta ^ 4) - 0.641098e6 / 0.2025e4 - 0.2564392e7 / 0.2025e4 * eta - 0.441934e6 / 0.675e3 * (eta ^ 3) + 0.16166e5 / 0.225e3 * (eta ^ 5)) * (ci2 ^ 8) + (-0.3455431e7 / 0.81000e5 * (eta ^ 4) + 0.70631353e8 / 0.162000e6 * (eta ^ 2) - 0.127301e6 / 0.54000e5 * (eta ^ 6) + 0.3422003e7 / 0.40500e5 + 0.3422003e7 / 0.10125e5 * eta + 0.2211071e7 / 0.13500e5 * (eta ^ 3) - 0.333157e6 / 0.13500e5 * (eta ^ 5)) * (ci2 ^ 6) + (0.3893e4 / 0.6750e4 * (eta ^ 6) + 0.19826e5 / 0.2025e4 * (eta ^ 4) - 0.291761e6 / 0.4050e4 * (eta ^ 2) - 0.142771e6 / 0.10125e5 - 0.571084e6 / 0.10125e5 * eta - 0.16898e5 / 0.675e3 * (eta ^ 3) + 0.1198e4 / 0.225e3 * (eta ^ 5)) * (ci2 ^ 4) + (-0.3563e4 / 0.45000e5 * (eta ^ 6) - 0.84869e5 / 0.67500e5 * (eta ^ 4) + 0.304973e6 / 0.45000e5 * (eta ^ 2) + 0.15109e5 / 0.11250e5 + 0.30218e5 / 0.5625e4 * eta + 0.23753e5 / 0.11250e5 * (eta ^ 3) - 0.2473e4 / 0.3750e4 * (eta ^ 5)) * (ci2 ^ 2) + 0.14071e5 / 0.202500e6 * (eta ^ 4) + 0.1213e4 / 0.33750e5 * (eta ^ 5) - 0.2519e4 / 0.33750e5 * (eta ^ 3) + 0.637e3 / 0.135000e6 * (eta ^ 6) - 0.5687e4 / 0.101250e6 - 0.11374e5 / 0.50625e5 * eta - 0.113137e6 / 0.405000e6 * (eta ^ 2)) * ((eta - 1) ^ 2) * sin((4 * g)) * (ci2 ^ 2) * (ci2 - 1) / 0.5e1)) * R__e ^ 4 * J ^ 2 * (ci2 - 1) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) / ((1 + eta) ^ 3) / a ^ 4 / (eta ^ 10) -0.84375e5 / 0.128e3 * (-0.27e2 / 0.5e1 * ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((eta - 1) ^ 2) * (1 + eta) * ((-0.1828e4 / 0.243e3 * (eta ^ 5) - 0.29564e5 / 0.729e3 * (eta ^ 3) - 0.55640e5 / 0.2187e4 * eta + (eta ^ 6) - 0.23198e5 / 0.729e3 * (eta ^ 4) - 0.25111e5 / 0.729e3 * (eta ^ 2) - 0.19580e5 / 0.2187e4) * (ci2 ^ 18) + (0.2552e4 / 0.81e2 * (eta ^ 5) + 0.124336e6 / 0.729e3 * (eta ^ 3) + 0.232264e6 / 0.2187e4 * eta - 0.38e2 / 0.9e1 * (eta ^ 6) + 0.97444e5 / 0.729e3 * (eta ^ 4) + 0.35038e5 / 0.243e3 * (eta ^ 2) + 0.81880e5 / 0.2187e4) * (ci2 ^ 16) + (-0.365801e6 / 0.1458e4 * (eta ^ 2) - 0.224438e6 / 0.729e3 * (eta ^ 3) - 0.217642e6 / 0.3645e4 * (eta ^ 5) - 0.2002192e7 / 0.10935e5 * eta + 0.389e3 / 0.54e2 * (eta ^ 6) - 0.898601e6 / 0.3645e4 * (eta ^ 4) - 0.714118e6 / 0.10935e5) * (ci2 ^ 14) + (0.951644e6 / 0.3645e4 * (eta ^ 4) + 0.859132e6 / 0.3645e4 * (eta ^ 2) + 0.378926e6 / 0.1215e4 * (eta ^ 3) + 0.615482e6 / 0.3645e4 * eta + 0.48652e5 / 0.729e3 * (eta ^ 5) - 0.172e3 / 0.27e2 * (eta ^ 6) + 0.225092e6 / 0.3645e4) * (ci2 ^ 12) + (0.12353e5 / 0.4050e4 * (eta ^ 6) - 0.3168211e7 / 0.18225e5 * (eta ^ 4) - 0.174989e6 / 0.1350e4 * (eta ^ 2) - 0.4906426e7 / 0.54675e5 * eta - 0.3544816e7 / 0.18225e5 * (eta ^ 3) - 0.32234e5 / 0.675e3 * (eta ^ 5) - 0.1880074e7 / 0.54675e5) * (ci2 ^ 10) + (-0.563e3 / 0.810e3 * (eta ^ 6) + 0.1362853e7 / 0.18225e5 * (eta ^ 4) + 0.1535273e7 / 0.36450e5 * (eta ^ 2) + 0.1492148e7 / 0.54675e5 * eta + 0.1404146e7 / 0.18225e5 * (eta ^ 3) + 0.405506e6 / 0.18225e5 * (eta ^ 5) + 0.624974e6 / 0.54675e5) * (ci2 ^ 8) + (0.23e2 / 0.4500e4 * (eta ^ 6) - 0.3746249e7 / 0.182250e6 * (eta ^ 4) - 0.930667e6 / 0.121500e6 * (eta ^ 2) - 0.1161166e7 / 0.273375e6 * eta - 0.585377e6 / 0.30375e5 * (eta ^ 3) - 0.603637e6 / 0.91125e5 * (eta ^ 5) - 0.594109e6 / 0.273375e6) * (ci2 ^ 6) + (0.979e3 / 0.30375e5 * (eta ^ 6) + 0.313736e6 / 0.91125e5 * (eta ^ 4) + 0.1289e4 / 0.2025e4 * (eta ^ 2) + 0.46732e5 / 0.273375e6 * eta + 0.53122e5 / 0.18225e5 * (eta ^ 3) + 0.36382e5 / 0.30375e5 * (eta ^ 5) + 0.55342e5 / 0.273375e6) * (ci2 ^ 4) + (-0.77e2 / 0.12150e5 * (eta ^ 6) - 0.28709e5 / 0.91125e5 * (eta ^ 4) + 0.13e2 / 0.182250e6 * (eta ^ 2) + 0.9214e4 / 0.273375e6 * eta - 0.21754e5 / 0.91125e5 * (eta ^ 3) - 0.2156e4 / 0.18225e5 * (eta ^ 5) - 0.1004e4 / 0.273375e6) * (ci2 ^ 2) + 0.49e2 / 0.121500e6 * ((eta ^ 5) + (11 * eta ^ 4) + 0.895e3 / 0.49e2 * (eta ^ 3) + 0.53e2 / 0.49e2 * (eta ^ 2) - 0.1028e4 / 0.147e3 * eta - 0.524e3 / 0.441e3) * (1 + eta)) * cos((4 * g + 2 * h)) + 0.22e2 / 0.5e1 * ((0.106e3 / 0.11e2 * (eta ^ 5) + 0.17726e5 / 0.297e3 * (eta ^ 3) + 0.190e3 / 0.9e1 * eta + (eta ^ 6) + 0.10610e5 / 0.297e3 * (eta ^ 4) + 0.4982e4 / 0.99e2 * (eta ^ 2) + 0.95e2 / 0.27e2) * (ci2 ^ 18) + (-0.1328e4 / 0.33e2 * (eta ^ 5) - 0.74032e5 / 0.297e3 * (eta ^ 3) - 0.8740e4 / 0.99e2 * eta - 0.46e2 / 0.11e2 * (eta ^ 6) - 0.1640e4 / 0.11e2 * (eta ^ 4) - 0.20824e5 / 0.99e2 * (eta ^ 2) - 0.4370e4 / 0.297e3) * (ci2 ^ 16) + (0.2259223e7 / 0.5940e4 * (eta ^ 2) + 0.222949e6 / 0.495e3 * (eta ^ 3) + 0.8013e4 / 0.110e3 * (eta ^ 5) + 0.52703e5 / 0.330e3 * eta + 0.1671e4 / 0.220e3 * (eta ^ 6) + 0.87259e5 / 0.324e3 * (eta ^ 4) + 0.52703e5 / 0.1980e4) * (ci2 ^ 14) + (-0.1228589e7 / 0.4455e4 * (eta ^ 4) - 0.578627e6 / 0.1485e4 * (eta ^ 2) - 0.2054356e7 / 0.4455e4 * (eta ^ 3) - 0.243082e6 / 0.1485e4 * eta - 0.12352e5 / 0.165e3 * (eta ^ 5) - 0.259e3 / 0.33e2 * (eta ^ 6) - 0.121541e6 / 0.4455e4) * (ci2 ^ 12) + (0.10051e5 / 0.1980e4 * (eta ^ 6) + 0.15691297e8 / 0.89100e5 * (eta ^ 4) + 0.7390387e7 / 0.29700e5 * (eta ^ 2) + 0.1553143e7 / 0.14850e5 * eta + 0.6555839e7 / 0.22275e5 * (eta ^ 3) + 0.79283e5 / 0.1650e4 * (eta ^ 5) + 0.1553143e7 / 0.89100e5) * (ci2 ^ 10) + (-0.10541e5 / 0.4950e4 * (eta ^ 6) - 0.1079173e7 / 0.14850e5 * (eta ^ 4) - 0.101627e6 / 0.990e3 * (eta ^ 2) - 0.320549e6 / 0.7425e4 * eta - 0.540574e6 / 0.4455e4 * (eta ^ 3) - 0.499e3 / 0.25e2 * (eta ^ 5) - 0.320549e6 / 0.44550e5) * (ci2 ^ 8) + (0.6263e4 / 0.10800e5 * (eta ^ 6) + 0.34555181e8 / 0.1782000e7 * (eta ^ 4) + 0.16262639e8 / 0.594000e6 * (eta ^ 2) + 0.3422003e7 / 0.297000e6 * eta + 0.14407303e8 / 0.445500e6 * (eta ^ 3) + 0.531617e6 / 0.99000e5 * (eta ^ 5) + 0.3422003e7 / 0.1782000e7) * (ci2 ^ 6) + (-0.14737e5 / 0.148500e6 * (eta ^ 6) - 0.1441669e7 / 0.445500e6 * (eta ^ 4) - 0.677959e6 / 0.148500e6 * (eta ^ 2) - 0.142771e6 / 0.74250e5 * eta - 0.600143e6 / 0.111375e6 * (eta ^ 3) - 0.4481e4 / 0.4950e4 * (eta ^ 5) - 0.142771e6 / 0.445500e6) * (ci2 ^ 4) + (0.4837e4 / 0.495000e6 * (eta ^ 6) + 0.1374299e7 / 0.4455000e7 * (eta ^ 4) + 0.58651e5 / 0.135000e6 * (eta ^ 2) + 0.15109e5 / 0.82500e5 * eta + 0.63413e5 / 0.123750e6 * (eta ^ 3) + 0.7213e4 / 0.82500e5 * (eta ^ 5) + 0.15109e5 / 0.495000e6) * (ci2 ^ 2) - 0.637e3 / 0.1485000e7 * (1 + eta) * ((eta ^ 5) + 0.4913e4 / 0.637e3 * (eta ^ 4) + 0.42950e5 / 0.1911e4 * (eta ^ 3) + 0.52454e5 / 0.1911e4 * (eta ^ 2) + 0.28435e5 / 0.1911e4 * eta + 0.5687e4 / 0.1911e4)) * ((eta - 1) ^ 3) * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * cos((6 * g + 2 * h)) + (-0.16e2 / 0.27e2 * (((eta ^ 5) - 0.151e3 / 0.5e1 * (eta ^ 3) + 0.209e3 / 0.4e1 * eta - (2 * eta ^ 4) - 0.159e3 / 0.40e2 * (eta ^ 2) + 0.209e3 / 0.8e1) * (ci2 ^ 18) + (-0.9e1 / 0.2e1 * (eta ^ 5) + 0.1309e4 / 0.10e2 * (eta ^ 3) - 0.437e3 / 0.2e1 * eta + 0.43e2 / 0.5e1 * (eta ^ 4) + 0.399e3 / 0.20e2 * (eta ^ 2) - 0.437e3 / 0.4e1) * (ci2 ^ 16) + (-0.17183e5 / 0.400e3 * (eta ^ 2) - 0.19727e5 / 0.80e2 * (eta ^ 3) + 0.441e3 / 0.50e2 * (eta ^ 5) + 0.158109e6 / 0.400e3 * eta - 0.12947e5 / 0.800e3 * (eta ^ 4) + 0.158109e6 / 0.800e3) * (ci2 ^ 14) + (0.20983e5 / 0.1200e4 * (eta ^ 4) + 0.20887e5 / 0.400e3 * (eta ^ 2) + 0.158803e6 / 0.600e3 * (eta ^ 3) - 0.121541e6 / 0.300e3 * eta - 0.987e3 / 0.100e3 * (eta ^ 5) - 0.121541e6 / 0.600e3) * (ci2 ^ 12) + (-0.143623e6 / 0.12000e5 * (eta ^ 4) - 0.19793e5 / 0.500e3 * (eta ^ 2) + 0.1553143e7 / 0.6000e4 * eta - 0.42799e5 / 0.240e3 * (eta ^ 3) + 0.3473e4 / 0.500e3 * (eta ^ 5) + 0.1553143e7 / 0.12000e5) * (ci2 ^ 10) + (0.16207e5 / 0.3000e4 * (eta ^ 4) + 0.38931e5 / 0.2000e4 * (eta ^ 2) - 0.320549e6 / 0.3000e4 * eta + 0.117451e6 / 0.1500e4 * (eta ^ 3) - 0.319e3 / 0.100e3 * (eta ^ 5) - 0.320549e6 / 0.6000e4) * (ci2 ^ 8) + (-0.388817e6 / 0.240000e6 * (eta ^ 4) - 0.49841e5 / 0.8000e4 * (eta ^ 2) + 0.3422003e7 / 0.120000e6 * eta - 0.2696273e7 / 0.120000e6 * (eta ^ 3) + 0.479e3 / 0.500e3 * (eta ^ 5) + 0.3422003e7 / 0.240000e6) * (ci2 ^ 6) + (0.37793e5 / 0.120000e6 * (eta ^ 4) + 0.50249e5 / 0.40000e5 * (eta ^ 2) - 0.142771e6 / 0.30000e5 * eta + 0.245009e6 / 0.60000e5 * (eta ^ 3) - 0.91e2 / 0.500e3 * (eta ^ 5) - 0.142771e6 / 0.60000e5) * (ci2 ^ 4) + (-0.457e3 / 0.12500e5 * (eta ^ 4) - 0.29057e5 / 0.200000e6 * (eta ^ 2) + 0.45327e5 / 0.100000e6 * eta - 0.1342e4 / 0.3125e4 * (eta ^ 3) + 0.249e3 / 0.12500e5 * (eta ^ 5) + 0.45327e5 / 0.200000e6) * (ci2 ^ 2) - 0.3e1 / 0.3125e4 * ((eta ^ 4) - 0.599e3 / 0.576e3 * (eta ^ 3) - 0.1405e4 / 0.64e2 * (eta ^ 2) - 0.5687e4 / 0.192e3 * eta - 0.5687e4 / 0.576e3) * (eta - 1)) * (eta - 1) * (1 + eta) * (ci2 + 1) * (ci2 ^ 2) * (ci2 - 1) * cos((2 * g - 2 * h)) + ((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * ((1 + eta) ^ 2) * ((-(16 * eta ^ 5) + 0.4384e4 / 0.81e2 * (eta ^ 3) + (56 * eta) + (eta ^ 6) + 0.1162e4 / 0.135e3 * (eta ^ 4) - 0.303e3 / 0.5e1 * (eta ^ 2) - 0.3916e4 / 0.81e2) * (ci2 ^ 18) + (0.208e3 / 0.3e1 * (eta ^ 5) - 0.18632e5 / 0.81e2 * (eta ^ 3) - 0.1176e4 / 0.5e1 * eta - 0.22e2 / 0.5e1 * (eta ^ 6) - 0.332e3 / 0.9e1 * (eta ^ 4) + 0.3838e4 / 0.15e2 * (eta ^ 2) + 0.16376e5 / 0.81e2) * (ci2 ^ 16) + (-0.217753e6 / 0.450e3 * (eta ^ 2) + 0.173348e6 / 0.405e3 * (eta ^ 3) - 0.29408e5 / 0.225e3 * (eta ^ 5) + 0.6328e4 / 0.15e2 * eta + 0.399e3 / 0.50e2 * (eta ^ 6) + 0.49781e5 / 0.675e3 * (eta ^ 4) - 0.714118e6 / 0.2025e4) * (ci2 ^ 14) + (-0.59998e5 / 0.675e3 * (eta ^ 4) + 0.120344e6 / 0.225e3 * (eta ^ 2) - 0.20522e5 / 0.45e2 * (eta ^ 3) - 0.31654e5 / 0.75e2 * eta + 0.31556e5 / 0.225e3 * (eta ^ 5) - 0.578e3 / 0.75e2 * (eta ^ 6) + 0.225092e6 / 0.675e3) * (ci2 ^ 12) + (0.1901e4 / 0.450e3 * (eta ^ 6) + 0.77977e5 / 0.1125e4 * (eta ^ 4) - 0.169403e6 / 0.450e3 * (eta ^ 2) + 0.6454e4 / 0.25e2 * eta + 0.617426e6 / 0.2025e4 * (eta ^ 3) - 0.4232e4 / 0.45e2 * (eta ^ 5) - 0.1880074e7 / 0.10125e5) * (ci2 ^ 10) + (-0.2819e4 / 0.2250e4 * (eta ^ 6) - 0.23837e5 / 0.675e3 * (eta ^ 4) + 0.77561e5 / 0.450e3 * (eta ^ 2) - 0.37324e5 / 0.375e3 * eta - 0.266608e6 / 0.2025e4 * (eta ^ 3) + 0.45776e5 / 0.1125e4 * (eta ^ 5) + 0.624974e6 / 0.10125e5) * (ci2 ^ 8) + (0.1861e4 / 0.13500e5 * (eta ^ 6) + 0.14413e5 / 0.1250e4 * (eta ^ 4) - 0.379123e6 / 0.7500e4 * (eta ^ 2) + 0.9002e4 / 0.375e3 * eta + 0.368582e6 / 0.10125e5 * (eta ^ 3) - 0.7068e4 / 0.625e3 * (eta ^ 5) - 0.594109e6 / 0.50625e5) * (ci2 ^ 6) + (0.398e3 / 0.16875e5 * (eta ^ 6) - 0.12977e5 / 0.5625e4 * (eta ^ 4) + 0.50869e5 / 0.5625e4 * (eta ^ 2) - 0.2156e4 / 0.625e3 * eta - 0.12478e5 / 0.2025e4 * (eta ^ 3) + 0.10906e5 / 0.5625e4 * (eta ^ 5) + 0.55342e5 / 0.50625e5) * (ci2 ^ 4) + (-0.287e3 / 0.33750e5 * (eta ^ 6) + 0.4348e4 / 0.16875e5 * (eta ^ 4) - 0.1999e4 / 0.2250e4 * (eta ^ 2) + 0.98e2 / 0.375e3 * eta + 0.5812e4 / 0.10125e5 * (eta ^ 3) - 0.1042e4 / 0.5625e4 * (eta ^ 5) - 0.1004e4 / 0.50625e5) * (ci2 ^ 2) + 0.49e2 / 0.67500e5 * (eta - 1) * ((eta ^ 5) + 0.79e2 / 0.7e1 * (eta ^ 4) - 0.285e3 / 0.49e2 * (eta ^ 3) - 0.5335e4 / 0.147e3 * (eta ^ 2) + 0.2036e4 / 0.147e3 * eta + 0.524e3 / 0.147e3)) * cos((2 * h)) - 0.2e1 * (eta ^ 2) * (eta - 1) * (((ci2 ^ 4) - (ci2 ^ 2) + 0.1e1 / 0.5e1) * (1 + eta) * ((-0.62e2 / 0.9e1 * (eta ^ 3) - 0.316e3 / 0.27e2 * (eta ^ 2) - 0.242e3 / 0.81e2 * eta + (eta ^ 4) - 0.445e3 / 0.81e2) * (ci2 ^ 18) + (0.1364e4 / 0.45e2 * (eta ^ 3) + 0.5324e4 / 0.405e3 * eta - 0.22e2 / 0.5e1 * (eta ^ 4) + 0.6952e4 / 0.135e3 * (eta ^ 2) + 0.1958e4 / 0.81e2) * (ci2 ^ 16) + (-0.66331e5 / 0.675e3 * (eta ^ 2) - 0.4411e4 / 0.75e2 * (eta ^ 3) - 0.47453e5 / 0.2025e4 * eta + 0.399e3 / 0.50e2 * (eta ^ 4) - 0.181913e6 / 0.4050e4) * (ci2 ^ 14) + (-0.578e3 / 0.75e2 * (eta ^ 4) + 0.71846e5 / 0.675e3 * (eta ^ 2) + 0.44476e5 / 0.675e3 * (eta ^ 3) + 0.14624e5 / 0.675e3 * eta + 0.1240e4 / 0.27e2) * (ci2 ^ 12) + (0.1901e4 / 0.450e3 * (eta ^ 4) - 0.242636e6 / 0.3375e4 * (eta ^ 2) - 0.108749e6 / 0.10125e5 * eta - 0.157937e6 / 0.3375e4 * (eta ^ 3) - 0.570449e6 / 0.20250e5) * (ci2 ^ 10) + (-0.2819e4 / 0.2250e4 * (eta ^ 4) + 0.105649e6 / 0.3375e4 * (eta ^ 2) + 0.23773e5 / 0.10125e5 * eta + 0.73399e5 / 0.3375e4 * (eta ^ 3) + 0.213961e6 / 0.20250e5) * (ci2 ^ 8) + (0.1861e4 / 0.13500e5 * (eta ^ 4) - 0.9856e4 / 0.1125e4 * (eta ^ 2) + 0.3817e4 / 0.20250e5 * eta - 0.4939e4 / 0.750e3 * (eta ^ 3) - 0.18979e5 / 0.8100e4) * (ci2 ^ 6) + (0.398e3 / 0.16875e5 * (eta ^ 4) + 0.8522e4 / 0.5625e4 * (eta ^ 2) - 0.11212e5 / 0.50625e5 * eta + 0.21104e5 / 0.16875e5 * (eta ^ 3) + 0.13672e5 / 0.50625e5) * (ci2 ^ 4) + (-0.287e3 / 0.33750e5 * (eta ^ 4) - 0.274e3 / 0.1875e4 * (eta ^ 2) + 0.469e3 / 0.10125e5 * eta - 0.2287e4 / 0.16875e5 * (eta ^ 3) - 0.179e3 / 0.20250e5) * (ci2 ^ 2) + 0.49e2 / 0.67500e5 * (eta ^ 4) - 0.131e3 / 0.202500e6 - 0.347e3 / 0.101250e6 * eta + 0.4e1 / 0.675e3 * (eta ^ 2) + 0.217e3 / 0.33750e5 * (eta ^ 3)) * cos((2 * g)) - (eta - 1) * ((0.188e3 / 0.27e2 * (eta ^ 3) + 0.154e3 / 0.9e1 * (eta ^ 2) + 0.380e3 / 0.27e2 * eta + (eta ^ 4) + 0.95e2 / 0.27e2) * (ci2 ^ 18) + (-0.4136e4 / 0.135e3 * (eta ^ 3) - 0.1672e4 / 0.27e2 * eta - 0.22e2 / 0.5e1 * (eta ^ 4) - 0.3388e4 / 0.45e2 * (eta ^ 2) - 0.418e3 / 0.27e2) * (ci2 ^ 16) + (0.194741e6 / 0.1350e4 * (eta ^ 2) + 0.1469e4 / 0.25e2 * (eta ^ 3) + 0.80063e5 / 0.675e3 * eta + 0.169e3 / 0.20e2 * (eta ^ 4) + 0.80063e5 / 0.2700e4) * (ci2 ^ 14) + (-0.1393e4 / 0.150e3 * (eta ^ 4) - 0.319513e6 / 0.2025e4 * (eta ^ 2) - 0.43474e5 / 0.675e3 * (eta ^ 3) - 0.10502e5 / 0.81e2 * eta - 0.5251e4 / 0.162e3) * (ci2 ^ 12) + (0.28967e5 / 0.4500e4 * (eta ^ 4) + 0.17585e5 / 0.162e3 * (eta ^ 2) + 0.902191e6 / 0.10125e5 * eta + 0.150037e6 / 0.3375e4 * (eta ^ 3) + 0.902191e6 / 0.40500e5) * (ci2 ^ 10) + (-0.3289e4 / 0.1125e4 * (eta ^ 4) - 0.493694e6 / 0.10125e5 * (eta ^ 2) - 0.404644e6 / 0.10125e5 * eta - 0.67724e5 / 0.3375e4 * (eta ^ 3) - 0.101161e6 / 0.10125e5) * (ci2 ^ 8) + (0.235883e6 / 0.270000e6 * (eta ^ 4) + 0.5808419e7 / 0.405000e6 * (eta ^ 2) + 0.475021e6 / 0.40500e5 * eta + 0.80239e5 / 0.13500e5 * (eta ^ 3) + 0.475021e6 / 0.162000e6) * (ci2 ^ 6) + (-0.22523e5 / 0.135000e6 * (eta ^ 4) - 0.542003e6 / 0.202500e6 * (eta ^ 2) - 0.220913e6 / 0.101250e6 * eta - 0.37819e5 / 0.33750e5 * (eta ^ 3) - 0.220913e6 / 0.405000e6) * (ci2 ^ 4) + (0.7e1 / 0.375e3 * (eta ^ 4) + 0.4886e4 / 0.16875e5 * (eta ^ 2) + 0.3964e4 / 0.16875e5 * eta + 0.692e3 / 0.5625e4 * (eta ^ 3) + 0.991e3 / 0.16875e5) * (ci2 ^ 2) - 0.637e3 / 0.675000e6 * (eta ^ 4) - 0.5687e4 / 0.2025000e7 - 0.5687e4 / 0.506250e6 * eta - 0.14117e5 / 0.1012500e7 * (eta ^ 2) - 0.1021e4 / 0.168750e6 * (eta ^ 3)) * (ci2 + 1) * cos((4 * g)) * (ci2 ^ 2) * (ci2 - 1))) * (1 + eta)) * (ci2 + 1) * R__e ^ 4 * J ^ 2 * (ci2 - 1) / ((1 + eta) ^ 3) / ((5 * ci2 ^ 4 - 5 * ci2 ^ 2 + 1) ^ 4) / a ^ 4 / (eta ^ 10)];

	Dlp2t2J2 = O2Msign*[D1;D2;D3;D4;D5;D6];
	
    Dlp2J2 = Dlp2t1J2 + Dlp2t2J2;            
else
    Dlp1J2 = 0;
    Dlp2J2 = 0;
end

Dlp = Dlp1J2 + Dlp2J2;

end

